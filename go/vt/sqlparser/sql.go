// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const APPLICATION_PASSWORD_ADMIN = 57709
const AUDIT_ABORT_EXEMPT = 57710
const AUDIT_ADMIN = 57711
const AUTHENTICATION_POLICY_ADMIN = 57712
const BACKUP_ADMIN = 57713
const BINLOG_ADMIN = 57714
const BINLOG_ENCRYPTION_ADMIN = 57715
const CLONE_ADMIN = 57716
const CONNECTION_ADMIN = 57717
const ENCRYPTION_KEY_ADMIN = 57718
const FIREWALL_ADMIN = 57719
const FIREWALL_EXEMPT = 57720
const FIREWALL_USER = 57721
const FLUSH_OPTIMIZER_COSTS = 57722
const FLUSH_STATUS = 57723
const FLUSH_TABLES = 57724
const FLUSH_USER_RESOURCES = 57725
const GROUP_REPLICATION_ADMIN = 57726
const GROUP_REPLICATION_STREAM = 57727
const INNODB_REDO_LOG_ARCHIVE = 57728
const INNODB_REDO_LOG_ENABLE = 57729
const NDB_STORED_USER = 57730
const PASSWORDLESS_USER_ADMIN = 57731
const PERSIST_RO_VARIABLES_ADMIN = 57732
const REPLICATION_APPLIER = 57733
const REPLICATION_SLAVE_ADMIN = 57734
const RESOURCE_GROUP_ADMIN = 57735
const RESOURCE_GROUP_USER = 57736
const ROLE_ADMIN = 57737
const SENSITIVE_VARIABLES_OBSERVER = 57738
const SESSION_VARIABLES_ADMIN = 57739
const SET_USER_ID = 57740
const SHOW_ROUTINE = 57741
const SKIP_QUERY_REWRITE = 57742
const SYSTEM_VARIABLES_ADMIN = 57743
const TABLE_ENCRYPTION_ADMIN = 57744
const TP_CONNECTION_ADMIN = 57745
const VERSION_TOKEN_ADMIN = 57746
const XA_RECOVER_ADMIN = 57747
const REPLICA = 57748
const REPLICAS = 57749
const SOURCE = 57750
const STOP = 57751
const RESET = 57752
const FILTER = 57753
const LOG = 57754
const MASTER = 57755
const SOURCE_HOST = 57756
const SOURCE_SSL = 57757
const SOURCE_USER = 57758
const SOURCE_PASSWORD = 57759
const SOURCE_PORT = 57760
const SOURCE_CONNECT_RETRY = 57761
const SOURCE_RETRY_COUNT = 57762
const SOURCE_AUTO_POSITION = 57763
const REPLICATE_DO_TABLE = 57764
const REPLICATE_IGNORE_TABLE = 57765
const IO_THREAD = 57766
const SQL_THREAD = 57767
const BEGIN = 57768
const START = 57769
const TRANSACTION = 57770
const COMMIT = 57771
const ROLLBACK = 57772
const SAVEPOINT = 57773
const WORK = 57774
const RELEASE = 57775
const CHAIN = 57776
const CONSISTENT = 57777
const SNAPSHOT = 57778
const BIT = 57779
const TINYINT = 57780
const SMALLINT = 57781
const MEDIUMINT = 57782
const INT = 57783
const INTEGER = 57784
const BIGINT = 57785
const INTNUM = 57786
const SERIAL = 57787
const INT1 = 57788
const INT2 = 57789
const INT3 = 57790
const INT4 = 57791
const INT8 = 57792
const REAL = 57793
const DOUBLE = 57794
const FLOAT_TYPE = 57795
const DECIMAL = 57796
const NUMERIC = 57797
const DEC = 57798
const FIXED = 57799
const PRECISION = 57800
const TIME = 57801
const TIMESTAMP = 57802
const DATETIME = 57803
const CHAR = 57804
const VARCHAR = 57805
const BOOL = 57806
const CHARACTER = 57807
const VARBINARY = 57808
const NCHAR = 57809
const NVARCHAR = 57810
const NATIONAL = 57811
const VARYING = 57812
const VARCHARACTER = 57813
const TEXT = 57814
const TINYTEXT = 57815
const MEDIUMTEXT = 57816
const LONGTEXT = 57817
const LONG = 57818
const BLOB = 57819
const TINYBLOB = 57820
const MEDIUMBLOB = 57821
const LONGBLOB = 57822
const JSON = 57823
const ENUM = 57824
const GEOMETRY = 57825
const POINT = 57826
const LINESTRING = 57827
const POLYGON = 57828
const GEOMETRYCOLLECTION = 57829
const MULTIPOINT = 57830
const MULTILINESTRING = 57831
const MULTIPOLYGON = 57832
const LOCAL = 57833
const LOW_PRIORITY = 57834
const SKIP = 57835
const LOCKED = 57836
const NULLX = 57837
const AUTO_INCREMENT = 57838
const APPROXNUM = 57839
const SIGNED = 57840
const UNSIGNED = 57841
const ZEROFILL = 57842
const SRID = 57843
const COLLATION = 57844
const DATABASES = 57845
const SCHEMAS = 57846
const TABLES = 57847
const FULL = 57848
const PROCESSLIST = 57849
const COLUMNS = 57850
const FIELDS = 57851
const ENGINES = 57852
const PLUGINS = 57853
const NAMES = 57854
const CHARSET = 57855
const GLOBAL = 57856
const SESSION = 57857
const ISOLATION = 57858
const LEVEL = 57859
const READ = 57860
const WRITE = 57861
const ONLY = 57862
const REPEATABLE = 57863
const COMMITTED = 57864
const UNCOMMITTED = 57865
const SERIALIZABLE = 57866
const ENCRYPTION = 57867
const CURRENT_TIMESTAMP = 57868
const NOW = 57869
const DATABASE = 57870
const CURRENT_DATE = 57871
const CURRENT_USER = 57872
const CURRENT_TIME = 57873
const LOCALTIME = 57874
const LOCALTIMESTAMP = 57875
const UTC_DATE = 57876
const UTC_TIME = 57877
const UTC_TIMESTAMP = 57878
const REPLACE = 57879
const CONVERT = 57880
const CAST = 57881
const POSITION = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const TRIM = 57885
const LEADING = 57886
const TRAILING = 57887
const BOTH = 57888
const GROUP_CONCAT = 57889
const SEPARATOR = 57890
const TIMESTAMPADD = 57891
const TIMESTAMPDIFF = 57892
const EXTRACT = 57893
const GET_FORMAT = 57894
const OVER = 57895
const WINDOW = 57896
const GROUPING = 57897
const CURRENT = 57898
const AVG = 57899
const BIT_AND = 57900
const BIT_OR = 57901
const BIT_XOR = 57902
const COUNT = 57903
const JSON_ARRAYAGG = 57904
const JSON_OBJECTAGG = 57905
const MAX = 57906
const MIN = 57907
const STDDEV_POP = 57908
const STDDEV = 57909
const STD = 57910
const STDDEV_SAMP = 57911
const SUM = 57912
const VAR_POP = 57913
const VARIANCE = 57914
const VAR_SAMP = 57915
const CUME_DIST = 57916
const DENSE_RANK = 57917
const FIRST_VALUE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LEAD = 57921
const NTH_VALUE = 57922
const NTILE = 57923
const ROW_NUMBER = 57924
const PERCENT_RANK = 57925
const RANK = 57926
const DUAL = 57927
const JSON_TABLE = 57928
const PATH = 57929
const AVG_ROW_LENGTH = 57930
const CHECKSUM = 57931
const COMPACT = 57932
const COMPRESSED = 57933
const COMPRESSION = 57934
const DISK = 57935
const DIRECTORY = 57936
const DELAY_KEY_WRITE = 57937
const DYNAMIC = 57938
const ENGINE_ATTRIBUTE = 57939
const ENCRYPTED = 57940
const ENCRYPTION_KEY_ID = 57941
const HASH = 57942
const INSERT_METHOD = 57943
const ITEF_QUOTES = 57944
const LIST = 57945
const MIN_ROWS = 57946
const MAX_ROWS = 57947
const PACK_KEYS = 57948
const MEMORY = 57949
const PAGE_CHECKSUM = 57950
const PAGE_COMPRESSED = 57951
const PAGE_COMPRESSION_LEVEL = 57952
const PARTITIONS = 57953
const REDUNDANT = 57954
const ROW_FORMAT = 57955
const SECONDARY_ENGINE = 57956
const SECONDARY_ENGINE_ATTRIBUTE = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const SUBPARTITION = 57962
const SUBPARTITIONS = 57963
const TABLE_CHECKSUM = 57964
const TRANSACTIONAL = 57965
const VERSIONING = 57966
const YES = 57967
const PREPARE = 57968
const DEALLOCATE = 57969
const MATCH = 57970
const AGAINST = 57971
const BOOLEAN = 57972
const LANGUAGE = 57973
const WITH = 57974
const QUERY = 57975
const EXPANSION = 57976
const MICROSECOND = 57977
const SECOND = 57978
const MINUTE = 57979
const HOUR = 57980
const DAY = 57981
const WEEK = 57982
const MONTH = 57983
const QUARTER = 57984
const YEAR = 57985
const SECOND_MICROSECOND = 57986
const MINUTE_MICROSECOND = 57987
const MINUTE_SECOND = 57988
const HOUR_MICROSECOND = 57989
const HOUR_SECOND = 57990
const HOUR_MINUTE = 57991
const DAY_MICROSECOND = 57992
const DAY_SECOND = 57993
const DAY_MINUTE = 57994
const DAY_HOUR = 57995
const YEAR_MONTH = 57996
const NAME = 57997
const SYSTEM = 57998
const ACCESSIBLE = 57999
const ASENSITIVE = 58000
const CUBE = 58001
const DELAYED = 58002
const DISTINCTROW = 58003
const EMPTY = 58004
const FLOAT4 = 58005
const FLOAT8 = 58006
const GET = 58007
const HIGH_PRIORITY = 58008
const INSENSITIVE = 58009
const IO_AFTER_GTIDS = 58010
const IO_BEFORE_GTIDS = 58011
const LINEAR = 58012
const MASTER_BIND = 58013
const MASTER_SSL_VERIFY_SERVER_CERT = 58014
const MIDDLEINT = 58015
const PURGE = 58016
const READ_WRITE = 58017
const RLIKE = 58018
const SENSITIVE = 58019
const SPECIFIC = 58020
const SQL_BIG_RESULT = 58021
const SQL_SMALL_RESULT = 58022
const UNUSED = 58023
const DESCRIPTION = 58024
const LATERAL = 58025
const MEMBER = 58026
const RECURSIVE = 58027
const BUCKETS = 58028
const CLONE = 58029
const COMPONENT = 58030
const DEFINITION = 58031
const ENFORCED = 58032
const NOT_ENFORCED = 58033
const EXCLUDE = 58034
const GEOMCOLLECTION = 58035
const GET_MASTER_PUBLIC_KEY = 58036
const HISTOGRAM = 58037
const HISTORY = 58038
const INACTIVE = 58039
const INVISIBLE = 58040
const MASTER_COMPRESSION_ALGORITHMS = 58041
const MASTER_PUBLIC_KEY_PATH = 58042
const MASTER_TLS_CIPHERSUITES = 58043
const MASTER_ZSTD_COMPRESSION_LEVEL = 58044
const NESTED = 58045
const NETWORK_NAMESPACE = 58046
const NOWAIT = 58047
const NULLS = 58048
const OJ = 58049
const OLD = 58050
const ORDINALITY = 58051
const ORGANIZATION = 58052
const OTHERS = 58053
const PERSIST = 58054
const PERSIST_ONLY = 58055
const PRIVILEGE_CHECKS_USER = 58056
const PROCESS = 58057
const REFERENCE = 58058
const REQUIRE_ROW_FORMAT = 58059
const RESOURCE = 58060
const RESPECT = 58061
const RESTART = 58062
const RETAIN = 58063
const SECONDARY = 58064
const SECONDARY_LOAD = 58065
const SECONDARY_UNLOAD = 58066
const THREAD_PRIORITY = 58067
const TIES = 58068
const VCPU = 58069
const VISIBLE = 58070
const INFILE = 58071
const ACTIVE = 58072
const AGGREGATE = 58073
const ANY = 58074
const ARRAY = 58075
const ASCII = 58076
const AT = 58077
const AUTOEXTEND_SIZE = 58078
const GENERATED = 58079
const ALWAYS = 58080
const STORED = 58081
const VIRTUAL = 58082
const NVAR = 58083
const PASSWORD_LOCK = 58084

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	762, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1806,
	200, 1827,
	-2, 331,
	-1, 62,
	242, 1180,
	243, 1180,
	-2, 1169,
	-1, 90,
	271, 331,
	-2, 1812,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 544,
	1, 2508,
	6, 2508,
	7, 2508,
	28, 2508,
	187, 2508,
	762, 2508,
	-2, 1215,
	-1, 557,
	187, 1837,
	-2, 1831,
	-1, 558,
	187, 1838,
	-2, 1832,
	-1, 664,
	1, 681,
	762, 681,
	-2, 679,
	-1, 673,
	1, 1321,
	8, 1321,
	9, 1321,
	10, 1321,
	17, 1321,
	18, 1321,
	19, 1321,
	20, 1321,
	22, 1321,
	24, 1321,
	34, 1321,
	35, 1321,
	64, 1321,
	65, 1321,
	66, 1321,
	67, 1321,
	68, 1321,
	70, 1321,
	71, 1321,
	74, 1321,
	75, 1321,
	77, 1321,
	78, 1321,
	96, 1321,
	525, 1321,
	573, 1321,
	651, 1321,
	762, 1321,
	-2, 1821,
	-1, 678,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 706,
	187, 2205,
	-2, 1443,
	-1, 739,
	187, 2313,
	-2, 1713,
	-1, 740,
	187, 2394,
	-2, 1445,
	-1, 741,
	187, 2225,
	-2, 1446,
	-1, 810,
	187, 2176,
	-2, 1677,
	-1, 813,
	187, 2191,
	-2, 1595,
	-1, 814,
	187, 2194,
	-2, 1595,
	-1, 815,
	187, 2404,
	-2, 1595,
	-1, 817,
	187, 2192,
	-2, 1595,
	-1, 818,
	187, 2405,
	-2, 1595,
	-1, 819,
	187, 2406,
	-2, 1595,
	-1, 878,
	187, 2193,
	-2, 1595,
	-1, 961,
	187, 2293,
	-2, 1595,
	-1, 962,
	187, 2294,
	-2, 1595,
	-1, 1074,
	109, 2521,
	120, 2521,
	187, 2521,
	-2, 1788,
	-1, 1075,
	109, 2652,
	120, 2652,
	187, 2652,
	-2, 1789,
	-1, 1080,
	109, 2549,
	120, 2549,
	187, 2549,
	-2, 1790,
	-1, 1081,
	109, 2600,
	120, 2600,
	187, 2600,
	-2, 1791,
	-1, 1082,
	109, 2601,
	120, 2601,
	187, 2601,
	-2, 1792,
	-1, 1083,
	109, 2448,
	120, 2448,
	187, 2448,
	-2, 1797,
	-1, 1085,
	109, 2577,
	120, 2577,
	187, 2577,
	-2, 1799,
	-1, 1258,
	452, 1194,
	-2, 1198,
	-1, 1260,
	452, 1194,
	-2, 1198,
	-1, 1386,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1388,
	1, 682,
	762, 682,
	-2, 679,
	-1, 1411,
	1, 1322,
	8, 1322,
	9, 1322,
	10, 1322,
	17, 1322,
	18, 1322,
	19, 1322,
	20, 1322,
	22, 1322,
	24, 1322,
	34, 1322,
	35, 1322,
	64, 1322,
	65, 1322,
	66, 1322,
	67, 1322,
	68, 1322,
	70, 1322,
	71, 1322,
	74, 1322,
	75, 1322,
	77, 1322,
	78, 1322,
	96, 1322,
	525, 1322,
	573, 1322,
	651, 1322,
	762, 1322,
	-2, 1821,
	-1, 1422,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 1716,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1718,
	1, 681,
	762, 681,
	-2, 679,
	-1, 2277,
	187, 1841,
	-2, 1689,
	-1, 2280,
	187, 2739,
	-2, 1692,
	-1, 2281,
	187, 2740,
	-2, 1693,
	-1, 2282,
	187, 1840,
	-2, 1836,
	-1, 2432,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2450,
	187, 2317,
	-2, 1793,
	-1, 2457,
	1, 902,
	762, 902,
	-2, 679,
	-1, 2645,
	49, 923,
	206, 926,
	208, 923,
	209, 923,
	210, 923,
	-2, 1040,
	-1, 2727,
	8, 59,
	9, 59,
	10, 59,
	-2, 1475,
	-1, 2744,
	1, 1367,
	8, 1367,
	9, 1367,
	10, 1367,
	17, 1367,
	18, 1367,
	19, 1367,
	20, 1367,
	22, 1367,
	24, 1367,
	34, 1367,
	35, 1367,
	64, 1367,
	65, 1367,
	66, 1367,
	67, 1367,
	68, 1367,
	70, 1367,
	71, 1367,
	74, 1367,
	75, 1367,
	77, 1367,
	78, 1367,
	96, 1367,
	525, 1367,
	573, 1367,
	651, 1367,
	762, 1367,
	-2, 1821,
	-1, 2921,
	212, 1034,
	216, 1034,
	-2, 790,
	-1, 2922,
	212, 1104,
	216, 1104,
	-2, 791,
	-1, 3190,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 3294,
	1, 1744,
	74, 1744,
	762, 1744,
	-2, 1821,
	-1, 3494,
	49, 923,
	206, 926,
	208, 923,
	209, 923,
	210, 923,
	-2, 1040,
	-1, 3514,
	206, 927,
	212, 1034,
	216, 1034,
	-2, 925,
	-1, 3705,
	77, 2088,
	78, 2088,
	187, 2088,
	-2, 1223,
	-1, 3706,
	76, 1755,
	252, 1755,
	-2, 2137,
	-1, 3707,
	76, 1756,
	252, 1756,
	-2, 2705,
	-1, 3944,
	8, 59,
	9, 59,
	10, 59,
	-2, 1751,
	-1, 4086,
	46, 1852,
	-2, 1850,
	-1, 4346,
	8, 59,
	9, 59,
	10, 59,
	-2, 1752,
	-1, 4365,
	315, 428,
	-2, 1908,
	-1, 4366,
	315, 429,
	-2, 1949,
	-1, 4367,
	315, 430,
	-2, 2125,
	-1, 4599,
	104, 414,
	106, 414,
	108, 414,
	-2, 79,
	-1, 4680,
	106, 421,
	107, 421,
	108, 421,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 82599

var yyAct = [...]int{
	752, 44, 4616, 4653, 4554, 4603, 4591, 698, 4556, 4590,
	1190, 4226, 8, 4472, 569, 2938, 2447, 4225, 7, 3422,
	4257, 28, 4473, 4080, 492, 712, 4223, 3, 4224, 6,
	4227, 9, 1414, 708, 4338, 4045, 4359, 3302, 2370, 4216,
	3787, 2937, 4082, 1636, 4075, 44, 3650, 4218, 2371, 657,
	3458, 4358, 3270, 725, 4198, 2723, 2307, 3359, 1421, 4372,
	1707, 4336, 4081, 4093, 3971, 3907, 3900, 4123, 3859, 2919,
	3501, 108, 2660, 3620, 3860, 2519, 4371, 107, 548, 551,
	1539, 4084, 1751, 3894, 4034, 3703, 3851, 2474, 689, 596,
	596, 3711, 3180, 3471, 641, 653, 2538, 675, 3436, 3918,
	3810, 3005, 3793, 2711, 101, 2252, 4217, 3893, 3360, 3303,
	1469, 3695, 2185, 2918, 751, 1753, 3116, 3615, 2991, 1150,
	489, 1416, 1219, 2949, 3626, 2925, 1567, 3506, 816, 2478,
	3594, 2926, 3582, 3573, 2636, 3018, 2176, 2505, 2464, 1162,
	134, 3163, 1079, 1568, 1418, 3079, 1158, 1392, 105, 2642,
	1208, 1268, 2874, 2609, 1750, 2643, 2852, 3178, 3456, 1381,
	717, 711, 2480, 2875, 3232, 2238, 2568, 699, 2640, 1413,
	2240, 1756, 2592, 2177, 2049, 1269, 1420, 2114, 2155, 1726,
	2501, 1245, 2972, 1450, 1613, 1076, 2360, 1458, 1617, 2284,
	1453, 2877, 1302, 2714, 694, 673, 2089, 1280, 1643, 1616,
	1072, 3083, 1073, 2434, 1477, 1387, 1153, 2119, 2245, 1399,
	682, 2167, 1391, 1390, 1389, 1203, 3279, 656, 669, 572,
	3712, 3278, 670, 571, 1279, 1264, 1189, 1166, 2081, 715,
	2082, 1171, 2048, 554, 129, 1719, 692, 665, 1177, 125,
	4680, 2945, 4674, 4661, 1193, 1154, 2952, 2323, 4645, 4631,
	4599, 4597, 4569, 4566, 4565, 4564, 4549, 4547, 4453, 4449,
	4444, 100, 2957, 2956, 4125, 4124, 3375, 3870, 2112, 2523,
	1181, 4320, 3628, 3449, 2555, 4012, 2554, 3865, 3866, 3863,
	3864, 3419, 3420, 3504, 86, 1441, 3502, 2953, 42, 94,
	4624, 4010, 4669, 4623, 4585, 3358, 99, 3869, 3129, 2983,
	3452, 97, 71, 2959, 4013, 2935, 4586, 3450, 93, 662,
	688, 47, 3972, 2936, 4584, 1729, 4386, 4385, 655, 4589,
	564, 42, 4334, 4533, 42, 667, 679, 3974, 3451, 2384,
	2382, 2381, 2380, 2383, 2379, 2378, 2377, 2672, 122, 2391,
	71, 2390, 2389, 4204, 2388, 2387, 2386, 2385, 3794, 47,
	2552, 2041, 2552, 89, 4484, 2449, 2939, 4219, 3796, 4273,
	1173, 42, 1179, 1180, 42, 3299, 4020, 42, 88, 3300,
	1183, 1355, 3003, 4292, 3888, 3179, 4333, 4203, 3260, 503,
	4266, 3765, 3562, 4617, 3293, 2242, 89, 4040, 3762, 89,
	3575, 2239, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 3611,
	3845, 3967, 4190, 1149, 3329, 3299, 3328, 3891, 4393, 3300,
	3139, 3849, 3595, 3138, 4319, 3968, 148, 4408, 145, 2955,
	146, 3892, 4342, 2958, 4100, 1165, 89, 4146, 1161, 89,
	2963, 2948, 89, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 3687, 4089, 1502, 3973, 2828,
	1170, 668, 2728, 543, 1258, 2866, 150, 149, 2865, 4339,
	4342, 2867, 2591, 114, 112, 113, 2118, 49, 90, 56,
	55, 58, 3313, 3400, 1066, 3799, 96, 2625, 4337, 3401,
	3402, 89, 4267, 566, 137, 1356, 3314, 3315, 4410, 153,
	2444, 2445, 2116, 2117, 2158, 2159, 701, 4339, 2443, 3926,
	62, 92, 91, 136, 1618, 2585, 1619, 57, 2950, 96,
	2115, 3166, 96, 1243, 1244, 3924, 4321, 2193, 3797, 3798,
	3800, 3801, 3802, 3648, 4343, 1252, 2372, 2384, 2382, 2381,
	2380, 2383, 2379, 2378, 2377, 2373, 2374, 2391, 2375, 2390,
	2389, 2376, 2388, 2387, 2386, 2385, 3233, 2136, 151, 96,
	152, 3322, 96, 1332, 563, 96, 2951, 1241, 562, 1242,
	1243, 1244, 4343, 2210, 1214, 1405, 1406, 1223, 1224, 3213,
	1340, 1227, 3919, 2961, 678, 138, 2752, 666, 2476, 2477,
	1313, 2590, 1299, 69, 70, 2491, 4269, 650, 2490, 3102,
	2481, 3533, 2484, 2483, 4623, 2485, 4278, 4270, 4271, 4272,
	4276, 4277, 4274, 4611, 4275, 2481, 4279, 1225, 1226, 2495,
	4585, 78, 2395, 79, 1253, 1254, 2502, 3668, 4583, 3672,
	4349, 3670, 2621, 126, 2160, 2574, 2573, 538, 561, 3236,
	541, 1229, 156, 645, 4446, 3347, 84, 4447, 3058, 4448,
	1228, 2087, 647, 546, 1261, 60, 646, 644, 4668, 1401,
	1404, 1405, 1406, 1402, 1150, 1403, 1408, 4011, 1382, 2715,
	2716, 2156, 2157, 1385, 1401, 1404, 1405, 1406, 1402, 645,
	1403, 1408, 1358, 1359, 1215, 1412, 1417, 1353, 2166, 4624,
	1354, 1435, 1436, 1150, 4622, 1150, 1150, 4350, 4621, 1150,
	3109, 4586, 2165, 2164, 2163, 1151, 4476, 2950, 2162, 1150,
	2161, 4308, 108, 1377, 643, 1336, 1337, 1511, 1513, 1255,
	4073, 1515, 3191, 651, 3886, 3038, 1456, 1187, 4489, 3878,
	3191, 2998, 4280, 4268, 128, 66, 67, 73, 2954, 74,
	1204, 3876, 1409, 2947, 132, 140, 139, 3191, 3108, 3106,
	1315, 1347, 4285, 1530, 1348, 2951, 1306, 1534, 1535, 1536,
	1537, 1538, 3627, 1542, 3107, 4475, 3443, 4445, 4488, 4140,
	4543, 4426, 1481, 4287, 4038, 147, 3811, 3616, 3617, 3618,
	3619, 1267, 3470, 3043, 3814, 2604, 1329, 1384, 4151, 108,
	4150, 4148, 136, 3822, 4007, 3503, 3812, 3813, 3002, 3840,
	2605, 2148, 137, 141, 664, 4390, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1363, 1561, 1562, 1564, 1564, 1564, 3574, 1569, 1569,
	1569, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 3504, 3975, 1427, 3597, 130, 2586, 131, 2191,
	4027, 4024, 3446, 154, 2397, 2398, 2396, 1375, 1315, 3000,
	1411, 3976, 4029, 3240, 3239, 3241, 3238, 2539, 542, 1569,
	3538, 3245, 142, 3237, 3234, 3820, 4402, 3235, 565, 3243,
	1339, 4384, 4071, 3321, 3437, 3438, 3439, 3440, 3441, 4677,
	4647, 2950, 4676, 3242, 679, 679, 4646, 2192, 3795, 4643,
	1373, 1395, 4142, 4340, 4607, 4562, 1222, 2950, 4351, 2194,
	3244, 3246, 59, 61, 3472, 2169, 2598, 4191, 87, 2964,
	2934, 3101, 3847, 3108, 3128, 4441, 4400, 1512, 1378, 3165,
	3119, 3320, 3173, 3175, 3174, 1570, 1571, 3904, 3167, 2951,
	3625, 4340, 1315, 549, 3978, 4202, 4101, 1563, 1565, 1566,
	4313, 109, 1569, 1569, 109, 2951, 4544, 1217, 552, 2946,
	85, 1444, 1438, 1379, 1438, 1438, 3182, 4392, 1438, 1437,
	3848, 1442, 1442, 1378, 3977, 1449, 1443, 1443, 3600, 3598,
	3526, 4318, 4551, 2118, 3596, 1260, 4021, 3106, 1266, 4182,
	3885, 109, 3004, 2966, 109, 1603, 115, 87, 3877, 2088,
	3599, 2487, 1262, 143, 4439, 4440, 553, 2504, 2488, 2116,
	2117, 1349, 1369, 1216, 1407, 3875, 1307, 3432, 1314, 1396,
	3001, 732, 4008, 733, 735, 736, 737, 738, 4046, 4147,
	4474, 734, 2319, 1368, 1364, 1365, 1366, 1367, 1370, 1371,
	1372, 1374, 2610, 2613, 2611, 2612, 2614, 2615, 2616, 2617,
	3183, 4286, 1207, 1714, 3182, 3247, 4004, 1606, 1474, 1475,
	1473, 1724, 4003, 127, 3434, 4002, 4141, 1459, 1322, 4001,
	3437, 3438, 3439, 3440, 3441, 4000, 3998, 1476, 1604, 1605,
	1483, 1178, 1240, 1474, 1475, 1473, 2172, 4560, 1079, 4555,
	3999, 1175, 1174, 1079, 1734, 1735, 1733, 4135, 4136, 136,
	1407, 136, 1476, 2533, 2534, 4558, 4354, 4355, 4026, 4023,
	3445, 2529, 141, 4131, 1325, 1407, 4421, 1178, 3624, 3168,
	4221, 663, 3540, 3541, 1176, 3621, 3622, 1303, 1540, 3026,
	3027, 2051, 1320, 1237, 1238, 1256, 2173, 2120, 1239, 1236,
	4398, 1150, 1235, 2528, 1234, 1316, 1323, 1324, 1326, 1327,
	1328, 1233, 1330, 1331, 558, 1333, 1334, 1335, 4302, 1338,
	1265, 1341, 1342, 1343, 1344, 1345, 2316, 108, 547, 550,
	3852, 3853, 3583, 107, 3539, 3584, 2122, 3585, 2041, 2121,
	4214, 596, 1376, 1165, 2083, 1728, 1560, 2471, 3169, 4670,
	1699, 1700, 1701, 1702, 1703, 4428, 1321, 4657, 1317, 4427,
	138, 596, 1165, 3086, 1628, 1752, 550, 2473, 3364, 3512,
	1610, 4683, 163, 4678, 490, 502, 1423, 1425, 163, 4662,
	1760, 1704, 4634, 163, 2540, 1172, 1194, 3527, 3528, 3529,
	1318, 1319, 550, 638, 638, 4291, 668, 4173, 4065, 3118,
	3884, 2522, 163, 3881, 1633, 1709, 3623, 3468, 1621, 3103,
	1311, 163, 1727, 1622, 3037, 1150, 3033, 1732, 1150, 3008,
	2045, 2045, 2045, 2045, 163, 3007, 2091, 2599, 2153, 1739,
	3098, 1737, 2093, 1169, 1410, 163, 1164, 3086, 1263, 3094,
	2473, 2090, 3096, 2092, 108, 3095, 2473, 2225, 2224, 4567,
	2095, 1705, 2223, 1168, 4068, 1607, 1608, 163, 638, 3463,
	1164, 1394, 1191, 1182, 487, 3181, 2039, 2473, 1758, 490,
	163, 696, 596, 550, 4450, 3011, 3867, 89, 1423, 1425,
	3010, 3647, 4557, 4559, 2076, 3312, 2473, 2799, 4311, 1517,
	1518, 2052, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 123, 2541, 2064, 2146, 1424, 2065,
	2066, 2067, 2796, 3035, 3034, 2872, 3118, 2472, 2071, 3511,
	140, 139, 1516, 3092, 3086, 3363, 1514, 2109, 2079, 3089,
	2769, 2054, 3088, 3093, 2043, 2047, 1310, 4655, 2473, 3085,
	4656, 1629, 4654, 2746, 2632, 2129, 2553, 2530, 675, 675,
	675, 675, 1630, 2439, 1710, 1715, 2255, 2182, 1723, 1722,
	1713, 1519, 1632, 1150, 1730, 1533, 1532, 1531, 1417, 89,
	2219, 2068, 1731, 2070, 3117, 2178, 123, 4145, 2317, 2318,
	1519, 1482, 1749, 1748, 1297, 2152, 1741, 1205, 1516, 108,
	2472, 652, 2449, 118, 108, 2050, 2472, 2107, 1492, 4172,
	2218, 1502, 3092, 3086, 2056, 2057, 2309, 2308, 3089, 2212,
	1424, 3088, 3093, 1432, 1433, 2127, 4171, 2472, 1502, 1519,
	2213, 2220, 1257, 2862, 3086, 3778, 3776, 4180, 2196, 1165,
	4457, 2222, 3087, 2471, 3868, 1426, 2472, 3490, 3489, 2085,
	2084, 121, 2094, 3086, 2040, 3465, 2078, 1476, 1165, 2100,
	2101, 3087, 2471, 2103, 4422, 4423, 2151, 1760, 3861, 1517,
	1518, 1434, 2197, 4015, 1150, 3940, 2124, 3109, 2310, 2106,
	3107, 2200, 3381, 3379, 3094, 2276, 2168, 2171, 1246, 1423,
	1425, 2128, 120, 2125, 1517, 1518, 3085, 3777, 2472, 1481,
	108, 3117, 96, 1542, 675, 3112, 3067, 3066, 2644, 3491,
	4016, 2315, 2320, 3115, 2853, 2147, 3127, 2312, 2150, 2314,
	732, 4458, 733, 735, 736, 737, 738, 4207, 4206, 108,
	734, 2319, 4419, 4420, 2326, 2218, 2329, 3126, 3125, 2346,
	2349, 3064, 3063, 3124, 3380, 3123, 2364, 2362, 2170, 2869,
	2868, 3122, 2187, 3121, 3120, 2282, 2743, 2740, 2174, 2221,
	2285, 2190, 2188, 2189, 2186, 2737, 1629, 2055, 3068, 675,
	2248, 2563, 2392, 2393, 96, 1231, 2803, 1630, 2211, 1221,
	2198, 2199, 4164, 2201, 1475, 1473, 1248, 679, 679, 679,
	679, 1247, 3054, 2291, 2074, 3006, 3053, 2262, 1473, 2448,
	3262, 1079, 1476, 3065, 1612, 3052, 3051, 679, 2289, 2290,
	2288, 2870, 163, 688, 2275, 1476, 3050, 1760, 1432, 1433,
	1158, 1424, 4637, 4604, 4636, 669, 3049, 3048, 490, 3047,
	2620, 2260, 1474, 1475, 1473, 2454, 2619, 2105, 696, 4360,
	1426, 1273, 1540, 2272, 1495, 1496, 1497, 1498, 1499, 1492,
	1185, 1476, 1502, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 2316, 1434, 1502, 2253, 2254,
	2791, 2361, 1184, 1382, 2564, 2286, 4660, 103, 1232, 1220,
	1717, 2361, 2456, 2812, 1423, 1425, 1250, 163, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	4633, 4545, 1502, 2400, 1712, 2282, 4493, 1474, 1475, 1473,
	4360, 2548, 4492, 2405, 4491, 2407, 4485, 3821, 2410, 2461,
	2433, 3815, 1259, 110, 4511, 116, 1476, 2470, 1744, 3031,
	2246, 1540, 3373, 679, 1419, 1474, 1475, 1473, 2431, 1474,
	1475, 1473, 2330, 2331, 2332, 2333, 2334, 2511, 2512, 2513,
	2514, 2515, 2569, 3901, 1476, 2498, 2499, 2500, 1476, 2058,
	2059, 2060, 2061, 2062, 2455, 2063, 2358, 3191, 2486, 2489,
	1470, 4649, 2492, 2493, 2494, 2437, 2441, 4671, 2440, 163,
	2446, 2546, 2547, 4360, 4283, 4435, 3887, 4434, 4389, 1067,
	1068, 1069, 4298, 2507, 2508, 2509, 2510, 2460, 679, 2532,
	163, 1167, 2458, 2482, 2516, 3071, 2261, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 701, 1424, 1502, 4289, 2264,
	2265, 2266, 2268, 2270, 2271, 2246, 490, 2766, 2767, 2768,
	2269, 4282, 2521, 4527, 2503, 4284, 4672, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 89,
	4143, 1502, 2549, 2518, 4524, 2130, 4211, 4682, 2133, 2134,
	2135, 2287, 2137, 2138, 4041, 4014, 2139, 2313, 3754, 3752,
	2140, 4681, 3899, 2141, 1474, 1475, 1473, 2142, 2143, 3753,
	2144, 2145, 2524, 3898, 2526, 4666, 3897, 3896, 1540, 3603,
	3601, 2257, 4526, 1476, 2341, 2342, 2337, 2338, 2339, 3831,
	3602, 4144, 2343, 3785, 2345, 2348, 2351, 3784, 2356, 2357,
	1612, 1612, 3203, 4523, 2367, 3551, 2258, 2317, 2318, 2259,
	3074, 2978, 2666, 3073, 3074, 3759, 2666, 3073, 2399, 2195,
	2401, 2402, 3173, 3175, 3174, 2406, 3485, 2408, 2409, 3484,
	1474, 1475, 1473, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 3483, 2669, 2667, 2662, 1476,
	2669, 2667, 2662, 2664, 1474, 1475, 1473, 2664, 3482, 3481,
	3424, 3376, 4664, 2790, 2453, 2789, 3173, 3175, 3174, 2977,
	696, 3448, 3447, 1476, 3400, 1066, 2427, 3390, 3391, 3393,
	3401, 3402, 3392, 3394, 3395, 1474, 1475, 1473, 696, 2975,
	2962, 1305, 1304, 4665, 2369, 4648, 2263, 3396, 3397, 3398,
	3399, 3075, 3076, 1393, 1476, 3075, 3076, 2663, 2665, 2668,
	2670, 2663, 2665, 2668, 2670, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 4642, 1564, 1502,
	4571, 4563, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 2517, 1150, 1502, 4451, 1474, 1475,
	1473, 4432, 1386, 1474, 1475, 1473, 2091, 4431, 3757, 4613,
	4377, 4495, 2093, 4376, 4370, 4369, 1486, 1476, 1489, 4149,
	4048, 2090, 1476, 2092, 3694, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 3530, 1487, 1488, 1485, 3021, 3608, 3020, 2581,
	3200, 3680, 696, 2575, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 2560, 3197, 1502, 3173,
	3175, 3174, 2559, 2311, 2099, 2589, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 1412, 2086, 1502, 1747,
	3606, 1746, 2430, 1718, 2432, 1716, 4483, 1385, 3173, 3175,
	3174, 2565, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 2231, 1300, 1502, 1277, 2227, 560,
	2561, 1474, 1475, 1473, 2233, 675, 2098, 4482, 2229, 4438,
	2097, 2571, 2567, 4481, 2732, 2733, 2734, 4480, 2235, 1276,
	1476, 3173, 3175, 3174, 163, 4477, 4407, 4387, 2237, 4328,
	2232, 4322, 4213, 1164, 2228, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 4212, 4139, 1502,
	1474, 1475, 1473, 2725, 2236, 4138, 4119, 4072, 3264, 696,
	4028, 4025, 2731, 1740, 3997, 1456, 1456, 2770, 3966, 1476,
	1760, 3965, 3936, 3890, 3889, 3830, 3829, 3828, 3827, 3818,
	2230, 2576, 3817, 2710, 2226, 3816, 3783, 2596, 2276, 3780,
	3755, 2633, 2580, 3750, 3741, 2542, 2588, 3737, 3732, 3731,
	3730, 2544, 2545, 3604, 2234, 3593, 1612, 2550, 3581, 3577,
	2603, 3570, 3569, 2606, 3568, 3488, 490, 3480, 3479, 3478,
	3407, 2595, 3212, 1164, 163, 3211, 2726, 3209, 3069, 2973,
	2871, 1529, 1528, 2650, 638, 638, 1527, 2627, 2587, 638,
	2558, 2102, 4373, 2793, 568, 2745, 696, 4047, 163, 4187,
	696, 3631, 4535, 3990, 638, 638, 3767, 4465, 2282, 1346,
	163, 2629, 2764, 2765, 490, 490, 490, 490, 3767, 4397,
	2624, 3631, 696, 2626, 4055, 696, 3989, 2641, 3426, 163,
	163, 163, 163, 163, 2719, 163, 3915, 2730, 3767, 4299,
	3767, 4128, 3410, 2285, 3409, 679, 3631, 4127, 3631, 4122,
	3408, 163, 163, 4069, 696, 1311, 638, 3631, 4032, 3191,
	696, 4615, 163, 2631, 696, 3631, 3911, 2455, 2041, 3843,
	2041, 3842, 3767, 3766, 640, 675, 3631, 3630, 675, 2756,
	2754, 2755, 3914, 3715, 679, 3417, 3416, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 2775,
	3696, 1502, 1164, 3715, 1760, 3413, 3414, 1079, 3913, 3413,
	3412, 2745, 696, 2601, 2600, 638, 638, 638, 2771, 3019,
	1164, 2335, 2583, 2435, 2335, 696, 2214, 696, 3019, 2779,
	2435, 1635, 1634, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 2335, 2857, 1502, 2041, 102,
	3299, 638, 2855, 2537, 3300, 2250, 638, 638, 2286, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 89, 1351, 1502, 1350, 1308, 4329, 1309, 1309, 2214,
	163, 163, 2436, 4200, 2438, 163, 2811, 1164, 3715, 2436,
	2552, 2041, 1758, 3949, 3191, 2214, 3631, 2536, 2214, 163,
	638, 3427, 163, 163, 163, 163, 2745, 3415, 3210, 2249,
	3046, 2442, 2822, 2820, 163, 2819, 2745, 2618, 2104, 2557,
	2551, 596, 163, 2929, 2932, 3025, 163, 2251, 1380, 2856,
	2149, 2113, 2041, 1311, 1738, 1736, 1615, 1383, 2924, 89,
	2927, 2928, 2920, 1705, 2858, 2881, 4425, 2859, 2724, 4300,
	4167, 4051, 3786, 3775, 3772, 2479, 2556, 2506, 2045, 1727,
	2827, 2829, 2481, 2860, 3185, 3057, 3056, 1621, 2836, 2837,
	2838, 2863, 2502, 2917, 1315, 3013, 163, 1459, 2715, 2716,
	2873, 2531, 2497, 490, 2566, 2965, 2967, 2496, 1708, 1296,
	2968, 2969, 2520, 2970, 2971, 3832, 2182, 2570, 1212, 1211,
	4652, 4651, 4628, 4626, 679, 4620, 4619, 679, 4592, 4587,
	4581, 4579, 4529, 4528, 2178, 3061, 3906, 3902, 3696, 1164,
	2974, 1164, 3425, 3016, 1164, 2976, 3015, 2996, 1303, 2979,
	3023, 1164, 2718, 2712, 2123, 1742, 1164, 1164, 1164, 1352,
	1312, 2722, 2209, 1463, 1464, 2206, 163, 2208, 163, 2204,
	2207, 2721, 2720, 2203, 2205, 2202, 2999, 2602, 4417, 4332,
	3214, 2785, 2780, 2781, 2782, 2783, 2784, 2753, 4379, 4169,
	2761, 537, 3017, 2760, 1466, 1461, 4106, 133, 3198, 1468,
	1467, 3201, 1465, 3882, 3204, 3858, 3770, 2813, 3022, 3520,
	2809, 3519, 4085, 3406, 3039, 3405, 3404, 2933, 2923, 4324,
	4195, 4326, 3045, 4323, 675, 4327, 4, 3032, 3036, 3084,
	4380, 1760, 163, 163, 163, 3187, 4134, 3080, 3091, 3690,
	4087, 3189, 4133, 3193, 3194, 3195, 1463, 1464, 4031, 2276,
	3164, 3113, 3090, 3097, 144, 3100, 3077, 3055, 539, 540,
	1164, 1415, 43, 3205, 3111, 3060, 559, 2579, 3072, 3689,
	2578, 106, 3221, 2096, 4017, 4018, 3679, 1466, 3105, 3172,
	3104, 3059, 1468, 1467, 4456, 1465, 3453, 3874, 3726, 3271,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 3531, 3378, 1502, 1451, 43, 3248, 2634, 1631,
	3250, 1294, 1278, 3296, 3301, 3678, 1452, 1275, 675, 2282,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 1274, 1218, 1502, 4608, 4058, 4057, 1393, 108,
	3306, 3304, 2253, 2254, 3825, 3295, 3941, 1271, 1272, 3823,
	2525, 3826, 690, 1745, 1410, 163, 3824, 4330, 3216, 4288,
	4035, 163, 163, 638, 638, 638, 163, 163, 3192, 1270,
	3788, 3774, 2981, 2175, 3261, 3221, 3206, 2098, 3208, 2097,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 3219, 3218, 1502, 1361, 3222, 4499, 3297, 3223,
	2324, 2325, 1447, 1448, 1445, 1446, 3374, 1439, 1440, 2759,
	4498, 4497, 3994, 3387, 2623, 1251, 3249, 2758, 4414, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 4413, 4412, 1502, 4411, 4196, 4159, 4152, 3362, 4105,
	3922, 3078, 691, 1382, 102, 3921, 3382, 3653, 3019, 2985,
	2986, 2987, 3308, 679, 3310, 3311, 4452, 3355, 4630, 4629,
	683, 3475, 4629, 3372, 2854, 3044, 3386, 3042, 3041, 2821,
	2800, 596, 2797, 2763, 2607, 3442, 2069, 1471, 1210, 1209,
	4630, 4209, 3403, 2247, 2881, 4515, 3172, 3309, 687, 686,
	4240, 65, 4242, 23, 4241, 22, 3428, 3366, 3367, 3368,
	3316, 3369, 3370, 4243, 24, 3224, 3298, 3272, 3273, 3274,
	3275, 3276, 3277, 4244, 25, 3354, 4238, 18, 3365, 2516,
	4237, 17, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287,
	3288, 3289, 3290, 104, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 3513, 679, 1502, 4236,
	16, 3455, 4239, 19, 4235, 15, 68, 2982, 4378, 3444,
	1, 3184, 4229, 11, 3186, 4264, 39, 4262, 37, 4261,
	36, 4265, 40, 3384, 3385, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 3012, 4317, 1502, 3411,
	4260, 32, 4259, 31, 4258, 30, 4255, 27, 3677, 677,
	3508, 50, 3423, 4254, 26, 4234, 14, 4231, 13, 2597,
	701, 4230, 12, 4228, 10, 3433, 2131, 595, 3515, 3516,
	3517, 3809, 3808, 3614, 3435, 3522, 3523, 2997, 3525, 4312,
	4181, 3819, 3508, 2709, 3461, 3459, 1725, 4006, 3613, 1188,
	2535, 1301, 3543, 4325, 4086, 3548, 4193, 3462, 3464, 4192,
	3792, 3791, 3469, 2990, 3509, 2989, 3473, 3474, 3263, 3476,
	3477, 1295, 2584, 2111, 3081, 3082, 163, 3486, 3487, 3009,
	3070, 4157, 2622, 2154, 2608, 1362, 2457, 2462, 3844, 2650,
	3500, 3493, 3510, 3492, 4039, 3499, 2920, 1705, 3077, 3580,
	3498, 1152, 117, 2562, 163, 1230, 3629, 511, 2459, 3542,
	2943, 4194, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 3651, 3646, 1502, 1298, 3172, 2942,
	2960, 3685, 2475, 1388, 3962, 2941, 2940, 4290, 2944, 1640,
	1164, 1638, 3563, 1639, 3565, 1637, 1642, 3578, 163, 1641,
	163, 517, 1623, 4364, 1164, 3693, 1472, 745, 135, 1164,
	3586, 3587, 3588, 3114, 648, 649, 124, 3704, 519, 1510,
	2757, 2864, 1077, 1078, 3610, 1070, 4455, 2748, 3259, 4205,
	4088, 4197, 1164, 4353, 1457, 1164, 4090, 3920, 3306, 3304,
	3652, 2182, 2810, 108, 1559, 2359, 714, 661, 3710, 3700,
	3654, 3698, 3215, 3939, 4092, 3632, 2267, 728, 727, 2178,
	726, 723, 724, 2394, 4341, 2256, 3292, 3291, 705, 3294,
	1484, 3418, 1360, 3699, 703, 1431, 1430, 1429, 3764, 1428,
	1422, 672, 2428, 3663, 3664, 3665, 1427, 3666, 3030, 1400,
	1398, 1397, 1743, 3669, 1611, 3671, 3667, 2717, 163, 163,
	2713, 671, 676, 46, 1164, 2762, 1249, 163, 1462, 3686,
	4099, 1564, 1564, 1564, 1569, 1569, 1569, 1572, 1573, 1574,
	1575, 1569, 1569, 1569, 3697, 3460, 111, 685, 684, 693,
	3371, 1164, 29, 3720, 21, 20, 1206, 3779, 2639, 3740,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 2661, 3702, 1502, 1186, 48, 54, 3714, 3716,
	3717, 3718, 3719, 53, 51, 3721, 52, 2984, 3172, 3657,
	3658, 3659, 3660, 3661, 2527, 4363, 4553, 1281, 4570, 3722,
	3723, 3724, 4602, 1357, 3735, 38, 35, 3738, 34, 33,
	3742, 4256, 4250, 3804, 3805, 3806, 4249, 3751, 4252, 4251,
	3743, 3744, 3745, 4248, 4253, 4247, 4246, 4245, 4263, 4233,
	3771, 3768, 3769, 3258, 4232, 3761, 4537, 4536, 5, 98,
	95, 3846, 41, 119, 3651, 1148, 2, 0, 3833, 3835,
	0, 0, 0, 0, 0, 0, 0, 3564, 0, 0,
	0, 1570, 1571, 3377, 0, 0, 3789, 1603, 1604, 1605,
	0, 0, 3782, 0, 1563, 1565, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3803, 3521, 0, 0,
	0, 3854, 3855, 0, 3421, 0, 0, 3807, 3837, 0,
	3534, 0, 3536, 3839, 0, 0, 3508, 0, 0, 0,
	0, 0, 0, 3549, 0, 3552, 0, 3554, 3556, 3558,
	3560, 0, 3454, 0, 3834, 3856, 0, 0, 0, 3873,
	3862, 3508, 0, 0, 163, 0, 0, 0, 0, 163,
	0, 0, 163, 163, 163, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 3883, 3084, 1502,
	0, 0, 0, 3838, 0, 0, 3080, 3091, 2922, 3879,
	3841, 1612, 1612, 3850, 2931, 2931, 3857, 2368, 0, 0,
	0, 3090, 0, 0, 0, 3566, 3567, 0, 0, 3917,
	3688, 0, 0, 3576, 0, 0, 3579, 0, 3871, 0,
	3880, 3908, 3910, 3589, 3590, 3591, 3592, 0, 0, 0,
	0, 3605, 3607, 3609, 0, 0, 0, 0, 0, 0,
	0, 3909, 0, 0, 0, 1164, 0, 163, 3612, 3545,
	3221, 0, 0, 0, 0, 1164, 1164, 0, 0, 0,
	0, 638, 3946, 0, 0, 3704, 3651, 3651, 0, 0,
	675, 3923, 3925, 3951, 0, 0, 163, 638, 1164, 0,
	0, 0, 490, 0, 0, 0, 3172, 0, 0, 0,
	3905, 108, 3895, 0, 0, 638, 0, 107, 0, 3903,
	3306, 3304, 0, 0, 695, 697, 0, 0, 0, 3943,
	0, 0, 0, 0, 3713, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 638, 0, 1164, 0, 0, 0,
	0, 0, 638, 0, 0, 3986, 0, 0, 0, 0,
	0, 0, 3960, 0, 0, 0, 0, 3945, 1150, 0,
	0, 0, 0, 0, 0, 0, 1164, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3993, 3959,
	3942, 3963, 0, 0, 108, 0, 0, 0, 0, 3953,
	3992, 0, 0, 3984, 0, 3954, 3987, 3950, 3362, 0,
	0, 669, 0, 0, 0, 3728, 3729, 0, 0, 0,
	3172, 0, 0, 3736, 3991, 0, 3739, 3362, 4043, 4044,
	0, 0, 0, 3746, 3747, 3748, 3749, 0, 0, 0,
	0, 0, 3756, 3758, 3760, 0, 0, 0, 3763, 0,
	0, 3171, 3969, 3970, 3980, 3981, 3979, 3172, 0, 0,
	0, 0, 0, 0, 3982, 3983, 0, 0, 4067, 1164,
	0, 0, 0, 0, 0, 3996, 0, 1164, 1164, 1164,
	0, 0, 3995, 0, 1460, 0, 0, 0, 0, 0,
	4009, 4005, 0, 0, 4019, 0, 0, 0, 4022, 0,
	0, 0, 163, 0, 4037, 0, 0, 0, 163, 4060,
	0, 4061, 4036, 4030, 1164, 4033, 0, 0, 0, 679,
	0, 0, 4049, 4050, 0, 0, 0, 3946, 4110, 0,
	4062, 0, 4064, 0, 4066, 0, 0, 0, 4059, 4076,
	0, 0, 157, 0, 0, 0, 0, 0, 536, 0,
	0, 4052, 4053, 157, 108, 0, 556, 0, 0, 0,
	4109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 1164, 0, 0, 0, 0, 4074, 4107,
	3790, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4129, 0, 658, 702, 0, 0, 4114, 0,
	0, 1087, 163, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 4108, 4130, 4116, 4132, 1164, 3836, 0,
	4158, 4111, 4113, 0, 4104, 0, 4163, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 4117, 0, 0, 0,
	157, 0, 0, 0, 0, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 0, 0, 0, 0, 0, 0, 3171, 4137,
	0, 0, 490, 0, 0, 3172, 0, 0, 2931, 2931,
	2931, 4178, 2931, 2931, 4161, 0, 0, 0, 490, 0,
	0, 0, 3955, 3956, 3957, 3958, 0, 0, 0, 4165,
	0, 3704, 3362, 163, 0, 4154, 0, 0, 4155, 0,
	0, 4156, 0, 0, 0, 0, 4188, 0, 4166, 0,
	4168, 1150, 0, 1150, 0, 4174, 4175, 108, 0, 0,
	0, 0, 0, 4210, 163, 0, 0, 0, 4179, 0,
	0, 0, 0, 4177, 0, 0, 0, 108, 1164, 1164,
	1164, 0, 0, 4220, 0, 638, 0, 0, 0, 0,
	0, 0, 163, 638, 0, 0, 0, 0, 0, 1150,
	1164, 1164, 3172, 3257, 0, 0, 4208, 0, 0, 0,
	0, 0, 4222, 0, 0, 0, 0, 0, 638, 0,
	1164, 0, 638, 0, 4281, 0, 638, 638, 0, 638,
	0, 0, 0, 0, 4297, 0, 3908, 0, 0, 0,
	0, 163, 163, 0, 0, 4301, 0, 4293, 3362, 4304,
	4294, 0, 0, 0, 3306, 3304, 3909, 0, 4309, 0,
	4352, 0, 4356, 4305, 490, 2931, 4310, 4345, 4314, 4307,
	4316, 0, 490, 490, 490, 490, 1164, 0, 0, 1164,
	490, 490, 1164, 490, 4331, 0, 0, 0, 0, 4344,
	0, 0, 1164, 1150, 1164, 1150, 490, 490, 1164, 163,
	490, 1150, 4116, 4348, 0, 1164, 0, 1164, 1164, 1164,
	1164, 1164, 1164, 0, 0, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 4091, 4094, 1502,
	3171, 0, 4368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4409, 0, 0, 0, 0, 0, 0, 4401,
	0, 3271, 0, 0, 0, 0, 0, 1540, 0, 4395,
	0, 0, 0, 0, 0, 4403, 4388, 3908, 0, 0,
	1164, 4374, 0, 0, 0, 0, 1164, 4383, 4396, 4405,
	4399, 3362, 0, 0, 0, 0, 0, 3909, 0, 0,
	163, 0, 4418, 4430, 4406, 1164, 0, 4424, 0, 4404,
	0, 0, 0, 4416, 4415, 0, 0, 0, 0, 0,
	0, 0, 157, 4463, 0, 4436, 0, 0, 0, 4467,
	4429, 596, 0, 0, 4454, 4462, 0, 0, 4442, 4433,
	0, 4479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4468, 0, 0, 0, 0, 0, 0, 4464,
	0, 0, 0, 4478, 0, 0, 1150, 4466, 0, 1150,
	0, 0, 0, 0, 0, 1150, 1150, 1150, 1150, 4470,
	1150, 1150, 4469, 0, 1150, 1150, 4471, 0, 0, 0,
	0, 1164, 0, 4486, 0, 4517, 1164, 157, 0, 1150,
	4436, 4490, 0, 0, 0, 0, 4487, 0, 0, 0,
	0, 3306, 3304, 0, 3651, 0, 4501, 4525, 0, 4500,
	0, 1540, 0, 1150, 4514, 4522, 1150, 0, 0, 1150,
	3171, 0, 4542, 4532, 4503, 4518, 4550, 0, 4541, 4503,
	4530, 4539, 4494, 4503, 4513, 4496, 2448, 4561, 0, 4540,
	4534, 4538, 4505, 4506, 4507, 108, 596, 4510, 4521, 0,
	4573, 4552, 0, 4572, 0, 0, 0, 0, 0, 0,
	0, 4578, 0, 0, 1150, 0, 0, 0, 1150, 0,
	1150, 0, 4596, 0, 1150, 0, 4593, 0, 4580, 658,
	0, 4582, 0, 0, 0, 1150, 1150, 1150, 1150, 4546,
	1150, 0, 4548, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 4094, 0, 0, 0,
	163, 0, 1164, 0, 0, 1087, 0, 4625, 1150, 2075,
	1150, 4627, 1150, 0, 0, 0, 0, 4503, 4638, 4503,
	0, 4640, 0, 4605, 0, 0, 0, 0, 0, 0,
	4594, 4650, 1164, 0, 4503, 4503, 4503, 0, 163, 4503,
	0, 0, 1150, 638, 4658, 0, 0, 0, 1150, 0,
	638, 0, 0, 4176, 4612, 0, 1150, 0, 0, 0,
	0, 0, 4357, 4361, 0, 0, 0, 4503, 0, 4503,
	0, 4375, 1150, 0, 0, 1150, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 1150, 0, 0, 4635, 0,
	0, 1150, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 4503, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4503, 0, 0, 42, 45,
	0, 0, 490, 0, 4663, 0, 0, 0, 0, 0,
	0, 4503, 71, 0, 3202, 0, 0, 0, 93, 0,
	0, 47, 75, 76, 4503, 0, 0, 0, 0, 72,
	4503, 4675, 0, 0, 0, 0, 4437, 0, 0, 0,
	0, 0, 88, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 3199, 63,
	0, 0, 0, 89, 0, 0, 0, 0, 3171, 0,
	0, 0, 0, 0, 3196, 2244, 0, 0, 0, 4347,
	0, 0, 0, 0, 0, 0, 1164, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0,
	0, 1502, 1164, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0, 0,
	0, 0, 0, 2283, 4508, 0, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 0, 163, 1502, 0, 0, 0, 0,
	0, 0, 0, 163, 163, 0, 2776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 3171, 0, 80, 4568, 96, 0, 0, 0,
	2344, 0, 0, 0, 2352, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 3171,
	0, 0, 490, 0, 0, 2931, 2931, 1164, 0, 0,
	1164, 0, 0, 77, 2794, 0, 0, 0, 0, 0,
	0, 490, 0, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 1087, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 0, 0,
	4639, 0, 0, 0, 0, 0, 0, 4644, 0, 0,
	0, 0, 0, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2931, 2931, 0, 0, 1164, 0, 0, 0,
	0, 78, 2747, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 1164, 490, 532, 490,
	0, 2215, 2216, 2217, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 1721,
	556, 0, 1164, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 157, 0,
	0, 0, 1721, 556, 0, 0, 1755, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 0, 0, 157,
	157, 157, 157, 157, 0, 157, 0, 3171, 0, 0,
	0, 0, 64, 81, 0, 66, 67, 73, 0, 74,
	0, 2072, 2073, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2336, 0, 0,
	0, 0, 0, 0, 0, 2340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 507, 0, 0, 0, 0, 0, 0, 1164, 0,
	518, 530, 531, 0, 0, 0, 490, 0, 2403, 2404,
	0, 0, 0, 0, 0, 0, 2411, 2412, 2413, 0,
	490, 0, 0, 163, 3171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2426, 0, 0, 0, 0, 513,
	0, 520, 516, 0, 1164, 525, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 157, 0, 527, 0, 658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 1755, 157, 157, 157, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 658, 0, 1164, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 490, 0,
	2243, 0, 59, 61, 0, 0, 522, 0, 87, 0,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 157, 0, 515, 163,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 514, 528, 0, 0,
	0, 0, 0, 529, 0, 2577, 658, 0, 157, 2243,
	2243, 2243, 0, 0, 0, 2243, 0, 2243, 2243, 2243,
	0, 2243, 2243, 0, 0, 490, 1087, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2243, 2243, 2243, 2243, 0, 0, 2243, 2243, 2243,
	2243, 2243, 2243, 0, 1164, 505, 2243, 2243, 2243, 2243,
	2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 0, 0,
	0, 0, 157, 157, 157, 0, 0, 0, 0, 0,
	1087, 0, 2628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 508, 509, 0, 535, 1757, 0, 0,
	510, 512, 0, 506, 534, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 1164, 2735, 2736, 0, 0, 2738,
	2739, 0, 0, 2741, 2742, 0, 0, 0, 0, 0,
	1164, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1755, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 2772, 2773,
	2774, 157, 157, 0, 1164, 0, 157, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1393, 0, 0, 0, 0, 0, 0, 0, 2887, 0,
	0, 0, 2804, 2805, 2806, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 2572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2876, 0, 0, 0, 713, 0,
	0, 0, 0, 0, 0, 0, 0, 2884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 2630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 1088, 2727, 2888, 0, 158,
	1156, 0, 0, 0, 0, 0, 0, 0, 2897, 0,
	0, 0, 0, 0, 0, 0, 2744, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2886, 2909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3024, 0,
	0, 0, 0, 0, 0, 0, 0, 3028, 3029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 2777,
	0, 2778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 2786, 2787, 2788, 0, 0,
	0, 2792, 0, 2795, 0, 0, 2798, 0, 0, 2801,
	2802, 0, 0, 0, 2807, 2808, 0, 2904, 0, 0,
	2814, 2815, 2816, 0, 0, 2817, 0, 2818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	658, 0, 2913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2894, 0, 0, 0, 2823, 2824, 2825,
	2826, 0, 0, 2830, 2831, 2832, 2833, 2834, 2835, 0,
	0, 0, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 0, 2851, 0, 0, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 157,
	0, 0, 0, 0, 0, 3225, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 0, 0, 3251, 0, 3252, 3253, 0, 3254, 3255,
	0, 0, 3256, 0, 1087, 1087, 0, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 2708, 3265, 3266,
	3267, 3268, 2879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	1155, 1393, 0, 2657, 0, 0, 0, 0, 0, 2681,
	0, 2891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 2243, 0,
	0, 2656, 0, 0, 0, 2243, 2243, 2243, 2243, 2243,
	0, 0, 493, 0, 0, 0, 0, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2243, 2880, 2882, 0, 0, 2885, 0,
	0, 2890, 0, 2895, 2892, 2893, 0, 2896, 2889, 0,
	2899, 2898, 2900, 0, 2901, 2902, 2903, 0, 0, 2905,
	2907, 2908, 2910, 2911, 2912, 0, 0, 0, 2883, 2914,
	0, 158, 0, 0, 0, 0, 0, 0, 2916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 157,
	0, 0, 157, 2861, 1757, 0, 1087, 0, 0, 2647,
	3495, 2659, 0, 3494, 2658, 2649, 0, 0, 2682, 0,
	0, 0, 0, 0, 0, 0, 3190, 0, 0, 2691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2680, 2702, 2653, 2652, 0,
	0, 0, 2878, 0, 158, 0, 0, 3226, 3227, 3228,
	3229, 3230, 3231, 0, 0, 2648, 0, 157, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 3496, 3497, 0, 0, 2672, 2708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1393, 0, 2657, 0, 0, 0, 0, 0, 2681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2698, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2706, 0, 0, 0, 2678, 0, 0,
	0, 0, 0, 0, 2688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3637, 3638, 3639, 3640, 3641,
	3642, 3643, 3644, 3645, 0, 0, 0, 0, 160, 2644,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 3656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 3682, 3683, 3684, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 1160, 0, 0, 0, 0, 0, 2647, 2646,
	2659, 2666, 2645, 2658, 2649, 0, 0, 2682, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 2691, 0,
	2243, 1757, 0, 0, 0, 494, 160, 0, 0, 0,
	0, 0, 157, 0, 0, 2669, 2667, 2662, 157, 702,
	0, 0, 2664, 2674, 0, 2243, 0, 0, 0, 0,
	0, 0, 0, 0, 2680, 2702, 2653, 2652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 0, 2648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 0, 0, 0, 0,
	2654, 2655, 0, 3773, 2672, 0, 2663, 2665, 2668, 2670,
	0, 0, 0, 0, 0, 0, 3781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	1087, 0, 157, 0, 0, 2675, 2676, 0, 0, 2679,
	0, 0, 2684, 0, 2689, 2686, 2687, 2698, 2690, 2683,
	0, 2693, 2692, 2694, 0, 2695, 2696, 2697, 0, 0,
	2699, 2700, 2701, 2703, 2704, 2705, 0, 0, 0, 2677,
	2707, 0, 2706, 0, 0, 0, 0, 0, 158, 2671,
	0, 1088, 0, 2688, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3634, 3635, 3636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	3655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 3673, 3674, 3675, 3676,
	0, 2915, 0, 0, 3681, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 3691, 3692, 0, 158, 0,
	0, 0, 157, 2673, 0, 1393, 0, 0, 0, 0,
	0, 0, 0, 2887, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 3701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 493,
	493, 493, 2674, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 157, 158, 158, 158, 158, 158, 0, 158,
	0, 0, 2884, 0, 0, 2635, 0, 0, 0, 0,
	0, 2685, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 2651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 3927, 3928, 3929, 3930,
	0, 0, 0, 0, 3934, 0, 0, 0, 3937, 3938,
	0, 0, 0, 0, 2675, 2676, 0, 0, 2679, 0,
	0, 2684, 0, 2689, 2686, 2687, 0, 2690, 2683, 0,
	2693, 2692, 2694, 160, 2695, 2696, 2697, 0, 0, 2699,
	2700, 2701, 2703, 2704, 2705, 0, 0, 0, 2677, 2707,
	0, 0, 2888, 0, 0, 0, 0, 0, 2671, 0,
	0, 0, 0, 2897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 158, 158, 0, 0, 71, 659,
	0, 2179, 0, 0, 93, 0, 0, 47, 0, 2886,
	2909, 0, 0, 158, 0, 0, 158, 158, 158, 158,
	0, 1086, 0, 0, 0, 0, 1086, 1624, 659, 0,
	0, 0, 0, 0, 0, 660, 158, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4273, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2673, 0, 0, 4042, 4266, 0, 1087, 4601,
	4604, 4600, 494, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 2278, 2904, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 0, 0,
	0, 0, 0, 1720, 555, 0, 0, 2913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2894, 0,
	0, 0, 4077, 4078, 4079, 0, 1720, 555, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 158, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4267, 0,
	2363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	3931, 3932, 3933, 57, 3935, 0, 0, 0, 2906, 0,
	157, 0, 0, 0, 0, 4126, 0, 0, 3944, 0,
	3947, 3948, 0, 0, 0, 0, 158, 158, 158, 0,
	0, 3952, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2110, 0, 157, 0,
	0, 2278, 0, 0, 1156, 0, 0, 0, 0, 0,
	4153, 0, 0, 0, 2132, 0, 0, 0, 0, 0,
	0, 0, 0, 4162, 0, 0, 0, 2879, 0, 69,
	70, 0, 4269, 0, 0, 0, 4170, 0, 0, 0,
	0, 3985, 4278, 4270, 4271, 4272, 4276, 4277, 4274, 3988,
	4275, 0, 4279, 0, 0, 0, 2891, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2184, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 1754, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 158, 158, 0, 0, 0,
	158, 158, 0, 0, 0, 0, 0, 0, 0, 2880,
	2882, 0, 0, 2885, 0, 0, 2890, 4054, 2895, 2892,
	2893, 0, 2896, 2889, 0, 2899, 2898, 2900, 0, 2901,
	2902, 2903, 0, 0, 2905, 2907, 2908, 2910, 2911, 2912,
	0, 0, 0, 2883, 2914, 0, 0, 0, 1755, 0,
	0, 4070, 0, 2916, 0, 0, 0, 0, 4280, 4268,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4095, 4096, 4097, 4098, 0,
	160, 0, 0, 0, 0, 4102, 4103, 0, 0, 0,
	0, 0, 0, 2184, 0, 2184, 0, 0, 2321, 4112,
	0, 0, 0, 0, 0, 2322, 0, 0, 0, 0,
	2184, 2328, 2184, 0, 658, 0, 0, 4115, 0, 0,
	0, 0, 0, 658, 157, 0, 0, 0, 0, 0,
	1087, 0, 0, 0, 0, 1663, 0, 0, 4381, 0,
	1086, 0, 0, 0, 0, 0, 0, 2878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 4443, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4160, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 2184, 0, 0, 1155, 0, 0, 0, 0, 0,
	494, 494, 494, 494, 0, 4183, 4184, 4185, 4186, 0,
	0, 0, 0, 0, 0, 160, 160, 160, 160, 160,
	0, 160, 0, 0, 1650, 0, 0, 4201, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 4295,
	4296, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 4516, 4306, 0, 0, 4519, 1664, 0, 0,
	0, 0, 0, 0, 4315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4335, 0, 0, 0, 0, 4346, 0,
	0, 0, 158, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 160, 0, 0,
	0, 660, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 160, 160,
	160, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 4391, 0, 0, 0, 4394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 158, 0, 0, 0, 4641, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 157, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 2279, 0, 0, 0, 0, 1088, 1088,
	0, 0, 0, 0, 2278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 582,
	593, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 660, 0, 160, 0, 0, 1677, 1680, 1681,
	1682, 1683, 1684, 1685, 0, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 0, 1665,
	1666, 1667, 1647, 1646, 1678, 1648, 1651, 1645, 1649, 1644,
	0, 0, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 0, 0, 0, 0, 0, 0, 0, 160, 160,
	160, 0, 0, 0, 1087, 0, 4531, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2279, 0, 0, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4574, 0, 0, 4576, 4577, 0,
	0, 0, 0, 0, 0, 743, 0, 0, 158, 0,
	4588, 0, 0, 158, 2582, 0, 158, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 2594, 0,
	0, 0, 0, 2594, 0, 0, 574, 573, 576, 0,
	0, 0, 493, 0, 0, 0, 581, 0, 0, 0,
	0, 0, 0, 4618, 0, 0, 2594, 0, 0, 2594,
	0, 0, 0, 159, 585, 491, 0, 0, 0, 589,
	0, 160, 0, 0, 159, 0, 0, 160, 160, 0,
	1679, 0, 160, 160, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 158, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 1157, 2729, 0,
	158, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 658, 0, 0, 0, 2751, 0, 0, 1086, 1086,
	491, 159, 0, 0, 2184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	2179, 0, 0, 0, 578, 579, 586, 2126, 590, 591,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 2278, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4273, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4266, 0,
	0, 0, 0, 4679, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2980,
	0, 0, 0, 0, 3305, 0, 158, 0, 0, 2988,
	2992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 660, 0, 0, 0,
	0, 0, 3014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 159, 96, 0, 493, 0, 0, 0,
	4267, 0, 0, 0, 2594, 0, 0, 0, 0, 491,
	3040, 0, 493, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2184, 2184, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 160, 71, 0, 158, 0,
	0, 0, 93, 660, 0, 47, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	584, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2279, 0, 0, 0,
	0, 69, 70, 0, 4269, 0, 0, 89, 0, 0,
	0, 0, 0, 4273, 4278, 4270, 4271, 4272, 4276, 4277,
	4274, 0, 4275, 0, 4279, 0, 0, 0, 0, 78,
	0, 79, 0, 3188, 4266, 158, 158, 0, 0, 4673,
	0, 3188, 3188, 3188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 2184, 0, 0, 493, 0,
	0, 0, 0, 60, 0, 0, 493, 493, 493, 493,
	0, 0, 0, 0, 493, 493, 0, 493, 2184, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 493, 0, 158, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4267, 3269, 0, 0,
	4280, 4268, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 1086, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 160, 0, 0, 160, 0,
	0, 2184, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4278, 4270, 4271, 4272, 4276, 4277, 4274, 0, 4275, 0,
	4279, 0, 0, 160, 0, 78, 0, 79, 0, 0,
	0, 0, 3305, 0, 0, 2179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 160, 0, 0, 0, 0, 0, 494, 60,
	0, 0, 3429, 3430, 3431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3188, 3188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 3467, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2180, 0, 0, 0, 4280, 4268, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3518, 0, 0, 2729, 158, 0, 3524, 0, 0, 2637,
	2638, 0, 0, 0, 0, 0, 2729, 0, 2729, 0,
	0, 0, 3544, 0, 0, 0, 0, 0, 0, 2729,
	0, 2729, 3553, 2729, 2729, 2729, 2729, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 2279, 0, 0,
	0, 0, 0, 0, 3188, 0, 0, 0, 160, 493,
	3633, 0, 0, 0, 160, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3649,
	0, 0, 0, 0, 0, 4189, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 1663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 159, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 159,
	0, 0, 1086, 0, 0, 2184, 0, 0, 0, 0,
	2729, 1759, 0, 0, 0, 491, 491, 491, 491, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	159, 159, 159, 159, 159, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 158, 160,
	0, 0, 0, 0, 3305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 0, 2992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 3188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 160, 0,
	159, 0, 0, 159, 159, 159, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 159, 0, 0, 0, 0, 494, 494,
	494, 494, 0, 0, 0, 0, 494, 494, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3062, 0, 494, 494, 0, 160, 494, 0, 0, 493,
	0, 493, 0, 493, 3099, 0, 0, 0, 0, 0,
	0, 0, 0, 3110, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 2277, 3130,
	3131, 3132, 3133, 3134, 3135, 3136, 3137, 0, 0, 3140,
	3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150,
	3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160,
	3161, 3162, 0, 3176, 3177, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	3912, 0, 0, 0, 0, 0, 660, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 2184, 1677, 1680, 1681,
	1682, 1683, 1684, 1685, 0, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 0, 1665,
	1666, 1667, 1647, 1646, 1678, 1648, 1651, 1645, 1649, 1644,
	0, 0, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 0, 0, 159, 159, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 2180, 2277, 0,
	0, 1157, 0, 0, 493, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3188, 71, 0, 3188, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 3317, 3318, 3319, 0, 3323, 3324,
	3325, 3326, 3327, 0, 0, 3330, 3331, 3332, 3333, 3334,
	3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344,
	3345, 3346, 0, 3348, 3349, 3350, 3351, 3352, 3353, 0,
	3356, 3357, 0, 89, 0, 0, 159, 0, 0, 4273,
	0, 0, 159, 159, 0, 0, 493, 159, 159, 0,
	1679, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	4266, 0, 0, 1668, 0, 4667, 160, 0, 0, 0,
	4056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3305, 0,
	4063, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 494, 4267, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 42, 0, 0, 493,
	62, 92, 91, 0, 0, 0, 0, 57, 494, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4273, 0, 0,
	0, 0, 3188, 0, 3571, 3572, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4269, 0, 4266, 0,
	0, 0, 0, 4659, 0, 0, 4278, 4270, 4271, 4272,
	4276, 4277, 4274, 0, 4275, 659, 4279, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 4199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3305, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 159, 0, 660,
	160, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	42, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4267, 0, 3188, 0, 71, 159, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 2184, 0, 0, 0,
	0, 0, 4280, 4268, 0, 66, 67, 73, 494, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 159,
	0, 0, 0, 659, 0, 89, 0, 494, 0, 0,
	0, 4273, 0, 0, 0, 0, 3725, 0, 3727, 0,
	0, 0, 0, 0, 3733, 3734, 0, 0, 0, 0,
	0, 0, 4266, 0, 0, 0, 0, 4632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4269, 0, 0, 0, 2184, 0,
	0, 0, 0, 0, 4278, 4270, 4271, 4272, 4276, 4277,
	4274, 0, 4275, 0, 4279, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 494, 0, 494, 84, 494, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 4199, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4267, 0, 0, 0, 0, 0,
	0, 2277, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	4280, 4268, 0, 66, 67, 73, 0, 74, 2184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3188, 89, 0, 0, 0, 0,
	0, 4273, 0, 0, 0, 0, 0, 3872, 0, 0,
	85, 0, 2184, 0, 0, 69, 70, 0, 4269, 0,
	0, 0, 4266, 0, 0, 1086, 0, 4614, 4278, 4270,
	4271, 4272, 4276, 4277, 4274, 0, 4275, 0, 4279, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 2184, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 84, 160,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	159, 0, 0, 159, 0, 1759, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4267, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 4280, 4268, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 494, 0,
	59, 61, 0, 0, 494, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 3961, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 160, 93, 159, 85, 47,
	0, 0, 0, 491, 0, 69, 70, 0, 4269, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 4278, 4270,
	4271, 4272, 4276, 4277, 4274, 0, 4275, 0, 4279, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 4266, 0,
	0, 0, 0, 4610, 0, 0, 0, 2181, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 4280, 4268, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 660, 62, 92,
	91, 0, 2277, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 1664, 159, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4118,
	0, 4120, 4121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4278, 4270, 4271, 4272, 4276, 4277,
	4274, 0, 4275, 0, 4279, 0, 0, 0, 0, 78,
	0, 79, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 660, 0, 0, 0, 0,
	0, 0, 0, 60, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 71, 0,
	87, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 159, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4273, 0, 0, 0, 0,
	4280, 4268, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 159, 4266, 4303, 0, 0,
	0, 4609, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 0,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 159, 1665, 1666, 1667, 1647, 1646, 1678,
	1648, 1651, 1645, 1649, 1644, 0, 0, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 159, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 491, 0, 0, 4267, 0,
	0, 0, 0, 491, 491, 491, 491, 0, 0, 0,
	0, 491, 491, 0, 491, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 491, 491, 0,
	159, 491, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 69,
	70, 0, 4269, 0, 0, 0, 0, 0, 1668, 0,
	0, 0, 4278, 4270, 4271, 4272, 4276, 4277, 4274, 0,
	4275, 0, 4279, 0, 0, 0, 0, 78, 85, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4280, 4268,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 159, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 2469, 2473, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 491, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 2472, 301, 191, 0, 0, 0, 2465,
	0, 2466, 2468, 2467, 311, 1165, 195, 0, 2463, 2471,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	1159, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 159, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 491, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 491, 0, 491, 0,
	491, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 491, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 0, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 902, 1044, 491,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 707, 857,
	890, 259, 706, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	159, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	732, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 4360, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 491, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 707, 857, 890, 259, 706, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 696, 0, 0, 732, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 0, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 707, 857, 890, 259,
	706, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 2241, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1034, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	707, 857, 890, 259, 706, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 811, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 0,
	0, 0, 732, 557, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 718, 719, 700, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 798,
	1034, 927, 301, 191, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 808, 198, 313, 1019, 891, 904, 729, 0, 392,
	980, 467, 710, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 812, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 709,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 730,
	731, 246, 801, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 242, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 807, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 707, 857, 890, 259, 706, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	811, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 2450,
	1051, 89, 0, 0, 0, 0, 2452, 557, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	2451, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 798, 1034, 927, 301, 191, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 808, 198, 313, 1019, 891,
	904, 729, 0, 392, 980, 467, 710, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	812, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 709, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 730, 731, 246, 801, 1053, 211, 868,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	242, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 807, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 707, 857,
	890, 259, 706, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	2350, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 2241, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 707, 857, 890, 259, 706, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 2347, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 2241, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 42, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 707, 857, 890, 259,
	706, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1543, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1541, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	707, 857, 890, 259, 706, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 811, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 2108,
	0, 0, 732, 557, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 798,
	1034, 927, 301, 191, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 808, 198, 313, 1019, 891, 904, 729, 0, 392,
	980, 467, 710, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 812, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 709,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 730,
	731, 246, 801, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 242, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 807, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 707, 857, 890, 259, 706, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	811, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 979,
	1051, 89, 0, 0, 0, 0, 732, 557, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	0, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 798, 1034, 927, 301, 191, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 808, 198, 313, 1019, 891,
	904, 729, 0, 392, 980, 467, 710, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	812, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 709, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 730, 731, 246, 801, 1053, 211, 868,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	242, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 807, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 811, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	732, 557, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 1123,
	721, 860, 810, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 798, 1034, 927,
	301, 191, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 808,
	198, 313, 1019, 891, 904, 729, 0, 392, 980, 467,
	710, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 812, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 709, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 730, 731, 246,
	801, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 242, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 807, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 1106, 857, 890, 259, 1104, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 811, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 732, 557, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 1123, 721, 860, 810, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 798, 1034, 927, 301, 191, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 808, 198, 313, 1019, 891, 904, 729,
	0, 392, 980, 467, 710, 278, 0, 4520, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 812, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 709, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 730, 731, 246, 801, 1053, 211, 868, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 242, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	807, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 902, 1044, 0, 0, 448,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 1106, 857, 890, 259,
	1104, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 811, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 557,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 1123, 721, 860,
	810, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 798, 1034, 927, 301, 191,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 808, 198, 313,
	1019, 891, 904, 729, 0, 392, 980, 467, 710, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 812, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 709, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 730, 731, 246, 801, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	2353, 2354, 2355, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 242, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 807, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 1830,
	2009, 0, 3705, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 172, 477, 190, 3706, 314, 1985, 497,
	3707, 423, 339, 500, 499, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 89, 0, 696,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1923, 2007, 1834, 498, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	3709, 1860, 301, 191, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 177, 198, 313, 1975, 1816, 1833, 245, 2183, 392,
	1928, 467, 496, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 180, 406, 405, 1848, 292, 1962, 181, 170,
	385, 182, 302, 204, 1987, 485, 220, 309, 450, 495,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1958, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 192,
	193, 1995, 1996, 194, 1890, 2005, 1778, 0, 1973, 188,
	189, 174, 179, 1937, 2033, 1850, 242, 164, 1774, 1775,
	1776, 165, 1880, 1881, 167, 168, 1991, 1990, 1989, 1992,
	169, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 3708, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190,
	2020, 314, 1985, 497, 475, 423, 339, 500, 499, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1923, 2007, 1834,
	498, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 3207,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 2281, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 180, 406, 405, 1848,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 485,
	220, 309, 450, 2280, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1958, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 192, 193, 1995, 1996, 194, 1890, 2005,
	1778, 0, 1973, 188, 189, 174, 179, 1937, 2033, 1850,
	242, 164, 1774, 1775, 1776, 165, 1880, 1881, 167, 168,
	1991, 1990, 1989, 1992, 169, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 172, 477, 190, 2020, 314, 1985, 497, 475, 423,
	339, 500, 499, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1923, 2007, 1834, 498, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 191, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 177,
	198, 313, 1975, 1816, 1833, 245, 2183, 392, 1928, 467,
	496, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	180, 406, 405, 1848, 292, 1962, 181, 170, 385, 182,
	302, 204, 1987, 485, 220, 309, 450, 495, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1958, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 192, 193, 1995,
	1996, 194, 1890, 2005, 1778, 0, 1973, 188, 189, 174,
	179, 1937, 2033, 1850, 242, 164, 1774, 1775, 1776, 165,
	1880, 1881, 167, 168, 1991, 1990, 1989, 1992, 169, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020, 314,
	1985, 497, 475, 423, 339, 500, 499, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1923, 2007, 1834, 498, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 2274, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 2281, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 180, 406, 405, 1848, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 485, 220, 309,
	450, 2280, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1958, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 192, 193, 1995, 1996, 194, 1890, 2005, 1778, 0,
	1973, 188, 189, 174, 179, 1937, 2033, 1850, 242, 164,
	1774, 1775, 1776, 165, 1880, 1881, 167, 168, 1991, 1990,
	1989, 1992, 169, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 172,
	477, 190, 2020, 314, 1985, 497, 475, 423, 339, 500,
	499, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1923,
	2007, 1834, 498, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 191,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 177, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 2281, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 180, 406,
	405, 1848, 292, 1962, 181, 170, 385, 182, 302, 204,
	1987, 485, 220, 309, 450, 2280, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1958,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 192, 193, 1995, 1996, 194,
	1890, 2005, 1778, 0, 1973, 188, 189, 174, 179, 1937,
	2033, 1850, 242, 164, 1774, 1775, 1776, 165, 1880, 1881,
	167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 902,
	1044, 0, 0, 448, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	1106, 857, 890, 259, 1104, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 1144, 314, 0, 497,
	475, 423, 339, 500, 499, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 498, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 1133,
	1034, 927, 301, 191, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 177, 198, 313, 1019, 891, 904, 245, 3307, 392,
	980, 467, 2366, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 1129, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 2365,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 463,
	464, 246, 1096, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 949, 1041, 863, 0, 1017, 188,
	189, 174, 179, 989, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190,
	2020, 314, 1985, 497, 475, 423, 339, 500, 499, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1923, 2007, 1834,
	498, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 2862,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 496, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 180, 406, 405, 1848,
	292, 1962, 181, 170, 385, 182, 302, 204, 1987, 485,
	220, 309, 450, 495, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1958, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 188, 189, 174, 179, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 902, 1044, 0,
	0, 448, 1111, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 1144, 314, 0, 497, 475, 423,
	339, 500, 499, 944, 0, 1118, 1131, 929, 987, 876,
	974, 1050, 910, 979, 1051, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 498, 939, 984, 1063, 855, 1123,
	0, 860, 1095, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 870, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 1133, 1034, 927,
	301, 191, 1040, 925, 1110, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 177,
	198, 313, 1019, 891, 904, 245, 0, 392, 980, 467,
	2366, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 1129, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 2365, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 463, 464, 246,
	1096, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 949, 1041, 863, 0, 1017, 188, 189, 174,
	179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020, 314,
	1985, 497, 475, 423, 339, 500, 499, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1923, 2007, 1834, 498, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 496, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 180, 406, 405, 1848, 292, 1962,
	181, 170, 385, 182, 302, 204, 1987, 485, 220, 309,
	450, 495, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1958, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0,
	1973, 188, 189, 174, 179, 1937, 2033, 1850, 242, 0,
	1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 902, 1044, 0, 0, 448,
	1111, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	357, 909, 865, 0, 0, 856, 1106, 857, 890, 259,
	1104, 1018, 963, 1046, 946, 978, 988, 258, 244, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	477, 190, 1144, 314, 0, 0, 475, 423, 339, 0,
	0, 944, 0, 1118, 1131, 929, 987, 876, 974, 1050,
	910, 979, 1051, 0, 0, 0, 0, 0, 0, 557,
	0, 1454, 0, 0, 1455, 0, 0, 171, 0, 1126,
	1140, 1107, 0, 939, 984, 1063, 855, 1123, 0, 860,
	1095, 0, 1036, 897, 898, 263, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 468, 990,
	999, 1013, 919, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 870,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 340, 867, 1133, 1034, 927, 301, 191,
	1040, 925, 1110, 993, 871, 1022, 1056, 913, 311, 869,
	195, 866, 872, 911, 353, 1002, 1008, 177, 198, 313,
	1019, 891, 904, 245, 0, 392, 980, 467, 1090, 278,
	0, 966, 391, 315, 460, 994, 1042, 466, 914, 442,
	476, 481, 271, 947, 234, 420, 261, 254, 896, 1012,
	859, 284, 375, 249, 306, 930, 986, 892, 241, 997,
	973, 1024, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 293, 285, 1027, 1025, 905, 361, 224, 957,
	950, 943, 1129, 470, 1059, 257, 1009, 472, 180, 406,
	405, 917, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 485, 220, 309, 450, 1089, 277, 352, 982, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1006,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 981, 389, 427,
	473, 975, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1004,
	216, 237, 428, 210, 1038, 1021, 968, 932, 938, 861,
	0, 209, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 281, 992, 463, 464, 246, 1096, 1053,
	211, 868, 1052, 349, 356, 348, 1055, 1054, 459, 1039,
	969, 956, 954, 862, 1037, 967, 955, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 958, 425,
	320, 0, 206, 0, 424, 1047, 1065, 439, 226, 880,
	1014, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 996, 1062, 360, 393, 233, 469,
	421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120,
	1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194,
	949, 1041, 863, 0, 1017, 188, 189, 174, 179, 989,
	1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114,
	167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147,
	1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127,
	1128, 0, 945, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1121, 199, 212, 312, 1061, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 346, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948,
	970, 1001, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 928, 196, 0, 0, 202,
	0, 203, 205, 915, 201, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 448, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 357, 909, 865, 0, 0, 856,
	1106, 857, 890, 259, 1104, 1018, 963, 1046, 946, 978,
	988, 258, 244, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 477, 190, 1144, 314, 0, 0,
	475, 423, 339, 0, 0, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 0, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 263,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 468, 990, 999, 1013, 919, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 340, 867, 1133,
	1034, 927, 301, 191, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 311, 869, 195, 866, 872, 911, 353, 1002,
	1008, 177, 198, 313, 1019, 891, 904, 245, 0, 392,
	980, 467, 1090, 278, 0, 966, 391, 315, 460, 994,
	1042, 466, 914, 442, 476, 481, 271, 947, 234, 420,
	261, 254, 896, 1012, 859, 284, 375, 249, 306, 930,
	986, 892, 241, 997, 973, 1024, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 293, 285, 1027, 1025,
	905, 361, 224, 957, 950, 943, 1129, 470, 1059, 257,
	1009, 472, 180, 406, 405, 917, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 485, 220, 309, 450, 1089,
	277, 352, 982, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1006, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 981, 389, 427, 473, 975, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1004, 216, 237, 428, 210, 1038, 1021,
	968, 932, 938, 861, 0, 209, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 281, 992, 463,
	464, 246, 1096, 1053, 211, 868, 1052, 349, 356, 348,
	1055, 1054, 459, 1039, 969, 956, 954, 862, 1037, 967,
	955, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 958, 425, 320, 0, 206, 0, 424, 1047,
	1065, 439, 226, 880, 1014, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 996, 1062,
	360, 393, 233, 469, 421, 262, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192,
	193, 1138, 1139, 194, 949, 1041, 863, 0, 1017, 188,
	189, 174, 179, 989, 1060, 1109, 242, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 945, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1121, 199,
	212, 312, 1061, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 346, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 471, 252, 948, 970, 1001, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 928,
	196, 0, 0, 202, 0, 203, 205, 915, 201, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 448, 1111, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 357, 909,
	865, 0, 0, 856, 1106, 857, 890, 259, 1104, 1018,
	963, 1046, 946, 978, 988, 258, 244, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 477, 190,
	1144, 314, 0, 0, 475, 423, 339, 0, 0, 944,
	0, 1118, 1131, 929, 987, 876, 974, 1050, 910, 979,
	1051, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1126, 1140, 1107,
	0, 939, 984, 1063, 855, 1123, 0, 860, 1095, 0,
	1036, 897, 898, 263, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 468, 990, 999, 1013,
	919, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 870, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 340, 867, 1133, 1034, 927, 301, 191, 1040, 925,
	1110, 993, 871, 1022, 1056, 913, 311, 869, 195, 866,
	872, 911, 353, 1002, 1008, 177, 198, 313, 1019, 891,
	904, 245, 0, 392, 980, 467, 1090, 278, 0, 966,
	391, 315, 460, 994, 1042, 466, 914, 442, 476, 481,
	271, 947, 234, 420, 261, 254, 896, 1012, 859, 284,
	375, 249, 306, 930, 986, 892, 241, 997, 973, 1024,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	293, 285, 1027, 1025, 905, 361, 224, 957, 950, 943,
	1129, 470, 1059, 257, 1009, 472, 180, 406, 405, 917,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 485,
	220, 309, 450, 1089, 277, 352, 982, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1006, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 981, 389, 427, 473, 975,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1004, 216, 237,
	428, 210, 1038, 1021, 968, 932, 938, 861, 0, 209,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 281, 992, 463, 464, 246, 1096, 1053, 211, 1084,
	1052, 349, 356, 348, 1055, 1054, 459, 1039, 969, 956,
	954, 862, 1037, 967, 955, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 1080, 958, 425, 320, 0,
	206, 0, 424, 1047, 1065, 439, 226, 880, 1014, 454,
	178, 381, 227, 279, 267, 372, 1085, 1083, 1074, 1075,
	308, 316, 996, 1062, 360, 393, 233, 469, 421, 262,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 192, 193, 1138, 1139, 194, 949, 1041,
	863, 0, 1017, 188, 189, 174, 179, 989, 1060, 1109,
	242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	945, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1121, 199, 212, 312, 1061, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 346,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 1081, 1082, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 928, 196, 0, 0, 202, 0, 203,
	205, 915, 201, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 448, 1111, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 357, 909, 865, 0, 0, 856, 1106, 857,
	890, 259, 1104, 1018, 963, 1046, 946, 978, 988, 258,
	244, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 477, 190, 1144, 314, 0, 0, 475, 423,
	339, 0, 0, 944, 0, 1118, 1131, 929, 987, 876,
	974, 1050, 910, 979, 1051, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 0, 939, 984, 1063, 855, 1123,
	0, 860, 1095, 0, 1036, 897, 898, 263, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	468, 990, 999, 1013, 919, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 870, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 340, 867, 1133, 1034, 927,
	301, 191, 1040, 925, 1110, 993, 871, 1022, 1056, 913,
	311, 869, 195, 866, 872, 911, 353, 1002, 1008, 177,
	198, 313, 1019, 891, 904, 245, 0, 392, 980, 467,
	1090, 278, 0, 966, 391, 315, 460, 994, 1042, 466,
	914, 442, 476, 481, 271, 947, 234, 420, 261, 254,
	896, 1012, 859, 284, 375, 249, 306, 930, 986, 892,
	241, 997, 973, 1024, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 293, 285, 1027, 1025, 905, 361,
	224, 957, 950, 943, 1129, 470, 1059, 257, 1009, 472,
	180, 406, 405, 917, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 485, 220, 309, 450, 1089, 277, 352,
	982, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1006, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 981,
	389, 427, 473, 975, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 1620, 229, 407, 410,
	484, 1004, 216, 237, 428, 210, 1038, 1021, 968, 932,
	938, 861, 0, 209, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 281, 992, 463, 464, 246,
	1096, 1053, 211, 868, 1052, 349, 356, 348, 1055, 1054,
	459, 1039, 969, 956, 954, 862, 1037, 967, 955, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	958, 425, 320, 0, 206, 0, 424, 1047, 1065, 439,
	226, 880, 1014, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 996, 1062, 360, 393,
	233, 469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138,
	1139, 194, 949, 1041, 863, 0, 1017, 188, 189, 174,
	179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 945, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1121, 199, 212, 312,
	1061, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 346, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471,
	252, 948, 970, 1001, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 928, 196, 0,
	0, 202, 0, 203, 205, 915, 201, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 448, 1111, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 357, 909, 865, 0,
	0, 856, 1106, 857, 890, 259, 1104, 1018, 963, 1046,
	946, 978, 988, 258, 244, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 477, 190, 1144, 314,
	0, 0, 475, 423, 339, 0, 0, 944, 0, 1118,
	1131, 929, 987, 876, 974, 1050, 910, 979, 1051, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 0, 939,
	984, 1063, 855, 1123, 0, 860, 1095, 0, 1036, 897,
	898, 263, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 468, 990, 999, 1013, 919, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 870, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 340,
	867, 1133, 1034, 927, 301, 191, 1040, 925, 1110, 993,
	871, 1022, 1056, 913, 311, 869, 195, 866, 872, 911,
	353, 1002, 1008, 177, 198, 313, 1019, 891, 904, 245,
	0, 392, 980, 467, 1090, 278, 0, 966, 391, 315,
	460, 994, 1042, 466, 914, 442, 476, 481, 271, 947,
	234, 420, 261, 254, 896, 1012, 859, 284, 375, 249,
	306, 930, 986, 892, 241, 997, 973, 1024, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 293, 285,
	1027, 1025, 905, 361, 224, 957, 950, 943, 1129, 470,
	1059, 257, 1009, 472, 180, 406, 405, 917, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 485, 220, 309,
	450, 1089, 277, 352, 982, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1006, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 981, 389, 427, 473, 975, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	1071, 229, 407, 410, 484, 1004, 216, 237, 428, 210,
	1038, 1021, 968, 932, 938, 861, 0, 209, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 281,
	992, 463, 464, 246, 1096, 1053, 211, 1084, 1052, 349,
	356, 348, 1055, 1054, 459, 1039, 969, 956, 954, 862,
	1037, 967, 955, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 1080, 958, 425, 320, 0, 206, 0,
	424, 1047, 1065, 439, 226, 880, 1014, 454, 178, 381,
	227, 279, 267, 372, 1085, 1083, 1074, 1075, 308, 316,
	996, 1062, 360, 393, 233, 469, 421, 262, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 192, 193, 1138, 1139, 194, 949, 1041, 863, 0,
	1017, 188, 189, 174, 179, 989, 1060, 1109, 242, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1121, 199, 212, 312, 1061, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 346, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 471, 252, 948, 970, 1001, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 1081, 1082, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 928, 196, 0, 0, 202, 0, 203, 205, 915,
	201, 1032, 1057, 977, 991, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0,
	477, 0, 2020, 314, 1985, 0, 475, 423, 339, 0,
	0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 3165, 3170,
	0, 3173, 3175, 3174, 0, 0, 0, 3167, 0, 1923,
	2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 0, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 3168, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0, 406,
	405, 1848, 292, 1962, 0, 0, 385, 3169, 302, 204,
	1987, 485, 220, 309, 450, 0, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1958,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 0, 0, 0, 0, 1937,
	2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 0, 477, 0, 2020, 314, 1985, 0,
	475, 423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 3964, 3170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 0, 198, 313, 1975, 1816, 1833, 245, 0, 392,
	1928, 467, 0, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 0, 406, 405, 1848, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 485, 220, 309, 450, 0,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1958, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0,
	0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0,
	0, 0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775,
	1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992,
	0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 2034, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0,
	2020, 314, 1985, 0, 475, 423, 339, 0, 0, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 2007, 1834,
	0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 3916,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 0, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 0, 406, 405, 1848,
	292, 1962, 0, 0, 385, 0, 302, 204, 1987, 485,
	220, 309, 450, 0, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1958, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 0, 0, 0, 0, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 0, 477, 0, 2020, 314, 1985, 0, 475, 423,
	339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 3220, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 467,
	0, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	0, 406, 405, 1848, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 485, 220, 309, 450, 0, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1958, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995,
	1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0, 0,
	0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0,
	1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843,
	2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763,
	1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011,
	1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828,
	1931, 1988, 2010, 1883, 0, 0, 477, 0, 2020, 314,
	1985, 0, 475, 423, 339, 0, 0, 1879, 1994, 1900,
	1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 2007, 1834, 0, 1874,
	1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825,
	1826, 263, 0, 0, 0, 0, 0, 0, 0, 1877,
	1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1916, 0, 0, 0, 1787, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340,
	1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857, 1942,
	1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842,
	353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833, 245,
	0, 392, 1928, 467, 0, 278, 0, 1909, 391, 315,
	460, 1943, 2006, 466, 1845, 442, 476, 481, 271, 1885,
	234, 420, 261, 254, 1824, 1965, 1770, 284, 375, 249,
	306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1976,
	1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285,
	1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470,
	2032, 257, 1961, 472, 0, 406, 405, 1848, 292, 1962,
	0, 0, 385, 0, 302, 204, 1987, 485, 220, 309,
	450, 0, 277, 352, 1930, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1958, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 2014, 322, 266,
	270, 286, 297, 1929, 389, 427, 473, 1920, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 1954, 216, 237, 428, 210,
	2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868,
	1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281,
	1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021, 349,
	356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777,
	2001, 1910, 1896, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1899, 425, 320, 0, 206, 0,
	424, 2012, 2038, 439, 226, 1803, 1969, 454, 2327, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1945, 2035, 360, 393, 233, 469, 421, 262, 1799, 0,
	1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957,
	1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0,
	1973, 0, 0, 0, 0, 1937, 2033, 1850, 242, 0,
	1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990,
	1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886,
	1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1908, 199, 212, 312, 2034, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 1970, 1915, 0, 1854,
	1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761,
	1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865,
	1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972,
	1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 1861, 196, 0, 0, 202, 0, 203, 205, 1846,
	201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448,
	1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902,
	357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259,
	1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894,
	1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0,
	477, 0, 2020, 314, 1985, 0, 475, 423, 339, 0,
	0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015,
	1841, 1927, 2016, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1923,
	2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771,
	1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0, 0,
	0, 0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938,
	1948, 1966, 1851, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1916, 0, 0, 0, 1787,
	1773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 1794, 1764, 1822,
	1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0,
	2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786,
	195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313,
	1975, 1816, 1833, 245, 0, 392, 1928, 467, 0, 278,
	0, 1909, 391, 315, 460, 1943, 2006, 466, 1845, 442,
	476, 481, 271, 1885, 234, 420, 261, 254, 1824, 1965,
	1770, 284, 375, 249, 306, 1863, 1934, 1817, 241, 1946,
	1917, 1980, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791,
	1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898,
	1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0, 406,
	405, 1848, 292, 1962, 0, 0, 385, 0, 302, 204,
	1987, 485, 220, 309, 450, 0, 277, 352, 1930, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1958,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2014, 322, 266, 270, 286, 297, 1929, 389, 427,
	473, 1920, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 1954,
	216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772,
	0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837,
	1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022,
	211, 1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003,
	1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 1899, 425,
	320, 0, 206, 0, 424, 2012, 2038, 439, 226, 1803,
	1969, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 1945, 2035, 360, 393, 233, 469,
	421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904,
	2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0,
	1890, 2005, 1778, 0, 1973, 0, 0, 0, 0, 1937,
	2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881,
	0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027,
	1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940,
	1949, 1823, 1882, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 1908, 199, 212, 312, 2034, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804,
	2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838,
	1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914,
	1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888,
	1913, 1951, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 4083,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 1861, 196, 0, 0, 202,
	0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830,
	2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849,
	1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767,
	1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926,
	1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988,
	2010, 1883, 0, 0, 477, 0, 2020, 314, 1985, 0,
	475, 423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862,
	1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036,
	1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263,
	0, 0, 0, 0, 0, 0, 0, 1877, 1901, 1953,
	1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1916,
	0, 0, 0, 1787, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968,
	1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978,
	2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952,
	1960, 0, 198, 313, 1975, 1816, 1833, 245, 0, 392,
	1928, 467, 0, 278, 0, 1909, 391, 315, 460, 1943,
	2006, 466, 1845, 442, 476, 481, 271, 1885, 234, 420,
	261, 254, 1824, 1965, 1770, 284, 375, 249, 306, 1863,
	1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1976, 1959, 1982,
	1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981,
	1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257,
	1961, 472, 0, 406, 405, 1848, 292, 1962, 0, 0,
	385, 0, 302, 204, 1987, 485, 220, 309, 450, 0,
	277, 352, 1930, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1958, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2014, 322, 266, 270, 286,
	297, 1929, 389, 427, 473, 1920, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 1954, 216, 237, 428, 210, 2002, 1977,
	1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870,
	1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463,
	464, 246, 1784, 2022, 211, 1785, 2021, 349, 356, 348,
	2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910,
	1896, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 1899, 425, 320, 0, 206, 0, 424, 2012,
	2038, 439, 226, 1803, 1969, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 1945, 2035,
	360, 393, 233, 469, 421, 262, 1799, 0, 1802, 1797,
	1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0,
	0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0,
	0, 0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775,
	1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992,
	0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889,
	1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 1908, 199,
	212, 312, 2034, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855,
	1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796,
	1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876,
	1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984,
	1986, 471, 252, 1888, 1913, 1951, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 1861,
	196, 0, 0, 202, 0, 203, 205, 1846, 201, 1993,
	2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013,
	1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840,
	1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974,
	1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999,
	1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0,
	2020, 314, 1985, 0, 475, 423, 339, 0, 0, 1879,
	1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927,
	2016, 0, 0, 0, 0, 0, 0, 4362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 2007, 1834,
	0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030,
	2000, 1825, 1826, 263, 0, 0, 0, 0, 0, 0,
	0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966,
	1851, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1916, 0, 0, 0, 1787, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765,
	1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858,
	1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781,
	1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816,
	1833, 245, 0, 392, 1928, 467, 0, 278, 0, 1909,
	391, 315, 460, 1943, 2006, 466, 1845, 442, 476, 481,
	271, 1885, 234, 420, 261, 254, 1824, 1965, 1770, 284,
	375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1976, 1959, 1982, 1810, 1790, 1801, 4365, 4366, 4367,
	293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878,
	1956, 470, 2032, 257, 1961, 472, 0, 406, 405, 1848,
	292, 1962, 0, 0, 385, 0, 302, 204, 1987, 485,
	220, 309, 450, 0, 277, 352, 1930, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1958, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2014,
	322, 266, 270, 286, 297, 1929, 389, 427, 473, 1920,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 1954, 216, 237,
	428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209,
	1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924,
	1808, 281, 1941, 463, 464, 246, 1784, 2022, 211, 1785,
	2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897,
	1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 1899, 425, 320, 0,
	206, 0, 424, 2012, 2038, 439, 226, 1803, 1969, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 1945, 2035, 360, 393, 233, 469, 421, 262,
	1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018,
	2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005,
	1778, 0, 1973, 0, 0, 0, 0, 1937, 2033, 1850,
	242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0,
	1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814,
	1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823,
	1882, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 1908, 199, 212, 312, 2034, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 1970, 1915,
	0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346,
	1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847,
	1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947,
	1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 1861, 196, 0, 0, 202, 0, 203,
	205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0,
	1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933,
	1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768,
	1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258,
	244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883,
	0, 0, 477, 0, 2020, 314, 1985, 0, 475, 423,
	339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795,
	1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0, 0,
	0, 3170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919,
	0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0,
	0, 0, 0, 0, 0, 1877, 1901, 1953, 1859, 0,
	468, 1938, 1948, 1966, 1851, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1916, 0, 0,
	0, 1787, 1773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 1794,
	1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860,
	301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844,
	311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0,
	198, 313, 1975, 1816, 1833, 245, 0, 392, 1928, 467,
	0, 278, 0, 1909, 391, 315, 460, 1943, 2006, 466,
	1845, 442, 476, 481, 271, 1885, 234, 420, 261, 254,
	1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817,
	241, 1946, 1917, 1980, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790,
	1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361,
	224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472,
	0, 406, 405, 1848, 292, 1962, 0, 0, 385, 0,
	302, 204, 1987, 485, 220, 309, 450, 0, 277, 352,
	1930, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1958, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2014, 322, 266, 270, 286, 297, 1929,
	389, 427, 473, 1920, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866,
	1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950,
	1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246,
	1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023,
	459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	1899, 425, 320, 0, 206, 0, 424, 2012, 2038, 439,
	226, 1803, 1969, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 1945, 2035, 360, 393,
	233, 469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798,
	1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995,
	1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0, 0,
	0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0,
	1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026,
	2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922,
	1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 1908, 199, 212, 312,
	2034, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807,
	1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819,
	1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906,
	1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471,
	252, 1888, 1913, 1951, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 1861, 196, 0,
	0, 202, 0, 203, 205, 1846, 201, 1993, 2029, 1925,
	1939, 588, 448, 582, 593, 575, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 639, 0, 0, 0,
	0, 0, 259, 0, 0, 583, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 636, 637, 0, 732, 0, 733, 735, 736, 737,
	738, 0, 0, 0, 734, 2319, 3388, 3389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 3383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 0,
	574, 573, 576, 0, 0, 0, 340, 0, 0, 0,
	581, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 585, 0,
	0, 198, 313, 589, 0, 0, 245, 0, 392, 2316,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 592,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 577, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 580, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 642, 408, 455, 222, 426, 578, 579,
	586, 587, 590, 591, 594, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 2317, 2318, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 3400, 1066,
	0, 3390, 3391, 3393, 3401, 3402, 3392, 3394, 3395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3396, 3397, 3398, 3399, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 584, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 0, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 588, 448,
	582, 593, 575, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 567, 0, 0, 0, 0, 0, 259,
	0, 0, 583, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 573, 576,
	0, 0, 0, 340, 0, 0, 0, 581, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 585, 0, 0, 198, 313,
	589, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 592, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 577, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 580, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	570, 408, 455, 222, 426, 578, 579, 586, 587, 590,
	591, 594, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 584, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 1478, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 1479, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	1474, 1475, 1473, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1476,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 1165, 195, 0, 1161, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 1159, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 3547, 195, 0,
	0, 3546, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3514, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1165, 195, 0, 0, 2471, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2921,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 1165,
	195, 0, 0, 2471, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1480, 1479, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	2273, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 0, 196, 42, 448, 202, 0, 203, 205, 0,
	201, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 88, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 96, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	161, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 109, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 674, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3505, 0, 0, 0, 0, 0,
	3507, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 2044, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 2044, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1165, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3507, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1213, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3217, 681,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 674, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 674, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 547, 544, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 2543, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	161, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 2429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 2169, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 0, 196, 0, 0, 202, 0, 203, 205,
	448, 201, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 155, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 654, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 1163, 733, 735, 736,
	737, 738, 0, 0, 0, 734, 2319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	729, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 730, 731, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 4461, 0, 0, 0,
	0, 0, 259, 4459, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 4460, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2993, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 2994, 2995, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 1626, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 2473, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 2472, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3561, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3559, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3557, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	3555, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 3550, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3537, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3535, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 3466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3457, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	2593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 2750, 2749, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 314, 0, 0, 475, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 485, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	314, 0, 0, 475, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 485, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 314, 0, 0, 475,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 485, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 314, 0,
	0, 475, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 485, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	42, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 4606, 0, 71, 0,
	0, 4273, 0, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 0, 0, 4273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4266, 0, 0, 0,
	0, 4598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 62, 92, 91, 0,
	0, 0, 89, 57, 0, 0, 0, 71, 4273, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4269, 4266,
	0, 0, 0, 0, 4595, 0, 0, 0, 4278, 4270,
	4271, 4272, 4276, 4277, 4274, 0, 4275, 0, 4279, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 89, 0,
	0, 0, 0, 0, 4273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 69,
	70, 0, 4269, 0, 0, 4266, 0, 60, 0, 0,
	4512, 0, 4278, 4270, 4271, 4272, 4276, 4277, 4274, 0,
	4275, 0, 4279, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4267, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 4280, 4268, 0, 66, 67, 73,
	0, 74, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 4280, 4268,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4278, 4270, 4271, 4272, 4276,
	4277, 4274, 0, 4275, 0, 4279, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 69, 70,
	0, 4269, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 4278, 4270, 4271, 4272, 4276, 4277, 4274, 0, 4275,
	0, 4279, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 71, 0, 0, 0, 0, 0, 93, 0,
	60, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 4280, 4268, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 71, 0, 0, 4273,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 59, 61,
	4266, 0, 0, 0, 87, 0, 0, 4280, 4268, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 4266, 0, 0, 0, 0, 4504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 59, 61, 0, 0, 0, 4267, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 89, 0, 0, 71, 0, 0, 4273, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 85,
	0, 0, 0, 69, 70, 0, 4269, 59, 61, 4266,
	0, 0, 0, 87, 4502, 0, 4278, 4270, 4271, 4272,
	4276, 4277, 4274, 4509, 4275, 0, 4279, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 89, 0, 0, 0,
	0, 0, 4273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 84, 69, 70, 0,
	4269, 0, 0, 4266, 0, 60, 0, 0, 4382, 0,
	4278, 4270, 4271, 4272, 4276, 4277, 4274, 0, 4275, 0,
	4279, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	84, 4267, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 4280, 4268, 0, 66, 67, 73, 0, 74,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 4280, 4268, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4278, 4270, 4271, 4272, 4276,
	4277, 4274, 0, 4275, 0, 4279, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 69, 70, 0, 4269,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 4278,
	4270, 4271, 4272, 4276, 4277, 4274, 0, 4275, 0, 4279,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	71, 0, 0, 0, 0, 0, 93, 0, 60, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 4280, 4268, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 4266, 0,
	0, 0, 87, 0, 0, 4280, 4268, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 69, 70, 0, 4269, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 4278, 4270, 4271, 4272, 4276, 4277,
	4274, 0, 4275, 0, 4279, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4280, 4268, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	4697, -1000, -501, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2964, -1000, 2964, 313, -1000, 450, -1000, 1415, 526,
	-1000, -1000, -1000, -1000, -1000, 683, 218, 59364, 1115, 53468,
	79972, -266, 5011, 79236, 176, -1000, 176, 427, 55676, 871,
	934, 78500, 2765, 2127, 178, 34, 30, 236, 40217, 39470,
	333, 222, 221, 217, 203, 1298, -1000, 61572, 879, -1000,
	247, -1000, -1000, -1000, -1000, -1000, 54940, 2990, 3020, 2990,
	-1000, 2870, 2961, -1000, -1000, 2870, 2191, 2191, -1000, 61572,
	14591, -1000, -1000, -1000, -1000, -1000, 31933, -1000, 1343, -1000,
	60100, 41689, 2964, -1000, 1103, 1081, -106, 1030, 1030, 863,
	1030, 1030, -465, 1114, -1000, 853, 1603, -1000, -1000, -1000,
	-1000, 1581, 60100, 67460, 1113, 77028, 1031, 1031, 1031, 1031,
	1031, 1031, 1031, 1031, 52732, 60100, -1000, 1250, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60100, 3003, 3002,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2584, 2583, 51996, 592, 2839, 1602, 369, 1602, -1000,
	-1000, 1599, -1000, 919, 912, 910, 907, 901, 906, 33,
	1512, 1609, 2931, -1000, 2523, 2870, 2870, 1512, -1000, 903,
	-1000, -1000, -1000, -1000, -1000, -1000, 1337, -1000, -1000, 1663,
	1663, 562, 1085, 937, 947, 937, 2881, 1572, 2838, 2823,
	2148, 2818, 1048, 2817, 2573, -1000, 1247, -1000, -1000, 72,
	-1000, 2123, 60100, -1000, -1000, 1958, 1957, 672, 2461, 1183,
	2626, -1000, -1000, 664, 876, 2558, 792, 2558, 2558, 2558,
	425, 2558, 2558, 29, 2558, 2558, 2558, 339, 2558, 368,
	2558, 2558, 2558, 2558, 2558, -1000, 2290, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 667,
	2460, 2516, 2625, 250, -1000, -166, 229, 2909, 668, -1000,
	-1000, -1000, 328, 1343, 62308, 2511, -1000, 2523, -1000, -1000,
	-1000, 2520, 2523, -1000, 2020, 1112, 1031, 758, -1000, 600,
	-1000, -1000, -1000, 2866, 2523, 45372, -1000, -1000, 1652, -1000,
	2523, 2523, 1343, 2921, 1343, 1343, 2918, 2916, 1343, 2821,
	28917, 19115, 2677, 1721, -1000, -1000, -1000, -1000, 1343, 3001,
	-1000, 40953, 1244, -1000, 19115, 2016, 2523, 2523, -1000, 1189,
	1251, -1000, 1151, 1224, -1000, -1000, 19869, 19869, 19869, 19869,
	19869, 19869, 19869, -1000, -1000, -1000, -1000, -1000, -1000, 2265,
	2261, 2260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2523, 1230, 1229, 1228, 2523, 2523, 2523, 2523,
	2523, -1000, 17607, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2523, 2523, 2523, 2523, 2523,
	2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
	19115, 2523, 2523, 2523, 2523, 2523, -1000, 2523, 2523, 2523,
	2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
	2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
	2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
	2523, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2523, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2523, 2523, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2523, 1042, 1042, 58628,
	2519, -31, 31179, -1000, -1000, -1000, -1000, 29671, 65252, 1497,
	-1000, -1000, -1000, -1000, 2815, -1000, -1000, 1225, 1224, 1189,
	1185, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2964,
	353, -1000, 2414, -1000, -1000, 10696, 10696, 10696, 10696, 10696,
	10696, 48316, -1000, -1000, -1000, 2572, 2870, -1000, 77028, 60100,
	855, 2103, 1620, 2101, 78500, 78500, 1030, -1000, 806, 67460,
	67460, -360, 1030, 827, 67460, 836, 2518, 1078, 2517, 1076,
	2194, 1031, 2621, 60100, 2864, 2099, 2097, 78500, 78500, 67460,
	67460, 78500, -1000, -1000, -1000, 28163, -1000, 1302, 2515, 47580,
	46844, 51260, 51260, -1000, -1000, -1000, 899, -1000, 1602, -1000,
	11138, 19115, 1030, 1030, 60100, 60100, 60100, 60100, 60100, -1000,
	60100, -1000, -1000, 1602, -1000, -1000, 1602, 1602, 1602, 1512,
	3000, 1512, -1000, -1000, -1000, 1602, 79236, 79236, 19115, -1000,
	19869, 66724, 1362, -1000, -1000, 1602, -1000, 79236, 977, 977,
	977, -1000, 2095, 559, 356, -1000, 937, 353, -1000, -1000,
	2775, 2891, 2889, 2082, 1048, 1048, -1000, 2270, 1048, 2501,
	-1000, 1568, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1048, 2881, 18361, 77028, -480, -1000,
	-1000, 2514, -1000, 482, -1000, -1000, 948, 2620, 948, 8006,
	67460, 67460, 67460, -1000, 2558, 77028, -1000, 2558, 2558, 2558,
	23, 2558, 2558, -1000, -1000, 2558, -1000, -1000, -1000, 2558,
	-1000, -1000, 2558, -1000, -1000, -1000, 2558, 2558, -1000, 2558,
	2558, -1000, -1000, -1000, -1000, -1000, 67460, 948, 457, 2513,
	948, 67460, 67460, 1075, 220, -44, 170, -1000, -1000, -1000,
	-1000, -1000, -1000, 325, 323, 319, 318, -1000, -1000, -1000,
	-1000, 317, 303, -1000, -1000, 57884, 57884, 893, -1000, 2511,
	62308, 2885, 23639, 879, -1000, 19115, 2845, -1000, 2845, -1000,
	-1000, -1000, 375, -1000, 60100, 67460, 78500, 54940, 54940, 54940,
	54940, -1000, 2651, 2649, -1000, 2645, 2641, 2638, 499, 62308,
	-1000, 2866, 313, 2409, 2191, 2191, 600, 45372, -1000, 2523,
	-1000, 62308, 1256, 1102, 1098, 1097, 2775, -1000, -1000, -1000,
	-1000, -1000, 2192, 2188, 2212, 13837, 19869, -1000, -1000, -1000,
	-1000, -1000, 2990, 2990, -1000, -1000, -1000, -1000, -1000, -1000,
	1674, 3009, 1491, 2492, -1000, -1000, -1000, 2510, -1000, 1678,
	1219, 1872, 1769, -1000, -1000, -1000, -1000, -1000, -1000, 14591,
	-1000, 60100, -1000, 19115, 19115, 19115, 1770, -1000, 44633, -1000,
	-1000, -1000, 24393, 1381, 19869, 1813, 1531, 19869, 19869, 19869,
	19869, 19869, 19869, 19869, 19869, 19869, 19869, 19869, 19869, 19869,
	19869, 19869, 1375, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2081, -1000, 353, 37211, 13837, 37211, 950, 950, 77028,
	1326, 1326, 1326, 1326, 1326, 1326, 60836, -1000, -1000, -1000,
	2914, 35703, 77028, 37211, 2914, 2914, 2914, 2914, 2914, 2407,
	1650, 61572, 17607, 54940, 13837, 13837, 13837, 2191, 19115, 19115,
	13837, 19869, 13837, 16853, 16099, 21377, 13837, 13837, 2914, 1607,
	1650, 27409, 13837, -1000, 2191, -1000, -1000, -1000, -1000, 1960,
	-1000, -1000, -128, -128, -128, 386, 13837, 13837, 13837, 13837,
	2191, 2191, 13837, 13837, 13837, 13837, 13837, 13837, 2191, 2191,
	2191, 13837, 13837, 13837, 13837, 13837, 13837, 13837, 13837, 13837,
	13837, 13837, 13837, -1000, -1000, -1000, 1942, 57148, 54940, 60100,
	2474, 2467, -1000, -1000, 1216, 30425, 2494, -1000, -38, -48,
	-31, -1000, -1000, 1300, -1000, -1000, -1000, -1000, 15345, -1000,
	-1000, -1000, 25147, 2870, -1000, 11553, -1000, 61, -1000, -1000,
	-1000, 2539, -1000, 2546, 111, 529, 2546, 99, 96, 2546,
	2546, 2546, -1000, -1000, -1000, -1000, 127, -1000, -1000, -1000,
	-1000, -1000, 2571, 2566, -1000, 2539, 2539, 2539, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2556, 540, 2541, 2541, 2541, 2541, 2541, -1000,
	-1000, -1000, -1000, -1000, 1000, -1000, -1000, -1000, 19115, 2821,
	2760, 2577, 2523, 1049, -466, 827, 2845, 2861, 2845, 900,
	-1000, 1210, 2565, 78500, 857, 2480, -1000, 546, 2338, 1150,
	56412, -1000, -1000, -1000, -1000, -1000, 60100, 60100, 67460, 67460,
	67460, 60100, 60100, 2503, -1000, -1000, -1000, -1000, -1000, -1000,
	2473, -1000, 2338, -1000, -1000, 1209, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -438,
	-440, 60100, -1000, -1000, -1000, -1000, -1000, -1000, 2502, -1000,
	2502, -1000, -1000, -1000, 2269, 1650, 2080, 2074, 2881, -1000,
	-1000, -1000, -1000, 1595, -1000, -1000, -1000, -1000, 1602, 60100,
	2881, -1000, -1000, -1000, 1650, 1565, 2582, 2523, 2191, -1000,
	-1000, -1000, 174, -1000, 172, -1000, -1000, -1000, 2061, -1000,
	-1000, -1000, -1000, -1000, 356, -1000, 19869, 2772, 2769, -1000,
	2501, 2501, -1000, 2501, 1048, 63044, 2501, -1000, -1000, 2404,
	-1000, 301, 2267, 60100, -1000, 62308, 71, -1000, -76, 75556,
	-1000, -1000, -1000, 948, 75556, -1000, 339, 275, -1000, 1074,
	-1000, 2396, -1000, -1000, -1000, -1000, 2558, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 75556, 424, 456,
	75556, 2473, 2998, 619, 2500, -1000, 1567, 1561, -1000, -1000,
	167, -1000, -1000, -1000, -1000, 2930, -1000, -1000, 274, -60,
	-1000, 274, 2266, 19869, -1000, 2523, 2346, -1000, 1207, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2523, -1000, -1000, -1000,
	-1000, 2814, 1497, 1497, 1497, 6437, 546, 2619, 2564, 2618,
	585, -1000, -1000, -1000, -1000, 2648, -1000, 2647, 2637, -1000,
	-1000, -1000, 2532, 62308, 54940, -1000, -1000, -1000, 2191, 77028,
	1154, -1000, 62308, 2523, 2523, 2523, 19869, 19869, 1486, -1000,
	19869, 19869, 1478, -1000, 19869, 19869, 1477, -1000, 2191, 2499,
	-1000, -1000, 1650, 1206, 4955, -1000, 76292, 64, 2667, 28917,
	28917, 19115, -1000, -1000, -1000, 25147, 2933, -1000, 2678, 2675,
	2997, -1000, -1000, -1000, 1381, 1526, 1539, -1000, -1000, 1775,
	-1000, -1000, -1000, -1000, -1000, 1193, 2523, -1000, -1000, -1000,
	-1000, -1000, -1000, 4723, -1000, -1000, -1000, -1000, 1813, 19869,
	19869, 19869, 1565, 4723, 4777, 2036, 2986, 1326, 1550, 1550,
	1309, 1309, 1309, 1309, 1309, 1715, 1715, -1000, -1000, -1000,
	-1000, 2191, -1000, 2394, -1000, -1000, 2265, 2261, 2260, -1000,
	-1000, -1000, -1000, 13837, -1000, -1000, -1000, -1000, -1000, -1000,
	13837, 13837, 13837, 13837, 13837, 19115, -1000, 2394, 2394, 2394,
	-1000, 1938, 1682, 2278, 4825, 2394, 1346, 2996, 2394, 1321,
	2994, 2394, 1600, 19869, 19869, 19869, 2394, 2394, 13837, 1617,
	-1000, 19115, 2191, 1243, 2191, 1189, 1185, 2394, -1000, 2191,
	2498, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2496, 2993, 2495, -1000, -1000, -1000, -1000, 2394,
	2191, 2394, 2394, -123, -123, 2191, 2394, 2191, 2394, 2394,
	2191, -123, -123, -123, 2394, 2394, 2394, 2394, 2394, 2394,
	2394, 2394, 2394, 2394, 2394, 2394, -1000, 2191, 1432, 60100,
	-1000, 2478, 1432, 2431, 54940, -1000, -1000, 54940, 79236, 26655,
	-1000, 29671, -31, -82, -1000, -1000, 2494, -1000, -1000, 1508,
	-1000, -1000, 2259, 1650, -1000, 1178, 2821, 5657, -1000, -1000,
	-1000, -1000, 2557, 43897, -1000, 2708, 1240, 1240, 1240, 65988,
	77764, 2707, -1000, -1000, 213, 54, -1000, -1000, -1000, 1956,
	-1000, 346, 514, 2546, -1000, -1000, -1000, 2546, 2546, -1000,
	2546, 2546, -1000, -1000, -1000, -1000, 2258, 2258, -1000, -1000,
	-1000, -1000, 1955, -1000, 2556, -1000, 1935, -1000, -1000, -1000,
	-1000, 213, 213, 213, 213, 213, -1000, 1883, -1000, 2615,
	77028, 2884, 60100, -376, -1000, -1000, -1000, 2976, -1000, -1000,
	77028, 64516, 2613, -1000, -1000, 359, 67460, 537, 689, 351,
	-1000, 1535, -1000, -1000, 1072, -1000, 1066, -1000, -1000, 1111,
	-1000, 60100, 67460, 77028, 2612, 2609, -1000, 51260, -1000, -1000,
	-1000, -1000, 2971, 2056, 2054, -1000, 1512, 1602, -1000, 19869,
	67460, -1000, 895, -1000, -1000, -1000, -1000, 4723, 19869, 19869,
	-1000, -1000, -1000, -1000, 1673, -1000, -1000, -1000, -1000, -45,
	-1000, -1000, 1063, 1177, 1176, 75556, 1061, -1000, 362, 67460,
	-1000, 77028, -1000, 2992, 2991, 422, 2989, 67460, 2493, -1000,
	1560, 1558, 1557, 1547, 1537, 1536, 1527, 1523, 220, 2550,
	2549, -1000, -1000, 253, -1000, 2786, -1000, -1000, 4723, -1000,
	-1000, 23639, 37211, -1000, 1497, 1500, -1000, 1465, 2257, 1768,
	1772, -1000, -1000, -1000, 2960, 1267, 1167, 1080, 1497, 1006,
	447, 1056, 2783, 2781, 632, 568, -1000, 1497, 1006, 1338,
	652, -1000, 1472, 1471, 1469, 1463, 1461, 1456, 1455, 1434,
	641, -377, -1000, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, -200, -203, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 32687, 1497, 1497, -276,
	-1000, 1122, 787, -1000, -1000, 19115, 2548, -1000, 19115, -1000,
	-1000, -1000, -1000, -1000, 77028, 2532, 600, -1000, 2342, -1000,
	-1000, 1154, 77028, 77028, 77028, 4685, 1954, 2523, 4669, 1937,
	2523, 4625, 1749, 2523, 2866, 13837, 22885, 2256, 2491, 2254,
	2251, -1000, 56, 2659, -1000, -1000, -1000, 60100, -1000, -1000,
	-1000, -1000, 2971, 54204, 14591, -1000, -1000, -1000, -1000, 34949,
	13837, -1000, 1565, 4723, 2946, -1000, 19869, -1000, -1000, 2191,
	2394, 2394, 2394, 2394, 2394, 1650, -1000, -1000, -1000, 403,
	1375, 403, -1000, 1375, 19869, -1000, 19869, 19869, -1000, 19869,
	19869, -1000, -1000, 19869, 4167, 3477, 3292, -270, -1000, 2489,
	1532, -1000, 19115, 2163, -1000, -1000, -1000, -1000, -1000, 19869,
	19869, 19869, 19869, -1000, -1000, -1000, -1000, -1000, 74820, -1000,
	-123, -123, -123, -123, -123, -123, -1000, -1000, -1000, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -1000, 350, 2523, -1000, 25901, 2971, 54940, 2462, 2462,
	-1000, 1148, -1000, -1000, -1000, -65, -55, -1000, -1000, -1000,
	-1000, -1000, 37211, -1000, -1000, -1000, 6882, -1000, 1497, 1497,
	1497, 409, 1497, 1497, 1497, 1497, 1497, -207, -209, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 188, 1497, 1497, 1497,
	1497, 1497, 1497, 32687, 1497, 1497, -380, 49052, 1169, 981,
	-1000, -1000, -1000, 77764, 77764, 77764, -1000, 77764, 77764, -1000,
	-1000, -1000, -1000, 49788, -1000, -1000, 1680, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2523, -491, 1927, 60100, -1000,
	2809, 1441, 39473, 3008, -1000, 2706, -1000, 2705, 2703, 2249,
	-1000, -1000, 2332, 2326, 2324, -1000, 2546, -1000, -1000, -1000,
	-1000, -1000, 2392, -1000, 2388, 2490, -1000, 2368, -428, 60100,
	-1000, -1000, 2523, 1926, 2608, -1000, -1000, -1000, -1000, 2310,
	2484, -1000, 10696, 77028, 77028, 77028, 754, -276, 737, -1000,
	67460, 414, 546, 781, 1940, -401, 2797, 60100, 67460, -1000,
	-1000, -1000, -1000, -1000, -1000, 74084, 74084, -1000, -1000, 19115,
	-1000, -1000, 2881, -1000, 4723, 2338, -1000, -1000, 4723, 4723,
	1432, 1110, -1000, 67460, 1361, 73348, 1054, 67460, 421, 273,
	-1000, 67460, 67460, 2985, 67460, 2473, 619, 2248, 2247, 2246,
	1925, 1924, 1911, 1895, 1892, -1000, 60100, 60100, 2244, -1000,
	-1000, -1000, 1406, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1426, 6158, 1772, 1414, 1402, 1398, 1395, -1000, 163, 46108,
	77764, 1161, 1013, -1000, -1000, 2523, -1000, 43161, 49788, 49788,
	49788, 77028, 2701, 2699, 77028, 49788, 49788, 77028, 49788, 957,
	2050, 2808, 1497, 107, -1000, -1000, -1000, 72612, -1000, 71876,
	847, 50524, 49788, 77028, 60100, 42425, -1000, -1000, -1000, -1000,
	71140, 1871, 77028, 77028, 70404, 69668, 68932, 68196, -1000, -261,
	858, 19115, 858, 1888, 1888, 2243, 2241, 2240, 1497, 1497,
	173, 1888, 2238, 173, 1888, 38719, 2237, 965, 858, 858,
	858, 1888, 1888, 1888, 1888, 2234, 379, 1848, 2232, 1888,
	2147, 2104, 858, -1000, -239, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1888, 2523, -1000, 412,
	886, 1053, 850, -2, 1650, 77028, 1650, 2359, -1000, -1000,
	1457, 77028, -1000, 2304, 2304, 2304, 19869, 19869, 19869, 19869,
	19869, 19869, 19869, 19869, 19869, 62308, -1000, -1000, 1144, -4,
	77028, -1000, 24, -1000, -1000, -1000, 2969, -1000, 2481, -1000,
	-1000, -1000, 2191, -1000, 19869, 4723, -1000, -123, -123, -123,
	-123, -123, 2191, 2539, 2539, 2539, -1000, 2539, 2541, 140,
	-1000, -1000, -1000, 2539, 160, 2539, 158, -1000, 2191, 2191,
	2191, 2064, 3114, 2831, 2792, 2117, 2064, 19869, 19869, 19869,
	2523, -122, -1000, 1650, 19115, 2732, 2702, 2064, 2064, -1000,
	-1000, 2042, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2604, 2604, 25901, 2866, -1000, 22131, -1000, 879, -1000,
	-1000, 77028, 2471, -1000, 1497, 1282, 1497, 1497, 2964, 2462,
	-1000, -1000, 1339, -1000, -1000, -1000, -1000, 858, 858, 858,
	1497, 2794, 1497, 1888, 1888, 2229, 2228, 2227, 1497, 1497,
	173, 1888, 2226, 173, 1888, 38719, 2223, 965, 858, 858,
	858, 1888, 1888, 1888, 1888, 2222, 379, -1000, 1827, 2219,
	1888, 2075, 1932, 858, -1000, -250, 1888, 2523, -262, 2355,
	-1000, 2539, 2539, 2696, 1240, -1000, -1000, -1000, -1000, -1000,
	-1000, 2538, -1000, -1000, 19869, 2883, -1000, 2537, 1394, -1000,
	-1000, -1000, -1000, 950, 2218, -1000, -1000, 19869, -1000, -1000,
	2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
	2523, 2523, 2523, -72, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2215, -1000, 1863, -1000, 1859, -1000, -1000,
	-1000, 2536, -1000, 2882, -1000, 60100, 258, 64516, -1000, 10696,
	10696, 10696, -2, 426, -1000, 1662, -1000, -1000, -1000, 2214,
	2211, 2208, 2338, 554, 1658, 443, -1000, 2868, 2863, 2207,
	2206, 2205, 2204, 1855, -1000, -1000, 2580, 77028, 2479, -1000,
	1650, 1602, 24, 60100, 273, -1000, -1000, -1000, 67460, 273,
	-1000, -1000, 455, 2473, 2473, 67460, 2473, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2353, 2351, -1000, -1000,
	-1000, -1000, -1000, -1000, 1286, 1246, 374, 373, -230, -1000,
	405, 361, -1000, -1000, -1000, 50524, 960, 10696, 10696, 2577,
	1240, -1000, 2695, 1386, -1000, -1000, -1000, -1000, -1000, -1000,
	49788, 2477, -430, -432, 1292, -450, -1000, -1000, -1000, -1000,
	50524, 1497, 1375, 2793, 660, 366, 643, 354, -1000, -1000,
	-1000, -1000, 960, 1221, 1050, -1000, 2693, 49788, 1047, 635,
	349, -1000, 1730, -277, 2477, -1000, 2477, -1000, 2477, -1000,
	2477, -1000, -1000, -1000, 1650, -1000, -1000, -1000, -1000, -1000,
	-1000, 2203, 2202, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -205, -1000, 38719, 412, -1000, 1843, 1842, 1839, 1828,
	1703, -1000, 2603, 78500, -1000, 669, 2602, 1479, 950, 2348,
	-1000, 77028, -1000, -1000, -1000, -1000, -1000, 4723, 4723, 2391,
	4723, 4723, 2365, 4723, 4723, 2319, -1000, 34195, 2523, -1000,
	-14, -1000, 2966, 2959, -1000, -1000, 4723, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 433, 417, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19869, 19869, 19869,
	19869, -1000, 2064, 2064, 2064, 19869, 2191, 2201, 1650, 19869,
	19869, -1000, -1000, 1393, -1000, -1000, 2854, -1000, 2386, 62308,
	2191, 2455, 2346, 2191, 310, -1000, -1000, -1000, 61572, 54940,
	2476, -1000, 2523, 2342, 2964, 25901, 19115, 19115, 19115, 19115,
	2870, -1000, -1000, -1000, -1000, 1375, 1497, 33441, -1000, -1000,
	-1000, -1000, -1000, 2200, 2197, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -211, -1000, 38719, -1000, 237, 49052, 2852, 2852,
	77764, 77764, 77028, 2064, 2523, 77028, -1000, -1000, -1000, -1000,
	-1000, 2064, -1000, -1000, 2308, 2285, 49052, 353, -1000, -401,
	2928, -1000, 258, -1000, 2193, 822, 840, -1000, 821, 815,
	811, 808, 801, -1000, -1000, -1000, -1000, 2602, 694, 426,
	-1000, -58, 1821, 1429, 2779, 551, -1000, -1000, -1000, -1000,
	345, 546, -1000, 780, 2190, 779, 2189, -1000, -1000, 541,
	-1000, -1000, 2747, 2340, -1000, -14, -1000, 2872, 273, 2872,
	413, 2473, -1000, -1000, -252, 1820, 19869, 2523, 2523, 771,
	2279, -1000, -1000, 2038, -1000, -1000, 2535, 77764, 77764, 2307,
	-1000, 77028, -1000, -1000, -1000, -1000, -1000, 2844, 2843, -1000,
	-1000, 960, 1375, -1000, 1375, -1000, -1000, -1000, -1000, -1000,
	49788, 77028, 49788, 1045, 49788, -1000, -1000, 2523, 1105, -1000,
	-1000, -1000, -1000, 2336, -1000, -1000, -1000, -1000, -1000, -1000,
	564, 2186, 343, -1000, -1000, 1122, 699, -1000, -1000, -1000,
	-326, -1000, -1000, 19869, 19869, 19869, -1000, 36457, 2709, 2736,
	-127, 19115, 19115, -1000, -1000, -1000, -1000, 2064, 2064, 2064,
	2064, -1000, -1000, -1000, 305, -1000, -1000, 2064, 2064, 2964,
	2958, 2686, -1000, 2532, -1000, -1000, 2455, 310, -1000, 879,
	-1000, 13083, -1000, 2870, -1000, 1650, 1650, 1650, 1650, -1000,
	-1000, 1375, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2336,
	237, -1000, 38719, 1497, 2185, 1497, 1497, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2331, -494, 19869, 2329, -1000, -1000,
	-1000, 2323, -1000, -1000, 872, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2741, 2735, 851, 886, -1000, 2184, 2177, -1000,
	726, 1857, 1241, -148, -1000, -1000, -1000, -1000, -1000, -1000,
	700, 2037, -1000, 440, -1000, -1000, 438, -1000, -1000, 2956,
	-401, 19869, -1000, 2709, -1000, 67460, 2872, -1000, -1000, 2523,
	2955, -1000, 2064, 77028, 19869, 2523, 1513, -1000, -1000, 213,
	213, 49052, 2577, 2534, -1000, 1386, 2674, 19869, -1000, -1000,
	1324, 1307, -1000, -1000, 1044, 49788, -1000, 1386, 60100, 38719,
	-1000, -1000, -1000, -1000, 886, 1345, 724, 2064, 2064, 2064,
	2282, -1000, 9261, 321, -1000, -1000, 2713, 2954, -1000, 77028,
	-1000, 1650, 2466, -1000, 1650, -1000, -1000, -1000, -1000, 2191,
	306, -309, -1000, -1000, 1444, 19115, 3007, -1000, -1000, -1000,
	310, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1812, -1000,
	2176, 2161, 972, -1000, -1000, -1000, 2064, -1000, 237, -294,
	353, 878, 81905, -1000, -1000, -1000, -1000, 1703, -1000, -1000,
	-1000, -1000, 1787, -1000, -1000, 1791, 709, 423, -1000, 2871,
	-1000, -1000, 1774, 4723, 1041, -278, -1000, -1000, 1386, -406,
	-1000, 2304, 2064, 77028, 1748, 2321, 2533, 49052, -1000, 932,
	4723, 1497, 1375, 49788, -1000, 2307, 50, -1000, 81905, 1703,
	1152, 684, 1479, -1000, -1000, -1000, 2191, 36457, 385, -457,
	-11, 2160, 2715, 2716, 2719, -1000, 2158, 2459, -1000, 2869,
	19115, -1000, 2658, -274, -331, 2191, 376, 376, 2428, 25901,
	2191, -1000, -1000, -1000, 60100, -494, -1000, 237, -1000, 408,
	-1000, 862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12329, 19115, 186, 37965,
	2033, 2032, 81905, 2272, 81905, 19115, 2031, 2028, 2712, 19869,
	81570, 563, -341, -1000, -342, -1000, -1000, -1000, 2156, -1000,
	2532, 1744, 463, 2307, 358, -1000, -1000, 2304, -1000, 237,
	49052, 2301, 913, 1375, -1000, -1000, -1000, 648, -1000, -1000,
	558, 950, -1000, 1479, -1000, 2866, -1000, -1000, 2155, -189,
	-1000, 2523, -39, 2953, 2951, -1000, 2950, 2937, -1000, 77028,
	2523, -1000, -1000, 2657, -1000, -1000, -1000, 338, -1000, 1446,
	874, 1378, -1000, 950, -1000, 2366, -1000, 2530, -1000, 410,
	997, 993, -294, -1000, 2025, 2019, -1000, 1575, 1719, -1000,
	19115, 2114, 704, 620, 7591, -1000, -1000, -1000, -1000, -1000,
	-1000, -502, -1000, 312, -503, 996, -1000, -1000, 2015, -1000,
	2980, 4723, -1000, -504, -1000, -1000, -1000, -1000, 2790, 1437,
	63780, -1000, 2523, 771, -1000, -1000, 2289, 237, 2523, -1000,
	-1000, -1000, -1000, -326, -1000, 1345, 62308, 663, 2154, 36457,
	2523, 2146, 2142, 2136, 2105, -1000, -1000, -297, 1657, -1000,
	-1000, -1000, -1000, -1000, -128, 77028, -1000, 407, 367, -1000,
	-1000, -1000, -1000, 1646, 1643, 81905, -1000, 2006, 81905, 2927,
	2926, 2913, 24, 37211, 81516, 81361, 81905, 81905, 19115, 81307,
	81905, 1668, -1000, 80972, 81905, -1000, 25901, -1000, -1000, -1000,
	-1000, 3017, 2338, 19869, 2523, 237, -1000, 20623, 81905, -1000,
	1345, -1000, 1861, 1840, 2599, 2598, 950, -1000, 2282, 36457,
	-1000, -1000, -1000, -1000, -329, 338, -1000, 2284, -1000, -1000,
	315, 1638, 81905, -1000, -505, 81905, -506, 908, 353, 1015,
	1300, -1000, 593, -1000, 1999, -507, -508, -509, 971, 19115,
	-510, 1998, -1000, -1000, 2366, 67460, 2064, 19869, -1000, 2064,
	2191, -1000, -1000, 2597, 950, -1000, 2596, 950, -63, -71,
	2595, -1000, 2282, -334, -1000, 2594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 80916, 61572, -1000, -511, 80763, -512, 7093,
	-1000, -1000, -1000, 80709, -1000, -1000, -1000, -1000, 598, -1000,
	-1000, 2842, -1000, -1000, 11043, 10685, 277, 81905, 2001, 10419,
	2344, -1000, -1000, 2338, -257, 2064, -1000, -1000, -1000, 314,
	2592, -387, 2591, 311, 307, -1000, -1000, -87, -1000, -1000,
	2589, 2588, 2984, -1000, -513, -1000, -1000, 10209, 1637, 81905,
	1027, 81905, 1556, -1000, 19115, -1000, 1015, -1000, 19869, 1995,
	587, 19115, -514, 581, 573, 1963, -1000, 1727, -257, 302,
	-388, 2587, 2586, -1000, -1000, -1000, 3006, -1000, 2987, 1173,
	1173, 10025, 1613, -1000, -1000, -519, 1024, 81905, -1000, 1907,
	-1000, 4723, -1000, 1961, 1817, 9817, -1000, -1000, -1000, -1000,
	-1000, 271, -389, -1000, -1000, -1000, 986, 1784, -1000, -1000,
	-1000, 8691, -1000, -520, 81905, -1000, 577, 572, -1000, -1000,
	-1000, -1000, -1000, 1018, 8455, -522, 1829, 1815, -1000, 1016,
	81905, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3506, 3505, 3503, 26, 3502, 284, 296, 289, 32,
	2766, 3500, 301, 3499, 285, 3498, 28, 17, 11, 30,
	3497, 3153, 3151, 3147, 3145, 20, 3496, 59, 3494, 3489,
	3143, 3488, 3487, 3136, 3486, 3485, 3484, 3483, 3479, 3478,
	3476, 3472, 3471, 3134, 3132, 3130, 3111, 3469, 3468, 3466,
	3109, 3107, 3105, 3465, 3463, 76, 51, 36, 3462, 5,
	3458, 197, 224, 3457, 4, 3456, 3455, 8, 198, 3454,
	3447, 72, 3102, 3446, 3444, 3443, 3437, 3436, 3435, 149,
	3432, 3418, 3094, 3416, 3092, 3415, 3089, 3060, 3056, 3053,
	3043, 196, 3414, 3034, 3032, 3030, 3412, 2731, 230, 454,
	228, 3410, 132, 133, 1717, 3409, 247, 3408, 210, 3407,
	3406, 3390, 453, 225, 3389, 166, 3388, 391, 165, 167,
	170, 385, 3386, 63, 169, 318, 3385, 7, 3383, 121,
	3382, 222, 3381, 217, 2801, 195, 229, 193, 3380, 3377,
	150, 3374, 3372, 3371, 209, 3370, 3369, 235, 574, 3368,
	3362, 184, 3361, 144, 3360, 175, 3359, 3357, 3356, 3355,
	233, 115, 92, 176, 135, 3354, 161, 3352, 3351, 3350,
	3349, 3347, 3346, 85, 33, 3348, 3345, 151, 190, 3344,
	65, 38, 48, 3343, 3342, 53, 3341, 3340, 126, 3338,
	3337, 128, 3336, 189, 80, 3334, 3333, 3328, 3327, 114,
	91, 3326, 25, 3325, 186, 3324, 3322, 3320, 3317, 3316,
	104, 3314, 86, 3313, 187, 216, 221, 3311, 3310, 54,
	52, 3309, 61, 34, 19, 110, 40, 105, 88, 183,
	173, 136, 159, 50, 158, 55, 156, 452, 3307, 232,
	174, 208, 111, 37, 3306, 3305, 199, 3303, 109, 202,
	185, 188, 200, 3302, 3301, 3300, 237, 3299, 181, 572,
	3298, 122, 244, 231, 2737, 236, 140, 3296, 3295, 3294,
	3293, 116, 58, 145, 3288, 35, 234, 238, 239, 47,
	112, 3287, 1164, 5738, 6500, 8165, 24, 60, 69, 6068,
	42, 204, 3286, 75, 3285, 3283, 3282, 3904, 171, 49,
	56, 160, 3281, 164, 43, 87, 3279, 3276, 3275, 3273,
	3271, 3269, 162, 129, 3268, 3267, 66, 3266, 3265, 46,
	41, 16, 15, 3264, 147, 214, 213, 212, 3263, 205,
	67, 3262, 3260, 180, 137, 3259, 3257, 3241, 3240, 182,
	127, 206, 3238, 201, 123, 131, 3237, 125, 3235, 3233,
	113, 6975, 134, 3232, 3231, 141, 130, 152, 191, 3230,
	3225, 3224, 70, 3220, 3218, 2, 3217, 108, 57, 64,
	106, 39, 163, 3216, 3215, 211, 3214, 3213, 153, 178,
	3212, 138, 139, 68, 3211, 74, 155, 3210, 168, 3,
	9, 6, 3209, 3205, 3204, 3203, 3202, 3201, 3195, 3193,
	118, 3191, 3190, 102, 99, 81, 3189, 3186, 3184, 3183,
	3181, 192, 177, 82, 219, 154, 14, 3180, 3179, 10,
	3177, 179, 3176, 96, 3173, 3171, 124, 3170, 3169, 73,
	103, 44, 98, 3167, 3164, 117, 157, 3163, 100, 3162,
	3161, 223, 2354, 3157, 580, 3156, 207, 172, 84, 93,
	3149, 83, 107, 3141, 101, 3139, 23, 62, 3127, 13,
	22, 511, 3100, 0, 3637, 203, 3098, 143, 3096, 3073,
	220, 3046,
}

var yyR1 = [...]int{
	0, 462, 462, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 244, 244, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 127, 127, 8, 8,
	126, 126, 126, 241, 241, 241, 241, 238, 238, 128,
	128, 125, 125, 133, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 465, 465, 142, 142, 140, 140,
	141, 141, 236, 236, 19, 19, 19, 246, 246, 251,
	251, 251, 254, 254, 254, 254, 224, 225, 226, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 453, 453, 453, 454, 454, 454,
	454, 454, 279, 279, 279, 279, 417, 417, 433, 433,
	433, 434, 434, 432, 432, 432, 432, 432, 436, 436,
	437, 437, 435, 435, 435, 435, 439, 439, 440, 440,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 420, 420, 420, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 442, 442, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 444, 444, 445, 445, 446, 446, 446, 446,
	447, 447, 447, 447, 447, 448, 448, 448, 448, 448,
	448, 448, 449, 449, 450, 450, 3, 2, 398, 398,
	399, 399, 400, 400, 400, 400, 401, 401, 402, 402,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	31, 31, 31, 31, 31, 31, 278, 278, 274, 274,
	274, 276, 276, 277, 277, 277, 419, 419, 419, 413,
	413, 413, 415, 415, 414, 414, 414, 416, 416, 421,
	421, 421, 421, 421, 424, 424, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 425, 425, 425, 422,
	422, 161, 161, 426, 426, 431, 431, 427, 427, 428,
	428, 430, 430, 430, 429, 429, 429, 429, 316, 316,
	180, 180, 69, 69, 70, 70, 70, 213, 213, 213,
	20, 20, 20, 20, 20, 20, 26, 26, 28, 28,
	28, 28, 56, 56, 57, 29, 29, 29, 29, 58,
	58, 59, 32, 32, 32, 32, 32, 32, 66, 66,
	66, 65, 65, 64, 64, 64, 64, 64, 64, 34,
	35, 36, 466, 466, 466, 60, 60, 37, 37, 37,
	40, 40, 40, 41, 41, 41, 38, 39, 42, 30,
	30, 30, 30, 67, 67, 62, 62, 61, 61, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 33, 33, 33, 33, 33, 33, 25, 397, 397,
	397, 55, 55, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 77, 77, 353, 354,
	354, 354, 354, 354, 354, 340, 340, 341, 341, 341,
	341, 341, 341, 330, 330, 330, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 304, 304, 304, 304, 308, 308, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 307, 307, 307, 307, 307, 307,
	307, 307, 309, 309, 309, 309, 309, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 311, 311, 311, 311, 311, 311, 311,
	311, 339, 339, 313, 313, 312, 312, 312, 333, 333,
	334, 334, 334, 331, 331, 331, 332, 332, 317, 317,
	317, 317, 317, 317, 318, 335, 319, 319, 320, 320,
	320, 320, 320, 320, 321, 321, 322, 322, 322, 324,
	324, 329, 329, 328, 328, 328, 328, 328, 328, 325,
	325, 325, 325, 325, 325, 326, 326, 326, 327, 338,
	338, 338, 338, 338, 314, 46, 46, 52, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 375, 375, 380, 380, 268, 268,
	269, 269, 53, 53, 53, 53, 53, 167, 167, 54,
	54, 54, 376, 376, 378, 378, 378, 378, 378, 378,
	378, 378, 377, 377, 379, 379, 342, 342, 371, 371,
	370, 370, 369, 369, 369, 369, 369, 369, 369, 351,
	351, 352, 352, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 346, 346, 346, 345, 345, 347, 347, 350,
	350, 350, 368, 368, 367, 367, 343, 343, 343, 381,
	381, 381, 381, 381, 101, 101, 344, 344, 344, 382,
	348, 348, 349, 349, 349, 390, 391, 389, 389, 389,
	389, 389, 168, 168, 168, 373, 373, 373, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 102, 102, 102, 103,
	103, 323, 323, 355, 355, 355, 355, 355, 461, 461,
	461, 356, 356, 356, 356, 356, 356, 452, 452, 451,
	451, 451, 357, 357, 358, 359, 359, 359, 360, 360,
	362, 362, 275, 275, 363, 363, 364, 364, 361, 361,
	361, 365, 365, 394, 394, 394, 393, 393, 72, 72,
	72, 72, 74, 74, 73, 73, 73, 81, 81, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 71, 71, 288, 288, 76, 212, 212, 212,
	273, 273, 387, 387, 388, 388, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 384, 384, 383,
	383, 385, 385, 75, 75, 75, 75, 162, 162, 22,
	22, 78, 78, 418, 418, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 392, 392, 392, 24, 24,
	82, 83, 83, 83, 287, 287, 287, 287, 287, 86,
	86, 86, 86, 239, 239, 240, 240, 87, 87, 87,
	87, 88, 88, 88, 88, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 122, 260,
	260, 259, 259, 258, 258, 258, 261, 261, 261, 261,
	302, 302, 302, 85, 85, 85, 97, 97, 92, 92,
	95, 95, 95, 95, 98, 98, 99, 99, 100, 100,
	93, 94, 43, 44, 44, 44, 44, 45, 90, 90,
	90, 91, 91, 91, 91, 112, 112, 113, 113, 468,
	468, 468, 89, 469, 104, 105, 105, 107, 107, 107,
	108, 108, 108, 109, 109, 109, 265, 265, 265, 265,
	265, 265, 265, 106, 106, 106, 116, 116, 120, 120,
	120, 120, 119, 119, 119, 119, 215, 215, 220, 294,
	294, 196, 196, 216, 216, 221, 221, 221, 222, 222,
	223, 223, 223, 223, 223, 218, 218, 217, 217, 219,
	183, 183, 183, 183, 181, 181, 181, 181, 181, 181,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 179, 179, 292, 292, 292,
	292, 291, 291, 291, 124, 124, 129, 129, 131, 131,
	131, 131, 131, 131, 131, 131, 134, 198, 198, 470,
	470, 152, 152, 153, 153, 153, 153, 154, 154, 154,
	154, 154, 156, 156, 156, 157, 157, 157, 157, 157,
	157, 158, 159, 159, 155, 155, 155, 177, 177, 234,
	234, 235, 235, 233, 233, 237, 237, 130, 130, 132,
	132, 132, 132, 137, 137, 138, 138, 139, 139, 299,
	299, 299, 143, 143, 143, 145, 144, 144, 144, 144,
	144, 144, 146, 146, 455, 456, 456, 457, 457, 457,
	457, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 459, 459, 460, 460, 147, 147, 149, 150, 150,
	148, 148, 148, 148, 148, 148, 160, 160, 151, 163,
	163, 163, 163, 164, 164, 121, 121, 121, 121, 121,
	121, 121, 121, 257, 257, 166, 166, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 192, 192, 192,
	192, 192, 192, 169, 169, 169, 169, 169, 169, 169,
	115, 115, 193, 193, 193, 136, 135, 135, 118, 118,
	117, 117, 194, 194, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	186, 186, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	191, 191, 191, 191, 191, 467, 467, 188, 188, 187,
	187, 187, 187, 187, 187, 111, 111, 111, 111, 111,
	300, 300, 300, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 68, 68, 205, 205, 114,
	114, 203, 203, 204, 206, 206, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 176, 176, 176, 207, 207, 195,
	195, 123, 208, 208, 209, 210, 210, 211, 211, 214,
	227, 227, 227, 228, 228, 228, 228, 178, 178, 178,
	229, 229, 229, 229, 171, 171, 170, 170, 170, 172,
	172, 172, 172, 173, 173, 471, 471, 232, 232, 231,
	231, 230, 230, 230, 230, 230, 230, 230, 242, 242,
	197, 197, 200, 200, 199, 201, 243, 243, 248, 248,
	248, 248, 245, 245, 249, 249, 249, 249, 252, 252,
	253, 253, 253, 250, 250, 250, 250, 247, 247, 247,
	296, 296, 296, 296, 255, 255, 264, 264, 262, 262,
	263, 263, 256, 256, 315, 315, 315, 270, 270, 271,
	271, 272, 272, 266, 266, 266, 266, 267, 267, 293,
	293, 289, 289, 295, 295, 290, 290, 297, 297, 298,
	298, 298, 298, 395, 395, 396, 396, 396, 336, 336,
	407, 407, 337, 337, 408, 408, 409, 409, 404, 404,
	405, 405, 406, 406, 406, 47, 410, 410, 411, 411,
	412, 412, 412, 412, 48, 49, 49, 49, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 286,
	286, 286, 286, 286, 286, 283, 283, 283, 283, 283,
	283, 284, 284, 284, 463, 464,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 0, 1, 4, 3, 3, 3,
	6, 6, 5, 5, 5, 5, 4, 3, 5, 1,
	3, 1, 3, 3, 5, 0, 5, 0, 3, 0,
	3, 0, 3, 4, 0, 1, 1, 3, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 8,
	4, 7, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 5, 7, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	2, 5, 0, 1, 2, 1, 3, 5, 7, 8,
	7, 9, 10, 7, 9, 10, 2, 2, 2, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 4, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 6, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 3, 2,
	3, 3, 2, 3, 3, 2, 3, 4, 2, 2,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 3, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	3, 2, 2, 4, 3, 1, 0, 1, 3, 3,
	3, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 5, 5, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	2, 2, 3, 3, 0, 3, 0, 3, 1, 1,
	0, 1, 5, 4, 2, 3, 3, 0, 1, 0,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 3, 5, 5, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 3, 3, 1, 1, 0,
	1, 1, 1, 3, 5, 3, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 1, 3, 3, 3, 3, 2, 1, 11,
	12, 12, 13, 13, 0, 1, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 2, 3, 3, 3,
	3, 4, 5, 3, 3, 4, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 4, 4, 3, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 6, 1, 4, 5, 5, 6,
	0, 1, 0, 3, 1, 1, 0, 2, 0, 8,
	9, 0, 2, 0, 1, 2, 0, 2, 1, 1,
	1, 1, 4, 3, 7, 5, 5, 1, 3, 5,
	4, 8, 10, 9, 2, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 3, 3, 6, 5, 4, 4,
	5, 5, 8, 4, 5, 7, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 3, 3, 3, 4,
	5, 5, 3, 7, 6, 5, 2, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 4, 4, 3,
	5, 3, 1, 1, 1, 1, 6, 0, 1, 2,
	0, 1, 0, 1, 1, 2, 5, 3, 4, 4,
	4, 4, 4, 4, 3, 7, 6, 8, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 3, 1,
	3, 8, 8, 8, 11, 12, 15, 0, 3, 3,
	3, 3, 5, 3, 5, 6, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 8, 5, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 4, 1, 3, 1, 1, 2, 2, 4,
	4, 3, 3, 3, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 4, 3, 2, 2, 6, 2,
	4, 3, 3, 4, 4, 5, 8, 6, 3, 4,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 4, 2, 4, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 4, 1, 0, 1, 2, 1,
	2, 4, 4, 5, 0, 1, 0, 3, 0, 2,
	4, 4, 2, 3, 4, 4, 5, 3, 4, 5,
	4, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 0, 2, 2, 2,
	2, 2, 2, 0, 1, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 2,
	2, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	5, 1, 2, 3, 1, 1, 2, 2, 4, 0,
	1, 2, 6, 1, 3, 2, 4, 1, 1, 1,
	1, 1, 5, 5, 8, 5, 5, 8, 5, 5,
	8, 2, 2, 2, 3, 4, 4, 0, 1, 3,
	1, 0, 3, 1, 3, 1, 3, 4, 6, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 2, 2, 2, 12, 1, 3, 3, 3, 6,
	7, 2, 3, 3, 4, 4, 5, 5, 8, 8,
	3, 3, 4, 3, 4, 1, 3, 3, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 4, 6, 6,
	6, 4, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 4, 4, 4, 2,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 6,
	3, 4, 2, 2, 2, 0, 2, 1, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 2, 1, 2, 1, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 1, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 0, 2, 1, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 1, 1, 1,
	0, 2, 4, 4, 1, 4, 1, 3, 4, 1,
	4, 3, 6, 2, 3, 1, 1, 0, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 0, 5,
	1, 3, 2, 3, 3, 1, 1, 3, 3, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 4, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 0, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 1, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 2, 0, 4, 4, 3, 1, 3, 2, 4,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -462, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -134, -463, 12, -128, 34, -77, 190,
	-453, -74, -73, -75, -76, 193, 192, 230, 194, 645,
	368, 646, 223, 72, 445, -95, 448, 449, -468, 306,
	307, 25, 42, 450, 452, 35, 36, 246, 334, 336,
	197, 446, 428, 429, 359, 693, -6, 651, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	762, -210, 20, -104, -469, -210, -10, -9, -4, 651,
	-104, -110, 14, 15, 13, 556, -104, -353, 28, -3,
	117, 76, -8, 11, -267, -278, 97, 547, 198, -276,
	330, 332, 208, -264, -266, -274, 256, 266, 49, 210,
	209, 267, 199, 330, -264, 200, 202, 547, 198, 239,
	238, 330, 332, 271, 645, 199, -148, -297, -283, -285,
	-284, 348, 82, -282, 576, 580, 271, 583, 584, 589,
	338, 90, 52, 368, 570, 360, 369, 220, 525, 571,
	331, 337, 340, 361, 734, 370, 372, 373, 568, 569,
	54, 202, 558, 559, 562, 213, 749, 353, 221, 648,
	267, 757, 752, 754, 342, 755, 515, 607, 445, 464,
	456, 483, 649, 705, 279, 301, 453, 385, 532, 608,
	345, 294, 366, 706, 321, 289, 521, 527, 304, 448,
	609, 610, 611, 541, 247, 277, 707, 454, 298, 300,
	299, 261, 575, 305, 41, 226, 480, 658, 646, 256,
	708, 614, 701, 613, 250, 283, 612, 328, 40, 32,
	615, 249, 544, 108, 276, 709, 376, 529, 616, 501,
	377, 245, 272, 274, 290, 711, 653, 349, 232, 528,
	430, 476, 359, 127, 254, 316, 378, 712, 502, 506,
	713, 533, 335, 315, 619, 714, 715, 379, 657, 284,
	716, 201, 341, 620, 280, 717, 257, 443, 535, 346,
	500, 211, 650, 222, 56, 236, 536, 504, 622, 510,
	513, 431, 375, 432, 718, 719, 720, 721, 357, 355,
	624, 356, 358, 626, 268, 296, 654, 623, 656, 61,
	196, 660, 508, 507, 509, 297, 674, 531, 488, 486,
	722, 723, 350, 217, 724, 725, 487, 23, 726, 727,
	539, 320, 352, 728, 729, 730, 625, 293, 630, 606,
	731, 732, 530, 503, 505, 255, 126, 645, 278, 733,
	354, 526, 363, 661, 652, 339, 291, 631, 735, 381,
	292, 235, 228, 540, 425, 426, 441, 442, 371, 736,
	429, 737, 738, 739, 740, 333, 332, 449, 364, 632,
	450, 273, 302, 655, 741, 633, 634, 742, 743, 265,
	248, 543, 534, 60, 517, 512, 367, 382, 455, 427,
	438, 433, 434, 436, 437, 440, 439, 435, 444, 520,
	446, 275, 242, 635, 636, 637, 428, 638, 12, 295,
	347, 639, 640, 641, 524, 365, 303, 266, 269, 491,
	237, 744, 745, 478, 479, 447, 240, 230, 121, 542,
	326, 700, 330, 383, 288, 59, 243, 53, 746, 747,
	270, 244, 659, 287, 451, 344, 662, 199, 82, -287,
	-282, -285, -286, -283, -284, 348, 231, 58, 95, 63,
	62, 82, -282, 645, 143, 484, 532, 190, 522, 523,
	529, -346, 530, 238, 425, 367, 241, -302, 199, -260,
	240, 521, 335, 354, 580, 244, 245, 272, 426, 432,
	200, 201, 37, 534, 533, 525, -297, -97, 451, -97,
	-97, 203, 451, -112, 232, 194, -148, 231, -67, 82,
	308, -67, 34, 82, -160, -289, -297, 82, -282, 41,
	82, 450, 524, 524, 84, 652, 247, 26, -442, -416,
	363, -441, -414, 191, 190, 15, 192, 271, 368, 369,
	334, 200, 13, 35, 734, 218, 370, 371, 11, 223,
	372, 373, 239, 14, 374, -443, -419, 386, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 81, 82, -282, 26,
	-442, -416, 363, 371, 425, 447, 425, 425, -269, -268,
	384, 510, 143, -127, 704, -125, -133, -299, -297, -283,
	-284, -198, -470, 252, 547, -256, 330, -276, 204, -129,
	-131, -132, -152, -135, 702, -463, -130, -455, -148, -136,
	82, 605, -108, 10, -107, -109, 9, 8, -108, -228,
	22, 21, -265, -105, -228, -464, 78, -464, -127, -119,
	134, -121, -297, -165, 100, -175, 33, 29, -174, 348,
	231, -166, -202, -283, -201, -136, 143, -301, 132, 133,
	140, 101, 186, -186, -184, -185, -187, -189, -190, 226,
	478, 479, 81, 83, 91, 84, 85, 86, 87, 92,
	93, 94, -289, -285, -284, -281, 576, 580, 583, 584,
	589, -199, -463, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 66, 67, 574, 198, 557,
	558, 481, 559, 13, 560, 561, 562, 647, 220, 566,
	103, 55, 325, 548, 549, 553, -191, 550, 554, 555,
	568, 569, 570, 571, 205, 547, 138, 556, 593, 594,
	595, 596, 597, 598, 599, 600, 602, 603, 601, 577,
	578, 579, 581, 582, 585, 586, 587, 588, 590, 591,
	592, 676, 195, 191, 194, 99, 28, 30, 677, 253,
	102, 462, 496, 565, 21, 25, 214, 197, 484, 212,
	142, 207, 215, 310, 312, 190, 70, 678, 545, 311,
	522, 672, 669, 671, 670, 475, 473, 309, 679, 15,
	31, 224, 260, 680, 471, 192, 251, 106, 107, 681,
	46, 45, 8, 313, 225, 319, 472, 682, 683, 24,
	73, 216, 16, 210, 241, 756, 684, 334, 18, 125,
	19, 685, 666, 668, 667, 204, 119, 200, 748, 68,
	258, 686, 460, 465, 466, 467, 468, 469, 461, 96,
	687, 688, 116, 324, 64, 605, 37, 246, 702, 563,
	323, 689, 43, 42, 495, 499, 494, 322, 511, 117,
	22, 551, 552, 35, 690, 691, 234, 498, 459, 493,
	703, 692, 664, 263, 71, 384, 474, 760, 38, 74,
	229, 380, 351, 47, 97, 20, 259, 69, 39, 572,
	122, 761, 477, 206, 238, 693, 537, 262, 694, 123,
	470, 704, 218, 118, 452, 193, 362, 307, 219, 329,
	336, 695, 252, 124, 523, 663, 696, 567, 34, 223,
	306, 458, 208, 697, 264, 318, 308, 317, 698, 699,
	343, 48, 758, 675, 199, 44, 105, 497, 457, 492,
	203, 564, 239, 314, 9, 49, 36, 518, 14, 374,
	72, 75, 485, 482, 490, 489, 209, 759, 17, 327,
	573, 651, 538, 98, 673, 519, 546, -104, -104, -104,
	-245, 447, -252, -249, 533, 534, -250, -253, -247, -202,
	510, 731, 732, 532, 484, 531, -289, -297, -283, 348,
	231, 143, 577, 578, 579, 103, 481, 557, 593, 548,
	550, 545, 549, 547, 33, 594, 29, 94, 595, 574,
	205, 13, 186, 581, 582, 596, 597, 598, 66, 551,
	552, 647, 138, 100, 599, 600, 92, 602, 603, 325,
	556, 67, 601, 198, 587, 586, 585, 588, 560, 561,
	93, 553, 554, 555, 55, 591, 590, 592, -2, -6,
	-463, -148, -354, -341, -344, -289, -283, -285, -286, 227,
	-284, 215, -382, 82, -282, 212, -210, -104, 200, 202,
	556, -263, 205, -263, 239, 238, 271, -277, 264, -263,
	-263, 735, 199, -276, 109, 109, -78, -148, -418, -413,
	-419, 199, -289, -262, 205, -262, -262, -262, -262, -262,
	-262, -262, 82, -287, -148, 187, -83, -148, -140, 16,
	16, 75, 75, 82, -287, 82, 431, 375, 34, -261,
	117, 17, 547, 198, 199, 238, 239, 202, 271, -261,
	-348, 16, 119, 242, 242, 242, 242, 242, 243, 242,
	-259, 524, 526, 527, 528, -258, 16, 119, 17, -122,
	117, 24, -463, -228, -228, -258, 242, 135, -99, 99,
	-99, 82, 450, 203, -113, 233, -112, -113, -177, -155,
	28, 6, 7, 109, 34, 34, 81, 59, 34, -62,
	-61, -63, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 34, -397, 76, 187, -336, 510,
	82, -410, -411, -148, 84, 84, 74, 354, 74, 77,
	203, 77, 74, -444, 364, 76, -444, 332, 364, 365,
	266, 330, 202, -444, -444, 332, -444, -444, -444, 351,
	-444, -444, 524, -444, -444, -444, 366, 367, -444, 522,
	202, -444, -444, -444, -444, -444, 79, 74, 77, 354,
	74, 16, 74, 427, 430, 537, 651, -54, 443, 444,
	-167, 26, -374, 143, 376, 377, 378, 379, 375, 354,
	380, 381, 382, 242, 383, 199, 524, 375, -6, -125,
	77, -232, -463, 77, -199, -463, 82, -329, -328, -325,
	-326, -327, -324, 33, 199, -262, 271, -143, -145, -144,
	-146, 64, 68, 70, 65, 66, 67, 525, 71, -272,
	28, -135, -463, -124, -9, -134, -129, -463, -153, 122,
	-163, -272, -154, 72, 204, 73, 28, -155, -156, -157,
	-158, -159, 6, 7, 54, -463, -463, -7, -8, 26,
	27, -14, -7, -12, -14, 26, 27, 26, 27, -7,
	-229, 24, 35, -178, 84, 87, -202, -211, -214, -121,
	-297, 58, -116, 26, 27, 65, 57, 63, 62, -225,
	89, 16, -292, 99, 97, 98, 116, -291, 28, 82,
	81, -287, 187, -121, -169, 119, 100, 117, 118, 102,
	129, 128, 139, 132, 133, 134, 135, 136, 137, 138,
	130, 131, 142, 109, 110, 111, 112, 113, 114, 115,
	-257, -463, -136, -463, 187, -463, 187, 188, 189, 187,
	-175, -175, -175, -175, -175, -175, -175, 81, 81, 81,
	-463, 187, 187, 187, -463, -463, -463, -463, -463, -194,
	-121, 651, -463, 199, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -205,
	-121, -463, -463, -467, -463, -467, -467, -188, -467, -463,
	-188, -188, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -188, -188, -188, -463, -256, -256, 16,
	-140, -141, -148, -151, -297, 77, -246, -251, 535, 537,
	447, -250, -250, -296, -289, 81, 33, 143, -352, 109,
	120, 34, 187, -210, 78, 77, -304, -308, -310, -309,
	-311, -306, -307, -68, 488, 486, 482, 481, 484, 487,
	143, 485, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 34, 226, 478, 479, 480, 662, 502,
	503, 504, 505, 506, 507, 508, 509, 456, 483, 649,
	457, 458, 459, 460, 461, 462, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, -304,
	-304, -304, -304, -304, -288, -382, 82, -287, 76, -228,
	-265, -289, -148, -278, 208, -276, 82, 100, 82, -147,
	-289, -297, -160, -263, 265, -422, -421, -413, -416, 675,
	-263, -277, -413, 270, 268, 269, 77, 203, 77, 203,
	79, -262, 74, -142, -148, 29, 82, 82, -147, -160,
	-415, -413, -416, -161, -289, -297, -298, -297, -280, -285,
	-286, 676, 195, 26, 191, 194, 99, 28, 30, 677,
	253, 102, 462, 143, 577, 578, 579, 496, 565, 21,
	25, 214, 103, 197, 481, 484, 212, 142, 207, 215,
	310, 312, 557, 593, 190, 70, 678, 548, 550, 545,
	549, 311, 547, 522, 672, 669, 671, 670, 475, 473,
	309, 33, 679, 15, 594, 31, 224, 260, 27, 680,
	136, 471, 192, 604, 251, 106, 107, 681, 46, 45,
	8, 29, 313, 225, 94, 319, 595, 472, 682, 683,
	24, 73, 216, 16, 210, 241, 756, 684, 334, 18,
	574, 125, 19, 685, 666, 668, 667, 205, 204, 119,
	200, 748, 68, 258, 13, 686, 460, 465, 466, 467,
	468, 469, 461, 186, 96, 687, 688, 116, 324, 64,
	581, 582, 605, 50, 37, 246, 596, 597, 702, 598,
	563, 323, 689, 43, 42, 495, 499, 494, 322, 511,
	66, 117, 22, 551, 552, 35, 690, 691, 647, 234,
	498, 459, 493, 703, 692, 664, 138, 263, 71, 100,
	384, 599, 600, 92, 474, 760, 38, 74, 229, 380,
	351, 47, 97, 20, 259, 69, 39, 572, 122, 761,
	602, 477, 206, 238, 693, 537, 262, 694, 123, 603,
	470, 704, 218, 118, 452, 193, 325, 556, 362, 307,
	219, 329, 336, 67, 695, 252, 124, 601, 198, 523,
	663, 11, 696, 567, 34, 223, 306, 458, 208, 697,
	264, 318, 308, 317, 698, 57, 699, 343, 48, 587,
	586, 585, 588, 758, 65, 560, 561, 675, 199, 44,
	105, 497, 457, 492, 203, 564, 239, 93, 314, 9,
	49, 36, 518, 14, 374, 72, 75, 553, 554, 555,
	55, 485, 482, 490, 591, 489, 590, 592, 209, 759,
	104, 17, 327, 573, 651, 538, 98, 673, 519, 14,
	192, 77, 81, -240, 82, -287, 81, -240, -239, -240,
	-239, 242, -261, 81, -301, -121, -263, -263, -148, -148,
	-148, -148, -148, -148, -261, -261, -261, -261, -258, 16,
	-258, -261, -297, -297, -121, -175, -413, 549, 134, -261,
	-297, -100, -98, 217, -98, -100, 82, 82, 450, -91,
	-4, -18, -16, -17, -113, -9, 38, 28, 28, 82,
	-62, -62, 81, -62, 77, 109, -62, -177, 78, -194,
	-289, -395, 748, 77, -412, 28, 537, 538, 511, -446,
	199, 241, 238, 74, -446, -441, 371, -415, -414, -413,
	-444, -445, -289, -444, -444, -444, 524, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -419, -446, 334, 77,
	-446, -415, -413, 203, -377, -379, 441, 442, 538, 539,
	454, 375, 375, 375, 375, 375, 375, -375, -140, 651,
	-375, -140, 203, 253, -133, 28, -231, -230, -290, -283,
	-284, -285, -286, 227, -289, -280, -470, -329, -326, -325,
	-327, 484, 532, 142, 544, -148, -413, -161, -131, -131,
	-129, -131, 64, 64, 64, 69, 64, 69, 69, 64,
	64, -144, -299, -272, 77, -464, -464, -464, -9, -463,
	-299, -163, -272, 200, 200, 200, 102, 16, 52, 26,
	102, 16, 52, 26, 102, 16, 52, 26, -118, -117,
	-120, 134, -121, -297, -175, -241, 96, 14, 119, 77,
	23, 77, -227, 30, 31, 187, -176, 59, 84, 87,
	-241, 77, -119, -148, -121, -121, -121, -192, 92, 100,
	93, 94, -291, 227, 134, -298, -290, -285, -283, -284,
	348, 231, -280, -175, -193, -199, -136, 88, 119, 117,
	118, 102, -175, -175, -175, -175, -175, -175, -175, -175,
	-175, -175, -175, -175, -175, -175, -175, -300, 82, 81,
	143, 82, -290, -117, -290, -174, 226, 478, 479, 92,
	-174, -289, -289, -106, 26, 27, -290, 525, -289, -290,
	-106, -106, -106, -106, -106, 77, -464, -117, -117, -117,
	-464, -121, -121, -117, -175, -117, -202, 81, -117, -202,
	81, -117, -175, 563, 564, 565, -117, -117, -106, -203,
	-204, 104, -202, -283, -286, 348, 231, -117, -464, 84,
	-181, -182, 654, 663, 664, 666, 669, 662, 661, 660,
	658, 657, 656, 659, 655, 673, 672, 671, 670, 668,
	667, 665, -181, -181, -183, 226, 480, 478, 479, -117,
	-118, -117, -117, -464, -464, -120, -117, -120, -117, -117,
	-120, -464, -464, -464, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -464, 84, -150, 96,
	-148, -124, -148, -140, -465, 16, 75, -465, 77, 187,
	-249, -252, 77, 536, 538, 539, -246, -321, -322, 142,
	74, 95, 81, -121, -290, -298, -228, -373, -341, -342,
	-343, -344, -366, 215, -381, 206, 208, 210, 209, 49,
	-345, 216, 200, 50, -305, -331, 517, 518, -313, 76,
	-312, 76, -68, 482, 481, 484, -312, 482, 489, -312,
	489, 489, -312, -312, -312, 482, 76, 76, -313, -313,
	-313, -333, 76, -333, 477, -334, 76, -334, -334, -334,
	-334, -305, -305, -305, -305, -305, -382, -121, -229, -293,
	75, -232, 202, 735, -329, 29, -329, -69, 253, 221,
	187, 76, -161, 256, 257, -417, 77, 33, -423, 331,
	84, 205, -148, 231, -148, -148, -413, -413, -419, -140,
	-148, 77, 77, 187, 714, 714, -148, 77, 81, 82,
	82, -177, -349, 16, 119, -261, -148, -177, -115, 227,
	75, -467, -464, 452, 453, 82, -91, -175, 38, 38,
	-61, -174, -289, 78, -396, 204, 556, 81, -411, -299,
	510, 538, -447, 134, -289, -446, -447, -450, 651, 203,
	78, 77, -444, -447, 351, 334, -447, 16, -376, -378,
	433, 435, 436, 434, 437, 438, 439, 440, 77, 109,
	109, 455, -380, 24, -375, 537, -375, 81, -175, -135,
	-464, 77, 187, -199, 34, -351, -352, -351, -351, -81,
	-388, -358, -79, -386, 122, 195, 192, 191, 267, 197,
	-324, 557, 250, 249, 283, 284, 73, 35, 196, 193,
	-71, -80, 230, 289, 235, 290, 194, 229, 291, 228,
	292, 651, 287, 755, 515, 607, 608, 641, 90, 611,
	247, 41, 200, 621, 614, 544, 617, 618, 376, 616,
	620, 211, 624, 623, 625, 627, 628, 629, 340, 632,
	633, 634, 248, 635, 636, 637, 365, 642, 9, -424,
	-423, -430, 74, -138, -137, 74, 75, -139, 74, -137,
	64, 64, 64, -235, 76, -299, -129, -464, -237, -289,
	-163, -299, -463, -463, -463, -175, -175, 119, -175, -175,
	119, -175, -175, 119, -464, 77, 187, 77, -238, 40,
	39, -289, 512, 60, -178, -178, -214, -255, 24, 16,
	55, 55, -126, 16, -225, -225, 92, 93, 94, 187,
	-463, -193, -175, -175, -175, -115, 99, -464, -464, -118,
	-117, -117, -117, -117, -117, -121, -464, -464, -464, 77,
	75, 28, -464, 75, 119, -464, 16, 16, -464, 16,
	16, -464, -464, 16, -175, -175, -175, -464, -464, -117,
	-206, -204, 106, -121, -464, -464, -464, -464, -464, 77,
	77, 16, 77, -464, -464, -464, -464, -215, 572, -215,
	-464, -464, -464, -464, -464, -464, -215, -215, -215, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -236, 122, -148, 34, -236, 75, -124, -124,
	-151, -297, 134, -251, -254, 540, 537, 543, 82, 81,
	143, 81, 187, -229, -357, -372, 77, -358, 755, 515,
	607, -324, 608, 641, 90, 611, 247, 41, 200, 621,
	614, 544, 617, 618, 376, 616, 620, 211, 624, 623,
	625, 627, 628, 629, 340, 632, 446, 633, 634, 248,
	635, 636, 637, 365, 642, 9, 651, 76, -350, -288,
	-381, 82, -282, 50, -345, -347, -345, -345, -345, -350,
	82, -282, -350, 50, 717, 92, 100, -320, -322, 143,
	-317, -318, -335, -338, -314, 28, 756, 520, 218, -344,
	484, 532, 33, 74, 515, 206, 50, 49, 210, 90,
	-332, 519, 84, 84, 583, -312, 489, -312, -312, -312,
	-312, -312, -339, 81, -339, 84, -333, 84, 78, 74,
	-289, 28, -148, 675, -70, 13, 14, 15, -289, -398,
	-399, -400, -289, 119, 258, 259, 74, -433, 362, -421,
	332, 341, 99, 21, 651, -454, 100, 203, 203, -392,
	219, 214, -148, -413, -289, 74, 74, -240, -164, 17,
	82, 82, -258, -261, -175, -416, 244, 245, -175, -175,
	-149, 96, -412, 203, 187, 187, -447, 203, 353, -415,
	-289, 16, 16, 351, 16, -415, 77, 109, 109, 109,
	109, 109, 109, 109, 109, -379, 76, 76, 385, 35,
	-230, -290, -351, 82, 81, 143, 82, 81, 143, 81,
	-387, 77, -388, 195, 192, 283, 284, -386, 21, -273,
	-345, -394, -393, -343, -344, 122, 207, 215, 215, 212,
	-273, -345, 206, 216, 122, 215, 212, -273, 200, -351,
	-273, 484, 142, 203, 37, 37, 365, 122, 365, 122,
	-351, -273, 207, -345, -270, 215, -271, 203, 28, 288,
	122, 122, 122, 122, 122, 122, 122, 122, 293, 675,
	-351, -351, -351, -351, -351, -351, -351, -351, 613, 613,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -355, -451, 81, -461, 90, 271, 340,
	82, -282, -280, 84, 86, 85, -351, -351, -436, 651,
	-162, 193, 277, 273, -121, 76, -121, -233, -289, -235,
	-464, 77, -163, -233, -233, -233, 99, 203, -463, 99,
	203, -463, 99, 203, -463, -272, -120, 134, -298, 81,
	77, 81, 81, 513, 61, -148, -164, 604, -124, -119,
	134, -290, -118, -115, 99, -175, -464, -464, -464, -464,
	-464, -464, -303, 143, 481, 484, 226, 480, 473, 471,
	470, 472, 500, 486, 517, 478, 518, 662, -300, -303,
	-300, -175, -175, -175, -175, -175, -175, 16, 16, 16,
	648, -210, 108, -121, 105, -175, -175, -175, -175, -289,
	-220, -463, -215, -215, -215, -215, -215, -215, -216, -215,
	-216, -216, -216, -216, -216, -216, -216, -216, -216, -216,
	-216, -171, -172, 34, -170, -9, -463, -173, -471, 55,
	59, -463, -243, -248, -202, -283, -286, 227, -164, -124,
	-164, -164, 187, 537, 541, 542, -372, -351, -351, -351,
	532, 484, 142, -351, -351, -351, -351, -351, 613, 613,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, 447, -351, -351,
	-351, -351, -351, -351, -355, -451, -351, -351, 675, -368,
	-367, 82, -287, 206, 49, -381, -350, -350, -350, -350,
	-350, -101, -288, 92, -463, 757, 84, -148, 34, 82,
	143, 81, -174, 133, -301, -166, -185, -463, 93, 94,
	548, 549, 553, 550, 554, 555, 568, 569, 570, 571,
	545, 551, 552, 14, 50, 50, 50, 81, 78, 78,
	78, -312, 78, 77, 78, 77, 78, 77, -168, 709,
	710, -148, -224, -232, 84, 74, 78, 77, -304, -289,
	-289, -289, 273, -436, 337, -434, -432, 343, 344, 345,
	346, 347, -416, 342, -423, 339, 81, 82, 81, 674,
	708, 729, 701, 29, -148, -413, -234, 76, -233, -234,
	-121, -177, -236, 199, -415, 134, 134, -289, 203, -415,
	351, -449, 651, -415, -415, 16, -415, -378, 81, 81,
	81, 84, 84, 84, 84, 84, -140, -140, 81, 82,
	81, 143, -357, -79, 195, 192, 283, 284, -359, -360,
	-363, -362, 123, 622, 689, 76, -340, 82, -287, -350,
	-266, 208, 206, -463, 82, -288, -288, -288, -289, 50,
	50, -237, -288, -288, -289, -288, 33, 280, 281, 282,
	82, 34, -351, 484, -237, 26, -237, 26, 33, 337,
	285, 286, -340, -288, -289, -148, 216, 212, -288, -237,
	26, 84, -237, -289, -237, 26, -237, 26, -237, 26,
	-237, 26, 643, -355, -121, -355, -461, -461, 81, 81,
	81, -351, -351, -103, 644, 217, -461, 81, -103, -461,
	-451, 81, -102, 217, 220, 222, -355, -355, -355, -461,
	-461, -461, -461, 81, -356, 33, 615, 476, 610, 631,
	609, 82, 92, 81, 81, -461, 33, -461, 33, -461,
	-355, 638, -461, -463, -437, -435, 355, 356, 357, 358,
	-429, 249, 250, 203, 278, 100, -426, 754, 274, -233,
	78, 77, -153, -289, -464, -464, -464, -175, -175, -175,
	-175, -175, -175, -175, -175, -175, -299, 187, 527, -289,
	-319, -320, -207, 18, -225, -464, -175, -216, -216, -216,
	-216, -216, -464, -313, -313, -313, -313, -334, 477, -313,
	461, -313, 461, -464, -464, -464, -464, 24, 24, 24,
	24, -464, -175, -175, -175, -463, -114, 567, -121, 77,
	77, -464, -464, -294, 82, -242, 74, -242, -243, -272,
	-9, -464, -231, -173, -463, 11, 55, 59, 651, 199,
	-197, -200, -470, -237, -164, 77, -352, -352, -352, -352,
	-210, -164, -355, -355, -355, -351, 34, -351, -461, -461,
	81, 81, 81, -351, -351, -103, -461, 81, -103, -461,
	-451, 81, -102, -355, -355, -355, -461, -461, -461, -461,
	81, -356, 82, 92, 81, 81, -461, 33, -461, 33,
	-461, -355, 638, -461, -463, 643, 78, 77, -313, -313,
	50, -347, 76, -175, 28, 76, 82, 143, 81, -174,
	81, -175, -191, 81, 84, 84, 76, -226, 28, -454,
	-148, -401, -402, -403, 90, 650, 100, 260, 261, 217,
	262, 263, 264, -400, -304, -304, -304, -426, -439, -440,
	-438, 340, 360, 361, 348, 99, 81, 81, 81, -425,
	331, 99, 340, 21, 28, 21, 28, 81, 81, 81,
	81, 84, 75, -233, -261, -319, -148, -449, -415, -449,
	334, -415, 78, 78, -364, 630, -463, 527, 619, 50,
	-340, -212, 220, 221, -304, -304, -293, -347, 50, -383,
	-385, 122, -288, 709, 710, 709, 710, 34, 192, 747,
	717, -340, -351, -300, 34, 365, 365, 365, 365, -212,
	-271, 203, 50, -288, 203, 365, 365, 96, 651, 81,
	81, 612, 626, -452, -451, -435, 84, 84, 84, 84,
	-316, 90, 74, -161, 278, -430, 74, -180, -174, -185,
	-174, 78, -289, 77, 77, 77, 134, -463, -404, -259,
	-208, 19, 21, -319, 82, -319, 82, -175, -175, -175,
	-175, -464, -464, -464, -175, -464, 81, -175, -175, -196,
	122, 32, -242, -299, -464, -173, -463, -464, -464, 77,
	-199, -463, -464, -210, -248, -121, -121, -121, -121, -228,
	-300, -351, -323, -451, 81, 81, 81, 612, 626, -452,
	-370, -369, 75, 211, 90, 616, 634, 747, 717, -367,
	-227, -227, -350, -350, -233, -464, -463, -233, -464, 78,
	78, -368, -9, -224, 24, -225, -403, 81, 264, 260,
	264, 264, 264, 264, 265, -430, -420, 90, 338, -438,
	349, 715, 333, 362, 84, 84, 121, 35, 36, -432,
	21, 651, -423, 339, 81, 81, 339, 81, 81, 331,
	-454, 41, 78, -404, -448, 28, -449, -448, 351, -361,
	639, 84, -175, -463, -463, -275, 267, 78, 82, -305,
	-305, 76, -350, -350, -464, 77, -289, 33, 33, -212,
	-300, -300, -288, -289, -288, 203, -288, -463, 199, 77,
	-464, 328, 81, 367, -162, -431, -182, -175, -175, -175,
	-456, -457, -290, 722, -405, 43, -408, 44, -218, 573,
	-209, -121, -195, -123, -121, -464, -464, -464, -464, -111,
	119, 651, -464, -464, -210, 21, 50, -235, -173, -9,
	-463, -200, -464, -228, -300, -464, -369, -451, -351, 81,
	-351, -351, 78, -330, 759, 758, -175, 78, 78, -224,
	-226, 251, -226, 41, 41, 256, 257, -429, 81, 81,
	33, 350, 186, 33, 84, 186, 575, 339, 81, 82,
	340, 340, 21, -175, -405, -413, -448, -384, -463, 21,
	-464, -233, -175, -463, 109, -368, -293, 76, -385, 55,
	-175, 142, 142, 203, -288, -383, -148, -451, -224, -429,
	132, -427, 275, -464, -464, -464, -464, 77, -304, 24,
	81, 606, -406, -407, -337, 47, 21, -217, -219, -289,
	77, -464, 649, 71, 652, -221, 124, 123, -194, 14,
	-9, 84, 81, 81, 218, -464, -371, -370, -279, 651,
	-9, 252, -27, -4, -16, -17, -18, -19, -21, -72,
	-22, -23, -28, -29, -24, -82, -86, -87, -88, -84,
	-95, -93, -94, -90, -89, -32, -34, -35, -37, -40,
	-41, -38, -39, -36, -30, -33, -42, -25, -43, -44,
	-45, -50, -51, -31, -52, -46, 103, 205, 446, 309,
	320, 321, 322, 82, 325, 327, 323, 324, 319, 329,
	445, -316, 84, 33, 84, 33, 352, 340, 28, 84,
	-315, 204, 651, -383, -362, -464, -464, -233, 84, 78,
	76, -368, 236, -351, -300, -288, -464, -71, 651, -27,
	-316, 186, -428, 276, -180, -464, -457, -458, 606, 29,
	728, 527, 81, 48, 44, -409, 45, 46, 81, 77,
	28, -123, 61, 650, 653, -464, -222, 102, -223, 121,
	575, -179, 84, 186, -222, -243, -464, -148, -330, 212,
	279, 510, -224, -213, 254, 255, -224, -121, -56, -57,
	104, -121, 82, -66, -295, 312, 313, 314, -290, 82,
	82, -55, -27, 80, -55, -121, 82, 82, -466, 16,
	58, -175, 108, -55, 328, 658, 658, 81, -235, 84,
	332, -464, 619, 50, -464, -371, -368, 78, 237, -300,
	288, -224, 328, -174, -180, -431, -272, 81, 606, -463,
	527, 21, 21, 21, 21, -219, -220, 61, -223, 126,
	127, 252, 126, 127, -174, 76, 351, 212, 212, -279,
	-224, 82, 82, -56, 108, 106, -57, -121, 105, 310,
	311, 315, -304, 77, 762, 445, 322, 325, 327, 762,
	328, 82, 16, 762, -224, -244, 34, 43, 124, 33,
	337, 26, -416, -463, -275, 78, -371, -463, -224, -182,
	-431, -299, -459, -460, 377, 92, 33, 81, -456, -463,
	81, 81, 81, 81, 651, 99, -181, -233, 351, 351,
	-226, 108, 106, 103, -55, 105, -55, 24, 24, 24,
	-319, -290, 108, -27, 108, -55, -55, -55, -121, 326,
	-55, 96, 108, -27, -243, 8, -175, -463, -371, -175,
	234, -27, -460, 92, 33, -459, 92, 33, 74, 74,
	-174, -464, -456, 652, -223, 78, -20, -26, -19, -25,
	-16, -17, -18, 445, 651, 103, -55, 762, -55, 762,
	-67, 84, -9, -65, -64, 84, -67, 317, 100, 318,
	82, -321, 322, 82, 762, 762, 762, 328, -121, 762,
	-60, 82, -224, -416, -464, -175, -464, -464, -224, 74,
	-174, 74, -174, 681, 377, 681, 377, 74, -464, 653,
	-390, -391, 74, -224, -55, 108, -127, 762, 108, 762,
	108, 106, -58, -59, 107, -27, 77, 316, 33, 108,
	108, 326, -55, 108, 108, 77, -365, 640, -464, 74,
	74, 377, 377, 681, 377, -391, 74, -390, 74, 15,
	14, 762, 108, 103, 205, -55, 108, 106, -59, -121,
	-64, -175, 82, 322, -121, 762, 325, 327, 82, 84,
	-365, 74, 74, -389, 219, 214, 217, 34, -389, 108,
	103, 762, 205, -55, 105, 82, 108, 108, 377, 681,
	213, 33, 92, 108, 762, -55, 325, 327, 205, 108,
	762, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1725, 1223, 1725, 0, 1223, 0, 1223, 0, -2,
	133, 928, 929, 930, 931, 0, 1806, 0, 0, 0,
	0, 0, -2, 1185, 1186, 1189, 1186, 1186, 1215, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 64, 0, 1329, 2754,
	-2, 1219, 1220, 1221, -2, -2, 0, 53, 0, 60,
	2, 1733, 0, 1236, 1225, 1733, 0, 0, 49, 0,
	0, 1223, 1223, 1223, 87, 88, 0, 119, 0, 121,
	0, 0, 1725, 1223, 0, 0, 0, 1810, 1810, 333,
	1810, 1810, 1825, 0, 1828, 331, 0, 1807, 1823, 1824,
	1826, 0, 0, 0, 0, 0, 1808, 1808, 1808, 1808,
	1808, 1808, 1808, 1808, 0, 0, 1099, 1420, 1422, 1423,
	1424, 1425, 1837, 1838, 2745, 2746, 2747, 2748, 2749, 2750,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2751, 2752, 2753, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 0, 0, 0,
	1104, 1105, 1106, 1107, 1108, 2739, 2740, 2741, 2742, 2743,
	2744, 1117, 1118, 0, 0, 0, 1176, 0, 1176, 1136,
	1137, 0, 1139, 0, 0, 0, 0, 0, 0, 0,
	1173, 1151, 1154, 1158, 0, 1733, 1733, 1173, 1164, 0,
	782, 783, 784, 1181, 1182, 1170, 1183, 1188, 1187, 1196,
	1196, 0, 1187, 1217, -2, 1217, 1357, 0, 459, 461,
	0, 482, 0, 485, 488, 1426, 0, -2, -2, 1848,
	1202, 0, 0, 1874, 1875, 0, 0, 0, 0, 0,
	2612, 231, 347, 272, 272, 272, 272, 272, 272, 272,
	0, 272, 272, 0, 272, 272, 272, 2628, 272, 0,
	272, 272, 272, 272, 272, 230, 346, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 336, 337, 338, 0,
	0, 0, 2612, 0, 734, 1190, 739, 737, 0, 731,
	728, 729, 0, 80, 0, 67, 81, 1757, 1379, 1380,
	1381, 1326, 0, 1330, -2, 0, 1808, 0, 1813, 69,
	1316, 1317, 1318, -2, 0, 0, 1324, 1325, -2, 1476,
	1837, 0, 0, 1230, 0, 0, 1227, 1233, 0, 1740,
	0, 0, 117, 1224, 47, 48, 2755, 59, 0, 0,
	1252, 1307, 0, 1435, 2309, 1441, -2, 2222, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 2167, 0, 0, 0,
	0, 0, 2264, 1514, 1515, 1516, 1517, 1518, 1519, 2475,
	2693, 2694, 1703, 1707, 1708, 1709, 1710, 1711, 1712, -2,
	-2, -2, 1686, 1687, 1701, 0, 2745, 2746, 2748, 2749,
	2750, 1775, 0, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 2290, 2353, 2241, 2358, 2186,
	2751, 2178, 2752, 2255, 2382, 2383, 2753, 2298, 2724, 0,
	-2, 2407, 2346, -2, -2, -2, 1582, -2, -2, -2,
	2735, 2736, 2721, 2726, 2248, 2196, 2306, 2347, 2187, 2208,
	2227, 2276, 2277, 2279, 2311, 2312, 2330, 2339, 2357, 2168,
	2169, 2170, 2271, 2272, 2379, 2378, 2377, 2380, 2413, 2411,
	2414, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2171, 2172, 2173, 2174, 2175, 2177, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2188, 2189, 2190, -2, 2195,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2206, 2207,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2223, 2224, 2226, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2242,
	2243, 2244, 2245, 2246, 2247, 2249, 2250, 2251, 2252, 2253,
	2254, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2265,
	2266, 2267, 2268, 2269, 2270, 2273, 2274, 2275, 2278, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2291,
	2292, -2, -2, 2295, 2296, 2297, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2307, 2308, 2310, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2340, 2341, 2342, 2343, 2344, 2345, 2348, 2349, 2350, 2351,
	2352, 2354, 2355, 2356, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2381, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2408, 2409, 2410, 2412, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 0, 1812, 1812, 0,
	104, 2695, 0, 1782, -2, -2, 1784, 0, 0, 0,
	-2, -2, -2, -2, 2179, -2, 1686, 0, 0, 0,
	0, 2167, 2168, 2169, 2170, 2176, 2178, 2186, 2187, 2191,
	2192, 2193, 2194, 2196, 2205, 2208, 2222, 2225, 2227, 2241,
	2248, 2255, 2264, 2271, 2272, 2276, 2277, 2279, 2290, 2293,
	2294, 2298, 2306, 2309, 2311, 2312, 2313, 2330, 2339, 2346,
	2347, 2353, 2357, 2358, 2377, 2378, 2379, 2380, 2382, 2383,
	2394, 2404, 2405, 2406, 2407, 2411, 2413, 2414, 120, 1725,
	0, 122, 0, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 808, 1831, 1832, 0, 1733, 1236, 0, 0,
	331, 0, 0, 0, 0, 0, 1810, 326, 0, 0,
	0, 0, 1810, 333, 0, 0, 1079, 0, 1080, 0,
	341, 1808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 1124, 1098, 0, 1100, 98, 1103, 0,
	0, 0, 0, 1121, 1122, 1125, 0, 1167, 1176, 1127,
	0, 0, 1810, 1810, 0, 0, 0, 0, 0, 1135,
	0, 810, 811, 1176, 1141, 1142, 1176, 1176, 1176, 1173,
	0, 1173, 1148, 1171, 1172, 1176, 0, 0, 0, 1153,
	0, 0, 0, 1161, 1162, 1176, 1166, 0, -2, 1194,
	-2, 1203, 0, 0, 79, 1218, 1217, 0, 1222, 1358,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 484,
	465, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 1357, 0, 0, 1843, 1849,
	1207, 1865, 1866, 0, 1876, 1877, 276, 0, 276, 0,
	0, 0, 0, 198, 272, 0, 200, 272, 272, 272,
	0, 272, 272, 207, 208, 272, 210, 211, 212, 272,
	214, 215, 272, 217, 218, 219, 272, 272, 222, 272,
	272, 225, 226, 227, 228, 229, 345, 276, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 735, 740, 741,
	736, 738, 707, 0, 0, 0, 0, 712, 713, 714,
	715, 0, 0, 718, 719, 724, 724, 0, 65, 66,
	0, 0, 0, 1329, 1327, 0, -2, 933, -2, 683,
	684, 685, 0, 680, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 1385, 0, 0, 0, 0, 0,
	1822, -2, 0, 0, 0, 0, 1314, 0, 1331, 0,
	1333, 0, -2, 0, 0, 0, 1822, 1337, 1338, 1339,
	1340, 1341, 0, 0, 0, 1478, 0, 57, 58, 1231,
	1232, 54, 62, 63, 55, 1228, 1229, 1234, 1235, 56,
	73, 0, 0, 1734, 1737, 1738, 1739, 1726, 1727, 1730,
	0, 0, 73, 1237, 1238, 1239, 1240, 1241, 1242, 0,
	1226, 0, 1253, 0, 0, 0, 0, 1308, 0, 1311,
	1312, 1313, 0, 1439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1442, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 1511, 1512, 0, 1704, 1705, 1706,
	1243, 0, 0, 0, 1243, 1243, 1243, 1243, 1243, 0,
	1482, 2420, 0, 2385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1243, 0,
	1678, 0, 0, 1579, 0, 1580, 1581, 1583, 1597, 0,
	1584, 1585, 0, 0, 0, 0, 0, 1478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1592, 1593, 1594, 0, 0, 0, 0,
	0, 0, 98, 100, 1420, 0, 105, 107, 0, 0,
	2695, 1785, 1786, 674, 1800, 1801, 1802, 1803, 0, 771,
	772, 1798, 0, 1733, 825, 0, 556, 653, 574, 575,
	576, 643, 578, 645, 0, 645, 645, 1675, 1676, 645,
	645, 645, 620, 621, 622, 623, 624, 626, 627, 628,
	629, 630, 0, 0, 602, 643, 643, 643, 606, 633,
	634, 635, 636, 637, 638, 639, 640, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 648, 648, 650, 650, 650, 650, 650, 556,
	556, 556, 556, 556, 0, 807, 1034, 1035, 0, 1740,
	117, 1829, 1757, 0, 0, 333, -2, 0, -2, 0,
	1415, 0, 0, 0, 0, 146, 369, 349, 131, 0,
	0, 327, 332, 328, 329, 330, 0, 0, 0, 0,
	340, 0, 0, 1087, 96, 1809, 1088, 1089, 1090, 1091,
	1092, 342, 1093, 1094, 371, 0, 1421, 1839, 1840, 1841,
	1842, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 0,
	0, 0, 1109, 1111, 1115, 1116, 1110, 1112, 1119, 1113,
	1120, 1165, 1126, 1177, 0, 1179, 0, 0, 1357, 1131,
	1132, 1133, 1134, 812, 1140, 1143, 1144, 1150, 1176, 0,
	1357, 1149, 1174, 1175, 1152, 1470, 1155, 1595, 0, 1163,
	1184, 1200, 0, 1195, 0, 1201, 1205, 1204, 0, 1208,
	1211, 1212, 1213, 1214, 79, 1210, 0, 0, 0, 1216,
	460, 462, 464, 483, 0, 0, 486, 487, 489, 0,
	1427, 1845, 0, 0, 1868, 0, 1870, 1872, 0, 0,
	277, 278, 279, 276, 0, 232, 0, 294, 348, 0,
	199, 0, 274, 201, 202, 203, 272, 205, 206, 209,
	213, 216, 220, 221, 223, 224, 344, 0, 0, 0,
	0, 196, 0, 0, 733, 752, 0, 0, 1191, 1192,
	0, 708, 709, 710, 711, 726, 717, 720, 724, 0,
	721, 724, 0, 0, 82, 0, 0, 1759, 1762, 1763,
	1764, 1765, 1766, 1767, 1835, 1836, 0, 932, 686, 687,
	688, 0, 769, 769, 769, 679, 354, 381, 1375, 1377,
	0, 1372, 1383, 1384, 1386, 0, 1388, 0, 0, 1391,
	1392, 1393, 1361, 0, 0, 1323, 1475, 1477, 0, 0,
	1429, 1335, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 1352, 0, 0, 0, 1353, 0, 1479,
	1480, 1248, 1249, 0, 0, 45, 0, 1741, 0, 0,
	0, 0, 1729, 1731, 1732, 0, 0, 1714, 0, 0,
	70, 117, 117, 50, 1436, 1437, 1438, 1440, 1457, 0,
	1459, 1461, 1309, 1310, 1254, 0, 1688, -2, 1690, 1691,
	-2, -2, -2, 1447, 1448, 1472, 1473, 1474, 0, 0,
	0, 0, 1470, 1452, 0, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1610, 1611,
	1612, 0, 1699, 0, 1700, 1504, 0, 0, 0, 1713,
	1505, 1694, 1513, 1478, 1244, 1245, 1697, 1698, 1695, 1696,
	0, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 1488, 1703, 0, 1488,
	1703, 0, 0, 2280, 2392, 2172, 0, 0, 0, 1684,
	1681, 0, 0, 0, 0, 2739, 2740, 0, 1596, 0,
	0, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 0, 0, 0, 1280, 1281, 1282, 1283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 102, 0,
	1419, 0, -2, 0, 0, 94, 95, 0, 0, 0,
	1783, 0, 0, 0, 110, 111, 106, 1787, 675, 0,
	-2, 1794, 1703, 1796, 1688, 0, 1740, -2, 541, 542,
	543, 544, 0, 789, 798, 0, 0, 787, 0, 789,
	789, 0, 785, 786, 547, 656, 654, 655, 577, 0,
	607, 0, 645, 645, 1675, 1676, 609, 645, 645, 612,
	645, 645, 615, 618, 619, 625, 0, 0, 603, 604,
	605, 594, 0, 595, 648, 597, 0, 598, 599, 600,
	601, 548, 549, 550, 551, 552, 806, 0, 296, 0,
	0, 0, 0, 0, 126, 1811, 127, 0, 392, 393,
	0, 298, 0, 334, 335, 148, 0, 0, 350, 0,
	137, 0, 536, 537, 0, 1081, 0, 1083, 339, 1095,
	1086, 0, 0, 0, 0, 0, 99, 0, 1178, 1128,
	1129, 1130, 1433, 0, 0, 1145, 1173, 1176, 1168, 0,
	0, 1156, 0, 1199, 1197, 1206, 1209, 1354, 0, 0,
	466, 467, 468, 490, 0, 1846, 1847, 1844, 1867, 0,
	1871, 1873, 0, 280, 282, 0, 0, 190, 0, 0,
	273, 0, 204, 0, 0, 0, 0, 0, 732, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1193, 716, 0, 722, 0, 723, 705, 706, 83,
	1758, 0, 0, 1328, 769, 0, 770, 0, 0, 1042,
	935, 936, 937, 1044, 0, -2, 1040, 1040, 769, 1040,
	0, 0, 0, 0, 0, 0, 974, 769, 1040, 1817,
	0, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1032, 1033, 769, 769, 769, 769, 769, 769, 769,
	769, 0, 0, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 769, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 769, 769, 769, 769, 0, 769, 769, 158,
	355, 1077, 0, 1369, 1376, 0, 0, 1370, 0, 1371,
	1387, 1389, 1390, 1319, 0, 1361, 1315, -2, 0, 1365,
	1334, 1429, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 0, 74, 2488,
	0, 77, 0, 0, 1735, 1736, 1728, 0, 1804, 1805,
	1715, 1716, 1433, 0, 0, 1246, 1458, 1460, 1462, 0,
	1478, 1449, 1470, 1453, 0, 1450, 0, 1444, 1552, 0,
	0, 0, 0, 0, 0, 1483, 1550, 1551, 1553, 0,
	0, 0, 1557, 0, 0, 1561, 0, 0, 1603, 0,
	0, 1604, 1566, 0, 0, 0, 0, 0, 1572, 1725,
	0, 1682, 0, 0, 1575, 1576, 1577, 1578, 1598, 0,
	0, 0, 0, 1599, 1600, 1601, 1602, 1539, 0, 1540,
	0, 0, 0, 0, 0, 0, 1547, 1548, 1549, 1263,
	1263, 1263, 1263, 1263, 1263, 1263, 1263, 1263, 1263, 1263,
	1263, 1591, 0, 0, 1418, 0, 1433, 0, 1433, 1433,
	101, 0, 1428, 108, 109, 0, 0, 115, 676, 677,
	678, 1795, 0, 297, 538, 826, 679, 903, 769, 769,
	769, 0, 769, 769, 769, 769, 769, 0, 0, 769,
	769, 769, 769, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 769, 769, 769, 769, 0, 769, 769, 769,
	769, 769, 769, 0, 769, 769, 0, 0, 0, 0,
	797, -2, -2, 789, 789, 789, 788, 789, 789, 780,
	790, 791, 781, 804, 557, 558, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 665, 0, 700, 702, 0, 0,
	573, 657, 0, 0, 0, 608, 645, 616, 610, 611,
	613, 614, 0, 641, 0, 0, 596, 0, 822, 0,
	1830, 116, 1757, 0, 0, 394, 395, 396, 1416, 0,
	299, 300, 0, 0, 0, 0, 0, 158, 0, 370,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 1085,
	1096, 1097, 97, 343, 372, 0, 0, 1114, 1138, 0,
	813, 814, 1357, 1147, 1471, 1157, 1159, 1160, 1355, 1356,
	102, 0, 1869, 0, 0, 0, 0, 0, 0, 292,
	275, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 725,
	1760, 1761, 0, 692, 693, 694, 695, 696, 697, 698,
	902, 679, 1043, 0, 0, 0, 0, 1045, 910, 0,
	789, 0, 0, 944, 945, 0, 1041, 924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 966, 967, 968, 0, 969, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 1820, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 1066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1025, 1026, 883, 884, 885, 886, 887,
	899, 900, 901, 888, 889, 890, 0, 0, 1036, 0,
	384, 0, 0, 0, 1373, 0, 1378, 0, 1363, 1320,
	-2, 0, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 1250, 0, 0,
	0, 75, 666, 1742, 1743, 46, 1717, 71, 72, 117,
	1255, 1702, 0, 1451, 0, 1454, 1520, 1263, 1263, 1263,
	1263, 1263, 0, 643, 643, 643, 1660, 643, 650, 1663,
	1665, 1666, 1667, 643, 1669, 643, 1672, 1674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 1574, 1685, 0, 0, 0, 0, 0, 1256,
	1257, 1259, 1541, 1542, 1543, 1544, 1545, 1546, 1524, 1264,
	1525, 1526, 1528, 1529, 1531, 1532, 1533, 1534, 1536, 1537,
	1538, 1768, 1768, 0, -2, 1749, 0, 1746, 1329, 1755,
	1756, 0, 1433, 1776, 0, 0, 0, 0, 1725, 1433,
	92, 93, 0, 112, 113, 114, 827, 0, 0, 0,
	769, 0, 769, 0, 0, 0, 0, 0, 769, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 0, 869, 870, 0, 0, 0, 0,
	792, 643, 643, 0, 787, 796, 773, 775, 776, 777,
	779, 0, 805, 559, 0, 0, 570, 0, 0, 671,
	672, 673, 658, 0, 0, 661, 662, 0, 1445, 1446,
	1595, 1595, 1595, 1595, 1595, 1595, 0, 0, 0, 0,
	1595, 1595, 1595, 0, 699, 701, 703, 704, 644, 646,
	647, 617, 631, 0, 632, 0, 651, 0, 809, 823,
	824, 0, 118, 0, 137, 0, 306, 0, 302, 0,
	0, 0, 0, 166, 149, 150, 151, 153, 154, 0,
	0, 0, 147, 0, 352, 0, 357, 358, 359, 0,
	0, 0, 0, 0, 1082, 1084, 0, 0, 1360, 1102,
	1434, 1176, 666, 0, 292, 281, 283, 284, 0, 292,
	295, 191, 0, 192, 194, 0, 193, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 0, 0, 727, 689,
	690, 691, 934, 938, -2, 1040, 0, 0, 916, 905,
	0, 0, 914, 915, 911, 0, 1037, 0, 0, 1829,
	787, 1825, 0, 0, -2, 946, 947, 970, 971, 972,
	0, 1047, 0, 0, 0, 0, 952, 953, 954, 955,
	0, 769, 0, 0, 0, 0, 0, 0, 975, 976,
	977, 978, 1037, 0, 0, 982, 0, 0, 0, 0,
	0, 1054, 0, 0, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1031, 988, 989, 990, 991, 992, 993, 994,
	995, 0, 0, 998, 879, 880, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 876, 877, 878, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 891, 892, 893, 894, 895,
	896, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 0, 1029, 0, 159, 160, 0, 0, 0, 0,
	388, 385, 386, 0, 382, 0, 381, 0, 0, 0,
	1362, 0, 1332, 1366, 1430, 1431, 1432, 1342, 1343, 0,
	1345, 1346, 0, 1348, 1349, 0, 1368, 0, 0, 78,
	1858, 667, 1722, 0, 1247, 1521, 1455, 1523, 1527, 1522,
	1530, 1535, 1555, 1655, 666, 666, 1661, 1662, 1664, 1668,
	1670, 1671, 1673, 1559, 1556, 1558, 1560, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 1588, 1589, 1261, 1260, 84, 0, 85, 1768, 0,
	0, 0, 0, 0, 0, -2, -2, -2, 2151, 2115,
	1753, 1770, 0, 0, 1725, 0, 0, 0, 0, 0,
	1733, 91, 828, 829, 830, 0, 769, 0, 833, 834,
	836, 837, 838, 0, 0, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 0, 873, 0, 875, 757, 0, 1730, 1730,
	789, 789, 0, 0, 0, 0, 668, 669, 670, 659,
	660, 0, 664, 642, 0, 0, 0, 0, 116, 136,
	0, 117, 307, 308, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 301, 303, 304, 305, 381, 184, 167,
	168, 0, 0, 0, 0, 0, 155, 156, 157, 351,
	0, 0, 356, 0, 0, 0, 0, 138, 139, 0,
	141, 137, 0, 0, 1146, 1858, 1417, 285, 292, 285,
	0, 195, 754, 755, 918, 0, 0, 0, 0, 912,
	0, 940, 1038, 0, 556, 556, 0, 789, 789, 0,
	1069, 0, 973, 948, 950, 949, 951, 0, 0, 958,
	959, 1037, 0, 963, 0, 1048, 1049, 1050, 1051, 979,
	0, 0, 0, 0, 0, 1052, 1053, 0, 0, 996,
	997, 1027, 1028, 0, 897, 161, 162, 163, 164, 165,
	1073, 0, 0, 1078, 383, 1077, 0, 375, 390, 391,
	0, 1374, 1364, 0, 0, 0, 1251, 0, 1860, 1854,
	1275, 0, 0, 1656, 1657, 1658, 1659, 0, 0, 0,
	0, 1568, 1569, 1570, 1605, 1573, 1680, 0, 0, 1725,
	0, 0, 86, 1361, -2, 1747, 0, 0, 1754, 1329,
	1772, 0, 103, 1733, 1777, 1778, 1779, 1780, 1781, 90,
	831, 0, 835, 881, 882, 839, 840, 871, 872, 0,
	756, 760, 0, 769, 0, 769, 769, 767, 768, 793,
	794, 795, 774, 778, 0, 553, 0, 0, 663, 649,
	652, 0, 116, 118, 0, 118, 309, 310, 311, 312,
	314, 315, 0, 0, 0, 384, 130, 0, 0, 169,
	0, 0, 0, 0, 179, 180, 181, 182, 183, 152,
	0, 0, 353, 0, 362, 364, 0, 363, 365, 0,
	135, 0, 1359, 1860, 187, 0, 285, 189, 293, 1067,
	0, 917, 0, 0, 0, 0, 0, 939, 1039, 545,
	546, 0, 1829, 0, 1046, 0, 0, 0, 957, 960,
	961, 964, 980, 981, 0, 0, 985, 0, 0, 0,
	1030, 116, 389, 387, 384, 373, 377, 0, 0, 0,
	0, 1395, 0, 2580, 76, 1862, -2, 0, 68, 0,
	1723, 1724, 1718, 1719, 1721, 1562, 1564, 1563, 1565, 0,
	0, 0, 1586, 1587, 1265, 0, 0, 1745, 1748, 1750,
	0, 1771, 1773, 89, 832, 874, 761, 762, 0, 764,
	0, 0, 0, 568, 554, 555, 0, 571, 758, 142,
	0, 0, 79, 316, 317, 318, 319, 388, 185, 186,
	170, 171, 0, 173, 174, 0, 0, 0, 367, 0,
	360, 361, 0, 1101, 1814, 286, 188, 904, 0, 910,
	906, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	956, 769, 0, 0, 984, 0, 1056, 898, 79, 388,
	0, 379, 0, 1344, 1347, 1350, 0, 0, 0, 0,
	0, 0, 1861, 1856, 0, 1853, 0, 1276, 1277, 0,
	0, 1571, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 763, 765, 766, 0, 553, 123, 759, 124, 0,
	116, 397, 116, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 0, 0, 0, 0,
	0, 0, 79, 0, 79, 0, 0, 0, 442, 0,
	79, 0, 0, 175, 0, 177, 178, 366, 0, 140,
	1361, 0, 0, 0, 0, 907, 908, 0, 913, 758,
	0, 0, 0, 0, 965, 983, 1055, 0, 1032, 116,
	1074, 0, 374, 0, 375, 1821, 1396, 1397, 0, 0,
	1398, 0, 0, 0, 0, 1859, 0, 0, 1855, 0,
	0, 1720, 1606, 0, 1609, 1258, 1266, 0, 1269, 0,
	0, 0, 1305, 0, 1267, 1769, -2, 0, 569, 0,
	0, 0, 142, 116, 0, 0, 129, 0, 0, 412,
	0, 0, 1831, 0, 0, -2, -2, -2, 1833, 439,
	440, 0, 491, 0, 0, 0, 456, 457, 0, 443,
	0, 458, 320, 0, 116, 172, 176, 368, 42, 0,
	0, 1068, 0, 912, 909, 941, 0, 758, 0, 962,
	1057, 1075, 116, 0, 375, 378, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 1278, 1279, 1607, 0, 1270,
	1271, 1272, 1273, 1274, 0, 0, 143, 0, 0, 125,
	118, 398, 399, 0, 0, 79, 413, 0, 79, 0,
	0, 0, 666, 0, 79, 79, 79, 79, 0, 79,
	79, 0, 444, 79, 79, 44, 0, 1815, 1816, 287,
	288, 289, 291, 0, 0, 758, 943, 0, 79, 376,
	380, 1394, 1402, 1403, 0, 0, 0, 1410, 0, 0,
	1863, 1864, 1857, 1851, 0, 0, 1306, 0, 144, 145,
	79, 0, 79, 410, 0, 79, 0, 0, 0, 0,
	674, 1834, 0, 492, 321, 0, 0, 0, 0, 0,
	0, 0, 323, 116, 43, 0, 0, 0, 942, 0,
	2299, 116, 1404, 0, 0, 1405, 0, 0, 0, 0,
	0, 1399, 0, 0, 1268, 799, 116, 400, 401, 402,
	403, 404, 405, 79, 0, 408, 0, 79, 0, 79,
	422, 423, 424, 79, 431, 433, 434, 435, 0, 437,
	438, 426, 447, 322, 79, 79, 79, 79, 0, 79,
	441, 445, 132, 290, 921, 0, 1071, 1072, 1076, 0,
	0, 0, 0, 1406, 1407, 1411, 1413, 0, 1400, 1608,
	800, 801, 0, 128, 0, 407, 80, 79, 0, -2,
	0, 79, 0, 419, 0, 425, 0, 436, 0, 324,
	0, 0, 0, 0, 0, 0, 919, 0, 921, 0,
	0, 0, 0, 1412, 1414, 802, 0, 803, 0, 0,
	0, 79, 0, 411, 415, 0, 0, 79, 420, 0,
	432, 427, 325, 448, 0, 79, 450, 453, 446, 922,
	920, 0, 0, 815, 817, 818, 0, 0, 816, 406,
	409, 79, 417, 0, 79, 449, 0, 0, 1408, 1409,
	819, 820, 821, 0, 79, 0, 451, 454, 416, 0,
	-2, 452, 455, 418,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 762,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1146
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1240
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1267
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1287
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1344
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1368
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1390
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1437
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1471
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1496
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1769
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1785
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1826
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1840
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1853
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1863
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1884
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2188
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2320
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2337
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.val = &Authentication{}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.val = yyDollar[1].val
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2503
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2519
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2523
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2545
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2553
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.val = EventStatus_Enable
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = EventStatus_Disable
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = BeforeStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.val = AfterStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = InsertStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = UpdateStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = DeleteStr
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2723
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2727
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2731
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2735
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2751
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2757
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2762
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2767
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 418:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2773
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2791
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2801
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2805
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2809
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2813
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2820
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2892
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2914
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2918
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2922
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2933
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 451:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2937
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 452:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2941
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 453:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2956
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2960
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2993
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3001
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3021
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.val = &Resignal{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3129
		{
			yyVAL.val = Exprs(nil)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.val = Exprs(nil)
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3201
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3228
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3387
		{
			yyVAL.val = BoolVal(false)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.val = BoolVal(false)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.val = BoolVal(true)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3400
		{
			yyVAL.val = ColumnType{}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3404
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3551
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3603
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3668
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3723
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3753
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3781
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3842
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3914
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3918
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3926
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3944
		{
			yyVAL.val = BoolVal(false)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3957
		{
			yyVAL.val = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.val = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3997
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = BoolVal(true)
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.val = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4050
		{
			yyVAL.val = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = false
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = true
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4118
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4122
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4126
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4134
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4138
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4144
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4148
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4152
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4158
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.val = colKeyPrimary
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.val = colKey
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.val = colKeyUnique
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4192
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4196
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4281
		{
			yyVAL.val = false
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4283
		{
			yyVAL.val = true
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.val = ""
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4303
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4352
		{
			yyVAL.val = false
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = true
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.bytes = nil
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4389
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4425
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4429
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4435
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4439
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4473
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4481
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.val = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.val = ":="
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4521
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4537
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.val = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4592
		{
			yyVAL.val = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4610
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4620
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4640
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4648
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4656
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.bytes = []byte(nil)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.val = ""
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.val = Restrict
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = Cascade
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.val = NoAction
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4738
		{
			yyVAL.val = SetDefault
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = SetNull
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = true
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = true
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = false
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4760
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4778
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4782
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4786
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4790
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4822
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4958
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4962
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4986
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5033
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5069
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5080
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5090
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5103
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5127
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5137
		{
			yyVAL.val = false
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.val = true
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5146
		{
			yyVAL.val = ""
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5150
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5156
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5165
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5169
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5174
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 920:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5187
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5198
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.val = ""
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5220
		{
			yyVAL.val = string("")
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5224
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5236
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5265
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5285
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5298
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5322
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5340
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5359
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5376
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5400
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5422
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5436
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5450
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5487
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5497
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5507
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5517
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5527
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5537
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5557
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5567
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5582
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5598
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5608
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5618
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5634
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5648
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5662
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5676
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5690
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5704
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5717
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5730
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5740
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5750
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5762
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5776
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5790
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5807
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5817
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5827
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5837
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5847
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5857
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5874
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5887
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5916
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5937
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5958
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5977
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5999
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6003
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6011
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6027
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6031
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6035
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6177
		{
			yyVAL.val = true
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.val = false
		}
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6191
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimitItems: yyDollar[6].val.([]AccountLimitItem),
			}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6220
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6225
		{
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6227
		{
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6230
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6240
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6244
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6250
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6254
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6258
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6262
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6266
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6270
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6274
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6278
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6282
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6286
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6290
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6294
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6298
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6302
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6344
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6354
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6358
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6364
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6368
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6374
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6404
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1075:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6430
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1076:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6458
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6488
		{
			yyVAL.val = EventName{}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6492
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6498
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6502
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6514
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6538
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6554
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6558
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6564
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6589
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6609
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6627
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6644
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6661
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6681
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6701
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6716
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6731
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{

		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6754
		{
			yyVAL.val = Restrict
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6758
		{
			yyVAL.val = Cascade
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6764
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6777
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6792
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1101:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6798
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6802
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6806
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6819
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6823
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6827
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6831
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6837
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6841
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6852
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6858
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6862
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6866
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6870
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6876
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6880
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6884
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6888
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6894
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6905
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6927
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6939
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6951
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6964
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6977
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6988
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6999
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7010
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7021
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7031
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7041
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7054
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7064
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7075
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7085
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7095
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7106
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7118
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7130
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7144
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7157
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7168
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7182
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7194
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7204
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7215
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7228
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7238
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7250
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7261
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7274
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7283
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7294
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7305
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7316
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7327
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7341
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7351
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7361
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7383
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7389
		{
			yyVAL.val = false
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7393
		{
			yyVAL.val = true
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7399
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7403
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7409
		{
			yyVAL.val = ""
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7413
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7417
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7423
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7427
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7431
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7435
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7441
		{
			yyVAL.val = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7445
		{
			yyVAL.val = SessionStr
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = GlobalStr
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7455
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7467
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7480
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7492
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7496
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7502
		{
			yyVAL.val = &Begin{}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7506
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7512
		{
			yyVAL.val = &Begin{}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7516
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7520
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7524
		{
			yyVAL.val = &Begin{}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7533
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7538
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7542
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7547
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7551
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7557
		{
			yyVAL.val = &Commit{}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7563
		{
			yyVAL.val = &Rollback{}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7569
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7575
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7579
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7583
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7587
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7593
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7599
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7603
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7607
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7613
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7621
		{
			yyVAL.val = ""
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7625
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7630
		{
			yyVAL.val = false
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7634
		{
			yyVAL.val = true
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7646
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7666
		{
			setAllowComments(yylex, true)
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7670
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7678
		{
			yyVAL.val = Comments(nil)
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7682
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7688
		{
			yyVAL.val = UnionStr
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.val = UnionAllStr
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7702
		{
			yyVAL.val = IntersectStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7706
		{
			yyVAL.val = IntersectAllStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7710
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7716
		{
			yyVAL.val = ExceptStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7720
		{
			yyVAL.val = ExceptAllStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7724
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7729
		{
			yyVAL.val = QueryOpts{}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7733
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7744
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7755
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7766
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7777
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7788
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7800
		{
			yyVAL.val = ""
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7804
		{
			yyVAL.val = AllStr
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7808
		{
			yyVAL.val = DistinctStr
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7814
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7822
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7833
		{
			yyVAL.val = &StarExpr{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7837
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7845
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7851
		{
			yyVAL.val = &StarExpr{}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7855
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7859
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7863
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7869
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7873
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7879
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7884
		{
			yyVAL.val = ColIdent{}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7887
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = Exprs(nil)
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7901
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7905
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7910
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7914
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7918
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7925
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7948
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7963
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7967
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7971
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7975
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7982
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7990
		{
			yyVAL.val = Window(nil)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7993
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7999
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8002
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8008
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8057
		{
			yyVAL.val = ColIdent{}
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8061
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8065
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8069
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8075
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8079
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8083
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8089
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8093
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8103
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8107
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8122
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8137
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8143
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8157
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8163
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8167
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8172
		{
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8174
		{
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8203
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8207
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8211
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8215
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8221
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8225
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8229
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8233
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8237
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8243
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8247
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8251
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8257
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8261
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8283
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8289
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8293
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8307
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8312
		{
			yyVAL.val = Expr(nil)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8316
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8322
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8326
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = Columns(nil)
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8341
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8345
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8351
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8379
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8383
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8387
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8397
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8403
		{
			yyVAL.val = JoinCondition{}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8405
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8409
		{
			yyVAL.val = JoinCondition{}
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8411
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8416
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8426
		{
			yyVAL.val = JoinStr
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8430
		{
			yyVAL.val = JoinStr
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8434
		{
			yyVAL.val = JoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8440
		{
			yyVAL.val = StraightJoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8446
		{
			yyVAL.val = LeftJoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8450
		{
			yyVAL.val = LeftJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8454
		{
			yyVAL.val = RightJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8458
		{
			yyVAL.val = RightJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8462
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8466
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8472
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8476
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1394:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8486
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8498
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8504
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8508
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8512
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8517
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8532
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8536
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8540
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8544
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8548
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8552
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8556
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8560
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8566
		{
			yyVAL.val = &NullVal{}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8570
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8576
		{
			yyVAL.val = &NullVal{}
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8580
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8590
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8596
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8612
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8616
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8620
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8624
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8628
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8632
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8638
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8642
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8648
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8670
		{
			yyVAL.val = Expr(nil)
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8680
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8684
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8688
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8692
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8696
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8708
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8714
		{
			yyVAL.val = ""
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8718
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = BoolVal(true)
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = BoolVal(false)
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8734
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8738
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8742
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8746
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = IsNullStr
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = IsNotNullStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = IsTrueStr
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = IsFalseStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8802
		{
			yyVAL.val = EqualStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8806
		{
			yyVAL.val = LessThanStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8810
		{
			yyVAL.val = GreaterThanStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8814
		{
			yyVAL.val = LessEqualStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8818
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8822
		{
			yyVAL.val = NotEqualStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8826
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8831
		{
			yyVAL.val = Expr(nil)
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8835
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8841
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8845
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8849
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8855
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8861
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8865
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8877
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8881
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8887
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8891
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8897
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8905
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8909
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8913
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8917
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8921
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8925
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8929
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8933
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8937
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8941
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8945
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8949
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8961
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8973
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8977
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8981
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8985
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8989
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8993
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8997
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9005
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9027
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1522:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9061
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9065
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9069
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9073
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9077
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9081
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9085
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9089
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9093
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9097
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9101
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9105
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9109
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9113
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9121
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9125
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9142
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9146
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9150
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9154
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9158
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9162
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9166
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9170
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9174
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9185
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9189
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9193
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9197
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9201
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9205
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9209
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9213
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9217
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9221
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9225
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9229
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9233
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9237
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9241
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9245
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9249
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1567:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9253
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1568:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9257
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1569:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9261
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1570:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9265
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1571:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9269
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9273
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9277
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9281
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9309
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9313
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9317
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9342
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1589:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9374
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9391
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9401
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9405
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9409
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9413
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9417
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9421
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9427
		{
			yyVAL.val = ""
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9431
		{
			yyVAL.val = BooleanModeStr
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9435
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1608:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9439
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9443
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9463
		{
			yyVAL.val = Armscii8Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9467
		{
			yyVAL.val = AsciiStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = Big5Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = UBinaryStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = Cp1250Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = Cp1251Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = Cp1256Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = Cp1257Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9495
		{
			yyVAL.val = Cp850Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9499
		{
			yyVAL.val = Cp852Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9503
		{
			yyVAL.val = Cp866Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9507
		{
			yyVAL.val = Cp932Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9511
		{
			yyVAL.val = Dec8Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = EucjpmsStr
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = EuckrStr
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = Gb18030Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = Gb2312Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = GbkStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9535
		{
			yyVAL.val = Geostd8Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9539
		{
			yyVAL.val = GreekStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9543
		{
			yyVAL.val = HebrewStr
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9547
		{
			yyVAL.val = Hp8Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9551
		{
			yyVAL.val = Keybcs2Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9555
		{
			yyVAL.val = Koi8rStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9559
		{
			yyVAL.val = Koi8uStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9563
		{
			yyVAL.val = Latin1Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9567
		{
			yyVAL.val = Latin2Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9571
		{
			yyVAL.val = Latin5Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9575
		{
			yyVAL.val = Latin7Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9579
		{
			yyVAL.val = MacceStr
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9583
		{
			yyVAL.val = MacromanStr
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9587
		{
			yyVAL.val = SjisStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9591
		{
			yyVAL.val = Swe7Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = Tis620Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = Ucs2Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = UjisStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = Utf16Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = Utf16leStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = Utf32Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9649
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9653
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9657
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9661
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9668
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9672
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9680
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9684
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9688
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9692
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9696
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9700
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9704
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9708
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9712
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9718
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9722
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9727
		{
			yyVAL.val = Expr(nil)
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9731
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9756
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = Expr(nil)
		}
	case 1685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9765
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9771
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9775
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9779
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9783
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9787
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9791
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9795
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9799
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9803
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9807
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9835
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9841
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = &NullVal{}
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9887
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9891
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9895
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9900
		{
			yyVAL.val = Exprs(nil)
		}
	case 1718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9904
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9910
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9914
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9920
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9925
		{
			yyVAL.val = Expr(nil)
		}
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9929
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9944
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9950
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9954
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = AscScr
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = AscScr
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9973
		{
			yyVAL.val = DescScr
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9996
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10000
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10004
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10009
		{
			yyVAL.val = ""
		}
	case 1741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10013
		{
			yyVAL.val = ForUpdateStr
		}
	case 1742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10017
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10021
		{
			yyVAL.val = ShareModeStr
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10051
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10055
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10060
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10067
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10071
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10075
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1752:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10080
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10087
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = Columns(nil)
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10104
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10110
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10114
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10120
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10124
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10128
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10132
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10136
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10140
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10144
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10149
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10159
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10163
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10169
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10173
		{
			yyVAL.val = ValTuple{}
		}
	case 1774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10179
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10185
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10195
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10199
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10205
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10208
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10212
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10216
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10222
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10226
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10232
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10243
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10256
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10275
		{
			yyVAL.val = SetScope_Global
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10279
		{
			yyVAL.val = SetScope_Session
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = SetScope_Session
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10289
		{
			yyVAL.val = SetScope_Persist
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10293
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10303
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10307
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10324
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10331
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10335
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10339
		{
			yyVAL.val = &Default{}
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = 0
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10354
		{
			yyVAL.val = 1
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10357
		{
			yyVAL.val = 0
		}
	case 1809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10359
		{
			yyVAL.val = 1
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10364
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10367
		{
			yyVAL.val = ""
		}
	case 1813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10369
		{
			yyVAL.val = IgnoreStr
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10374
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10379
		{
			yyVAL.val = struct{}{}
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10381
		{
			yyVAL.val = struct{}{}
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10385
		{
			yyVAL.val = struct{}{}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10387
		{
			yyVAL.val = struct{}{}
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10390
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10392
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10396
		{
			yyVAL.val = UniqueStr
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10398
		{
			yyVAL.val = FulltextStr
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = SpatialStr
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10402
		{
			yyVAL.val = VectorStr
		}
	case 1827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10405
		{
			yyVAL.val = ""
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10407
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10410
		{
			yyVAL.val = ColIdent{}
		}
	case 1830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10412
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10420
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10437
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10454
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10462
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10467
		{
			yyVAL.val = string("")
		}
	case 1844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10469
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = string("")
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10474
		{
			yyVAL.val = IgnoreStr
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10476
		{
			yyVAL.val = ReplaceStr
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = BoolVal(false)
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10481
		{
			yyVAL.val = BoolVal(true)
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = BoolVal(false)
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = BoolVal(true)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10502
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10506
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10515
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10532
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10536
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10541
		{
			yyVAL.val = &Lines{}
		}
	case 1863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10545
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10554
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10565
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10571
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10575
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10581
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10596
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10614
		{
			yyVAL.val = LockRead
		}
	case 1871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10618
		{
			yyVAL.val = LockReadLocal
		}
	case 1872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10622
		{
			yyVAL.val = LockWrite
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10626
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10632
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10638
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10649
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10659
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11587
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11596
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
