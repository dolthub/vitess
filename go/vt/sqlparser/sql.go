// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1810,
	201, 1831,
	-2, 335,
	-1, 62,
	243, 1184,
	244, 1184,
	-2, 1173,
	-1, 90,
	272, 335,
	-2, 1816,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 546,
	1, 2512,
	6, 2512,
	7, 2512,
	29, 2512,
	188, 2512,
	764, 2512,
	-2, 1219,
	-1, 559,
	188, 1841,
	-2, 1835,
	-1, 560,
	188, 1842,
	-2, 1836,
	-1, 664,
	1, 685,
	764, 685,
	-2, 683,
	-1, 673,
	1, 1325,
	8, 1325,
	9, 1325,
	10, 1325,
	17, 1325,
	18, 1325,
	19, 1325,
	20, 1325,
	22, 1325,
	24, 1325,
	35, 1325,
	36, 1325,
	65, 1325,
	66, 1325,
	67, 1325,
	68, 1325,
	69, 1325,
	71, 1325,
	72, 1325,
	75, 1325,
	76, 1325,
	78, 1325,
	79, 1325,
	97, 1325,
	527, 1325,
	575, 1325,
	653, 1325,
	764, 1325,
	-2, 1825,
	-1, 678,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 706,
	188, 2209,
	-2, 1447,
	-1, 739,
	188, 2317,
	-2, 1717,
	-1, 740,
	188, 2398,
	-2, 1449,
	-1, 741,
	188, 2229,
	-2, 1450,
	-1, 810,
	188, 2180,
	-2, 1681,
	-1, 813,
	188, 2195,
	-2, 1599,
	-1, 814,
	188, 2198,
	-2, 1599,
	-1, 815,
	188, 2408,
	-2, 1599,
	-1, 817,
	188, 2196,
	-2, 1599,
	-1, 818,
	188, 2409,
	-2, 1599,
	-1, 819,
	188, 2410,
	-2, 1599,
	-1, 878,
	188, 2197,
	-2, 1599,
	-1, 961,
	188, 2297,
	-2, 1599,
	-1, 962,
	188, 2298,
	-2, 1599,
	-1, 1074,
	110, 2525,
	121, 2525,
	188, 2525,
	-2, 1792,
	-1, 1075,
	110, 2656,
	121, 2656,
	188, 2656,
	-2, 1793,
	-1, 1080,
	110, 2553,
	121, 2553,
	188, 2553,
	-2, 1794,
	-1, 1081,
	110, 2604,
	121, 2604,
	188, 2604,
	-2, 1795,
	-1, 1082,
	110, 2605,
	121, 2605,
	188, 2605,
	-2, 1796,
	-1, 1083,
	110, 2452,
	121, 2452,
	188, 2452,
	-2, 1801,
	-1, 1085,
	110, 2581,
	121, 2581,
	188, 2581,
	-2, 1803,
	-1, 1257,
	454, 1198,
	-2, 1202,
	-1, 1259,
	454, 1198,
	-2, 1202,
	-1, 1384,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1386,
	1, 686,
	764, 686,
	-2, 683,
	-1, 1409,
	1, 1326,
	8, 1326,
	9, 1326,
	10, 1326,
	17, 1326,
	18, 1326,
	19, 1326,
	20, 1326,
	22, 1326,
	24, 1326,
	35, 1326,
	36, 1326,
	65, 1326,
	66, 1326,
	67, 1326,
	68, 1326,
	69, 1326,
	71, 1326,
	72, 1326,
	75, 1326,
	76, 1326,
	78, 1326,
	79, 1326,
	97, 1326,
	527, 1326,
	575, 1326,
	653, 1326,
	764, 1326,
	-2, 1825,
	-1, 1420,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 1714,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1716,
	1, 685,
	764, 685,
	-2, 683,
	-1, 2274,
	188, 1845,
	-2, 1693,
	-1, 2277,
	188, 2745,
	-2, 1696,
	-1, 2278,
	188, 2746,
	-2, 1697,
	-1, 2279,
	188, 1844,
	-2, 1840,
	-1, 2429,
	76, 98,
	78, 98,
	-2, 102,
	-1, 2447,
	188, 2321,
	-2, 1797,
	-1, 2454,
	1, 906,
	764, 906,
	-2, 683,
	-1, 2642,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 2724,
	8, 59,
	9, 59,
	10, 59,
	-2, 1479,
	-1, 2741,
	1, 1371,
	8, 1371,
	9, 1371,
	10, 1371,
	17, 1371,
	18, 1371,
	19, 1371,
	20, 1371,
	22, 1371,
	24, 1371,
	35, 1371,
	36, 1371,
	65, 1371,
	66, 1371,
	67, 1371,
	68, 1371,
	69, 1371,
	71, 1371,
	72, 1371,
	75, 1371,
	76, 1371,
	78, 1371,
	79, 1371,
	97, 1371,
	527, 1371,
	575, 1371,
	653, 1371,
	764, 1371,
	-2, 1825,
	-1, 2918,
	213, 1038,
	217, 1038,
	-2, 794,
	-1, 2919,
	213, 1108,
	217, 1108,
	-2, 795,
	-1, 3190,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 3294,
	1, 1748,
	26, 1748,
	75, 1748,
	764, 1748,
	-2, 1825,
	-1, 3497,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 3517,
	207, 931,
	213, 1038,
	217, 1038,
	-2, 929,
	-1, 3708,
	78, 2092,
	79, 2092,
	188, 2092,
	-2, 1227,
	-1, 3709,
	77, 1759,
	253, 1759,
	-2, 2141,
	-1, 3710,
	77, 1760,
	253, 1760,
	-2, 2710,
	-1, 3955,
	8, 59,
	9, 59,
	10, 59,
	-2, 1755,
	-1, 4101,
	47, 1856,
	-2, 1854,
	-1, 4362,
	8, 59,
	9, 59,
	10, 59,
	-2, 1756,
	-1, 4382,
	316, 432,
	-2, 1912,
	-1, 4383,
	316, 433,
	-2, 1953,
	-1, 4384,
	316, 434,
	-2, 2129,
	-1, 4621,
	105, 418,
	107, 418,
	109, 418,
	-2, 79,
	-1, 4702,
	107, 425,
	108, 425,
	109, 425,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83186

var yyAct = [...]int{
	752, 44, 4675, 4638, 4575, 4612, 4625, 698, 4389, 1190,
	4613, 4242, 8, 4577, 2935, 2444, 3790, 571, 4241, 7,
	4354, 4095, 4365, 4491, 4490, 2934, 4240, 6, 4388, 4273,
	28, 4243, 9, 494, 3653, 3302, 2367, 4239, 3, 4376,
	3459, 4003, 1634, 4060, 4090, 44, 3359, 4375, 2368, 4367,
	657, 3270, 4140, 708, 3982, 725, 4216, 1419, 3916, 2720,
	1412, 4108, 1705, 2657, 4352, 705, 4096, 2976, 3909, 1537,
	3867, 712, 3504, 3868, 3623, 1748, 3903, 689, 4045, 3043,
	3950, 3706, 108, 550, 553, 2304, 4099, 2182, 598, 3714,
	3859, 1460, 2471, 3180, 1747, 653, 3472, 675, 3002, 2708,
	3927, 2534, 3813, 3437, 101, 107, 3796, 2249, 1467, 3902,
	1171, 3360, 2915, 4366, 1750, 2916, 751, 3303, 1414, 1150,
	3618, 3698, 491, 3116, 3509, 2946, 2922, 3629, 2988, 3597,
	2923, 1218, 1565, 2475, 3585, 3576, 3016, 2173, 816, 3079,
	2640, 134, 2633, 3163, 1416, 2871, 4097, 2639, 105, 2606,
	2502, 1267, 2849, 3457, 1566, 1158, 3178, 1379, 2461, 717,
	1162, 2235, 1390, 3232, 711, 2872, 2237, 1411, 2564, 1418,
	2477, 699, 1207, 1268, 1753, 2637, 2174, 2152, 2111, 2046,
	1244, 1724, 1448, 694, 2969, 2498, 1615, 1611, 1079, 641,
	1076, 2357, 2281, 1456, 2711, 2874, 673, 1451, 2588, 1301,
	2116, 1279, 1385, 3083, 2164, 1641, 1153, 2086, 1614, 1072,
	1073, 2431, 1475, 2242, 2239, 669, 682, 1202, 1397, 1189,
	3715, 670, 574, 1389, 1388, 1387, 3278, 1166, 573, 1278,
	1263, 2078, 2320, 2079, 656, 2045, 715, 1717, 1177, 1173,
	692, 1179, 1180, 665, 556, 4702, 125, 1154, 4696, 4683,
	4667, 4653, 4621, 129, 4619, 4590, 4587, 4586, 4585, 4570,
	4568, 4470, 4466, 4461, 100, 4142, 4141, 3375, 3879, 2109,
	2519, 3631, 1181, 4336, 3450, 3279, 2551, 4023, 2550, 3874,
	3875, 3872, 3873, 3419, 3420, 86, 3507, 4646, 4608, 4606,
	4691, 3505, 4645, 4021, 4607, 3358, 3129, 2980, 3878, 1727,
	4403, 3453, 4402, 4611, 4350, 655, 4024, 566, 3451, 662,
	99, 3797, 97, 3983, 71, 1439, 688, 94, 4552, 2669,
	4222, 3799, 2548, 4031, 47, 701, 3000, 4502, 3985, 3452,
	4368, 4308, 2038, 679, 1353, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 667, 2369, 2381, 2379, 2378, 2377,
	2380, 2376, 2375, 2374, 2370, 2371, 2388, 2372, 2387, 2386,
	2373, 2385, 2384, 2383, 2382, 2548, 122, 2381, 2379, 2378,
	2377, 2380, 2376, 2375, 2374, 42, 42, 2388, 42, 2387,
	2386, 42, 2385, 2384, 2383, 2382, 3897, 42, 3179, 1183,
	4349, 3260, 505, 2725, 1312, 3768, 3233, 4115, 4221, 3565,
	3293, 4639, 570, 4055, 1149, 3765, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3614, 3853,
	1500, 3299, 4410, 2236, 3857, 3300, 3299, 3329, 3328, 3578,
	3300, 3166, 88, 3139, 3138, 4208, 3598, 3978, 3802, 4425,
	3900, 89, 89, 4335, 89, 2942, 2960, 89, 1354, 3984,
	2949, 3979, 4163, 89, 3901, 4104, 2825, 3690, 2581, 1170,
	114, 112, 113, 545, 1257, 2587, 2954, 2953, 3400, 1066,
	568, 3314, 3315, 4358, 3401, 3402, 2115, 2441, 2442, 3236,
	3313, 3800, 3801, 3803, 3804, 3805, 2863, 2622, 1616, 2862,
	1617, 2950, 2864, 2155, 2156, 2440, 2947, 1240, 4427, 1241,
	1242, 1243, 2113, 2114, 1242, 1243, 4337, 2956, 3651, 2932,
	4355, 148, 4358, 145, 89, 146, 2133, 2933, 1331, 565,
	564, 668, 2958, 2190, 3928, 2749, 3322, 1251, 2112, 3213,
	4353, 1222, 1223, 1339, 650, 1226, 2473, 2474, 2586, 1298,
	2478, 2488, 2487, 2478, 2948, 2481, 2480, 3102, 2482, 4355,
	3536, 150, 149, 2492, 4443, 3671, 3675, 3673, 2618, 2446,
	2936, 2157, 2499, 2570, 96, 96, 2569, 96, 1213, 540,
	96, 1224, 1225, 136, 2084, 4359, 96, 563, 2207, 137,
	1403, 1404, 4463, 645, 153, 4464, 644, 4465, 3347, 1356,
	1357, 1214, 4645, 4607, 4605, 1399, 1402, 1403, 1404, 1400,
	1351, 1401, 1406, 1352, 1227, 1252, 1253, 647, 645, 2392,
	543, 646, 3935, 3478, 4359, 2153, 2154, 3058, 4690, 3933,
	4646, 4444, 643, 2952, 4644, 4643, 4608, 2955, 2995, 1165,
	3191, 2163, 1161, 2162, 2161, 2945, 2160, 2159, 2158, 1260,
	1375, 4088, 1228, 151, 3109, 152, 3191, 666, 1335, 1336,
	3107, 598, 3895, 3036, 1150, 1305, 3887, 3191, 1380, 1348,
	4022, 651, 3885, 1383, 2607, 2610, 2608, 2609, 2611, 2612,
	2613, 2614, 3108, 3106, 4556, 1410, 1415, 4555, 4303, 4506,
	4494, 1433, 1434, 1150, 4324, 1150, 1150, 4049, 3476, 1150,
	1399, 1402, 1403, 1404, 1400, 3814, 1401, 1406, 3471, 1150,
	2712, 2713, 3040, 3817, 1328, 3444, 4462, 1509, 1511, 4168,
	1254, 1513, 4301, 108, 4407, 3815, 3816, 4157, 4167, 590,
	3825, 584, 595, 577, 3240, 3239, 3241, 3238, 3843, 3041,
	2600, 1407, 3245, 2997, 3237, 3234, 4564, 4040, 3235, 4493,
	3243, 2535, 1314, 1528, 585, 4699, 3823, 1532, 1533, 1534,
	1535, 1536, 3630, 1540, 3242, 3619, 3620, 3621, 3622, 3848,
	142, 4419, 1454, 732, 1479, 733, 735, 736, 737, 738,
	4401, 3244, 3246, 734, 2316, 4165, 1314, 4086, 1266, 1382,
	4669, 4698, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 2144,
	108, 3506, 2145, 4668, 2999, 4038, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 2582, 1559, 1560, 1562, 1562, 1562, 4035, 1567, 1567,
	1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1425, 4445, 1338, 3986, 1393, 3577, 3507, 544,
	4665, 147, 2394, 2395, 2393, 664, 2188, 138, 4583, 3321,
	4159, 1409, 3798, 3987, 4629, 4458, 567, 3128, 3447, 1567,
	3600, 1221, 4417, 1314, 1216, 4456, 4457, 3108, 3541, 3119,
	3101, 143, 3913, 3106, 4018, 3182, 4329, 3473, 3529, 576,
	575, 578, 2947, 4200, 3433, 554, 1457, 2166, 2313, 583,
	3628, 679, 679, 1394, 2189, 126, 3247, 3320, 3894, 1481,
	3438, 3439, 3440, 3441, 3442, 4061, 2191, 587, 4015, 4572,
	4116, 4014, 591, 2951, 3886, 1306, 1722, 4013, 2944, 1376,
	2594, 1215, 4565, 2085, 1510, 3884, 2961, 2484, 594, 4012,
	2948, 1568, 1569, 555, 2485, 4032, 3989, 2963, 3001, 154,
	1377, 4209, 1567, 1567, 2501, 4356, 3855, 1538, 1561, 1563,
	1564, 1315, 1322, 1323, 1325, 1326, 1327, 4220, 1329, 1330,
	579, 1332, 1333, 1334, 1376, 1337, 3988, 1340, 1341, 1342,
	1343, 1344, 4409, 1435, 3856, 1440, 1440, 1441, 1441, 1447,
	1436, 1442, 1436, 1436, 4356, 115, 1436, 1259, 1261, 1321,
	1265, 1601, 2115, 3603, 3601, 2947, 128, 109, 109, 3599,
	87, 4334, 2947, 109, 4492, 1558, 132, 140, 139, 109,
	1313, 4302, 1324, 4164, 4158, 3602, 2998, 4011, 2113, 2114,
	1405, 3435, 4009, 582, 1347, 1178, 1239, 3438, 3439, 3440,
	3441, 3442, 551, 4037, 4010, 3165, 136, 1405, 3173, 3175,
	3174, 3183, 4148, 2948, 3167, 3182, 4438, 1604, 4237, 2146,
	2948, 4152, 4153, 1319, 136, 4034, 663, 580, 581, 588,
	2123, 592, 593, 596, 137, 141, 2529, 2530, 3627, 1732,
	1733, 1731, 4371, 4372, 1602, 1603, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 2931, 3446, 1320, 1712, 1316,
	3543, 3544, 4019, 2169, 1079, 3530, 3531, 3532, 130, 1079,
	131, 1150, 1405, 552, 1472, 1473, 1471, 4581, 2048, 4576,
	1255, 2314, 2315, 1472, 1473, 1471, 3624, 3625, 3024, 3025,
	1238, 1317, 1318, 1474, 2943, 4579, 2525, 1236, 1237, 552,
	1175, 1174, 1474, 1235, 4318, 1234, 136, 1233, 108, 1232,
	598, 4415, 3542, 2170, 1264, 549, 4232, 141, 1726, 1697,
	1698, 1699, 1700, 1701, 2117, 2080, 1178, 3586, 2524, 598,
	3587, 107, 3588, 1176, 3860, 3861, 2038, 1749, 3364, 4692,
	4679, 4508, 1626, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1165, 4507, 1165, 1757, 2468,
	3086, 3515, 1608, 2119, 1707, 3168, 2118, 4705, 3074, 2536,
	2663, 3073, 4700, 1408, 1631, 1725, 4684, 4656, 1172, 642,
	1730, 2518, 4307, 1619, 1150, 3118, 138, 1150, 1620, 668,
	4191, 2042, 2042, 2042, 2042, 2088, 1310, 1702, 552, 1709,
	1710, 4080, 2090, 2548, 2666, 2664, 2659, 1721, 3098, 3893,
	2089, 2661, 1755, 1728, 3890, 3086, 3626, 1421, 1423, 2470,
	3096, 2087, 3469, 3095, 108, 1421, 1423, 3103, 3035, 3031,
	3005, 1605, 1606, 3004, 3169, 2072, 2595, 2150, 2470, 1737,
	598, 1735, 1703, 1262, 1169, 2222, 2073, 2092, 2221, 2470,
	2220, 1168, 2053, 2054, 4083, 3464, 2470, 1392, 2036, 3075,
	3076, 123, 1191, 123, 1182, 2660, 2662, 2665, 2667, 2049,
	489, 3181, 2796, 3008, 696, 2143, 2470, 3876, 3007, 1515,
	1516, 118, 2793, 1627, 2061, 2106, 127, 2062, 2063, 2064,
	2537, 3094, 3650, 4327, 1628, 3363, 2068, 89, 3312, 2051,
	3033, 1739, 3032, 552, 2869, 4588, 2076, 2126, 2040, 2044,
	1514, 1512, 4578, 4580, 4467, 2766, 675, 675, 675, 675,
	4677, 3118, 1309, 4678, 2124, 4676, 2743, 89, 1708, 121,
	3044, 1150, 652, 2629, 2179, 2549, 1415, 1711, 2216, 2065,
	1720, 2067, 1729, 2470, 1713, 3514, 140, 139, 3085, 1422,
	2526, 2436, 2252, 1517, 1745, 2052, 4162, 1422, 1630, 1531,
	3117, 1517, 1746, 1530, 586, 1529, 2104, 2047, 108, 2469,
	120, 1480, 1296, 108, 1204, 3092, 3086, 1490, 2209, 2446,
	1500, 3089, 2071, 1517, 3088, 3093, 4190, 2210, 2469, 2193,
	2217, 4189, 2306, 2305, 3092, 3086, 2215, 1500, 2219, 2469,
	3089, 3781, 3779, 3088, 3093, 1256, 2469, 2859, 1514, 3466,
	2075, 2082, 2081, 3086, 4198, 2740, 2091, 3869, 1165, 3949,
	2241, 3087, 2468, 2097, 2098, 3109, 2469, 2100, 2121, 2194,
	1538, 3107, 1150, 3086, 1757, 3877, 2197, 2037, 1165, 4439,
	4440, 3087, 2468, 2103, 4474, 1515, 1516, 2175, 4436, 4437,
	96, 3094, 96, 2125, 2307, 1515, 1516, 2122, 4026, 1479,
	3085, 1540, 675, 3780, 3493, 3492, 2165, 2168, 2280, 108,
	2641, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 3381, 3379, 2279, 2312,
	2317, 4225, 4224, 2469, 2850, 4027, 3117, 3127, 108, 2167,
	3112, 1493, 1494, 1495, 1496, 1497, 1490, 2184, 3115, 1500,
	2218, 3067, 3066, 2361, 3064, 3063, 2866, 2865, 1538, 3126,
	2282, 2215, 2183, 2737, 3125, 4475, 3494, 675, 2389, 2390,
	2187, 2185, 2186, 2171, 3124, 2341, 3123, 2195, 2196, 2349,
	2198, 3122, 3121, 2343, 2346, 2208, 3120, 2273, 3380, 4182,
	2734, 2359, 679, 679, 679, 679, 2445, 1245, 2559, 2259,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 679, 3068, 1500, 2272, 3065, 688, 2867, 2309,
	669, 2311, 1627, 2245, 1757, 1474, 1230, 1158, 1430, 1431,
	3054, 1220, 1247, 1628, 2257, 3053, 2323, 2288, 2326, 4659,
	4626, 4658, 701, 3052, 3262, 1079, 2261, 2262, 2263, 2269,
	3051, 1424, 2286, 2287, 2285, 3050, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 2127, 2453,
	1500, 2130, 2131, 2132, 3049, 2134, 2135, 1432, 2279, 2136,
	2283, 3048, 2787, 2137, 2786, 4377, 2138, 4511, 3047, 4510,
	2139, 2140, 2358, 2141, 2142, 1421, 1423, 2397, 2617, 2565,
	2616, 1246, 2560, 1471, 1472, 1473, 1471, 2402, 2544, 2404,
	2102, 1272, 2407, 1361, 1185, 1538, 1472, 1473, 1471, 2458,
	1474, 2338, 2339, 1474, 2467, 2327, 2328, 2329, 2330, 2331,
	1231, 3203, 1219, 1249, 2428, 1474, 1184, 2451, 679, 2358,
	2430, 2809, 4682, 1430, 1431, 1417, 2800, 2250, 2251, 2355,
	2508, 2509, 2510, 2511, 2512, 4655, 4566, 2495, 2496, 2497,
	4377, 560, 4452, 4512, 4451, 2452, 1424, 1473, 1471, 1373,
	3003, 1715, 2542, 2543, 2483, 2486, 4503, 3824, 2489, 2490,
	2491, 2434, 3818, 2438, 2437, 1474, 1258, 2443, 4530, 3029,
	2243, 3373, 1432, 2763, 2764, 2765, 2528, 2457, 3191, 2258,
	2455, 2450, 3910, 679, 2504, 2505, 2506, 2507, 2479, 696,
	1421, 1423, 1371, 1468, 1472, 1473, 1471, 3896, 2243, 163,
	89, 492, 504, 2513, 4299, 163, 4671, 1422, 3757, 3755,
	163, 2788, 2284, 1474, 4406, 4314, 2975, 2500, 4305, 3756,
	640, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 163,
	2515, 1500, 4160, 4298, 3071, 1472, 1473, 1471, 163, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 163, 2545, 1500, 1474, 4300, 4229, 2520, 4693, 2522,
	4056, 2514, 163, 1164, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 4546, 2310, 1500, 4025,
	1472, 1473, 1471, 4161, 163, 640, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 492, 163, 1500, 1474,
	3908, 1472, 1473, 1471, 1367, 3907, 2334, 2335, 2336, 4686,
	3606, 3604, 2340, 4704, 2342, 2345, 2348, 4694, 2353, 2354,
	1474, 3605, 1422, 4543, 2364, 1366, 1362, 1363, 1364, 1365,
	1368, 1369, 1370, 1372, 3906, 4545, 3905, 3834, 2396, 3200,
	2398, 2399, 103, 696, 696, 2403, 3788, 2405, 2406, 3074,
	2424, 2663, 3073, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 3787, 3554, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3488,
	3487, 1500, 4542, 696, 3486, 2666, 2664, 2659, 110, 2366,
	116, 3485, 2661, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 42, 732, 1500, 733, 735,
	736, 737, 738, 3484, 3425, 1562, 734, 2316, 3376, 71,
	1472, 1473, 1471, 3173, 3175, 3174, 93, 3924, 2974, 47,
	2972, 4688, 1150, 1472, 1473, 1471, 2959, 2254, 1304, 1474,
	3075, 3076, 3197, 2088, 4635, 1303, 2660, 2662, 2665, 2667,
	2090, 1391, 1474, 2232, 1067, 1068, 1069, 4703, 2089, 2265,
	2267, 2268, 2255, 3762, 2234, 2256, 1167, 2266, 4687, 2087,
	4670, 89, 3449, 3448, 3923, 1374, 4664, 4289, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	2233, 4592, 1500, 1472, 1473, 1471, 2577, 4584, 4282, 2573,
	1384, 4514, 3760, 2585, 1472, 1473, 1471, 4468, 2228, 2224,
	4449, 4377, 1474, 1410, 3173, 3175, 3174, 4448, 4394, 2230,
	2226, 2095, 2094, 1474, 1383, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 2561, 4393, 1500,
	2231, 1472, 1473, 1471, 4387, 2229, 2225, 2557, 4386, 4455,
	4166, 2313, 675, 3173, 3175, 3174, 1472, 1473, 1471, 2563,
	1474, 2729, 2730, 2731, 3264, 2604, 4063, 3697, 3533, 2567,
	3611, 3019, 3018, 2571, 2556, 1474, 2625, 2555, 2308, 2096,
	2083, 1744, 1743, 2603, 1716, 49, 90, 56, 55, 58,
	1714, 1299, 562, 3609, 96, 2227, 2223, 4501, 4500, 4499,
	4283, 2722, 1276, 4498, 4495, 4424, 4404, 4344, 4338, 4231,
	2728, 4230, 4156, 4155, 2767, 4136, 4087, 4039, 62, 92,
	91, 3173, 3175, 3174, 1275, 57, 1757, 4036, 4008, 2732,
	2733, 163, 3977, 2735, 2736, 2707, 3976, 2738, 2739, 2572,
	2630, 1738, 3945, 2576, 3173, 3175, 3174, 492, 3899, 3898,
	2584, 3833, 3832, 3831, 3830, 3821, 3820, 3819, 1454, 1454,
	2592, 2591, 3786, 3783, 3758, 3753, 3744, 3740, 3735, 3734,
	2723, 3733, 3607, 3596, 3584, 3580, 3573, 3572, 3571, 3491,
	2279, 3483, 3482, 3481, 3407, 2599, 3212, 3211, 2602, 3209,
	3069, 2970, 2769, 2770, 2771, 2647, 2868, 1527, 1526, 1525,
	2624, 69, 70, 2583, 4285, 2554, 163, 2761, 2762, 2626,
	2621, 2099, 4390, 2623, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 4633, 4291, 2790, 4295, 2742, 696, 2727, 2638, 78,
	1345, 79, 2716, 4205, 696, 3634, 4554, 3770, 4537, 2273,
	3770, 4414, 2282, 3770, 4412, 3634, 696, 4070, 696, 679,
	3770, 4234, 3634, 4144, 84, 696, 2801, 2802, 2803, 3634,
	4139, 4084, 696, 60, 3634, 4043, 4062, 2452, 3191, 696,
	2628, 696, 675, 3922, 1310, 675, 3634, 3920, 2038, 3851,
	2038, 3850, 2753, 640, 2751, 2752, 3770, 3769, 679, 3634,
	3633, 3417, 3416, 3413, 3414, 2432, 163, 4001, 2772, 3413,
	3412, 2742, 696, 1457, 2314, 2315, 2597, 2596, 2332, 2579,
	1757, 2332, 696, 2211, 696, 1633, 1632, 163, 2768, 4000,
	3427, 3017, 2776, 2432, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 3699, 3410, 1500, 3718,
	2533, 4296, 4284, 492, 66, 67, 73, 3693, 74, 3299,
	1079, 3409, 3408, 3300, 3017, 2433, 102, 2435, 1380, 2854,
	4637, 2038, 2283, 2247, 1755, 2148, 2147, 2852, 2598, 1308,
	89, 3400, 1066, 3718, 3390, 3391, 3393, 3401, 3402, 3392,
	3394, 3395, 2211, 2433, 2532, 2038, 1307, 2782, 2808, 1308,
	2332, 4345, 2258, 4218, 3396, 3397, 3398, 3399, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	2211, 3960, 1500, 2810, 2742, 3718, 598, 3191, 2246, 2926,
	2929, 3634, 2853, 2211, 3023, 3428, 3415, 1310, 3210, 3046,
	2439, 2819, 2817, 2816, 2921, 2742, 2924, 2925, 2615, 2855,
	2601, 2101, 2856, 2553, 2548, 2547, 2248, 1378, 1725, 2110,
	2038, 1736, 1734, 1613, 1381, 89, 2042, 2878, 4442, 2917,
	4413, 1703, 2721, 2857, 3011, 4185, 2860, 4183, 4002, 1619,
	3778, 3022, 3775, 2476, 2503, 2478, 2870, 3185, 3057, 3056,
	3026, 3027, 2499, 2914, 2712, 2713, 4187, 1314, 2527, 2494,
	2962, 2964, 2493, 1706, 1295, 2965, 2966, 2977, 2967, 2968,
	3835, 2566, 2179, 1211, 3692, 1210, 4674, 4673, 679, 4650,
	4648, 679, 4642, 4641, 4614, 2978, 2824, 2826, 4609, 2971,
	4603, 4601, 4548, 4547, 2833, 2834, 2835, 2973, 3915, 3911,
	3037, 3699, 3426, 3421, 3014, 3021, 3013, 2993, 2715, 2709,
	2546, 59, 61, 2149, 2120, 1311, 2206, 87, 3683, 1461,
	1462, 2205, 2719, 2718, 2996, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 2203, 2717, 1500,
	2200, 2201, 2204, 3015, 2199, 3198, 2202, 4434, 3201, 4348,
	1464, 3204, 539, 3020, 2750, 1466, 1465, 3214, 1463, 85,
	2758, 2777, 2778, 2779, 2780, 2781, 2757, 4396, 4122, 3891,
	3866, 675, 3187, 3773, 3030, 3523, 3522, 3406, 3084, 3405,
	3193, 3194, 3195, 3080, 3091, 2175, 3061, 1757, 3077, 2806,
	3164, 3404, 3189, 3090, 3097, 2930, 3100, 3113, 2920, 133,
	3034, 3172, 4340, 3055, 4213, 3111, 4339, 4343, 3039, 3205,
	4397, 3042, 4342, 1413, 43, 3060, 1461, 1462, 4102, 541,
	542, 4, 3072, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 4100, 3271, 1500, 4151, 4150,
	4042, 2279, 561, 2575, 2574, 2093, 3105, 1464, 1459, 3225,
	4028, 4029, 1466, 1465, 3104, 1463, 144, 3059, 43, 1449,
	3296, 3301, 4473, 3883, 3729, 675, 106, 3251, 3534, 3252,
	3253, 1450, 3254, 3255, 3378, 2631, 3256, 1629, 1293, 1277,
	4630, 163, 1274, 3248, 1273, 1217, 3250, 4073, 4072, 1391,
	1164, 3952, 3265, 3266, 3267, 3268, 3306, 108, 2250, 2251,
	2273, 1270, 1271, 3828, 3826, 3454, 3216, 2521, 3192, 1350,
	1408, 3829, 3827, 4346, 4304, 4046, 3791, 3777, 3423, 3206,
	3295, 3261, 2172, 3221, 1269, 2321, 2322, 4518, 3208, 2095,
	2094, 1445, 1446, 1359, 3304, 1443, 1444, 3184, 3218, 3222,
	3186, 3297, 3951, 3219, 2756, 3224, 1437, 1438, 3223, 4517,
	4516, 4005, 2755, 3374, 2620, 1250, 690, 4431, 4430, 4429,
	3387, 4428, 3249, 4214, 4177, 4169, 4120, 3931, 3078, 691,
	102, 3930, 3656, 492, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 701, 3362, 1500, 3017,
	1380, 640, 640, 2982, 2983, 2984, 640, 3355, 4652, 4651,
	3308, 4469, 3310, 3311, 1164, 163, 3846, 679, 3172, 3477,
	640, 640, 3475, 3382, 3474, 3386, 163, 598, 3045, 2818,
	492, 492, 492, 492, 2797, 3443, 3221, 2794, 2760, 2066,
	1469, 1209, 3309, 1208, 3263, 163, 163, 163, 163, 163,
	4651, 163, 3429, 3366, 3367, 3368, 2878, 3369, 3370, 3316,
	4534, 4652, 4227, 3403, 2244, 683, 3372, 163, 163, 3298,
	3682, 104, 640, 68, 3354, 687, 686, 4395, 163, 4256,
	65, 4258, 23, 1, 3280, 3281, 3282, 3283, 3284, 3285,
	3286, 3287, 3288, 3289, 3290, 3365, 4333, 2513, 4257, 22,
	677, 3456, 4259, 24, 4260, 25, 3516, 4254, 18, 4253,
	17, 679, 4252, 16, 4255, 19, 4251, 15, 1164, 4245,
	11, 3445, 50, 3272, 3273, 3274, 3275, 3276, 3277, 3384,
	2593, 640, 640, 640, 3385, 2128, 1164, 4280, 39, 4278,
	37, 4277, 36, 4281, 40, 597, 3465, 4276, 32, 3812,
	3470, 4275, 31, 3811, 3411, 4274, 30, 3424, 4271, 27,
	3479, 3617, 3511, 4270, 26, 4250, 14, 640, 4247, 13,
	3436, 3434, 4246, 12, 2994, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 4328, 3460, 1500,
	4244, 10, 3462, 4199, 3511, 163, 163, 3822, 3616, 2706,
	163, 3463, 1164, 1723, 4017, 1188, 2531, 1300, 4341, 4101,
	4211, 3512, 4210, 3795, 163, 640, 3480, 163, 163, 163,
	163, 3794, 2987, 2986, 3518, 3519, 3520, 1294, 2580, 163,
	2108, 3525, 3526, 3077, 3528, 3081, 3495, 163, 3082, 3496,
	3006, 163, 3583, 3513, 3070, 4175, 3632, 2619, 3546, 3489,
	3490, 3551, 3461, 3172, 2647, 2151, 3545, 2605, 3654, 1360,
	2454, 2459, 3852, 3503, 4054, 3502, 2917, 3501, 1703, 1152,
	117, 2558, 1229, 513, 2456, 2940, 3649, 4212, 1297, 2939,
	2957, 3688, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647,
	3648, 163, 2472, 1386, 3566, 3973, 3568, 2938, 492, 3581,
	2937, 3521, 4306, 2941, 1638, 1636, 1637, 1635, 1640, 1639,
	3659, 519, 3589, 3590, 3591, 1621, 4381, 3707, 3696, 1470,
	745, 135, 3114, 648, 649, 124, 3613, 521, 1508, 2754,
	2861, 1077, 1078, 1070, 1164, 4472, 1164, 2745, 4223, 1164,
	4103, 4215, 4370, 3685, 3686, 3687, 1164, 3306, 3657, 3701,
	2179, 1164, 1164, 1164, 108, 3635, 1455, 4105, 3929, 3655,
	2807, 163, 1557, 163, 2356, 714, 3567, 661, 3713, 3948,
	4107, 2264, 3702, 728, 727, 726, 723, 3703, 3767, 724,
	2391, 4357, 2253, 3292, 1425, 3304, 3291, 3666, 3667, 3668,
	3294, 3669, 1482, 3418, 1358, 703, 1429, 3672, 1428, 3674,
	1427, 1426, 1420, 672, 2425, 3028, 1398, 1396, 1395, 3670,
	1741, 1562, 1562, 1562, 1567, 1567, 1567, 1570, 1571, 1572,
	1573, 1567, 1567, 1567, 1609, 2714, 2710, 163, 163, 163,
	671, 676, 3743, 3723, 3700, 46, 2759, 1248, 3689, 4114,
	111, 685, 684, 3172, 693, 3371, 29, 21, 20, 1205,
	2636, 2658, 1186, 48, 3705, 1164, 54, 3782, 53, 3717,
	3776, 51, 52, 2175, 2981, 2523, 3724, 3719, 3720, 3721,
	3722, 4380, 4574, 3784, 3660, 3661, 3662, 3663, 3664, 1280,
	4591, 3725, 3726, 3727, 4624, 1355, 3738, 38, 35, 3741,
	34, 33, 3745, 3807, 3808, 3809, 3754, 4272, 4266, 3691,
	4265, 4268, 3746, 3747, 3748, 4267, 4264, 4269, 3524, 3654,
	4263, 3774, 4262, 4261, 4279, 3771, 3772, 3764, 3838, 3836,
	4249, 3537, 4248, 3539, 3854, 4558, 4557, 5, 98, 95,
	41, 1164, 163, 119, 3552, 1148, 3555, 2, 3557, 3559,
	3561, 3563, 0, 0, 3792, 0, 0, 1568, 1569, 0,
	163, 0, 0, 1601, 1602, 1603, 163, 163, 640, 640,
	640, 163, 3785, 0, 0, 1561, 1563, 1564, 0, 0,
	0, 0, 0, 3862, 3863, 0, 0, 3806, 0, 3849,
	0, 3810, 3840, 0, 3841, 3569, 3570, 3842, 0, 3844,
	3845, 3511, 3847, 3579, 0, 0, 3582, 0, 0, 0,
	0, 0, 0, 3592, 3593, 3594, 3595, 0, 0, 0,
	0, 3608, 3610, 3612, 3837, 0, 3511, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3615, 0,
	1500, 0, 3681, 0, 0, 0, 0, 0, 0, 0,
	0, 3882, 0, 3084, 0, 3864, 0, 0, 3080, 3091,
	0, 0, 0, 3858, 0, 0, 3888, 0, 3090, 3871,
	3865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3926, 0, 0, 0, 0, 0, 3880, 0,
	0, 0, 0, 0, 0, 0, 3892, 0, 0, 0,
	3889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3917, 3919, 3918, 0, 0, 0,
	0, 0, 0, 3654, 3654, 3716, 0, 0, 0, 0,
	0, 0, 3932, 3934, 3172, 3957, 0, 0, 3707, 0,
	0, 0, 0, 675, 0, 0, 3962, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3914,
	0, 1500, 0, 0, 0, 0, 0, 0, 3904, 0,
	0, 3912, 0, 0, 0, 108, 3936, 3937, 3938, 3939,
	0, 0, 3306, 3954, 3943, 3731, 3732, 0, 3946, 3947,
	0, 0, 0, 3739, 0, 0, 3742, 0, 107, 0,
	0, 0, 0, 3749, 3750, 3751, 3752, 0, 3997, 0,
	0, 0, 3759, 3761, 3763, 0, 3956, 0, 3766, 0,
	3304, 0, 0, 0, 0, 0, 0, 3221, 0, 0,
	0, 3970, 0, 0, 0, 0, 0, 3974, 4004, 0,
	0, 0, 0, 0, 3971, 0, 3995, 0, 3172, 3998,
	0, 0, 3964, 3953, 0, 0, 0, 0, 0, 0,
	0, 669, 3961, 3362, 0, 0, 3965, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3172, 4058, 4059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 3980, 0, 3991,
	3992, 0, 3990, 3981, 0, 0, 3993, 3994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4082, 0, 0,
	0, 0, 4007, 4006, 1164, 0, 0, 0, 0, 0,
	4016, 0, 163, 0, 163, 4020, 0, 0, 1164, 0,
	4057, 4048, 4030, 1164, 4050, 4051, 4033, 4053, 0, 0,
	0, 0, 4066, 4041, 3966, 3967, 3968, 3969, 4047, 4044,
	0, 4052, 0, 0, 0, 0, 0, 0, 0, 679,
	640, 640, 0, 0, 0, 4064, 4065, 0, 3957, 4127,
	0, 0, 0, 0, 0, 0, 0, 4075, 4091, 4076,
	3680, 4074, 0, 0, 0, 0, 4067, 0, 0, 4068,
	0, 0, 0, 0, 0, 0, 0, 0, 4092, 4093,
	4094, 0, 0, 0, 0, 0, 108, 3259, 0, 0,
	0, 0, 0, 0, 1150, 4077, 0, 4079, 4089, 4081,
	0, 0, 163, 163, 4124, 0, 0, 0, 1164, 4126,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4123, 0, 4133, 0, 0, 0,
	4125, 108, 4130, 4121, 0, 1164, 4147, 0, 4149, 4145,
	4128, 0, 0, 4119, 0, 4176, 0, 0, 4131, 0,
	4134, 4181, 0, 4143, 4146, 3362, 0, 0, 0, 0,
	0, 3172, 0, 0, 0, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 0, 1500,
	0, 4154, 0, 0, 0, 0, 0, 3258, 0, 4179,
	0, 0, 0, 4196, 0, 0, 0, 0, 4170, 0,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 4172, 0, 1500, 4180, 4173, 0, 3707, 0,
	0, 4171, 4174, 0, 0, 0, 0, 0, 4188, 0,
	4206, 0, 0, 0, 4186, 4106, 4109, 0, 1150, 0,
	1150, 0, 0, 4193, 0, 0, 0, 0, 4238, 0,
	0, 4195, 0, 4235, 4197, 108, 0, 0, 0, 0,
	0, 0, 3172, 0, 0, 0, 0, 1538, 0, 0,
	4184, 0, 0, 0, 0, 108, 0, 0, 4228, 0,
	4226, 0, 0, 0, 0, 0, 4192, 1150, 0, 0,
	0, 0, 0, 0, 0, 4325, 0, 0, 4236, 0,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 4313, 4297, 1500, 0, 0, 0, 163, 0,
	4315, 0, 4317, 163, 0, 0, 163, 163, 163, 0,
	0, 0, 0, 0, 0, 0, 3362, 4309, 3362, 0,
	4310, 0, 4316, 4369, 3917, 4373, 3918, 0, 4323, 4330,
	0, 3306, 2919, 4361, 0, 0, 4326, 0, 2928, 2928,
	0, 0, 4332, 0, 0, 0, 4320, 0, 0, 0,
	4347, 0, 0, 0, 0, 0, 4364, 2365, 0, 1150,
	4360, 1150, 0, 0, 0, 0, 0, 1150, 0, 3304,
	0, 0, 0, 0, 0, 0, 0, 4321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4391,
	163, 0, 0, 0, 0, 4400, 0, 0, 1164, 1164,
	0, 0, 0, 0, 640, 1538, 0, 0, 4426, 0,
	0, 0, 4418, 0, 0, 0, 0, 3271, 163, 163,
	640, 1164, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 4398, 0, 0, 0, 0, 4405, 0, 640, 0,
	0, 0, 0, 0, 4435, 4422, 0, 0, 0, 0,
	0, 4420, 0, 3917, 0, 3918, 0, 4447, 4421, 4423,
	0, 0, 0, 1164, 695, 697, 0, 640, 4433, 1164,
	0, 1164, 4432, 0, 1164, 4416, 0, 0, 0, 0,
	4480, 0, 0, 4441, 0, 4453, 4485, 598, 4471, 4446,
	0, 4133, 4450, 0, 4459, 4479, 0, 0, 4497, 0,
	1164, 1164, 4385, 4109, 0, 4482, 4486, 4484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4496, 0,
	0, 0, 0, 1150, 4481, 0, 1150, 0, 0, 0,
	4483, 0, 1150, 1150, 1150, 1150, 4488, 1150, 1150, 4487,
	4522, 1150, 1150, 0, 4489, 4522, 3362, 0, 4504, 4522,
	4532, 4513, 4536, 4505, 4515, 3654, 0, 1150, 0, 4509,
	4453, 4524, 4525, 4526, 4519, 4540, 4529, 4374, 4378, 0,
	0, 0, 0, 0, 0, 3171, 4392, 3306, 0, 4533,
	0, 0, 1150, 0, 4541, 1150, 4544, 0, 1150, 4551,
	0, 4563, 0, 1164, 4553, 0, 0, 0, 4562, 0,
	4571, 1164, 1164, 1164, 2445, 4582, 4561, 0, 0, 4560,
	4567, 4559, 0, 4569, 598, 3304, 4535, 0, 4549, 4593,
	0, 4538, 4594, 0, 0, 108, 163, 4600, 0, 0,
	4597, 0, 163, 0, 0, 1150, 0, 0, 1164, 1150,
	0, 1150, 0, 4618, 4615, 1150, 0, 4522, 4573, 4522,
	0, 0, 0, 4627, 0, 0, 1150, 1150, 1150, 1150,
	0, 1150, 4454, 4616, 4522, 4522, 4522, 4602, 0, 4522,
	4604, 0, 4596, 0, 0, 0, 0, 4520, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 4634, 0, 4649,
	1150, 0, 1150, 4647, 1150, 0, 0, 1164, 4522, 0,
	4522, 4660, 0, 4662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4672, 0, 0, 3257, 0, 0,
	0, 0, 4657, 0, 1150, 4680, 163, 0, 0, 0,
	1150, 0, 4522, 0, 0, 0, 0, 0, 1150, 0,
	0, 1164, 0, 0, 156, 0, 4522, 0, 0, 0,
	4527, 0, 0, 0, 1150, 548, 0, 1150, 4685, 0,
	0, 0, 4522, 0, 0, 0, 4663, 1150, 0, 0,
	0, 0, 0, 1150, 0, 4522, 0, 0, 0, 0,
	0, 4522, 3171, 0, 0, 4697, 492, 0, 0, 0,
	0, 0, 2928, 2928, 2928, 0, 2928, 2928, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 4589, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1187,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 1203, 0, 1500, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 3202, 0,
	0, 0, 1164, 1164, 1164, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 163, 640, 0, 0,
	0, 0, 0, 0, 0, 1164, 1164, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0,
	0, 1500, 3199, 640, 0, 1164, 0, 640, 0, 0,
	0, 4661, 0, 0, 0, 0, 0, 640, 4666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 163,
	0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 1458, 0, 1500, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 492,
	492, 492, 492, 0, 0, 0, 1164, 492, 492, 1164,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 1164, 0, 492, 492, 1164, 163, 492, 0, 3196,
	2744, 0, 1164, 0, 1164, 1164, 1164, 1164, 1164, 1164,
	0, 157, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 157, 0, 0, 558, 0, 3171, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	0, 658, 1500, 0, 0, 0, 0, 0, 0, 0,
	157, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 658, 702, 1500, 0, 1164, 0, 0,
	1087, 0, 0, 1164, 157, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 163, 2791, 0,
	0, 2705, 1164, 0, 0, 0, 157, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 157,
	0, 1500, 0, 0, 0, 0, 1391, 0, 2654, 0,
	0, 0, 0, 0, 2678, 0, 0, 0, 0, 1484,
	0, 1487, 0, 0, 0, 0, 0, 0, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 0, 1485, 1486, 1483, 0,
	0, 0, 0, 0, 0, 0, 2653, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0,
	0, 1500, 0, 2675, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 1164, 0, 0, 1206, 506, 0, 2773,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 0, 0, 1500, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3171, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	0, 0, 1500, 2705, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 532, 533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	2654, 1302, 0, 0, 0, 0, 2678, 0, 0, 0,
	0, 0, 0, 0, 2644, 2643, 2656, 2663, 2642, 2655,
	2646, 0, 515, 2679, 522, 518, 0, 0, 527, 528,
	0, 0, 0, 0, 2688, 0, 0, 0, 2653, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 163, 0,
	1164, 2666, 2664, 2659, 0, 2675, 529, 0, 2661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2677, 2699, 2650, 2649, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	2645, 640, 0, 0, 0, 0, 640, 640, 0, 640,
	0, 0, 0, 0, 0, 0, 2651, 2652, 0, 0,
	2669, 0, 2660, 2662, 2665, 2667, 0, 0, 0, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 2928, 0, 0, 0, 525, 0,
	0, 0, 0, 1164, 0, 492, 0, 0, 0, 0,
	0, 517, 0, 0, 0, 492, 2644, 3498, 2656, 0,
	3497, 2655, 2646, 2695, 0, 2679, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 2703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 530, 2677, 2699, 2650, 2649, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2645, 0, 0, 0, 0, 0, 3171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3499, 3500,
	0, 0, 2669, 0, 0, 0, 1164, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2695, 523, 510, 511, 0,
	537, 0, 0, 0, 512, 514, 0, 508, 536, 535,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	2703, 0, 0, 163, 163, 0, 0, 0, 0, 2671,
	0, 2685, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 3171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 2682, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2648, 0, 0, 1087, 0, 0, 0, 0, 3171,
	0, 0, 492, 0, 0, 2928, 2928, 1164, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2672, 2673, 0, 0, 2676, 0, 0, 2681, 0,
	2686, 2683, 2684, 0, 2687, 2680, 0, 2690, 2689, 2691,
	0, 2692, 2693, 2694, 0, 0, 2696, 2697, 2698, 2700,
	2701, 2702, 0, 0, 0, 2674, 2704, 0, 640, 0,
	0, 0, 0, 0, 0, 2668, 0, 0, 158, 0,
	495, 2671, 0, 0, 0, 0, 0, 0, 2928, 158,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 659, 0,
	2682, 492, 1164, 492, 0, 492, 0, 158, 0, 2212,
	2213, 2214, 0, 2648, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 158, 1156, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2672, 2673, 495, 158, 2676, 0, 2670,
	2681, 0, 2686, 2683, 2684, 0, 2687, 2680, 0, 2690,
	2689, 2691, 0, 2692, 2693, 2694, 0, 0, 2696, 2697,
	2698, 2700, 2701, 2702, 0, 3171, 0, 2674, 2704, 0,
	0, 0, 0, 0, 0, 0, 0, 2668, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2333, 0, 0, 0, 0,
	0, 0, 0, 2337, 0, 0, 0, 0, 0, 0,
	2055, 2056, 2057, 2058, 2059, 0, 2060, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 2400, 2401, 0, 2928,
	0, 0, 0, 0, 2408, 2409, 2410, 0, 0, 0,
	0, 0, 492, 0, 0, 163, 3171, 0, 0, 0,
	0, 0, 2423, 0, 0, 0, 0, 0, 0, 0,
	0, 2670, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1612, 0, 0, 1087, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 492, 0, 492, 0, 0,
	1610, 1610, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 2192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 0, 157, 0, 0,
	1719, 558, 0, 0, 1752, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 2260, 1164, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 157, 157, 157,
	157, 157, 0, 157, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	2070, 0, 160, 0, 496, 0, 0, 0, 0, 0,
	2077, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 640,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 496,
	160, 0, 2427, 0, 2429, 163, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 157, 157, 0,
	0, 0, 658, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 157, 0, 1752, 157,
	157, 157, 157, 0, 0, 0, 158, 0, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 1088, 0, 658, 0, 0, 0, 0, 0, 1164,
	0, 0, 495, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2517, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 702, 0, 157, 0, 2538, 0, 0, 0, 0,
	0, 2540, 2541, 0, 1754, 0, 1610, 0, 0, 0,
	0, 0, 0, 2568, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4207,
	0, 0, 0, 658, 0, 157, 2240, 2240, 2240, 0,
	1661, 0, 2240, 0, 2240, 2240, 2240, 0, 2240, 2240,
	0, 0, 0, 1087, 2240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 2240,
	2240, 2240, 0, 0, 2240, 2240, 2240, 2240, 2240, 2240,
	0, 2627, 0, 2240, 2240, 2240, 2240, 2240, 2240, 2240,
	2240, 2240, 2240, 2240, 2240, 0, 0, 0, 0, 157,
	157, 157, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 0,
	0, 0, 0, 2724, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2741, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 2774, 0, 2775, 0,
	0, 0, 157, 0, 0, 1648, 0, 0, 157, 157,
	0, 0, 1662, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 2783, 2784, 2785, 0, 0, 0, 2789, 160,
	2792, 0, 0, 2795, 0, 0, 2798, 2799, 0, 0,
	0, 2804, 2805, 0, 0, 0, 0, 2811, 2812, 2813,
	0, 0, 2814, 0, 2815, 2552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 1088, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 2562, 2820, 2821, 2822, 2823, 1662, 0,
	2827, 2828, 2829, 2830, 2831, 2832, 0, 0, 0, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 0, 2848, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	495, 495, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 158, 158, 158, 158, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1675, 1678, 1679, 1680, 1681, 1682, 1683,
	2632, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 0, 1663, 1664, 1665, 1645, 1644,
	1676, 1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 1675,
	1678, 1679, 1680, 1681, 1682, 1683, 0, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	157, 1663, 1664, 1665, 1645, 1644, 1676, 1646, 1649, 1643,
	1647, 1642, 0, 0, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 0, 158, 158, 0, 0, 0, 659,
	0, 2176, 0, 0, 157, 0, 658, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 158, 158, 158, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 3190, 0, 0, 158, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 2851, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3226, 3227, 3228, 3229, 3230, 3231,
	158, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 2275, 0, 0, 658, 157, 0, 0, 0, 0,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 0, 0, 0, 0,
	1087, 1087, 0, 0, 0, 1666, 1754, 0, 0, 0,
	0, 0, 0, 0, 160, 2979, 0, 0, 0, 0,
	659, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2360, 0, 0, 3009, 3010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2240, 0, 0, 0, 0, 0,
	0, 2240, 2240, 2240, 2240, 2240, 158, 158, 158, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 2240,
	0, 2275, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 496, 496, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 160,
	160, 160, 160, 2912, 160, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 157, 0, 0, 157, 2858,
	1754, 158, 1087, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 557, 0, 0, 2884, 0, 0, 158,
	0, 0, 0, 0, 0, 158, 158, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2873, 0, 0, 0, 0, 0, 1086, 0,
	0, 3215, 0, 1155, 0, 2881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 160,
	0, 0, 0, 660, 0, 2177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 160, 160, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	160, 3637, 3638, 3639, 660, 2885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3665, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 2883, 2906, 160, 0, 3676, 3677, 3678, 3679,
	71, 496, 0, 0, 3684, 2276, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 3694, 3695, 0, 0, 0,
	0, 0, 3377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3704, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4289, 0,
	0, 0, 0, 0, 660, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 1754, 0, 4282,
	0, 3455, 4623, 4626, 4622, 2901, 0, 0, 157, 0,
	0, 0, 0, 0, 157, 702, 0, 0, 0, 158,
	0, 2240, 0, 0, 0, 0, 0, 0, 0, 0,
	2910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2891, 0, 0, 0, 0, 0, 158, 0, 0,
	160, 160, 160, 1610, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 158, 0, 659, 0, 96, 0, 0, 0, 0,
	0, 4283, 0, 0, 0, 0, 1087, 0, 157, 0,
	0, 3548, 2903, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 160,
	160, 2876, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 659, 158, 0, 0, 0, 0, 0, 0, 157,
	659, 0, 69, 70, 0, 4285, 0, 0, 0, 0,
	2888, 0, 0, 0, 0, 4294, 4286, 4287, 4288, 4292,
	4293, 4290, 0, 4291, 0, 4295, 0, 1088, 1088, 0,
	78, 0, 79, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 157, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 2877, 2879, 0, 0, 2882, 0, 0,
	2887, 0, 2892, 2889, 2890, 0, 2893, 2886, 0, 2896,
	2895, 2897, 0, 2898, 2899, 2900, 0, 0, 2902, 2904,
	2905, 2907, 2908, 2909, 0, 0, 0, 2880, 2911, 0,
	157, 157, 0, 0, 0, 0, 0, 2913, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4296, 4284, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 3940, 3941, 3942, 0, 3944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 3955, 0, 3958, 3959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 158, 0, 0, 158, 0, 0, 3789, 1088,
	0, 2875, 0, 3793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 3996, 0, 0, 0, 0, 0,
	0, 0, 3999, 0, 0, 0, 0, 0, 0, 658,
	0, 3839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 2912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 158, 0,
	0, 0, 0, 0, 495, 4069, 0, 0, 1391, 0,
	0, 0, 59, 61, 0, 0, 2884, 1087, 87, 0,
	0, 0, 0, 0, 0, 160, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4085, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 2881, 0, 0, 0, 0,
	0, 0, 0, 0, 4110, 4111, 4112, 4113, 0, 2176,
	0, 0, 0, 0, 4117, 4118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4132, 0,
	0, 0, 0, 0, 0, 660, 160, 0, 0, 0,
	0, 0, 0, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2276, 0, 0,
	0, 0, 0, 0, 1086, 2885, 0, 0, 0, 1086,
	1622, 0, 0, 0, 0, 0, 2894, 0, 157, 0,
	0, 0, 0, 0, 2275, 4178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2883, 2906, 0, 0, 0, 0, 0, 0,
	4201, 4202, 4203, 4204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 557, 0, 0,
	0, 4233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 1718, 557,
	0, 0, 1751, 3305, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2901, 0, 4311, 4312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4322, 0, 0, 0, 0, 0, 0, 0, 0,
	2910, 160, 4331, 0, 0, 0, 160, 0, 0, 160,
	1752, 2891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4351, 0, 0, 0, 495, 4362, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 2107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2129, 0, 0, 0,
	0, 0, 2903, 0, 0, 0, 658, 0, 0, 0,
	0, 0, 0, 160, 0, 658, 157, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 4408, 0, 0,
	0, 4411, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 160, 160, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 2876, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 495, 495,
	495, 495, 0, 2177, 0, 0, 495, 495, 0, 495,
	4194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 495, 0, 158, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 2877, 2879, 0, 743, 2882, 0, 0,
	2887, 0, 2892, 2889, 2890, 0, 2893, 2886, 0, 2896,
	2895, 2897, 0, 2898, 2899, 2900, 0, 0, 2902, 2904,
	2905, 2907, 2908, 2909, 2181, 0, 2181, 2880, 2911, 2318,
	0, 42, 0, 0, 0, 0, 2319, 2913, 0, 0,
	0, 2181, 2325, 2181, 4550, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 159, 47, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 659, 0, 2276, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 4595, 0, 160, 4598, 4599, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 89, 0, 4610,
	0, 0, 0, 4289, 0, 0, 0, 0, 0, 4363,
	0, 0, 0, 0, 0, 0, 0, 159, 1157, 0,
	0, 0, 0, 0, 4282, 1086, 0, 0, 0, 4701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 2875, 2181, 0, 4640, 1155, 0, 0, 0, 0,
	0, 493, 159, 0, 3305, 0, 0, 2176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 157, 0, 0,
	96, 2516, 0, 0, 0, 0, 4283, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2634, 2635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 69, 70, 160,
	4285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 1087, 0, 0, 0, 0, 157, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 160, 160, 0, 495, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 495, 496, 496, 496, 496, 0, 0, 0, 0,
	496, 496, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 496, 0, 160,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 159, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 158, 0, 0, 0, 0, 0, 3305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 2578, 0, 0, 0, 4282, 0,
	0, 2177, 0, 4695, 0, 0, 0, 0, 2590, 0,
	0, 495, 0, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 159, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 658,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 85, 0, 0, 0, 0,
	4283, 0, 0, 0, 0, 0, 0, 0, 2726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 3062, 0, 0, 57, 160, 0, 0, 0,
	495, 160, 495, 0, 495, 2748, 3099, 0, 1086, 1086,
	0, 0, 0, 0, 2181, 3110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 160,
	0, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
	3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
	3159, 3160, 3161, 3162, 0, 3176, 3177, 0, 0, 0,
	0, 69, 70, 0, 4285, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 496, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 496, 42, 45, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 75, 76, 0, 0, 0, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 495, 89, 0, 158, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4296, 4284, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3317, 3318, 3319, 0,
	3323, 3324, 3325, 3326, 3327, 0, 0, 3330, 3331, 3332,
	3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342,
	3343, 3344, 3345, 3346, 0, 3348, 3349, 3350, 3351, 3352,
	3353, 0, 3356, 3357, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 160, 2985, 2989,
	0, 0, 0, 0, 495, 0, 495, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 49, 90, 56, 55,
	58, 3012, 0, 80, 0, 96, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3305, 62,
	92, 91, 0, 158, 0, 496, 57, 0, 0, 0,
	0, 0, 0, 2590, 0, 0, 0, 0, 0, 3038,
	0, 2590, 77, 0, 2590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2181, 2181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 1756, 79, 0, 0, 493, 493, 493, 493, 85,
	0, 0, 0, 3535, 496, 0, 496, 0, 496, 0,
	159, 159, 159, 159, 159, 84, 159, 0, 0, 0,
	0, 0, 0, 3188, 60, 0, 0, 0, 0, 0,
	0, 3188, 3188, 3188, 0, 0, 0, 0, 0, 3574,
	3575, 0, 0, 0, 0, 2181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 81, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 3305, 0, 0, 3269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 71, 0, 0, 0,
	159, 159, 0, 93, 0, 0, 47, 2178, 0, 0,
	0, 2181, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 159, 159, 159, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 160, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4289, 0, 659, 0, 0, 0,
	0, 3728, 0, 3730, 0, 0, 0, 0, 0, 3736,
	3737, 0, 0, 0, 0, 4282, 0, 0, 0, 0,
	4689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 2274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3430, 3431, 3432, 0, 0, 0, 496, 0,
	496, 0, 59, 61, 0, 0, 496, 0, 87, 0,
	0, 0, 0, 0, 0, 3188, 3188, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 159, 0,
	0, 96, 0, 0, 0, 3468, 0, 4283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	85, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 159, 159, 159, 93, 2726, 0, 47, 3527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2726,
	0, 2726, 0, 0, 0, 3547, 0, 2274, 0, 0,
	1157, 0, 2726, 0, 2726, 3556, 2726, 2726, 2726, 2726,
	0, 0, 0, 0, 0, 3881, 0, 0, 69, 70,
	89, 4285, 0, 0, 0, 0, 4289, 0, 0, 0,
	0, 4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291,
	0, 4295, 0, 0, 0, 0, 78, 4282, 79, 0,
	0, 0, 4681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3188, 0, 0,
	0, 84, 0, 3636, 0, 0, 0, 159, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3652, 0, 0, 159, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 42, 159, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4283,
	0, 0, 0, 0, 0, 0, 0, 0, 4296, 4284,
	0, 66, 67, 73, 0, 74, 0, 62, 92, 91,
	0, 89, 0, 0, 57, 1086, 0, 4289, 2181, 0,
	0, 0, 0, 2726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4282, 0,
	0, 0, 0, 4654, 0, 0, 0, 0, 0, 0,
	3972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4285, 0, 0, 0, 0, 42, 0,
	660, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293, 4290,
	0, 4291, 71, 4295, 0, 0, 0, 0, 78, 93,
	79, 0, 47, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4283, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	2989, 0, 60, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 89, 57, 0, 0, 0, 0,
	4289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4282, 0, 0, 0, 0, 4636, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4296, 4284, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 69, 70, 3870, 4285, 159, 85, 0, 0, 0,
	0, 0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 0, 78,
	0, 79, 0, 159, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4283, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 4135, 0, 4137, 4138, 0,
	0, 62, 92, 91, 0, 0, 0, 159, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 3921, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 42,
	0, 4296, 4284, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 71, 69, 70, 0, 4285, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 4294, 4286, 4287,
	4288, 4292, 4293, 4290, 0, 4291, 0, 4295, 159, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	1086, 0, 0, 0, 0, 89, 0, 84, 0, 0,
	0, 4289, 0, 0, 0, 0, 60, 0, 0, 2274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4282, 0, 0, 0, 0, 4632, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3188, 0, 0,
	3188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 4296, 4284, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4283, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 4071, 62, 92, 91, 0, 0, 0, 89, 57,
	0, 0, 0, 0, 4289, 0, 0, 0, 0, 0,
	0, 0, 4078, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4282, 0, 0, 0, 85,
	4631, 0, 0, 159, 0, 0, 0, 0, 159, 0,
	0, 159, 0, 1756, 0, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4294, 4286,
	4287, 4288, 4292, 4293, 4290, 0, 4291, 0, 4295, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 159, 0, 4283, 84, 0,
	0, 0, 0, 0, 59, 61, 0, 60, 0, 0,
	87, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 159, 159, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3188, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4296, 4284, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 4217, 0, 69, 70,
	0, 4285, 0, 0, 0, 2178, 0, 0, 0, 0,
	0, 4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291,
	0, 4295, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3188, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 2181, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	2274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 159, 4296, 4284,
	0, 66, 67, 73, 0, 74, 0, 89, 4628, 0,
	0, 0, 0, 4289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4282, 0, 0, 2181, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 85, 0, 0, 0, 4217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 1662, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2181, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3188, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4285, 159, 0, 0, 0, 0, 85, 0, 0, 2181,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 159, 159, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 0, 493, 493, 493, 493, 0, 0,
	0, 0, 493, 493, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 493,
	0, 159, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4296, 4284, 0,
	66, 67, 73, 0, 74, 2050, 0, 0, 0, 0,
	0, 0, 0, 1675, 1678, 1679, 1680, 1681, 1682, 1683,
	0, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 0, 1663, 1664, 1665, 1645, 1644,
	1676, 1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 0, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 59, 61, 0,
	0, 259, 245, 87, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 479, 0, 0, 315, 0, 1666,
	477, 424, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 469, 159, 0, 0, 0, 377, 284, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 312, 0, 196, 0, 0, 0, 354, 0,
	493, 0, 199, 314, 0, 0, 0, 246, 0, 393,
	493, 468, 0, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 493, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 0, 407, 406, 0, 293, 0, 0, 0,
	386, 0, 303, 205, 0, 487, 221, 310, 451, 0,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 0, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 493, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	0, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 0, 493, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	902, 1044, 0, 0, 449, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 358, 909, 865, 186, 0,
	0, 856, 707, 857, 890, 260, 706, 1018, 963, 1046,
	946, 978, 988, 259, 245, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 479, 191, 811, 315,
	0, 0, 477, 424, 340, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 732, 559, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 4377, 1036, 897,
	898, 264, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 469, 990, 999, 1013, 919, 377,
	284, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	493, 0, 0, 875, 853, 895, 1005, 854, 852, 341,
	867, 798, 1034, 927, 302, 192, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 312, 869, 196, 866, 872, 911,
	354, 1002, 1008, 808, 199, 314, 1019, 891, 904, 729,
	0, 393, 980, 468, 710, 279, 0, 966, 392, 316,
	461, 994, 1042, 467, 914, 443, 478, 483, 272, 947,
	235, 421, 262, 255, 896, 1012, 859, 285, 376, 250,
	307, 930, 986, 892, 242, 997, 973, 1024, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 294, 286,
	1027, 1025, 905, 362, 225, 957, 950, 943, 812, 472,
	1059, 258, 1009, 474, 180, 407, 406, 917, 293, 1010,
	181, 170, 386, 182, 303, 205, 1030, 487, 221, 310,
	451, 709, 278, 353, 982, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1006, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 1049, 323, 267,
	271, 287, 298, 981, 390, 428, 475, 975, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1004, 217, 238, 429,
	211, 1038, 1021, 968, 932, 938, 861, 0, 210, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	282, 992, 730, 731, 247, 801, 1053, 212, 868, 1052,
	350, 357, 349, 1055, 1054, 460, 1039, 969, 956, 954,
	862, 1037, 967, 955, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 958, 426, 321, 0, 207,
	0, 425, 1047, 1065, 440, 227, 880, 1014, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 996, 1062, 361, 394, 234, 470, 422, 263, 878,
	1066, 825, 813, 814, 817, 961, 962, 815, 818, 819,
	827, 799, 800, 802, 804, 805, 806, 949, 1041, 863,
	809, 1017, 820, 821, 822, 823, 989, 1060, 797, 243,
	746, 839, 840, 841, 747, 842, 843, 748, 749, 844,
	845, 846, 847, 750, 848, 849, 850, 828, 829, 830,
	831, 832, 833, 834, 835, 838, 836, 837, 0, 945,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 807, 200, 213, 313, 1061, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 347, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 928, 197, 0, 0, 203, 0, 204, 206,
	915, 202, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	449, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 358, 909, 865, 186, 0, 0, 856, 707, 857,
	890, 260, 706, 1018, 963, 1046, 946, 978, 988, 259,
	245, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 479, 191, 811, 315, 0, 0, 477, 424,
	340, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 696, 0, 0,
	732, 559, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 0, 1036, 897, 898, 264, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	469, 990, 999, 1013, 919, 377, 284, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 341, 867, 798, 1034, 927,
	302, 192, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	312, 869, 196, 866, 872, 911, 354, 1002, 1008, 808,
	199, 314, 1019, 891, 904, 729, 0, 393, 980, 468,
	710, 279, 0, 966, 392, 316, 461, 994, 1042, 467,
	914, 443, 478, 483, 272, 947, 235, 421, 262, 255,
	896, 1012, 859, 285, 376, 250, 307, 930, 986, 892,
	242, 997, 973, 1024, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 294, 286, 1027, 1025, 905, 362,
	225, 957, 950, 943, 812, 472, 1059, 258, 1009, 474,
	180, 407, 406, 917, 293, 1010, 181, 170, 386, 182,
	303, 205, 1030, 487, 221, 310, 451, 709, 278, 353,
	982, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1006, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 1049, 323, 267, 271, 287, 298, 981,
	390, 428, 475, 975, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1004, 217, 238, 429, 211, 1038, 1021, 968,
	932, 938, 861, 0, 210, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 282, 992, 730, 731,
	247, 801, 1053, 212, 868, 1052, 350, 357, 349, 1055,
	1054, 460, 1039, 969, 956, 954, 862, 1037, 967, 955,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 958, 426, 321, 0, 207, 0, 425, 1047, 1065,
	440, 227, 880, 1014, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 996, 1062, 361,
	394, 234, 470, 422, 263, 878, 1066, 825, 813, 814,
	817, 961, 962, 815, 818, 819, 827, 799, 800, 802,
	804, 805, 806, 949, 1041, 863, 809, 1017, 820, 821,
	822, 823, 989, 1060, 797, 243, 746, 839, 840, 841,
	747, 842, 843, 748, 749, 844, 845, 846, 847, 750,
	848, 849, 850, 828, 829, 830, 831, 832, 833, 834,
	835, 838, 836, 837, 0, 945, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 807, 200, 213,
	313, 1061, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 347, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	473, 253, 948, 970, 1001, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 928, 197,
	0, 0, 203, 0, 204, 206, 915, 202, 1032, 1057,
	977, 991, 902, 1044, 0, 0, 449, 803, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 358, 909, 865,
	186, 0, 0, 856, 707, 857, 890, 260, 706, 1018,
	963, 1046, 946, 978, 988, 259, 245, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 479, 191,
	811, 315, 0, 0, 477, 424, 340, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 979,
	1051, 89, 0, 0, 0, 0, 732, 559, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	0, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 264, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 469, 990, 999, 1013,
	919, 377, 284, 0, 0, 0, 0, 718, 719, 2238,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 341, 867, 798, 1034, 927, 302, 192, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 312, 869, 196, 866,
	872, 911, 354, 1002, 1008, 808, 199, 314, 1019, 891,
	904, 729, 0, 393, 980, 468, 710, 279, 0, 966,
	392, 316, 461, 994, 1042, 467, 914, 443, 478, 483,
	272, 947, 235, 421, 262, 255, 896, 1012, 859, 285,
	376, 250, 307, 930, 986, 892, 242, 997, 973, 1024,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	294, 286, 1027, 1025, 905, 362, 225, 957, 950, 943,
	812, 472, 1059, 258, 1009, 474, 180, 407, 406, 917,
	293, 1010, 181, 170, 386, 182, 303, 205, 1030, 487,
	221, 310, 451, 709, 278, 353, 982, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 1006, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 1049,
	323, 267, 271, 287, 298, 981, 390, 428, 475, 975,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1004, 217,
	238, 429, 211, 1038, 1021, 968, 932, 938, 861, 0,
	210, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 282, 992, 730, 731, 247, 801, 1053, 212,
	868, 1052, 350, 357, 349, 1055, 1054, 460, 1039, 969,
	956, 954, 862, 1037, 967, 955, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 958, 426, 321,
	0, 207, 0, 425, 1047, 1065, 440, 227, 880, 1014,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 996, 1062, 361, 394, 234, 470, 422,
	263, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 949,
	1041, 863, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 243, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 807, 200, 213, 313, 1061, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	347, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970,
	1001, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 928, 197, 0, 0, 203, 0,
	204, 206, 915, 202, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 449, 803, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 358, 909, 865, 186, 0, 0, 856,
	707, 857, 890, 260, 706, 1018, 963, 1046, 946, 978,
	988, 259, 245, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 479, 191, 811, 315, 0, 0,
	477, 424, 340, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 0,
	0, 0, 732, 559, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 264,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 469, 990, 999, 1013, 919, 377, 284, 0,
	0, 0, 0, 718, 719, 700, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 341, 867, 798,
	1034, 927, 302, 192, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 312, 869, 196, 866, 872, 911, 354, 1002,
	1008, 808, 199, 314, 1019, 891, 904, 729, 0, 393,
	980, 468, 710, 279, 0, 966, 392, 316, 461, 994,
	1042, 467, 914, 443, 478, 483, 272, 947, 235, 421,
	262, 255, 896, 1012, 859, 285, 376, 250, 307, 930,
	986, 892, 242, 997, 973, 1024, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 294, 286, 1027, 1025,
	905, 362, 225, 957, 950, 943, 812, 472, 1059, 258,
	1009, 474, 180, 407, 406, 917, 293, 1010, 181, 170,
	386, 182, 303, 205, 1030, 487, 221, 310, 451, 709,
	278, 353, 982, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 1006, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 1049, 323, 267, 271, 287,
	298, 981, 390, 428, 475, 975, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1004, 217, 238, 429, 211, 1038,
	1021, 968, 932, 938, 861, 0, 210, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 282, 992,
	730, 731, 247, 801, 1053, 212, 868, 1052, 350, 357,
	349, 1055, 1054, 460, 1039, 969, 956, 954, 862, 1037,
	967, 955, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 958, 426, 321, 0, 207, 0, 425,
	1047, 1065, 440, 227, 880, 1014, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 996,
	1062, 361, 394, 234, 470, 422, 263, 878, 1066, 825,
	813, 814, 817, 961, 962, 815, 818, 819, 827, 799,
	800, 802, 804, 805, 806, 949, 1041, 863, 809, 1017,
	820, 821, 822, 823, 989, 1060, 797, 243, 746, 839,
	840, 841, 747, 842, 843, 748, 749, 844, 845, 846,
	847, 750, 848, 849, 850, 828, 829, 830, 831, 832,
	833, 834, 835, 838, 836, 837, 0, 945, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 807,
	200, 213, 313, 1061, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 347, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 473, 253, 948, 970, 1001, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	928, 197, 0, 0, 203, 0, 204, 206, 915, 202,
	1032, 1057, 977, 991, 902, 1044, 0, 0, 449, 803,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 358,
	909, 865, 186, 0, 0, 856, 707, 857, 890, 260,
	706, 1018, 963, 1046, 946, 978, 988, 259, 245, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	479, 191, 811, 315, 0, 0, 477, 424, 340, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 2447, 1051, 89, 0, 0, 0, 0, 2449, 559,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 2448, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 264, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 469, 990,
	999, 1013, 919, 377, 284, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 341, 867, 798, 1034, 927, 302, 192,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 312, 869,
	196, 866, 872, 911, 354, 1002, 1008, 808, 199, 314,
	1019, 891, 904, 729, 0, 393, 980, 468, 710, 279,
	0, 966, 392, 316, 461, 994, 1042, 467, 914, 443,
	478, 483, 272, 947, 235, 421, 262, 255, 896, 1012,
	859, 285, 376, 250, 307, 930, 986, 892, 242, 997,
	973, 1024, 420, 458, 201, 335, 459, 482, 166, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 294, 286, 1027, 1025, 905, 362, 225, 957,
	950, 943, 812, 472, 1059, 258, 1009, 474, 180, 407,
	406, 917, 293, 1010, 181, 170, 386, 182, 303, 205,
	1030, 487, 221, 310, 451, 709, 278, 353, 982, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 1006,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 1049, 323, 267, 271, 287, 298, 981, 390, 428,
	475, 975, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1004, 217, 238, 429, 211, 1038, 1021, 968, 932, 938,
	861, 0, 210, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 282, 992, 730, 731, 247, 801,
	1053, 212, 868, 1052, 350, 357, 349, 1055, 1054, 460,
	1039, 969, 956, 954, 862, 1037, 967, 955, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 958,
	426, 321, 0, 207, 0, 425, 1047, 1065, 440, 227,
	880, 1014, 455, 178, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 996, 1062, 361, 394, 234,
	470, 422, 263, 878, 1066, 825, 813, 814, 817, 961,
	962, 815, 818, 819, 827, 799, 800, 802, 804, 805,
	806, 949, 1041, 863, 809, 1017, 820, 821, 822, 823,
	989, 1060, 797, 243, 746, 839, 840, 841, 747, 842,
	843, 748, 749, 844, 845, 846, 847, 750, 848, 849,
	850, 828, 829, 830, 831, 832, 833, 834, 835, 838,
	836, 837, 0, 945, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 807, 200, 213, 313, 1061,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 347, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253,
	948, 970, 1001, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 928, 197, 0, 0,
	203, 0, 204, 206, 915, 202, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 449, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 358, 909, 865, 186, 0,
	0, 856, 707, 857, 890, 260, 706, 1018, 963, 1046,
	946, 978, 988, 259, 245, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 479, 191, 811, 315,
	0, 0, 477, 424, 340, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 2347, 559, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 704, 721, 860, 810, 0, 1036, 897,
	898, 264, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 469, 990, 999, 1013, 919, 377,
	284, 0, 0, 0, 0, 718, 719, 2238, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 341,
	867, 798, 1034, 927, 302, 192, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 312, 869, 196, 866, 872, 911,
	354, 1002, 1008, 808, 199, 314, 1019, 891, 904, 729,
	0, 393, 980, 468, 710, 279, 0, 966, 392, 316,
	461, 994, 1042, 467, 914, 443, 478, 483, 272, 947,
	235, 421, 262, 255, 896, 1012, 859, 285, 376, 250,
	307, 930, 986, 892, 242, 997, 973, 1024, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 294, 286,
	1027, 1025, 905, 362, 225, 957, 950, 943, 812, 472,
	1059, 258, 1009, 474, 180, 407, 406, 917, 293, 1010,
	181, 170, 386, 182, 303, 205, 1030, 487, 221, 310,
	451, 709, 278, 353, 982, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1006, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 1049, 323, 267,
	271, 287, 298, 981, 390, 428, 475, 975, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1004, 217, 238, 429,
	211, 1038, 1021, 968, 932, 938, 861, 0, 210, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	282, 992, 730, 731, 247, 801, 1053, 212, 868, 1052,
	350, 357, 349, 1055, 1054, 460, 1039, 969, 956, 954,
	862, 1037, 967, 955, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 958, 426, 321, 0, 207,
	0, 425, 1047, 1065, 440, 227, 880, 1014, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 996, 1062, 361, 394, 234, 470, 422, 263, 878,
	1066, 825, 813, 814, 817, 961, 962, 815, 818, 819,
	827, 799, 800, 802, 804, 805, 806, 949, 1041, 863,
	809, 1017, 820, 821, 822, 823, 989, 1060, 797, 243,
	746, 839, 840, 841, 747, 842, 843, 748, 749, 844,
	845, 846, 847, 750, 848, 849, 850, 828, 829, 830,
	831, 832, 833, 834, 835, 838, 836, 837, 0, 945,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 807, 200, 213, 313, 1061, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 347, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 928, 197, 0, 0, 203, 0, 204, 206,
	915, 202, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	449, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 358, 909, 865, 186, 0, 0, 856, 707, 857,
	890, 260, 706, 1018, 963, 1046, 946, 978, 988, 259,
	245, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 479, 191, 811, 315, 0, 0, 477, 424,
	340, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	2344, 559, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 704,
	721, 860, 810, 0, 1036, 897, 898, 264, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	469, 990, 999, 1013, 919, 377, 284, 0, 0, 0,
	0, 718, 719, 2238, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 341, 867, 798, 1034, 927,
	302, 192, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	312, 869, 196, 866, 872, 911, 354, 1002, 1008, 808,
	199, 314, 1019, 891, 904, 729, 0, 393, 980, 468,
	710, 279, 0, 966, 392, 316, 461, 994, 1042, 467,
	914, 443, 478, 483, 272, 947, 235, 421, 262, 255,
	896, 1012, 859, 285, 376, 250, 307, 930, 986, 892,
	242, 997, 973, 1024, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 294, 286, 1027, 1025, 905, 362,
	225, 957, 950, 943, 812, 472, 1059, 258, 1009, 474,
	180, 407, 406, 917, 293, 1010, 181, 170, 386, 182,
	303, 205, 1030, 487, 221, 310, 451, 709, 278, 353,
	982, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1006, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 1049, 323, 267, 271, 287, 298, 981,
	390, 428, 475, 975, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1004, 217, 238, 429, 211, 1038, 1021, 968,
	932, 938, 861, 0, 210, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 282, 992, 730, 731,
	247, 801, 1053, 212, 868, 1052, 350, 357, 349, 1055,
	1054, 460, 1039, 969, 956, 954, 862, 1037, 967, 955,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 958, 426, 321, 0, 207, 0, 425, 1047, 1065,
	440, 227, 880, 1014, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 996, 1062, 361,
	394, 234, 470, 422, 263, 878, 1066, 825, 813, 814,
	817, 961, 962, 815, 818, 819, 827, 799, 800, 802,
	804, 805, 806, 949, 1041, 863, 809, 1017, 820, 821,
	822, 823, 989, 1060, 797, 243, 746, 839, 840, 841,
	747, 842, 843, 748, 749, 844, 845, 846, 847, 750,
	848, 849, 850, 828, 829, 830, 831, 832, 833, 834,
	835, 838, 836, 837, 0, 945, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 807, 200, 213,
	313, 1061, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 347, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	473, 253, 948, 970, 1001, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 928, 197,
	0, 0, 203, 0, 204, 206, 915, 202, 1032, 1057,
	977, 991, 902, 1044, 0, 42, 449, 803, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 358, 909, 865,
	186, 0, 0, 856, 707, 857, 890, 260, 706, 1018,
	963, 1046, 946, 978, 988, 259, 245, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 479, 191,
	811, 315, 0, 0, 477, 424, 340, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 979,
	1051, 89, 0, 0, 0, 0, 732, 559, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	0, 939, 984, 1063, 855, 704, 721, 860, 810, 0,
	1036, 897, 898, 264, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 469, 990, 999, 1013,
	919, 377, 284, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 341, 867, 798, 1541, 927, 302, 192, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 312, 869, 196, 866,
	872, 911, 354, 1002, 1008, 808, 199, 314, 1019, 891,
	904, 729, 0, 393, 980, 468, 710, 279, 0, 966,
	392, 316, 461, 994, 1042, 467, 914, 443, 478, 483,
	272, 947, 235, 421, 262, 255, 896, 1012, 859, 285,
	376, 250, 307, 930, 986, 892, 242, 997, 973, 1024,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	294, 286, 1027, 1025, 905, 362, 225, 957, 950, 943,
	812, 472, 1059, 258, 1009, 474, 180, 407, 406, 917,
	293, 1010, 181, 170, 386, 182, 303, 205, 1030, 487,
	221, 310, 451, 709, 278, 353, 982, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 1006, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 1049,
	323, 267, 271, 287, 298, 981, 390, 428, 475, 975,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1004, 217,
	238, 429, 211, 1038, 1021, 968, 932, 938, 861, 0,
	210, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 282, 992, 730, 731, 247, 801, 1053, 212,
	868, 1052, 350, 357, 349, 1055, 1054, 460, 1039, 969,
	956, 954, 862, 1037, 967, 955, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 958, 426, 321,
	0, 207, 0, 425, 1047, 1065, 440, 227, 880, 1014,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 996, 1062, 361, 394, 234, 470, 422,
	263, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 949,
	1041, 863, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 243, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 807, 200, 213, 313, 1539, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	347, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970,
	1001, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 928, 197, 0, 0, 203, 0,
	204, 206, 915, 202, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 449, 803, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 358, 909, 865, 186, 0, 0, 856,
	707, 857, 890, 260, 706, 1018, 963, 1046, 946, 978,
	988, 259, 245, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 479, 191, 811, 315, 0, 0,
	477, 424, 340, 0, 0, 944, 0, 795, 796, 929,
	987, 876, 974, 1050, 910, 979, 1051, 89, 0, 2105,
	0, 0, 732, 559, 733, 735, 736, 737, 738, 0,
	0, 171, 734, 739, 740, 741, 0, 939, 984, 1063,
	855, 704, 721, 860, 810, 0, 1036, 897, 898, 264,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 469, 990, 999, 1013, 919, 377, 284, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 826,
	0, 720, 0, 870, 716, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 722, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 341, 867, 798,
	1034, 927, 302, 192, 1040, 925, 824, 993, 871, 1022,
	1056, 913, 312, 869, 196, 866, 872, 911, 354, 1002,
	1008, 808, 199, 314, 1019, 891, 904, 729, 0, 393,
	980, 468, 710, 279, 0, 966, 392, 316, 461, 994,
	1042, 467, 914, 443, 478, 483, 272, 947, 235, 421,
	262, 255, 896, 1012, 859, 285, 376, 250, 307, 930,
	986, 892, 242, 997, 973, 1024, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 294, 286, 1027, 1025,
	905, 362, 225, 957, 950, 943, 812, 472, 1059, 258,
	1009, 474, 180, 407, 406, 917, 293, 1010, 181, 170,
	386, 182, 303, 205, 1030, 487, 221, 310, 451, 709,
	278, 353, 982, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 1006, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 1049, 323, 267, 271, 287,
	298, 981, 390, 428, 475, 975, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1004, 217, 238, 429, 211, 1038,
	1021, 968, 932, 938, 861, 0, 210, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 282, 992,
	730, 731, 247, 801, 1053, 212, 868, 1052, 350, 357,
	349, 1055, 1054, 460, 1039, 969, 956, 954, 862, 1037,
	967, 955, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 958, 426, 321, 0, 207, 0, 425,
	1047, 1065, 440, 227, 880, 1014, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 996,
	1062, 361, 394, 234, 470, 422, 263, 878, 1066, 825,
	813, 814, 817, 961, 962, 815, 818, 819, 827, 799,
	800, 802, 804, 805, 806, 949, 1041, 863, 809, 1017,
	820, 821, 822, 823, 989, 1060, 797, 243, 746, 839,
	840, 841, 747, 842, 843, 748, 749, 844, 845, 846,
	847, 750, 848, 849, 850, 828, 829, 830, 831, 832,
	833, 834, 835, 838, 836, 837, 0, 945, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 807,
	200, 213, 313, 1061, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 347, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 473, 253, 948, 970, 1001, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	928, 197, 0, 0, 203, 0, 204, 206, 915, 202,
	1032, 1057, 977, 991, 902, 1044, 0, 0, 449, 803,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 358,
	909, 865, 186, 0, 0, 856, 707, 857, 890, 260,
	706, 1018, 963, 1046, 946, 978, 988, 259, 245, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	479, 191, 811, 315, 0, 0, 477, 424, 340, 0,
	0, 944, 0, 795, 796, 929, 987, 876, 974, 1050,
	910, 979, 1051, 89, 0, 0, 0, 0, 732, 559,
	733, 735, 736, 737, 738, 0, 0, 171, 734, 739,
	740, 741, 0, 939, 984, 1063, 855, 704, 721, 860,
	810, 0, 1036, 897, 898, 264, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 469, 990,
	999, 1013, 919, 377, 284, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 826, 0, 720, 0, 870,
	716, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 722, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 341, 867, 798, 1034, 927, 302, 192,
	1040, 925, 824, 993, 871, 1022, 1056, 913, 312, 869,
	196, 866, 872, 911, 354, 1002, 1008, 808, 199, 314,
	1019, 891, 904, 729, 0, 393, 980, 468, 710, 279,
	0, 966, 392, 316, 461, 994, 1042, 467, 914, 443,
	478, 483, 272, 947, 235, 421, 262, 255, 896, 1012,
	859, 285, 376, 250, 307, 930, 986, 892, 242, 997,
	973, 1024, 420, 458, 201, 335, 459, 482, 166, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 294, 286, 1027, 1025, 905, 362, 225, 957,
	950, 943, 812, 472, 1059, 258, 1009, 474, 180, 407,
	406, 917, 293, 1010, 181, 170, 386, 182, 303, 205,
	1030, 487, 221, 310, 451, 709, 278, 353, 982, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 1006,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 1049, 323, 267, 271, 287, 298, 981, 390, 428,
	475, 975, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1004, 217, 238, 429, 211, 1038, 1021, 968, 932, 938,
	861, 0, 210, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 282, 992, 730, 731, 247, 801,
	1053, 212, 868, 1052, 350, 357, 349, 1055, 1054, 460,
	1039, 969, 956, 954, 862, 1037, 967, 955, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 958,
	426, 321, 0, 207, 0, 425, 1047, 1065, 440, 227,
	880, 1014, 455, 178, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 996, 1062, 361, 394, 234,
	470, 422, 263, 878, 1066, 825, 813, 814, 817, 961,
	962, 815, 818, 819, 827, 799, 800, 802, 804, 805,
	806, 949, 1041, 863, 809, 1017, 820, 821, 822, 823,
	989, 1060, 797, 243, 746, 839, 840, 841, 747, 842,
	843, 748, 749, 844, 845, 846, 847, 750, 848, 849,
	850, 828, 829, 830, 831, 832, 833, 834, 835, 838,
	836, 837, 0, 945, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 807, 200, 213, 313, 1061,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 347, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253,
	948, 970, 1001, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 928, 197, 0, 0,
	203, 0, 204, 206, 915, 202, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 449, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 358, 909, 865, 186, 0,
	0, 856, 1106, 857, 890, 260, 1104, 1018, 963, 1046,
	946, 978, 988, 259, 245, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 479, 191, 811, 315,
	0, 0, 477, 424, 340, 0, 0, 944, 0, 795,
	796, 929, 987, 876, 974, 1050, 910, 979, 1051, 89,
	0, 0, 0, 0, 732, 559, 733, 735, 736, 737,
	738, 0, 0, 171, 734, 739, 740, 741, 0, 939,
	984, 1063, 855, 1123, 721, 860, 810, 0, 1036, 897,
	898, 264, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 469, 990, 999, 1013, 919, 377,
	284, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 826, 0, 720, 0, 870, 716, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 722,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 341,
	867, 798, 1034, 927, 302, 192, 1040, 925, 824, 993,
	871, 1022, 1056, 913, 312, 869, 196, 866, 872, 911,
	354, 1002, 1008, 808, 199, 314, 1019, 891, 904, 729,
	0, 393, 980, 468, 710, 279, 0, 966, 392, 316,
	461, 994, 1042, 467, 914, 443, 478, 483, 272, 947,
	235, 421, 262, 255, 896, 1012, 859, 285, 376, 250,
	307, 930, 986, 892, 242, 997, 973, 1024, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 294, 286,
	1027, 1025, 905, 362, 225, 957, 950, 943, 812, 472,
	1059, 258, 1009, 474, 180, 407, 406, 917, 293, 1010,
	181, 170, 386, 182, 303, 205, 1030, 487, 221, 310,
	451, 709, 278, 353, 982, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1006, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 1049, 323, 267,
	271, 287, 298, 981, 390, 428, 475, 975, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1004, 217, 238, 429,
	211, 1038, 1021, 968, 932, 938, 861, 0, 210, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	282, 992, 730, 731, 247, 801, 1053, 212, 868, 1052,
	350, 357, 349, 1055, 1054, 460, 1039, 969, 956, 954,
	862, 1037, 967, 955, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 958, 426, 321, 0, 207,
	0, 425, 1047, 1065, 440, 227, 880, 1014, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 996, 1062, 361, 394, 234, 470, 422, 263, 878,
	1066, 825, 813, 814, 817, 961, 962, 815, 818, 819,
	827, 799, 800, 802, 804, 805, 806, 949, 1041, 863,
	809, 1017, 820, 821, 822, 823, 989, 1060, 797, 243,
	746, 839, 840, 841, 747, 842, 843, 748, 749, 844,
	845, 846, 847, 750, 848, 849, 850, 828, 829, 830,
	831, 832, 833, 834, 835, 838, 836, 837, 0, 945,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 807, 200, 213, 313, 1061, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 347, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 928, 197, 0, 0, 203, 0, 204, 206,
	915, 202, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	449, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 358, 909, 865, 186, 0, 0, 856, 1106, 857,
	890, 260, 1104, 1018, 963, 1046, 946, 978, 988, 259,
	245, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 479, 191, 811, 315, 0, 0, 477, 424,
	340, 0, 0, 944, 0, 795, 796, 929, 987, 876,
	974, 1050, 910, 979, 1051, 89, 0, 0, 0, 0,
	732, 559, 733, 735, 736, 737, 738, 0, 0, 171,
	734, 739, 740, 741, 0, 939, 984, 1063, 855, 1123,
	721, 860, 810, 0, 1036, 897, 898, 264, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	469, 990, 999, 1013, 919, 377, 284, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 826, 0, 720,
	0, 870, 716, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 722, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 341, 867, 798, 1034, 927,
	302, 192, 1040, 925, 824, 993, 871, 1022, 1056, 913,
	312, 869, 196, 866, 872, 911, 354, 1002, 1008, 808,
	199, 314, 1019, 891, 904, 729, 0, 393, 980, 468,
	710, 279, 0, 4539, 392, 316, 461, 994, 1042, 467,
	914, 443, 478, 483, 272, 947, 235, 421, 262, 255,
	896, 1012, 859, 285, 376, 250, 307, 930, 986, 892,
	242, 997, 973, 1024, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 294, 286, 1027, 1025, 905, 362,
	225, 957, 950, 943, 812, 472, 1059, 258, 1009, 474,
	180, 407, 406, 917, 293, 1010, 181, 170, 386, 182,
	303, 205, 1030, 487, 221, 310, 451, 709, 278, 353,
	982, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1006, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 1049, 323, 267, 271, 287, 298, 981,
	390, 428, 475, 975, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1004, 217, 238, 429, 211, 1038, 1021, 968,
	932, 938, 861, 0, 210, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 282, 992, 730, 731,
	247, 801, 1053, 212, 868, 1052, 350, 357, 349, 1055,
	1054, 460, 1039, 969, 956, 954, 862, 1037, 967, 955,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 958, 426, 321, 0, 207, 0, 425, 1047, 1065,
	440, 227, 880, 1014, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 996, 1062, 361,
	394, 234, 470, 422, 263, 878, 1066, 825, 813, 814,
	817, 961, 962, 815, 818, 819, 827, 799, 800, 802,
	804, 805, 806, 949, 1041, 863, 809, 1017, 820, 821,
	822, 823, 989, 1060, 797, 243, 746, 839, 840, 841,
	747, 842, 843, 748, 749, 844, 845, 846, 847, 750,
	848, 849, 850, 828, 829, 830, 831, 832, 833, 834,
	835, 838, 836, 837, 0, 945, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 807, 200, 213,
	313, 1061, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 347, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	473, 253, 948, 970, 1001, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 928, 197,
	0, 0, 203, 0, 204, 206, 915, 202, 1032, 1057,
	977, 991, 902, 1044, 0, 0, 449, 803, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 358, 909, 865,
	186, 0, 0, 856, 1106, 857, 890, 260, 1104, 1018,
	963, 1046, 946, 978, 988, 259, 245, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 479, 191,
	811, 315, 0, 0, 477, 424, 340, 0, 0, 944,
	0, 795, 796, 929, 987, 876, 974, 1050, 910, 979,
	1051, 89, 0, 0, 0, 0, 732, 559, 733, 735,
	736, 737, 738, 0, 0, 171, 734, 739, 740, 741,
	0, 939, 984, 1063, 855, 1123, 721, 860, 810, 0,
	1036, 897, 898, 264, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 469, 990, 999, 1013,
	919, 377, 284, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 826, 0, 720, 0, 870, 716, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 722, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 341, 867, 798, 1034, 927, 302, 192, 1040, 925,
	824, 993, 871, 1022, 1056, 913, 312, 869, 196, 866,
	872, 911, 354, 1002, 1008, 808, 199, 314, 1019, 891,
	904, 729, 0, 393, 980, 468, 710, 279, 0, 966,
	392, 316, 461, 994, 1042, 467, 914, 443, 478, 483,
	272, 947, 235, 421, 262, 255, 896, 1012, 859, 285,
	376, 250, 307, 930, 986, 892, 242, 997, 973, 1024,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	294, 286, 1027, 1025, 905, 362, 225, 957, 950, 943,
	812, 472, 1059, 258, 1009, 474, 180, 407, 406, 917,
	293, 1010, 181, 170, 386, 182, 303, 205, 1030, 487,
	221, 310, 451, 709, 278, 353, 982, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 1006, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 1049,
	323, 267, 271, 287, 298, 981, 390, 428, 475, 975,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1004, 217,
	238, 429, 211, 1038, 1021, 968, 932, 938, 861, 0,
	210, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 282, 992, 730, 731, 247, 801, 1053, 212,
	868, 1052, 350, 357, 349, 1055, 1054, 460, 1039, 969,
	956, 954, 862, 1037, 967, 955, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 958, 426, 321,
	0, 207, 0, 425, 1047, 1065, 440, 227, 880, 1014,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 996, 1062, 361, 394, 234, 470, 422,
	263, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 2350,
	2351, 2352, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 243, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 807, 200, 213, 313, 1061, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	347, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970,
	1001, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 928, 197, 0, 0, 203, 0,
	204, 206, 915, 202, 1032, 1057, 977, 991, 1827, 2006,
	0, 3708, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849,
	1930, 1776, 1899, 358, 1837, 1777, 186, 1760, 1815, 1764,
	1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923,
	1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985,
	2007, 1880, 0, 172, 479, 191, 3709, 315, 1982, 499,
	3710, 424, 340, 502, 501, 1876, 1991, 1897, 1960, 1859,
	1932, 1792, 1915, 2012, 1838, 1924, 2013, 89, 0, 696,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1920, 2004, 1831, 500, 1871, 1929, 2033,
	1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965,
	3712, 1857, 302, 192, 2001, 1855, 1854, 1939, 1785, 1975,
	2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949,
	1957, 177, 199, 314, 1972, 1813, 1830, 246, 2180, 393,
	1925, 468, 498, 279, 0, 1906, 392, 316, 461, 1940,
	2003, 467, 1842, 443, 478, 483, 272, 1882, 235, 421,
	262, 255, 1821, 1962, 1767, 285, 376, 250, 307, 1860,
	1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1973, 1956, 1979,
	1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978,
	1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258,
	1958, 474, 180, 407, 406, 1845, 293, 1959, 181, 170,
	386, 182, 303, 205, 1984, 487, 221, 310, 451, 497,
	278, 353, 1927, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 1955, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 2011, 323, 267, 271, 287,
	298, 1926, 390, 428, 475, 1917, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1951, 217, 238, 429, 211, 1999,
	1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938,
	464, 465, 247, 1781, 2019, 212, 1782, 2018, 350, 357,
	349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998,
	1907, 1893, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1896, 426, 321, 0, 207, 0, 425,
	2009, 2035, 440, 227, 1800, 1966, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1942,
	2032, 361, 394, 234, 470, 422, 263, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789,
	193, 194, 1992, 1993, 195, 1887, 2002, 1775, 0, 1970,
	189, 190, 174, 179, 1934, 2030, 1847, 243, 164, 1771,
	1772, 1773, 165, 1877, 1878, 167, 168, 1988, 1987, 1986,
	1989, 169, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1905,
	200, 213, 313, 3711, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1967, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976,
	1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1858, 197, 0, 0, 203, 0, 204, 206, 1843, 202,
	1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449, 1861,
	2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358,
	1837, 1777, 186, 1760, 1815, 1764, 1828, 1765, 1812, 260,
	1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891,
	1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 172,
	479, 191, 2017, 315, 1982, 499, 477, 424, 340, 502,
	501, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012,
	1838, 1924, 2013, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1920,
	2004, 1831, 500, 1871, 1929, 2033, 1763, 1916, 0, 1768,
	1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935,
	1945, 1963, 1848, 377, 284, 0, 0, 0, 0, 0,
	0, 3207, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 192,
	2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783,
	196, 1778, 1786, 1839, 354, 1949, 1957, 177, 199, 314,
	1972, 1813, 1830, 246, 0, 393, 1925, 468, 2278, 279,
	0, 1906, 392, 316, 461, 1940, 2003, 467, 1842, 443,
	478, 483, 272, 1882, 235, 421, 262, 255, 1821, 1962,
	1767, 285, 376, 250, 307, 1860, 1931, 1814, 242, 1943,
	1914, 1977, 420, 458, 201, 335, 459, 482, 166, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788,
	1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895,
	1888, 1875, 1953, 472, 2029, 258, 1958, 474, 180, 407,
	406, 1845, 293, 1959, 181, 170, 386, 182, 303, 205,
	1984, 487, 221, 310, 451, 2277, 278, 353, 1927, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 1955,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 2011, 323, 267, 271, 287, 298, 1926, 390, 428,
	475, 1917, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869,
	1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781,
	2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020, 460,
	2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1896,
	426, 321, 0, 207, 0, 425, 2009, 2035, 440, 227,
	1800, 1966, 455, 178, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1942, 2032, 361, 394, 234,
	470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2014, 2015, 2016, 1954, 1789, 193, 194, 1992, 1993,
	195, 1887, 2002, 1775, 0, 1970, 189, 190, 174, 179,
	1934, 2030, 1847, 243, 164, 1771, 1772, 1773, 165, 1877,
	1878, 167, 168, 1988, 1987, 1986, 1989, 169, 2023, 2021,
	2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964,
	1937, 1946, 1820, 1879, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1905, 200, 213, 313, 2031,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253,
	1885, 1910, 1948, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1858, 197, 0, 0,
	203, 0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936,
	1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840, 2028,
	1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 186, 1760,
	1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008,
	1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825,
	1928, 1985, 2007, 1880, 0, 172, 479, 191, 2017, 315,
	1982, 499, 477, 424, 340, 502, 501, 1876, 1991, 1897,
	1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1920, 2004, 1831, 500, 1871,
	1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822,
	1823, 264, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341,
	1780, 1965, 1995, 1857, 302, 192, 2001, 1855, 1854, 1939,
	1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839,
	354, 1949, 1957, 177, 199, 314, 1972, 1813, 1830, 246,
	2180, 393, 1925, 468, 498, 279, 0, 1906, 392, 316,
	461, 1940, 2003, 467, 1842, 443, 478, 483, 272, 1882,
	235, 421, 262, 255, 1821, 1962, 1767, 285, 376, 250,
	307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1973,
	1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286,
	1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472,
	2029, 258, 1958, 474, 180, 407, 406, 1845, 293, 1959,
	181, 170, 386, 182, 303, 205, 1984, 487, 221, 310,
	451, 497, 278, 353, 1927, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1955, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 2011, 323, 267,
	271, 287, 298, 1926, 390, 428, 475, 1917, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1951, 217, 238, 429,
	211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	282, 1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018,
	350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892,
	1774, 1998, 1907, 1893, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1896, 426, 321, 0, 207,
	0, 425, 2009, 2035, 440, 227, 1800, 1966, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1942, 2032, 361, 394, 234, 470, 422, 263, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016,
	1954, 1789, 193, 194, 1992, 1993, 195, 1887, 2002, 1775,
	0, 1970, 189, 190, 174, 179, 1934, 2030, 1847, 243,
	164, 1771, 1772, 1773, 165, 1877, 1878, 167, 168, 1988,
	1987, 1986, 1989, 169, 2023, 2021, 2024, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1905, 200, 213, 313, 2031, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1967, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961,
	1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1858, 197, 0, 0, 203, 0, 204, 206,
	1843, 202, 1990, 2026, 1922, 1936, 1827, 2006, 0, 1968,
	449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776,
	1899, 358, 1837, 1777, 186, 1760, 1815, 1764, 1828, 1765,
	1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259,
	245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880,
	0, 172, 479, 191, 2017, 315, 1982, 499, 477, 424,
	340, 502, 501, 1876, 1991, 1897, 1960, 1859, 1932, 1792,
	1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1920, 2004, 1831, 500, 1871, 1929, 2033, 1763, 1916,
	0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	469, 1935, 1945, 1963, 1848, 377, 284, 0, 0, 0,
	0, 0, 0, 2271, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857,
	302, 192, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841,
	312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 177,
	199, 314, 1972, 1813, 1830, 246, 0, 393, 1925, 468,
	2278, 279, 0, 1906, 392, 316, 461, 1940, 2003, 467,
	1842, 443, 478, 483, 272, 1882, 235, 421, 262, 255,
	1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814,
	242, 1943, 1914, 1977, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787,
	1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362,
	225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474,
	180, 407, 406, 1845, 293, 1959, 181, 170, 386, 182,
	303, 205, 1984, 487, 221, 310, 451, 2277, 278, 353,
	1927, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1955, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 2011, 323, 267, 271, 287, 298, 1926,
	390, 428, 475, 1917, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1951, 217, 238, 429, 211, 1999, 1974, 1908,
	1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465,
	247, 1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022,
	2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1896, 426, 321, 0, 207, 0, 425, 2009, 2035,
	440, 227, 1800, 1966, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1942, 2032, 361,
	394, 234, 470, 422, 263, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 193, 194,
	1992, 1993, 195, 1887, 2002, 1775, 0, 1970, 189, 190,
	174, 179, 1934, 2030, 1847, 243, 164, 1771, 1772, 1773,
	165, 1877, 1878, 167, 168, 1988, 1987, 1986, 1989, 169,
	2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1905, 200, 213,
	313, 2031, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983,
	473, 253, 1885, 1910, 1948, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1858, 197,
	0, 0, 203, 0, 204, 206, 1843, 202, 1990, 2026,
	1922, 1936, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810,
	1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777,
	186, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971,
	1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996,
	1826, 1825, 1928, 1985, 2007, 1880, 0, 172, 479, 191,
	2017, 315, 1982, 499, 477, 424, 340, 502, 501, 1876,
	1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924,
	2013, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1920, 2004, 1831,
	500, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027,
	1997, 1822, 1823, 264, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963,
	1848, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 341, 1780, 1965, 1995, 1857, 302, 192, 2001, 1855,
	1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778,
	1786, 1839, 354, 1949, 1957, 177, 199, 314, 1972, 1813,
	1830, 246, 0, 393, 1925, 468, 2278, 279, 0, 1906,
	392, 316, 461, 1940, 2003, 467, 1842, 443, 478, 483,
	272, 1882, 235, 421, 262, 255, 1821, 1962, 1767, 285,
	376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005,
	294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875,
	1953, 472, 2029, 258, 1958, 474, 180, 407, 406, 1845,
	293, 1959, 181, 170, 386, 182, 303, 205, 1984, 487,
	221, 310, 451, 2277, 278, 353, 1927, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 1955, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 2011,
	323, 267, 271, 287, 298, 1926, 390, 428, 475, 1917,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1951, 217,
	238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0,
	210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019, 212,
	1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909,
	1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1896, 426, 321,
	0, 207, 0, 425, 2009, 2035, 440, 227, 1800, 1966,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1942, 2032, 361, 394, 234, 470, 422,
	263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014,
	2015, 2016, 1954, 1789, 193, 194, 1992, 1993, 195, 1887,
	2002, 1775, 0, 1970, 189, 190, 174, 179, 1934, 2030,
	1847, 243, 164, 1771, 1772, 1773, 165, 1877, 1878, 167,
	168, 1988, 1987, 1986, 1989, 169, 2023, 2021, 2024, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946,
	1820, 1879, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1905, 200, 213, 313, 2031, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1967,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034,
	347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910,
	1948, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1858, 197, 0, 0, 203, 0,
	204, 206, 1843, 202, 1990, 2026, 1922, 1936, 902, 1044,
	0, 0, 449, 1111, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 358, 909, 865, 186, 0, 0, 856,
	1106, 857, 890, 260, 1104, 1018, 963, 1046, 946, 978,
	988, 259, 245, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 479, 191, 1144, 315, 0, 499,
	477, 424, 340, 502, 501, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 500, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 264,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 469, 990, 999, 1013, 919, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 341, 867, 1133,
	1034, 927, 302, 192, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 312, 869, 196, 866, 872, 911, 354, 1002,
	1008, 177, 199, 314, 1019, 891, 904, 246, 3307, 393,
	980, 468, 2363, 279, 0, 966, 392, 316, 461, 994,
	1042, 467, 914, 443, 478, 483, 272, 947, 235, 421,
	262, 255, 896, 1012, 859, 285, 376, 250, 307, 930,
	986, 892, 242, 997, 973, 1024, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 294, 286, 1027, 1025,
	905, 362, 225, 957, 950, 943, 1129, 472, 1059, 258,
	1009, 474, 180, 407, 406, 917, 293, 1010, 181, 170,
	386, 182, 303, 205, 1030, 487, 221, 310, 451, 2362,
	278, 353, 982, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 1006, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 1049, 323, 267, 271, 287,
	298, 981, 390, 428, 475, 975, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1004, 217, 238, 429, 211, 1038,
	1021, 968, 932, 938, 861, 0, 210, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 282, 992,
	464, 465, 247, 1096, 1053, 212, 868, 1052, 350, 357,
	349, 1055, 1054, 460, 1039, 969, 956, 954, 862, 1037,
	967, 955, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 958, 426, 321, 0, 207, 0, 425,
	1047, 1065, 440, 227, 880, 1014, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 996,
	1062, 361, 394, 234, 470, 422, 263, 1101, 0, 1103,
	1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097,
	193, 194, 1138, 1139, 195, 949, 1041, 863, 0, 1017,
	189, 190, 174, 179, 989, 1060, 1109, 243, 164, 1092,
	1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134,
	1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116,
	1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1121,
	200, 213, 313, 1061, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 347, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 473, 253, 948, 970, 1001, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	928, 197, 0, 0, 203, 0, 204, 206, 915, 202,
	1032, 1057, 977, 991, 1827, 2006, 0, 1968, 449, 1861,
	2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358,
	1837, 1777, 186, 1760, 1815, 1764, 1828, 1765, 1812, 260,
	1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891,
	1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 172,
	479, 191, 2017, 315, 1982, 499, 477, 424, 340, 502,
	501, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012,
	1838, 1924, 2013, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1920,
	2004, 1831, 500, 1871, 1929, 2033, 1763, 1916, 0, 1768,
	1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935,
	1945, 1963, 1848, 377, 284, 0, 0, 0, 0, 0,
	0, 2859, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 192,
	2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783,
	196, 1778, 1786, 1839, 354, 1949, 1957, 177, 199, 314,
	1972, 1813, 1830, 246, 0, 393, 1925, 468, 498, 279,
	0, 1906, 392, 316, 461, 1940, 2003, 467, 1842, 443,
	478, 483, 272, 1882, 235, 421, 262, 255, 1821, 1962,
	1767, 285, 376, 250, 307, 1860, 1931, 1814, 242, 1943,
	1914, 1977, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788,
	1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895,
	1888, 1875, 1953, 472, 2029, 258, 1958, 474, 180, 407,
	406, 1845, 293, 1959, 181, 170, 386, 182, 303, 205,
	1984, 487, 221, 310, 451, 497, 278, 353, 1927, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 1955,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 2011, 323, 267, 271, 287, 298, 1926, 390, 428,
	475, 1917, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869,
	1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781,
	2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020, 460,
	2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1896,
	426, 321, 0, 207, 0, 425, 2009, 2035, 440, 227,
	1800, 1966, 455, 178, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1942, 2032, 361, 394, 234,
	470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992, 1993,
	0, 1887, 2002, 1775, 0, 1970, 189, 190, 174, 179,
	1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0, 1877,
	1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023, 2021,
	2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964,
	1937, 1946, 1820, 1879, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1905, 200, 213, 313, 2031,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253,
	1885, 1910, 1948, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1858, 197, 0, 0,
	203, 0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936,
	902, 1044, 0, 0, 449, 1111, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 358, 909, 865, 186, 0,
	0, 856, 1106, 857, 890, 260, 1104, 1018, 963, 1046,
	946, 978, 988, 259, 245, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 479, 191, 1144, 315,
	0, 499, 477, 424, 340, 502, 501, 944, 0, 1118,
	1131, 929, 987, 876, 974, 1050, 910, 979, 1051, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 500, 939,
	984, 1063, 855, 1123, 0, 860, 1095, 0, 1036, 897,
	898, 264, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 469, 990, 999, 1013, 919, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 870, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 341,
	867, 1133, 1034, 927, 302, 192, 1040, 925, 1110, 993,
	871, 1022, 1056, 913, 312, 869, 196, 866, 872, 911,
	354, 1002, 1008, 177, 199, 314, 1019, 891, 904, 246,
	0, 393, 980, 468, 2363, 279, 0, 966, 392, 316,
	461, 994, 1042, 467, 914, 443, 478, 483, 272, 947,
	235, 421, 262, 255, 896, 1012, 859, 285, 376, 250,
	307, 930, 986, 892, 242, 997, 973, 1024, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 294, 286,
	1027, 1025, 905, 362, 225, 957, 950, 943, 1129, 472,
	1059, 258, 1009, 474, 180, 407, 406, 917, 293, 1010,
	181, 170, 386, 182, 303, 205, 1030, 487, 221, 310,
	451, 2362, 278, 353, 982, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1006, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 1049, 323, 267,
	271, 287, 298, 981, 390, 428, 475, 975, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1004, 217, 238, 429,
	211, 1038, 1021, 968, 932, 938, 861, 0, 210, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	282, 992, 464, 465, 247, 1096, 1053, 212, 868, 1052,
	350, 357, 349, 1055, 1054, 460, 1039, 969, 956, 954,
	862, 1037, 967, 955, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 958, 426, 321, 0, 207,
	0, 425, 1047, 1065, 440, 227, 880, 1014, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 996, 1062, 361, 394, 234, 470, 422, 263, 1101,
	0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143,
	1130, 1097, 193, 194, 1138, 1139, 195, 949, 1041, 863,
	0, 1017, 189, 190, 174, 179, 989, 1060, 1109, 243,
	164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136,
	1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108,
	1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1121, 200, 213, 313, 1061, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 347, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 928, 197, 0, 0, 203, 0, 204, 206,
	915, 202, 1032, 1057, 977, 991, 1827, 2006, 0, 1968,
	449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776,
	1899, 358, 1837, 1777, 186, 1760, 1815, 1764, 1828, 1765,
	1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259,
	245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880,
	0, 172, 479, 191, 2017, 315, 1982, 499, 477, 424,
	340, 502, 501, 1876, 1991, 1897, 1960, 1859, 1932, 1792,
	1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1920, 2004, 1831, 500, 1871, 1929, 2033, 1763, 1916,
	0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	469, 1935, 1945, 1963, 1848, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857,
	302, 192, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841,
	312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 177,
	199, 314, 1972, 1813, 1830, 246, 0, 393, 1925, 468,
	498, 279, 0, 1906, 392, 316, 461, 1940, 2003, 467,
	1842, 443, 478, 483, 272, 1882, 235, 421, 262, 255,
	1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814,
	242, 1943, 1914, 1977, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787,
	1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362,
	225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474,
	180, 407, 406, 1845, 293, 1959, 181, 170, 386, 182,
	303, 205, 1984, 487, 221, 310, 451, 497, 278, 353,
	1927, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1955, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 2011, 323, 267, 271, 287, 298, 1926,
	390, 428, 475, 1917, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1951, 217, 238, 429, 211, 1999, 1974, 1908,
	1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465,
	247, 1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022,
	2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1896, 426, 321, 0, 207, 0, 425, 2009, 2035,
	440, 227, 1800, 1966, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1942, 2032, 361,
	394, 234, 470, 422, 263, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 0, 0,
	1992, 1993, 0, 1887, 2002, 1775, 0, 1970, 189, 190,
	174, 179, 1934, 2030, 1847, 243, 0, 1771, 1772, 1773,
	0, 1877, 1878, 0, 0, 1988, 1987, 1986, 1989, 0,
	2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1905, 200, 213,
	313, 2031, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983,
	473, 253, 1885, 1910, 1948, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1858, 197,
	0, 0, 203, 0, 204, 206, 1843, 202, 1990, 2026,
	1922, 1936, 902, 1044, 0, 0, 449, 1111, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 358, 909, 865,
	186, 0, 0, 856, 1106, 857, 890, 260, 1104, 1018,
	963, 1046, 946, 978, 988, 259, 245, 953, 952, 1035,
	901, 900, 983, 1031, 1045, 0, 0, 172, 479, 191,
	1144, 315, 0, 0, 477, 424, 340, 0, 0, 944,
	0, 1118, 1131, 929, 987, 876, 974, 1050, 910, 979,
	1051, 0, 0, 0, 0, 0, 0, 559, 0, 1452,
	0, 0, 1453, 0, 0, 171, 0, 1126, 1140, 1107,
	0, 939, 984, 1063, 855, 1123, 0, 860, 1095, 0,
	1036, 897, 898, 264, 0, 0, 0, 0, 0, 0,
	0, 942, 959, 1003, 926, 0, 469, 990, 999, 1013,
	919, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 870, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 875, 853, 895, 1005, 854,
	852, 341, 867, 1133, 1034, 927, 302, 192, 1040, 925,
	1110, 993, 871, 1022, 1056, 913, 312, 869, 196, 866,
	872, 911, 354, 1002, 1008, 177, 199, 314, 1019, 891,
	904, 246, 0, 393, 980, 468, 1090, 279, 0, 966,
	392, 316, 461, 994, 1042, 467, 914, 443, 478, 483,
	272, 947, 235, 421, 262, 255, 896, 1012, 859, 285,
	376, 250, 307, 930, 986, 892, 242, 997, 973, 1024,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1020, 1007, 1026, 887, 873, 879, 874, 903, 1043,
	294, 286, 1027, 1025, 905, 362, 225, 957, 950, 943,
	1129, 472, 1059, 258, 1009, 474, 180, 407, 406, 917,
	293, 1010, 181, 170, 386, 182, 303, 205, 1030, 487,
	221, 310, 451, 1089, 278, 353, 982, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 1006, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 1049,
	323, 267, 271, 287, 298, 981, 390, 428, 475, 975,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1004, 217,
	238, 429, 211, 1038, 1021, 968, 932, 938, 861, 0,
	210, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 282, 992, 464, 465, 247, 1096, 1053, 212,
	868, 1052, 350, 357, 349, 1055, 1054, 460, 1039, 969,
	956, 954, 862, 1037, 967, 955, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 958, 426, 321,
	0, 207, 0, 425, 1047, 1065, 440, 227, 880, 1014,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 996, 1062, 361, 394, 234, 470, 422,
	263, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141,
	1142, 1143, 1130, 1097, 193, 194, 1138, 1139, 195, 949,
	1041, 863, 0, 1017, 189, 190, 174, 179, 989, 1060,
	1109, 243, 164, 1092, 1093, 1094, 165, 1113, 1114, 167,
	168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098,
	1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128,
	0, 945, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1121, 200, 213, 313, 1061, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	347, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970,
	1001, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 928, 197, 0, 0, 203, 0,
	204, 206, 915, 202, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 449, 1111, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 358, 909, 865, 186, 0, 0, 856,
	1106, 857, 890, 260, 1104, 1018, 963, 1046, 946, 978,
	988, 259, 245, 953, 952, 1035, 901, 900, 983, 1031,
	1045, 0, 0, 172, 479, 191, 1144, 315, 0, 0,
	477, 424, 340, 0, 0, 944, 0, 1118, 1131, 929,
	987, 876, 974, 1050, 910, 979, 1051, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 0, 939, 984, 1063,
	855, 1123, 0, 860, 1095, 0, 1036, 897, 898, 264,
	0, 0, 0, 0, 0, 0, 0, 942, 959, 1003,
	926, 0, 469, 990, 999, 1013, 919, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 870, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 875, 853, 895, 1005, 854, 852, 341, 867, 1133,
	1034, 927, 302, 192, 1040, 925, 1110, 993, 871, 1022,
	1056, 913, 312, 869, 196, 866, 872, 911, 354, 1002,
	1008, 177, 199, 314, 1019, 891, 904, 246, 0, 393,
	980, 468, 1090, 279, 0, 966, 392, 316, 461, 994,
	1042, 467, 914, 443, 478, 483, 272, 947, 235, 421,
	262, 255, 896, 1012, 859, 285, 376, 250, 307, 930,
	986, 892, 242, 997, 973, 1024, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1020, 1007, 1026,
	887, 873, 879, 874, 903, 1043, 294, 286, 1027, 1025,
	905, 362, 225, 957, 950, 943, 1129, 472, 1059, 258,
	1009, 474, 180, 407, 406, 917, 293, 1010, 181, 170,
	386, 182, 303, 205, 1030, 487, 221, 310, 451, 1089,
	278, 353, 982, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 1006, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 1049, 323, 267, 271, 287,
	298, 981, 390, 428, 475, 975, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1004, 217, 238, 429, 211, 1038,
	1021, 968, 932, 938, 861, 0, 210, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 282, 992,
	464, 465, 247, 1096, 1053, 212, 868, 1052, 350, 357,
	349, 1055, 1054, 460, 1039, 969, 956, 954, 862, 1037,
	967, 955, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 958, 426, 321, 0, 207, 0, 425,
	1047, 1065, 440, 227, 880, 1014, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 996,
	1062, 361, 394, 234, 470, 422, 263, 1101, 0, 1103,
	1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097,
	193, 194, 1138, 1139, 195, 949, 1041, 863, 0, 1017,
	189, 190, 174, 179, 989, 1060, 1109, 243, 164, 1092,
	1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134,
	1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116,
	1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1121,
	200, 213, 313, 1061, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 347, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 473, 253, 948, 970, 1001, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	928, 197, 0, 0, 203, 0, 204, 206, 915, 202,
	1032, 1057, 977, 991, 902, 1044, 0, 0, 449, 1111,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 358,
	909, 865, 186, 0, 0, 856, 1106, 857, 890, 260,
	1104, 1018, 963, 1046, 946, 978, 988, 259, 245, 953,
	952, 1035, 901, 900, 983, 1031, 1045, 0, 0, 172,
	479, 191, 1144, 315, 0, 0, 477, 424, 340, 0,
	0, 944, 0, 1118, 1131, 929, 987, 876, 974, 1050,
	910, 979, 1051, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1126,
	1140, 1107, 0, 939, 984, 1063, 855, 1123, 0, 860,
	1095, 0, 1036, 897, 898, 264, 0, 0, 0, 0,
	0, 0, 0, 942, 959, 1003, 926, 0, 469, 990,
	999, 1013, 919, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 870,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 875, 853, 895,
	1005, 854, 852, 341, 867, 1133, 1034, 927, 302, 192,
	1040, 925, 1110, 993, 871, 1022, 1056, 913, 312, 869,
	196, 866, 872, 911, 354, 1002, 1008, 177, 199, 314,
	1019, 891, 904, 246, 0, 393, 980, 468, 1090, 279,
	0, 966, 392, 316, 461, 994, 1042, 467, 914, 443,
	478, 483, 272, 947, 235, 421, 262, 255, 896, 1012,
	859, 285, 376, 250, 307, 930, 986, 892, 242, 997,
	973, 1024, 420, 458, 201, 335, 459, 482, 166, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1020, 1007, 1026, 887, 873, 879, 874,
	903, 1043, 294, 286, 1027, 1025, 905, 362, 225, 957,
	950, 943, 1129, 472, 1059, 258, 1009, 474, 180, 407,
	406, 917, 293, 1010, 181, 170, 386, 182, 303, 205,
	1030, 487, 221, 310, 451, 1089, 278, 353, 982, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 1006,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 1049, 323, 267, 271, 287, 298, 981, 390, 428,
	475, 975, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1004, 217, 238, 429, 211, 1038, 1021, 968, 932, 938,
	861, 0, 210, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 282, 992, 464, 465, 247, 1096,
	1053, 212, 1084, 1052, 350, 357, 349, 1055, 1054, 460,
	1039, 969, 956, 954, 862, 1037, 967, 955, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 1080, 958,
	426, 321, 0, 207, 0, 425, 1047, 1065, 440, 227,
	880, 1014, 455, 178, 382, 228, 280, 268, 373, 1085,
	1083, 1074, 1075, 309, 317, 996, 1062, 361, 394, 234,
	470, 422, 263, 1101, 0, 1103, 1099, 1102, 1100, 1119,
	1120, 1141, 1142, 1143, 1130, 1097, 193, 194, 1138, 1139,
	195, 949, 1041, 863, 0, 1017, 189, 190, 174, 179,
	989, 1060, 1109, 243, 164, 1092, 1093, 1094, 165, 1113,
	1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145,
	1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132,
	1127, 1128, 0, 945, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1121, 200, 213, 313, 1061,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 347, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253,
	948, 970, 1001, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 1081,
	1082, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 928, 197, 0, 0,
	203, 0, 204, 206, 915, 202, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 449, 1111, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 358, 909, 865, 186, 0,
	0, 856, 1106, 857, 890, 260, 1104, 1018, 963, 1046,
	946, 978, 988, 259, 245, 953, 952, 1035, 901, 900,
	983, 1031, 1045, 0, 0, 172, 479, 191, 1144, 315,
	0, 0, 477, 424, 340, 0, 0, 944, 0, 1118,
	1131, 929, 987, 876, 974, 1050, 910, 979, 1051, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 0, 939,
	984, 1063, 855, 1123, 0, 860, 1095, 0, 1036, 897,
	898, 264, 0, 0, 0, 0, 0, 0, 0, 942,
	959, 1003, 926, 0, 469, 990, 999, 1013, 919, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 870, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 875, 853, 895, 1005, 854, 852, 341,
	867, 1133, 1034, 927, 302, 192, 1040, 925, 1110, 993,
	871, 1022, 1056, 913, 312, 869, 196, 866, 872, 911,
	354, 1002, 1008, 177, 199, 314, 1019, 891, 904, 246,
	0, 393, 980, 468, 1090, 279, 0, 966, 392, 316,
	461, 994, 1042, 467, 914, 443, 478, 483, 272, 947,
	235, 421, 262, 255, 896, 1012, 859, 285, 376, 250,
	307, 930, 986, 892, 242, 997, 973, 1024, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1020,
	1007, 1026, 887, 873, 879, 874, 903, 1043, 294, 286,
	1027, 1025, 905, 362, 225, 957, 950, 943, 1129, 472,
	1059, 258, 1009, 474, 180, 407, 406, 917, 293, 1010,
	181, 170, 386, 182, 303, 205, 1030, 487, 221, 310,
	451, 1089, 278, 353, 982, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 1006, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 1049, 323, 267,
	271, 287, 298, 981, 390, 428, 475, 975, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 1618, 230, 408, 411, 486, 1004, 217, 238, 429,
	211, 1038, 1021, 968, 932, 938, 861, 0, 210, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	282, 992, 464, 465, 247, 1096, 1053, 212, 868, 1052,
	350, 357, 349, 1055, 1054, 460, 1039, 969, 956, 954,
	862, 1037, 967, 955, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 958, 426, 321, 0, 207,
	0, 425, 1047, 1065, 440, 227, 880, 1014, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 996, 1062, 361, 394, 234, 470, 422, 263, 1101,
	0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143,
	1130, 1097, 193, 194, 1138, 1139, 195, 949, 1041, 863,
	0, 1017, 189, 190, 174, 179, 989, 1060, 1109, 243,
	164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136,
	1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108,
	1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1121, 200, 213, 313, 1061, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 347, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 928, 197, 0, 0, 203, 0, 204, 206,
	915, 202, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	449, 1111, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 358, 909, 865, 186, 0, 0, 856, 1106, 857,
	890, 260, 1104, 1018, 963, 1046, 946, 978, 988, 259,
	245, 953, 952, 1035, 901, 900, 983, 1031, 1045, 0,
	0, 172, 479, 191, 1144, 315, 0, 0, 477, 424,
	340, 0, 0, 944, 0, 1118, 1131, 929, 987, 876,
	974, 1050, 910, 979, 1051, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 0, 939, 984, 1063, 855, 1123,
	0, 860, 1095, 0, 1036, 897, 898, 264, 0, 0,
	0, 0, 0, 0, 0, 942, 959, 1003, 926, 0,
	469, 990, 999, 1013, 919, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 870, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 875,
	853, 895, 1005, 854, 852, 341, 867, 1133, 1034, 927,
	302, 192, 1040, 925, 1110, 993, 871, 1022, 1056, 913,
	312, 869, 196, 866, 872, 911, 354, 1002, 1008, 177,
	199, 314, 1019, 891, 904, 246, 0, 393, 980, 468,
	1090, 279, 0, 966, 392, 316, 461, 994, 1042, 467,
	914, 443, 478, 483, 272, 947, 235, 421, 262, 255,
	896, 1012, 859, 285, 376, 250, 307, 930, 986, 892,
	242, 997, 973, 1024, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1020, 1007, 1026, 887, 873,
	879, 874, 903, 1043, 294, 286, 1027, 1025, 905, 362,
	225, 957, 950, 943, 1129, 472, 1059, 258, 1009, 474,
	180, 407, 406, 917, 293, 1010, 181, 170, 386, 182,
	303, 205, 1030, 487, 221, 310, 451, 1089, 278, 353,
	982, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 1006, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 1049, 323, 267, 271, 287, 298, 981,
	390, 428, 475, 975, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 1071, 230, 408,
	411, 486, 1004, 217, 238, 429, 211, 1038, 1021, 968,
	932, 938, 861, 0, 210, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 282, 992, 464, 465,
	247, 1096, 1053, 212, 1084, 1052, 350, 357, 349, 1055,
	1054, 460, 1039, 969, 956, 954, 862, 1037, 967, 955,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	1080, 958, 426, 321, 0, 207, 0, 425, 1047, 1065,
	440, 227, 880, 1014, 455, 178, 382, 228, 280, 268,
	373, 1085, 1083, 1074, 1075, 309, 317, 996, 1062, 361,
	394, 234, 470, 422, 263, 1101, 0, 1103, 1099, 1102,
	1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 193, 194,
	1138, 1139, 195, 949, 1041, 863, 0, 1017, 189, 190,
	174, 179, 989, 1060, 1109, 243, 164, 1092, 1093, 1094,
	165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169,
	1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124,
	1125, 1132, 1127, 1128, 0, 945, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1121, 200, 213,
	313, 1061, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 347, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	473, 253, 948, 970, 1001, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 1081, 1082, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 928, 197,
	0, 0, 203, 0, 204, 206, 915, 202, 1032, 1057,
	977, 991, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810,
	1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777,
	0, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971,
	1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996,
	1826, 1825, 1928, 1985, 2007, 1880, 0, 0, 479, 0,
	2017, 315, 1982, 0, 477, 424, 340, 0, 0, 1876,
	1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924,
	2013, 0, 0, 0, 0, 0, 3165, 3170, 0, 3173,
	3175, 3174, 0, 0, 0, 3167, 0, 1920, 2004, 1831,
	0, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027,
	1997, 1822, 1823, 264, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963,
	1848, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 341, 1780, 1965, 1995, 1857, 302, 0, 2001, 1855,
	1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778,
	1786, 1839, 354, 1949, 1957, 0, 199, 314, 1972, 1813,
	1830, 246, 0, 393, 1925, 468, 0, 279, 0, 1906,
	392, 316, 461, 1940, 2003, 467, 1842, 443, 478, 483,
	272, 1882, 235, 421, 262, 255, 1821, 1962, 1767, 285,
	376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977,
	420, 458, 201, 335, 459, 482, 3168, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005,
	294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875,
	1953, 472, 2029, 258, 1958, 474, 0, 407, 406, 1845,
	293, 1959, 0, 0, 386, 3169, 303, 205, 1984, 487,
	221, 310, 451, 0, 278, 353, 1927, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1955, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2011,
	323, 267, 271, 287, 298, 1926, 390, 428, 475, 1917,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1951, 217,
	238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0,
	210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019, 212,
	1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909,
	1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1896, 426, 321,
	0, 207, 0, 425, 2009, 2035, 440, 227, 1800, 1966,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1942, 2032, 361, 394, 234, 470, 422,
	263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014,
	2015, 2016, 1954, 1789, 0, 0, 1992, 1993, 0, 1887,
	2002, 1775, 0, 1970, 0, 0, 0, 0, 1934, 2030,
	1847, 243, 0, 1771, 1772, 1773, 0, 1877, 1878, 0,
	0, 1988, 1987, 1986, 1989, 0, 2023, 2021, 2024, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946,
	1820, 1879, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1905, 200, 213, 313, 2031, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1967,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034,
	347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910,
	1948, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1858, 197, 0, 0, 203, 0,
	204, 206, 1843, 202, 1990, 2026, 1922, 1936, 1827, 2006,
	0, 1968, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849,
	1930, 1776, 1899, 358, 1837, 1777, 0, 1760, 1815, 1764,
	1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923,
	1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985,
	2007, 1880, 0, 0, 479, 0, 2017, 315, 1982, 0,
	477, 424, 340, 0, 0, 1876, 1991, 1897, 1960, 1859,
	1932, 1792, 1915, 2012, 1838, 1924, 2013, 0, 0, 0,
	0, 0, 3975, 3170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1920, 2004, 1831, 0, 1871, 1929, 2033,
	1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965,
	1995, 1857, 302, 0, 2001, 1855, 1854, 1939, 1785, 1975,
	2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949,
	1957, 0, 199, 314, 1972, 1813, 1830, 246, 0, 393,
	1925, 468, 0, 279, 0, 1906, 392, 316, 461, 1940,
	2003, 467, 1842, 443, 478, 483, 272, 1882, 235, 421,
	262, 255, 1821, 1962, 1767, 285, 376, 250, 307, 1860,
	1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1973, 1956, 1979,
	1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978,
	1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258,
	1958, 474, 0, 407, 406, 1845, 293, 1959, 0, 0,
	386, 0, 303, 205, 1984, 487, 221, 310, 451, 0,
	278, 353, 1927, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1955, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2011, 323, 267, 271, 287,
	298, 1926, 390, 428, 475, 1917, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1951, 217, 238, 429, 211, 1999,
	1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938,
	464, 465, 247, 1781, 2019, 212, 1782, 2018, 350, 357,
	349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998,
	1907, 1893, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1896, 426, 321, 0, 207, 0, 425,
	2009, 2035, 440, 227, 1800, 1966, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1942,
	2032, 361, 394, 234, 470, 422, 263, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789,
	0, 0, 1992, 1993, 0, 1887, 2002, 1775, 0, 1970,
	0, 0, 0, 0, 1934, 2030, 1847, 243, 0, 1771,
	1772, 1773, 0, 1877, 1878, 0, 0, 1988, 1987, 1986,
	1989, 0, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1905,
	200, 213, 313, 2031, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1967, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976,
	1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1858, 197, 0, 0, 203, 0, 204, 206, 1843, 202,
	1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449, 1861,
	2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358,
	1837, 1777, 0, 1760, 1815, 1764, 1828, 1765, 1812, 260,
	1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891,
	1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 0,
	479, 0, 2017, 315, 1982, 0, 477, 424, 340, 0,
	0, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012,
	1838, 1924, 2013, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	2004, 1831, 0, 1871, 1929, 2033, 1763, 1916, 0, 1768,
	1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935,
	1945, 1963, 1848, 377, 284, 0, 0, 0, 0, 0,
	0, 3925, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 0,
	2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783,
	196, 1778, 1786, 1839, 354, 1949, 1957, 0, 199, 314,
	1972, 1813, 1830, 246, 0, 393, 1925, 468, 0, 279,
	0, 1906, 392, 316, 461, 1940, 2003, 467, 1842, 443,
	478, 483, 272, 1882, 235, 421, 262, 255, 1821, 1962,
	1767, 285, 376, 250, 307, 1860, 1931, 1814, 242, 1943,
	1914, 1977, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788,
	1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895,
	1888, 1875, 1953, 472, 2029, 258, 1958, 474, 0, 407,
	406, 1845, 293, 1959, 0, 0, 386, 0, 303, 205,
	1984, 487, 221, 310, 451, 0, 278, 353, 1927, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1955,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2011, 323, 267, 271, 287, 298, 1926, 390, 428,
	475, 1917, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869,
	1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781,
	2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020, 460,
	2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1896,
	426, 321, 0, 207, 0, 425, 2009, 2035, 440, 227,
	1800, 1966, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1942, 2032, 361, 394, 234,
	470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992, 1993,
	0, 1887, 2002, 1775, 0, 1970, 0, 0, 0, 0,
	1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0, 1877,
	1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023, 2021,
	2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964,
	1937, 1946, 1820, 1879, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1905, 200, 213, 313, 2031,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253,
	1885, 1910, 1948, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1858, 197, 0, 0,
	203, 0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936,
	1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840, 2028,
	1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 0, 1760,
	1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008,
	1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825,
	1928, 1985, 2007, 1880, 0, 0, 479, 0, 2017, 315,
	1982, 0, 477, 424, 340, 0, 0, 1876, 1991, 1897,
	1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 2004, 1831, 0, 1871,
	1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822,
	1823, 264, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377,
	284, 0, 0, 0, 0, 0, 0, 3220, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341,
	1780, 1965, 1995, 1857, 302, 0, 2001, 1855, 1854, 1939,
	1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839,
	354, 1949, 1957, 0, 199, 314, 1972, 1813, 1830, 246,
	0, 393, 1925, 468, 0, 279, 0, 1906, 392, 316,
	461, 1940, 2003, 467, 1842, 443, 478, 483, 272, 1882,
	235, 421, 262, 255, 1821, 1962, 1767, 285, 376, 250,
	307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1973,
	1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286,
	1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472,
	2029, 258, 1958, 474, 0, 407, 406, 1845, 293, 1959,
	0, 0, 386, 0, 303, 205, 1984, 487, 221, 310,
	451, 0, 278, 353, 1927, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1955, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2011, 323, 267,
	271, 287, 298, 1926, 390, 428, 475, 1917, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1951, 217, 238, 429,
	211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	282, 1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018,
	350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892,
	1774, 1998, 1907, 1893, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1896, 426, 321, 0, 207,
	0, 425, 2009, 2035, 440, 227, 1800, 1966, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1942, 2032, 361, 394, 234, 470, 422, 263, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016,
	1954, 1789, 0, 0, 1992, 1993, 0, 1887, 2002, 1775,
	0, 1970, 0, 0, 0, 0, 1934, 2030, 1847, 243,
	0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1988,
	1987, 1986, 1989, 0, 2023, 2021, 2024, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1905, 200, 213, 313, 2031, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1967, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961,
	1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1858, 197, 0, 0, 203, 0, 204, 206,
	1843, 202, 1990, 2026, 1922, 1936, 1827, 2006, 0, 1968,
	449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776,
	1899, 358, 1837, 1777, 0, 1760, 1815, 1764, 1828, 1765,
	1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259,
	245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880,
	0, 0, 479, 0, 2017, 315, 1982, 0, 477, 424,
	340, 0, 0, 1876, 1991, 1897, 1960, 1859, 1932, 1792,
	1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 2004, 1831, 0, 1871, 1929, 2033, 1763, 1916,
	0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	469, 1935, 1945, 1963, 1848, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857,
	302, 0, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841,
	312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 0,
	199, 314, 1972, 1813, 1830, 246, 0, 393, 1925, 468,
	0, 279, 0, 1906, 392, 316, 461, 1940, 2003, 467,
	1842, 443, 478, 483, 272, 1882, 235, 421, 262, 255,
	1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814,
	242, 1943, 1914, 1977, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787,
	1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362,
	225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474,
	0, 407, 406, 1845, 293, 1959, 0, 0, 386, 0,
	303, 205, 1984, 487, 221, 310, 451, 0, 278, 353,
	1927, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1955, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2011, 323, 267, 271, 287, 298, 1926,
	390, 428, 475, 1917, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1951, 217, 238, 429, 211, 1999, 1974, 1908,
	1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465,
	247, 1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022,
	2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1896, 426, 321, 0, 207, 0, 425, 2009, 2035,
	440, 227, 1800, 1966, 455, 2324, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1942, 2032, 361,
	394, 234, 470, 422, 263, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 0, 0,
	1992, 1993, 0, 1887, 2002, 1775, 0, 1970, 0, 0,
	0, 0, 1934, 2030, 1847, 243, 0, 1771, 1772, 1773,
	0, 1877, 1878, 0, 0, 1988, 1987, 1986, 1989, 0,
	2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1905, 200, 213,
	313, 2031, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983,
	473, 253, 1885, 1910, 1948, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1858, 197,
	0, 0, 203, 0, 204, 206, 1843, 202, 1990, 2026,
	1922, 1936, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810,
	1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777,
	0, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971,
	1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996,
	1826, 1825, 1928, 1985, 2007, 1880, 0, 0, 479, 0,
	2017, 315, 1982, 0, 477, 424, 340, 0, 0, 1876,
	1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924,
	2013, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 2004, 1831,
	0, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027,
	1997, 1822, 1823, 264, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963,
	1848, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 341, 1780, 1965, 1995, 1857, 302, 0, 2001, 1855,
	1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778,
	1786, 1839, 354, 1949, 1957, 0, 199, 314, 1972, 1813,
	1830, 246, 0, 393, 1925, 468, 0, 279, 0, 1906,
	392, 316, 461, 1940, 2003, 467, 1842, 443, 478, 483,
	272, 1882, 235, 421, 262, 255, 1821, 1962, 1767, 285,
	376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005,
	294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875,
	1953, 472, 2029, 258, 1958, 474, 0, 407, 406, 1845,
	293, 1959, 0, 0, 386, 0, 303, 205, 1984, 487,
	221, 310, 451, 0, 278, 353, 1927, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1955, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2011,
	323, 267, 271, 287, 298, 1926, 390, 428, 475, 1917,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1951, 217,
	238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0,
	210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019, 212,
	1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909,
	1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1896, 426, 321,
	0, 207, 0, 425, 2009, 2035, 440, 227, 1800, 1966,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1942, 2032, 361, 394, 234, 470, 422,
	263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014,
	2015, 2016, 1954, 1789, 0, 0, 1992, 1993, 0, 1887,
	2002, 1775, 0, 1970, 0, 0, 0, 0, 1934, 2030,
	1847, 243, 0, 1771, 1772, 1773, 0, 1877, 1878, 0,
	0, 1988, 1987, 1986, 1989, 0, 2023, 2021, 2024, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946,
	1820, 1879, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1905, 200, 213, 313, 2031, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1967,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034,
	347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910,
	1948, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 4098, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1858, 197, 0, 0, 203, 0,
	204, 206, 1843, 202, 1990, 2026, 1922, 1936, 1827, 2006,
	0, 1968, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849,
	1930, 1776, 1899, 358, 1837, 1777, 0, 1760, 1815, 1764,
	1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923,
	1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985,
	2007, 1880, 0, 0, 479, 0, 2017, 315, 1982, 0,
	477, 424, 340, 0, 0, 1876, 1991, 1897, 1960, 1859,
	1932, 1792, 1915, 2012, 1838, 1924, 2013, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1920, 2004, 1831, 0, 1871, 1929, 2033,
	1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965,
	1995, 1857, 302, 0, 2001, 1855, 1854, 1939, 1785, 1975,
	2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949,
	1957, 0, 199, 314, 1972, 1813, 1830, 246, 0, 393,
	1925, 468, 0, 279, 0, 1906, 392, 316, 461, 1940,
	2003, 467, 1842, 443, 478, 483, 272, 1882, 235, 421,
	262, 255, 1821, 1962, 1767, 285, 376, 250, 307, 1860,
	1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1973, 1956, 1979,
	1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978,
	1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258,
	1958, 474, 0, 407, 406, 1845, 293, 1959, 0, 0,
	386, 0, 303, 205, 1984, 487, 221, 310, 451, 0,
	278, 353, 1927, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1955, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2011, 323, 267, 271, 287,
	298, 1926, 390, 428, 475, 1917, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1951, 217, 238, 429, 211, 1999,
	1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938,
	464, 465, 247, 1781, 2019, 212, 1782, 2018, 350, 357,
	349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998,
	1907, 1893, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1896, 426, 321, 0, 207, 0, 425,
	2009, 2035, 440, 227, 1800, 1966, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1942,
	2032, 361, 394, 234, 470, 422, 263, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789,
	0, 0, 1992, 1993, 0, 1887, 2002, 1775, 0, 1970,
	0, 0, 0, 0, 1934, 2030, 1847, 243, 0, 1771,
	1772, 1773, 0, 1877, 1878, 0, 0, 1988, 1987, 1986,
	1989, 0, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1905,
	200, 213, 313, 2031, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1967, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976,
	1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1858, 197, 0, 0, 203, 0, 204, 206, 1843, 202,
	1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449, 1861,
	2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358,
	1837, 1777, 0, 1760, 1815, 1764, 1828, 1765, 1812, 260,
	1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891,
	1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 0,
	479, 0, 2017, 315, 1982, 0, 477, 424, 340, 0,
	0, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012,
	1838, 1924, 2013, 0, 0, 0, 0, 0, 0, 4379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	2004, 1831, 0, 1871, 1929, 2033, 1763, 1916, 0, 1768,
	1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935,
	1945, 1963, 1848, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 0,
	2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783,
	196, 1778, 1786, 1839, 354, 1949, 1957, 0, 199, 314,
	1972, 1813, 1830, 246, 0, 393, 1925, 468, 0, 279,
	0, 1906, 392, 316, 461, 1940, 2003, 467, 1842, 443,
	478, 483, 272, 1882, 235, 421, 262, 255, 1821, 1962,
	1767, 285, 376, 250, 307, 1860, 1931, 1814, 242, 1943,
	1914, 1977, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 4382,
	4383, 4384, 294, 286, 1980, 1978, 1832, 362, 225, 1895,
	1888, 1875, 1953, 472, 2029, 258, 1958, 474, 0, 407,
	406, 1845, 293, 1959, 0, 0, 386, 0, 303, 205,
	1984, 487, 221, 310, 451, 0, 278, 353, 1927, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1955,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2011, 323, 267, 271, 287, 298, 1926, 390, 428,
	475, 1917, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869,
	1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781,
	2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020, 460,
	2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1896,
	426, 321, 0, 207, 0, 425, 2009, 2035, 440, 227,
	1800, 1966, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1942, 2032, 361, 394, 234,
	470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992, 1993,
	0, 1887, 2002, 1775, 0, 1970, 0, 0, 0, 0,
	1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0, 1877,
	1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023, 2021,
	2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964,
	1937, 1946, 1820, 1879, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1905, 200, 213, 313, 2031,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253,
	1885, 1910, 1948, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1858, 197, 0, 0,
	203, 0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936,
	1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840, 2028,
	1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 0, 1760,
	1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008,
	1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825,
	1928, 1985, 2007, 1880, 0, 0, 479, 0, 2017, 315,
	1982, 0, 477, 424, 340, 0, 0, 1876, 1991, 1897,
	1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 0,
	0, 0, 0, 0, 0, 3170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 2004, 1831, 0, 1871,
	1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822,
	1823, 264, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341,
	1780, 1965, 1995, 1857, 302, 0, 2001, 1855, 1854, 1939,
	1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839,
	354, 1949, 1957, 0, 199, 314, 1972, 1813, 1830, 246,
	0, 393, 1925, 468, 0, 279, 0, 1906, 392, 316,
	461, 1940, 2003, 467, 1842, 443, 478, 483, 272, 1882,
	235, 421, 262, 255, 1821, 1962, 1767, 285, 376, 250,
	307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1973,
	1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286,
	1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472,
	2029, 258, 1958, 474, 0, 407, 406, 1845, 293, 1959,
	0, 0, 386, 0, 303, 205, 1984, 487, 221, 310,
	451, 0, 278, 353, 1927, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1955, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2011, 323, 267,
	271, 287, 298, 1926, 390, 428, 475, 1917, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1951, 217, 238, 429,
	211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	282, 1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018,
	350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892,
	1774, 1998, 1907, 1893, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1896, 426, 321, 0, 207,
	0, 425, 2009, 2035, 440, 227, 1800, 1966, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1942, 2032, 361, 394, 234, 470, 422, 263, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016,
	1954, 1789, 0, 0, 1992, 1993, 0, 1887, 2002, 1775,
	0, 1970, 0, 0, 0, 0, 1934, 2030, 1847, 243,
	0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1988,
	1987, 1986, 1989, 0, 2023, 2021, 2024, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1905, 200, 213, 313, 2031, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1967, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961,
	1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1858, 197, 0, 0, 203, 0, 204, 206,
	1843, 202, 1990, 2026, 1922, 1936, 590, 449, 584, 595,
	577, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 260, 0,
	0, 585, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 638, 639, 0,
	732, 0, 733, 735, 736, 737, 738, 0, 0, 0,
	734, 2316, 3388, 3389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 3383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 0, 576, 575, 578, 0,
	0, 0, 341, 0, 0, 0, 583, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 587, 0, 0, 199, 314, 591,
	0, 0, 246, 0, 393, 2313, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 594, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 579, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	582, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 1349,
	409, 456, 223, 427, 580, 581, 588, 589, 592, 593,
	596, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 2314, 2315,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 3400, 1066, 0, 3390, 3391,
	3393, 3401, 3402, 3392, 3394, 3395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3396, 3397,
	3398, 3399, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 586, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 0, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 590, 449, 584, 595, 577,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 260, 0, 0,
	585, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 315, 0, 0, 477, 424, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 575, 578, 0, 0,
	0, 341, 0, 0, 0, 583, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 196, 0,
	0, 0, 354, 587, 0, 0, 199, 314, 591, 0,
	0, 246, 0, 393, 0, 468, 0, 279, 0, 0,
	392, 316, 461, 0, 594, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 579, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 0, 407, 406, 582,
	293, 0, 0, 0, 386, 0, 303, 205, 0, 487,
	221, 310, 451, 0, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 0, 572, 409,
	456, 223, 427, 580, 581, 588, 589, 592, 593, 596,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	586, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 2466, 2470, 0, 172, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 2469, 302, 192, 0, 0, 0, 2462,
	0, 2463, 2465, 2464, 312, 1165, 196, 0, 2460, 2468,
	354, 0, 0, 177, 199, 314, 0, 0, 0, 246,
	1159, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 180, 407, 406, 0, 293, 0,
	181, 170, 386, 182, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 0, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 174, 179, 0, 0, 0, 243,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 186, 0, 0, 1476,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 1477, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 500, 0, 1472, 1473,
	1471, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 196, 0, 0, 0, 354, 0,
	0, 177, 199, 314, 0, 0, 0, 246, 0, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 180, 407, 406, 0, 293, 0, 181, 170,
	386, 182, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 0, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 174, 179, 0, 0, 0, 243, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	449, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 358, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 479, 191, 0, 315, 0, 499, 477, 424,
	340, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	302, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 1165, 196, 0, 1161, 0, 354, 0, 0, 177,
	199, 314, 0, 0, 0, 246, 1159, 393, 0, 468,
	498, 279, 0, 0, 392, 316, 461, 0, 0, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	166, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	180, 407, 406, 0, 293, 0, 181, 170, 386, 182,
	303, 205, 0, 487, 221, 310, 451, 497, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 175,
	183, 0, 383, 409, 456, 223, 427, 173, 176, 185,
	399, 187, 188, 0, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 178, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	0, 0, 195, 0, 0, 0, 0, 0, 189, 190,
	174, 179, 0, 0, 0, 243, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 184, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 449, 197,
	0, 0, 203, 0, 204, 206, 0, 202, 0, 358,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	479, 191, 0, 315, 0, 499, 477, 424, 340, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 302, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 3550,
	196, 0, 0, 3549, 354, 0, 0, 177, 199, 314,
	0, 0, 0, 246, 0, 393, 0, 468, 498, 279,
	0, 0, 392, 316, 461, 0, 0, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 166, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 180, 407,
	406, 0, 293, 0, 181, 170, 386, 182, 303, 205,
	0, 487, 221, 310, 451, 497, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 175, 183, 0,
	383, 409, 456, 223, 427, 173, 176, 185, 399, 187,
	188, 0, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 178, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 0, 0,
	195, 0, 0, 0, 0, 0, 189, 190, 174, 179,
	0, 0, 0, 243, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 184, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3517, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 1165, 196, 0,
	0, 2468, 354, 0, 0, 177, 199, 314, 0, 0,
	0, 246, 0, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 166, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 180, 407, 406, 0,
	293, 0, 181, 170, 386, 182, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 175, 183, 0, 383, 409,
	456, 223, 427, 173, 176, 185, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 178, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 174, 179, 0, 0,
	0, 243, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	184, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 302, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 1165, 196, 0, 0, 2468,
	354, 0, 0, 177, 199, 314, 0, 0, 0, 246,
	0, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 166, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 180, 407, 406, 0, 293, 0,
	181, 170, 386, 182, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 175, 183, 0, 383, 409, 456, 223,
	427, 173, 176, 185, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 178,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 174, 179, 0, 0, 0, 243,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 184, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 1477, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 196, 0, 0, 0, 354, 0,
	0, 177, 199, 314, 0, 0, 0, 246, 2270, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 166, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 180, 407, 406, 0, 293, 0, 181, 170,
	386, 182, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 175, 183, 0, 383, 409, 456, 223, 427, 173,
	176, 185, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 178, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 174, 179, 0, 0, 0, 243, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 184, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	0, 197, 42, 449, 203, 0, 204, 206, 0, 202,
	0, 0, 0, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 88, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 96, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	161, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 109, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 674, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3508, 0, 0, 0,
	0, 0, 3510, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	2041, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 1165, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3510, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 161, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3217, 681, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 674, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 161, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 674,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 549, 546, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 161, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 2539, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	161, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 2426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 161, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 161, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	2166, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 0, 197, 0,
	0, 203, 0, 204, 206, 449, 202, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 161, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 155, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	161, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 161, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 654, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 1163, 733, 735, 736,
	737, 738, 0, 0, 0, 734, 2316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	729, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 730, 731, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 4478, 0,
	0, 0, 0, 0, 260, 4476, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 4477,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2990,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 2991, 2992,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 1624, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 2470, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 2469, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 638, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3564, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3562, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3560, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3558, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3553, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3540, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3538, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	3467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3458, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 2589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 2747, 2746, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2927, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 42, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 71, 0, 0, 0, 4289,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4282, 0, 0, 0, 0, 4620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4282, 0, 0, 0, 0, 4617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 71, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	89, 57, 0, 0, 0, 71, 4289, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4285, 4282, 0, 0,
	0, 0, 4531, 0, 0, 0, 4294, 4286, 4287, 4288,
	4292, 4293, 4290, 0, 4291, 0, 4295, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 69, 70, 0,
	4285, 0, 0, 0, 4282, 60, 0, 0, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4283,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 4296, 4284, 0, 66, 67, 73, 0,
	74, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	69, 70, 0, 4285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293, 4290,
	0, 4291, 0, 4295, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 69, 70, 0,
	4285, 0, 60, 0, 0, 42, 0, 0, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 4528, 4291, 71,
	4295, 0, 0, 0, 0, 78, 93, 79, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 59, 61, 0, 0, 4289, 0, 87,
	4296, 4284, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4282, 0,
	0, 0, 0, 4523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 49, 90, 56, 55, 58,
	93, 0, 0, 47, 96, 0, 0, 0, 0, 0,
	4283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 42, 0, 0,
	0, 4289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 4282, 0, 0, 0, 0, 4521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 89, 4285, 0, 0, 0, 0, 4289,
	0, 0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 85, 78,
	4282, 79, 0, 0, 0, 4399, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 84, 0, 0, 0, 96, 0,
	0, 0, 0, 60, 4283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 85, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 49, 90, 56,
	55, 58, 93, 0, 0, 47, 96, 0, 0, 0,
	0, 0, 4283, 0, 0, 0, 0, 0, 0, 0,
	0, 4296, 4284, 0, 66, 67, 73, 0, 74, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 89, 4285, 0,
	0, 0, 0, 4289, 0, 0, 0, 0, 4294, 4286,
	4287, 4288, 4292, 4293, 4290, 0, 4291, 0, 4295, 0,
	0, 0, 0, 78, 4282, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 69, 70, 0, 4285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4294, 4286, 4287, 4288,
	4292, 4293, 4290, 0, 4291, 0, 4295, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 84, 0, 0, 0,
	96, 0, 0, 0, 0, 60, 4283, 0, 0, 0,
	0, 0, 0, 0, 0, 4296, 4284, 0, 66, 67,
	73, 0, 74, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4296, 4284, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	9605, -1000, -500, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2940, -1000, 2940, 376, -1000, 447, -1000, 1332, 817,
	-1000, -1000, -1000, -1000, -1000, 560, 312, 60861, 1150, 54949,
	80787, -255, 4963, 80049, 116, -1000, 116, 406, 57163, 969,
	870, 79311, 2790, 2169, 125, -6, -7, 222, 40924, 1053,
	250, 159, 184, 180, 149, 1268, -1000, 62337, 823, -1000,
	316, -1000, -1000, -1000, -1000, -1000, 56425, 3035, 3047, 3035,
	-1000, 2924, 2938, -1000, -1000, 2924, 2336, 2336, -1000, 62337,
	15230, -1000, -1000, -1000, -1000, -1000, 32618, -1000, 1330, -1000,
	61599, 43138, 2940, -1000, 1130, 1121, -99, 1052, 1052, 941,
	1052, 1052, -465, 1144, -1000, 799, 1666, -1000, -1000, -1000,
	-1000, 1644, 61599, 68241, 1142, 1053, 1053, 1053, 1053, 1053,
	1053, 1053, 1053, 1053, 54211, 61599, -1000, 1266, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61599,
	3007, 3005, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2589, 2587, 53473, 508, 2840, 1654, 332,
	1654, -1000, -1000, 1650, -1000, 946, 944, 942, 940, 934,
	927, -29, 1621, 1655, 2921, -1000, 2538, 2924, 2924, 1621,
	-1000, 917, -1000, -1000, -1000, -1000, -1000, -1000, 1349, -1000,
	-1000, 1726, 1726, 556, 1119, 960, 963, 960, 2885, 1641,
	2839, 2837, 2202, 2834, 928, 2833, 2577, -1000, 1264, -1000,
	-1000, 27, -1000, 2168, 61599, -1000, -1000, 2020, 2013, 580,
	2471, 1198, 2630, -1000, -1000, 665, 806, 2570, 699, 2570,
	2570, 2570, 352, 2570, 2570, -8, 2570, 2570, 2570, 281,
	2570, 330, 2570, 2570, 2570, 2570, 2570, -1000, 2310, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40175, 2869, 171, -1000, -205, 144, 2896, 1609, -1000,
	-1000, -1000, 264, 1330, 63075, 2529, -1000, 2538, -1000, -1000,
	-1000, 2536, 2538, -1000, 2077, 1137, 1053, 641, -1000, 530,
	-1000, -1000, -1000, 2871, 2538, 46831, -1000, -1000, 1662, -1000,
	2538, 2538, 1330, 2909, 1330, 1330, 2898, 2894, 1330, 2825,
	29594, 19766, 2779, 1763, -1000, -1000, -1000, -1000, 1330, 3004,
	-1000, 42400, 1263, -1000, 19766, 4948, 2538, 2538, -1000, 1203,
	1300, -1000, 1170, 1245, -1000, -1000, 20522, 20522, 20522, 20522,
	20522, 20522, 20522, -1000, -1000, -1000, -1000, -1000, -1000, 2277,
	2276, 2275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2538, 1257, 1255, 1251, 2538, 2538, 2538, 2538,
	2538, -1000, 18254, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2538, 2538, 2538, 2538, 2538,
	2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538,
	19766, 2538, 2538, 2538, 2538, 2538, -1000, 2538, 2538, 2538,
	2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538,
	2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538,
	2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538,
	2538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2538, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2538, 2538, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2538, 1064, 1064, 60123,
	2535, -49, 31862, -1000, -1000, -1000, -1000, 30350, 66027, 1552,
	-1000, -1000, -1000, -1000, 2832, -1000, -1000, 1250, 1245, 1203,
	1202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2940,
	364, -1000, 2397, -1000, -1000, 11435, 11435, 11435, 11435, 11435,
	11435, 49783, -1000, -1000, -1000, 2576, 2924, -1000, 1052, 1052,
	929, 2167, 1710, 2161, 79311, 79311, 1052, -1000, 670, 68241,
	68241, -378, 1052, 780, 68241, 820, 2534, 1117, 2533, 1115,
	2221, 1053, 77835, 61599, 2159, 2158, 79311, 79311, 68241, 68241,
	79311, -1000, -1000, -1000, 28838, -1000, 1324, 2532, 49045, 48307,
	52735, 52735, -1000, -1000, -1000, 915, -1000, 1654, -1000, 11803,
	19766, 1052, 1052, 61599, 61599, 61599, 61599, 61599, -1000, 61599,
	-1000, -1000, 1654, -1000, -1000, 1654, 1654, 1654, 1621, 3003,
	1621, -1000, -1000, -1000, 1654, 80049, 80049, 19766, -1000, 20522,
	67503, 1355, -1000, -1000, 1654, -1000, 80049, 987, 987, 987,
	-1000, 2157, 491, 367, -1000, 960, 364, -1000, -1000, 2796,
	2891, 2890, 2156, 928, 928, -1000, 2289, 928, 2523, -1000,
	1640, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 928, 2885, 19010, 77835, -481, -1000, -1000,
	2531, -1000, 499, -1000, -1000, 1004, 2629, 1004, 708, 68241,
	68241, 68241, -1000, 2570, 77835, -1000, 2570, 2570, 2570, -10,
	2570, 2570, -1000, -1000, 2570, -1000, -1000, -1000, 2570, -1000,
	-1000, 2570, -1000, -1000, -1000, 2570, 2570, -1000, 2570, 2570,
	-1000, -1000, -1000, -1000, -1000, 68241, 714, 2451, 2509, 2628,
	-1000, 1113, 172, -47, 105, -1000, -1000, -1000, -1000, -1000,
	-1000, 262, 261, 260, 258, -1000, -1000, -1000, -1000, 257,
	255, -1000, -1000, 59377, 59377, 939, -1000, 2529, 63075, 2883,
	24302, 823, -1000, 19766, 2845, -1000, 2845, -1000, -1000, -1000,
	380, -1000, 61599, 68241, 79311, 56425, 56425, 56425, 56425, -1000,
	2669, 2665, -1000, 2666, 2662, 2641, 513, 63075, -1000, 2871,
	376, 2395, 2336, 2336, 530, 46831, -1000, 2538, -1000, 63075,
	1224, 1129, 1127, 1124, 2796, -1000, -1000, -1000, -1000, -1000,
	2153, 2152, 2097, 14474, 20522, -1000, -1000, -1000, -1000, -1000,
	3035, 3035, -1000, -1000, -1000, -1000, -1000, -1000, 1733, 3030,
	1543, 2500, -1000, -1000, -1000, 2528, -1000, 1756, 1244, 2037,
	1761, -1000, -1000, -1000, -1000, -1000, -1000, 15230, -1000, 61599,
	-1000, 19766, 19766, 19766, 2026, -1000, 46090, -1000, -1000, -1000,
	25058, 1548, 20522, 1783, 1574, 20522, 20522, 20522, 20522, 20522,
	20522, 20522, 20522, 20522, 20522, 20522, 20522, 20522, 20522, 20522,
	1390, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2155,
	-1000, 364, 37910, 14474, 37910, 681, 681, 77835, 1334, 1334,
	1334, 1334, 1334, 1334, 12040, -1000, -1000, -1000, 2888, 36398,
	77835, 37910, 2888, 2888, 2888, 2888, 2888, 2393, 1658, 62337,
	18254, 56425, 14474, 14474, 14474, 2336, 19766, 19766, 14474, 20522,
	14474, 17498, 16742, 22034, 14474, 14474, 2888, 1627, 1658, 28082,
	14474, -1000, 2336, -1000, -1000, -1000, -1000, 1964, -1000, -1000,
	-311, -311, -311, 382, 14474, 14474, 14474, 14474, 2336, 2336,
	14474, 14474, 14474, 14474, 14474, 14474, 2336, 2336, 2336, 14474,
	14474, 14474, 14474, 14474, 14474, 14474, 14474, 14474, 14474, 14474,
	14474, -1000, -1000, -1000, 1925, 58639, 56425, 61599, 2467, 2439,
	-1000, -1000, 1243, 31106, 2512, -1000, -43, -63, -49, -1000,
	-1000, 1316, -1000, -1000, -1000, -1000, 15986, -1000, -1000, -1000,
	25814, 2924, -1000, 41662, -1000, 17, -1000, -1000, -1000, 2556,
	-1000, 2558, 62, 463, 2558, 51, 50, 2558, 2558, 2558,
	-1000, -1000, -1000, -1000, 69, -1000, -1000, -1000, -1000, -1000,
	2575, 2572, -1000, 2556, 2556, 2556, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2565, 485, 2557, 2557, 2557, 2557, 2557, -1000, -1000, -1000,
	-1000, -1000, 1024, -1000, -1000, -1000, 19766, 2825, 2682, 77835,
	61599, 1058, -467, 780, 2845, 2867, 2845, 954, -1000, 1242,
	2571, 79311, 829, 2466, -1000, 409, 2356, 1164, 57901, -1000,
	-1000, -1000, -1000, -1000, 61599, 61599, 68241, 68241, 68241, 61599,
	2625, 2527, -1000, -1000, -1000, -1000, -1000, 2526, -1000, 2356,
	-1000, -1000, 1227, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -438, -440, 61599, -1000,
	-1000, -1000, -1000, -1000, -1000, 2525, -1000, 2525, -1000, -1000,
	-1000, 2283, 1658, 2154, 2151, 2885, -1000, -1000, -1000, -1000,
	1622, -1000, -1000, -1000, -1000, 1654, 61599, 2885, -1000, -1000,
	-1000, 1658, 1511, 2585, 2538, 2336, -1000, -1000, -1000, 112,
	-1000, 108, -1000, -1000, -1000, 2150, -1000, -1000, -1000, -1000,
	-1000, 367, -1000, 20522, 2795, 2794, -1000, 2523, 2523, -1000,
	2523, 928, 63813, 2523, -1000, -1000, 2390, -1000, 253, 2281,
	61599, -1000, 63075, 26, -1000, -75, 76359, -1000, -1000, -1000,
	1004, 76359, -1000, 281, 287, -1000, 1112, -1000, 2388, -1000,
	-1000, -1000, -1000, 2570, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1004, 395, 2522, 1004, 68241, 68241,
	229, 2520, -1000, 1630, 1628, -1000, -1000, 101, -1000, -1000,
	-1000, -1000, 2920, -1000, -1000, 254, -52, -1000, 254, 2278,
	20522, -1000, 2538, 2352, -1000, 1225, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2538, -1000, -1000, -1000, -1000, 2830, 1552,
	1552, 1552, 5002, 409, 2624, 2569, 2623, 625, -1000, -1000,
	-1000, -1000, 2663, -1000, 2648, 2647, -1000, -1000, -1000, 2545,
	63075, 56425, -1000, -1000, -1000, 2336, 77835, 1232, -1000, 63075,
	2538, 2538, 2538, 20522, 20522, 1510, -1000, 20522, 20522, 1483,
	-1000, 20522, 20522, 1375, -1000, 2336, 2517, -1000, -1000, 1658,
	1218, 4842, -1000, 77097, 11, 2683, 29594, 29594, 19766, -1000,
	-1000, -1000, 25814, 2918, -1000, 2700, 2694, 3002, -1000, -1000,
	-1000, 1548, 1708, 1643, -1000, -1000, 1740, -1000, -1000, -1000,
	-1000, -1000, 1207, 2538, -1000, -1000, -1000, -1000, -1000, -1000,
	4981, -1000, -1000, -1000, -1000, 1783, 20522, 20522, 20522, 1511,
	4981, 5009, 1815, 3467, 1334, 1446, 1446, 1317, 1317, 1317,
	1317, 1317, 1748, 1748, -1000, -1000, -1000, -1000, 2336, -1000,
	2383, -1000, -1000, 2277, 2276, 2275, -1000, -1000, -1000, -1000,
	14474, -1000, -1000, -1000, -1000, -1000, -1000, 14474, 14474, 14474,
	14474, 14474, 19766, -1000, 2383, 2383, 2383, -1000, 1646, 1842,
	2307, 4888, 2383, 1346, 3001, 2383, 1336, 2998, 2383, 1770,
	20522, 20522, 20522, 2383, 2383, 14474, 1674, -1000, 19766, 2336,
	1275, 2336, 1203, 1202, 2383, -1000, 2336, 2515, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2514,
	2993, 2513, -1000, -1000, -1000, -1000, 2383, 2336, 2383, 2383,
	-118, -118, 2336, 2383, 2336, 2383, 2383, 2336, -118, -118,
	-118, 2383, 2383, 2383, 2383, 2383, 2383, 2383, 2383, 2383,
	2383, 2383, 2383, -1000, 2336, 1451, 61599, -1000, 2492, 1451,
	2443, 56425, -1000, -1000, 56425, 80049, 27326, -1000, 30350, -49,
	-53, -1000, -1000, 2512, -1000, -1000, 1514, -1000, -1000, 2274,
	1658, -1000, 1196, 2825, 7284, -1000, -1000, -1000, -1000, 2566,
	45352, -1000, 2737, 1278, 1278, 1278, 66765, 78573, 2734, -1000,
	-1000, 416, 1, -1000, -1000, -1000, 2011, -1000, 361, 466,
	2558, -1000, -1000, -1000, 2558, 2558, -1000, 2558, 2558, -1000,
	-1000, -1000, -1000, 2269, 2269, -1000, -1000, -1000, -1000, 2005,
	-1000, 2565, -1000, 2003, -1000, -1000, -1000, -1000, 416, 416,
	416, 416, 416, -1000, 1797, -1000, 2581, 2538, 61599, -380,
	-1000, -1000, -1000, 2970, -1000, -1000, 77835, 65289, 2622, -1000,
	-1000, 265, 68241, 400, 694, 305, -1000, 1709, -1000, -1000,
	1109, -1000, 1106, -1000, -1000, 1138, 61599, 61599, 68241, 77835,
	2621, 2619, -1000, 52735, -1000, -1000, -1000, -1000, 2962, 2149,
	2148, -1000, 1621, 1654, -1000, 20522, 68241, -1000, 923, -1000,
	-1000, -1000, -1000, 4981, 20522, 20522, -1000, -1000, -1000, -1000,
	1732, -1000, -1000, -1000, -1000, -37, -1000, -1000, 1105, 1194,
	1192, 76359, 1104, -1000, 299, 68241, -1000, 77835, -1000, 76359,
	350, 394, 76359, 1205, 2992, 2511, -1000, 1618, 1611, 1604,
	1585, 1580, 1573, 1565, 1560, 172, 2562, 2561, -1000, -1000,
	231, -1000, 2811, -1000, -1000, 4981, -1000, -1000, 24302, 37910,
	-1000, 1552, 1512, -1000, 1509, 2268, 1816, 1055, -1000, -1000,
	-1000, 2937, 1305, 1248, 1087, 1552, 1032, 404, 1103, 2806,
	2798, 527, 521, -1000, 1552, 1032, 1372, 600, -1000, 1503,
	1499, 1498, 1493, 1491, 1481, 1476, 1454, 583, -381, -1000,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, -181, -182,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 33374, 1552, 1552, -265, -1000, 1157, 787,
	-1000, -1000, 19766, 2560, -1000, 19766, -1000, -1000, -1000, -1000,
	-1000, 77835, 2545, 530, -1000, 2350, -1000, -1000, 1232, 77835,
	77835, 77835, 4819, 1898, 2538, 4732, 1795, 2538, 4688, 1567,
	2538, 2871, 14474, 23546, 2267, 2510, 2265, 2264, -1000, 14,
	2685, -1000, -1000, -1000, 61599, -1000, -1000, -1000, -1000, 2962,
	55687, 15230, -1000, -1000, -1000, -1000, 35642, 14474, -1000, 1511,
	4981, 2835, -1000, 20522, -1000, -1000, 2336, 2383, 2383, 2383,
	2383, 2383, 1658, -1000, -1000, -1000, 252, 1390, 252, -1000,
	1390, 20522, -1000, 20522, 20522, -1000, 20522, 20522, -1000, -1000,
	20522, 4631, 4081, 3981, -259, -1000, 2496, 1575, -1000, 19766,
	2118, -1000, -1000, -1000, -1000, -1000, 20522, 20522, 20522, 20522,
	-1000, -1000, -1000, -1000, -1000, 75621, -1000, -118, -118, -118,
	-118, -118, -118, -1000, -1000, -1000, -118, -118, -118, -118,
	-118, -118, -118, -118, -118, -118, -118, -118, -1000, 365,
	2538, -1000, 26570, 2962, 56425, 2464, 2464, -1000, 1190, -1000,
	-1000, -1000, -59, -72, -1000, -1000, -1000, -1000, -1000, 37910,
	-1000, -1000, -1000, 8124, -1000, 1552, 1552, 1552, 383, 1552,
	1552, 1552, 1552, 1552, -187, -188, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 139, 1552, 1552, 1552, 1552, 1552, 1552,
	33374, 1552, 1552, -382, 50521, 1168, 1022, -1000, -1000, -1000,
	78573, 78573, 78573, -1000, 78573, 78573, -1000, -1000, -1000, -1000,
	51259, -1000, -1000, 1738, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2538, -492, 1993, 61599, -1000, 2829, 1484, 40178,
	3029, -1000, 2730, -1000, 2718, 2716, 2262, -1000, -1000, 2433,
	2432, 2418, -1000, 2558, -1000, -1000, -1000, -1000, -1000, 2381,
	-1000, 2375, 2508, -1000, 2373, -428, 2618, 77835, 2879, 2538,
	1989, 2617, -1000, -1000, -1000, -1000, 2401, 2507, -1000, 11435,
	77835, 77835, 77835, 630, -265, 703, -1000, 68241, 362, 409,
	796, 2050, -402, 2865, 61599, 68241, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 74883, 74883, -1000, -1000, 19766, -1000, -1000,
	2885, -1000, 4981, 2356, -1000, -1000, 4981, 4981, 1451, 1135,
	-1000, 68241, 1354, 74145, 1098, 68241, 346, 244, -1000, 2988,
	2986, 336, 2983, -1000, 226, 68241, 229, 2261, 2260, 2259,
	1988, 1966, 1959, 1955, 1954, -1000, 61599, 61599, 2257, -1000,
	-1000, -1000, 1462, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1427, 5144, 1055, 1417, 1408, 1388, 1382, -1000, 167, 47569,
	1052, 1216, 1034, -1000, -1000, 2538, -1000, 44614, 51259, 51259,
	51259, 1053, 2715, 2714, 77835, 51259, 51259, 77835, 51259, 864,
	2145, 2823, 1552, 64, -1000, -1000, -1000, 73407, -1000, 72669,
	854, 51997, 51259, 77835, 61599, 43876, -1000, -1000, -1000, -1000,
	71931, 1941, 77835, 77835, 71193, 70455, 69717, 68979, -1000, -246,
	973, 19766, 973, 1998, 1998, 2256, 2255, 2254, 1552, 1552,
	211, 1998, 2253, 211, 1998, 39422, 2252, 989, 973, 973,
	973, 1998, 1998, 1998, 1998, 2251, 402, 1888, 2250, 1998,
	2219, 2196, 973, -1000, -222, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1998, 2538, -1000, 399,
	916, 1092, 809, -4, 1658, 77835, 1658, 2371, -1000, -1000,
	1777, 77835, -1000, 2327, 2327, 2327, 20522, 20522, 20522, 20522,
	20522, 20522, 20522, 20522, 20522, 63075, -1000, -1000, 1184, -21,
	77835, -1000, 10, -1000, -1000, -1000, 2944, -1000, 2505, -1000,
	-1000, -1000, 2336, -1000, 20522, 4981, -1000, -118, -118, -118,
	-118, -118, 2336, 2556, 2556, 2556, -1000, 2556, 2557, 76,
	-1000, -1000, -1000, 2556, 94, 2556, 93, -1000, 2336, 2336,
	2336, 1924, 3946, 3588, 3026, 2684, 1924, 20522, 20522, 20522,
	2538, -112, -1000, 1658, 19766, 2586, 2429, 1924, 1924, -1000,
	-1000, 2144, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2616, 2616, 26570, 2871, -1000, 22790, -1000, 823, -1000,
	-1000, 77835, 2497, -1000, 1552, 1253, 1552, 1552, 2940, 2464,
	-1000, -1000, 1352, -1000, -1000, -1000, -1000, 973, 973, 973,
	1552, 2819, 1552, 1998, 1998, 2249, 2247, 2246, 1552, 1552,
	211, 1998, 2245, 211, 1998, 39422, 2244, 989, 973, 973,
	973, 1998, 1998, 1998, 1998, 2243, 402, -1000, 1786, 2242,
	1998, 2128, 2089, 973, -1000, -235, 1998, 2538, -250, 2368,
	-1000, 2556, 2556, 2712, 1278, -1000, -1000, -1000, -1000, -1000,
	-1000, 2555, -1000, -1000, 20522, 2878, -1000, 2553, 1399, -1000,
	-1000, -1000, -1000, 681, 2241, -1000, -1000, 20522, -1000, -1000,
	2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538, 2538,
	2538, 2538, 2538, -79, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2240, -1000, 1940, -1000, 1921, -1000, -1000,
	-1000, 61599, -1000, -1000, 2877, -1000, 61599, 220, 65289, -1000,
	11435, 11435, 11435, -4, 354, -1000, 1722, -1000, -1000, -1000,
	2235, 2234, 2233, 2356, 414, 1717, 379, -1000, 2873, 2872,
	2232, 2231, 2230, 2229, 1912, -1000, -1000, 2584, 77835, 2503,
	-1000, 1658, 1654, 10, 61599, 244, -1000, -1000, -1000, 68241,
	244, -1000, -1000, 393, 68241, 68241, 2980, 68241, 428, 1205,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2362,
	2360, -1000, -1000, -1000, -1000, -1000, -1000, 1285, 1267, 307,
	306, -213, -1000, 437, 373, -1000, -1000, -1000, 51997, 993,
	11435, 11435, 78573, 1278, -1000, 2709, 1374, -1000, -1000, -1000,
	-1000, 77835, -1000, 51259, 2499, -430, -432, 1322, -451, -1000,
	-1000, -1000, -1000, 51997, 1552, 1390, 2818, 579, 296, 568,
	290, -1000, -1000, -1000, -1000, 993, 1236, 1090, -1000, 2708,
	51259, 1085, 552, 286, -1000, 1760, -267, 2499, -1000, 2499,
	-1000, 2499, -1000, 2499, -1000, -1000, -1000, 1658, -1000, -1000,
	-1000, -1000, -1000, -1000, 2227, 2226, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -174, -1000, 39422, 399, -1000, 1911,
	1909, 1880, 1875, 1751, -1000, 2614, 79311, -1000, 613, 2613,
	1984, 681, 2358, -1000, 77835, -1000, -1000, -1000, -1000, -1000,
	4981, 4981, 2355, 4981, 4981, 2056, 4981, 4981, 2009, -1000,
	34886, 2538, -1000, -25, -1000, 2942, 2936, -1000, -1000, 4981,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 536, 529, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20522, 20522, 20522, 20522, -1000, 1924, 1924, 1924, 20522, 2336,
	2220, 1658, 20522, 20522, -1000, -1000, 1376, -1000, 2906, 2848,
	-1000, 2421, 63075, 2336, 2453, 2352, 2336, 370, -1000, -1000,
	-1000, 62337, 56425, 2493, -1000, 2538, 2350, 2940, 26570, 19766,
	19766, 19766, 19766, 2924, -1000, -1000, -1000, -1000, 1390, 1552,
	34130, -1000, -1000, -1000, -1000, -1000, 2214, 2210, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -177, -1000, 39422, -1000, 237,
	50521, 2857, 2857, 78573, 78573, 77835, 1924, 2538, 77835, -1000,
	-1000, -1000, -1000, -1000, 1924, -1000, -1000, 2400, 2378, 2551,
	-1000, -1000, -402, 2917, -1000, 220, -1000, 2206, 777, 793,
	-1000, 772, 684, 672, 666, 662, -1000, -1000, -1000, -1000,
	2613, 803, 354, -1000, -57, 1854, 1453, 2804, 576, -1000,
	-1000, -1000, -1000, 302, 409, -1000, 735, 2205, 713, 2195,
	-1000, -1000, 405, -1000, -1000, 2788, 2346, -1000, -25, -1000,
	2876, 244, 2876, 335, 1205, 1205, 68241, 1205, -1000, -1000,
	-1000, -1000, -238, 1835, 20522, 2538, 2538, 657, 2347, -1000,
	-1000, 2143, -1000, -1000, 2581, 1052, 78573, 2329, -1000, 77835,
	-1000, -1000, -1000, -1000, -1000, -1000, 2844, 2843, -1000, -1000,
	993, 1390, -1000, 1390, -1000, -1000, -1000, -1000, -1000, 51259,
	77835, 51259, 1077, 51259, -1000, -1000, 2538, 1134, -1000, -1000,
	-1000, -1000, 2343, -1000, -1000, -1000, -1000, -1000, -1000, 448,
	2194, 273, -1000, -1000, 1157, 617, -1000, -1000, -1000, -290,
	-1000, -1000, 20522, 20522, 20522, -1000, 37154, 2781, 2763, -120,
	19766, 19766, -1000, -1000, -1000, -1000, 1924, 1924, 1924, 1924,
	-1000, -1000, -1000, 277, -1000, -1000, 1924, 1924, 2940, 2935,
	-1000, -1000, 2707, 2906, 2545, -1000, -1000, 2453, 370, -1000,
	823, -1000, 13718, -1000, 2924, -1000, 1658, 1658, 1658, 1658,
	-1000, -1000, 1390, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2343, 237, -1000, 39422, 1552, 2193, 1552, 1552, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2341, -495, 20522, 2334, -1000,
	-1000, -1000, 50521, 364, -1000, 810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2787, 2786, 814, 916, -1000, 2191, 2190,
	-1000, 683, 1858, 1249, -125, -1000, -1000, -1000, -1000, -1000,
	-1000, 693, 2127, -1000, 377, -1000, -1000, 368, -1000, -1000,
	2934, -402, 20522, -1000, 2781, -1000, 68241, 2876, -1000, -1000,
	-1000, -1000, 1205, -1000, 2538, 2933, -1000, 1924, 77835, 20522,
	2538, 1519, -1000, -1000, 416, 416, 2550, 78573, 2548, -1000,
	1374, 2590, 20522, -1000, -1000, 1328, 1323, -1000, -1000, 1066,
	51259, -1000, 1374, 61599, 39422, -1000, -1000, -1000, -1000, 916,
	1361, 627, 1924, 1924, 1924, 2315, -1000, 6385, 353, -1000,
	-1000, 2746, 2932, -1000, 77835, -1000, 1658, 2475, -1000, 1658,
	-1000, -1000, -1000, -1000, 2336, 326, -334, -1000, -1000, 1447,
	19766, 2474, 3028, -1000, -1000, -1000, -1000, 370, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1831, -1000, 2189, 2187, 977,
	-1000, -1000, -1000, 1924, -1000, 2332, -1000, 364, 815, 82490,
	-1000, -1000, -1000, -1000, 1751, -1000, -1000, -1000, -1000, 1808,
	-1000, -1000, 1830, 678, 337, -1000, 2875, -1000, -1000, 1793,
	4981, 1057, -322, -1000, -1000, -1000, 1374, -405, -1000, 2327,
	1924, 77835, 1790, 50521, 2581, 50521, -1000, 947, 4981, 1552,
	1390, 51259, -1000, 2329, 31, -1000, 82490, 1751, 1186, 619,
	1984, -1000, -1000, -1000, 2336, 37154, 413, -457, -23, 2186,
	2747, 2756, 2750, -1000, 2185, 2473, -1000, 2874, 19766, -1000,
	2677, -262, -351, 2336, 427, 427, 2472, 26570, 2336, -1000,
	-1000, -1000, 61599, -495, 237, -323, -1000, 837, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12962, 19766, 134, 38666, 2125, 2121, 82490, 2291,
	82490, 19766, 2115, 2095, 2741, 20522, 82326, 441, -358, -1000,
	-360, -1000, -1000, -1000, 2184, -1000, 2545, 1789, 381, 2329,
	371, -1000, -1000, 2327, -1000, 2325, 2543, 2322, 953, 1390,
	-1000, -1000, -1000, 593, -1000, -1000, 432, 681, -1000, 1984,
	-1000, 2871, -1000, -1000, 2183, -169, -1000, 2538, -31, 2930,
	2928, -1000, 2927, 2926, -1000, 77835, 2538, -1000, -1000, 2675,
	-1000, -1000, -1000, 388, -1000, 1401, 813, 1392, -1000, 681,
	-1000, 2455, -1000, 2541, -1000, -1000, 237, -1000, 341, -323,
	-1000, 2094, 2087, -1000, 2066, 1695, -1000, 19766, 2103, 574,
	559, 6461, -1000, -1000, -1000, -1000, -1000, -1000, -501, -1000,
	259, -502, 1065, -1000, -1000, 2084, -1000, 2975, 4981, -1000,
	-503, -1000, -1000, -1000, -1000, 2817, 1480, 64551, -1000, 2538,
	657, -1000, 237, 50521, 237, 2538, -1000, -1000, -1000, -1000,
	-290, -1000, 1361, 63075, 646, 2182, 37154, 2538, 2181, 2177,
	2176, 2175, -1000, -1000, -326, 1716, -1000, -1000, -1000, -1000,
	-1000, -311, 77835, 327, 1023, 1008, -1000, -1000, -1000, -1000,
	1620, 1699, 82490, -1000, 2055, 82490, 2916, 2915, 2893, 10,
	37910, 82258, 82094, 82490, 82490, 19766, 81790, 82490, 1731, -1000,
	81733, 82490, -1000, 26570, -1000, -1000, -1000, -1000, 3032, 2356,
	20522, 2538, -1000, 2319, -1000, 21278, 82490, -1000, 1361, -1000,
	1949, 1902, 2608, 2607, 681, -1000, 2315, 37154, -1000, -1000,
	-1000, -1000, -336, 388, -1000, 2317, -1000, 325, 322, 289,
	1692, 82490, -1000, -504, 82490, -505, 844, 364, 1074, 1316,
	-1000, 545, -1000, 2074, -506, -507, -508, 1056, 19766, -509,
	2068, -1000, -1000, 2455, 68241, 1924, 20522, 237, 1924, 2336,
	-1000, -1000, 2606, 681, -1000, 2605, 681, -89, -90, 2603,
	-1000, 2315, -352, -1000, 2599, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 81580, 62337, -1000, -510, 81526, -512,
	7515, -1000, -1000, -1000, 11430, -1000, -1000, -1000, -1000, 557,
	-1000, -1000, 2836, -1000, -1000, 11051, 10898, 2054, 82490, 1995,
	10617, 2442, -1000, -1000, 2356, -241, 1924, -1000, -1000, -1000,
	-1000, 248, 2598, -389, 2597, 247, 246, -1000, -1000, -91,
	-1000, -1000, 2595, 2594, 2974, -1000, -513, -1000, -1000, 10464,
	1691, 82490, 1051, 82490, 1572, -1000, 19766, -1000, 1074, -1000,
	20522, 2053, 537, 19766, -514, 467, 452, 2047, -1000, 1781,
	-241, 242, -391, 2592, 2591, -1000, -1000, -1000, 3027, -1000,
	3015, 1185, 1185, 10313, 1678, -1000, -1000, -515, 1050, 82490,
	-1000, 1863, -1000, 4981, -1000, 2045, 1982, 10081, -1000, -1000,
	-1000, -1000, -1000, 240, -393, -1000, -1000, -1000, 1005, 1884,
	-1000, -1000, -1000, 9254, -1000, -516, 82490, -1000, 455, 417,
	-1000, -1000, -1000, -1000, -1000, 1046, 8760, -519, 2034, 1890,
	-1000, 1041, 82490, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3517, 3515, 3513, 37, 3510, 285, 310, 317, 60,
	2811, 3509, 312, 3508, 315, 3507, 26, 18, 11, 31,
	3506, 3170, 3152, 3148, 3145, 29, 3505, 8, 3502, 3500,
	3143, 3494, 3493, 3138, 3492, 3490, 3487, 3486, 3485, 3481,
	3480, 3478, 3477, 3135, 3131, 3127, 3123, 3471, 3470, 3468,
	3121, 3119, 3117, 3467, 79, 3465, 28, 47, 39, 3464,
	6, 3460, 201, 229, 3459, 4, 3452, 3451, 13, 205,
	3445, 3444, 63, 3099, 3442, 3441, 3438, 3436, 3433, 3432,
	147, 3431, 3430, 3096, 3429, 3094, 3428, 3092, 3089, 3087,
	3084, 3082, 207, 3427, 3078, 3061, 3059, 3426, 2742, 233,
	464, 231, 3425, 134, 135, 2002, 3424, 232, 3422, 216,
	3421, 3420, 3419, 463, 230, 3418, 168, 91, 423, 161,
	171, 166, 214, 3417, 61, 167, 305, 3416, 7, 3415,
	118, 3411, 221, 3410, 234, 2803, 196, 236, 194, 3406,
	3405, 172, 3404, 3390, 3388, 218, 3387, 3386, 237, 4616,
	3385, 3384, 187, 3383, 144, 3382, 173, 3381, 3380, 3378,
	3376, 244, 114, 93, 169, 136, 3375, 164, 3374, 3373,
	3372, 3370, 3366, 3363, 81, 53, 65, 3362, 151, 197,
	3361, 58, 36, 48, 3360, 3359, 55, 3356, 3355, 132,
	3354, 3353, 138, 3351, 192, 69, 3350, 3349, 3348, 3347,
	116, 89, 3345, 71, 3344, 191, 3342, 3340, 3339, 3338,
	3337, 104, 3336, 90, 3322, 193, 275, 226, 3321, 3320,
	56, 51, 3318, 64, 20, 16, 108, 41, 107, 77,
	182, 176, 137, 157, 40, 153, 59, 152, 393, 80,
	3317, 235, 179, 213, 121, 35, 3315, 3313, 208, 3312,
	117, 210, 190, 186, 209, 3311, 3310, 3309, 243, 3308,
	180, 524, 3307, 131, 189, 110, 2789, 240, 141, 3305,
	3304, 3303, 3302, 123, 57, 139, 3301, 43, 253, 238,
	246, 49, 87, 3300, 1801, 5600, 6064, 8736, 33, 62,
	115, 7251, 146, 212, 3299, 67, 3298, 3296, 3295, 4873,
	174, 50, 85, 159, 3291, 163, 42, 92, 3289, 3288,
	3287, 3286, 3285, 3284, 170, 133, 3283, 3282, 68, 3280,
	3277, 34, 25, 15, 14, 3275, 162, 225, 224, 223,
	3273, 202, 52, 3272, 3260, 185, 150, 3259, 3258, 3257,
	3255, 184, 124, 206, 3254, 203, 125, 130, 3253, 126,
	3252, 3251, 112, 6850, 142, 3250, 3249, 143, 129, 145,
	195, 3247, 3245, 3244, 72, 3243, 3242, 3, 3241, 111,
	46, 54, 113, 22, 165, 3240, 3239, 204, 3237, 3235,
	149, 177, 3227, 158, 160, 70, 3225, 73, 140, 3224,
	175, 2, 5, 10, 3220, 3218, 3215, 3210, 3208, 3207,
	3203, 3202, 128, 3201, 3193, 106, 100, 86, 3192, 3190,
	3189, 3188, 3187, 199, 178, 75, 222, 94, 17, 3186,
	3185, 9, 3184, 181, 3183, 101, 3179, 3177, 127, 3173,
	3167, 74, 99, 44, 103, 3154, 3150, 120, 156, 3141,
	102, 3133, 3129, 228, 402, 3125, 394, 3115, 200, 198,
	78, 96, 3110, 76, 109, 3102, 98, 3080, 21, 66,
	3076, 24, 23, 431, 3063, 0, 4287, 211, 3057, 154,
	3053, 3051, 220, 3049,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 243, 243, 243, 243, 240, 240, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 467, 467, 143, 143, 141, 141,
	142, 142, 237, 237, 239, 239, 19, 19, 19, 248,
	248, 253, 253, 253, 256, 256, 256, 256, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 455, 455, 455, 456,
	456, 456, 456, 456, 281, 281, 281, 281, 419, 419,
	435, 435, 435, 436, 436, 434, 434, 434, 434, 434,
	438, 438, 439, 439, 437, 437, 437, 437, 441, 441,
	442, 442, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 422, 422, 422, 50,
	50, 50, 50, 50, 54, 54, 51, 51, 51, 51,
	51, 51, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 444, 444, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 446, 446, 447, 447,
	448, 448, 448, 448, 449, 449, 449, 449, 449, 450,
	450, 450, 450, 450, 450, 450, 451, 451, 452, 452,
	3, 2, 400, 400, 401, 401, 402, 402, 402, 402,
	403, 403, 404, 404, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 31, 31, 31, 31, 31, 31,
	280, 280, 276, 276, 276, 278, 278, 279, 279, 279,
	421, 421, 421, 415, 415, 415, 417, 417, 416, 416,
	416, 418, 418, 423, 423, 423, 423, 423, 426, 426,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	427, 427, 427, 424, 424, 162, 162, 428, 428, 433,
	433, 429, 429, 430, 430, 432, 432, 432, 431, 431,
	431, 431, 318, 318, 181, 181, 70, 70, 71, 71,
	71, 214, 214, 214, 20, 20, 20, 20, 20, 20,
	26, 26, 28, 28, 28, 28, 57, 57, 58, 29,
	29, 29, 29, 59, 59, 60, 32, 32, 32, 32,
	32, 32, 67, 67, 67, 66, 66, 65, 65, 65,
	65, 65, 65, 34, 35, 36, 468, 468, 468, 61,
	61, 37, 37, 37, 40, 40, 40, 41, 41, 41,
	38, 39, 42, 30, 30, 30, 30, 68, 68, 63,
	63, 62, 62, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 33, 33, 33, 33, 33,
	33, 25, 399, 399, 399, 56, 56, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	78, 78, 355, 356, 356, 356, 356, 356, 356, 342,
	342, 343, 343, 343, 343, 343, 343, 332, 332, 332,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 306, 306, 306,
	306, 310, 310, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	313, 313, 313, 313, 313, 341, 341, 315, 315, 314,
	314, 314, 335, 335, 336, 336, 336, 333, 333, 333,
	334, 334, 319, 319, 319, 319, 319, 319, 320, 337,
	321, 321, 322, 322, 322, 322, 322, 322, 323, 323,
	324, 324, 324, 326, 326, 331, 331, 330, 330, 330,
	330, 330, 330, 327, 327, 327, 327, 327, 327, 328,
	328, 328, 329, 340, 340, 340, 340, 340, 316, 46,
	46, 52, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 377, 377,
	382, 382, 270, 270, 271, 271, 53, 53, 53, 53,
	53, 168, 168, 55, 55, 55, 378, 378, 380, 380,
	380, 380, 380, 380, 380, 380, 379, 379, 381, 381,
	344, 344, 373, 373, 372, 372, 371, 371, 371, 371,
	371, 371, 371, 353, 353, 354, 354, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 348, 348, 348, 347,
	347, 349, 349, 352, 352, 352, 370, 370, 369, 369,
	345, 345, 345, 383, 383, 383, 383, 383, 102, 102,
	346, 346, 346, 384, 350, 350, 351, 351, 351, 392,
	393, 391, 391, 391, 391, 391, 169, 169, 169, 375,
	375, 375, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	103, 103, 103, 104, 104, 325, 325, 357, 357, 357,
	357, 357, 463, 463, 463, 358, 358, 358, 358, 358,
	358, 454, 454, 453, 453, 453, 359, 359, 360, 361,
	361, 361, 362, 362, 364, 364, 277, 277, 365, 365,
	366, 366, 363, 363, 363, 367, 367, 396, 396, 396,
	395, 395, 73, 73, 73, 73, 75, 75, 74, 74,
	74, 82, 82, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 72, 72, 290, 290,
	77, 213, 213, 213, 275, 275, 389, 389, 390, 390,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 386, 386, 385, 385, 387, 387, 76, 76, 76,
	76, 163, 163, 22, 22, 79, 79, 420, 420, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 394,
	394, 394, 24, 24, 83, 84, 84, 84, 289, 289,
	289, 289, 289, 87, 87, 87, 87, 241, 241, 242,
	242, 88, 88, 88, 88, 89, 89, 89, 89, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 123, 262, 262, 261, 261, 260, 260, 260,
	263, 263, 263, 263, 304, 304, 304, 86, 86, 86,
	98, 98, 93, 93, 96, 96, 96, 96, 99, 99,
	100, 100, 101, 101, 94, 95, 43, 44, 44, 44,
	44, 45, 91, 91, 91, 92, 92, 92, 92, 113,
	113, 114, 114, 470, 470, 470, 90, 471, 105, 106,
	106, 108, 108, 108, 109, 109, 109, 110, 110, 110,
	267, 267, 267, 267, 267, 267, 267, 107, 107, 107,
	117, 117, 121, 121, 121, 121, 120, 120, 120, 120,
	216, 216, 221, 296, 296, 197, 197, 217, 217, 222,
	222, 222, 223, 223, 224, 224, 224, 224, 224, 219,
	219, 218, 218, 220, 184, 184, 184, 184, 182, 182,
	182, 182, 182, 182, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 180,
	180, 294, 294, 294, 294, 293, 293, 293, 125, 125,
	130, 130, 132, 132, 132, 132, 132, 132, 132, 132,
	135, 199, 199, 472, 472, 153, 153, 154, 154, 154,
	154, 155, 155, 155, 155, 155, 157, 157, 157, 158,
	158, 158, 158, 158, 158, 159, 160, 160, 156, 156,
	156, 178, 178, 235, 235, 236, 236, 234, 234, 238,
	238, 131, 131, 133, 133, 133, 133, 138, 138, 139,
	139, 140, 140, 301, 301, 301, 144, 144, 144, 146,
	145, 145, 145, 145, 145, 145, 147, 147, 457, 458,
	458, 459, 459, 459, 459, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 461, 461, 462, 462, 148,
	148, 150, 151, 151, 149, 149, 149, 149, 149, 149,
	161, 161, 152, 164, 164, 164, 164, 165, 165, 122,
	122, 122, 122, 122, 122, 122, 122, 259, 259, 167,
	167, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 193, 193, 193, 193, 193, 193, 170, 170, 170,
	170, 170, 170, 170, 116, 116, 194, 194, 194, 137,
	136, 136, 119, 119, 118, 118, 195, 195, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 187, 187, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 192, 192, 192, 192, 192, 469,
	469, 189, 189, 188, 188, 188, 188, 188, 188, 112,
	112, 112, 112, 112, 302, 302, 302, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 69,
	69, 206, 206, 115, 115, 204, 204, 205, 207, 207,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 177, 177,
	177, 208, 208, 196, 196, 124, 209, 209, 210, 211,
	211, 212, 212, 215, 228, 228, 228, 229, 229, 229,
	229, 179, 179, 179, 230, 230, 230, 230, 172, 172,
	171, 171, 171, 173, 173, 173, 173, 174, 174, 473,
	473, 233, 233, 232, 232, 231, 231, 231, 231, 231,
	231, 231, 244, 244, 198, 198, 201, 201, 200, 202,
	245, 245, 250, 250, 250, 250, 247, 247, 251, 251,
	251, 251, 254, 254, 255, 255, 255, 252, 252, 252,
	252, 249, 249, 249, 298, 298, 298, 298, 257, 257,
	266, 266, 264, 264, 265, 265, 258, 258, 317, 317,
	317, 272, 272, 273, 273, 274, 274, 268, 268, 268,
	268, 269, 269, 295, 295, 291, 291, 297, 297, 292,
	292, 299, 299, 300, 300, 300, 300, 397, 397, 398,
	398, 398, 338, 338, 409, 409, 339, 339, 410, 410,
	411, 411, 406, 406, 407, 407, 408, 408, 408, 47,
	412, 412, 413, 413, 414, 414, 414, 414, 48, 49,
	49, 49, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 288, 288, 288, 288, 288,
	288, 285, 285, 285, 285, 285, 285, 286, 286, 286,
	465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 9, 8, 10, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 0, 2, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 12, 12, 13, 5, 5,
	16, 12, 9, 4, 15, 1, 6, 9, 8, 0,
	3, 3, 6, 3, 0, 3, 4, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	10, 9, 5, 7, 0, 3, 9, 9, 9, 10,
	6, 8, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 3, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 2, 4, 5, 4, 6, 7,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 0, 1,
	4, 3, 3, 3, 6, 6, 5, 5, 5, 5,
	4, 3, 5, 1, 3, 1, 3, 3, 5, 0,
	5, 0, 3, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 8, 4, 7, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	5, 7, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 2, 5, 0, 1, 2, 1,
	3, 5, 7, 8, 7, 9, 10, 7, 9, 10,
	2, 2, 2, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 4, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 5, 5, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 3, 6, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 3, 3, 2,
	3, 4, 2, 2, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 3, 2, 2, 4, 3, 1,
	0, 1, 3, 3, 3, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 1, 0, 1, 1, 1, 1,
	2, 2, 2, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 5,
	5, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 2, 2, 3, 3, 0, 3,
	0, 3, 1, 1, 0, 1, 5, 4, 2, 3,
	3, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 3, 5, 5,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 5, 3,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 2, 1, 11, 12, 12, 13, 13, 0, 1,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	2, 3, 3, 3, 3, 4, 5, 3, 3, 4,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 6, 1,
	4, 5, 5, 6, 0, 1, 0, 3, 1, 1,
	0, 2, 0, 8, 9, 0, 2, 0, 1, 2,
	0, 2, 1, 1, 1, 1, 4, 3, 7, 5,
	5, 1, 3, 5, 4, 9, 11, 9, 2, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 3, 3,
	6, 5, 4, 4, 5, 5, 8, 4, 5, 7,
	2, 2, 2, 2, 3, 4, 3, 4, 1, 3,
	3, 3, 3, 4, 5, 5, 3, 7, 6, 5,
	2, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 4, 4, 3, 5, 3, 1, 1, 1, 1,
	6, 0, 1, 2, 0, 1, 0, 1, 1, 2,
	5, 3, 4, 4, 4, 4, 4, 4, 3, 7,
	6, 8, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 3, 1, 3, 8, 8, 8, 11, 12,
	15, 0, 3, 3, 3, 3, 5, 3, 5, 6,
	6, 4, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 8, 5, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 4, 1, 3, 1,
	1, 2, 2, 4, 4, 3, 3, 3, 3, 3,
	4, 3, 5, 5, 5, 4, 4, 4, 4, 3,
	2, 2, 6, 2, 4, 3, 3, 4, 4, 5,
	8, 6, 3, 4, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 4, 2, 4,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 4, 1,
	0, 1, 2, 1, 2, 4, 4, 5, 0, 1,
	0, 3, 0, 2, 4, 4, 2, 3, 4, 4,
	5, 3, 4, 5, 4, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	0, 2, 2, 2, 2, 2, 2, 0, 1, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 2, 2, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 5, 1, 2, 3, 1, 1,
	2, 2, 4, 0, 1, 2, 6, 1, 3, 2,
	4, 1, 1, 1, 1, 1, 5, 5, 8, 5,
	5, 8, 5, 5, 8, 2, 2, 2, 3, 4,
	4, 0, 1, 3, 1, 0, 3, 1, 3, 1,
	3, 4, 6, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 2, 2, 2, 12, 1,
	3, 3, 3, 6, 7, 2, 3, 3, 4, 4,
	5, 5, 8, 8, 3, 3, 4, 3, 4, 1,
	3, 3, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 4, 6, 6, 6, 4, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	4, 4, 4, 2, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 6, 3, 4, 2, 2, 2, 0,
	2, 1, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 1, 0, 2, 4, 4, 1, 4,
	1, 3, 4, 1, 4, 3, 6, 2, 3, 1,
	1, 0, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 0, 5, 1, 3, 2, 3, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 4,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 0, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 2, 0, 4, 4, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 191,
	-455, -75, -74, -76, -77, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -96, 450, 451, -470, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -11, 200, -12, -13, -7,
	764, -211, 20, -105, -471, -211, -10, -9, -4, 653,
	-105, -111, 14, 15, 13, 558, -105, -355, 29, -3,
	118, 77, -8, 11, -269, -280, 98, 549, 199, -278,
	331, 333, 209, -266, -268, -276, 257, 267, 50, 211,
	210, 268, 200, 331, -266, 201, 203, 549, 199, 240,
	239, 331, 333, 272, 647, 200, -149, -299, -285, -287,
	-286, 349, 83, -284, 578, 582, 272, 585, 586, 591,
	339, 91, 53, 369, 572, 361, 370, 221, 527, 573,
	332, 338, 341, 362, 736, 371, 26, 373, 374, 570,
	571, 55, 203, 560, 561, 564, 214, 751, 354, 222,
	650, 268, 759, 754, 756, 343, 757, 517, 609, 447,
	466, 458, 485, 651, 707, 280, 302, 455, 386, 534,
	610, 346, 295, 367, 708, 322, 290, 523, 529, 305,
	450, 611, 612, 613, 543, 248, 278, 709, 456, 299,
	301, 300, 262, 577, 306, 42, 227, 482, 660, 648,
	257, 710, 616, 703, 615, 251, 284, 614, 329, 41,
	33, 617, 250, 546, 109, 277, 711, 377, 531, 618,
	503, 378, 246, 273, 275, 291, 713, 655, 350, 233,
	530, 432, 478, 360, 128, 255, 317, 379, 714, 504,
	508, 715, 535, 336, 316, 621, 716, 717, 380, 659,
	285, 718, 202, 342, 622, 281, 719, 258, 445, 537,
	347, 502, 212, 652, 223, 57, 237, 538, 506, 624,
	512, 515, 433, 376, 434, 720, 721, 722, 723, 358,
	356, 626, 357, 359, 628, 269, 297, 656, 625, 658,
	62, 197, 662, 510, 509, 511, 298, 676, 533, 490,
	488, 724, 725, 351, 218, 726, 727, 489, 23, 728,
	729, 541, 321, 353, 730, 731, 732, 627, 294, 632,
	608, 733, 734, 532, 505, 507, 256, 127, 647, 279,
	735, 355, 528, 364, 663, 654, 340, 292, 633, 737,
	382, 293, 236, 229, 542, 427, 428, 443, 444, 372,
	738, 431, 739, 740, 741, 742, 334, 333, 451, 365,
	634, 452, 274, 303, 657, 743, 635, 636, 744, 745,
	266, 249, 545, 536, 61, 519, 514, 368, 383, 457,
	429, 440, 435, 436, 438, 439, 442, 441, 437, 446,
	522, 448, 276, 243, 637, 638, 639, 430, 640, 12,
	296, 348, 641, 642, 643, 526, 366, 304, 267, 270,
	493, 238, 746, 747, 480, 481, 449, 241, 231, 122,
	544, 387, 327, 702, 331, 384, 289, 60, 244, 54,
	748, 749, 271, 245, 661, 288, 453, 345, 664, 200,
	83, -289, -284, -287, -288, -285, -286, 349, 232, 59,
	96, 64, 63, 83, -284, 647, 144, 486, 534, 191,
	524, 525, 531, -348, 532, 239, 427, 368, 242, -304,
	200, -262, 241, 523, 336, 355, 582, 245, 246, 273,
	428, 434, 201, 202, 38, 536, 535, 527, -299, -98,
	453, -98, -98, 204, 453, -113, 233, 195, -149, 232,
	-68, 83, 309, -68, 35, 83, -161, -291, -299, 83,
	-284, 42, 83, 452, 526, 526, 85, 654, 248, 27,
	-444, -418, 364, -443, -416, 192, 191, 15, 193, 272,
	369, 370, 335, 201, 13, 36, 736, 219, 371, 372,
	11, 224, 373, 374, 240, 14, 375, -445, -421, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 82, 83,
	-284, -264, 206, 372, 427, 449, 427, 427, -271, -270,
	385, 512, 144, -128, 706, -126, -134, -301, -299, -285,
	-286, -199, -472, 253, 549, -258, 331, -278, 205, -130,
	-132, -133, -153, -136, 704, -465, -131, -457, -149, -137,
	83, 607, -109, 10, -108, -110, 9, 8, -109, -229,
	22, 21, -267, -106, -229, -466, 79, -466, -128, -120,
	135, -122, -299, -166, 101, -176, 34, 30, -175, 349,
	232, -167, -203, -285, -202, -137, 144, -303, 133, 134,
	141, 102, 187, -187, -185, -186, -188, -190, -191, 227,
	480, 481, 82, 84, 92, 85, 86, 87, 88, 93,
	94, 95, -291, -287, -286, -283, 578, 582, 585, 586,
	591, -200, -465, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 67, 68, 576, 199, 559,
	560, 483, 561, 13, 562, 563, 564, 649, 221, 568,
	104, 56, 326, 550, 551, 555, -192, 552, 556, 557,
	570, 571, 572, 573, 206, 549, 139, 558, 595, 596,
	597, 598, 599, 600, 601, 602, 604, 605, 603, 579,
	580, 581, 583, 584, 587, 588, 589, 590, 592, 593,
	594, 678, 196, 192, 195, 100, 29, 31, 679, 254,
	103, 464, 498, 567, 21, 25, 215, 198, 486, 213,
	143, 208, 216, 311, 313, 191, 71, 680, 547, 312,
	524, 674, 671, 673, 672, 477, 475, 310, 681, 15,
	32, 225, 261, 682, 473, 193, 252, 107, 108, 683,
	47, 46, 8, 314, 226, 320, 474, 684, 685, 24,
	74, 217, 16, 211, 242, 758, 686, 335, 18, 126,
	19, 687, 668, 670, 669, 205, 120, 201, 750, 69,
	259, 688, 462, 467, 468, 469, 470, 471, 463, 97,
	689, 690, 117, 325, 65, 607, 38, 247, 704, 565,
	324, 691, 44, 43, 497, 501, 496, 323, 513, 118,
	22, 553, 554, 36, 692, 693, 235, 500, 461, 495,
	705, 694, 666, 264, 72, 385, 476, 762, 39, 75,
	230, 381, 352, 48, 98, 20, 260, 70, 40, 574,
	123, 763, 479, 207, 239, 695, 539, 263, 696, 124,
	472, 706, 219, 119, 454, 194, 363, 308, 220, 330,
	337, 697, 253, 125, 525, 665, 698, 569, 35, 224,
	307, 460, 209, 699, 265, 319, 309, 318, 700, 701,
	344, 49, 760, 677, 200, 45, 106, 499, 459, 494,
	204, 566, 240, 315, 9, 50, 37, 520, 14, 375,
	73, 76, 487, 484, 492, 491, 210, 761, 17, 328,
	575, 653, 540, 99, 675, 521, 548, -105, -105, -105,
	-247, 449, -254, -251, 535, 536, -252, -255, -249, -203,
	512, 733, 734, 534, 486, 533, -291, -299, -285, 349,
	232, 144, 579, 580, 581, 104, 483, 559, 595, 550,
	552, 547, 551, 549, 34, 596, 30, 95, 597, 576,
	206, 13, 187, 583, 584, 598, 599, 600, 67, 553,
	554, 649, 139, 101, 601, 602, 93, 604, 605, 326,
	558, 68, 603, 199, 589, 588, 587, 590, 562, 563,
	94, 555, 556, 557, 56, 593, 592, 594, -2, -6,
	-465, -149, -356, -343, -346, -291, -285, -287, -288, 228,
	-286, 216, -384, 83, -284, 213, -211, -105, 201, 203,
	558, -265, 206, -265, 240, 239, 272, -279, 265, -265,
	-265, 737, 200, -278, 110, 110, -79, -149, -420, -415,
	-421, 200, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, 83, -289, -149, 188, -84, -149, -141, 16, 16,
	76, 76, 83, -289, 83, 433, 376, 35, -263, 118,
	17, 549, 199, 200, 239, 240, 203, 272, -263, -350,
	16, 120, 243, 243, 243, 243, 243, 244, 243, -261,
	526, 528, 529, 530, -260, 16, 120, 17, -123, 118,
	24, -465, -229, -229, -260, 243, 136, -100, 100, -100,
	83, 452, 204, -114, 234, -113, -114, -178, -156, 29,
	6, 7, 110, 35, 35, 82, 60, 35, -63, -62,
	-64, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 35, -399, 77, 188, -338, 512, 83,
	-412, -413, -149, 85, 85, 75, 355, 75, 78, 204,
	78, 75, -446, 365, 77, -446, 333, 365, 366, 267,
	331, 203, -446, -446, 333, -446, -446, -446, 352, -446,
	-446, 526, -446, -446, -446, 367, 368, -446, 524, 203,
	-446, -446, -446, -446, -446, 80, 27, -444, -418, 364,
	30, 429, 432, 539, 653, -55, 445, 446, -168, 27,
	-376, 144, 377, 378, 379, 380, 376, 355, 381, 382,
	383, 243, 384, 200, 526, 376, -6, -126, 78, -233,
	-465, 78, -200, -465, 83, -331, -330, -327, -328, -329,
	-326, 34, 200, -264, 272, -144, -146, -145, -147, 65,
	69, 71, 66, 67, 68, 527, 72, -274, 29, -136,
	-465, -125, -9, -135, -130, -465, -154, 123, -164, -274,
	-155, 73, 205, 74, 29, -156, -157, -158, -159, -160,
	6, 7, 55, -465, -465, -7, -8, 27, 28, -14,
	-7, -12, -14, 27, 28, 27, 28, -7, -230, 24,
	36, -179, 85, 88, -203, -212, -215, -122, -299, 59,
	-117, 27, 28, 66, 58, 64, 63, -226, 90, 16,
	-294, 100, 98, 99, 117, -293, 29, 83, 82, -289,
	188, -122, -170, 120, 101, 118, 119, 103, 130, 129,
	140, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	143, 110, 111, 112, 113, 114, 115, 116, -259, -465,
	-137, -465, 188, -465, 188, 189, 190, 188, -176, -176,
	-176, -176, -176, -176, -176, 82, 82, 82, -465, 188,
	188, 188, -465, -465, -465, -465, -465, -195, -122, 653,
	-465, 200, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -206, -122, -465,
	-465, -469, -465, -469, -469, -189, -469, -465, -189, -189,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -189, -189, -189, -465, -258, -258, 16, -141, -142,
	-149, -152, -299, 78, -248, -253, 537, 539, 449, -252,
	-252, -298, -291, 82, 34, 144, -354, 110, 121, 35,
	188, -211, 79, 78, -306, -310, -312, -311, -313, -308,
	-309, -69, 490, 488, 484, 483, 486, 489, 144, 487,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 35, 227, 480, 481, 482, 664, 504, 505, 506,
	507, 508, 509, 510, 511, 458, 485, 651, 459, 460,
	461, 462, 463, 464, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, -306, -306, -306,
	-306, -306, -290, -384, 83, -289, 77, -229, -267, -265,
	-265, -280, 209, -278, 83, 101, 83, -148, -291, -299,
	-161, -265, 266, -424, -423, -415, -418, 677, -265, -279,
	-415, 271, 269, 270, 78, 204, 78, 204, 80, -264,
	-291, -143, -149, 83, 83, -148, -161, -417, -415, -418,
	-162, -291, -299, -300, -299, -282, -287, -288, 678, 196,
	27, 192, 195, 100, 29, 31, 679, 254, 103, 464,
	144, 579, 580, 581, 498, 567, 21, 25, 215, 104,
	198, 483, 486, 213, 143, 208, 216, 311, 313, 559,
	595, 191, 71, 680, 550, 552, 547, 551, 312, 549,
	524, 674, 671, 673, 672, 477, 475, 310, 34, 681,
	15, 596, 32, 225, 261, 28, 682, 137, 473, 193,
	606, 252, 107, 108, 683, 47, 46, 8, 30, 314,
	226, 95, 320, 597, 474, 684, 685, 24, 74, 217,
	16, 211, 242, 758, 686, 335, 18, 576, 126, 19,
	687, 668, 670, 669, 206, 205, 120, 201, 750, 69,
	259, 13, 688, 462, 467, 468, 469, 470, 471, 463,
	187, 97, 689, 690, 117, 325, 65, 583, 584, 607,
	51, 38, 247, 598, 599, 704, 600, 565, 324, 691,
	44, 43, 497, 501, 496, 323, 513, 67, 118, 22,
	553, 554, 36, 692, 693, 649, 235, 500, 461, 495,
	705, 694, 666, 139, 264, 72, 101, 385, 601, 602,
	93, 476, 762, 39, 75, 230, 381, 352, 48, 98,
	20, 260, 70, 40, 574, 123, 763, 604, 479, 207,
	239, 695, 539, 263, 696, 124, 605, 472, 706, 219,
	119, 454, 194, 326, 558, 363, 308, 220, 330, 337,
	68, 697, 253, 125, 603, 199, 525, 665, 11, 698,
	569, 35, 224, 307, 460, 209, 699, 265, 319, 309,
	318, 700, 58, 701, 344, 49, 589, 588, 587, 590,
	760, 66, 562, 563, 677, 200, 45, 106, 499, 459,
	494, 204, 566, 240, 94, 315, 9, 50, 37, 520,
	14, 375, 73, 76, 555, 556, 557, 56, 487, 484,
	492, 593, 491, 592, 594, 210, 761, 105, 17, 328,
	575, 653, 540, 99, 675, 521, 14, 193, 78, 82,
	-242, 83, -289, 82, -242, -241, -242, -241, 243, -263,
	82, -303, -122, -265, -265, -149, -149, -149, -149, -149,
	-149, -263, -263, -263, -263, -260, 16, -260, -263, -299,
	-299, -122, -176, -415, 551, 135, -263, -299, -101, -99,
	218, -99, -101, 83, 83, 452, -92, -4, -18, -16,
	-17, -114, -9, 39, 29, 29, 83, -63, -63, 82,
	-63, 78, 110, -63, -178, 79, -195, -291, -397, 750,
	78, -414, 29, 539, 540, 513, -448, 200, 242, 239,
	75, -448, -443, 372, -417, -416, -415, -446, -447, -291,
	-446, -446, -446, 526, -446, -446, -446, -446, -446, -446,
	-446, -446, -446, -421, 75, 78, 355, 75, 16, 75,
	204, -379, -381, 443, 444, 540, 541, 456, 376, 376,
	376, 376, 376, 376, -377, -141, 653, -377, -141, 204,
	254, -134, 29, -232, -231, -292, -285, -286, -287, -288,
	228, -291, -282, -472, -331, -328, -327, -329, 486, 534,
	143, 546, -149, -415, -162, -132, -132, -130, -132, 65,
	65, 65, 70, 65, 70, 70, 65, 65, -145, -301,
	-274, 78, -466, -466, -466, -9, -465, -301, -164, -274,
	201, 201, 201, 103, 16, 53, 27, 103, 16, 53,
	27, 103, 16, 53, 27, -119, -118, -121, 135, -122,
	-299, -176, -243, 97, 14, 120, 78, 23, 78, -228,
	31, 32, 188, -177, 60, 85, 88, -243, 78, -120,
	-149, -122, -122, -122, -193, 93, 101, 94, 95, -293,
	228, 135, -300, -292, -287, -285, -286, 349, 232, -282,
	-176, -194, -200, -137, 89, 120, 118, 119, 103, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -302, 83, 82, 144, 83, -292,
	-118, -292, -175, 227, 480, 481, 93, -175, -291, -291,
	-107, 27, 28, -292, 527, -291, -292, -107, -107, -107,
	-107, -107, 78, -466, -118, -118, -118, -466, -122, -122,
	-118, -176, -118, -203, 82, -118, -203, 82, -118, -176,
	565, 566, 567, -118, -118, -107, -204, -205, 105, -203,
	-285, -288, 349, 232, -118, -466, 85, -182, -183, 656,
	665, 666, 668, 671, 664, 663, 662, 660, 659, 658,
	661, 657, 675, 674, 673, 672, 670, 669, 667, -182,
	-182, -184, 227, 482, 480, 481, -118, -119, -118, -118,
	-466, -466, -121, -118, -121, -118, -118, -121, -466, -466,
	-466, -118, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -466, 85, -151, 97, -149, -125, -149,
	-141, -467, 16, 76, -467, 78, 188, -251, -254, 78,
	538, 540, 541, -248, -323, -324, 143, 75, 96, 82,
	-122, -292, -300, -229, -375, -343, -344, -345, -346, -368,
	216, -383, 207, 209, 211, 210, 50, -347, 217, 201,
	51, -307, -333, 519, 520, -315, 77, -314, 77, -69,
	484, 483, 486, -314, 484, 491, -314, 491, 491, -314,
	-314, -314, 484, 77, 77, -315, -315, -315, -335, 77,
	-335, 479, -336, 77, -336, -336, -336, -336, -307, -307,
	-307, -307, -307, -384, -122, -230, -291, -149, 203, 737,
	-331, 30, -331, -70, 254, 222, 188, 77, -162, 257,
	258, -419, 78, 34, -425, 332, 85, 206, -149, 232,
	-149, -149, -415, -415, -421, -141, 75, 78, 78, 188,
	716, 716, -149, 78, 82, 83, 83, -178, -351, 16,
	120, -263, -149, -178, -116, 228, 76, -469, -466, 454,
	455, 83, -92, -176, 39, 39, -62, -175, -291, 79,
	-398, 205, 558, 82, -413, -301, 512, 540, -449, 135,
	-291, -448, -449, -452, 653, 204, 79, 78, -446, -448,
	335, 78, -448, -417, -415, -378, -380, 435, 437, 438,
	436, 439, 440, 441, 442, 78, 110, 110, 457, -382,
	24, -377, 539, -377, 82, -176, -136, -466, 78, 188,
	-200, 35, -353, -354, -353, -353, -82, -390, -360, -80,
	-388, 123, 196, 193, 192, 268, 198, -326, 559, 251,
	250, 284, 285, 74, 36, 197, 194, -72, -81, 231,
	290, 236, 291, 195, 230, 292, 229, 293, 653, 288,
	757, 517, 609, 610, 643, 91, 613, 248, 42, 201,
	623, 616, 546, 619, 620, 377, 618, 622, 212, 626,
	625, 627, 629, 630, 631, 341, 634, 635, 636, 249,
	637, 638, 639, 366, 644, 9, -426, -425, -432, 75,
	-139, -138, 75, 76, -140, 75, -138, 65, 65, 65,
	-236, 77, -301, -130, -466, -238, -291, -164, -301, -465,
	-465, -465, -176, -176, 120, -176, -176, 120, -176, -176,
	120, -466, 78, 188, 78, -240, 41, 40, -291, 514,
	61, -179, -179, -215, -257, 24, 16, 56, 56, -127,
	16, -226, -226, 93, 94, 95, 188, -465, -194, -176,
	-176, -176, -116, 100, -466, -466, -119, -118, -118, -118,
	-118, -118, -122, -466, -466, -466, 78, 76, 29, -466,
	76, 120, -466, 16, 16, -466, 16, 16, -466, -466,
	16, -176, -176, -176, -466, -466, -118, -207, -205, 107,
	-122, -466, -466, -466, -466, -466, 78, 78, 16, 78,
	-466, -466, -466, -466, -216, 574, -216, -466, -466, -466,
	-466, -466, -466, -216, -216, -216, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -237,
	123, -149, 35, -237, 76, -125, -125, -152, -299, 135,
	-253, -256, 542, 539, 545, 83, 82, 144, 82, 188,
	-230, -359, -374, 78, -360, 757, 517, 609, -326, 610,
	643, 91, 613, 248, 42, 201, 623, 616, 546, 619,
	620, 377, 618, 622, 212, 626, 625, 627, 629, 630,
	631, 341, 634, 448, 635, 636, 249, 637, 638, 639,
	366, 644, 9, 653, 77, -352, -290, -383, 83, -284,
	51, -347, -349, -347, -347, -347, -352, 83, -284, -352,
	51, 719, 93, 101, -322, -324, 144, -319, -320, -337,
	-340, -316, 29, 758, 522, 219, -346, 486, 534, 34,
	75, 517, 207, 51, 50, 211, 91, -334, 521, 85,
	85, 585, -314, 491, -314, -314, -314, -314, -314, -341,
	82, -341, 85, -335, 85, 79, -295, 76, -233, -149,
	677, -71, 13, 14, 15, -291, -400, -401, -402, -291,
	120, 259, 260, 75, -435, 363, -423, 333, 342, 100,
	21, 653, -456, 101, 204, 204, -394, 220, 215, -149,
	-149, -415, -291, 75, 75, -242, -165, 17, 83, 83,
	-260, -263, -176, -418, 245, 246, -176, -176, -150, 97,
	-414, 204, 188, 188, -449, 204, 354, -417, -291, -449,
	352, 335, -449, -54, 205, 16, 78, 110, 110, 110,
	110, 110, 110, 110, 110, -381, 77, 77, 386, 36,
	-231, -292, -353, 83, 82, 144, 83, 82, 144, 82,
	-389, 78, -390, 196, 193, 284, 285, -388, 21, -275,
	-347, -396, -395, -345, -346, 123, 208, 216, 216, 213,
	-275, -347, 207, 217, 123, 216, 213, -275, 201, -353,
	-275, 486, 143, 204, 38, 38, 366, 123, 366, 123,
	-353, -275, 208, -347, -272, 216, -273, 204, 29, 289,
	123, 123, 123, 123, 123, 123, 123, 123, 294, 677,
	-353, -353, -353, -353, -353, -353, -353, -353, 615, 615,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -357, -453, 82, -463, 91, 272, 341,
	83, -284, -282, 85, 87, 86, -353, -353, -438, 653,
	-163, 194, 278, 274, -122, 77, -122, -234, -291, -236,
	-466, 78, -164, -234, -234, -234, 100, 204, -465, 100,
	204, -465, 100, 204, -465, -274, -121, 135, -300, 82,
	78, 82, 82, 515, 62, -149, -165, 606, -125, -120,
	135, -292, -119, -116, 100, -176, -466, -466, -466, -466,
	-466, -466, -305, 144, 483, 486, 227, 482, 475, 473,
	472, 474, 502, 488, 519, 480, 520, 664, -302, -305,
	-302, -176, -176, -176, -176, -176, -176, 16, 16, 16,
	650, -211, 109, -122, 106, -176, -176, -176, -176, -291,
	-221, -465, -216, -216, -216, -216, -216, -216, -217, -216,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
	-217, -172, -173, 35, -171, -9, -465, -174, -473, 56,
	60, -465, -245, -250, -203, -285, -288, 228, -165, -125,
	-165, -165, 188, 539, 543, 544, -374, -353, -353, -353,
	534, 486, 143, -353, -353, -353, -353, -353, 615, 615,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, 449, -353, -353,
	-353, -353, -353, -353, -357, -453, -353, -353, 677, -370,
	-369, 83, -289, 207, 50, -383, -352, -352, -352, -352,
	-352, -102, -290, 93, -465, 759, 85, -149, 35, 83,
	144, 82, -175, 134, -303, -167, -186, -465, 94, 95,
	550, 551, 555, 552, 556, 557, 570, 571, 572, 573,
	547, 553, 554, 14, 51, 51, 51, 82, 79, 79,
	79, -314, 79, 78, 79, 78, 79, 78, -169, 711,
	712, 75, -291, 29, -233, 85, 75, 79, 78, -306,
	-291, -291, -291, 274, -438, 338, -436, -434, 344, 345,
	346, 347, 348, -418, 343, -425, 340, 82, 83, 82,
	676, 710, 731, 703, 30, -149, -415, -235, 77, -234,
	-235, -122, -178, -237, 200, -417, 135, 135, -291, 204,
	-417, 352, -451, 653, 16, 16, 352, 16, 387, -417,
	-380, 82, 82, 82, 85, 85, 85, 85, 85, -141,
	-141, 82, 83, 82, 144, -359, -80, 196, 193, 284,
	285, -361, -362, -365, -364, 124, 624, 691, 77, -342,
	83, -289, -265, -268, 209, 207, -465, 83, -290, -290,
	-290, -264, 51, 51, -238, -290, -290, -291, -290, 34,
	281, 282, 283, 83, 35, -353, 486, -238, 27, -238,
	27, 34, 338, 286, 287, -342, -290, -291, -149, 217,
	213, -290, -238, 27, 85, -238, -291, -238, 27, -238,
	27, -238, 27, -238, 27, 645, -357, -122, -357, -463,
	-463, 82, 82, 82, -353, -353, -104, 646, 218, -463,
	82, -104, -463, -453, 82, -103, 218, 221, 223, -357,
	-357, -357, -463, -463, -463, -463, 82, -358, 34, 617,
	478, 612, 633, 611, 83, 93, 82, 82, -463, 34,
	-463, 34, -463, -357, 640, -463, -465, -439, -437, 356,
	357, 358, 359, -431, 250, 251, 204, 279, 101, -428,
	756, 275, -234, 79, 78, -154, -291, -466, -466, -466,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -301,
	188, 529, -291, -321, -322, -208, 18, -226, -466, -176,
	-217, -217, -217, -217, -217, -466, -315, -315, -315, -315,
	-336, 479, -315, 463, -315, 463, -466, -466, -466, -466,
	24, 24, 24, 24, -466, -176, -176, -176, -465, -115,
	569, -122, 78, 78, -466, -466, -296, 83, -244, 75,
	-244, -245, -274, -9, -466, -232, -174, -465, 11, 56,
	60, 653, 200, -198, -201, -472, -238, -165, 78, -354,
	-354, -354, -354, -211, -165, -357, -357, -357, -353, 35,
	-353, -463, -463, 82, 82, 82, -353, -353, -104, -463,
	82, -104, -463, -453, 82, -103, -357, -357, -357, -463,
	-463, -463, -463, 82, -358, 83, 93, 82, 82, -463,
	34, -463, 34, -463, -357, 640, -463, -465, 645, 79,
	78, -315, -315, 51, -349, 77, -176, 29, 77, 83,
	144, 82, -175, 82, -176, -192, 82, 85, 85, -149,
	-225, 29, -456, -149, -403, -404, -405, 91, 652, 101,
	261, 262, 218, 263, 264, 265, -402, -306, -306, -306,
	-428, -441, -442, -440, 341, 361, 362, 349, 100, 82,
	82, 82, -427, 332, 100, 341, 21, 29, 21, 29,
	82, 82, 82, 82, 85, 76, -234, -263, -321, -149,
	-451, -417, -451, 335, -417, -417, 16, -417, 331, -54,
	79, 79, -366, 632, -465, 529, 621, 51, -342, -213,
	221, 222, -306, -306, -352, -349, 51, -385, -387, 123,
	-291, -290, 711, 712, 711, 712, 35, 193, 749, 719,
	-342, -353, -302, 35, 366, 366, 366, 366, -213, -273,
	204, 51, -290, 204, 366, 366, 97, 653, 82, 82,
	614, 628, -454, -453, -437, 85, 85, 85, 85, -318,
	91, 75, -162, 279, -432, 75, -181, -175, -186, -175,
	79, -291, 78, 78, 78, 135, -465, -406, -261, -209,
	19, 21, -321, 83, -321, 83, -176, -176, -176, -176,
	-466, -466, -466, -176, -466, 82, -176, -176, -197, 123,
	-239, 26, 33, -244, -301, -466, -174, -465, -466, -466,
	78, -200, -465, -466, -211, -250, -122, -122, -122, -122,
	-229, -302, -353, -325, -453, 82, 82, 82, 614, 628,
	-454, -372, -371, 76, 212, 91, 618, 636, 749, 719,
	-369, -228, -228, -352, -352, -234, -466, -465, -234, -466,
	79, 79, 77, -227, -225, 24, -226, -405, 82, 265,
	261, 265, 265, 265, 265, 266, -432, -422, 91, 339,
	-440, 350, 717, 334, 363, 85, 85, 122, 36, 37,
	-434, 21, 653, -425, 340, 82, 82, 340, 82, 82,
	332, -456, 42, 79, -406, -450, 29, -451, -450, 352,
	-54, -54, -417, -54, -363, 641, 85, -176, -465, -465,
	-277, 268, 79, 83, -307, -307, -295, -265, -352, -466,
	78, -291, 34, 34, -213, -302, -302, -290, -291, -290,
	204, -290, -465, 200, 78, -466, 329, 82, 368, -163,
	-433, -183, -176, -176, -176, -458, -459, -292, 724, -407,
	44, -410, 45, -219, 575, -210, -122, -196, -124, -122,
	-466, -466, -466, -466, -112, 120, 653, -466, -466, -211,
	21, -117, 51, -239, -236, -174, -9, -465, -201, -466,
	-229, -302, -466, -371, -453, -353, 82, -353, -353, 79,
	-332, 761, 760, -176, 79, -370, -9, -227, 252, -227,
	42, 42, 257, 258, -431, 82, 82, 34, 351, 187,
	34, 85, 187, 577, 340, 82, 83, 341, 341, 21,
	-176, -407, -415, -450, -54, -386, -465, 21, -466, -234,
	-176, -465, 110, 77, -352, 77, -387, 56, -176, 143,
	143, 204, -290, -385, -149, -453, -225, -431, 133, -429,
	276, -466, -466, -466, -466, 78, -306, 24, 82, 608,
	-408, -409, -339, 48, 21, -218, -220, -291, 78, -466,
	651, 72, 654, -222, 125, 124, -195, 14, -9, 85,
	82, 82, 219, -466, 79, -225, -9, 253, -27, -4,
	-16, -17, -18, -19, -21, -73, -22, -23, -28, -29,
	-24, -83, -87, -88, -89, -85, -96, -94, -95, -91,
	-90, -32, -34, -35, -37, -40, -41, -38, -39, -36,
	-30, -33, -42, -25, -43, -44, -45, -50, -51, -31,
	-52, -46, 104, 206, 448, 310, 321, 322, 323, 83,
	326, 328, 324, 325, 320, 330, 447, -318, 85, 34,
	85, 34, 353, 341, 29, 85, -317, 205, 653, -385,
	-364, -466, -466, -234, 85, -370, -295, -370, 237, -353,
	-302, -290, -466, -72, 653, -27, -318, 187, -430, 277,
	-181, -466, -459, -460, 608, 30, 730, 529, 82, 49,
	45, -411, 46, 47, 82, 78, 29, -124, 62, 652,
	655, -466, -223, 103, -224, 122, 577, -180, 85, 187,
	-223, -245, -466, -149, -332, -373, -372, -281, 653, -225,
	-214, 255, 256, -225, -122, -57, -58, 105, -122, 83,
	-67, -297, 313, 314, 315, -292, 83, 83, -56, -27,
	81, -56, -122, 83, 83, -468, 16, 59, -176, 109,
	-56, 329, 660, 660, 82, -236, 85, 333, -466, 621,
	51, -466, 79, 77, 79, 238, -302, 289, -225, 329,
	-175, -181, -433, -274, 82, 608, -465, 529, 21, 21,
	21, 21, -220, -221, 62, -224, 127, 128, 253, 127,
	128, -175, 77, 213, 280, 512, -281, -225, 83, 83,
	-57, 109, 107, -58, -122, 106, 311, 312, 316, -306,
	78, 764, 447, 323, 326, 328, 764, 329, 83, 16,
	764, -225, -246, 35, 44, 125, 34, 338, 27, -418,
	-465, -277, -373, -370, -373, -465, -225, -183, -433, -301,
	-461, -462, 378, 93, 34, 82, -458, -465, 82, 82,
	82, 82, 653, 100, -182, -234, 352, 213, 213, -227,
	109, 107, 104, -56, 106, -56, 24, 24, 24, -321,
	-292, 109, -27, 109, -56, -56, -56, -122, 327, -56,
	97, 109, -27, -245, 8, -176, -465, 79, -176, 235,
	-27, -462, 93, 34, -461, 93, 34, 75, 75, -175,
	-466, -458, 654, -224, 79, 352, 352, -20, -26, -19,
	-25, -16, -17, -18, 447, 653, 104, -56, 764, -56,
	764, -68, 85, -9, -66, -65, 85, -68, 318, 101,
	319, 83, -323, 323, 83, 764, 764, 764, 329, -122,
	764, -61, 83, -225, -418, -466, -176, -373, -466, -466,
	-225, 75, -175, 75, -175, 683, 378, 683, 378, 75,
	-466, 655, -392, -393, 75, -225, -56, 109, -128, 764,
	109, 764, 109, 107, -59, -60, 108, -27, 78, 317,
	34, 109, 109, 327, -56, 109, 109, 78, -367, 642,
	-466, 75, 75, 378, 378, 683, 378, -393, 75, -392,
	75, 15, 14, 764, 109, 104, 206, -56, 109, 107,
	-60, -122, -65, -176, 83, 323, -122, 764, 326, 328,
	83, 85, -367, 75, 75, -391, 220, 215, 218, 35,
	-391, 109, 104, 764, 206, -56, 106, 83, 109, 109,
	378, 683, 214, 34, 93, 109, 764, -56, 326, 328,
	206, 109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1729, 1227, 1729, 0, 1227, 0, 1227, 0, -2,
	135, 932, 933, 934, 935, 0, 1810, 0, 0, 0,
	0, 0, -2, 1189, 1190, 1193, 1190, 1190, 1219, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 734, 0, 64, 0, 1333, 2760,
	-2, 1223, 1224, 1225, -2, -2, 0, 53, 0, 60,
	2, 1737, 0, 1240, 1229, 1737, 0, 0, 49, 0,
	0, 1227, 1227, 1227, 87, 88, 0, 121, 0, 123,
	0, 0, 1729, 1227, 0, 0, 0, 1814, 1814, 337,
	1814, 1814, 1829, 0, 1832, 335, 0, 1811, 1827, 1828,
	1830, 0, 0, 0, 0, 1812, 1812, 1812, 1812, 1812,
	1812, 1812, 1812, 1812, 0, 0, 1103, 1424, 1426, 1427,
	1428, 1429, 1841, 1842, 2751, 2752, 2753, 2754, 2755, 2756,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2757, 2758, 2759, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 0,
	0, 0, 1108, 1109, 1110, 1111, 1112, 2745, 2746, 2747,
	2748, 2749, 2750, 1121, 1122, 0, 0, 0, 1180, 0,
	1180, 1140, 1141, 0, 1143, 0, 0, 0, 0, 0,
	0, 0, 1177, 1155, 1158, 1162, 0, 1737, 1737, 1177,
	1168, 0, 786, 787, 788, 1185, 1186, 1174, 1187, 1192,
	1191, 1200, 1200, 0, 1191, 1221, -2, 1221, 1361, 0,
	463, 465, 0, 486, 0, 489, 492, 1430, 0, -2,
	-2, 1852, 1206, 0, 0, 1878, 1879, 0, 0, 0,
	0, 0, 2616, 235, 351, 276, 276, 276, 276, 276,
	276, 276, 0, 276, 276, 0, 276, 276, 276, 2632,
	276, 0, 276, 276, 276, 276, 276, 234, 350, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 340, 341,
	342, 0, 0, 0, 738, 1194, 743, 741, 0, 735,
	732, 733, 0, 80, 0, 67, 81, 1761, 1383, 1384,
	1385, 1330, 0, 1334, -2, 0, 1812, 0, 1817, 69,
	1320, 1321, 1322, -2, 0, 0, 1328, 1329, -2, 1480,
	1841, 0, 0, 1234, 0, 0, 1231, 1237, 0, 1744,
	0, 0, 119, 1228, 47, 48, 2761, 59, 0, 0,
	1256, 1311, 0, 1439, 2313, 1445, -2, 2226, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 2171, 0, 0, 0,
	0, 0, 2268, 1518, 1519, 1520, 1521, 1522, 1523, 2479,
	2697, 2698, 1707, 1711, 1712, 1713, 1714, 1715, 1716, -2,
	-2, -2, 1690, 1691, 1705, 0, 2751, 2752, 2754, 2755,
	2756, 1779, 0, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 2294, 2357, 2245, 2362, 2190,
	2757, 2182, 2758, 2259, 2386, 2387, 2759, 2302, 2729, 0,
	-2, 2411, 2350, -2, -2, -2, 1586, -2, -2, -2,
	2741, 2742, 2726, 2731, 2252, 2200, 2310, 2351, 2191, 2212,
	2231, 2280, 2281, 2283, 2315, 2316, 2334, 2343, 2361, 2172,
	2173, 2174, 2275, 2276, 2383, 2382, 2381, 2384, 2417, 2415,
	2418, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2192, 2193, 2194, -2, 2199,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2210, 2211,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2227, 2228, 2230, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2246,
	2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257,
	2258, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2269,
	2270, 2271, 2272, 2273, 2274, 2277, 2278, 2279, 2282, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2295,
	2296, -2, -2, 2299, 2300, 2301, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2311, 2312, 2314, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2344, 2345, 2346, 2347, 2348, 2349, 2352, 2353, 2354, 2355,
	2356, 2358, 2359, 2360, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2385, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2412, 2413, 2414, 2416, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 0, 1816, 1816, 0,
	106, 2699, 0, 1786, -2, -2, 1788, 0, 0, 0,
	-2, -2, -2, -2, 2183, -2, 1690, 0, 0, 0,
	0, 2171, 2172, 2173, 2174, 2180, 2182, 2190, 2191, 2195,
	2196, 2197, 2198, 2200, 2209, 2212, 2226, 2229, 2231, 2245,
	2252, 2259, 2268, 2275, 2276, 2280, 2281, 2283, 2294, 2297,
	2298, 2302, 2310, 2313, 2315, 2316, 2317, 2334, 2343, 2350,
	2351, 2357, 2361, 2362, 2381, 2382, 2383, 2384, 2386, 2387,
	2398, 2408, 2409, 2410, 2411, 2415, 2417, 2418, 122, 1729,
	0, 124, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 812, 1835, 1836, 0, 1737, 1240, 1814, 1814,
	335, 0, 0, 0, 0, 0, 1814, 330, 0, 0,
	0, 0, 1814, 337, 0, 0, 1083, 0, 1084, 0,
	345, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 1128, 1102, 0, 1104, 98, 1107, 0, 0,
	0, 0, 1125, 1126, 1129, 0, 1171, 1180, 1131, 0,
	0, 1814, 1814, 0, 0, 0, 0, 0, 1139, 0,
	814, 815, 1180, 1145, 1146, 1180, 1180, 1180, 1177, 0,
	1177, 1152, 1175, 1176, 1180, 0, 0, 0, 1157, 0,
	0, 0, 1165, 1166, 1180, 1170, 0, -2, 1198, -2,
	1207, 0, 0, 79, 1222, 1221, 0, 1226, 1362, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 488, 469,
	0, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 1361, 0, 0, 1847, 1853, 1211,
	1869, 1870, 0, 1880, 1881, 280, 0, 280, 0, 0,
	0, 0, 202, 276, 0, 204, 276, 276, 276, 0,
	276, 276, 211, 212, 276, 214, 215, 216, 276, 218,
	219, 276, 221, 222, 223, 276, 276, 226, 276, 276,
	229, 230, 231, 232, 233, 349, 0, 0, 0, 2616,
	1813, 0, 0, 0, 0, 739, 744, 745, 740, 742,
	711, 0, 0, 0, 0, 716, 717, 718, 719, 0,
	0, 722, 723, 728, 728, 0, 65, 66, 0, 0,
	0, 1333, 1331, 0, -2, 937, -2, 687, 688, 689,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 1389, 0, 0, 0, 0, 0, 1826, -2,
	0, 0, 0, 0, 1318, 0, 1335, 0, 1337, 0,
	-2, 0, 0, 0, 1826, 1341, 1342, 1343, 1344, 1345,
	0, 0, 0, 1482, 0, 57, 58, 1235, 1236, 54,
	62, 63, 55, 1232, 1233, 1238, 1239, 56, 73, 0,
	0, 1738, 1741, 1742, 1743, 1730, 1731, 1734, 0, 0,
	73, 1241, 1242, 1243, 1244, 1245, 1246, 0, 1230, 0,
	1257, 0, 0, 0, 0, 1312, 0, 1315, 1316, 1317,
	0, 1443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1446, 0,
	1460, 0, 0, 0, 0, 0, 0, 0, 1511, 1512,
	1513, 1514, 1515, 1516, 0, 1708, 1709, 1710, 1247, 0,
	0, 0, 1247, 1247, 1247, 1247, 1247, 0, 1486, 2424,
	0, 2389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 1682, 0,
	0, 1583, 0, 1584, 1585, 1587, 1601, 0, 1588, 1589,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 1597, 1598, 0, 0, 0, 0, 0, 0,
	98, 100, 1424, 0, 107, 109, 0, 0, 2699, 1789,
	1790, 678, 1804, 1805, 1806, 1807, 0, 775, 776, 1802,
	0, 1737, 829, 0, 560, 657, 578, 579, 580, 647,
	582, 649, 0, 649, 649, 1679, 1680, 649, 649, 649,
	624, 625, 626, 627, 628, 630, 631, 632, 633, 634,
	0, 0, 606, 647, 647, 647, 610, 637, 638, 639,
	640, 641, 642, 643, 644, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	652, 652, 654, 654, 654, 654, 654, 560, 560, 560,
	560, 560, 0, 811, 1038, 1039, 0, 1744, 119, 0,
	0, 0, 0, 337, -2, 0, -2, 0, 1419, 0,
	0, 0, 0, 148, 373, 353, 133, 0, 0, 331,
	336, 332, 333, 334, 0, 0, 0, 0, 344, 0,
	0, 1091, 96, 1092, 1093, 1094, 1095, 1096, 346, 1097,
	1098, 375, 0, 1425, 1843, 1844, 1845, 1846, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 0, 0, 0, 1113,
	1115, 1119, 1120, 1114, 1116, 1123, 1117, 1124, 1169, 1130,
	1181, 0, 1183, 0, 0, 1361, 1135, 1136, 1137, 1138,
	816, 1144, 1147, 1148, 1154, 1180, 0, 1361, 1153, 1178,
	1179, 1156, 1474, 1159, 1599, 0, 1167, 1188, 1204, 0,
	1199, 0, 1205, 1209, 1208, 0, 1212, 1215, 1216, 1217,
	1218, 79, 1214, 0, 0, 0, 1220, 464, 466, 468,
	487, 0, 0, 490, 491, 493, 0, 1431, 1849, 0,
	0, 1872, 0, 1874, 1876, 0, 0, 281, 282, 283,
	280, 0, 236, 0, 298, 352, 0, 203, 0, 278,
	205, 206, 207, 276, 209, 210, 213, 217, 220, 224,
	225, 227, 228, 348, 280, 0, 0, 280, 0, 0,
	0, 737, 756, 0, 0, 1195, 1196, 0, 712, 713,
	714, 715, 730, 721, 724, 728, 0, 725, 728, 0,
	0, 82, 0, 0, 1763, 1766, 1767, 1768, 1769, 1770,
	1771, 1839, 1840, 0, 936, 690, 691, 692, 0, 773,
	773, 773, 683, 358, 385, 1379, 1381, 0, 1376, 1387,
	1388, 1390, 0, 1392, 0, 0, 1395, 1396, 1397, 1365,
	0, 0, 1327, 1479, 1481, 0, 0, 1433, 1339, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	1356, 0, 0, 0, 1357, 0, 1483, 1484, 1252, 1253,
	0, 0, 45, 0, 1745, 0, 0, 0, 0, 1733,
	1735, 1736, 0, 0, 1718, 0, 0, 70, 119, 119,
	50, 1440, 1441, 1442, 1444, 1461, 0, 1463, 1465, 1313,
	1314, 1258, 0, 1692, -2, 1694, 1695, -2, -2, -2,
	1451, 1452, 1476, 1477, 1478, 0, 0, 0, 0, 1474,
	1456, 0, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1510, 1614, 1615, 1616, 0, 1703,
	0, 1704, 1508, 0, 0, 0, 1717, 1509, 1698, 1517,
	1482, 1248, 1249, 1701, 1702, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 1558, 0, 0,
	0, 0, 0, 1492, 1707, 0, 1492, 1707, 0, 0,
	2284, 2396, 2176, 0, 0, 0, 1688, 1685, 0, 0,
	0, 0, 2745, 2746, 0, 1600, 0, 0, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 0,
	0, 0, 1284, 1285, 1286, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 102, 0, 1423, 0, -2,
	0, 0, 94, 95, 0, 0, 0, 1787, 0, 0,
	0, 112, 113, 108, 1791, 679, 0, -2, 1798, 1707,
	1800, 1692, 0, 1744, -2, 545, 546, 547, 548, 0,
	793, 802, 0, 0, 791, 0, 793, 793, 0, 789,
	790, 551, 660, 658, 659, 581, 0, 611, 0, 649,
	649, 1679, 1680, 613, 649, 649, 616, 649, 649, 619,
	622, 623, 629, 0, 0, 607, 608, 609, 598, 0,
	599, 652, 601, 0, 602, 603, 604, 605, 552, 553,
	554, 555, 556, 810, 0, 300, 1833, 1761, 0, 0,
	128, 1815, 129, 0, 396, 397, 0, 302, 0, 338,
	339, 150, 0, 0, 354, 0, 139, 0, 540, 541,
	0, 1085, 0, 1087, 343, 1099, 0, 0, 0, 0,
	0, 0, 99, 0, 1182, 1132, 1133, 1134, 1437, 0,
	0, 1149, 1177, 1180, 1172, 0, 0, 1160, 0, 1203,
	1201, 1210, 1213, 1358, 0, 0, 470, 471, 472, 494,
	0, 1850, 1851, 1848, 1871, 0, 1875, 1877, 0, 284,
	286, 0, 0, 192, 0, 0, 277, 0, 208, 0,
	0, 0, 0, 194, 0, 736, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1197, 720,
	0, 726, 0, 727, 709, 710, 83, 1762, 0, 0,
	1332, 773, 0, 774, 0, 0, 1046, 939, 940, 941,
	1048, 0, -2, 1044, 1044, 773, 1044, 0, 0, 0,
	0, 0, 0, 978, 773, 1044, 1821, 0, 991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1036, 1037,
	773, 773, 773, 773, 773, 773, 773, 773, 0, 0,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 0, 773, 773, 160, 359, 1081, 0,
	1373, 1380, 0, 0, 1374, 0, 1375, 1391, 1393, 1394,
	1323, 0, 1365, 1319, -2, 0, 1369, 1338, 1433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 0, 74, 2492, 0, 77, 0,
	0, 1739, 1740, 1732, 0, 1808, 1809, 1719, 1720, 1437,
	0, 0, 1250, 1462, 1464, 1466, 0, 1482, 1453, 1474,
	1457, 0, 1454, 0, 1448, 1556, 0, 0, 0, 0,
	0, 0, 1487, 1554, 1555, 1557, 0, 0, 0, 1561,
	0, 0, 1565, 0, 0, 1607, 0, 0, 1608, 1570,
	0, 0, 0, 0, 0, 1576, 1729, 0, 1686, 0,
	0, 1579, 1580, 1581, 1582, 1602, 0, 0, 0, 0,
	1603, 1604, 1605, 1606, 1543, 0, 1544, 0, 0, 0,
	0, 0, 0, 1551, 1552, 1553, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1595, 0,
	0, 1422, 0, 1437, 0, 1437, 1437, 101, 0, 1432,
	110, 111, 0, 0, 117, 680, 681, 682, 1799, 0,
	301, 542, 830, 683, 907, 773, 773, 773, 0, 773,
	773, 773, 773, 773, 0, 0, 773, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 0, 773, 773, 773, 773, 773, 773,
	0, 773, 773, 0, 0, 0, 0, 801, -2, -2,
	793, 793, 793, 792, 793, 793, 784, 794, 795, 785,
	808, 561, 562, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 669, 0, 704, 706, 0, 0, 577, 661, 0,
	0, 0, 612, 649, 620, 614, 615, 617, 618, 0,
	645, 0, 0, 600, 0, 826, 0, 0, 0, 1761,
	0, 0, 398, 399, 400, 1420, 0, 303, 304, 0,
	0, 0, 0, 0, 160, 0, 374, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 1089, 1100, 1101, 1090,
	97, 347, 376, 0, 0, 1118, 1142, 0, 817, 818,
	1361, 1151, 1475, 1161, 1163, 1164, 1359, 1360, 102, 0,
	1873, 0, 0, 0, 0, 0, 0, 296, 279, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 729,
	1764, 1765, 0, 696, 697, 698, 699, 700, 701, 702,
	906, 683, 1047, 0, 0, 0, 0, 1049, 914, 0,
	1814, 0, 0, 948, 949, 0, 1045, 928, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 970, 971, 972, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 1822, 1823, 1824, 990,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 1030, 887, 888, 889, 890, 891,
	903, 904, 905, 892, 893, 894, 0, 0, 1040, 0,
	388, 0, 0, 0, 1377, 0, 1382, 0, 1367, 1324,
	-2, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 1254, 0, 0,
	0, 75, 670, 1746, 1747, 46, 1721, 71, 72, 119,
	1259, 1706, 0, 1455, 0, 1458, 1524, 1267, 1267, 1267,
	1267, 1267, 0, 647, 647, 647, 1664, 647, 654, 1667,
	1669, 1670, 1671, 647, 1673, 647, 1676, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 1578, 1689, 0, 0, 0, 0, 0, 1260,
	1261, 1263, 1545, 1546, 1547, 1548, 1549, 1550, 1528, 1268,
	1529, 1530, 1532, 1533, 1535, 1536, 1537, 1538, 1540, 1541,
	1542, 1772, 1772, 0, -2, 1753, 0, 1750, 1333, 1759,
	1760, 0, 1437, 1780, 0, 0, 0, 0, 1729, 1437,
	92, 93, 0, 114, 115, 116, 831, 0, 0, 0,
	773, 0, 773, 0, 0, 0, 0, 0, 773, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	796, 647, 647, 0, 791, 800, 777, 779, 780, 781,
	783, 0, 809, 563, 0, 0, 574, 0, 0, 675,
	676, 677, 662, 0, 0, 665, 666, 0, 1449, 1450,
	1599, 1599, 1599, 1599, 1599, 1599, 0, 0, 0, 0,
	1599, 1599, 1599, 0, 703, 705, 707, 708, 648, 650,
	651, 621, 635, 0, 636, 0, 655, 0, 813, 827,
	828, 0, 1834, 118, 0, 139, 0, 310, 0, 306,
	0, 0, 0, 0, 168, 151, 152, 153, 155, 156,
	0, 0, 0, 149, 0, 356, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 1086, 1088, 0, 0, 1364,
	1106, 1438, 1180, 670, 0, 296, 285, 287, 288, 0,
	296, 299, 193, 0, 0, 0, 0, 0, 0, 194,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 0,
	0, 731, 693, 694, 695, 938, 942, -2, 1044, 0,
	0, 920, 909, 0, 0, 918, 919, 915, 0, 1041,
	0, 0, 793, 791, 1829, 0, 0, -2, 950, 951,
	974, 0, 976, 0, 1051, 0, 0, 0, 0, 956,
	957, 958, 959, 0, 773, 0, 0, 0, 0, 0,
	0, 979, 980, 981, 982, 1041, 0, 0, 986, 0,
	0, 0, 0, 0, 1058, 0, 0, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1035, 992, 993, 994, 995,
	996, 997, 998, 999, 0, 0, 1002, 883, 884, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 880, 881, 882, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 895, 896,
	897, 898, 899, 900, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 0, 1033, 0, 161, 162, 0,
	0, 0, 0, 392, 389, 390, 0, 386, 0, 385,
	0, 0, 0, 1366, 0, 1336, 1370, 1434, 1435, 1436,
	1346, 1347, 0, 1349, 1350, 0, 1352, 1353, 0, 1372,
	0, 0, 78, 1862, 671, 1726, 0, 1251, 1525, 1459,
	1527, 1531, 1526, 1534, 1539, 1559, 1659, 670, 670, 1665,
	1666, 1668, 1672, 1674, 1675, 1677, 1563, 1560, 1562, 1564,
	0, 0, 0, 0, 1571, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 1592, 1593, 1265, 1264, 104, 0,
	85, 1772, 0, 0, 0, 0, 0, 0, -2, -2,
	-2, 2155, 2119, 1757, 1774, 0, 0, 1729, 0, 0,
	0, 0, 0, 1737, 91, 832, 833, 834, 0, 773,
	0, 837, 838, 840, 841, 842, 0, 0, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 0, 877, 0, 879, 761,
	0, 1734, 1734, 793, 793, 0, 0, 0, 0, 672,
	673, 674, 663, 664, 0, 668, 646, 0, 0, 0,
	120, 118, 138, 0, 119, 311, 312, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 305, 307, 308, 309,
	385, 186, 169, 170, 0, 0, 0, 0, 0, 157,
	158, 159, 355, 0, 0, 360, 0, 0, 0, 0,
	140, 141, 0, 143, 139, 0, 0, 1150, 1862, 1421,
	289, 296, 289, 0, 194, 194, 0, 194, 195, 201,
	758, 759, 922, 0, 0, 0, 0, 916, 0, 944,
	1042, 0, 560, 560, 1833, 1814, 793, 0, 1073, 0,
	975, 977, 952, 954, 953, 955, 0, 0, 962, 963,
	1041, 0, 967, 0, 1052, 1053, 1054, 1055, 983, 0,
	0, 0, 0, 0, 1056, 1057, 0, 0, 1000, 1001,
	1031, 1032, 0, 901, 163, 164, 165, 166, 167, 1077,
	0, 0, 1082, 387, 1081, 0, 379, 394, 395, 0,
	1378, 1368, 0, 0, 0, 1255, 0, 1864, 1858, 1279,
	0, 0, 1660, 1661, 1662, 1663, 0, 0, 0, 0,
	1572, 1573, 1574, 1609, 1577, 1684, 0, 0, 1729, 0,
	84, 119, 0, 104, 1365, -2, 1751, 0, 0, 1758,
	1333, 1776, 0, 103, 1737, 1781, 1782, 1783, 1784, 1785,
	90, 835, 0, 839, 885, 886, 843, 844, 875, 876,
	0, 760, 764, 0, 773, 0, 773, 773, 771, 772,
	797, 798, 799, 778, 782, 0, 557, 0, 0, 667,
	653, 656, 0, 0, 120, 0, 120, 313, 314, 315,
	316, 318, 319, 0, 0, 0, 388, 132, 0, 0,
	171, 0, 0, 0, 0, 181, 182, 183, 184, 185,
	154, 0, 0, 357, 0, 366, 368, 0, 367, 369,
	0, 137, 0, 1363, 1864, 189, 0, 289, 191, 297,
	196, 198, 194, 197, 1071, 0, 921, 0, 0, 0,
	0, 0, 943, 1043, 549, 550, 0, 793, 0, 1050,
	0, 0, 0, 961, 964, 965, 968, 984, 985, 0,
	0, 989, 0, 0, 0, 1034, 118, 393, 391, 388,
	377, 381, 0, 0, 0, 0, 1399, 0, 2584, 76,
	1866, -2, 0, 68, 0, 1727, 1728, 1722, 1723, 1725,
	1566, 1568, 1567, 1569, 0, 0, 0, 1590, 1591, 1269,
	0, 105, 0, 86, 1749, 1752, 1754, 0, 1775, 1777,
	89, 836, 878, 765, 766, 0, 768, 0, 0, 0,
	572, 558, 559, 0, 575, 0, 118, 0, 0, 79,
	320, 321, 322, 323, 392, 187, 188, 172, 173, 0,
	175, 176, 0, 0, 0, 371, 0, 364, 365, 0,
	1105, 1818, 290, 190, 199, 908, 0, 914, 910, 0,
	0, 0, 0, 0, 1833, 0, 1074, 0, 960, 773,
	0, 0, 988, 0, 1060, 902, 79, 392, 0, 383,
	0, 1348, 1351, 1354, 0, 0, 0, 0, 0, 0,
	1865, 1860, 0, 1857, 0, 1280, 1281, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 1266, 0, 0, 767,
	769, 770, 0, 557, 762, 144, 118, 401, 118, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 79, 0,
	79, 0, 0, 0, 446, 0, 79, 0, 0, 177,
	0, 179, 180, 370, 0, 142, 1365, 0, 0, 0,
	0, 911, 912, 0, 917, 0, 0, 0, 0, 0,
	969, 987, 1059, 0, 1036, 118, 1078, 0, 378, 0,
	379, 1825, 1400, 1401, 0, 0, 1402, 0, 0, 0,
	0, 1863, 0, 0, 1859, 0, 0, 1724, 1610, 0,
	1613, 1262, 1270, 0, 1273, 0, 0, 0, 1309, 0,
	1271, 1773, -2, 0, 573, 125, 763, 126, 0, 144,
	118, 0, 0, 131, 0, 0, 416, 0, 0, 1835,
	0, 0, -2, -2, -2, 1837, 443, 444, 0, 495,
	0, 0, 0, 460, 461, 0, 447, 0, 462, 324,
	0, 118, 174, 178, 372, 42, 0, 0, 1072, 0,
	916, 913, 762, 0, 762, 0, 966, 1061, 1079, 118,
	0, 379, 382, 0, 1405, 0, 0, 0, 0, 0,
	0, 0, 1282, 1283, 1611, 0, 1274, 1275, 1276, 1277,
	1278, 0, 0, 0, 0, 0, 127, 120, 402, 403,
	0, 0, 79, 417, 0, 79, 0, 0, 0, 670,
	0, 79, 79, 79, 79, 0, 79, 79, 0, 448,
	79, 79, 44, 0, 1819, 1820, 291, 292, 293, 295,
	0, 0, 945, 0, 947, 0, 79, 380, 384, 1398,
	1406, 1407, 0, 0, 0, 1414, 0, 0, 1867, 1868,
	1861, 1855, 0, 0, 1310, 0, 145, 0, 0, 79,
	0, 79, 414, 0, 79, 0, 0, 0, 0, 678,
	1838, 0, 496, 325, 0, 0, 0, 0, 0, 0,
	0, 327, 118, 43, 0, 0, 0, 762, 0, 2303,
	118, 1408, 0, 0, 1409, 0, 0, 0, 0, 0,
	1403, 0, 0, 1272, 803, 146, 147, 118, 404, 405,
	406, 407, 408, 409, 79, 0, 412, 0, 79, 0,
	79, 426, 427, 428, 79, 435, 437, 438, 439, 0,
	441, 442, 430, 451, 326, 79, 79, 79, 79, 0,
	79, 445, 449, 134, 294, 925, 0, 946, 1075, 1076,
	1080, 0, 0, 0, 0, 1410, 1411, 1415, 1417, 0,
	1404, 1612, 804, 805, 0, 130, 0, 411, 80, 79,
	0, -2, 0, 79, 0, 423, 0, 429, 0, 440,
	0, 328, 0, 0, 0, 0, 0, 0, 923, 0,
	925, 0, 0, 0, 0, 1416, 1418, 806, 0, 807,
	0, 0, 0, 79, 0, 415, 419, 0, 0, 79,
	424, 0, 436, 431, 329, 452, 0, 79, 454, 457,
	450, 926, 924, 0, 0, 819, 821, 822, 0, 0,
	820, 410, 413, 79, 421, 0, 79, 453, 0, 0,
	1412, 1413, 823, 824, 825, 0, 79, 0, 455, 458,
	420, 0, -2, 456, 459, 422,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:785
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:814
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:938
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:963
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1009
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1027
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1050
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1063
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1076
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1115
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1130
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1139
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1143
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1153
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1160
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1210
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1220
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1254
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1283
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1304
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1343
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1361
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1385
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1407
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1439
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1454
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1488
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1500
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1513
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1549
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = []AccountName(nil)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1596
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1641
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1655
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1678
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1706
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1718
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1722
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1726
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1730
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1755
		{
			yyVAL.val = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1770
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1786
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1802
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1817
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1829
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1842
		{
			yyVAL.val = false
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1846
		{
			yyVAL.val = true
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1852
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1868
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1883
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1899
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1915
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1928
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1967
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1979
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.val = []string(nil)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2185
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2189
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2193
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2197
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2201
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2205
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2209
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = false
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = true
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2234
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2247
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2366
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2379
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2383
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2412
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2417
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2512
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2534
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = &Authentication{}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.val = yyDollar[1].val
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2549
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2553
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2557
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2565
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2569
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2573
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2577
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2585
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2591
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2599
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2629
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2669
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.val = EventStatus_Enable
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.val = EventStatus_Disable
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.val = BeforeStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.val = AfterStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.val = InsertStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.val = UpdateStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.val = DeleteStr
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2759
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2769
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2773
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2777
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2781
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2791
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2803
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2808
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2813
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 422:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2819
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2843
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2847
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2851
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2859
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2866
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2894
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2938
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2943
		{
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2954
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2964
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2968
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2979
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2983
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 456:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2987
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2998
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3002
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3006
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3035
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3039
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3047
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3107
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3115
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.val = &Resignal{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3141
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3153
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3159
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.val = Exprs(nil)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.val = Exprs(nil)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3247
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3274
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3304
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3377
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3433
		{
			yyVAL.val = BoolVal(false)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.val = BoolVal(false)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.val = BoolVal(true)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3446
		{
			yyVAL.val = ColumnType{}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3454
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3476
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3508
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3530
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3563
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3574
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3597
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3645
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3657
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3707
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3728
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3807
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3819
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3827
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3859
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3883
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3938
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3982
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.val = BoolVal(false)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.val = BoolVal(true)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = BoolVal(false)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = BoolVal(true)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4049
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.val = BoolVal(true)
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4070
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4082
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4086
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.val = ""
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4114
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = false
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = true
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4164
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4168
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4172
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4176
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4184
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4190
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4194
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4198
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4204
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.val = colKeyPrimary
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.val = colKey
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.val = colKeyUnique
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4226
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4238
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4242
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4310
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.val = false
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.val = true
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = ""
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.val = ""
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4349
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4359
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.val = false
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.val = true
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.bytes = nil
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4431
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4471
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4475
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4481
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4485
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4504
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.val = ":="
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4567
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4583
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4596
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4600
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4638
		{
			yyVAL.val = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4662
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4686
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4690
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4694
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4698
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4702
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4707
		{
			yyVAL.bytes = []byte(nil)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4717
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4731
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4754
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.val = Restrict
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4776
		{
			yyVAL.val = Cascade
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.val = NoAction
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{
			yyVAL.val = SetDefault
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4788
		{
			yyVAL.val = SetNull
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = true
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = true
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = false
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4832
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4836
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4844
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4848
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4864
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4868
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4876
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4884
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4888
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4892
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4896
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4920
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4928
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4956
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4960
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4972
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4984
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4988
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4992
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4996
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5004
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5115
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5126
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5136
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5156
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5165
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5173
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5183
		{
			yyVAL.val = false
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5187
		{
			yyVAL.val = true
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5192
		{
			yyVAL.val = ""
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5196
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5202
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5211
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5220
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5224
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 924:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5233
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5244
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5248
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5253
		{
			yyVAL.val = ""
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			yyVAL.val = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5261
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5266
		{
			yyVAL.val = string("")
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5270
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5282
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5296
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5311
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5331
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5344
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5368
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5386
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5405
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5424
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5450
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5472
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5486
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5500
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5518
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5537
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5547
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5557
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5567
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5577
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5587
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5597
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5607
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5617
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5632
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5648
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5658
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5668
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5684
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5698
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5712
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5726
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5740
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5767
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5780
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5790
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5800
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5812
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5828
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5842
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5859
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5869
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5889
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5899
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5909
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5926
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5939
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5968
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5989
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6010
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6029
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6215
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6219
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6223
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.val = true
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6233
		{
			yyVAL.val = false
		}
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6243
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6269
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6282
		{
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6284
		{
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6291
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6301
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6307
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6311
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6343
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6347
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6351
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6372
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6376
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6396
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6401
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6405
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6411
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6415
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6421
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6425
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6431
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6461
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6487
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6515
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6545
		{
			yyVAL.val = EventName{}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6549
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6555
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6559
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6571
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6595
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6611
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6615
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6621
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6646
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6671
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6689
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6706
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6723
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6743
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6763
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6778
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6793
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6812
		{

		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6816
		{
			yyVAL.val = Restrict
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6820
		{
			yyVAL.val = Cascade
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6826
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6839
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6854
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6860
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6864
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6868
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6881
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6893
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6899
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6903
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6910
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6914
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6920
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6924
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6932
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6938
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6946
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6956
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6967
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6978
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6989
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7001
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7013
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7026
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7039
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7050
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7061
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7072
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7083
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7093
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7103
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7116
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7126
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7137
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7147
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7157
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7168
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7180
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7192
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7206
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7219
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7230
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7244
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7256
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7266
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7277
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7290
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7300
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7312
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7323
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7336
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7356
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7367
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7378
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7389
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7403
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7413
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7423
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7433
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7445
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7451
		{
			yyVAL.val = false
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7455
		{
			yyVAL.val = true
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7461
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7471
		{
			yyVAL.val = ""
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7479
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7485
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7489
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7493
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7503
		{
			yyVAL.val = ""
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7507
		{
			yyVAL.val = SessionStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = GlobalStr
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7517
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7529
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7542
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7554
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7558
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7564
		{
			yyVAL.val = &Begin{}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7568
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7574
		{
			yyVAL.val = &Begin{}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7578
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7582
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7586
		{
			yyVAL.val = &Begin{}
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7591
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7595
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7600
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7604
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7609
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7613
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = &Commit{}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7625
		{
			yyVAL.val = &Rollback{}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7631
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7641
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7645
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7649
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7655
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7661
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7665
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7669
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7675
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7683
		{
			yyVAL.val = ""
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7687
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7692
		{
			yyVAL.val = false
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = true
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7708
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7728
		{
			setAllowComments(yylex, true)
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7732
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7740
		{
			yyVAL.val = Comments(nil)
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7744
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7750
		{
			yyVAL.val = UnionStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7754
		{
			yyVAL.val = UnionAllStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7758
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7764
		{
			yyVAL.val = IntersectStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7768
		{
			yyVAL.val = IntersectAllStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7772
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7778
		{
			yyVAL.val = ExceptStr
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = ExceptAllStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7791
		{
			yyVAL.val = QueryOpts{}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7795
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7806
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7817
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7828
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7839
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7850
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7862
		{
			yyVAL.val = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7866
		{
			yyVAL.val = AllStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7870
		{
			yyVAL.val = DistinctStr
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7876
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7884
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7895
		{
			yyVAL.val = &StarExpr{}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7899
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7903
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7907
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7913
		{
			yyVAL.val = &StarExpr{}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7917
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7931
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7935
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7941
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7946
		{
			yyVAL.val = ColIdent{}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7949
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = Exprs(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7958
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7963
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7967
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7972
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7976
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7987
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8010
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8025
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8029
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8033
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8037
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8044
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = Window(nil)
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8055
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8061
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8064
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8070
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8110
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8114
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8119
		{
			yyVAL.val = ColIdent{}
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8123
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8127
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8131
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8137
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8141
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8151
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8155
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8165
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8169
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8184
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8199
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8205
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8211
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8219
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8225
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8229
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8234
		{
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8236
		{
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8240
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8250
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8283
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8287
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8305
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8309
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8319
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8345
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8351
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8369
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8374
		{
			yyVAL.val = Expr(nil)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8384
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8388
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8393
		{
			yyVAL.val = Columns(nil)
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8397
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8403
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8407
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8413
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8417
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8423
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8427
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8441
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8445
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8459
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = JoinCondition{}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = JoinCondition{}
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8473
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8478
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8482
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8488
		{
			yyVAL.val = JoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8492
		{
			yyVAL.val = JoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8496
		{
			yyVAL.val = JoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8502
		{
			yyVAL.val = StraightJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8508
		{
			yyVAL.val = LeftJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8512
		{
			yyVAL.val = LeftJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8516
		{
			yyVAL.val = RightJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8520
		{
			yyVAL.val = RightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8534
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8538
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1398:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8548
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8555
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8560
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8566
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8570
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8574
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1404:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8579
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8590
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8594
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8598
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8614
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8618
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8622
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8628
		{
			yyVAL.val = &NullVal{}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8632
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8638
		{
			yyVAL.val = &NullVal{}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8642
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8648
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8652
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8658
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8715
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8727
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8732
		{
			yyVAL.val = Expr(nil)
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8742
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8746
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = ""
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8786
		{
			yyVAL.val = BoolVal(true)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8790
		{
			yyVAL.val = BoolVal(false)
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8838
		{
			yyVAL.val = IsNullStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = IsNotNullStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = IsTrueStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = IsFalseStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8864
		{
			yyVAL.val = EqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = LessThanStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = GreaterThanStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = LessEqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = NotEqualStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8893
		{
			yyVAL.val = Expr(nil)
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8897
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8903
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8907
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8911
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8917
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8932
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8939
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8949
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8959
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8963
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8967
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8971
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8979
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8983
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8987
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8991
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8995
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8999
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9003
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9007
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9011
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9015
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9027
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9031
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9035
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9039
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9059
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9067
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9081
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9085
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9089
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9109
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9113
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9123
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9127
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9131
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9135
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9139
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9143
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9147
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9151
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9196
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9247
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9251
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9287
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9303
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9307
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9311
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9315
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9319
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9323
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9327
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9331
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9335
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9339
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9351
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9356
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9360
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9371
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9375
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9384
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9388
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9392
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9420
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9424
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9432
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9463
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9467
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9489
		{
			yyVAL.val = ""
		}
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = BooleanModeStr
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1612:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9511
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9525
		{
			yyVAL.val = Armscii8Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9529
		{
			yyVAL.val = AsciiStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9533
		{
			yyVAL.val = Big5Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = UBinaryStr
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = Cp1250Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = Cp1251Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Cp1256Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = Cp1257Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Cp850Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = Cp852Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = Cp866Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = Cp932Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Dec8Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = EucjpmsStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = EuckrStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = Gb18030Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9589
		{
			yyVAL.val = Gb2312Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9593
		{
			yyVAL.val = GbkStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9597
		{
			yyVAL.val = Geostd8Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = GreekStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = HebrewStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = Hp8Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9613
		{
			yyVAL.val = Keybcs2Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9617
		{
			yyVAL.val = Koi8rStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9621
		{
			yyVAL.val = Koi8uStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9625
		{
			yyVAL.val = Latin1Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9629
		{
			yyVAL.val = Latin2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = Latin5Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = Latin7Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = MacceStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = MacromanStr
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9649
		{
			yyVAL.val = SjisStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9653
		{
			yyVAL.val = Swe7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9657
		{
			yyVAL.val = Tis620Str
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9661
		{
			yyVAL.val = Ucs2Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9665
		{
			yyVAL.val = UjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = Utf16Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = Utf16leStr
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = Utf32Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9681
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9695
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9699
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9703
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9707
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9723
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9730
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9734
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9742
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9758
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9789
		{
			yyVAL.val = Expr(nil)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9798
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9808
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9812
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9818
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = Expr(nil)
		}
	case 1689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9833
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9837
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9841
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9903
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9927
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = &NullVal{}
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9949
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9953
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9957
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9962
		{
			yyVAL.val = Exprs(nil)
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9966
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9972
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9976
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9987
		{
			yyVAL.val = Expr(nil)
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9997
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10002
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = AscScr
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = AscScr
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = DescScr
		}
	case 1737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10040
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10044
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10048
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10052
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10058
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10062
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10071
		{
			yyVAL.val = ""
		}
	case 1745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10075
		{
			yyVAL.val = ForUpdateStr
		}
	case 1746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10079
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10083
		{
			yyVAL.val = ShareModeStr
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10089
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10093
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10113
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10117
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10122
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10129
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10133
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10137
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1756:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10142
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10149
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10162
		{
			yyVAL.val = Columns(nil)
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10166
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10172
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10182
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10202
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10211
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10215
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10221
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10225
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10231
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = ValTuple{}
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10241
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10247
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10257
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10267
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10270
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10284
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10294
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10305
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10318
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10331
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10337
		{
			yyVAL.val = SetScope_Global
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = SetScope_Session
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10347
		{
			yyVAL.val = SetScope_Session
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = SetScope_Persist
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10355
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10361
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10365
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10369
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10379
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10386
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10393
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10397
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10401
		{
			yyVAL.val = &Default{}
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10405
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10414
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10424
		{
			yyVAL.val = 0
		}
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = 1
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10429
		{
			yyVAL.val = ""
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10431
		{
			yyVAL.val = IgnoreStr
		}
	case 1818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10441
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10454
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = UniqueStr
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = FulltextStr
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10462
		{
			yyVAL.val = SpatialStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = VectorStr
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10467
		{
			yyVAL.val = ""
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10469
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = ColIdent{}
		}
	case 1834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10474
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10482
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10492
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10499
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10505
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10516
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10520
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10524
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10529
		{
			yyVAL.val = string("")
		}
	case 1848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10531
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10534
		{
			yyVAL.val = string("")
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10536
		{
			yyVAL.val = IgnoreStr
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10538
		{
			yyVAL.val = ReplaceStr
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10541
		{
			yyVAL.val = BoolVal(false)
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10543
		{
			yyVAL.val = BoolVal(true)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10546
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = BoolVal(false)
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10559
		{
			yyVAL.val = BoolVal(true)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10564
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10568
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10573
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10577
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10585
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10589
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10594
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10598
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10603
		{
			yyVAL.val = &Lines{}
		}
	case 1867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10607
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10616
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10627
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10633
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10637
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10643
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10658
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10676
		{
			yyVAL.val = LockRead
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10680
		{
			yyVAL.val = LockReadLocal
		}
	case 1876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10684
		{
			yyVAL.val = LockWrite
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10688
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10694
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10700
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10711
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10721
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11651
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11660
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
