// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const XOR = 57426
const AND = 57427
const NOT = 57428
const BETWEEN = 57429
const CASE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const ELSEIF = 57434
const END = 57435
const LE = 57436
const GE = 57437
const NE = 57438
const NULL_SAFE_EQUAL = 57439
const IS = 57440
const LIKE = 57441
const REGEXP = 57442
const IN = 57443
const UNBOUNDED = 57444
const PARTITION = 57445
const RANGE = 57446
const ROWS = 57447
const GROUPS = 57448
const PRECEDING = 57449
const FOLLOWING = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_ARMSCII8 = 57458
const UNDERSCORE_ASCII = 57459
const UNDERSCORE_BIG5 = 57460
const UNDERSCORE_BINARY = 57461
const UNDERSCORE_CP1250 = 57462
const UNDERSCORE_CP1251 = 57463
const UNDERSCORE_CP1256 = 57464
const UNDERSCORE_CP1257 = 57465
const UNDERSCORE_CP850 = 57466
const UNDERSCORE_CP852 = 57467
const UNDERSCORE_CP866 = 57468
const UNDERSCORE_CP932 = 57469
const UNDERSCORE_DEC8 = 57470
const UNDERSCORE_EUCJPMS = 57471
const UNDERSCORE_EUCKR = 57472
const UNDERSCORE_GB18030 = 57473
const UNDERSCORE_GB2312 = 57474
const UNDERSCORE_GBK = 57475
const UNDERSCORE_GEOSTD8 = 57476
const UNDERSCORE_GREEK = 57477
const UNDERSCORE_HEBREW = 57478
const UNDERSCORE_HP8 = 57479
const UNDERSCORE_KEYBCS2 = 57480
const UNDERSCORE_KOI8R = 57481
const UNDERSCORE_KOI8U = 57482
const UNDERSCORE_LATIN1 = 57483
const UNDERSCORE_LATIN2 = 57484
const UNDERSCORE_LATIN5 = 57485
const UNDERSCORE_LATIN7 = 57486
const UNDERSCORE_MACCE = 57487
const UNDERSCORE_MACROMAN = 57488
const UNDERSCORE_SJIS = 57489
const UNDERSCORE_SWE7 = 57490
const UNDERSCORE_TIS620 = 57491
const UNDERSCORE_UCS2 = 57492
const UNDERSCORE_UJIS = 57493
const UNDERSCORE_UTF16 = 57494
const UNDERSCORE_UTF16LE = 57495
const UNDERSCORE_UTF32 = 57496
const UNDERSCORE_UTF8 = 57497
const UNDERSCORE_UTF8MB3 = 57498
const UNDERSCORE_UTF8MB4 = 57499
const INTERVAL = 57500
const JSON_EXTRACT_OP = 57501
const JSON_UNQUOTE_EXTRACT_OP = 57502
const CREATE = 57503
const ALTER = 57504
const DROP = 57505
const RENAME = 57506
const ANALYZE = 57507
const ADD = 57508
const MODIFY = 57509
const CHANGE = 57510
const SCHEMA = 57511
const TABLE = 57512
const INDEX = 57513
const INDEXES = 57514
const VIEW = 57515
const TO = 57516
const IGNORE = 57517
const IF = 57518
const PRIMARY = 57519
const COLUMN = 57520
const SPATIAL = 57521
const FULLTEXT = 57522
const KEY_BLOCK_SIZE = 57523
const CHECK = 57524
const ACTION = 57525
const CASCADE = 57526
const CONSTRAINT = 57527
const FOREIGN = 57528
const NO = 57529
const REFERENCES = 57530
const RESTRICT = 57531
const FIRST = 57532
const AFTER = 57533
const SHOW = 57534
const DESCRIBE = 57535
const EXPLAIN = 57536
const DATE = 57537
const ESCAPE = 57538
const REPAIR = 57539
const OPTIMIZE = 57540
const TRUNCATE = 57541
const FORMAT = 57542
const MAXVALUE = 57543
const REORGANIZE = 57544
const LESS = 57545
const THAN = 57546
const PROCEDURE = 57547
const TRIGGER = 57548
const TRIGGERS = 57549
const FUNCTION = 57550
const STATUS = 57551
const VARIABLES = 57552
const WARNINGS = 57553
const ERRORS = 57554
const KILL = 57555
const CONNECTION = 57556
const SEQUENCE = 57557
const ENABLE = 57558
const DISABLE = 57559
const EACH = 57560
const ROW = 57561
const BEFORE = 57562
const FOLLOWS = 57563
const PRECEDES = 57564
const DEFINER = 57565
const INVOKER = 57566
const INOUT = 57567
const OUT = 57568
const DETERMINISTIC = 57569
const CONTAINS = 57570
const READS = 57571
const MODIFIES = 57572
const SQL = 57573
const SECURITY = 57574
const TEMPORARY = 57575
const ALGORITHM = 57576
const MERGE = 57577
const TEMPTABLE = 57578
const UNDEFINED = 57579
const CLASS_ORIGIN = 57580
const SUBCLASS_ORIGIN = 57581
const MESSAGE_TEXT = 57582
const MYSQL_ERRNO = 57583
const CONSTRAINT_CATALOG = 57584
const CONSTRAINT_SCHEMA = 57585
const CONSTRAINT_NAME = 57586
const CATALOG_NAME = 57587
const SCHEMA_NAME = 57588
const TABLE_NAME = 57589
const COLUMN_NAME = 57590
const CURSOR_NAME = 57591
const SIGNAL = 57592
const RESIGNAL = 57593
const SQLSTATE = 57594
const DECLARE = 57595
const CONDITION = 57596
const CURSOR = 57597
const CONTINUE = 57598
const EXIT = 57599
const UNDO = 57600
const HANDLER = 57601
const FOUND = 57602
const SQLWARNING = 57603
const SQLEXCEPTION = 57604
const USER = 57605
const IDENTIFIED = 57606
const ROLE = 57607
const REUSE = 57608
const GRANT = 57609
const GRANTS = 57610
const REVOKE = 57611
const NONE = 57612
const ATTRIBUTE = 57613
const RANDOM = 57614
const PASSWORD = 57615
const INITIAL = 57616
const AUTHENTICATION = 57617
const SSL = 57618
const X509 = 57619
const CIPHER = 57620
const ISSUER = 57621
const SUBJECT = 57622
const ACCOUNT = 57623
const EXPIRE = 57624
const NEVER = 57625
const DAY = 57626
const OPTION = 57627
const OPTIONAL = 57628
const EXCEPT = 57629
const ADMIN = 57630
const PRIVILEGES = 57631
const MAX_QUERIES_PER_HOUR = 57632
const MAX_UPDATES_PER_HOUR = 57633
const MAX_CONNECTIONS_PER_HOUR = 57634
const MAX_USER_CONNECTIONS = 57635
const FLUSH = 57636
const FAILED_LOGIN_ATTEMPTS = 57637
const PASSWORD_LOCK_TIME = 57638
const REQUIRE = 57639
const PROXY = 57640
const ROUTINE = 57641
const TABLESPACE = 57642
const CLIENT = 57643
const SLAVE = 57644
const EVENT = 57645
const EXECUTE = 57646
const FILE = 57647
const RELOAD = 57648
const REPLICATION = 57649
const SHUTDOWN = 57650
const SUPER = 57651
const USAGE = 57652
const LOGS = 57653
const ENGINE = 57654
const ERROR = 57655
const GENERAL = 57656
const HOSTS = 57657
const OPTIMIZER_COSTS = 57658
const RELAY = 57659
const SLOW = 57660
const USER_RESOURCES = 57661
const NO_WRITE_TO_BINLOG = 57662
const CHANNEL = 57663
const BEGIN = 57664
const START = 57665
const TRANSACTION = 57666
const COMMIT = 57667
const ROLLBACK = 57668
const SAVEPOINT = 57669
const WORK = 57670
const RELEASE = 57671
const BIT = 57672
const TINYINT = 57673
const SMALLINT = 57674
const MEDIUMINT = 57675
const INT = 57676
const INTEGER = 57677
const BIGINT = 57678
const INTNUM = 57679
const SERIAL = 57680
const REAL = 57681
const DOUBLE = 57682
const FLOAT_TYPE = 57683
const DECIMAL = 57684
const NUMERIC = 57685
const DEC = 57686
const FIXED = 57687
const PRECISION = 57688
const TIME = 57689
const TIMESTAMP = 57690
const DATETIME = 57691
const YEAR = 57692
const CHAR = 57693
const VARCHAR = 57694
const BOOL = 57695
const CHARACTER = 57696
const VARBINARY = 57697
const NCHAR = 57698
const NVARCHAR = 57699
const NATIONAL = 57700
const VARYING = 57701
const TEXT = 57702
const TINYTEXT = 57703
const MEDIUMTEXT = 57704
const LONGTEXT = 57705
const LONG = 57706
const BLOB = 57707
const TINYBLOB = 57708
const MEDIUMBLOB = 57709
const LONGBLOB = 57710
const JSON = 57711
const ENUM = 57712
const GEOMETRY = 57713
const POINT = 57714
const LINESTRING = 57715
const POLYGON = 57716
const GEOMETRYCOLLECTION = 57717
const MULTIPOINT = 57718
const MULTILINESTRING = 57719
const MULTIPOLYGON = 57720
const LOCAL = 57721
const LOW_PRIORITY = 57722
const NULLX = 57723
const AUTO_INCREMENT = 57724
const APPROXNUM = 57725
const SIGNED = 57726
const UNSIGNED = 57727
const ZEROFILL = 57728
const COLLATION = 57729
const DATABASES = 57730
const SCHEMAS = 57731
const TABLES = 57732
const FULL = 57733
const PROCESSLIST = 57734
const COLUMNS = 57735
const FIELDS = 57736
const ENGINES = 57737
const PLUGINS = 57738
const NAMES = 57739
const CHARSET = 57740
const GLOBAL = 57741
const SESSION = 57742
const ISOLATION = 57743
const LEVEL = 57744
const READ = 57745
const WRITE = 57746
const ONLY = 57747
const REPEATABLE = 57748
const COMMITTED = 57749
const UNCOMMITTED = 57750
const SERIALIZABLE = 57751
const ENCRYPTION = 57752
const CURRENT_TIMESTAMP = 57753
const DATABASE = 57754
const CURRENT_DATE = 57755
const CURRENT_USER = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const UTC_DATE = 57760
const UTC_TIME = 57761
const UTC_TIMESTAMP = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const TRIM = 57768
const LEADING = 57769
const TRAILING = 57770
const BOTH = 57771
const GROUP_CONCAT = 57772
const SEPARATOR = 57773
const TIMESTAMPADD = 57774
const TIMESTAMPDIFF = 57775
const OVER = 57776
const WINDOW = 57777
const GROUPING = 57778
const CURRENT = 57779
const AVG = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const COUNT = 57784
const JSON_ARRAYAGG = 57785
const JSON_OBJECTAGG = 57786
const MAX = 57787
const MIN = 57788
const STDDEV_POP = 57789
const STDDEV = 57790
const STD = 57791
const STDDEV_SAMP = 57792
const SUM = 57793
const VAR_POP = 57794
const VARIANCE = 57795
const VAR_SAMP = 57796
const CUME_DIST = 57797
const DENSE_RANK = 57798
const FIRST_VALUE = 57799
const LAG = 57800
const LAST_VALUE = 57801
const LEAD = 57802
const NTH_VALUE = 57803
const NTILE = 57804
const ROW_NUMBER = 57805
const PERCENT_RANK = 57806
const RANK = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const UNUSED = 57815
const ARRAY = 57816
const DESCRIPTION = 57817
const EMPTY = 57818
const JSON_TABLE = 57819
const LATERAL = 57820
const MEMBER = 57821
const RECURSIVE = 57822
const ACTIVE = 57823
const BUCKETS = 57824
const CLONE = 57825
const COMPONENT = 57826
const DEFINITION = 57827
const ENFORCED = 57828
const EXCLUDE = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PATH = 57850
const PERSIST = 57851
const PERSIST_ONLY = 57852
const PRIVILEGE_CHECKS_USER = 57853
const PROCESS = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const SECONDARY = 57861
const SECONDARY_ENGINE = 57862
const SECONDARY_LOAD = 57863
const SECONDARY_UNLOAD = 57864
const SKIP = 57865
const SRID = 57866
const THREAD_PRIORITY = 57867
const TIES = 57868
const VCPU = 57869
const VISIBLE = 57870
const SYSTEM = 57871
const INFILE = 57872
const GENERATED = 57873
const ALWAYS = 57874
const STORED = 57875
const VIRTUAL = 57876
const NVAR = 57877
const PASSWORD_LOCK = 57878

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1123,
	-1, 43,
	188, 1187,
	189, 1205,
	-2, 237,
	-1, 49,
	227, 710,
	228, 710,
	-2, 699,
	-1, 557,
	176, 1215,
	-2, 1209,
	-1, 558,
	176, 1216,
	-2, 1210,
	-1, 703,
	99, 1503,
	176, 1503,
	-2, 1171,
	-1, 704,
	99, 1622,
	176, 1622,
	-2, 1172,
	-1, 709,
	99, 1527,
	176, 1527,
	-2, 1173,
	-1, 710,
	99, 1575,
	176, 1575,
	-2, 1174,
	-1, 711,
	99, 1576,
	176, 1576,
	-2, 1175,
	-1, 712,
	99, 1449,
	176, 1449,
	-2, 1179,
	-1, 714,
	99, 1552,
	176, 1552,
	-2, 1181,
	-1, 1237,
	1, 807,
	5, 807,
	12, 807,
	13, 807,
	14, 807,
	15, 807,
	17, 807,
	19, 807,
	30, 807,
	31, 807,
	56, 807,
	57, 807,
	58, 807,
	59, 807,
	60, 807,
	62, 807,
	63, 807,
	66, 807,
	67, 807,
	69, 807,
	70, 807,
	453, 807,
	555, 807,
	-2, 839,
	-1, 1243,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1339,
	1, 489,
	555, 489,
	-2, 487,
	-1, 1341,
	1, 489,
	555, 489,
	-2, 487,
	-1, 1502,
	176, 1218,
	-2, 1214,
	-1, 1668,
	44, 555,
	-2, 1461,
	-1, 1672,
	68, 553,
	72, 553,
	-2, 1497,
	-1, 1673,
	68, 555,
	-2, 1406,
	-1, 1676,
	68, 551,
	72, 551,
	-2, 1323,
	-1, 1677,
	68, 552,
	72, 552,
	-2, 1333,
	-1, 1724,
	1, 490,
	555, 490,
	-2, 487,
	-1, 1808,
	44, 598,
	195, 600,
	197, 598,
	198, 598,
	-2, 635,
	-1, 1884,
	5, 51,
	-2, 910,
	-1, 2196,
	69, 1380,
	70, 1380,
	176, 1380,
	-2, 741,
	-1, 2219,
	1, 864,
	5, 864,
	12, 864,
	13, 864,
	14, 864,
	15, 864,
	17, 864,
	19, 864,
	30, 864,
	31, 864,
	56, 864,
	57, 864,
	58, 864,
	59, 864,
	60, 864,
	62, 864,
	63, 864,
	66, 864,
	67, 864,
	69, 864,
	70, 864,
	453, 864,
	555, 864,
	-2, 839,
	-1, 2329,
	195, 601,
	-2, 599,
	-1, 2390,
	5, 51,
	-2, 1143,
	-1, 2606,
	41, 1225,
	-2, 1223,
	-1, 2713,
	5, 51,
	-2, 1146,
}

const yyPrivate = 57344

const yyLast = 37496

var yyAct = [...]int{
	623, 80, 2906, 2027, 2930, 2937, 929, 2813, 2908, 2888,
	2812, 2889, 2845, 2717, 429, 2722, 3, 2725, 7, 2787,
	2695, 558, 2273, 2138, 2626, 2508, 2724, 6, 2700, 2693,
	2780, 1274, 560, 2723, 5, 2726, 8, 2402, 2548, 2233,
	2785, 2653, 2606, 2213, 728, 1919, 1949, 2121, 2189, 1192,
	1719, 1620, 1626, 622, 2489, 1678, 2608, 2290, 1743, 549,
	1970, 1374, 83, 1660, 2465, 2459, 412, 415, 2443, 129,
	1479, 2718, 129, 454, 454, 2110, 2234, 1624, 129, 2190,
	542, 80, 460, 2323, 1976, 1669, 563, 2313, 457, 457,
	475, 575, 2120, 2043, 93, 962, 541, 565, 1920, 1710,
	1833, 129, 2186, 726, 2198, 1659, 945, 106, 2205, 2160,
	1472, 1527, 129, 1807, 1770, 2088, 129, 731, 1536, 985,
	1376, 1599, 1422, 1658, 1665, 1977, 1350, 1603, 1394, 1727,
	2018, 705, 1487, 1726, 1725, 1504, 129, 457, 1234, 731,
	1090, 1706, 1254, 1610, 1233, 723, 1593, 129, 1237, 1097,
	993, 1723, 545, 701, 1014, 722, 1253, 702, 697, 724,
	1093, 1111, 1208, 474, 1694, 1427, 432, 431, 1787, 992,
	567, 912, 1345, 917, 1342, 85, 694, 928, 708, 102,
	1245, 1209, 1990, 2969, 2965, 98, 1101, 2960, 1992, 2945,
	2943, 2925, 555, 2901, 2853, 82, 2655, 2654, 2247, 1420,
	2430, 2916, 2796, 1997, 1996, 2887, 2271, 2585, 2711, 1756,
	36, 1756, 424, 87, 88, 89, 90, 91, 447, 2444,
	441, 452, 435, 2583, 36, 1993, 2598, 36, 2446, 72,
	39, 40, 2055, 2867, 1914, 36, 36, 2771, 2586, 2287,
	1999, 2795, 1983, 442, 2640, 2181, 2673, 472, 69, 1984,
	2696, 1915, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1127, 1855, 2533, 1137, 2384, 911, 1786,
	2034, 2710, 81, 914, 2791, 919, 920, 1622, 2791, 1648,
	110, 949, 950, 2131, 2228, 953, 81, 922, 1083, 81,
	1958, 2786, 1443, 1957, 1645, 1646, 1959, 81, 81, 678,
	1644, 684, 686, 685, 682, 683, 681, 680, 679, 2788,
	2229, 2230, 1042, 2788, 72, 39, 40, 951, 952, 423,
	2422, 2423, 965, 99, 1423, 422, 1426, 1468, 1469, 1255,
	2001, 1256, 966, 967, 1050, 1680, 41, 464, 1785, 1011,
	1682, 1682, 718, 2449, 120, 116, 117, 2519, 118, 1424,
	1425, 1695, 1686, 1688, 1995, 1687, 1700, 1998, 1695, 1815,
	1809, 1810, 2371, 1808, 1811, 1812, 1707, 2369, 406, 426,
	421, 1406, 975, 471, 2792, 2085, 1464, 1463, 2792, 1462,
	122, 121, 1461, 2447, 2448, 2450, 2451, 2452, 1460, 1459,
	2077, 434, 433, 436, 1046, 1047, 465, 972, 2460, 1818,
	129, 440, 1026, 2050, 2882, 2611, 2463, 2312, 2082, 80,
	80, 1798, 1057, 1817, 1816, 1058, 2815, 2814, 444, 2297,
	2461, 2462, 448, 101, 979, 983, 980, 2466, 2467, 2468,
	2469, 2667, 2584, 112, 111, 982, 451, 2759, 123, 2761,
	124, 2288, 981, 2677, 129, 2054, 1026, 2291, 2292, 2293,
	2294, 2295, 2291, 2292, 2293, 2294, 2295, 2477, 2485, 1799,
	1454, 1024, 1744, 1538, 2821, 2052, 2475, 2934, 1079, 2580,
	114, 2850, 2848, 2849, 2578, 108, 1087, 108, 973, 974,
	2577, 2675, 1348, 108, 2602, 2300, 113, 109, 113, 2576,
	1026, 1357, 1358, 1356, 2575, 129, 2574, 2161, 2572, 918,
	416, 916, 915, 2573, 413, 963, 2835, 964, 966, 967,
	1428, 2032, 2903, 2800, 2801, 961, 1373, 103, 1734, 104,
	2663, 2664, 407, 2720, 948, 1738, 1739, 918, 2912, 2404,
	1940, 2907, 2659, 437, 438, 439, 445, 1433, 449, 450,
	453, 2885, 417, 2068, 2069, 1430, 2910, 1733, 1429, 1049,
	958, 551, 959, 960, 957, 2033, 2862, 1146, 2652, 1994,
	1148, 2490, 2491, 115, 1273, 2237, 2941, 2035, 2096, 1033,
	1273, 1273, 1273, 1114, 2096, 1272, 2955, 2669, 2163, 1814,
	2094, 2328, 2500, 2970, 2044, 2967, 1246, 119, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	2270, 2045, 1190, 2641, 1194, 2445, 425, 1596, 2314, 1031,
	1792, 2501, 2961, 110, 2107, 2946, 913, 931, 2549, 1191,
	1629, 1631, 1076, 2679, 1407, 976, 2897, 1695, 2053, 2008,
	1685, 1025, 2551, 1059, 2789, 470, 1975, 1147, 2789, 1032,
	73, 1028, 1709, 1240, 2076, 2073, 100, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 2581, 1207, 1210,
	1210, 1210, 1216, 1210, 1210, 1216, 1210, 1216, 1225, 1226,
	1227, 1228, 79, 1238, 2709, 1029, 1030, 2674, 2599, 1426,
	2601, 2299, 414, 2668, 2056, 1036, 79, 414, 1991, 79,
	2058, 126, 2760, 129, 129, 129, 1078, 79, 79, 1753,
	411, 1085, 1424, 1425, 1752, 2165, 414, 1022, 1722, 731,
	2169, 409, 2164, 2057, 2162, 2909, 2911, 1793, 2939, 2167,
	414, 2940, 443, 2938, 1232, 73, 1362, 1360, 977, 1975,
	1975, 2499, 2166, 910, 696, 2046, 2047, 1947, 720, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 410, 2168, 2170, 1630,
	2550, 1946, 1945, 909, 2071, 1975, 1980, 2504, 926, 1082,
	921, 1267, 378, 1893, 2354, 1975, 112, 111, 708, 940,
	1241, 1890, 2346, 708, 36, 37, 72, 39, 40, 2075,
	1974, 1149, 1150, 2106, 2074, 1962, 1954, 2103, 59, 1850,
	1838, 1823, 1737, 1735, 78, 1482, 1266, 1251, 41, 63,
	64, 1117, 941, 2672, 1127, 60, 1649, 1137, 1137, 1333,
	2566, 2437, 2435, 1258, 2308, 1640, 1404, 2694, 1259, 2836,
	2837, 1475, 1211, 1213, 1215, 1217, 1219, 1221, 1222, 1224,
	1021, 1110, 50, 2833, 2834, 2515, 81, 2260, 2706, 2705,
	2115, 1212, 1214, 1604, 1218, 1220, 2111, 1223, 1271, 2588,
	1244, 1109, 1107, 2203, 2202, 96, 1249, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1110,
	2567, 2438, 2436, 1974, 1974, 1268, 1027, 1034, 1035, 1037,
	1038, 1039, 1040, 1041, 2589, 1043, 1044, 1045, 1395, 1048,
	1415, 1051, 1052, 1053, 1054, 1055, 930, 2261, 1264, 1974,
	95, 984, 1511, 924, 1762, 2102, 2094, 454, 2505, 1974,
	2099, 731, 129, 2098, 2101, 1352, 2094, 1509, 1510, 1508,
	1273, 457, 457, 2095, 2096, 457, 454, 923, 955, 1149,
	1150, 2183, 129, 1594, 1375, 129, 2959, 1149, 1150, 94,
	457, 457, 1888, 129, 1887, 2898, 1889, 43, 74, 46,
	45, 48, 129, 129, 129, 129, 129, 1108, 1109, 1107,
	1107, 1351, 1108, 1109, 1107, 1355, 1378, 1130, 1131, 1132,
	1133, 1134, 1127, 457, 947, 1137, 1110, 1110, 49, 77,
	76, 1110, 1108, 1109, 1107, 47, 1396, 968, 1098, 2846,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 1118, 65,
	1137, 1110, 1763, 561, 2949, 2931, 2948, 2245, 1340, 454,
	1108, 1109, 1107, 1402, 2865, 933, 934, 935, 936, 937,
	938, 939, 942, 457, 457, 457, 956, 2476, 731, 1110,
	2470, 1379, 1108, 1109, 1107, 1484, 57, 58, 81, 1418,
	2963, 2956, 2757, 1452, 1390, 1391, 1392, 1393, 2846, 1507,
	2871, 1110, 2870, 66, 1594, 67, 1905, 1681, 457, 1485,
	80, 469, 1486, 457, 457, 1436, 1015, 1193, 1104, 946,
	2764, 1338, 1398, 1353, 1399, 1466, 1354, 1337, 1094, 2670,
	68, 1095, 970, 477, 129, 1064, 129, 1364, 2758, 731,
	1372, 1371, 1494, 1496, 1497, 2957, 2756, 1381, 2714, 1495,
	1383, 1384, 2596, 2595, 1458, 2594, 2593, 129, 51, 75,
	2587, 53, 54, 61, 1114, 62, 1108, 1109, 1107, 2429,
	1206, 2130, 2428, 2023, 2900, 2671, 1108, 1109, 1107, 80,
	2021, 1473, 1480, 1481, 2847, 1110, 2002, 1410, 1411, 1017,
	1016, 1413, 1502, 1401, 1191, 1110, 1835, 1836, 1837, 1088,
	691, 692, 2855, 1528, 1505, 1529, 1960, 1416, 1961, 731,
	2854, 1501, 1531, 1532, 2024, 1431, 2818, 2816, 1432, 1435,
	1108, 1109, 1107, 2770, 990, 1194, 2666, 2665, 2185, 2651,
	1074, 1108, 1109, 1107, 2603, 2571, 731, 731, 2529, 1110,
	1574, 2473, 2472, 2471, 1108, 1109, 1107, 989, 1506, 2439,
	1110, 2426, 2319, 1453, 2253, 2019, 1456, 73, 1782, 1465,
	1757, 1412, 2843, 1110, 2842, 2676, 2649, 2620, 1500, 1623,
	1980, 2614, 2497, 1632, 2357, 2342, 1238, 2338, 1470, 2330,
	1238, 2301, 129, 2285, 1191, 2284, 2283, 2063, 2062, 1775,
	129, 1759, 129, 1758, 1530, 1408, 1405, 129, 129, 1370,
	1369, 129, 129, 129, 1498, 1341, 79, 1339, 1012, 943,
	1070, 420, 418, 2540, 2868, 1546, 1363, 1580, 1583, 1056,
	1551, 731, 731, 1089, 1595, 2613, 1378, 1635, 2413, 2861,
	2562, 1637, 1069, 1065, 1066, 1067, 1068, 1071, 1072, 1073,
	1075, 1502, 1503, 2777, 1089, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1653, 1628, 1619, 2561, 724, 2280, 1241, 2413, 2775, 708,
	2413, 2773, 2254, 1241, 1634, 1534, 1246, 1241, 1655, 1542,
	2413, 2657, 2540, 2645, 1742, 1231, 1022, 1243, 2540, 2556,
	1553, 1554, 2540, 1089, 2540, 2539, 2413, 2412, 2394, 1089,
	1750, 1633, 2828, 1566, 1950, 129, 1333, 1570, 1822, 1089,
	84, 129, 129, 457, 457, 457, 2612, 1654, 129, 2268,
	2267, 1591, 2348, 1950, 1741, 1586, 1674, 2264, 2265, 2264,
	2263, 1848, 1089, 1597, 1216, 2201, 1642, 1607, 1089, 1638,
	1641, 1382, 1795, 1794, 1647, 1606, 1666, 129, 129, 129,
	1950, 1656, 2187, 1748, 1749, 2201, 1663, 1712, 1713, 1714,
	1715, 1607, 1400, 1477, 1848, 1716, 1717, 580, 579, 582,
	583, 584, 585, 129, 2349, 129, 581, 586, 1778, 731,
	2349, 1572, 1779, 731, 1607, 1696, 1697, 1698, 1699, 1612,
	1615, 1616, 1617, 1613, 1247, 1614, 1618, 1708, 1247, 2206,
	2207, 1061, 1820, 1193, 1572, 731, 1897, 2201, 731, 1572,
	1089, 1270, 1269, 1060, 1476, 1019, 1020, 1437, 1020, 2782,
	1440, 1441, 1442, 1731, 1444, 1445, 2388, 477, 1446, 1756,
	2281, 1764, 1839, 2266, 1447, 1760, 1769, 2215, 1448, 1449,
	2087, 1450, 1451, 1964, 1784, 1643, 1848, 1877, 1768, 1876,
	1248, 1414, 1250, 1755, 1248, 1478, 1246, 1502, 1084, 1022,
	1612, 1615, 1616, 1617, 1613, 1089, 1614, 1618, 1434, 1455,
	1421, 1361, 1359, 1720, 1252, 719, 1501, 81, 2797, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 2774, 1505, 1137, 2214, 1777, 1773, 2377, 2619, 1241,
	2617, 1490, 1491, 1492, 1336, 1115, 1783, 2431, 1457, 1682,
	2400, 1711, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1127, 696, 2244, 1137, 1368, 2206, 2207,
	1790, 1707, 1776, 1654, 1916, 1918, 1506, 81, 1238, 1238,
	1238, 1238, 1238, 1968, 1385, 1386, 1387, 1388, 1389, 1917,
	1819, 1026, 1797, 621, 1623, 1800, 1941, 1844, 1827, 129,
	129, 129, 129, 129, 1736, 1238, 1702, 1825, 1826, 1574,
	1701, 129, 1334, 1009, 1840, 129, 1771, 1772, 428, 129,
	2920, 1922, 1804, 2918, 2890, 2279, 129, 2209, 1193, 2187,
	2025, 1366, 1578, 1579, 1062, 1126, 1125, 1135, 1136, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1127, 1023, 1018, 1137,
	731, 1944, 1952, 1932, 1953, 1930, 1951, 1834, 1933, 2212,
	1931, 2211, 1882, 1921, 1934, 1929, 1616, 1617, 1928, 546,
	547, 2839, 1841, 1842, 1843, 1241, 1241, 1241, 1241, 1241,
	1936, 2794, 2118, 1824, 1488, 715, 459, 2827, 1943, 727,
	2391, 1241, 1102, 1103, 1832, 1831, 2530, 2496, 1652, 708,
	2416, 2337, 1241, 2336, 1979, 1981, 1982, 2252, 2251, 1904,
	2250, 932, 731, 1972, 129, 2681, 1467, 1924, 1925, 1332,
	1927, 1100, 1923, 2239, 1948, 1926, 2684, 731, 2769, 731,
	2768, 2607, 1935, 457, 1965, 2817, 2605, 2662, 2661, 1489,
	419, 1409, 1333, 2114, 1258, 2590, 2591, 129, 457, 454,
	1898, 1899, 1900, 2113, 2275, 2012, 1955, 2067, 1091, 1265,
	1007, 1543, 1544, 991, 457, 988, 1963, 1973, 1718, 1978,
	1092, 987, 944, 1351, 1556, 1557, 1558, 1559, 2061, 1967,
	2878, 2624, 2623, 1729, 2386, 457, 2506, 731, 2060, 1571,
	1573, 80, 1781, 457, 2478, 1577, 1730, 1854, 1856, 1480,
	1481, 2479, 2829, 2020, 1365, 2762, 1191, 2609, 2420, 986,
	1868, 1869, 1870, 1871, 731, 731, 2274, 1721, 2003, 2004,
	129, 2022, 1102, 1103, 2031, 2010, 2139, 96, 2029, 2030,
	731, 1471, 1080, 1081, 1830, 2017, 2877, 2876, 2051, 2875,
	2568, 1803, 1829, 971, 543, 2065, 2820, 731, 2819, 2766,
	2685, 2632, 2628, 544, 84, 2627, 2116, 2117, 2509, 1950,
	2037, 2038, 2039, 2921, 1605, 1502, 2064, 2922, 2921, 468,
	2317, 2083, 2123, 2081, 2080, 1796, 1894, 2072, 2070, 1891,
	1636, 1801, 1397, 1105, 1501, 2922, 2192, 80, 2642, 2249,
	1474, 719, 466, 2736, 52, 2097, 86, 2108, 2109, 2738,
	19, 2112, 2193, 2091, 2089, 2100, 2105, 2086, 731, 55,
	731, 2217, 1098, 2737, 18, 1, 2221, 2222, 2223, 2739,
	20, 2740, 21, 1791, 2092, 1438, 2125, 2735, 15, 1922,
	2188, 2124, 2458, 731, 2066, 2182, 2200, 2129, 2457, 2191,
	2464, 2133, 2734, 14, 2011, 2286, 2013, 2014, 2015, 2016,
	1473, 2728, 10, 2289, 731, 2049, 731, 2474, 731, 1349,
	731, 2246, 2751, 34, 2216, 2579, 2220, 927, 2227, 2172,
	2171, 1921, 2749, 33, 2748, 32, 1600, 2747, 28, 2746,
	27, 1740, 2225, 2745, 26, 2743, 23, 1745, 2742, 22,
	2744, 24, 1013, 1746, 1747, 2767, 2123, 2195, 2733, 13,
	1754, 2680, 1774, 2682, 2241, 2210, 1883, 2242, 2127, 2243,
	2730, 12, 2729, 11, 2727, 9, 2218, 129, 2604, 2481,
	2442, 2441, 2042, 2041, 1008, 2238, 1419, 2240, 1906, 454,
	2090, 1767, 2093, 1751, 1813, 2692, 1802, 2296, 1063, 2153,
	2154, 1667, 2232, 1716, 457, 1717, 2282, 1657, 721, 129,
	457, 92, 1761, 2173, 2174, 1015, 2175, 2176, 2231, 954,
	2177, 386, 1664, 129, 1805, 457, 1988, 731, 457, 2683,
	1821, 1010, 457, 457, 1987, 457, 2000, 1679, 477, 2276,
	2277, 2278, 1724, 2298, 1728, 1986, 1985, 2678, 1989, 1278,
	2303, 1276, 731, 1277, 1275, 1280, 129, 731, 1279, 390,
	1260, 2807, 2356, 1106, 731, 2219, 1115, 731, 107, 56,
	2498, 2104, 2140, 462, 463, 97, 2143, 2144, 2145, 105,
	2326, 2148, 392, 1145, 1828, 1956, 706, 707, 1846, 699,
	1086, 2704, 2779, 1849, 2799, 1096, 2697, 2347, 1851, 1852,
	2257, 1903, 1205, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 2350, 2382, 1867, 2304, 2248, 1592, 2320, 1872, 1873,
	1874, 1875, 2341, 564, 1939, 1879, 1880, 1881, 2327, 1333,
	2514, 2321, 1884, 1885, 1886, 2699, 1493, 578, 577, 576,
	1892, 573, 574, 1895, 1896, 2790, 1483, 1913, 1901, 129,
	1119, 2269, 562, 1907, 553, 1908, 1909, 1910, 1236, 1911,
	1912, 1229, 1780, 1611, 1609, 2305, 731, 1608, 1367, 695,
	2208, 2204, 1621, 731, 731, 731, 1922, 1235, 1937, 1938,
	1239, 70, 969, 731, 408, 2383, 2639, 38, 467, 2408,
	2409, 2410, 548, 2395, 477, 2367, 731, 25, 17, 978,
	16, 1806, 2406, 925, 80, 42, 44, 2036, 2433, 1732,
	2806, 2905, 2418, 2255, 2256, 994, 2929, 2844, 1921, 2432,
	2259, 2387, 31, 30, 29, 2741, 1332, 2262, 2750, 2732,
	2396, 129, 2731, 2892, 2891, 4, 2411, 1077, 71, 35,
	2078, 717, 2, 0, 2407, 2454, 2455, 2456, 2084, 2352,
	0, 0, 0, 0, 2417, 715, 0, 0, 0, 0,
	715, 1261, 0, 0, 0, 0, 0, 1965, 0, 457,
	0, 2421, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 2434, 0, 0, 0, 0, 2492, 2493, 0, 1683,
	1684, 0, 1689, 1690, 1691, 1692, 1693, 0, 731, 2184,
	129, 2379, 2380, 2381, 0, 2453, 731, 2494, 0, 0,
	1703, 1704, 1705, 0, 0, 0, 2028, 0, 0, 2192,
	0, 0, 2192, 2535, 0, 2483, 2502, 2511, 2512, 2484,
	2510, 2482, 0, 0, 0, 2217, 2488, 0, 2534, 0,
	2507, 2480, 2495, 2487, 2226, 2238, 731, 0, 2123, 2059,
	0, 2558, 731, 1184, 1185, 0, 2503, 129, 2425, 129,
	2427, 0, 0, 1716, 0, 731, 2564, 0, 2538, 2419,
	2532, 0, 2191, 0, 0, 2191, 1241, 477, 0, 0,
	0, 0, 0, 731, 0, 0, 2565, 0, 2541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2531, 0,
	0, 2563, 0, 0, 0, 2128, 2537, 0, 2555, 0,
	0, 2136, 0, 2542, 2547, 2553, 2554, 0, 0, 2569,
	2552, 0, 2119, 2146, 2147, 0, 1628, 0, 2543, 0,
	0, 0, 0, 2376, 0, 0, 2155, 2625, 0, 0,
	2159, 2570, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 731, 2582, 1137, 0, 0, 2597, 2592,
	2518, 0, 0, 1335, 2192, 2600, 80, 2424, 0, 1343,
	1346, 2610, 0, 0, 2194, 0, 0, 0, 2615, 2616,
	0, 2644, 0, 2516, 2517, 0, 2618, 2629, 2622, 0,
	1343, 1346, 731, 0, 0, 0, 80, 2520, 2521, 2522,
	2523, 2630, 0, 0, 2343, 2527, 2224, 2631, 0, 0,
	0, 2658, 2643, 0, 0, 551, 2648, 2191, 0, 0,
	2307, 0, 2660, 2311, 0, 0, 2647, 2315, 2316, 0,
	2318, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 1238, 0, 1137, 1135, 1136, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 2650, 0, 1137, 0,
	0, 457, 0, 0, 129, 0, 0, 0, 0, 731,
	0, 731, 0, 477, 0, 0, 0, 0, 0, 2385,
	1439, 477, 0, 0, 0, 2702, 1193, 2688, 0, 2690,
	0, 80, 2719, 0, 2687, 0, 2397, 2398, 2721, 2689,
	2399, 2686, 0, 2401, 129, 0, 0, 0, 2703, 0,
	0, 1193, 2707, 0, 0, 0, 0, 1922, 2712, 2272,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2559, 0, 2560, 0, 0,
	1241, 727, 0, 0, 0, 0, 731, 0, 731, 0,
	0, 2302, 2763, 2765, 0, 2802, 0, 2783, 0, 1921,
	0, 0, 0, 0, 2772, 2306, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 2793, 0, 0,
	0, 2656, 2351, 0, 0, 0, 80, 2648, 2798, 0,
	0, 0, 0, 2005, 2006, 2007, 2009, 0, 2339, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 1533, 0, 0, 0, 0, 0, 2823, 2363, 2825,
	0, 0, 0, 0, 0, 0, 731, 0, 2822, 2372,
	2373, 0, 0, 2841, 2831, 2378, 2832, 2826, 1564, 1565,
	0, 2830, 0, 0, 2824, 0, 2691, 0, 2811, 731,
	2389, 2390, 0, 2392, 0, 2838, 2393, 0, 454, 0,
	2139, 715, 0, 0, 2486, 2840, 2859, 0, 0, 2851,
	0, 0, 0, 457, 0, 0, 2405, 2860, 80, 0,
	731, 0, 0, 2864, 80, 0, 0, 2872, 2874, 2863,
	731, 2881, 0, 0, 2869, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 731, 2884, 715, 80, 0, 0,
	0, 2883, 2899, 0, 2902, 2886, 2915, 2896, 0, 454,
	727, 0, 2904, 727, 727, 2923, 2895, 2914, 80, 2919,
	2917, 80, 80, 2894, 457, 2893, 80, 0, 2924, 2881,
	0, 2926, 0, 2932, 0, 0, 2879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 2942, 80,
	0, 0, 0, 2881, 2950, 0, 2952, 0, 0, 2947,
	0, 0, 0, 2440, 80, 0, 80, 0, 0, 0,
	80, 2881, 0, 2881, 0, 0, 0, 0, 0, 0,
	2962, 80, 0, 0, 80, 0, 80, 0, 2881, 0,
	80, 0, 0, 2881, 2966, 551, 0, 2881, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2236, 2134, 2135, 0, 0, 0, 0, 0,
	0, 0, 2141, 2142, 0, 0, 0, 2524, 2525, 2526,
	0, 2528, 0, 0, 2149, 2150, 2151, 2152, 0, 0,
	0, 2156, 2157, 2158, 0, 0, 127, 0, 0, 405,
	0, 0, 0, 0, 0, 127, 2544, 2545, 2546, 0,
	0, 0, 0, 0, 0, 0, 0, 2557, 0, 0,
	0, 1789, 0, 0, 0, 1789, 0, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 698,
	716, 2913, 0, 127, 0, 0, 0, 1789, 0, 0,
	1789, 0, 0, 0, 0, 0, 2258, 0, 0, 0,
	0, 2698, 2701, 127, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 727, 0, 2935, 0,
	0, 0, 2325, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 2332, 2334, 0, 0, 0, 0, 0, 0,
	0, 0, 2325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2633, 2634, 0, 0, 2635, 2636,
	2637, 2638, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 1540, 1541, 0,
	0, 0, 1545, 0, 1547, 1548, 1549, 1550, 0, 1552,
	0, 0, 1555, 0, 0, 0, 0, 1560, 1561, 1562,
	1563, 0, 0, 0, 1567, 1568, 1569, 0, 1629, 1631,
	2375, 0, 1575, 1576, 0, 0, 0, 1582, 1585, 0,
	1590, 0, 0, 0, 0, 0, 2803, 2804, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 401, 0, 0,
	715, 0, 1598, 0, 1601, 1602, 0, 0, 0, 2364,
	2365, 0, 2366, 0, 0, 2368, 2701, 2370, 0, 0,
	0, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 0, 0, 1137, 715, 2708, 0, 0,
	2353, 0, 2713, 0, 0, 0, 0, 0, 2355, 0,
	0, 0, 727, 0, 2716, 0, 0, 0, 2358, 2359,
	0, 0, 0, 0, 0, 0, 0, 2362, 1126, 1125,
	1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127,
	2873, 0, 1137, 2414, 2415, 0, 2715, 0, 0, 0,
	2776, 0, 0, 0, 0, 0, 379, 1630, 0, 0,
	0, 0, 2784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 2325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 127, 0, 2040,
	0, 2048, 0, 0, 0, 0, 2325, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 2126, 2329, 0, 0,
	0, 0, 391, 399, 400, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 2951, 0, 0, 0, 0,
	0, 127, 0, 491, 1126, 1125, 1135, 1136, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1127, 0, 388, 1137, 2079,
	389, 499, 0, 397, 398, 0, 0, 0, 0, 477,
	0, 477, 0, 0, 0, 0, 0, 2236, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 727, 0, 0,
	0, 0, 476, 0, 1121, 2236, 1124, 0, 0, 0,
	0, 0, 727, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	0, 1122, 1123, 1120, 727, 0, 0, 0, 0, 2137,
	394, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 0, 0, 1137, 539, 0, 0, 0,
	0, 395, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 497, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 492, 0, 487, 715, 0,
	727, 1847, 2199, 0, 500, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 2374, 0, 0,
	1865, 1866, 0, 2953, 2954, 2199, 380, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 727, 505, 727, 0,
	727, 0, 2235, 513, 481, 0, 517, 0, 1902, 393,
	383, 384, 0, 404, 479, 0, 0, 385, 387, 0,
	381, 403, 402, 0, 0, 0, 0, 0, 495, 519,
	0, 0, 0, 0, 0, 0, 493, 494, 496, 523,
	0, 525, 531, 0, 0, 0, 0, 0, 0, 1089,
	0, 2236, 0, 2236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 1126, 1125, 1135, 1136, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1127, 0, 0, 1137,
	127, 127, 127, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 716, 1126, 1125, 1135, 1136,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 0, 2310,
	1137, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2335, 0, 0, 0, 0, 2340,
	36, 0, 72, 39, 40, 0, 2344, 0, 0, 2345,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 2361, 0, 0, 41, 532, 533, 0, 0, 0,
	0, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 2236, 1126,
	1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1127, 0, 0, 1137, 0, 0, 0, 2752, 0, 0,
	2928, 2931, 2927, 2360, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 2180, 0, 2403, 0,
	0, 0, 0, 0, 0, 2403, 2403, 2403, 0, 0,
	0, 2179, 0, 0, 0, 727, 0, 0, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 2403, 0,
	0, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1127, 0, 0, 1137, 0, 0, 0, 127,
	2178, 0, 0, 0, 1344, 1347, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 127,
	0, 0, 127, 0, 0, 1344, 1347, 0, 2753, 0,
	1377, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 127, 127, 127, 49, 77, 76, 0, 0, 0,
	0, 47, 1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1127, 0, 0, 1137, 1126, 1125, 1135,
	1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 0,
	727, 1137, 0, 0, 0, 0, 0, 0, 727, 0,
	1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1127, 57, 58, 1137, 2754, 1126, 1125, 1135, 1136,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127, 0, 66,
	1137, 67, 1845, 0, 0, 0, 0, 0, 2536, 0,
	0, 0, 0, 0, 2403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 2235, 0, 0,
	1126, 1125, 1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1127, 0, 0, 1137, 2235, 0, 0, 0, 0,
	0, 127, 0, 476, 2755, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 1539,
	1539, 0, 0, 0, 1539, 1539, 1539, 1539, 1539, 1539,
	1539, 1539, 0, 0, 1539, 0, 0, 0, 0, 1539,
	1539, 1539, 1539, 73, 2646, 0, 1539, 1539, 1539, 0,
	0, 0, 0, 0, 1539, 1539, 0, 0, 0, 1539,
	1539, 0, 1539, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 1539, 1539, 1539, 0, 127,
	0, 0, 79, 0, 0, 0, 0, 127, 0, 476,
	0, 0, 0, 0, 127, 127, 0, 0, 127, 1639,
	1377, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2235, 0, 2235, 0, 1377, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2322, 0, 715, 0, 2324, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 499, 0, 0, 78, 0, 0, 2778, 41,
	2781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 127, 127,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 2933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 1766, 127, 0, 727, 0,
	0, 0, 2752, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2235, 0,
	127, 0, 476, 0, 497, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 0,
	0, 2403, 0, 526, 0, 0, 492, 0, 487, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2781, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 2866, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 504, 502, 0, 727, 0, 505, 0,
	0, 0, 0, 2753, 513, 481, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 495,
	519, 0, 0, 1539, 0, 0, 0, 493, 494, 496,
	523, 1539, 525, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 1539, 1539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 0, 0, 1539,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2754, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	1539, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 1969, 716, 127, 127, 127, 127,
	127, 0, 0, 540, 0, 0, 482, 0, 476, 0,
	0, 68, 127, 0, 0, 503, 476, 0, 0, 0,
	491, 1539, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 499, 2755,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 0,
	0, 0, 483, 484, 485, 486, 488, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 489,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	497, 480, 0, 0, 0, 0, 521, 0, 73, 0,
	501, 0, 0, 0, 127, 0, 0, 0, 0, 526,
	0, 0, 492, 0, 487, 0, 0, 0, 0, 516,
	518, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	513, 481, 0, 517, 0, 0, 0, 127, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 495, 519, 1539, 0, 1377,
	0, 0, 0, 493, 494, 496, 523, 0, 525, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 716, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 491, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 0, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 497, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 127, 0, 0, 0,
	0, 0, 521, 526, 0, 0, 492, 0, 487, 0,
	127, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 518, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 0, 505, 0,
	552, 0, 0, 0, 513, 481, 0, 517, 2852, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	519, 0, 0, 0, 0, 0, 0, 493, 494, 496,
	523, 0, 525, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 476, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 0,
	0, 0, 483, 484, 485, 486, 488, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 489,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 476, 1314, 1317, 1318,
	1319, 1320, 1321, 1322, 0, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 0, 1302, 1303, 1304, 1305, 1281, 1285,
	1315, 1282, 1288, 1284, 1286, 1283, 0, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	552, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 1316, 0, 2805, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 127, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 2808,
	2809, 2810, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 1661,
	1662, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 1966, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 1661,
	1662, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 2196, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 81, 0, 1089, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 2197, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 2513, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 2132, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 2122, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 1640, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 1499, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 1673,
	1677, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 1676, 212, 902, 884, 802, 801,
	1670, 0, 1671, 1672, 222, 729, 130, 146, 1668, 1675,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 908, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 729, 130, 146, 725, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 339, 793, 135, 873, 903, 836, 847,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 182, 556, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 677, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 666, 667, 0, 0, 0, 0,
	0, 0, 1650, 0, 81, 0, 0, 0, 557, 580,
	579, 582, 583, 584, 585, 0, 0, 540, 581, 586,
	619, 620, 1651, 0, 0, 0, 554, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 36, 339, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 79, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	550, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1089, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	1537, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 1584, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	1537, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 1581, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	1537, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1417, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 0, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 1587, 1588, 1589, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 0, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 2936, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1089, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 0, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 0, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1113,
	0, 1116, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 1108, 1109, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1631, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	1630, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	1627, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1631, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 1625, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	1630, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 473, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 1942, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1113,
	0, 1116, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 0, 0, 0, 135, 0, 0,
	516, 518, 447, 339, 441, 452, 435, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 442, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 433, 436, 0, 0,
	0, 250, 148, 0, 0, 440, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 444, 308, 0, 0, 448, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	451, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 461, 313, 343, 156, 330, 437, 438, 439,
	445, 446, 449, 450, 453, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 443, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 0, 0, 0, 135, 447, 339, 441,
	452, 435, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 442, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 433, 436, 0, 0, 0, 250, 148, 0, 0,
	440, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 444, 308, 0,
	0, 448, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 451, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 430, 313, 343,
	156, 330, 437, 438, 439, 445, 446, 449, 450, 453,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 443, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 1126, 1125,
	1135, 1136, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1127,
	0, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 2858, 0, 0, 0, 0, 0, 0, 182,
	2856, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 2857,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 36, 339,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 1622,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	79, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 456, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 1403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 1263, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 456, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 2309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 1788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 1230,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 693, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	125, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 713, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 709,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 714, 712, 703,
	704, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 710,
	711, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 1257, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 700, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 713, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 709,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 535, 289, 159, 195, 188, 280, 714, 712, 703,
	704, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 2324, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 710,
	711, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 0,
	0, 539, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	492, 0, 487, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 0, 505, 0, 0, 2333, 0, 0, 513, 481,
	0, 517, 0, 0, 540, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 495, 519, 0, 0, 0, 0, 0,
	0, 493, 494, 496, 523, 0, 525, 531, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2331, 0, 0, 0, 0, 0, 0, 0,
	482, 540, 0, 0, 539, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 497, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 499, 0, 0, 0,
	526, 0, 0, 492, 0, 487, 0, 0, 0, 0,
	532, 533, 500, 0, 0, 0, 483, 484, 485, 486,
	488, 506, 507, 511, 512, 529, 528, 527, 530, 534,
	537, 536, 538, 489, 490, 498, 508, 509, 510, 514,
	515, 524, 520, 522, 0, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 0, 505, 0, 0, 0, 0,
	0, 513, 481, 0, 517, 0, 0, 0, 0, 0,
	0, 539, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 519, 497, 480,
	521, 0, 0, 0, 493, 494, 496, 523, 501, 525,
	531, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	492, 0, 487, 516, 518, 0, 0, 1300, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 513, 481,
	0, 517, 0, 482, 0, 0, 0, 0, 0, 479,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 519, 0, 0, 0, 0, 0,
	0, 493, 494, 496, 523, 0, 525, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 0, 532, 533, 0, 0, 0, 0, 483,
	484, 485, 486, 488, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 489, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 518, 0, 0,
	532, 533, 0, 0, 0, 0, 483, 484, 485, 486,
	488, 506, 507, 511, 512, 529, 528, 527, 530, 534,
	537, 536, 538, 489, 490, 498, 508, 509, 510, 514,
	515, 524, 520, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 36, 0, 72, 39, 40, 0, 0, 0,
	521, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 516, 518, 1314, 1317, 1318, 1319, 1320,
	1321, 1322, 0, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 0, 1302, 1303, 1304, 1305, 1281, 1285, 1315, 1282,
	1288, 1284, 1286, 1283, 81, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 0, 0, 0, 0, 0, 2752,
	0, 0, 0, 0, 2968, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1316, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 2752, 0, 0, 0,
	2753, 2964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2754, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 81, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 2753, 0, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 0, 2752, 49, 77, 76, 0, 2958, 68, 59,
	47, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2755, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 57, 58, 0, 2754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 2752, 0, 0, 0, 0, 2944, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2753, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 2755, 75, 73, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 57, 58, 0,
	2754, 0, 0, 2753, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 49,
	77, 76, 0, 0, 0, 36, 47, 72, 39, 40,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 59,
	0, 68, 0, 0, 0, 78, 0, 59, 0, 41,
	0, 0, 73, 78, 0, 0, 0, 41, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	75, 0, 53, 54, 61, 0, 62, 57, 58, 0,
	2754, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 66, 81, 67, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2752, 0, 0, 0, 0, 2880, 0, 0,
	2752, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 2753, 0, 0, 0, 79, 0, 0,
	0, 2753, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2754, 0, 0, 0, 0, 57, 58, 79, 2754, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	75, 0, 53, 54, 61, 0, 62, 2755, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	788, -1000, -360, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1869, -1000, -1000, -1000, -1000,
	-1000, -1000, 852, 236, -1000, 282, 157, 32062, 594, 3194,
	33142, -1000, -1000, -1000, 176, 548, 33142, 432, 470, 1210,
	1734, 1209, 25, -83, -89, 137, 25041, 24496, -1, -1000,
	1916, 1894, -1000, -1000, 462, 31, -1000, -1000, -1000, 21787,
	229, -1000, -1000, 1857, 1867, 1645, -1000, 14227, 462, 462,
	31522, 35302, -1000, 1915, 33142, 12605, -1000, 584, 562, -171,
	442, 442, 278, 442, 442, 592, -1000, 242, 848, -1000,
	-1000, -1000, -1000, 824, 33142, 28282, 443, 32602, 443, 443,
	443, 443, 443, 443, 443, 33142, -1000, 646, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33142, 1207,
	1772, 982, 94, -1000, -1000, -1000, 937, -1000, 327, 323,
	325, 288, 97, 995, 1854, -1000, 1479, 1857, 1857, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 300, 556, 221, 229,
	822, 1816, 1771, 1765, 1143, 1763, 621, 1760, 1575, -58,
	-1000, 1206, 33142, -1000, -1000, 1085, 1084, 1612, 1419, 658,
	1611, -1000, -1000, 334, 378, 1553, 422, 1553, 1553, 1553,
	1553, 1553, -96, 1553, 1553, 1553, 75, 1553, 143, 1553,
	1553, 1553, 1553, 1553, 1218, -1000, -1000, -1000, 346, 1417,
	1460, 1598, 973, -1000, -1000, -1000, -1000, 1539, 1841, 591,
	-1000, -133, 1459, 22867, -1000, 1479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1223, 1769, 1023, 17467, 1701, -1000, -1000, 1008, 1902,
	-1000, 20167, 645, -1000, 17467, 3364, 1479, -1000, -1000, 1479,
	-1000, -1000, -1000, 624, -1000, -1000, 19627, 19627, 19627, 19627,
	19627, 19627, 19627, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, -1000,
	-1000, 1479, -1000, 13687, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 17467, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 30982, 28822, 33142, 1457, 1453, -1000, -1000, 641, 1475,
	-90, 34762, -1000, -1000, -1000, -1000, 33682, 27742, 819, -1000,
	-1000, -1000, -1000, 1759, -1000, -1000, 640, -1000, 1869, -1000,
	-1000, 1412, 372, -1000, 36187, 4816, -1000, -1000, -1000, 1574,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32602,
	33142, 234, 1205, 938, 1203, 33682, 33682, -1000, 232, 28282,
	28282, 442, 250, 28282, 238, 1473, 555, 1472, 554, 1215,
	33142, 1810, 1595, 33142, 1198, 1197, 33682, 33682, 28282, 28282,
	-1000, 12055, -1000, -1000, 982, -1000, 20151, 17467, 442, 442,
	33142, 33142, 33142, 33142, 33142, -1000, -1000, 982, 982, 982,
	982, 897, 1901, 897, -1000, 897, -1000, -1000, 17467, -1000,
	19627, 27202, 713, -1000, -1000, -1000, 1194, 299, -1000, -1000,
	-1000, -1000, -1000, -1000, 1193, -1000, 1737, 621, 621, -1000,
	1157, 621, 1452, -1000, 811, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 621, -1000, 16927,
	-349, -1000, -1000, 1471, -1000, 301, -1000, -1000, 322, 322,
	212, 28282, 28282, 28282, -1000, 1553, 32602, -1000, 1553, 1553,
	1553, -116, 1553, 1553, -1000, -1000, 1553, -1000, -1000, -1000,
	-1000, -1000, 1553, -1000, -1000, -1000, 1553, 1553, -1000, 1553,
	1553, -1000, -1000, -1000, -1000, -1000, 28282, 322, 175, 1470,
	322, 28282, 28282, -1000, 60, 59, 53, 50, -1000, -1000,
	-1000, -1000, 48, 47, -1000, -1000, 1645, -1000, -1000, 229,
	-1000, -1000, 33142, -95, 22867, 1459, 1838, 10405, -1000, -1000,
	-1000, 1911, 732, 1415, -1000, -1000, 1456, -1000, 1127, 639,
	1004, 1665, -1000, -1000, -1000, 33142, -1000, 17467, 17467, 17467,
	1029, -1000, 23407, -1000, -1000, -1000, -1000, 9855, 745, 19627,
	990, 830, 19627, 19627, 19627, 19627, 19627, 19627, 19627, 19627,
	19627, 19627, 19627, 19627, 19627, 19627, 19627, 1101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1192, -1000, 229, 1364,
	1364, 697, 697, 697, 697, 697, 697, 25581, 1831, 15307,
	15307, 15307, 1831, 1223, 1223, 15307, 15307, 15307, 15307, 15307,
	15307, 15307, 15307, 1831, 1831, 15307, 1223, 1223, 1223, 1223,
	15307, 15307, 15307, 15307, 32602, 32602, 1831, 15307, 15307, 15307,
	1831, 1223, 1410, 890, 13687, 15307, 15307, 1223, 17467, 17467,
	16387, 15847, 18007, 15307, 1831, 859, 890, 33682, -1000, -1000,
	19087, -1000, -1000, -1000, -1000, -1000, 1223, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15307, 15307, 15307, 15307, 752,
	33142, -1000, 1385, 1474, -1000, -1000, -1000, 1834, 26662, -1000,
	21247, -1000, 1479, 752, 1277, 28822, 33142, -1000, -1000, 28822,
	33142, 9305, 34222, 1446, -1000, -120, -128, -90, -1000, -1000,
	695, -1000, -1000, -1000, 13146, -1000, 10955, 1857, 1645, 6555,
	11505, -1000, 4816, 1574, -1000, -68, -1000, -1000, -1000, 1511,
	-1000, 1511, 273, -17, 1511, 1511, 1511, 1511, 1511, -21,
	-21, -21, -21, -14, -1000, -1000, -1000, -1000, -1000, 1572,
	1568, -1000, 1511, 1511, 1511, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1533, 298, 1513, 1513, 1513, 1513,
	1513, 371, 371, -1000, 17467, 1476, 1824, 537, 250, 1784,
	1802, 1784, 309, -1000, 637, 1566, -1000, 636, 284, 1325,
	-1000, 180, 1287, 33142, -1000, -1000, -1000, -1000, -1000, 33142,
	33142, 28282, 28282, 28282, 517, -1000, 33142, 1454, -1000, -1000,
	-1000, -1000, -1000, 1430, -1000, 1287, -1000, -1000, -1000, -1000,
	-1000, 1156, 890, 1191, 1189, 1816, -1000, -1000, -1000, 913,
	-1000, -1000, -1000, -1000, 982, 33142, 33142, 33142, 1816, 982,
	890, 1432, 1580, 1479, 1223, -1000, -1000, 1187, -1000, 19627,
	1452, 1452, -1000, 1452, 621, 1364, 1452, -1000, 1382, 1795,
	1154, 33142, -1000, 22867, -59, -1000, -153, 30442, -1000, -1000,
	-1000, 30442, -1000, 75, 142, -1000, 545, -1000, 1343, -1000,
	-1000, -1000, -1000, 1553, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30442, 108, 174, 30442, 1430, 1900, -1000,
	-1000, -1000, -1000, 1852, -1000, 1831, 1223, 179, -1000, -1000,
	-1000, 1479, 1309, 635, -1000, 1661, 1023, 1023, 17467, -1000,
	-1000, -1000, 10955, 1853, -1000, 1678, 1677, 1630, -1000, -1000,
	745, 783, 891, -1000, -1000, 1083, -1000, -1000, -1000, -1000,
	634, 1479, -1000, 3863, -1000, -1000, -1000, -1000, 990, 19627,
	19627, 19627, 1432, 3863, 3923, 2497, 2394, 697, 864, 864,
	696, 696, 696, 696, 696, 889, 889, -1000, -1000, -1000,
	1223, -1000, -1000, -1000, 15307, 1332, -1000, -1000, 890, 633,
	1332, 1332, 15307, -188, -188, 1332, 1223, 1332, 1332, 1332,
	1332, 1223, 1332, 15307, 15307, 1332, -188, -188, -188, -188,
	1332, 1332, 1332, 1332, 1450, 1448, 15307, 1332, 1332, 1332,
	15307, -1000, 17467, -1000, 1223, 1332, 1332, -1000, 895, 943,
	780, 1898, 1332, 772, 1895, 1332, 1465, 19627, 19627, 19627,
	1332, 15307, 980, -1000, 17467, 1223, -1000, 3569, 1332, 1223,
	1447, 1332, 1332, 204, 1479, -1000, 10955, 28822, 28822, 28822,
	28822, 28822, -1000, 1642, 1639, -1000, 1629, 1627, 1638, 22867,
	1338, 1223, 293, 26662, -1000, 1479, -1000, 22327, 576, 583,
	582, 568, 15307, 1877, 28822, 1362, -1000, 1362, -1000, 630,
	-1000, -1000, 33682, -90, -131, -1000, -1000, 1446, -1000, 1104,
	-1000, -1000, 890, -1000, 629, 1769, 1831, 1444, 6005, -1000,
	-1000, -1000, -1000, 372, -1000, -1000, -1000, 1545, 4512, -1000,
	1698, 705, 705, 704, 1168, 1691, -1000, -1000, 159, -74,
	-1000, -1000, 1081, -21, -21, 1511, 1511, 272, 1511, -1000,
	-21, -1000, -1000, -1000, 695, 1755, 695, 695, 695, 695,
	-21, 1151, 1151, -1000, -1000, -1000, -1000, 1075, -1000, 1533,
	-1000, 1068, -1000, -1000, -1000, -1000, -1000, -1000, 1114, 1594,
	32602, -1000, 33142, -1000, 1784, -1000, -1000, -1000, 139, -1000,
	-1000, -1000, 1882, -1000, -1000, 32602, 512, 32602, -1000, -1000,
	88, 28282, 182, 356, 216, -1000, 541, -1000, 518, -1000,
	-1000, -1000, -1000, -1000, -1000, 33142, 28282, -1000, -1000, -1000,
	-1000, 1877, 1186, 1185, -1000, -1000, -1000, 897, 982, -1000,
	-1000, 19627, 28282, -1000, 314, -1000, 3863, -1000, -1000, -1000,
	752, 586, -1000, -1000, -72, -1000, -1000, 473, 628, 623,
	472, -1000, 84, 28282, -1000, 32602, -1000, 1893, 1892, 105,
	1890, 28282, -1000, 36, 1665, -1000, 1441, -1000, 740, 730,
	611, 384, 384, -1000, 767, 384, 1750, 1740, 749, -1000,
	230, -1000, 10405, 10405, 1659, -1000, -1000, -1000, 33142, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8755, 15307,
	-1000, 1432, 3863, 3287, -1000, 19627, -1000, 1332, 15307, -188,
	8205, -188, -188, 1332, -1000, 29902, -1000, -1000, -188, -1000,
	-188, -188, -188, -188, -188, 1332, 1332, -188, -1000, -1000,
	-1000, -1000, -188, -188, -188, -188, 19627, 19627, 1332, -188,
	-188, -188, 1223, 890, -1000, -1000, -1000, 365, 1101, 365,
	19627, 19627, -1000, 19627, 19627, -1000, -1000, 19627, 3879, 3840,
	3825, -240, 1365, 853, -1000, 17467, 1103, -1000, -1000, -1000,
	-1000, -1000, -1000, 1593, 10955, 1479, 7105, -1000, 32602, 1408,
	-1000, 775, 774, 1474, 1532, 1591, 1403, -1000, -1000, -1000,
	-1000, 1635, -1000, 1633, -1000, -1000, 1496, -1000, -1000, 1438,
	1479, 32602, 19627, 576, -1000, 1479, 1479, 1479, 1223, 1869,
	17467, 1362, -1000, -1000, 712, -1000, -1000, -137, -115, -1000,
	-1000, -1000, 10405, -1000, 6555, -1000, 6555, -1000, 23947, 370,
	1709, 364, -1000, 1168, -1000, -1000, 1168, -1000, 1168, -1000,
	-1000, -1000, 1527, -1000, 944, -1000, -1000, -1000, -1000, -1000,
	1479, -352, 19627, 1910, -1000, 1695, -1000, 1693, 1692, 1150,
	-1000, -1000, 1272, 695, 695, -21, -1000, -1000, 1511, -1000,
	695, -1000, 785, -1000, -1000, -1000, -1000, 695, 1330, -1000,
	1328, 1434, -1000, 1320, 116, 33142, -1000, -1000, 1823, -1000,
	-1000, -1000, 1754, 767, 767, 767, 1589, -1000, -1000, -1000,
	-1000, 1265, 1431, -1000, 36187, 1184, 1183, 1181, -1000, -249,
	153, -1000, 28282, 126, 180, 411, 1179, 33142, 28282, -1000,
	-1000, -1000, -1000, -1000, 1816, -1000, 3863, 1287, -1000, -1000,
	-21, 33142, -1000, 28282, 711, 29362, 28282, 104, 140, -1000,
	28282, 28282, 1889, 28282, 1430, 1148, 1630, 179, 4196, 1168,
	589, -1000, -1000, 386, -1000, 3305, 1691, 1177, 35980, 35873,
	32602, 1688, 1686, 1175, 33142, 32602, -1000, -1000, 35660, 1173,
	17467, -1000, 32602, -1000, -1000, 32602, 616, -1000, -1000, -1000,
	1381, 14227, -1000, -1000, 1223, -1000, 19627, 3863, -188, -1000,
	-1000, -1000, -1000, 608, -1000, -1000, -188, -1000, -1000, 1172,
	-1000, -1000, -1000, -1000, -1000, -1000, -188, -188, -1000, -1000,
	-1000, -1000, -1000, 3754, 3682, -188, -1000, -1000, -1000, -1000,
	1223, 1511, 1511, -1000, 1511, 1513, -1000, 1511, 14, 1511,
	9, 1223, 1223, 3538, 3181, 2484, 1548, 3569, 19627, 19627,
	19627, 1479, -182, -1000, 890, 17467, -1000, 1786, 1356, 1427,
	-1000, -1000, 14767, 1223, 1673, 1309, -1000, 21787, 1299, -1000,
	1869, 10955, 17467, 17467, -1000, -1000, 17467, 1512, -1000, 17467,
	-1000, -1000, -1000, -1000, 32602, 292, -1000, 17467, 1299, 3134,
	-1000, 32602, 32602, 32602, -1000, 1857, 890, -1000, -1000, -1000,
	-1000, 6005, -1000, 1297, -1000, 1511, 1511, 1685, -1000, 705,
	-1000, -1000, -1000, -1000, 32602, -1000, 19627, 1815, 3863, -130,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 695, -1000, -1000,
	-1000, -1000, -1000, -21, 1147, -21, 1067, -1000, 1064, -1000,
	-1000, -304, 1509, 229, -1000, 767, 760, 759, 1145, 33142,
	138, 512, -1000, 36187, 36187, 36187, 107, 119, -1000, 961,
	-1000, -1000, -1000, 1139, 1138, 1137, 1287, 184, 958, 166,
	-1000, 1808, -1000, -1000, 982, -79, -1000, 140, -1000, -1000,
	-1000, 140, -1000, -1000, 173, 1430, 1430, 28282, 1430, -1000,
	-1000, -1000, 35660, 353, 36187, 36187, 1476, 705, 1682, 364,
	-1000, -1000, -1000, -1000, -1000, -1000, 1170, -1000, 559, -1000,
	439, 353, 35660, 890, 747, 1789, 10405, 1875, 28822, -1000,
	-1000, -1000, 3863, -1000, 7655, -1000, 744, -1000, -1000, -1000,
	19627, 19627, -1000, -1000, -1000, 275, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19627, 19627, 19627, 19627, -1000, 3569,
	3569, 3569, 19627, 1223, 1134, 890, 1681, -1000, 1479, -1000,
	-1000, 1479, 218, -1000, 32602, 1857, -1000, 890, 890, 890,
	32602, 890, 1295, -1000, 1479, 20707, -1000, 22867, 1293, 1293,
	1293, -1000, 571, 23947, 1804, 1804, -1000, 1168, 1289, 3569,
	1479, -1000, 1479, 1479, -1000, 695, -1000, 695, 1263, 1230,
	-1000, 23947, -1000, -1000, 758, -1000, -1000, -1000, -1000, -1000,
	1851, -1000, 138, -1000, 1131, 249, 258, -1000, 247, 245,
	240, 231, 224, -1000, -1000, -1000, -1000, 388, 107, -1000,
	-77, 1055, 794, 1744, 119, -1000, 1051, 1050, 1048, 1047,
	158, -1000, -1000, -1000, -1000, 210, 180, -1000, 410, 1130,
	-1000, 1728, 1722, 1814, 1814, 102, 1430, 1375, 1225, -1000,
	-1000, 1169, -1000, -1000, 1502, 1168, 1500, -1000, 1165, -1000,
	-1000, 32602, -1000, 353, 1783, 1782, 1479, -1000, 1871, 1866,
	1362, 14227, -1000, -1000, 1869, 1865, 3569, 3569, -1000, -1000,
	3569, 3569, 3569, 3569, -1000, -1000, -1000, 135, -1000, -1000,
	1909, -1000, 1427, 1479, -1000, 229, -1000, -1000, 1283, -1000,
	32602, -1000, -1000, 576, -1000, -1000, -1000, 571, -1000, 1164,
	767, 1125, -1000, -1000, -1000, -1000, 352, -355, 19627, -1000,
	-1000, -1000, -1000, 1281, -1000, 229, -1000, -1000, 296, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1732, 1731, 279, -1000,
	1123, 1122, -1000, 402, 1070, 648, -209, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 407, 1163,
	-1000, 152, -1000, -1000, 450, 1702, 1714, 1864, -1000, 28282,
	-1000, -1000, 28822, -1000, -1000, 159, 159, 23947, 1476, 23947,
	-1000, -1000, -1000, 19627, -1000, 726, -203, 17467, 17467, 1875,
	-1000, 746, 17467, -1000, -1000, -1000, -1000, -1000, -1000, 1223,
	208, -281, 10955, 1427, 1223, -1000, -1000, -1000, -1000, -1000,
	1043, -1000, 33142, -1000, -1000, -1000, 3569, 571, -1000, 286,
	37007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1041,
	-1000, -1000, 1033, 408, 148, -1000, 1812, -1000, 1496, 1015,
	1722, 1863, 1720, 1717, -1000, 1119, -251, 1362, 1271, 1493,
	1268, 3863, 1244, -1000, 32602, -1000, 32602, -1000, 890, 1420,
	-1000, 890, 1871, -1000, 1223, 199, 199, 1405, -1000, 1658,
	-246, -288, 1336, -1000, -1000, 1480, -355, -1000, 571, -1000,
	274, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17467, 17467, 5455, 37007, 115, -1000, 114, -1000,
	-1000, -1000, 1113, -1000, 1727, -1000, 1112, -1000, 1862, 1860,
	-1000, 181, 1875, 571, 23947, 571, -1000, 726, 1670, 1303,
	-1000, 1809, 17467, -203, -1000, -1000, 203, -1000, 738, 269,
	724, -1000, 1364, -1000, -1000, 1648, -1000, 32602, -1000, -1000,
	1162, 1160, -1000, 915, 1059, 200, 194, 5039, -1000, -1000,
	-1000, -1000, -361, -1000, -1000, -1000, -1000, -1000, -1000, 1106,
	1098, 26121, 1871, -1000, 1229, -1000, -1000, 335, 32602, 1479,
	-1000, -1000, 945, -1000, -1000, -1000, -1000, -1000, 32602, -255,
	1214, -1000, -1000, -1000, 974, -1000, 17467, 37007, 1850, 1848,
	1847, 1781, 10405, 36999, -1000, -1000, -1000, -1000, 99, 1287,
	-203, 571, 319, -1000, -1000, 203, -1000, -284, 1588, 306,
	872, 37007, -1000, 1049, -362, 437, 229, 456, 19627, -1000,
	-1000, -1000, 28282, -1000, -1000, 1479, -1000, -289, 1587, 1584,
	1888, -1000, -1000, -1000, -1000, -1000, -1000, 37007, -1000, -364,
	37007, 3724, -1000, -1000, -1000, 4289, -1000, -1000, -1000, -1000,
	189, -1000, -1000, 3863, 1287, 18547, -1000, -1000, 1906, -1000,
	1883, 536, 536, -1000, -365, 36789, -366, 441, 37007, 928,
	-1000, 17467, -1000, 456, -1000, 3569, 1223, -1000, -1000, -1000,
	375, 1032, -1000, 36709, 863, 37007, -1000, -368, 438, 37007,
	-1000, 965, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	36593, -1000, -371, 37007, 391, 36496, -372, -1000, 389, 37007,
	-1000,
}

var yyPgo = [...]int{
	0, 2312, 2311, 15, 2309, 248, 2308, 2307, 2305, 33,
	26, 17, 35, 2304, 2044, 2042, 2040, 2028, 2020, 2303,
	7, 2302, 2299, 2018, 2298, 2295, 2015, 2013, 2009, 2007,
	2294, 2293, 2292, 2004, 2002, 1992, 10, 2287, 12, 2286,
	4, 150, 169, 2285, 2, 2281, 2280, 8, 2279, 2277,
	1981, 2276, 2275, 2273, 113, 2271, 1972, 1957, 2270, 1951,
	1949, 2269, 2268, 1943, 1929, 1923, 2267, 175, 2262, 2258,
	2257, 186, 100, 152, 2256, 2255, 2254, 114, 92, 2006,
	121, 59, 118, 463, 2252, 28, 51, 247, 2251, 144,
	2250, 138, 2247, 163, 2242, 148, 97, 108, 2241, 2240,
	176, 2239, 2238, 2237, 143, 2234, 2233, 174, 663, 2232,
	2231, 158, 2228, 77, 172, 52, 46, 2224, 2222, 2221,
	2220, 2217, 32, 192, 2216, 119, 160, 2215, 2212, 91,
	2211, 2209, 181, 2208, 2207, 2206, 135, 49, 2205, 2200,
	48, 2194, 53, 79, 2193, 86, 2186, 146, 2172, 2171,
	25, 24, 2166, 62, 2165, 54, 2164, 149, 283, 1141,
	2162, 20, 30, 23, 2161, 40, 19, 3, 47, 22,
	70, 80, 140, 110, 2160, 37, 43, 127, 104, 102,
	45, 2159, 156, 2157, 98, 157, 131, 142, 153, 2156,
	2155, 2154, 1081, 2153, 128, 95, 2152, 106, 916, 171,
	132, 2149, 107, 2145, 2144, 2143, 2141, 2140, 94, 115,
	2139, 2138, 179, 173, 185, 44, 21, 1023, 1623, 63,
	161, 2133, 50, 2132, 2131, 2130, 2978, 120, 90, 111,
	170, 2129, 109, 31, 55, 2128, 2125, 2124, 2123, 2121,
	2119, 1077, 2118, 2117, 2116, 2115, 164, 279, 2114, 134,
	133, 129, 2112, 151, 41, 2107, 2106, 141, 99, 2104,
	2101, 2099, 2096, 130, 83, 155, 2092, 124, 145, 125,
	2091, 84, 2089, 2082, 60, 75, 2081, 2078, 2077, 123,
	105, 2071, 76, 39, 38, 71, 13, 2068, 2066, 85,
	103, 2065, 29, 2064, 5, 9, 11, 2063, 2062, 2060,
	2056, 2054, 2053, 2052, 93, 2051, 2050, 68, 2049, 2048,
	2033, 42, 2031, 2025, 2022, 154, 122, 61, 166, 516,
	14, 2011, 1997, 6, 1995, 126, 1989, 58, 1987, 57,
	1985, 1983, 64, 1975, 1970, 65, 1968, 1962, 167, 1648,
	461, 1955, 165, 168, 56, 87, 1953, 1945, 0, 627,
	180, 162, 1939, 1926,
}

var yyR1 = [...]int{
	0, 347, 347, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 350, 350, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	321, 321, 330, 330, 330, 331, 331, 329, 329, 329,
	329, 329, 333, 333, 334, 334, 332, 332, 332, 332,
	336, 336, 337, 337, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 324, 324,
	324, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 339, 339, 340, 340, 341, 341, 342, 342,
	342, 342, 343, 343, 343, 343, 343, 344, 344, 344,
	344, 344, 344, 344, 345, 345, 346, 346, 2, 302,
	302, 303, 303, 304, 304, 304, 304, 305, 305, 306,
	306, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 24, 214, 214, 211, 211, 211, 212, 212, 213,
	213, 213, 323, 323, 323, 317, 317, 317, 319, 319,
	318, 318, 318, 320, 320, 325, 325, 325, 325, 325,
	327, 327, 327, 327, 327, 327, 328, 328, 328, 326,
	326, 48, 48, 49, 49, 49, 156, 156, 156, 13,
	13, 13, 13, 13, 19, 21, 21, 37, 37, 38,
	22, 22, 22, 22, 39, 39, 40, 25, 25, 25,
	25, 25, 25, 46, 46, 46, 45, 45, 44, 44,
	44, 44, 44, 44, 23, 23, 23, 23, 47, 47,
	42, 42, 41, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 26, 26, 26, 26, 26,
	26, 18, 301, 301, 301, 36, 36, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 52, 276, 277,
	277, 277, 277, 277, 277, 277, 277, 264, 264, 265,
	254, 254, 254, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 233, 233, 233, 233, 237, 237, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 236,
	236, 236, 236, 236, 236, 236, 236, 238, 238, 238,
	238, 238, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 240, 240, 240,
	240, 240, 240, 240, 240, 263, 263, 241, 241, 257,
	257, 258, 258, 258, 255, 255, 256, 256, 244, 245,
	259, 246, 246, 246, 247, 247, 247, 248, 248, 253,
	253, 252, 252, 252, 252, 252, 252, 249, 249, 249,
	249, 250, 250, 251, 262, 262, 262, 262, 262, 242,
	35, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 288, 288, 204, 204, 205, 205, 266,
	266, 286, 286, 285, 285, 284, 284, 284, 275, 275,
	281, 281, 281, 281, 281, 281, 281, 281, 270, 270,
	270, 269, 269, 271, 271, 274, 274, 283, 283, 282,
	282, 267, 267, 267, 289, 289, 289, 289, 289, 268,
	268, 268, 268, 290, 272, 272, 273, 273, 273, 295,
	296, 294, 294, 294, 294, 294, 119, 119, 119, 278,
	278, 278, 279, 279, 279, 280, 280, 280, 299, 299,
	298, 298, 50, 51, 55, 55, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 155, 155, 155, 209, 209, 293, 291, 291,
	292, 292, 15, 15, 53, 53, 322, 322, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 297, 297, 297,
	17, 17, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 84, 196,
	196, 195, 195, 194, 194, 194, 197, 197, 197, 197,
	231, 231, 231, 58, 58, 62, 62, 65, 65, 65,
	63, 64, 27, 28, 28, 28, 28, 29, 210, 210,
	60, 60, 61, 61, 61, 61, 76, 76, 352, 352,
	59, 353, 67, 68, 68, 69, 69, 69, 200, 200,
	73, 73, 73, 71, 71, 71, 72, 72, 78, 78,
	82, 82, 82, 82, 81, 81, 81, 81, 158, 158,
	163, 223, 223, 139, 139, 159, 159, 164, 164, 164,
	165, 165, 166, 166, 166, 166, 166, 161, 161, 160,
	160, 162, 127, 127, 221, 221, 221, 220, 220, 220,
	220, 86, 86, 89, 89, 91, 91, 91, 91, 91,
	94, 141, 141, 112, 112, 113, 113, 113, 113, 113,
	125, 125, 176, 176, 175, 175, 178, 178, 90, 92,
	92, 92, 92, 97, 97, 98, 98, 99, 99, 208,
	208, 228, 228, 228, 103, 103, 103, 105, 104, 104,
	104, 104, 106, 106, 107, 107, 109, 110, 110, 108,
	108, 114, 114, 111, 115, 115, 115, 115, 116, 116,
	83, 83, 83, 83, 83, 83, 83, 83, 193, 193,
	118, 118, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 135, 135, 135, 135, 135, 135, 120, 120,
	120, 120, 120, 120, 120, 77, 77, 136, 136, 136,
	96, 95, 95, 80, 80, 79, 79, 137, 137, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 130, 130, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 351, 351, 132, 131, 131, 131, 131, 131, 131,
	74, 74, 74, 74, 74, 229, 229, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 148, 148, 75, 75, 146, 146, 147, 149,
	149, 145, 145, 145, 122, 122, 122, 122, 122, 122,
	122, 122, 124, 124, 124, 150, 150, 138, 138, 85,
	151, 151, 152, 153, 153, 154, 154, 157, 170, 170,
	170, 171, 171, 171, 171, 126, 126, 172, 172, 172,
	121, 121, 121, 121, 121, 121, 121, 174, 174, 173,
	173, 173, 173, 179, 179, 140, 140, 143, 143, 142,
	144, 180, 180, 184, 184, 181, 181, 185, 185, 185,
	185, 188, 188, 189, 189, 189, 186, 186, 186, 183,
	183, 183, 225, 225, 225, 191, 191, 201, 201, 198,
	198, 199, 199, 192, 192, 243, 243, 207, 207, 206,
	206, 206, 202, 202, 202, 203, 203, 222, 222, 218,
	218, 224, 224, 219, 219, 226, 226, 227, 227, 300,
	300, 260, 260, 310, 310, 261, 261, 311, 311, 313,
	313, 308, 308, 309, 309, 312, 312, 30, 314, 314,
	315, 315, 316, 316, 316, 316, 31, 32, 32, 32,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 348, 349,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	2, 4, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 1, 3, 1,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 1, 3, 3, 2, 1, 1,
	3, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 6,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 0, 2, 4,
	2, 4, 1, 3, 5, 4, 6, 0, 3, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 1, 3, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 3, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -347, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 179, -51, 182, 181, 217, 183, 210,
	64, 340, -65, 343, 344, -352, -210, 268, 269, 20,
	37, 345, 347, 31, 32, 231, 285, 287, 312, -5,
	-88, -6, 8, 439, 180, 341, 212, 211, 26, 488,
	-348, 68, 555, -153, 15, -67, -353, -67, -67, -67,
	-67, -67, -276, -208, 107, 68, 23, -203, -214, 87,
	430, 187, -212, 281, 283, -201, -202, -211, 241, 251,
	44, 198, 197, 252, 188, 281, 188, 189, 191, 430,
	187, 224, 223, 281, 283, 188, -108, -226, 72, -216,
	201, 499, 306, 485, 252, 550, 293, 238, 340, 354,
	356, 348, 383, 371, 486, 500, 202, 263, 186, 339,
	369, 372, 416, 200, 296, 256, 319, 501, 405, 411,
	266, 343, 425, 502, 203, 260, 262, 261, 246, 455,
	267, 36, 213, 367, 302, 360, 271, 241, 503, 493,
	235, 358, 28, 236, 234, 428, 504, 330, 413, 388,
	331, 305, 505, 490, 300, 412, 363, 359, 312, 204,
	198, 332, 506, 389, 393, 507, 417, 286, 333, 508,
	509, 510, 190, 292, 352, 353, 511, 242, 419, 297,
	387, 33, 199, 487, 48, 221, 420, 38, 391, 37,
	397, 512, 329, 386, 381, 398, 513, 514, 515, 516,
	310, 308, 309, 311, 385, 351, 380, 253, 258, 53,
	185, 395, 394, 396, 259, 415, 376, 374, 517, 518,
	301, 205, 519, 520, 361, 18, 521, 522, 423, 216,
	303, 304, 42, 523, 524, 525, 111, 526, 527, 528,
	414, 390, 392, 240, 115, 364, 195, 529, 307, 410,
	316, 489, 290, 112, 421, 357, 531, 335, 347, 220,
	215, 424, 325, 532, 269, 533, 534, 535, 207, 536,
	284, 283, 344, 317, 113, 345, 407, 264, 537, 538,
	539, 540, 250, 233, 427, 418, 52, 268, 402, 541,
	320, 336, 350, 197, 270, 542, 294, 341, 43, 7,
	257, 298, 408, 318, 265, 251, 254, 378, 222, 543,
	544, 365, 366, 384, 349, 379, 342, 225, 217, 110,
	426, 403, 491, 281, 337, 373, 370, 228, 377, 545,
	546, 255, 229, 346, 422, 295, 368, 404, 188, 132,
	372, 416, 179, 406, 407, 413, -270, 414, 223, 226,
	-231, 188, -196, 405, 286, 307, 460, 229, 230, 189,
	190, 33, 418, 417, 409, -226, 192, 346, -76, 183,
	218, -108, -47, 72, 270, -47, 30, 72, 72, 36,
	72, 345, 408, 408, 75, 489, 232, 21, -339, -320,
	316, -338, -318, 180, 179, 10, 181, 321, 322, 323,
	189, 8, 31, 530, 206, 324, 325, 6, 210, 326,
	327, 224, 9, 328, -323, 74, 72, -216, 21, -339,
	-320, 316, -205, -204, 338, 397, 6, -69, 5, -192,
	193, 342, -87, 498, -93, -228, -226, -217, 74, 299,
	209, 289, 400, 456, 457, 458, 459, 232, 460, 473,
	474, 98, 230, 321, 322, 313, 323, 208, 475, 116,
	239, 218, 278, 409, 277, 282, 461, 462, 476, 477,
	478, 463, 464, 288, 479, 480, 553, 291, 554, 314,
	482, 530, 483, 324, 481, 326, 227, 467, 466, 465,
	468, 327, 450, 451, 469, 51, 471, 470, 472, 191,
	81, -3, -171, 17, 16, -73, 54, 55, -68, -81,
	123, -83, -226, -117, 90, -123, 29, 72, -216, 24,
	-122, -217, -118, -145, -144, -96, 132, -230, 121, 122,
	129, 91, 175, -130, -128, -129, -131, -133, -134, 74,
	73, 82, 75, 76, 77, 78, 83, 456, 457, 458,
	459, 460, 473, 474, 208, 475, 218, 461, 462, 476,
	477, 478, 463, 464, 479, 480, 482, 483, 481, 467,
	466, 465, 468, 450, 451, 469, 471, 470, 472, 84,
	85, -218, -142, -348, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 58, 59, 187, 440,
	441, 442, 443, 444, 484, 448, 93, 47, 429, 438,
	437, 436, 434, 435, 431, 433, 432, 194, 430, 127,
	439, -192, -192, 11, -100, -101, -108, -111, -226, -181,
	342, -188, -185, 417, 418, -186, -189, -183, -145, 397,
	527, 528, 416, 372, 415, -218, -226, -2, -5, 6,
	-108, -277, -265, -268, -219, 203, -290, -218, -215, 200,
	72, -216, 299, 184, 209, 180, 89, 492, 23, 25,
	289, 400, 456, 92, 132, 457, 458, 459, 16, 20,
	93, 131, 81, 440, 232, 460, 179, 62, 431, 433,
	429, 430, 406, 29, 10, 26, 211, 245, 22, 125,
	181, 96, 97, 98, 230, 214, 321, 322, 24, 212,
	313, 85, 323, 208, 116, 239, 19, 65, 218, 278,
	11, 409, 226, 549, 285, 13, 454, 114, 277, 14,
	282, 194, 193, 109, 243, 189, 60, 8, 175, 27,
	106, 56, 461, 462, 495, 45, 231, 496, 58, 107,
	17, 434, 435, 31, 484, 463, 219, 497, 464, 127,
	248, 63, 50, 288, 90, 83, 553, 34, 86, 66,
	334, 87, 15, 244, 61, 452, 291, 554, 314, 223,
	530, 247, 498, 206, 108, 324, 182, 439, 315, 287,
	59, 187, 6, 449, 30, 210, 326, 249, 227, 467,
	466, 465, 468, 551, 57, 442, 443, 469, 327, 547,
	188, 95, 450, 451, 192, 224, 84, 5, 44, 32,
	9, 328, 64, 67, 436, 437, 438, 47, 51, 471,
	470, 472, 191, 552, 94, 12, 453, 488, 88, 189,
	191, 439, -199, 194, -199, 224, 223, -213, 249, -199,
	-199, 188, -212, 99, 99, -53, -108, -322, -317, -323,
	-198, 194, -218, -198, -198, -198, -198, -198, -198, -198,
	-108, 176, -108, 72, 30, -197, 107, 12, 430, 187,
	188, 223, 224, 191, -272, 11, 109, 227, 227, 227,
	228, 227, -195, 408, 410, 225, 411, 412, 12, -84,
	107, 19, -348, -171, -171, 72, 345, 192, -61, -3,
	-11, -9, -10, -3, 99, -125, 23, 30, 30, 74,
	51, 30, -42, -41, -43, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 30, -301, 68,
	-260, 397, 72, -314, -315, -108, 75, 75, 66, 66,
	69, 192, 69, 66, -340, 317, 68, -340, 283, 317,
	318, 251, 281, 191, -340, -340, 283, -340, -340, -340,
	-340, -340, 408, -340, -340, -340, 319, 320, -340, 406,
	191, -340, -340, -340, -340, -340, 71, 66, 69, 307,
	66, 11, 66, -287, 132, 330, 331, 332, 333, 329,
	307, 334, 335, 336, 227, 337, -67, -7, -5, -348,
	21, 22, 188, 421, 69, -87, -174, -348, -349, 70,
	-172, 19, 31, -126, 75, 78, -154, -157, -83, -226,
	50, -71, 21, 22, 80, 11, -221, 89, 87, 88,
	106, -220, 23, 72, -216, -217, 74, 176, -83, -120,
	109, 90, 107, 108, 92, 118, 117, 128, 121, 122,
	123, 124, 125, 126, 127, 119, 120, 131, 99, 100,
	101, 102, 103, 104, 105, -193, -348, -96, -348, 177,
	178, -123, -123, -123, -123, -123, -123, -123, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -3, -137, -83, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -148, -83, -348, -351, -132,
	-348, -351, -132, -351, -132, -351, -348, -351, -132, -351,
	-132, -351, -351, -132, -351, -348, -348, -348, -348, -110,
	27, -108, -86, -89, -91, -92, -112, -95, -348, -90,
	-108, -96, 72, -108, -100, -350, 69, 11, 67, -350,
	69, 176, 69, -182, -187, 419, 421, 342, -186, -186,
	-225, -218, 74, 29, 99, 30, 176, -153, -67, 70,
	69, -268, 203, 200, -233, -237, -239, -238, -240, -235,
	-236, 369, 372, 376, 374, 370, 375, 132, 373, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	30, 213, 365, 366, 367, 368, 389, 390, 391, 392,
	393, 394, 395, 396, 348, 371, 486, 349, 350, 351,
	352, 353, 354, 356, 357, 358, 359, 360, 361, 362,
	363, 72, -217, -290, 68, -218, -108, -214, -212, 72,
	90, 72, -107, -218, -226, -114, -218, -226, 250, -326,
	-325, -317, -320, -199, -213, -317, 255, 253, 254, 69,
	192, 69, 192, 71, -100, 24, 66, -102, -108, 72,
	72, -107, -114, -319, -317, -320, -227, -226, -215, -197,
	74, -230, -83, -199, -199, -108, -108, -108, -108, -108,
	-197, -197, -197, -197, -194, 11, 109, 11, -194, -194,
	-83, -123, -317, 432, 123, 72, 72, 345, 72, 34,
	-42, -42, 74, -42, 69, 99, -42, 70, -137, -300,
	548, 69, -316, 23, 421, 422, 398, -342, 188, 226,
	223, -342, -338, 325, -319, -318, -317, -340, -341, -218,
	-340, -340, -340, 408, -340, -340, -340, -340, -340, -340,
	-340, -340, -323, -342, 285, 69, -342, -319, -317, 329,
	329, 329, 329, 329, 329, -73, -3, -108, 422, 423,
	-93, 23, -173, -219, 9, 109, 69, 18, 69, -170,
	25, 26, 176, -124, 51, 75, 78, -200, 49, -108,
	-83, -83, -83, -135, 83, 90, 84, 85, -220, 123,
	-227, -219, -215, -123, -136, -142, -96, 79, 109, 107,
	108, 92, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -229, 72, 74,
	72, -122, -122, -218, -71, -79, -82, 123, -83, -226,
	-79, -79, -71, -349, -349, -79, -82, -79, -79, -79,
	-79, -82, -79, -71, -71, -79, -349, -349, -349, -349,
	-79, -79, -79, -79, -218, -218, -71, -79, -79, -79,
	-71, -349, 69, -349, -3, -79, -79, -349, -83, -83,
	-145, 74, -79, -145, 74, -79, -123, 445, 446, 447,
	-79, -71, -146, -147, 94, -145, -349, -123, -79, -80,
	-79, -79, -79, -177, 111, -108, 30, 69, -103, -105,
	-104, -106, 56, 60, 62, 57, 58, 59, 63, -208,
	-86, -94, 47, -348, -113, 111, -115, 23, -228, 64,
	193, 65, -348, -177, 67, -86, -108, -86, -111, -226,
	123, -185, -188, 69, 420, 422, 423, -182, -247, 131,
	66, 86, -83, -219, -227, -171, -73, -278, -279, -280,
	-219, 74, 75, -265, -266, -267, -268, -281, 203, -289,
	195, 197, 198, 44, -269, 204, 189, 45, -234, -255,
	403, -241, 68, -241, -241, 377, 369, 372, 370, -241,
	-241, -241, -241, -241, -246, 372, -246, -246, -246, -246,
	370, 68, 68, -241, -241, -241, -257, 68, -257, 364,
	-258, 68, -258, -258, -258, -258, -290, -290, -83, -222,
	67, 23, 191, -253, -252, -249, -250, -251, -248, 29,
	24, -253, -48, 238, 209, 176, 68, 176, 241, 242,
	-321, 69, 29, -327, 282, -108, -108, -108, -317, -317,
	-323, -297, 207, 202, -108, 69, 69, 74, 72, 72,
	-125, -273, 11, 109, -197, -226, -226, -108, -125, -197,
	-77, 214, 67, -351, -349, 72, -123, -41, -122, 70,
	-109, 27, 74, -315, -228, 397, 422, -343, 123, -218,
	-343, -346, 488, 192, 70, 69, -340, -343, 303, 285,
	-343, 11, -288, 19, -71, -349, -55, -54, 184, 181,
	182, 185, 186, -293, 400, 180, 235, 234, 220, -95,
	-348, -349, 69, 176, 52, -126, -126, -157, -191, 19,
	11, 47, 47, -72, 57, 83, 84, 85, 176, -348,
	-136, -123, -123, -123, -77, 89, -349, -79, 69, -349,
	176, -349, -349, -79, -158, 452, -158, -349, -349, -349,
	-349, -349, -349, -349, -349, -79, -79, -349, -158, -158,
	-158, -158, -349, -349, -349, -349, 69, 69, -79, -349,
	-349, -349, -80, -83, -349, -349, -349, 69, 67, 23,
	11, 11, -349, 11, 11, -349, -349, 11, -123, -123,
	-123, -349, -79, -149, -147, 96, -83, -349, -349, -349,
	-349, -349, -349, -121, 30, 47, -348, -3, -348, -180,
	-184, -145, -215, -89, -91, -91, -89, -91, 56, 56,
	56, 61, 56, 61, 56, -104, -228, -349, -349, -141,
	237, -348, 34, -228, -115, 189, 189, 189, -80, -116,
	12, -86, -116, -116, 176, -187, -190, 424, 421, 427,
	72, 74, 176, -172, 69, -280, 99, -268, 68, 72,
	-274, -217, 45, -269, 189, 45, -271, -269, -269, -274,
	72, -274, 45, 83, 90, -244, -245, -259, -262, -242,
	23, 549, 29, 66, 400, 195, 45, 44, 198, 81,
	-256, 404, 75, -246, -246, -241, -241, -241, 377, -241,
	-246, -247, 30, -247, -247, -247, -247, -246, -263, 74,
	-263, 75, -257, 75, 70, 66, -218, -167, -108, -250,
	-249, -251, 372, 416, 131, 428, -49, 8, 9, 10,
	-218, -302, -303, -304, 72, 109, 243, 244, -218, -330,
	315, -325, 283, 292, 89, 16, 488, 192, 192, -108,
	-317, -116, 72, 72, -194, -197, -123, -320, 229, 230,
	-177, 188, -316, 192, 176, 176, 192, 306, -319, -218,
	11, 11, 303, 11, -319, 339, -200, 69, -209, -269,
	-299, -267, -268, -298, 196, 203, 204, -209, 203, 200,
	-269, 204, 195, 196, -206, -269, 192, 23, -209, -209,
	-275, 99, -209, 33, 33, 111, -219, -219, 53, -108,
	-78, -168, 123, -219, -80, -77, 89, -123, -349, -82,
	-159, -158, 123, -227, -159, -159, -349, -218, -163, -348,
	-158, -159, -159, -158, -158, -158, -349, -349, -158, -159,
	-159, -159, -159, -123, -123, -349, -159, -159, -159, -349,
	-232, 132, 369, 213, 367, 360, 387, 374, 402, 365,
	403, -229, -232, -123, -123, -123, -123, -123, 11, 11,
	11, 485, -153, 98, -83, 95, -179, 66, -180, -140,
	-143, -142, -348, -3, -349, -173, 6, 488, -178, -218,
	-116, 69, 99, 99, -98, -97, 66, 67, -99, 66,
	-97, 56, 56, -176, 68, 69, -142, -348, -178, -123,
	-115, -348, -348, -348, -349, -153, -83, -116, 421, 425,
	426, -279, -280, -283, -282, -218, -217, 195, -289, 44,
	-289, -274, -274, -274, 68, 83, -348, 550, -123, 9,
	45, 45, 45, 74, 70, -247, -247, -246, -241, -247,
	72, 132, -247, 70, 69, 70, 69, 70, 69, -119,
	504, 90, -108, -169, 23, 30, -275, -275, -275, 66,
	70, 69, -233, 72, 72, 72, -333, 488, 288, -331,
	-329, 294, 295, 296, 297, 298, -320, 293, -327, 290,
	74, 72, -108, -317, -125, -246, -108, -319, 123, 123,
	-218, -319, 303, -345, 488, -319, -319, 11, -319, 74,
	-72, -54, 68, -264, 72, -217, -274, -202, 195, 72,
	72, 72, -217, 72, -217, -218, 45, 45, 72, -108,
	-218, -264, 72, -83, -218, -218, 176, -116, 11, 69,
	-81, -349, -123, -159, 176, -159, -223, 72, -159, -159,
	69, 69, -159, -349, -241, -241, -241, -258, -241, 353,
	-241, 353, -349, -349, 19, 19, 19, 19, -349, -123,
	-123, -123, -348, -75, 449, -83, 28, -179, 69, -349,
	-349, 47, -349, -349, 69, -153, -184, -83, -83, -83,
	68, -83, -175, -218, 237, -349, -115, -208, -175, -175,
	-175, -171, 70, 69, -241, -241, 45, -271, -175, -123,
	23, -129, 450, 451, -247, -246, 74, -246, 75, 75,
	504, 68, -3, -167, -275, 72, 132, 72, 132, 74,
	-108, -305, -306, -307, 81, 487, 90, 245, 246, 205,
	247, 248, 249, -304, -233, -233, -233, -336, -337, -335,
	291, 313, 314, 299, -334, -332, 308, 309, 310, 311,
	89, 74, 74, 74, -328, 282, 89, 291, 16, 23,
	-197, -308, -195, -345, -345, 285, -319, -78, -264, -155,
	208, 209, -233, -233, -222, -271, 45, 72, -207, 192,
	23, 192, -155, -264, 30, 181, 27, -219, -150, 13,
	-86, -168, -168, 123, -139, 111, -123, -123, -246, 72,
	-123, -123, -123, -123, -349, -349, -349, -123, -349, 74,
	45, -143, -140, 47, -3, -348, -218, -171, -175, 70,
	69, -142, -113, -228, -349, -349, -349, -285, -284, 67,
	199, 81, -282, -170, -170, -274, 70, -349, -348, -247,
	-247, 70, 70, -283, -167, -169, 72, 132, 19, -168,
	-307, 74, 249, 245, 249, 249, 249, 249, 250, -324,
	81, 289, -335, 300, 509, 284, 315, 75, 75, 110,
	31, 32, -332, 75, 75, 75, 75, -329, 16, 488,
	-327, 290, 74, 74, -309, 38, -311, 39, -344, 23,
	-344, 303, 11, 70, 72, -234, -234, 68, -274, 68,
	72, -218, -155, 29, 29, -348, -151, 14, 16, -116,
	-81, -153, 16, -349, -349, -349, -349, -349, -349, -74,
	109, 488, 9, -140, -3, 70, -218, -115, -284, 72,
	-275, 74, 206, -254, 552, 551, -123, 70, -3, 236,
	-169, 36, 36, 241, 242, 74, 74, 29, 301, 175,
	29, 75, 175, 455, 290, 74, 72, 291, -243, 193,
	-312, 43, -310, -261, 42, 16, -317, -86, -283, -222,
	-283, -123, -291, -292, 111, -161, 453, -152, -83, -138,
	-85, -83, -150, -168, -164, 113, 112, -137, -349, 486,
	63, 489, -180, -349, 75, -108, -349, -286, -285, -167,
	237, -20, -3, -9, -10, -11, -12, -14, -50, -15,
	-16, -21, -22, -17, -56, -57, -65, -63, -64, -60,
	-59, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, -35, 93, 194, 271, 340, 75, 29, 75, 29,
	304, 291, 23, -176, 75, -311, 16, -313, 40, 41,
	74, 488, -116, 70, 68, 70, -349, 69, -218, -160,
	-162, -218, 69, -151, -349, -165, 92, -166, 110, 455,
	-127, 75, 175, -165, 53, 487, 490, 68, -254, -156,
	239, 240, -167, -83, -83, 72, -46, -224, 274, 275,
	276, -219, -36, -20, 302, 302, 74, 38, 74, 16,
	16, 283, -150, -286, -283, -286, -292, 47, 69, 23,
	-85, -161, -166, 115, 116, 237, 115, 116, -122, 53,
	-175, -167, 72, 72, -37, -38, 94, 95, 272, 273,
	277, -233, 69, 555, 74, 74, 29, 288, 21, -320,
	-151, 70, 221, -162, -163, 89, -218, 488, 70, -169,
	98, 96, -38, -83, -36, 19, 19, 19, 29, -219,
	98, -20, 305, -161, -286, 222, -166, 489, -295, -296,
	66, -13, -19, -12, -9, -10, -11, 340, 93, -36,
	95, 555, -47, 75, -3, -45, -44, 75, -47, 279,
	90, 280, 72, -123, -320, -348, 490, -296, 66, -295,
	66, 10, 9, -167, -36, 555, -36, 98, 96, -39,
	-40, 97, -20, 69, 278, -123, 219, -294, 207, 202,
	205, 30, -294, 555, 98, 555, 194, -36, 98, 96,
	-40, -83, -44, -349, -349, 201, 29, 83, 98, 93,
	555, 194, -36, 95, 98, 555, -36, 194, 98, 555,
	194,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 741, 741, 741, 741,
	741, 741, 839, -2, 602, 0, 0, 0, 0, -2,
	714, 715, 716, 720, 721, 736, 738, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 40,
	0, 0, 56, 57, 1193, 0, 739, 728, 729, 0,
	0, 1737, 2, 1131, 0, 750, 743, 0, 1193, 1193,
	0, 0, 88, 0, 0, 0, 840, 0, 0, 0,
	1191, 1191, 239, 1191, 1191, 0, 1206, 237, 0, 1188,
	1202, 1203, 1204, 0, 0, 0, 1189, 0, 1189, 1189,
	1189, 1189, 1189, 1189, 1189, 0, 661, 859, 1215, 1216,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 0, 0,
	0, 706, 0, 672, 673, 674, 0, 676, 0, 0,
	0, 0, 0, 686, 689, 693, 0, 1131, 1131, 548,
	549, 550, 711, 712, 700, 713, 0, 0, 0, 0,
	0, 820, 314, 316, 0, 336, 0, 339, 342, 1221,
	722, 0, 0, 1246, 1247, 0, 0, 0, 0, 0,
	1587, 182, 253, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 0, 184, 184, 184, 1599, 184, 0, 184,
	184, 184, 184, 184, 252, 242, 243, 244, 0, 0,
	0, 1587, 0, 528, 525, 526, 741, 0, 745, 0,
	1194, 717, 45, 0, 47, 1147, 841, 842, 843, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 0, 1137, 0, 0, 753, 751, 752, 742, 0,
	764, 794, 0, 870, 0, 876, 878, -2, -2, 0,
	919, 920, 921, 922, 923, 924, 0, 0, 0, 0,
	0, 0, 0, 947, 948, 949, 950, 951, 952, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1679, 1680, 1681,
	1682, 1684, 1685, 1686, 1693, 1694, 1697, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1710, 1711, 1716, 1718, 1720, 1723,
	1724, 1725, 1726, 1728, 1729, 1730, 1732, 1733, 1734, 880,
	881, 1101, 1160, 0, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1092, 0, 1021, 1021,
	1021, 1021, 1021, 1021, 1021, 1021, 1021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 69, 859, 73,
	1653, 0, 1165, -2, -2, 1167, 0, 0, 0, -2,
	-2, -2, -2, 1448, -2, 1101, 0, 89, 1123, 741,
	90, 0, 379, 380, 0, 1461, 572, 1213, 1214, 1450,
	1209, 1210, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 0,
	0, 237, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 1191, 239, 0, 0, 642, 0, 643, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 662, 663, 706, 665, 0, 0, 1191, 1191,
	0, 0, 0, 0, 0, 574, 575, 706, 706, 706,
	706, 703, 0, 703, 683, 703, 701, 702, 0, 688,
	0, 0, 0, 696, 697, 723, 0, 0, 730, 732,
	733, 734, 735, 731, 0, 740, 0, 0, 0, 318,
	0, 0, 338, 320, 0, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 341, 0,
	1219, 1222, 727, 1237, 1238, 0, 1248, 1249, 188, 188,
	0, 0, 0, 0, 151, 184, 0, 153, 184, 184,
	184, 0, 184, 184, 160, 161, 184, 163, 164, 165,
	166, 167, 184, 169, 170, 171, 184, 184, 174, 184,
	184, 177, 178, 179, 180, 181, 251, 188, 0, 0,
	188, 0, 0, 510, 0, 0, 0, 0, 515, 516,
	517, 518, 0, 0, 521, 522, 750, 42, 52, 0,
	746, 747, 0, 0, 0, 46, 0, 0, 51, 1738,
	37, 0, 0, 1132, 1135, 1136, 1124, 1125, 1128, 0,
	0, 748, 754, 755, 744, 0, 765, 0, 0, 0,
	0, 795, 0, 797, 798, 799, 800, 0, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 898, 899,
	900, 901, 902, 903, 904, 877, 0, 891, 0, 0,
	0, 940, 941, 942, 943, 944, 945, 0, 753, 0,
	0, 0, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 753, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 0, 0, 0,
	753, 0, 0, 917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 1093, 0, 1004, 1013,
	0, 1005, 1014, 1006, 1015, 1007, 0, 1008, 1016, 1009,
	1017, 1010, 1011, 1018, 1012, 0, 913, 0, 0, 71,
	0, 858, 0, 801, 803, 804, 805, -2, 0, 809,
	864, 911, 1215, -2, 0, 0, 0, 63, 64, 0,
	0, 0, 0, 74, 76, 0, 0, 1653, 1168, 1169,
	484, 1182, 1183, 1184, 0, 1180, 0, 1131, 750, 589,
	0, 381, 0, 0, 393, 474, 404, 405, 406, 467,
	408, 467, 467, 0, 467, 467, 467, 467, 467, 481,
	481, 481, 481, 481, 450, 451, 452, 453, 454, 0,
	0, 427, 467, 467, 467, 431, 457, 458, 459, 460,
	461, 462, 463, 464, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 469, 469, 471, 471, 471, 471,
	471, 0, 0, 571, 0, 1207, 0, 0, 239, -2,
	0, -2, 0, 854, 0, 0, 861, 0, 0, 100,
	269, 255, 99, 0, 233, 238, 234, 235, 236, 0,
	0, 0, 0, 246, 657, 1190, 0, 650, 65, 651,
	652, 653, 654, 655, 248, 656, 860, 1217, 1218, 664,
	707, 0, 709, 0, 0, 820, 669, 670, 671, 576,
	677, 678, 679, 685, 706, 0, 0, 0, 820, 706,
	687, 905, 690, 1021, 0, 725, 724, 0, 737, 0,
	315, 317, 319, 337, 0, 0, 340, 343, 0, 0,
	0, 0, 1240, 0, 1242, 1244, 0, 0, 189, 190,
	191, 0, 183, 0, 206, 254, 0, 152, 0, 186,
	154, 155, 156, 184, 158, 159, 162, 168, 172, 173,
	175, 176, 250, 0, 0, 0, 0, 149, 0, 511,
	512, 513, 514, 523, 520, 753, 0, 0, 718, 719,
	48, 0, 0, 1149, 1138, 0, 0, 0, 0, 1127,
	1129, 1130, 0, 0, 1112, 0, 0, 756, 749, 39,
	871, 872, 873, 875, 892, 0, 894, 896, 796, 766,
	0, 1102, -2, 882, 883, 907, 908, 909, 0, 0,
	0, 0, 905, 887, 0, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 939, 1035, 1036,
	0, 937, 938, 946, 0, 0, 915, 760, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	913, 910, 0, 1159, 0, 0, 0, 986, 0, 0,
	922, 1104, 0, 922, 1104, 0, 0, 0, 0, 0,
	0, 0, 1099, 1096, 0, 0, 1022, 0, 0, 0,
	914, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 844, 0, 0, 847, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 1573, 815, 0, 864, 0,
	0, 0, 913, 868, 0, 868, 68, 868, 70, 0,
	863, 1166, 0, 0, 0, 79, 80, 75, 1170, 0,
	1176, 1177, 1178, 1102, 0, 1137, 753, 378, 590, 592,
	595, 596, 597, 382, 384, 385, 386, 0, -2, 563,
	1583, 1630, -2, -2, 555, 1496, -2, -2, 389, 476,
	475, 407, 0, 481, 481, 467, 467, 467, 467, 436,
	481, 439, 442, 443, 484, 0, 484, 484, 484, 484,
	481, 0, 0, 428, 429, 430, 419, 0, 420, 469,
	422, 0, 423, 424, 425, 426, 569, 570, 0, 0,
	0, 85, 0, 94, -2, 491, 492, 493, 0, 488,
	1192, 95, 0, 271, 272, 0, 209, 0, 240, 241,
	102, 0, 0, 256, 0, 377, 0, 644, 0, 646,
	245, 648, 658, 659, 649, 0, 0, 708, 666, 667,
	668, 868, 0, 0, 680, 704, 705, 703, 706, 684,
	698, 0, 0, 691, 0, 726, 821, 321, 322, 344,
	71, 0, 1220, 1239, 0, 1243, 1245, 0, 192, 194,
	0, 143, 0, 0, 185, 0, 157, 0, 0, 0,
	0, 0, 519, 0, 748, 53, 603, 604, -2, 635,
	1199, 635, 635, 621, 538, 635, 0, 0, 0, 49,
	0, 1148, 0, 0, 0, 1133, 1134, 1126, 0, 1185,
	1186, 1113, 1114, 86, 757, 893, 895, 897, 0, 913,
	884, 905, 888, 0, 885, 0, 879, 0, 0, 775,
	0, 775, 775, 0, 972, 0, 973, 1000, 0, 985,
	775, 775, 0, 0, 0, 0, 0, 0, 979, 980,
	981, 982, 775, 775, 775, 775, 0, 0, 0, 775,
	775, 775, 0, 918, -2, 983, 984, 0, 0, 0,
	0, 0, 1028, 0, 0, 1029, 994, 0, 0, 0,
	0, 0, 1123, 0, 1097, 0, 0, 1003, 1023, 1024,
	1025, 1026, 1027, 1153, 0, 0, 0, 1142, 0, 868,
	1161, 0, 0, 802, 835, 837, 0, 832, 845, 846,
	848, 0, 850, 0, 852, 853, 822, 808, 912, 810,
	0, 0, 0, 864, 819, 0, 0, 0, 0, 1123,
	0, 868, 61, 62, 0, 77, 78, 0, 0, 84,
	485, 486, 0, 208, 0, 593, 0, 383, 0, 556,
	0, 0, 540, 555, 551, 552, 555, 554, 555, 546,
	556, 547, 0, 394, 0, 396, 397, 398, 399, 400,
	0, 0, 0, 0, 480, 0, 505, 507, 0, 0,
	403, 477, 0, 484, 484, 481, 434, 435, 467, 440,
	484, 444, 0, 445, 446, 447, 448, 484, 0, 465,
	0, 0, 421, 0, 586, 0, 1208, 87, 0, 494,
	495, 496, 0, 538, 538, 538, 0, 273, 274, 275,
	855, 0, 210, 211, 0, 0, 0, 0, 862, 112,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 66,
	249, 675, 577, 578, 820, 682, 906, 692, 694, 695,
	481, 0, 1241, 0, 0, 0, 0, 0, 204, 187,
	0, 0, 0, 0, 150, 0, 756, 0, 0, 555,
	0, 622, 623, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1200, 1201, 0, 0,
	0, 539, 0, 630, 631, 0, 1151, 1150, 1139, 38,
	868, 0, 767, 1103, 0, 886, 0, 889, 775, 916,
	957, 776, 762, 0, 958, 959, 775, 768, 769, 771,
	974, 961, 962, 975, 976, 977, 775, 775, 978, 966,
	965, 964, 967, 0, 0, 775, 970, 969, 971, 953,
	0, 467, 467, 1082, 467, 471, 1085, 467, 1087, 467,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 1002, 1100, 0, 54, 0, 1153, 1140,
	1155, 1157, 0, 0, 0, 0, -2, 1425, 0, 826,
	1123, 0, 0, 0, 829, 836, 0, 0, 830, 0,
	831, 849, 851, 806, 0, 0, 811, 0, 0, -2,
	818, 0, 0, 0, 828, 1131, 869, 60, 81, 82,
	83, 591, 594, 0, 557, 467, 467, 0, 561, 553,
	562, 542, 543, 545, 0, 395, 0, 0, 478, 0,
	504, 506, 508, 509, 468, 432, 433, 484, 441, 437,
	482, 483, 449, 481, 0, 481, 0, 472, 0, 573,
	587, 0, 0, 0, 85, 538, 0, 0, 0, 0,
	217, 0, 213, 0, 0, 0, 120, 0, 103, 104,
	105, 107, 108, 0, 0, 0, 101, 0, 258, 0,
	261, 262, 645, 647, 706, 1231, 856, 204, 193, 195,
	196, 204, 207, 144, 0, 145, 147, 0, 146, 524,
	86, 605, 0, 632, 0, 0, 1207, 553, 0, -2,
	608, 613, 614, 615, 616, 617, 0, 628, 0, 610,
	0, 632, 0, 625, 0, 0, 0, 1115, 0, 86,
	86, 954, 890, 956, 0, 960, 773, 772, 955, 963,
	0, 0, 968, 987, 1079, 481, 1083, 1084, 1086, 1088,
	1089, 1091, 989, 988, 0, 0, 0, 0, 995, 0,
	0, 0, 0, 0, 0, 1098, 0, 55, 0, 1158,
	-2, 0, 0, 72, 0, 1131, 1162, 1163, 1164, 833,
	0, 838, 0, 824, 0, 864, 816, 0, 0, 0,
	0, 59, 530, 0, 1128, 1128, 541, 555, 0, 0,
	0, 479, 0, 0, 438, 484, 466, 484, 0, 0,
	588, 0, 85, 87, 0, 499, 500, 501, 502, 503,
	0, 86, 218, 219, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 212, 214, 215, 216, 138, 121, 122,
	0, 0, 0, 0, 113, 114, 0, 0, 0, 0,
	0, 109, 110, 111, 257, 0, 0, 260, 0, 0,
	681, 1233, 1227, 197, 197, 0, 148, 0, 0, 607,
	633, 0, 393, 393, 0, 555, 0, 624, 0, 1197,
	1198, 0, 619, 632, 0, 0, 0, 1152, 1120, 0,
	868, 0, 758, 763, 1123, 0, 0, 0, 1080, 1081,
	0, 0, 0, 0, 996, 997, 998, 1030, 1001, 1095,
	0, 1156, 1141, 0, 1145, 0, 827, 58, 0, 823,
	0, 812, 814, 864, 865, 866, 867, 529, 533, 0,
	538, 0, 558, 559, 560, 544, 0, 390, 0, 455,
	456, 470, 473, 0, 92, 0, 497, 498, 0, 87,
	220, 221, 222, 223, 225, 226, 0, 0, 0, 98,
	0, 0, 123, 0, 0, 0, 0, 133, 134, 135,
	136, 137, 115, 116, 117, 118, 119, 106, 0, 0,
	259, 0, 264, 265, 1195, 1235, -2, 0, 141, 0,
	142, 205, 0, 606, 634, 387, 388, 0, 1207, 0,
	609, 618, 620, 0, 627, 0, 787, 0, 0, 1115,
	86, 777, 0, 1019, 1020, 990, 992, 991, 993, 0,
	0, 0, 0, 1144, 0, 834, 825, 817, 534, 535,
	0, 537, 0, 401, 391, 392, 0, 531, 85, 0,
	0, 227, 228, 229, 230, 139, 140, 124, 125, 0,
	127, 128, 0, 0, 0, 267, 0, 263, 822, 0,
	1227, 0, 1229, 0, 1226, 0, 198, 868, 0, 0,
	0, 626, 0, 638, 0, 43, 0, 1121, 1122, 1116,
	1117, 1119, 1120, 759, 0, 0, 0, 774, 999, 0,
	0, 0, 1154, -2, 536, 0, 390, 91, 532, 93,
	276, 85, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 0, 0, 0, 0, 129, 0, 131,
	132, 266, 0, 36, 0, 1234, 0, 1232, 0, 0,
	1228, 0, 1115, 531, 0, 531, 637, 0, 0, 788,
	789, 0, 0, 787, 770, 778, 0, 781, 0, 0,
	0, 792, 0, 779, 1031, 0, 1034, 0, 402, 85,
	0, 0, 97, 0, 0, 1209, 0, 0, 303, 304,
	305, 1211, 0, 345, 126, 130, 268, 1196, 1236, 0,
	0, 0, 1120, 611, 0, 629, 639, 0, 0, 0,
	1118, 44, 0, 782, 783, 784, 785, 786, 0, 1032,
	0, 87, 277, 278, 0, 287, 0, 0, 0, 0,
	0, 301, 0, 0, 1230, 1224, 199, 200, 201, 203,
	787, 531, 0, 790, 791, 0, 793, 0, 564, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 1212,
	231, 346, 0, 41, 612, 0, 780, 0, 565, 566,
	0, 85, 279, 280, 281, 282, 283, 0, 285, 0,
	0, 0, 297, 298, 299, 0, 306, 308, 309, 310,
	0, 312, 313, 302, 202, 0, 1033, 567, 0, 568,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 0,
	294, 0, 300, 0, 311, 0, 0, 579, 581, 582,
	0, 0, 580, 0, 0, 289, 290, 0, 0, 0,
	295, 0, 307, 640, 641, 583, 584, 585, 284, 286,
	0, 292, 0, 0, 0, 0, 0, 291, 0, 296,
	293,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 91, 3, 3, 3, 126, 118, 3,
	68, 70, 123, 121, 69, 122, 176, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	100, 99, 101, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 92, 93, 94, 95, 96,
	97, 98, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 119, 120, 125,
	127, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:516
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:558
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:564
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:570
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:583
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:594
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:623
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:669
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:681
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:703
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:713
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:717
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:721
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:760
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:764
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:770
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:774
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:781
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:794
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:814
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:818
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:831
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:841
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:847
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:866
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:870
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:876
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:882
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:890
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:898
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:902
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:906
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:925
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:943
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:961
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:983
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:988
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1002
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1008
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1012
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1053
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1065
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1069
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1073
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1077
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1117
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1122
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1126
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1130
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1136
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1141
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1145
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1149
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1153
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1157
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1298
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1385
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1413
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1417
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1470
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1474
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1478
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1486
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1512
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1518
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1614
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1650
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1658
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1664
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1672
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1676
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1680
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1684
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1690
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1698
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = BeforeStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = AfterStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = InsertStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = UpdateStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = DeleteStr
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1737
		{
			yyVAL.triggerOrder = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1771
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1793
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 291:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1798
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1803
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 293:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1809
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1853
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1914
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.statement = &Resignal{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.exprs = nil
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.exprs = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2110
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2137
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2218
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2263
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2272
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2566
		{
			yyVAL.sqlVal = nil
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2575
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2579
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2587
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2591
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2597
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2605
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2614
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2641
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.boolean = false
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.boolean = true
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.charsetCollates = nil
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2712
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2716
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2720
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2724
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2730
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2734
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2740
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.colKeyOpt = colKey
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2788
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = yyDollar[1].str
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2846
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2850
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2855
		{
			yyVAL.indexOptions = nil
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2904
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2912
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2916
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2925
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = ""
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = yyDollar[1].str
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2985
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3015
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 565:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3019
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 566:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3023
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 567:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3027
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 568:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3031
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3045
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3055
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3112
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3117
		{
			yyVAL.boolean = true
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.boolean = true
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.boolean = false
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = string("")
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3195
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3218
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3225
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3236
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3245
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 612:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3249
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3281
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3288
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3310
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3319
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3323
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3331
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3337
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3346
		{
			yyVAL.columnOrder = nil
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3359
		{
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
		}
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3365
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3381
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 641:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3385
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3405
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3423
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3431
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3435
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3443
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3459
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3467
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3483
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3492
		{

		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3510
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3526
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3534
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3538
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3542
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3547
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3551
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3555
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3579
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3587
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3591
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3595
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3600
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3605
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3609
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3613
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3621
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3635
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3639
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3644
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3648
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3681
		{
			yyVAL.boolean = false
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.boolean = true
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3715
		{
			yyVAL.showFilter = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3719
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = SessionStr
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = GlobalStr
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &Begin{}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3761
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3767
		{
			yyVAL.statement = &Begin{}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3771
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3775
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.statement = &Commit{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.statement = &Rollback{}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3803
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3807
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3811
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3831
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			setAllowComments(yylex, true)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3870
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.bytes2 = nil
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3880
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.str = UnionStr
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.str = UnionAllStr
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.str = UnionDistinctStr
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3899
		{
			yyVAL.byt = 0
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.byt = 1
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = ""
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = SQLCacheStr
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.str = ""
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = DistinctStr
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3934
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = StraightJoinHint
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3975
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3989
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3993
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 770:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4009
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4022
		{
			yyVAL.exprs = nil
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.over = nil
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.over = yyDollar[1].over
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.frame = nil
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4055
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.window = nil
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.window = yyDollar[2].window
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4192
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4206
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4229
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4235
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4239
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4250
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4265
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4269
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4277
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = nil
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.columns = nil
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4311
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4327
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4340
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4344
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4348
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4360
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = JoinStr
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = JoinStr
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = JoinStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = StraightJoinStr
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = LeftJoinStr
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = LeftJoinStr
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = RightJoinStr
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4424
		{
			yyVAL.str = RightJoinStr
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = NaturalJoinStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4460
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.indexHints = nil
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4499
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4503
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4507
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4512
		{
			yyVAL.expr = nil
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = IsNullStr
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = IsNotNullStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = IsTrueStr
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = IsNotTrueStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = IsFalseStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = IsNotFalseStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = EqualStr
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = LessThanStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = GreaterThanStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = LessEqualStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = GreaterEqualStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = NotEqualStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = nil
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4713
		{
			yyVAL.selectExprs = nil
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4784
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4840
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4969
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4973
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4977
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4981
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4985
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4989
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4993
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 993:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1001:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5096
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5100
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5110
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5114
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5213
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5217
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5225
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = ""
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = BooleanModeStr
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5239
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5243
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5263
		{
			yyVAL.str = Armscii8Str
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			yyVAL.str = AsciiStr
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.str = Big5Str
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
			yyVAL.str = UBinaryStr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
			yyVAL.str = Cp1250Str
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = Cp1251Str
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = Cp1256Str
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = Cp1257Str
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = Cp850Str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = Cp852Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = Cp866Str
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.str = Cp932Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = Dec8Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = EucjpmsStr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = EuckrStr
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = Gb18030Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = Gb2312Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = GbkStr
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = Geostd8Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = GreekStr
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = HebrewStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = Hp8Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = Keybcs2Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = Koi8rStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = Koi8uStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = Latin1Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = Latin2Str
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = Latin5Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = Latin7Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = MacceStr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = MacromanStr
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = SjisStr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = Swe7Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = Tis620Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = Ucs2Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = UjisStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = Utf16Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = Utf16leStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = Utf32Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5433
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5437
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5449
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5453
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5463
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5471
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5475
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5483
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5488
		{
			yyVAL.expr = nil
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = string("")
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5511
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5517
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = nil
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5532
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5540
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.expr = &NullVal{}
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5593
		{
			yyVAL.exprs = nil
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5597
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5603
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5607
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = nil
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5633
		{
			yyVAL.orderBy = nil
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5637
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5643
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5647
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5653
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = AscScr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = AscScr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = DescScr
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5671
		{
			yyVAL.limit = nil
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5675
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5679
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5683
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = ForUpdateStr
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = ShareModeStr
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5719
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5723
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5727
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5736
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5740
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5744
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5750
		{
			yyVAL.columns = nil
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5754
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5764
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5772
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.assignExprs = nil
		}
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5781
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5787
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5797
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5801
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5807
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5823
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5827
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5833
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5842
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5846
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5852
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5863
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5876
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5889
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5899
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5905
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5919
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5923
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5927
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5934
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5949
		{
			yyVAL.expr = &Default{}
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5958
		{
			yyVAL.byt = 0
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.byt = 1
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5963
		{
			yyVAL.byt = 0
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5965
		{
			yyVAL.byt = 1
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5968
		{
			yyVAL.byt = 0
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.byt = 1
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5973
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5975
		{
			yyVAL.str = IgnoreStr
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5978
		{
			yyVAL.sqlVal = nil
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.empty = struct{}{}
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			yyVAL.empty = struct{}{}
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5989
		{
			yyVAL.empty = struct{}{}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			yyVAL.empty = struct{}{}
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.empty = struct{}{}
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = UniqueStr
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5999
		{
			yyVAL.str = FulltextStr
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = SpatialStr
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6004
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6009
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6011
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6025
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6029
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = string("")
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6060
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6063
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6068
		{
			yyVAL.EnclosedBy = nil
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6072
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6077
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6081
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6086
		{
			yyVAL.sqlVal = nil
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6095
		{
			yyVAL.sqlVal = nil
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6104
		{
			yyVAL.Fields = nil
		}
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6108
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.Lines = nil
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.sqlVal = nil
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6132
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6148
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6152
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.lockType = LockRead
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6162
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.lockType = LockWrite
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6170
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6176
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6182
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6723
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
