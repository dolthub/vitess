// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 82,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1815,
	201, 1836,
	-2, 338,
	-1, 62,
	243, 1188,
	244, 1188,
	-2, 1177,
	-1, 90,
	272, 338,
	-2, 1821,
	-1, 94,
	8, 61,
	9, 61,
	10, 61,
	-2, 54,
	-1, 95,
	8, 64,
	9, 64,
	-2, 55,
	-1, 546,
	1, 2519,
	6, 2519,
	7, 2519,
	29, 2519,
	188, 2519,
	764, 2519,
	-2, 1223,
	-1, 559,
	188, 1846,
	-2, 1840,
	-1, 560,
	188, 1847,
	-2, 1841,
	-1, 664,
	1, 689,
	764, 689,
	-2, 687,
	-1, 673,
	1, 1329,
	8, 1329,
	9, 1329,
	10, 1329,
	17, 1329,
	18, 1329,
	19, 1329,
	20, 1329,
	22, 1329,
	24, 1329,
	26, 1329,
	35, 1329,
	36, 1329,
	65, 1329,
	66, 1329,
	67, 1329,
	68, 1329,
	69, 1329,
	71, 1329,
	72, 1329,
	75, 1329,
	76, 1329,
	78, 1329,
	79, 1329,
	97, 1329,
	527, 1329,
	575, 1329,
	653, 1329,
	764, 1329,
	-2, 1830,
	-1, 678,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1830,
	-1, 707,
	188, 2215,
	-2, 1451,
	-1, 740,
	188, 2323,
	-2, 1721,
	-1, 741,
	188, 2405,
	-2, 1453,
	-1, 742,
	188, 2235,
	-2, 1454,
	-1, 811,
	188, 2186,
	-2, 1685,
	-1, 814,
	188, 2201,
	-2, 1603,
	-1, 815,
	188, 2204,
	-2, 1603,
	-1, 816,
	188, 2415,
	-2, 1603,
	-1, 818,
	188, 2202,
	-2, 1603,
	-1, 819,
	188, 2416,
	-2, 1603,
	-1, 820,
	188, 2417,
	-2, 1603,
	-1, 879,
	188, 2203,
	-2, 1603,
	-1, 962,
	188, 2303,
	-2, 1603,
	-1, 963,
	188, 2304,
	-2, 1603,
	-1, 1076,
	110, 2532,
	121, 2532,
	188, 2532,
	-2, 1797,
	-1, 1077,
	110, 2663,
	121, 2663,
	188, 2663,
	-2, 1798,
	-1, 1082,
	110, 2560,
	121, 2560,
	188, 2560,
	-2, 1799,
	-1, 1083,
	110, 2611,
	121, 2611,
	188, 2611,
	-2, 1800,
	-1, 1084,
	110, 2612,
	121, 2612,
	188, 2612,
	-2, 1801,
	-1, 1085,
	110, 2459,
	121, 2459,
	188, 2459,
	-2, 1806,
	-1, 1087,
	110, 2588,
	121, 2588,
	188, 2588,
	-2, 1808,
	-1, 1259,
	454, 1202,
	-2, 1206,
	-1, 1261,
	454, 1202,
	-2, 1206,
	-1, 1386,
	1, 689,
	764, 689,
	-2, 687,
	-1, 1388,
	1, 690,
	764, 690,
	-2, 687,
	-1, 1411,
	1, 1330,
	8, 1330,
	9, 1330,
	10, 1330,
	17, 1330,
	18, 1330,
	19, 1330,
	20, 1330,
	22, 1330,
	24, 1330,
	26, 1330,
	35, 1330,
	36, 1330,
	65, 1330,
	66, 1330,
	67, 1330,
	68, 1330,
	69, 1330,
	71, 1330,
	72, 1330,
	75, 1330,
	76, 1330,
	78, 1330,
	79, 1330,
	97, 1330,
	527, 1330,
	575, 1330,
	653, 1330,
	764, 1330,
	-2, 1830,
	-1, 1422,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1830,
	-1, 1471,
	8, 62,
	9, 62,
	10, 62,
	-2, 50,
	-1, 1719,
	1, 689,
	764, 689,
	-2, 687,
	-1, 1721,
	1, 689,
	764, 689,
	-2, 687,
	-1, 2280,
	188, 1850,
	-2, 1697,
	-1, 2283,
	188, 2751,
	-2, 1700,
	-1, 2284,
	188, 2752,
	-2, 1701,
	-1, 2285,
	188, 1849,
	-2, 1845,
	-1, 2435,
	76, 101,
	78, 101,
	-2, 105,
	-1, 2453,
	188, 2327,
	-2, 1802,
	-1, 2460,
	1, 910,
	764, 910,
	-2, 687,
	-1, 2649,
	50, 931,
	207, 934,
	209, 931,
	210, 931,
	211, 931,
	-2, 1048,
	-1, 2731,
	8, 62,
	9, 62,
	10, 62,
	79, 50,
	-2, 1483,
	-1, 2748,
	1, 1375,
	8, 1375,
	9, 1375,
	10, 1375,
	17, 1375,
	18, 1375,
	19, 1375,
	20, 1375,
	22, 1375,
	24, 1375,
	26, 1375,
	35, 1375,
	36, 1375,
	65, 1375,
	66, 1375,
	67, 1375,
	68, 1375,
	69, 1375,
	71, 1375,
	72, 1375,
	75, 1375,
	76, 1375,
	78, 1375,
	79, 1375,
	97, 1375,
	527, 1375,
	575, 1375,
	653, 1375,
	764, 1375,
	-2, 1830,
	-1, 2926,
	213, 1042,
	217, 1042,
	-2, 798,
	-1, 2927,
	213, 1112,
	217, 1112,
	-2, 799,
	-1, 3198,
	1, 1437,
	8, 1437,
	9, 1437,
	10, 1437,
	17, 1437,
	18, 1437,
	19, 1437,
	20, 1437,
	22, 1437,
	24, 1437,
	26, 1437,
	35, 1437,
	36, 1437,
	65, 1437,
	66, 1437,
	67, 1437,
	68, 1437,
	69, 1437,
	71, 1437,
	72, 1437,
	75, 1437,
	76, 1437,
	78, 1437,
	79, 1437,
	97, 1437,
	527, 1437,
	575, 1437,
	653, 1437,
	764, 1437,
	-2, 1830,
	-1, 3302,
	1, 1753,
	26, 1753,
	75, 1753,
	764, 1753,
	-2, 1830,
	-1, 3505,
	50, 931,
	207, 934,
	209, 931,
	210, 931,
	211, 931,
	-2, 1048,
	-1, 3525,
	207, 935,
	213, 1042,
	217, 1042,
	-2, 933,
	-1, 3716,
	78, 2098,
	79, 2098,
	188, 2098,
	-2, 1231,
	-1, 3717,
	77, 1764,
	253, 1764,
	-2, 2147,
	-1, 3718,
	77, 1765,
	253, 1765,
	-2, 2717,
	-1, 3964,
	8, 62,
	9, 62,
	10, 62,
	-2, 50,
	-1, 4110,
	47, 1861,
	-2, 1859,
	-1, 4375,
	8, 62,
	9, 62,
	10, 62,
	-2, 50,
	-1, 4396,
	316, 435,
	-2, 1917,
	-1, 4397,
	316, 436,
	-2, 1958,
	-1, 4398,
	316, 437,
	-2, 2135,
	-1, 4635,
	105, 421,
	107, 421,
	109, 421,
	-2, 82,
	-1, 4716,
	107, 428,
	108, 428,
	109, 428,
	-2, 82,
}

const yyPrivate = 57344

const yyLast = 82886

var yyAct = [...]int{
	753, 44, 4689, 4652, 4639, 4589, 4627, 4626, 4403, 4378,
	699, 1192, 1414, 4402, 4252, 3, 4591, 571, 2943, 2450,
	4505, 4255, 8, 4367, 4254, 7, 3310, 4504, 4104, 4099,
	4253, 6, 4286, 28, 657, 4256, 9, 4390, 2374, 4069,
	4389, 2942, 4012, 494, 4380, 108, 3661, 2373, 4227, 3278,
	3467, 3991, 1421, 4365, 2727, 3924, 726, 107, 4149, 109,
	3367, 4117, 2984, 4105, 3917, 2664, 4155, 709, 1540, 713,
	3876, 3875, 2310, 3512, 1753, 3631, 3722, 4108, 4054, 689,
	3714, 3958, 3867, 3051, 3911, 1462, 550, 553, 1710, 3188,
	598, 2924, 2541, 3935, 3445, 3480, 3804, 675, 653, 3010,
	101, 2477, 3821, 1752, 2255, 2715, 3910, 3368, 1416, 108,
	4379, 752, 1469, 1173, 3311, 1638, 3626, 3706, 2930, 3124,
	1152, 698, 1755, 109, 2996, 3517, 2954, 1568, 3637, 1220,
	2923, 3593, 817, 2179, 3605, 2509, 1418, 3584, 135, 2732,
	2931, 2467, 3024, 2646, 105, 3087, 1392, 2857, 491, 4106,
	2188, 641, 3465, 1164, 2879, 2647, 2613, 3186, 1569, 3240,
	1381, 2483, 1269, 2880, 2571, 2241, 1160, 718, 712, 2644,
	2180, 2595, 2117, 1246, 1209, 2158, 2243, 1270, 1758, 700,
	1420, 2505, 1729, 1413, 1450, 694, 2640, 1081, 2977, 1614,
	1078, 2052, 1618, 2363, 1458, 2287, 2718, 1453, 2882, 1303,
	673, 2122, 2092, 1281, 1645, 669, 1617, 1074, 2170, 3091,
	1155, 3798, 1387, 1075, 2326, 1478, 2437, 2248, 682, 1191,
	1399, 3723, 1391, 1390, 1168, 1389, 2481, 574, 656, 43,
	573, 1265, 2084, 2051, 2085, 1722, 1179, 1280, 130, 556,
	692, 665, 4716, 1175, 1204, 1181, 1182, 4710, 126, 1156,
	4697, 4681, 4667, 4635, 4633, 4604, 4601, 4600, 4599, 4584,
	4582, 4484, 4480, 4475, 100, 670, 4151, 4150, 3286, 3383,
	2950, 2115, 3639, 2526, 1183, 2957, 4349, 3887, 2756, 2558,
	2557, 3458, 3882, 3883, 3880, 3881, 3427, 3428, 3513, 86,
	3515, 2962, 2961, 4660, 4622, 4032, 1441, 4620, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 3886, 3461, 4705,
	662, 4030, 4659, 3287, 4621, 3459, 2958, 94, 688, 97,
	3366, 2245, 3137, 2988, 4033, 3992, 1732, 4417, 4416, 667,
	42, 99, 2964, 566, 2940, 4625, 3460, 4363, 4566, 2676,
	3994, 2555, 2941, 2375, 2387, 2385, 2384, 2383, 2386, 2382,
	2381, 2380, 2376, 2377, 2394, 2378, 2393, 2392, 2379, 2391,
	2390, 2389, 2388, 3241, 3805, 4233, 123, 655, 42, 4040,
	2044, 716, 1355, 4516, 3807, 1185, 2387, 2385, 2384, 2383,
	2386, 2382, 2381, 2380, 2452, 2944, 2394, 42, 2393, 2392,
	42, 2391, 2390, 2389, 2388, 2555, 89, 4381, 3008, 1314,
	4321, 3905, 4124, 3187, 4362, 3268, 42, 505, 3776, 1151,
	3573, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 4653, 570, 1503, 3586, 4064, 3773, 3622,
	3301, 3861, 3307, 702, 89, 88, 3308, 71, 4424, 149,
	4232, 146, 3865, 147, 560, 3337, 3244, 47, 2960, 3987,
	3908, 3307, 2963, 89, 1167, 3308, 89, 1163, 3336, 3606,
	2953, 3993, 3147, 3988, 3909, 3146, 4348, 4439, 679, 2968,
	4174, 4219, 89, 4371, 4113, 2833, 3698, 545, 1172, 151,
	150, 115, 113, 114, 3322, 3323, 1356, 3408, 1068, 2594,
	2757, 3810, 2242, 3409, 3410, 2871, 568, 1619, 2870, 1620,
	2588, 2872, 164, 2121, 492, 504, 1259, 138, 164, 3321,
	4368, 2629, 154, 164, 2446, 2196, 668, 2447, 2448, 96,
	1224, 1225, 2955, 640, 1228, 4441, 4371, 1253, 3330, 2119,
	2120, 4350, 164, 89, 3808, 3809, 3811, 3812, 3813, 2161,
	2162, 164, 3659, 1242, 4366, 1243, 1244, 1245, 2139, 2118,
	1244, 1245, 1333, 565, 564, 164, 1341, 96, 2966, 3936,
	1226, 1227, 3221, 4368, 3943, 4457, 164, 1166, 137, 650,
	2956, 152, 2593, 153, 1300, 4372, 96, 2479, 2480, 96,
	2494, 2213, 2493, 1405, 1406, 3110, 3544, 2498, 164, 640,
	3679, 3683, 3681, 1229, 1215, 96, 2625, 2163, 4659, 4621,
	492, 164, 4619, 2487, 2486, 2577, 2488, 1254, 1255, 2506,
	1401, 1404, 1405, 1406, 1402, 2576, 1403, 1408, 540, 543,
	2719, 2720, 3941, 1401, 1404, 1405, 1406, 1402, 4372, 1403,
	1408, 2484, 4458, 563, 644, 645, 3355, 2484, 1358, 1359,
	1230, 733, 666, 734, 736, 737, 738, 739, 2159, 2160,
	647, 735, 2322, 598, 1152, 2398, 645, 1353, 1382, 1350,
	1354, 4477, 2090, 1385, 4478, 1262, 4479, 3486, 4704, 646,
	3066, 4660, 4658, 3171, 4657, 1412, 1417, 4622, 4031, 2169,
	2168, 1435, 1436, 1152, 4508, 1152, 1152, 643, 2167, 1152,
	109, 3248, 3247, 3249, 3246, 4097, 651, 3117, 2166, 3253,
	1152, 3245, 3242, 1256, 4337, 3243, 2165, 3251, 1512, 1514,
	2164, 1377, 1516, 2614, 2617, 2615, 2616, 2618, 2619, 2620,
	2621, 3250, 1337, 1338, 3903, 3895, 1409, 2955, 1216, 3893,
	3116, 3114, 3003, 4570, 3627, 3628, 3629, 3630, 3252, 3254,
	3044, 3452, 4569, 4507, 1531, 4314, 4168, 4316, 1535, 1536,
	1537, 1538, 1539, 3638, 1541, 4520, 4058, 3484, 2959, 3479,
	1456, 3048, 3199, 2952, 3199, 3199, 1330, 4179, 109, 1316,
	4178, 3833, 3822, 3851, 1384, 2956, 1307, 4421, 3049, 1268,
	3825, 2150, 2607, 3005, 2151, 4476, 2319, 4049, 3514, 148,
	2542, 1482, 3823, 3824, 3831, 143, 4176, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 3115, 1562, 1563, 1565, 1565, 1565, 1395, 1570,
	1570, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 2589, 3585, 3515, 1427, 3856, 2194, 4578,
	664, 3007, 4433, 4047, 4459, 4044, 3549, 3995, 544, 3455,
	1223, 3329, 1316, 706, 4713, 1411, 4027, 1340, 4415, 4095,
	1570, 4683, 4712, 3255, 4679, 3996, 4597, 155, 4682, 4643,
	733, 4472, 734, 736, 737, 738, 739, 4470, 4471, 4170,
	735, 2322, 567, 3608, 3136, 1415, 2195, 554, 2400, 2401,
	2399, 4586, 4431, 3127, 3443, 1316, 3481, 551, 2197, 3328,
	3446, 3447, 3448, 3449, 3450, 3806, 144, 3537, 3109, 3446,
	3447, 3448, 3449, 3450, 164, 4125, 3921, 1475, 1476, 1474,
	3116, 3190, 3191, 1378, 3636, 2172, 3190, 1571, 1572, 3173,
	492, 4342, 3181, 3183, 3182, 555, 1477, 4211, 3175, 3441,
	2939, 4070, 1396, 1570, 1570, 4369, 4024, 2955, 3998, 2969,
	2601, 1727, 110, 1564, 1566, 1567, 1317, 1324, 1325, 1327,
	1328, 1329, 1444, 1331, 1332, 3863, 1334, 1335, 1336, 1378,
	1339, 4023, 1342, 1343, 1344, 1345, 1346, 4220, 3997, 2951,
	1438, 4041, 1438, 1438, 1443, 1443, 1438, 1604, 4423, 164,
	87, 2508, 3864, 1459, 1437, 2956, 1442, 1442, 4369, 4231,
	1449, 1218, 1379, 139, 1267, 2955, 116, 1484, 4506, 110,
	3009, 2091, 110, 2121, 1263, 2319, 3611, 3609, 2490, 2320,
	2321, 1323, 3607, 1407, 4347, 2491, 679, 679, 110, 1261,
	3902, 2971, 3894, 3892, 4175, 3114, 1308, 1315, 3610, 2119,
	2120, 2152, 4022, 4169, 4315, 4579, 1349, 1177, 1176, 1607,
	4021, 127, 1407, 2956, 4020, 1542, 4018, 1180, 1217, 137,
	1513, 1241, 1475, 1476, 1474, 1407, 640, 1737, 1738, 1736,
	1605, 1606, 1717, 1180, 4019, 2175, 1363, 4163, 4164, 164,
	1178, 1477, 2532, 3006, 4452, 1321, 3408, 1068, 4250, 3398,
	3399, 3401, 3409, 3410, 3400, 3402, 3403, 663, 3551, 3552,
	164, 4046, 3635, 4043, 4028, 2536, 2537, 3454, 1326, 3404,
	3405, 3406, 3407, 1561, 2531, 552, 4595, 4159, 4590, 3176,
	137, 4385, 4386, 552, 1081, 2176, 2123, 492, 4429, 1081,
	2054, 142, 1375, 1635, 4593, 3632, 3633, 3032, 3033, 1238,
	1239, 1257, 1240, 1237, 1236, 107, 1235, 109, 4602, 1322,
	3550, 1318, 129, 1234, 3538, 3539, 3540, 4331, 1266, 549,
	4693, 552, 133, 141, 140, 2125, 3594, 2086, 2124, 3595,
	2476, 3596, 3868, 3869, 598, 1373, 4243, 4706, 4522, 3106,
	1731, 4521, 2044, 1319, 1320, 3126, 3094, 1167, 3177, 3094,
	3523, 3104, 1167, 598, 3103, 4719, 2474, 3372, 4714, 1754,
	2543, 1423, 1425, 4698, 4670, 2476, 1174, 2476, 1410, 642,
	137, 4320, 3126, 668, 2555, 139, 4202, 4089, 3901, 3898,
	138, 142, 3634, 3477, 1312, 3111, 1611, 3043, 1712, 3039,
	1762, 3013, 1634, 3012, 2602, 1707, 1730, 124, 2156, 1742,
	1740, 1735, 3102, 1264, 2525, 1622, 1152, 1171, 1629, 1635,
	1623, 2228, 1423, 1425, 1702, 1703, 1704, 1705, 1706, 2476,
	2093, 2098, 2227, 109, 1714, 1715, 2476, 2094, 2320, 2321,
	2096, 2226, 1726, 1170, 4092, 3472, 2095, 1394, 1733, 2048,
	2048, 2048, 2048, 1193, 131, 1184, 132, 1369, 489, 3189,
	696, 1608, 1609, 4481, 2042, 1630, 3884, 1708, 2804, 1518,
	1519, 3658, 89, 89, 598, 3320, 1631, 2079, 1368, 1364,
	1365, 1366, 1367, 1370, 1371, 1372, 1374, 2059, 2060, 3016,
	2475, 2544, 3041, 3040, 3015, 1744, 3100, 3094, 2877, 2055,
	1517, 3079, 3097, 1424, 652, 3096, 3101, 1760, 3093, 2149,
	4691, 3052, 552, 4692, 2067, 4690, 2112, 2068, 2069, 2070,
	1311, 4592, 4594, 2476, 3371, 2475, 2074, 2475, 1515, 2801,
	3125, 3100, 3094, 2774, 3120, 2750, 2082, 3097, 2132, 2057,
	3096, 3101, 3123, 1520, 3522, 141, 140, 2636, 675, 675,
	675, 675, 2046, 2050, 1424, 1432, 1433, 3125, 2556, 2533,
	1713, 1718, 2442, 1635, 2071, 2130, 2073, 1725, 1417, 1520,
	2222, 1716, 1734, 2452, 2258, 1520, 2185, 109, 1426, 2475,
	2221, 1633, 109, 1517, 1750, 1534, 2475, 1533, 1532, 1751,
	1483, 1298, 1206, 3094, 2215, 4340, 96, 2053, 1167, 4173,
	1493, 3095, 2474, 1503, 1434, 4201, 2223, 4200, 1503, 2110,
	1258, 2867, 2312, 2311, 2216, 3474, 3082, 2081, 2670, 3081,
	2199, 4209, 1423, 1425, 3885, 2225, 4453, 4454, 1376, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1518, 1519, 2043, 2088, 2087, 4488, 3789, 3787, 2097,
	3501, 3500, 2673, 2671, 2666, 3389, 3387, 3877, 2203, 2668,
	124, 2127, 4035, 2103, 2104, 1635, 164, 2106, 3957, 2200,
	3075, 3074, 128, 2475, 2313, 1166, 3117, 1762, 119, 109,
	3094, 3115, 2181, 2109, 3102, 1167, 4450, 4451, 3095, 2474,
	2131, 2128, 1541, 3093, 2058, 675, 4236, 4235, 2648, 4036,
	2171, 2174, 1518, 1519, 2221, 2858, 109, 3083, 3084, 3788,
	3135, 2747, 3502, 2667, 2669, 2672, 2674, 3388, 1482, 3134,
	3133, 2077, 3132, 3072, 3071, 4193, 122, 4489, 3131, 2874,
	2873, 3130, 3076, 3129, 3128, 2173, 2318, 2323, 2744, 1630,
	1247, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 2288, 2190,
	1631, 2741, 2251, 2224, 1424, 2189, 2367, 1477, 492, 2177,
	675, 2193, 2191, 2566, 2192, 3062, 3061, 121, 3060, 1542,
	1232, 1474, 2395, 2396, 2349, 2352, 640, 640, 1222, 2214,
	1249, 640, 2365, 2279, 2285, 3073, 1635, 3059, 1477, 1166,
	164, 2875, 1415, 2451, 3058, 640, 640, 1415, 698, 2265,
	109, 164, 3057, 669, 3056, 492, 492, 492, 492, 3055,
	2624, 688, 2278, 2201, 2202, 2315, 2204, 2317, 2623, 2108,
	164, 164, 164, 164, 164, 1274, 164, 1762, 1432, 1433,
	2263, 1160, 2329, 4391, 2332, 4525, 1081, 4524, 3270, 2294,
	1187, 1186, 164, 164, 1248, 2275, 4391, 640, 4466, 96,
	4465, 1426, 4696, 164, 2292, 2293, 2291, 1542, 1496, 1497,
	1498, 1499, 1500, 1493, 2459, 2133, 1503, 2567, 2136, 2137,
	2138, 2364, 2140, 2141, 1233, 4669, 2142, 1434, 2983, 1221,
	2143, 1251, 4580, 2144, 4673, 4640, 4672, 2145, 2146, 4526,
	2147, 2148, 103, 1166, 2403, 1423, 1425, 1475, 1476, 1474,
	2333, 2334, 2335, 2336, 2337, 2551, 640, 640, 640, 3011,
	2408, 1166, 2410, 1720, 2464, 2413, 1477, 3174, 3199, 679,
	679, 679, 679, 2364, 2361, 2817, 4517, 2795, 2473, 2794,
	3832, 3826, 1260, 2457, 2285, 2436, 4544, 3904, 111, 679,
	117, 702, 640, 2434, 3037, 1419, 2267, 2268, 2269, 1475,
	1476, 1474, 2249, 2264, 2515, 2516, 2517, 2518, 2519, 2489,
	2492, 4707, 2458, 2495, 2496, 2497, 2549, 2550, 1477, 3381,
	164, 164, 2249, 3918, 2444, 164, 4560, 1166, 2449, 2440,
	2443, 2771, 2772, 2773, 2511, 2512, 2513, 2514, 2504, 164,
	640, 1470, 164, 164, 164, 164, 4685, 2463, 2461, 2535,
	3082, 2485, 2670, 3081, 164, 1069, 1070, 1071, 2289, 2256,
	2257, 2520, 164, 1542, 1476, 1474, 164, 1169, 3765, 3763,
	4708, 2344, 2345, 1475, 1476, 1474, 4420, 1424, 2507, 3764,
	3614, 3612, 1477, 696, 4702, 4559, 2673, 2671, 2666, 2430,
	2260, 3613, 1477, 2668, 2501, 2502, 2503, 2522, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	4312, 4327, 1503, 89, 4557, 2261, 679, 164, 2262, 2552,
	4171, 1475, 1476, 1474, 492, 2290, 1475, 1476, 1474, 4700,
	4318, 4311, 2527, 2238, 2529, 1475, 1476, 1474, 4240, 4065,
	1477, 3083, 3084, 4034, 2240, 1477, 4649, 2667, 2669, 2672,
	2674, 2456, 696, 3916, 1477, 1475, 1476, 1474, 2372, 3915,
	1166, 4313, 1166, 4528, 3914, 1166, 3913, 1475, 1476, 1474,
	2239, 4172, 1166, 4556, 1477, 4469, 3842, 1166, 1166, 1166,
	3796, 679, 1475, 1476, 1474, 4515, 1477, 3795, 164, 164,
	3272, 3562, 3496, 1487, 3495, 1490, 3494, 2572, 1475, 1476,
	1474, 1477, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 2316,
	1488, 1489, 1486, 4718, 3181, 3183, 3182, 1477, 3493, 3492,
	2237, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 2521, 3433, 1503, 3384, 2982, 2340, 2341,
	2342, 2271, 2273, 2274, 2346, 2980, 2348, 2351, 2354, 2272,
	2359, 2360, 2967, 164, 164, 164, 2370, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 1306,
	2402, 1503, 2404, 2405, 1305, 3457, 3456, 2409, 1393, 2411,
	2412, 1565, 1166, 4717, 4701, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 4684, 1152, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 696, 2093, 1503, 4678, 1743, 4606, 4598, 2234, 2094,
	4482, 4463, 2096, 4462, 4408, 2078, 4407, 1386, 2095, 2236,
	4401, 2101, 3211, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 2230, 2796, 1503, 2808, 4400,
	4177, 4072, 3705, 2592, 3541, 2235, 2232, 3027, 2100, 1166,
	164, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 3026, 3208, 1503, 2584, 2578, 164, 1412,
	2563, 2562, 2231, 2314, 164, 164, 640, 640, 640, 164,
	1385, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 2568, 2102, 1503, 3770, 2233, 2089, 1749, 3205, 1748,
	1721, 696, 1475, 1476, 1474, 1475, 1476, 1474, 675, 4391,
	1719, 1301, 562, 4514, 2564, 4513, 4512, 2736, 2737, 2738,
	2611, 1477, 2229, 4509, 1477, 4438, 2570, 1278, 4418, 2574,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 2729, 3768, 1503, 4357, 3181, 3183, 3182, 2610, 1277,
	2735, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 4351, 4242, 1503, 4241, 4167, 3932, 3691,
	2775, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 4166,
	4145, 1503, 2714, 4096, 4048, 3619, 4045, 4017, 3617, 2599,
	2579, 2637, 1762, 3181, 3183, 3182, 3986, 3985, 3953, 3907,
	2247, 2583, 3906, 3841, 3840, 3839, 2591, 3838, 3829, 3828,
	3827, 3794, 1456, 1456, 3791, 3766, 2730, 3761, 2598, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 3752, 3748, 1503, 3743, 2654, 3181, 3183, 3182, 3181,
	3183, 3182, 2606, 3742, 3741, 2609, 3615, 3604, 3592, 2286,
	3931, 3588, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2769, 2770, 2633,
	2628, 3581, 3580, 2630, 1492, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 3579, 2645, 1503, 3499,
	2723, 3491, 3490, 2288, 2734, 3489, 3415, 3220, 2279, 2285,
	3930, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 3219, 3217, 1503, 2347, 3077, 2978, 2876,
	2355, 1530, 1529, 1528, 2631, 2590, 2561, 2458, 675, 2105,
	4404, 675, 3701, 2798, 696, 2749, 696, 4216, 696, 2761,
	2759, 2760, 3642, 4568, 3778, 4551, 3778, 4428, 3778, 4426,
	2780, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 3642, 696, 1503, 3700, 4079, 696, 3778,
	4245, 3642, 4153, 3642, 4148, 4071, 1762, 2776, 1347, 164,
	4093, 696, 2784, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 3642, 4052, 1503, 3199, 696,
	2635, 696, 3642, 3928, 1081, 2044, 3859, 164, 2044, 3858,
	3778, 3777, 3642, 3641, 2438, 1382, 4010, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2605,
	4009, 1503, 3425, 3424, 3421, 3422, 3421, 3420, 2749, 696,
	679, 2604, 2603, 1166, 2338, 2586, 2816, 2438, 2338, 696,
	3435, 164, 3025, 164, 2217, 696, 3307, 1166, 1637, 1636,
	3308, 3707, 1166, 3025, 3726, 102, 1459, 3418, 3417, 3416,
	2862, 2540, 2044, 2861, 2439, 598, 2441, 89, 2253, 679,
	1312, 3031, 2154, 1760, 2860, 2153, 4651, 3726, 1310, 640,
	640, 2338, 1309, 2934, 2937, 1310, 4358, 2886, 2925, 2264,
	2929, 4229, 2932, 2933, 1730, 3969, 3199, 2439, 3642, 2044,
	1708, 2863, 2217, 2217, 2864, 2539, 3436, 3423, 3218, 3054,
	3019, 2865, 2445, 2749, 3726, 1622, 2827, 2217, 2868, 2825,
	3267, 2824, 2749, 2252, 2878, 2622, 2608, 2970, 2972, 2048,
	2107, 2560, 2973, 2974, 1312, 2975, 2976, 2555, 2554, 2254,
	2790, 164, 164, 2289, 1380, 2116, 2044, 1166, 1741, 1739,
	164, 1616, 1383, 89, 4456, 4427, 2728, 4196, 4194, 2185,
	4011, 3786, 3783, 2482, 2510, 2986, 2818, 2484, 3193, 2979,
	2981, 3065, 3064, 2506, 1166, 2922, 2719, 2720, 4688, 1316,
	3029, 4198, 2534, 2500, 2499, 1711, 3045, 1297, 2985, 3843,
	2573, 1213, 1212, 4687, 4664, 4662, 4656, 4655, 4628, 4623,
	2832, 2834, 3004, 4617, 4615, 4562, 4561, 3923, 2841, 2842,
	2843, 3690, 3919, 3707, 3434, 3429, 3022, 3021, 3001, 2722,
	2716, 2553, 3206, 3028, 2155, 3209, 2126, 1313, 3212, 539,
	2726, 2725, 3023, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 3038, 2212, 1503, 2209, 675,
	3042, 2211, 2758, 2210, 2724, 2207, 3092, 2206, 3047, 3195,
	2208, 3050, 2205, 3689, 3197, 2181, 3069, 3201, 3202, 3203,
	3088, 3099, 4448, 4361, 1762, 3172, 3098, 3105, 3063, 3108,
	3085, 3213, 3222, 134, 3121, 4410, 3068, 2766, 3119, 679,
	2765, 4131, 679, 3080, 3899, 3874, 541, 542, 3781, 3531,
	3530, 3414, 3413, 3412, 2938, 2928, 2785, 2786, 2787, 2788,
	2789, 4353, 4224, 4355, 3279, 4352, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 4411, 4356,
	1503, 4111, 4109, 4162, 2814, 4161, 4051, 561, 3304, 3309,
	145, 3180, 2582, 675, 2581, 2099, 4037, 4038, 3256, 3113,
	3303, 3258, 109, 3112, 3067, 4487, 3891, 164, 3737, 3542,
	3386, 2638, 164, 1463, 1464, 164, 164, 164, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	2279, 2285, 1503, 1632, 3314, 1295, 1279, 1276, 1463, 1464,
	3224, 2927, 1275, 1451, 1466, 3269, 3200, 2936, 2936, 1468,
	1467, 1219, 1465, 3960, 3229, 1452, 3214, 4644, 4082, 3216,
	3312, 4081, 1393, 2256, 2257, 3836, 1272, 1273, 3305, 1466,
	1461, 3230, 3231, 3837, 1468, 1467, 3834, 1465, 3462, 3227,
	2528, 3382, 3226, 1352, 3835, 1410, 3257, 4359, 3395, 1271,
	4317, 4055, 3799, 3785, 3431, 2327, 2328, 3959, 2178, 2101,
	164, 2100, 1361, 2580, 1447, 1448, 1445, 1446, 1166, 1166,
	1439, 1440, 2764, 4532, 640, 4531, 4530, 4014, 1382, 2627,
	2763, 1252, 690, 4445, 4444, 4443, 4442, 4225, 164, 164,
	640, 1166, 4188, 3363, 3316, 492, 3318, 3319, 4180, 4129,
	3939, 3370, 3086, 691, 3394, 102, 3938, 598, 640, 3664,
	3025, 4666, 4665, 3451, 4483, 3390, 3854, 3229, 2886, 3485,
	3380, 2990, 2991, 2992, 3306, 3483, 3482, 3053, 2826, 2805,
	2802, 3192, 2768, 1166, 3194, 3324, 3317, 640, 2072, 1166,
	2632, 1166, 1472, 1211, 1166, 1210, 4665, 4666, 4238, 3374,
	3375, 3376, 3411, 3377, 3378, 2250, 3373, 683, 4548, 3180,
	687, 686, 4269, 65, 4271, 23, 4270, 22, 2520, 104,
	1166, 1166, 4272, 24, 4273, 25, 4267, 18, 3464, 4266,
	17, 702, 4265, 16, 3524, 4268, 19, 4264, 15, 68,
	3453, 4258, 11, 2739, 2740, 4293, 39, 2742, 2743, 4291,
	37, 2745, 2746, 3437, 3288, 3289, 3290, 3291, 3292, 3293,
	3294, 3295, 3296, 3297, 3298, 3392, 3393, 4290, 36, 4294,
	40, 4289, 32, 3419, 4288, 31, 4287, 30, 4409, 3271,
	679, 4284, 27, 3473, 4283, 26, 1, 3478, 3432, 3280,
	3281, 3282, 3283, 3284, 3285, 3179, 4346, 3487, 4263, 14,
	3442, 4260, 13, 4259, 12, 677, 2777, 2778, 2779, 4257,
	10, 106, 4, 1166, 50, 3468, 3519, 2600, 2134, 597,
	3820, 1166, 1166, 1166, 3471, 3819, 3624, 3688, 3526, 3527,
	3528, 3470, 3625, 3444, 3002, 3533, 3534, 4341, 3536, 4210,
	3830, 2713, 3520, 1728, 4026, 1471, 1190, 164, 3519, 2538,
	1302, 3488, 3554, 164, 4354, 3559, 4110, 4222, 4221, 1166,
	3803, 3802, 2995, 3504, 2994, 1296, 2654, 2587, 3521, 2114,
	2809, 2810, 2811, 3503, 679, 3089, 3085, 2925, 3591, 3497,
	3498, 3090, 3532, 3014, 3640, 3553, 3078, 4186, 3657, 1708,
	2626, 3529, 2157, 2612, 1362, 3545, 2460, 3547, 2465, 3860,
	3511, 4063, 3662, 3510, 3509, 1154, 118, 2565, 3560, 3696,
	3563, 1231, 3565, 3567, 3569, 3571, 513, 2462, 1166, 2948,
	4223, 1299, 2947, 2965, 2478, 1388, 3982, 2946, 2945, 3589,
	4319, 2949, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 3180, 3715, 1503, 164, 1642, 1640,
	1641, 1639, 695, 697, 1644, 1643, 519, 3711, 1624, 109,
	4395, 3704, 1166, 1473, 746, 136, 3122, 648, 3709, 649,
	125, 521, 1511, 2762, 2869, 3643, 1079, 1080, 1072, 4486,
	3665, 2752, 4234, 4112, 4226, 3314, 4384, 3469, 2185, 1457,
	4114, 3937, 3663, 2815, 1560, 3710, 2362, 715, 661, 3721,
	3956, 4116, 2270, 3179, 729, 728, 3775, 492, 727, 724,
	725, 3312, 2397, 2936, 2936, 2936, 1427, 2936, 2936, 4370,
	2259, 3300, 3678, 492, 3299, 3302, 1485, 3426, 1360, 704,
	1431, 1430, 1429, 1428, 1422, 672, 2431, 3036, 164, 1565,
	1565, 1565, 1570, 1570, 1570, 1573, 1574, 1575, 1576, 1570,
	1570, 1570, 1400, 1398, 1397, 1746, 1612, 3731, 3708, 2721,
	2717, 671, 676, 46, 2767, 1250, 3697, 4123, 3751, 112,
	1166, 685, 684, 693, 3379, 29, 21, 20, 3713, 1207,
	2643, 2665, 1188, 1166, 1166, 1166, 3030, 48, 54, 3724,
	640, 53, 51, 3725, 2181, 3034, 3035, 164, 640, 3790,
	3732, 3575, 52, 2989, 2530, 4394, 1166, 1166, 3674, 3675,
	3676, 4588, 3677, 1282, 4605, 4638, 3746, 3753, 3680, 3749,
	3682, 1357, 38, 35, 640, 34, 1166, 33, 640, 3762,
	4285, 3782, 4279, 4278, 3180, 4281, 4280, 4277, 640, 3727,
	3728, 3729, 3730, 4282, 3668, 3669, 3670, 3671, 3672, 164,
	164, 4276, 3862, 3662, 4275, 4274, 4292, 3844, 3846, 4262,
	4261, 4572, 4571, 5, 98, 95, 41, 120, 1150, 2,
	1571, 1572, 492, 3800, 0, 0, 1604, 1605, 1606, 0,
	492, 492, 492, 492, 3793, 0, 0, 1166, 492, 492,
	1166, 492, 0, 0, 3815, 3816, 3817, 1564, 1566, 1567,
	1166, 3814, 1166, 0, 492, 492, 1166, 164, 492, 3848,
	3818, 3857, 0, 1166, 3850, 1166, 1166, 1166, 1166, 1166,
	1166, 3849, 0, 0, 0, 0, 3852, 3853, 0, 3855,
	0, 0, 3362, 0, 3699, 0, 3779, 3780, 3179, 0,
	3845, 0, 0, 0, 0, 3519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3890, 0, 0, 0,
	0, 0, 1460, 3879, 0, 0, 0, 0, 0, 0,
	3519, 0, 3092, 0, 3870, 3871, 3896, 0, 1166, 0,
	3873, 0, 3866, 0, 1166, 0, 3088, 3099, 0, 0,
	3900, 3872, 3098, 0, 0, 3233, 0, 0, 164, 0,
	3934, 0, 0, 1166, 0, 0, 0, 3888, 0, 0,
	0, 0, 0, 3259, 3897, 3260, 3261, 0, 3262, 3263,
	158, 0, 3264, 0, 0, 0, 538, 0, 0, 0,
	0, 158, 0, 0, 558, 3926, 0, 0, 3273, 3274,
	3275, 3276, 0, 0, 0, 0, 3925, 3927, 0, 0,
	658, 0, 0, 3966, 0, 0, 3715, 3662, 3662, 158,
	0, 675, 3940, 3942, 3971, 0, 0, 0, 698, 0,
	109, 0, 3266, 658, 703, 0, 0, 0, 0, 0,
	1089, 0, 3912, 3922, 158, 3963, 0, 0, 0, 1166,
	0, 0, 0, 0, 1166, 0, 0, 3920, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	3314, 0, 0, 0, 0, 3180, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 4006, 0, 3179, 0,
	3961, 0, 0, 3965, 0, 0, 3312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3229, 3980,
	0, 3979, 3574, 0, 3576, 0, 0, 0, 0, 0,
	0, 0, 0, 3983, 0, 0, 3973, 3962, 0, 669,
	3597, 3598, 3599, 3265, 4004, 3970, 0, 4007, 0, 0,
	0, 3974, 0, 0, 3621, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0, 1503,
	0, 0, 0, 0, 4067, 4068, 0, 3370, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 164,
	0, 1166, 3989, 0, 4000, 4001, 3999, 0, 3990, 3180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4016, 0, 0, 0, 0, 4091, 0, 0, 0, 0,
	0, 1166, 4002, 4003, 0, 4015, 0, 164, 0, 0,
	0, 4039, 640, 4029, 4025, 4042, 3180, 640, 640, 4057,
	640, 0, 0, 0, 0, 4075, 4059, 4060, 0, 4062,
	4053, 0, 4050, 0, 0, 4056, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 4061, 0,
	1503, 492, 4084, 0, 4085, 2936, 4100, 3966, 4136, 0,
	0, 4083, 4073, 4074, 1166, 0, 492, 0, 0, 0,
	4135, 0, 109, 0, 0, 0, 492, 4076, 0, 4086,
	0, 4088, 0, 4090, 0, 0, 0, 0, 0, 3733,
	3734, 3735, 0, 492, 0, 4077, 0, 0, 0, 0,
	0, 4013, 4098, 4157, 0, 0, 0, 0, 4133, 0,
	3754, 3755, 3756, 0, 0, 4156, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 3772, 0, 0, 0, 0,
	0, 0, 4142, 0, 4132, 4130, 4137, 0, 4134, 3975,
	3976, 3977, 3978, 4139, 4140, 0, 4158, 4128, 4160, 0,
	0, 0, 0, 0, 4187, 0, 0, 0, 0, 3179,
	4192, 0, 4154, 0, 0, 0, 0, 4143, 3648, 3649,
	3650, 3651, 3652, 3653, 3654, 3655, 3656, 1166, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	3370, 4165, 0, 1166, 0, 0, 3667, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 4190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4183, 4182, 0, 0, 0, 4184, 0, 3715, 0, 3693,
	3694, 3695, 0, 3180, 0, 4185, 0, 0, 0, 4239,
	4197, 109, 0, 0, 0, 164, 0, 0, 4157, 4157,
	0, 1152, 0, 4204, 164, 164, 0, 0, 0, 4251,
	4247, 4156, 109, 109, 4208, 0, 0, 0, 4206, 0,
	0, 4203, 0, 3179, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4237, 0,
	0, 0, 0, 0, 0, 0, 0, 4195, 1152, 0,
	0, 0, 0, 0, 0, 0, 4338, 0, 0, 0,
	3179, 0, 4217, 492, 4248, 4249, 2936, 2936, 1166, 0,
	4310, 1166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4326, 3180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4328, 3784, 4330, 4329, 4322,
	4115, 4118, 4323, 0, 0, 4374, 0, 4343, 3926, 3792,
	0, 4336, 0, 4339, 4333, 0, 0, 658, 0, 3925,
	4345, 0, 3314, 3370, 0, 3370, 0, 0, 0, 0,
	4373, 4360, 0, 1542, 4334, 3232, 0, 0, 158, 640,
	0, 0, 1152, 4377, 1152, 0, 0, 4207, 3312, 0,
	1152, 0, 0, 1089, 0, 0, 0, 4405, 0, 2936,
	0, 0, 1166, 4414, 1492, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0,
	0, 0, 492, 1166, 492, 0, 492, 0, 0, 0,
	0, 4440, 0, 0, 0, 0, 0, 0, 0, 0,
	3279, 0, 0, 0, 0, 0, 0, 4246, 0, 0,
	0, 0, 0, 4436, 4419, 0, 0, 0, 0, 1166,
	0, 0, 3210, 0, 0, 0, 0, 0, 0, 0,
	4449, 0, 0, 0, 0, 0, 0, 4437, 4435, 3926,
	0, 0, 0, 0, 0, 4430, 0, 4446, 4434, 4447,
	3925, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 0, 4494, 1503, 0, 4467, 4460, 4464,
	4499, 4142, 0, 598, 0, 0, 4496, 3179, 4498, 4493,
	4455, 0, 4511, 0, 0, 0, 0, 0, 4399, 0,
	0, 1542, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 4383, 0, 4387, 4495, 4502, 0, 1152, 0, 4510,
	1152, 0, 4503, 4501, 0, 0, 1152, 1152, 1152, 1152,
	4527, 1152, 1152, 4529, 4536, 1152, 1152, 0, 4497, 4536,
	4538, 4539, 4540, 4536, 4546, 4543, 4550, 0, 0, 0,
	640, 1152, 4467, 4518, 4523, 0, 0, 4519, 0, 4554,
	0, 4473, 1166, 0, 4547, 3662, 3370, 0, 0, 0,
	4533, 2936, 0, 0, 0, 4555, 1152, 0, 0, 1152,
	0, 3314, 1635, 4558, 492, 0, 0, 164, 3179, 4581,
	4565, 4567, 4583, 0, 4587, 4577, 109, 4585, 4576, 0,
	4432, 4118, 2451, 4596, 4575, 0, 4574, 3312, 1166, 4573,
	598, 4611, 3944, 3945, 3946, 3947, 4608, 0, 0, 0,
	3951, 0, 0, 0, 3954, 3955, 4563, 534, 0, 1152,
	0, 0, 0, 1152, 0, 1152, 0, 0, 0, 1152,
	4632, 4536, 4630, 4536, 0, 0, 4461, 4641, 0, 0,
	1152, 1152, 1152, 1152, 0, 1152, 0, 0, 4536, 4536,
	4536, 0, 0, 4536, 0, 0, 4648, 4388, 4392, 2218,
	2219, 2220, 0, 0, 4534, 4616, 4406, 4485, 4618, 0,
	0, 0, 0, 4661, 1152, 4663, 1152, 1166, 1152, 492,
	0, 492, 4536, 4674, 4536, 4500, 0, 492, 4676, 0,
	0, 4671, 0, 0, 0, 0, 0, 0, 4686, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 1152, 4694,
	0, 0, 0, 0, 1152, 0, 4536, 0, 0, 0,
	0, 0, 1152, 506, 0, 0, 0, 4699, 164, 0,
	4536, 0, 0, 0, 1615, 0, 0, 1089, 1152, 0,
	0, 1152, 1089, 0, 0, 0, 4536, 0, 0, 0,
	0, 1152, 0, 4468, 4711, 0, 0, 1152, 0, 4536,
	0, 0, 0, 0, 0, 4536, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 4066, 0, 0, 520,
	532, 533, 0, 1166, 0, 0, 2339, 0, 0, 0,
	0, 0, 0, 0, 2343, 0, 0, 0, 4607, 0,
	0, 0, 0, 0, 0, 0, 4614, 0, 0, 0,
	0, 2371, 0, 0, 0, 0, 2371, 0, 515, 0,
	522, 518, 0, 4629, 527, 528, 0, 2406, 2407, 0,
	0, 0, 0, 0, 0, 2414, 2415, 2416, 0, 1724,
	558, 4541, 3207, 1166, 4101, 4102, 4103, 0, 0, 0,
	0, 0, 529, 2429, 0, 0, 0, 0, 158, 0,
	0, 1724, 558, 0, 0, 1757, 0, 0, 0, 1759,
	0, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 0, 0, 1503, 0, 0, 158, 158,
	158, 158, 158, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4603, 0, 640, 0, 0, 0,
	2075, 2076, 492, 0, 0, 524, 0, 0, 0, 0,
	4152, 2083, 164, 0, 0, 1166, 0, 0, 0, 678,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 517, 0, 3577,
	3578, 0, 0, 0, 0, 0, 0, 3587, 0, 1166,
	3590, 0, 0, 0, 0, 4181, 0, 3600, 3601, 3602,
	3603, 0, 0, 0, 0, 3616, 3618, 3620, 0, 0,
	0, 0, 4191, 0, 0, 3204, 0, 157, 0, 0,
	0, 0, 3623, 0, 0, 4199, 1166, 0, 548, 0,
	0, 0, 4675, 0, 0, 0, 516, 530, 0, 4680,
	0, 0, 0, 531, 1492, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 158, 158,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 1153, 0, 0, 0, 0, 0, 158, 0, 1757,
	158, 158, 158, 158, 164, 507, 0, 0, 0, 0,
	0, 0, 658, 1189, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 2920, 658, 0, 1205, 0, 2781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2246, 0,
	0, 0, 523, 510, 511, 0, 537, 0, 1393, 0,
	512, 514, 0, 508, 536, 535, 2892, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0,
	0, 1503, 703, 0, 0, 158, 0, 0, 0, 3739,
	3740, 0, 0, 0, 0, 0, 1759, 3747, 0, 0,
	3750, 0, 2881, 0, 0, 0, 0, 3757, 3758, 3759,
	3760, 526, 0, 0, 0, 2889, 3767, 3769, 3771, 0,
	0, 2799, 3774, 0, 0, 0, 0, 0, 0, 2246,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 0, 0, 1503, 0, 0, 2648, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 158, 2246, 2246,
	2246, 0, 0, 0, 2246, 0, 2246, 2246, 2246, 0,
	2246, 2246, 4412, 0, 0, 1089, 2246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2246, 2246, 2246, 2246, 0, 0, 2246, 2246, 2246, 2246,
	2246, 2246, 2751, 0, 0, 2246, 2246, 2246, 2246, 2246,
	2246, 2246, 2246, 2246, 2246, 2246, 2246, 0, 0, 0,
	0, 158, 158, 158, 0, 2893, 0, 0, 0, 1089,
	0, 0, 0, 0, 0, 0, 2902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0,
	0, 0, 2891, 2914, 0, 0, 0, 2575, 0, 0,
	0, 0, 0, 0, 0, 714, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 159, 0, 495, 158, 0, 0, 0,
	0, 0, 158, 158, 159, 0, 0, 158, 4549, 0,
	0, 0, 0, 4552, 0, 2909, 0, 0, 0, 1208,
	0, 0, 0, 659, 0, 2634, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	2918, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 2899, 0, 1090, 0, 0, 0, 159, 1158, 0,
	0, 0, 0, 0, 4610, 0, 0, 2731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 2748, 0, 0,
	0, 495, 159, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4677, 0,
	2782, 0, 2783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2791, 2792, 2793, 0,
	0, 2884, 2797, 0, 2800, 0, 0, 2803, 0, 0,
	2806, 2807, 0, 0, 0, 2812, 2813, 0, 0, 0,
	0, 2819, 2820, 2821, 0, 0, 2822, 0, 2823, 0,
	2896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2828, 2829,
	2830, 2831, 0, 0, 2835, 2836, 2837, 2838, 2839, 2840,
	0, 0, 0, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 0, 2856, 0, 0, 0,
	0, 0, 0, 2885, 2887, 0, 0, 2890, 0, 0,
	2895, 0, 2900, 2897, 2898, 0, 2901, 2894, 0, 2904,
	2903, 2905, 0, 2906, 2907, 2908, 0, 158, 2910, 2912,
	2913, 2915, 2916, 2917, 0, 0, 0, 2888, 2919, 0,
	0, 0, 0, 0, 0, 0, 0, 2921, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 658, 0, 0, 0, 745, 0, 0, 0, 1393,
	0, 2661, 0, 0, 0, 0, 0, 2685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 2660,
	0, 2883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 161, 0, 496, 2682, 590, 0, 584,
	595, 577, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 660, 0, 0, 0, 0, 2648, 658,
	158, 0, 161, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 161, 1162, 0,
	0, 0, 0, 0, 0, 1089, 1089, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 161, 0, 0, 0, 0, 2651, 2650, 2663,
	2670, 2649, 2662, 2653, 0, 0, 2686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3198, 0,
	0, 0, 0, 2920, 2673, 2671, 2666, 0, 0, 2246,
	659, 2668, 0, 0, 0, 0, 2246, 2246, 2246, 2246,
	2246, 1613, 0, 2684, 2706, 2657, 2656, 0, 1393, 0,
	0, 159, 0, 0, 0, 0, 2892, 0, 0, 0,
	0, 0, 0, 2652, 2246, 0, 1090, 576, 575, 578,
	3234, 3235, 3236, 3237, 3238, 3239, 0, 583, 495, 2658,
	2659, 0, 0, 2676, 0, 2667, 2669, 2672, 2674, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	591, 0, 0, 0, 0, 2889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 2702, 0, 0, 0,
	158, 0, 0, 158, 2866, 1759, 0, 1089, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2710, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 2692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 2063, 2064, 2065,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 2893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2902, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 588, 2129, 592,
	593, 596, 0, 0, 0, 0, 158, 158, 0, 0,
	0, 0, 2891, 2914, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2678, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2689, 0, 0, 0, 1613, 1613, 0, 0, 0,
	0, 0, 0, 0, 2655, 2909, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 0, 0, 0, 0, 0,
	2918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 2899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2679, 2680, 0, 0, 2683, 0,
	0, 2688, 0, 2693, 2690, 2691, 0, 2694, 2687, 0,
	2697, 2696, 2698, 0, 2699, 2700, 2701, 0, 0, 2703,
	2704, 2705, 2707, 2708, 2709, 0, 0, 0, 2681, 2711,
	0, 0, 2266, 0, 0, 0, 557, 159, 2675, 0,
	1090, 0, 2246, 1759, 0, 1090, 0, 0, 0, 0,
	0, 0, 2911, 0, 0, 158, 0, 0, 0, 0,
	0, 158, 703, 0, 0, 0, 0, 0, 2246, 0,
	660, 0, 0, 0, 0, 0, 0, 3645, 3646, 3647,
	0, 0, 1088, 42, 45, 0, 0, 1157, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 93, 0, 3666, 47, 75, 76,
	0, 0, 0, 0, 0, 72, 3673, 0, 496, 0,
	0, 2884, 0, 0, 0, 0, 0, 0, 88, 495,
	0, 0, 3684, 3685, 3686, 3687, 0, 0, 0, 0,
	3692, 0, 2677, 0, 0, 63, 0, 0, 0, 89,
	2896, 3702, 3703, 1089, 0, 158, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 2433, 0,
	2435, 0, 0, 0, 0, 0, 495, 495, 495, 495,
	3712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 159, 159, 159, 0, 159, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2885, 2887, 0, 0, 2890, 0, 0,
	2895, 0, 2900, 2897, 2898, 0, 2901, 2894, 0, 2904,
	2903, 2905, 0, 2906, 2907, 2908, 0, 0, 2910, 2912,
	2913, 2915, 2916, 2917, 0, 0, 158, 2888, 2919, 0,
	0, 0, 0, 0, 0, 0, 0, 2921, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	80, 0, 96, 0, 0, 2524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2545, 0, 0, 62, 92, 91, 2547,
	2548, 0, 0, 57, 1613, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 0, 659, 0, 2182, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 158, 0,
	159, 2883, 0, 159, 159, 159, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 69,
	70, 0, 0, 159, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 159, 0,
	0, 60, 0, 0, 0, 495, 0, 0, 0, 2281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 83, 0, 0, 658, 0, 0, 659,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	81, 0, 66, 67, 73, 0, 74, 0, 2366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3948,
	3949, 3950, 0, 3952, 159, 159, 159, 0, 0, 496,
	0, 0, 1090, 0, 0, 0, 0, 3964, 0, 3967,
	3968, 0, 0, 0, 1089, 0, 0, 0, 0, 2281,
	3972, 0, 0, 1158, 2559, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 496, 496, 496,
	0, 0, 2569, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 161, 161, 161, 161, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 0,
	4005, 0, 0, 0, 0, 0, 0, 0, 4008, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2712, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 159, 159, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 1393, 0, 2661, 59,
	61, 0, 158, 0, 2685, 87, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4078, 0, 0, 0, 0, 2660, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 85, 0, 0,
	0, 0, 0, 2682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4094, 0, 0, 0,
	0, 161, 161, 0, 0, 0, 660, 0, 2183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 161, 161, 161, 161, 0, 0, 0,
	4119, 4120, 4121, 4122, 0, 660, 0, 0, 0, 0,
	4126, 4127, 0, 161, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4141, 0, 0, 0, 0,
	0, 0, 0, 0, 2651, 3506, 2663, 0, 3505, 2662,
	2653, 0, 0, 2686, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 2695, 496, 0, 0, 0, 2282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	2684, 2706, 2657, 2656, 0, 0, 0, 0, 0, 0,
	0, 0, 4189, 0, 0, 0, 0, 0, 0, 0,
	2652, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	161, 0, 0, 0, 0, 0, 3507, 3508, 0, 0,
	2676, 0, 0, 0, 0, 0, 0, 4212, 4213, 4214,
	4215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2859, 0, 0, 0, 0, 0, 0, 4230,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	159, 0, 658, 158, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 2702, 161, 161, 161, 0, 4244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 1088,
	0, 0, 0, 0, 1088, 1625, 0, 0, 2710, 2282,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 2692,
	0, 0, 0, 0, 0, 0, 4324, 4325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4335, 0, 159, 0, 659, 2987, 0, 0, 744, 0,
	0, 4344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4364, 0, 0, 3017, 3018, 4375, 0, 0, 0, 0,
	0, 0, 0, 0, 4382, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 557, 0, 0, 0, 160, 0, 493, 161,
	0, 0, 0, 0, 0, 161, 161, 160, 0, 1745,
	161, 0, 0, 1723, 557, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 159, 0, 160, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 4422, 2678,
	0, 0, 4425, 0, 0, 0, 0, 0, 0, 0,
	160, 1159, 0, 0, 0, 0, 0, 0, 1090, 1090,
	0, 0, 0, 0, 2281, 0, 0, 0, 2689, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 2655, 0, 0, 493, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2679, 2680, 0, 0, 2683, 0, 0, 2688, 0,
	2693, 2690, 2691, 0, 2694, 2687, 0, 2697, 2696, 2698,
	0, 2699, 2700, 2701, 0, 0, 2703, 2704, 2705, 2707,
	2708, 2709, 3223, 0, 0, 2681, 2711, 0, 0, 0,
	0, 0, 0, 0, 0, 2675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 4564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 159, 0, 0, 159, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4609, 0, 0, 4612, 4613,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 2677,
	0, 4624, 0, 0, 0, 0, 0, 0, 2187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 0, 2187, 0, 0, 2324, 4654, 0, 161, 0,
	0, 159, 2325, 0, 0, 0, 0, 2187, 2331, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3385, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 0, 42, 495, 1088, 0, 0,
	0, 1089, 161, 0, 660, 0, 158, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3463, 0, 0, 0, 0, 0, 160, 0,
	0, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 493, 0, 0, 4302, 2187, 0,
	0, 2182, 1157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4295, 0,
	0, 4637, 4640, 4636, 1613, 1613, 0, 0, 0, 0,
	0, 0, 660, 161, 0, 0, 0, 0, 0, 0,
	0, 660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2282, 1665, 0, 0, 0, 2523,
	0, 0, 3556, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 2281, 0, 4474, 0,
	4296, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	658, 0, 0, 0, 159, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4298, 0, 3313, 0, 159, 0,
	0, 0, 0, 0, 4307, 4299, 4300, 4301, 4305, 4306,
	4303, 0, 4304, 0, 4308, 0, 0, 0, 161, 78,
	1676, 79, 0, 161, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1666, 0, 0,
	0, 0, 658, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 496, 60, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4309, 4297, 0, 66, 67, 73, 0, 74, 161,
	161, 0, 0, 0, 0, 0, 496, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3797,
	0, 0, 0, 0, 3801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 159, 3847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2183, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 495, 495, 495, 495, 0, 0, 0, 0, 495,
	495, 0, 495, 2585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 495, 2597, 159, 495,
	0, 0, 2597, 0, 0, 0, 0, 0, 1680, 1683,
	1684, 1685, 1686, 1687, 1688, 0, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 0,
	1667, 1668, 1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651,
	1646, 0, 0, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 59, 61, 0, 0, 0, 2282, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 659,
	0, 0, 0, 0, 161, 0, 0, 2733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 2755, 0, 0, 1088, 1088, 0,
	0, 0, 0, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3313, 0, 0,
	2182, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 1682, 0, 0, 0, 1761, 0, 0, 0, 493,
	493, 493, 493, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 160, 160, 160, 160, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 160, 0, 0, 0, 0,
	0, 2184, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 161, 495, 160, 0, 0, 160, 160, 160, 160,
	0, 0, 0, 0, 0, 0, 0, 495, 2993, 2997,
	0, 0, 0, 496, 0, 0, 160, 495, 0, 0,
	0, 496, 496, 496, 496, 0, 0, 0, 0, 496,
	496, 3020, 496, 0, 495, 0, 0, 0, 2641, 2642,
	0, 0, 0, 0, 0, 496, 496, 0, 161, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 2597, 0, 0, 0, 0, 493, 3046,
	0, 2597, 2280, 0, 2597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 2187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 2056, 0, 0, 659, 159, 0, 0, 0,
	0, 0, 3313, 3196, 0, 0, 0, 160, 160, 160,
	0, 3196, 3196, 3196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2187, 0, 0, 0, 0,
	2183, 0, 2280, 0, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 495, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3277, 0,
	0, 0, 0, 4376, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 1088, 0, 0, 160, 160,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 2187, 0, 0, 161, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 495, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 0, 0,
	3430, 0, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 3438, 3439, 3440, 0, 0, 0, 0,
	3070, 0, 0, 0, 496, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 3107, 0, 3196, 3196, 0, 0,
	0, 0, 0, 3118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3476, 0, 0, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 3145, 0, 0, 3148,
	3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
	3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168,
	3169, 3170, 0, 3184, 3185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 2733, 0, 0,
	3535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2733, 0, 2733, 0, 0, 0, 3555, 0, 0, 0,
	0, 0, 0, 2733, 0, 2733, 3564, 2733, 2733, 2733,
	2733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 0,
	0, 0, 0, 160, 0, 660, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3196, 0,
	495, 160, 495, 0, 3644, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3313, 160, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 3325, 3326, 3327, 0, 3331,
	3332, 3333, 3334, 3335, 0, 0, 3338, 3339, 3340, 3341,
	3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351,
	3352, 3353, 3354, 0, 3356, 3357, 3358, 3359, 3360, 3361,
	0, 3364, 3365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 42, 2187,
	0, 0, 0, 0, 2733, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 496, 0, 496, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4302, 0, 0, 0, 0, 0, 0, 2280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4295, 0, 0, 0, 0, 4715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 2997, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 0, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3543, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 3313, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3582, 3583,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 3878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 160, 0, 0, 160,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4307, 4299, 4300,
	4301, 4305, 4306, 4303, 0, 4304, 0, 4308, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 3929, 0, 0,
	496, 0, 496, 0, 160, 0, 0, 84, 496, 0,
	42, 0, 0, 2187, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 93, 160, 160, 47, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	3736, 0, 3738, 0, 0, 0, 0, 0, 3744, 3745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 1088, 4302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4309, 4297, 0, 66, 67, 73,
	0, 74, 0, 4295, 0, 0, 0, 0, 4709, 0,
	0, 0, 0, 0, 2184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3196, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 71, 0, 96,
	0, 0, 0, 0, 93, 4296, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 2280,
	57, 0, 4080, 496, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 660, 0, 0, 0, 160, 0, 89,
	0, 0, 0, 4087, 0, 4302, 0, 0, 0, 0,
	0, 0, 0, 0, 3889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4295, 0, 0, 0,
	0, 4703, 0, 0, 0, 0, 0, 4218, 0, 2187,
	0, 0, 0, 0, 59, 61, 0, 0, 1665, 0,
	87, 0, 0, 0, 0, 0, 69, 70, 0, 4298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4307,
	4299, 4300, 4301, 4305, 4306, 4303, 0, 4304, 0, 4308,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 160, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 49, 90, 56, 55, 58, 60, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4296, 0,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 493, 0, 57, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 3196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4309, 4297, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 3981,
	0, 0, 0, 0, 0, 0, 0, 0, 4228, 0,
	0, 0, 0, 1676, 0, 0, 0, 0, 0, 69,
	70, 0, 4298, 0, 0, 0, 0, 0, 0, 0,
	1666, 160, 4307, 4299, 4300, 4301, 4305, 4306, 4303, 0,
	4304, 0, 4308, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 160, 160, 0, 0, 3196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 2187, 0, 0, 493, 493, 493, 493, 0, 0,
	0, 0, 493, 493, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 493, 493,
	0, 160, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4309,
	4297, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 2187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4228, 0, 4144, 0, 4146, 4147, 0,
	0, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 0, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 0, 1667, 1668, 1669, 1649, 1648, 1681, 1650,
	1653, 1647, 1651, 1646, 0, 0, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1671, 1672, 1673,
	1674, 1675, 1677, 1678, 1679, 0, 0, 0, 0, 0,
	0, 0, 0, 2184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2187, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 160, 0,
	0, 0, 0, 160, 1682, 0, 0, 260, 0, 0,
	0, 0, 4332, 0, 0, 259, 245, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 315, 0, 0, 477, 424, 340, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	493, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 196, 0,
	0, 0, 354, 0, 0, 0, 199, 314, 0, 0,
	0, 246, 0, 393, 0, 468, 0, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 0, 407, 406, 0,
	293, 0, 0, 0, 386, 0, 303, 205, 0, 487,
	221, 310, 451, 0, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 0, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 493, 0, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 493, 460, 493, 0,
	493, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	654, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 0, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 493, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 4391, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 493, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 696, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 2244, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 0, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 705, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 701,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 2453, 1053, 89, 0, 0,
	0, 0, 2455, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 2454, 940, 985, 1065,
	856, 705, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 2353, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 2244, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 2350, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 2244, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 42,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1544, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1543, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 2111, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 705, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 733, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 705, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 1125, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 1125, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 4553, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 1108, 858,
	891, 260, 1106, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 1125,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 2356, 2357, 2358, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 1832, 2012, 0, 3716, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 173, 479, 191,
	3717, 315, 1988, 499, 3718, 424, 340, 502, 501, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 89, 0, 696, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1925, 2010, 1836,
	500, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 3720, 1862, 302, 192, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 178, 199, 314, 1978, 1818,
	1835, 246, 2186, 393, 1930, 468, 498, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 181, 407, 406, 1850,
	293, 1965, 182, 171, 386, 183, 303, 205, 1990, 487,
	221, 310, 451, 497, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1960, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 193, 194, 1998, 1999, 195, 1892,
	2008, 1780, 0, 1976, 189, 190, 175, 180, 1939, 2036,
	1852, 243, 165, 1776, 1777, 1778, 166, 1882, 1883, 168,
	169, 1994, 1993, 1992, 1995, 170, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 3719, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 173, 479, 191, 2023, 315, 1988, 499,
	477, 424, 340, 502, 501, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1925, 2010, 1836, 500, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 3215, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 192, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 178, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 2284, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 181, 407, 406, 1850, 293, 1965, 182, 171,
	386, 183, 303, 205, 1990, 487, 221, 310, 451, 2283,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1960, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	193, 194, 1998, 1999, 195, 1892, 2008, 1780, 0, 1976,
	189, 190, 175, 180, 1939, 2036, 1852, 243, 165, 1776,
	1777, 1778, 166, 1882, 1883, 168, 169, 1994, 1993, 1992,
	1995, 170, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 173,
	479, 191, 2023, 315, 1988, 499, 477, 424, 340, 502,
	501, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1925,
	2010, 1836, 500, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 192,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 178, 199, 314,
	1978, 1818, 1835, 246, 2186, 393, 1930, 468, 498, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 181, 407,
	406, 1850, 293, 1965, 182, 171, 386, 183, 303, 205,
	1990, 487, 221, 310, 451, 497, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1960,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 193, 194, 1998, 1999,
	195, 1892, 2008, 1780, 0, 1976, 189, 190, 175, 180,
	1939, 2036, 1852, 243, 165, 1776, 1777, 1778, 166, 1882,
	1883, 168, 169, 1994, 1993, 1992, 1995, 170, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 173, 479, 191, 2023, 315,
	1988, 499, 477, 424, 340, 502, 501, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1925, 2010, 1836, 500, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 2277, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 192, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 178, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 2284, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 181, 407, 406, 1850, 293, 1965,
	182, 171, 386, 183, 303, 205, 1990, 487, 221, 310,
	451, 2283, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1960, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 193, 194, 1998, 1999, 195, 1892, 2008, 1780,
	0, 1976, 189, 190, 175, 180, 1939, 2036, 1852, 243,
	165, 1776, 1777, 1778, 166, 1882, 1883, 168, 169, 1994,
	1993, 1992, 1995, 170, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 173, 479, 191, 2023, 315, 1988, 499, 477, 424,
	340, 502, 501, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1925, 2010, 1836, 500, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 192, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 178,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	2284, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	181, 407, 406, 1850, 293, 1965, 182, 171, 386, 183,
	303, 205, 1990, 487, 221, 310, 451, 2283, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1960, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 193, 194,
	1998, 1999, 195, 1892, 2008, 1780, 0, 1976, 189, 190,
	175, 180, 1939, 2036, 1852, 243, 165, 1776, 1777, 1778,
	166, 1882, 1883, 168, 169, 1994, 1993, 1992, 1995, 170,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 903, 1046, 0, 0, 449, 1113, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	1146, 315, 0, 499, 477, 424, 340, 502, 501, 945,
	0, 1120, 1133, 930, 988, 877, 975, 1052, 911, 980,
	1053, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1128, 1142, 1109,
	500, 940, 985, 1065, 856, 1125, 0, 861, 1097, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 871, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 1135, 1036, 928, 302, 192, 1042, 926,
	1112, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 178, 199, 314, 1021, 892,
	905, 246, 3315, 393, 981, 468, 2369, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	1131, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 2368, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 464, 465, 247, 1098, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 1103, 0, 1105, 1101, 1104, 1102, 1121, 1122, 1143,
	1144, 1145, 1132, 1099, 193, 194, 1140, 1141, 195, 950,
	1043, 864, 0, 1019, 189, 190, 175, 180, 990, 1062,
	1111, 243, 165, 1094, 1095, 1096, 166, 1115, 1116, 168,
	169, 1138, 1137, 1136, 1139, 170, 1148, 1147, 1149, 1100,
	1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1123, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 173, 479, 191, 2023, 315, 1988, 499,
	477, 424, 340, 502, 501, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1925, 2010, 1836, 500, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 2867, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 192, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 178, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 498, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 181, 407, 406, 1850, 293, 1965, 182, 171,
	386, 183, 303, 205, 1990, 487, 221, 310, 451, 497,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1960, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	189, 190, 175, 180, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 903, 1046, 0, 0, 449, 1113,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 1146, 315, 0, 499, 477, 424, 340, 502,
	501, 945, 0, 1120, 1133, 930, 988, 877, 975, 1052,
	911, 980, 1053, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1128,
	1142, 1109, 500, 940, 985, 1065, 856, 1125, 0, 861,
	1097, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 871,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 1135, 1036, 928, 302, 192,
	1042, 926, 1112, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 178, 199, 314,
	1021, 892, 905, 246, 0, 393, 981, 468, 2369, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 1131, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 2368, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 464, 465, 247, 1098,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 1103, 0, 1105, 1101, 1104, 1102, 1121,
	1122, 1143, 1144, 1145, 1132, 1099, 193, 194, 1140, 1141,
	195, 950, 1043, 864, 0, 1019, 189, 190, 175, 180,
	990, 1062, 1111, 243, 165, 1094, 1095, 1096, 166, 1115,
	1116, 168, 169, 1138, 1137, 1136, 1139, 170, 1148, 1147,
	1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134,
	1129, 1130, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1123, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 173, 479, 191, 2023, 315,
	1988, 499, 477, 424, 340, 502, 501, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1925, 2010, 1836, 500, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 192, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 178, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 498, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 181, 407, 406, 1850, 293, 1965,
	182, 171, 386, 183, 303, 205, 1990, 487, 221, 310,
	451, 497, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1960, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 189, 190, 175, 180, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 903, 1046, 0, 0,
	449, 1113, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 1108, 858,
	891, 260, 1106, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 1146, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 1120, 1133, 930, 988, 877,
	975, 1052, 911, 980, 1053, 0, 0, 0, 0, 0,
	0, 559, 0, 1454, 0, 0, 1455, 0, 0, 172,
	0, 1128, 1142, 1109, 0, 940, 985, 1065, 856, 1125,
	0, 861, 1097, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 871, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 1135, 1036, 928,
	302, 192, 1042, 926, 1112, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 178,
	199, 314, 1021, 892, 905, 246, 0, 393, 981, 468,
	1092, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 1131, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 1091, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 464, 465,
	247, 1098, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 1103, 0, 1105, 1101, 1104,
	1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099, 193, 194,
	1140, 1141, 195, 950, 1043, 864, 0, 1019, 189, 190,
	175, 180, 990, 1062, 1111, 243, 165, 1094, 1095, 1096,
	166, 1115, 1116, 168, 169, 1138, 1137, 1136, 1139, 170,
	1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126,
	1127, 1134, 1129, 1130, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1123, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 1113, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	1146, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 1120, 1133, 930, 988, 877, 975, 1052, 911, 980,
	1053, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1128, 1142, 1109,
	0, 940, 985, 1065, 856, 1125, 0, 861, 1097, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 871, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 1135, 1036, 928, 302, 192, 1042, 926,
	1112, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 178, 199, 314, 1021, 892,
	905, 246, 0, 393, 981, 468, 1092, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	1131, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 1091, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 464, 465, 247, 1098, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 1103, 0, 1105, 1101, 1104, 1102, 1121, 1122, 1143,
	1144, 1145, 1132, 1099, 193, 194, 1140, 1141, 195, 950,
	1043, 864, 0, 1019, 189, 190, 175, 180, 990, 1062,
	1111, 243, 165, 1094, 1095, 1096, 166, 1115, 1116, 168,
	169, 1138, 1137, 1136, 1139, 170, 1148, 1147, 1149, 1100,
	1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1123, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 1113, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 1146, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 1120, 1133, 930,
	988, 877, 975, 1052, 911, 980, 1053, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1128, 1142, 1109, 0, 940, 985, 1065,
	856, 1125, 0, 861, 1097, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 871, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 1135,
	1036, 928, 302, 192, 1042, 926, 1112, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 178, 199, 314, 1021, 892, 905, 246, 0, 393,
	981, 468, 1092, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 1131, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 1091,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	464, 465, 247, 1098, 1055, 212, 1086, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 1082, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 1087, 1085, 1076, 1077, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 1103, 0, 1105,
	1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099,
	193, 194, 1140, 1141, 195, 950, 1043, 864, 0, 1019,
	189, 190, 175, 180, 990, 1062, 1111, 243, 165, 1094,
	1095, 1096, 166, 1115, 1116, 168, 169, 1138, 1137, 1136,
	1139, 170, 1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118,
	1119, 1126, 1127, 1134, 1129, 1130, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1123,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 1083, 1084, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 1113,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 1146, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 1120, 1133, 930, 988, 877, 975, 1052,
	911, 980, 1053, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1128,
	1142, 1109, 0, 940, 985, 1065, 856, 1125, 0, 861,
	1097, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 871,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 1135, 1036, 928, 302, 192,
	1042, 926, 1112, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 178, 199, 314,
	1021, 892, 905, 246, 0, 393, 981, 468, 1092, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 1131, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 1091, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 1621, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 464, 465, 247, 1098,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 1103, 0, 1105, 1101, 1104, 1102, 1121,
	1122, 1143, 1144, 1145, 1132, 1099, 193, 194, 1140, 1141,
	195, 950, 1043, 864, 0, 1019, 189, 190, 175, 180,
	990, 1062, 1111, 243, 165, 1094, 1095, 1096, 166, 1115,
	1116, 168, 169, 1138, 1137, 1136, 1139, 170, 1148, 1147,
	1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134,
	1129, 1130, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1123, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 1113, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 1146, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 1120,
	1133, 930, 988, 877, 975, 1052, 911, 980, 1053, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1128, 1142, 1109, 0, 940,
	985, 1065, 856, 1125, 0, 861, 1097, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 871, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 1135, 1036, 928, 302, 192, 1042, 926, 1112, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 178, 199, 314, 1021, 892, 905, 246,
	0, 393, 981, 468, 1092, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 1131, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 1091, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 1073, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 464, 465, 247, 1098, 1055, 212, 1086, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 1082, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 1087, 1085, 1076, 1077, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 1103,
	0, 1105, 1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145,
	1132, 1099, 193, 194, 1140, 1141, 195, 950, 1043, 864,
	0, 1019, 189, 190, 175, 180, 990, 1062, 1111, 243,
	165, 1094, 1095, 1096, 166, 1115, 1116, 168, 169, 1138,
	1137, 1136, 1139, 170, 1148, 1147, 1149, 1100, 1107, 1110,
	1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1123, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 1083, 1084, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	3173, 3178, 0, 3181, 3183, 3182, 0, 0, 0, 3175,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	3176, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 3177,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 3984, 3178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 0, 479, 0, 2023, 315, 1988, 0,
	477, 424, 340, 0, 0, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 2010, 1836, 0, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 3933, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 0, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 0, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 0, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 0, 407, 406, 1850, 293, 1965, 0, 0,
	386, 0, 303, 205, 1990, 487, 221, 310, 451, 0,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1960, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	0, 0, 0, 0, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 0,
	479, 0, 2023, 315, 1988, 0, 477, 424, 340, 0,
	0, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	2010, 1836, 0, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 3228, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 0,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 0, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 0, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 0, 407,
	406, 1850, 293, 1965, 0, 0, 386, 0, 303, 205,
	1990, 487, 221, 310, 451, 0, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1960,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 0, 0, 0, 0,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 0, 479, 0, 2023, 315,
	1988, 0, 477, 424, 340, 0, 0, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 2010, 1836, 0, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 0, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 0, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 0, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 0, 407, 406, 1850, 293, 1965,
	0, 0, 386, 0, 303, 205, 1990, 487, 221, 310,
	451, 0, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1960, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 2330,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 0, 0, 0, 0, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 0,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 4107, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 0, 479, 0, 2023, 315, 1988, 0,
	477, 424, 340, 0, 0, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 4393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 2010, 1836, 0, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 0, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 0, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 0, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 4396, 4397, 4398, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 0, 407, 406, 1850, 293, 1965, 0, 0,
	386, 0, 303, 205, 1990, 487, 221, 310, 451, 0,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1960, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	0, 0, 0, 0, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 0,
	479, 0, 2023, 315, 1988, 0, 477, 424, 340, 0,
	0, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 3178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	2010, 1836, 0, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 0,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 0, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 0, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 0, 407,
	406, 1850, 293, 1965, 0, 0, 386, 0, 303, 205,
	1990, 487, 221, 310, 451, 0, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1960,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 0, 0, 0, 0,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	590, 449, 584, 595, 577, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 1348, 0, 0, 0,
	0, 0, 260, 0, 0, 585, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 638, 639, 0, 733, 0, 734, 736, 737, 738,
	739, 0, 0, 0, 735, 2322, 3396, 3397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 3391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 0,
	576, 575, 578, 0, 0, 0, 341, 0, 0, 0,
	583, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 587, 0,
	0, 199, 314, 591, 0, 0, 246, 0, 393, 2319,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 594,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 579, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 582, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 1351, 409, 456, 223, 427, 580, 581,
	588, 589, 592, 593, 596, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 2320, 2321, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 3408,
	1068, 0, 3398, 3399, 3401, 3409, 3410, 3400, 3402, 3403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3404, 3405, 3406, 3407, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 586, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 0,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 590,
	449, 584, 595, 577, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 260, 0, 0, 585, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 315, 0, 0, 477, 424,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	575, 578, 0, 0, 0, 341, 0, 0, 0, 583,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 196, 0, 0, 0, 354, 587, 0, 0,
	199, 314, 591, 0, 0, 246, 0, 393, 0, 468,
	0, 279, 0, 0, 392, 316, 461, 0, 594, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	579, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	0, 407, 406, 582, 293, 0, 0, 0, 386, 0,
	303, 205, 0, 487, 221, 310, 451, 0, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 0, 572, 409, 456, 223, 427, 580, 581, 588,
	589, 592, 593, 596, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 586, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 449, 197,
	0, 0, 203, 0, 204, 206, 0, 202, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 2472, 2476, 0, 173,
	479, 191, 0, 315, 0, 499, 477, 424, 340, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 2475, 302, 192,
	0, 0, 0, 2468, 0, 2469, 2471, 2470, 312, 1167,
	196, 0, 2466, 2474, 354, 0, 0, 178, 199, 314,
	0, 0, 0, 246, 1161, 393, 0, 468, 498, 279,
	0, 0, 392, 316, 461, 0, 0, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 181, 407,
	406, 0, 293, 0, 182, 171, 386, 183, 303, 205,
	0, 487, 221, 310, 451, 497, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 0,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 0, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 0, 0,
	195, 0, 0, 0, 0, 0, 189, 190, 175, 180,
	0, 0, 0, 243, 165, 0, 0, 0, 166, 0,
	0, 168, 169, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 1480, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	500, 0, 1475, 1476, 1474, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 1477, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 196, 0,
	0, 0, 354, 0, 0, 178, 199, 314, 0, 0,
	0, 246, 0, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 181, 407, 406, 0,
	293, 0, 182, 171, 386, 183, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 0, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 175, 180, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 302, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 1167, 196, 0, 1163, 0,
	354, 0, 0, 178, 199, 314, 0, 0, 0, 246,
	1161, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 181, 407, 406, 0, 293, 0,
	182, 171, 386, 183, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 0, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 175, 180, 0, 0, 0, 243,
	165, 0, 0, 0, 166, 0, 0, 168, 169, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 3558, 196, 0, 0, 3557, 354, 0,
	0, 178, 199, 314, 0, 0, 0, 246, 0, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 181, 407, 406, 0, 293, 0, 182, 171,
	386, 183, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 0, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 175, 180, 0, 0, 0, 243, 165, 0,
	0, 0, 166, 0, 0, 168, 169, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	449, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 479, 191, 0, 315, 0, 499, 477, 424,
	340, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3525, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	302, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 1167, 196, 0, 0, 2474, 354, 0, 0, 178,
	199, 314, 0, 0, 0, 246, 0, 393, 0, 468,
	498, 279, 0, 0, 392, 316, 461, 0, 0, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	181, 407, 406, 0, 293, 0, 182, 171, 386, 183,
	303, 205, 0, 487, 221, 310, 451, 497, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 0, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 0, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	0, 0, 195, 0, 0, 0, 0, 0, 189, 190,
	175, 180, 0, 0, 0, 243, 165, 0, 0, 0,
	166, 0, 0, 168, 169, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 449, 197,
	0, 0, 203, 0, 204, 206, 0, 202, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	479, 191, 0, 315, 0, 499, 477, 424, 340, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2926,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 302, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 1167,
	196, 0, 0, 2474, 354, 0, 0, 178, 199, 314,
	0, 0, 0, 246, 0, 393, 0, 468, 498, 279,
	0, 0, 392, 316, 461, 0, 0, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 181, 407,
	406, 0, 293, 0, 182, 171, 386, 183, 303, 205,
	0, 487, 221, 310, 451, 497, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 0,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 0, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 0, 0,
	195, 0, 0, 0, 0, 0, 189, 190, 175, 180,
	0, 0, 0, 243, 165, 0, 0, 0, 166, 0,
	0, 168, 169, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1481, 1480, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 196, 0,
	0, 0, 354, 0, 0, 178, 199, 314, 0, 0,
	0, 246, 2276, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 181, 407, 406, 0,
	293, 0, 182, 171, 386, 183, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 0, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 175, 180, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 0, 197, 42, 449, 203, 0,
	204, 206, 0, 202, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 88, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 96, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 110, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 674,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3516, 0, 0, 0, 0, 0, 3518, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 2047, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2047, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	1167, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3369, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3518, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1214, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3225, 681, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 674, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 674, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 549,
	546, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 162, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 2546, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	2432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1665, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 1652, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	1676, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 1666, 378, 249,
	0, 200, 213, 313, 2172, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 0, 197, 0, 0, 203, 0, 204, 206, 449,
	202, 0, 0, 1610, 0, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 1680, 1683,
	1684, 1685, 1686, 1687, 1688, 0, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 0,
	1667, 1668, 1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651,
	1646, 0, 0, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 1682, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 1670, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 162, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 156, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 0, 0, 1503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	1165, 734, 736, 737, 738, 739, 0, 0, 0, 735,
	2322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 730, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 731, 732, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 4492, 0, 0, 0, 0, 0, 260, 4490,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 4491, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2998, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 2999, 3000, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 1627, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1626, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	2476, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	2475, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 638,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3572, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3570, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3568, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3566, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3561, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3548, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3546, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 3475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3466, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 2596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 2754, 2753, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 42, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 71,
	0, 0, 0, 4302, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4295, 0, 0, 0, 0, 4695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4295, 0,
	0, 0, 0, 4668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 62, 92,
	91, 0, 0, 0, 89, 57, 0, 0, 0, 71,
	4302, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4298, 4295, 0, 0, 0, 0, 4650, 0, 0, 0,
	4307, 4299, 4300, 4301, 4305, 4306, 4303, 0, 4304, 0,
	4308, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 69, 70, 0, 4298, 0, 0, 0, 4295, 60,
	0, 0, 0, 0, 4307, 4299, 4300, 4301, 4305, 4306,
	4303, 0, 4304, 0, 4308, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4296, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 4309, 4297, 0,
	66, 67, 73, 0, 74, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4309, 4297, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 69, 70, 0, 4298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4307, 4299, 4300,
	4301, 4305, 4306, 4303, 0, 4304, 0, 4308, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 69, 70, 0, 4298, 0, 60, 0, 0, 42,
	0, 0, 0, 0, 4307, 4299, 4300, 4301, 4305, 4306,
	4303, 4647, 4304, 71, 4308, 0, 0, 0, 0, 78,
	93, 79, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 59, 61, 0,
	0, 4302, 0, 87, 4309, 4297, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4295, 0, 0, 0, 0, 4646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 4309, 4297, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 49,
	90, 56, 55, 58, 93, 0, 0, 47, 96, 0,
	0, 0, 0, 0, 4296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 0, 0, 42, 0, 4302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 93, 0, 4295, 47, 0, 0,
	0, 4645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4298, 89,
	4642, 0, 0, 0, 0, 4302, 0, 0, 4307, 4299,
	4300, 4301, 4305, 4306, 4303, 0, 4304, 0, 4308, 0,
	0, 0, 85, 78, 0, 79, 4295, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 84, 0,
	0, 0, 96, 0, 0, 0, 0, 60, 4296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 85,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 49, 90, 56, 55, 58, 93, 0,
	0, 47, 96, 0, 0, 0, 0, 0, 4296, 0,
	0, 0, 0, 0, 0, 4309, 4297, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 69,
	70, 0, 4298, 89, 0, 0, 0, 42, 0, 4302,
	0, 0, 4307, 4299, 4300, 4301, 4305, 4306, 4303, 0,
	4304, 71, 4308, 0, 0, 0, 0, 78, 93, 79,
	4295, 47, 0, 0, 0, 4634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4298, 89, 0, 0, 0, 0, 0, 4302,
	0, 0, 4307, 4299, 4300, 4301, 4305, 4306, 4303, 0,
	4304, 0, 4308, 0, 0, 0, 0, 78, 0, 79,
	4295, 0, 0, 0, 0, 4631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 84, 0, 0, 0, 96, 0, 0, 0,
	0, 60, 4296, 0, 0, 0, 0, 0, 0, 4309,
	4297, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 71, 0, 49, 90, 56,
	55, 58, 93, 0, 0, 47, 96, 0, 0, 0,
	0, 0, 4296, 0, 0, 0, 0, 0, 0, 4309,
	4297, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	62, 92, 91, 85, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 69, 70, 0, 4298, 89, 0, 0,
	0, 42, 0, 4302, 0, 0, 4307, 4299, 4300, 4301,
	4305, 4306, 4303, 0, 4304, 71, 4308, 0, 0, 0,
	0, 78, 93, 79, 4295, 47, 0, 0, 0, 4545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4298, 89, 0, 0,
	0, 0, 0, 4302, 0, 0, 4307, 4299, 4300, 4301,
	4305, 4306, 4303, 0, 4304, 0, 4308, 0, 0, 0,
	0, 78, 0, 79, 4295, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 84, 0, 0, 0,
	96, 0, 0, 0, 0, 60, 4296, 0, 0, 0,
	0, 0, 0, 4309, 4297, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 62, 92, 91, 85, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 71,
	0, 49, 90, 56, 55, 58, 93, 0, 0, 47,
	96, 0, 0, 0, 0, 0, 4296, 0, 0, 0,
	0, 0, 0, 4309, 4297, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 62, 92, 91, 85, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 69, 70, 0,
	4298, 89, 0, 0, 0, 0, 0, 4302, 0, 0,
	4307, 4299, 4300, 4301, 4305, 4306, 4303, 0, 4304, 0,
	4308, 0, 0, 0, 0, 78, 0, 79, 4295, 0,
	0, 0, 0, 4537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4307, 4299, 4300, 4301, 4305, 4306, 4303, 4542, 4304, 0,
	4308, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	84, 0, 0, 0, 96, 0, 0, 0, 0, 60,
	4296, 0, 0, 0, 0, 0, 0, 4309, 4297, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 62, 92,
	91, 85, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4309, 4297, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 89, 4298, 0, 0, 0, 0, 4302,
	0, 0, 0, 0, 4307, 4299, 4300, 4301, 4305, 4306,
	4303, 0, 4304, 0, 4308, 0, 0, 0, 0, 78,
	4295, 79, 0, 0, 0, 4535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 59, 61, 93,
	0, 0, 47, 87, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4296, 0, 0, 0, 0, 0, 0, 0,
	0, 4309, 4297, 0, 66, 67, 73, 0, 74, 0,
	62, 92, 91, 0, 89, 85, 0, 57, 0, 0,
	4302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 4295, 0, 87, 0, 0, 4413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4298, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 4307, 4299, 4300, 4301,
	4305, 4306, 4303, 0, 4304, 71, 4308, 0, 0, 0,
	0, 78, 93, 79, 0, 47, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4296, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 89, 57, 0,
	0, 0, 0, 4302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4295, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4309, 4297, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 69, 70, 0, 4298, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 4307, 4299, 4300,
	4301, 4305, 4306, 4303, 0, 4304, 0, 4308, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4296, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4309, 4297, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 69, 70, 0,
	4298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4307, 4299, 4300, 4301, 4305, 4306, 4303, 0, 4304, 0,
	4308, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4309, 4297, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	6402, -1000, -500, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2995, -1000, 2995, 379, -1000, 468, -1000, 1499, 973,
	-1000, -1000, -1000, -1000, -1000, 595, 240, 59555, 1108, 53643,
	79481, -240, 4539, 78743, 165, -1000, 165, 415, 55857, 834,
	872, 78005, 2815, 2139, 181, 28, 27, 248, 39618, 1023,
	315, 207, 242, 223, 184, 1210, -1000, 10824, 864, -1000,
	311, -1000, -1000, -1000, -1000, -1000, 55119, 3057, 3062, 3057,
	-1000, 2970, 2992, -1000, -1000, 2970, 2365, 2365, 379, -1000,
	10824, 13924, -1000, -1000, -1000, -1000, -1000, 31312, -1000, 1246,
	-1000, 60293, 41832, 2995, -1000, 1092, 1064, -80, 1020, 1020,
	828, 1020, 1020, -463, 1105, -1000, 822, 1581, -1000, -1000,
	-1000, -1000, 1580, 60293, 66935, 1103, 1023, 1023, 1023, 1023,
	1023, 1023, 1023, 1023, 1023, 52905, 60293, -1000, 1254, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60293,
	3039, 3037, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2636, 2635, 52167, 645, 2886, 1611, 321,
	1611, -1000, -1000, 1604, -1000, 930, 923, 921, 920, 916,
	919, 17, 1574, 1613, 2967, -1000, 2596, 2970, 2970, 1574,
	-1000, 918, -1000, -1000, -1000, -1000, -1000, -1000, 1324, -1000,
	-1000, 1682, 1682, 582, 1059, 944, 947, 944, 2930, 1565,
	2877, 2872, 2177, 2871, 1184, 2870, 2630, -1000, 1253, -1000,
	-1000, 62, -1000, 2138, 60293, -1000, -1000, 1989, 1984, 701,
	2527, 1166, 2672, -1000, -1000, 692, 838, 2622, 795, 2622,
	2622, 2622, 414, 2622, 2622, 26, 2622, 2622, 2622, 355,
	2622, 353, 2622, 2622, 2622, 2622, 2622, -1000, 2408, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 38869, 2923, 228, -1000, -167, 193, 2945, 952, -1000,
	-1000, -1000, 335, 1246, 61769, 2586, -1000, 2596, -1000, -1000,
	-1000, 2594, 2596, -1000, 2044, 1097, 1023, 690, -1000, 558,
	-1000, -1000, -1000, 2926, 2596, 45525, -1000, -1000, 1672, -1000,
	2596, 2596, 1246, 2953, 1246, 1246, 2949, 2947, 1246, 2889,
	28288, 18460, 2881, 1751, -1000, -1000, -1000, -1000, 2365, 1246,
	3036, -1000, 41094, 1252, -1000, 18460, 1892, 2596, 2596, -1000,
	1190, 1245, -1000, 1130, 1237, -1000, -1000, 19216, 19216, 19216,
	19216, 19216, 19216, 19216, -1000, -1000, -1000, -1000, -1000, -1000,
	2351, 2350, 2349, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2596, 1250, 1249, 1247, 2596, 2596, 2596,
	2596, 2596, -1000, 16948, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 18460, 2596, 2596, 2596, 2596, 2596, -1000, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, 2596, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2596,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2596, 2596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2596, 1028,
	1028, 58817, 2593, -40, 30556, -1000, -1000, -1000, -1000, 29044,
	64721, 1479, -1000, -1000, -1000, -1000, 2868, -1000, -1000, 1243,
	1237, 1190, 1162, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2995, 319, -1000, 2490, -1000, -1000, 58490, 58490, 58490,
	58490, 58490, 58490, 48477, -1000, -1000, -1000, 2628, 2970, -1000,
	1020, 1020, 883, 2137, 1662, 2127, 78005, 78005, 1020, -1000,
	705, 66935, 66935, -351, 1020, 812, 66935, 818, 2591, 1056,
	2590, 1055, 2035, 1023, 76529, 60293, 2126, 2124, 78005, 78005,
	66935, 66935, 78005, -1000, -1000, -1000, 27532, -1000, 1300, 2588,
	47739, 47001, 51429, 51429, -1000, -1000, -1000, 907, -1000, 1611,
	-1000, 8930, 18460, 1020, 1020, 60293, 60293, 60293, 60293, 60293,
	-1000, 60293, -1000, -1000, 1611, -1000, -1000, 1611, 1611, 1611,
	1574, 3032, 1574, -1000, -1000, -1000, 1611, 78743, 78743, 18460,
	-1000, 19216, 66197, 1332, -1000, -1000, 1611, -1000, 78743, 969,
	969, 969, -1000, 2123, 579, 357, -1000, 944, 319, -1000,
	-1000, 2826, 2942, 2940, 2119, 1184, 1184, -1000, 2357, 1184,
	2572, -1000, 1559, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1184, 2930, 17704, 76529, -479,
	-1000, -1000, 2587, -1000, 520, -1000, -1000, 946, 2671, 946,
	5796, 66935, 66935, 66935, -1000, 2622, 76529, -1000, 2622, 2622,
	2622, 22, 2622, 2622, -1000, -1000, 2622, -1000, -1000, -1000,
	2622, -1000, -1000, 2622, -1000, -1000, -1000, 2622, 2622, -1000,
	2622, 2622, -1000, -1000, -1000, -1000, -1000, 66935, 706, 2520,
	2576, 2669, -1000, 1054, 205, -1, 141, -1000, -1000, -1000,
	-1000, -1000, -1000, 334, 330, 322, 312, -1000, -1000, -1000,
	-1000, 304, 303, -1000, -1000, 58071, 58071, 891, -1000, 2586,
	61769, 2939, 22996, 864, -1000, 18460, 2898, -1000, 2898, -1000,
	-1000, -1000, 372, -1000, 60293, 66935, 78005, 55119, 55119, 55119,
	55119, -1000, 2717, 2712, -1000, 2710, 2703, 2701, 516, 61769,
	-1000, 2926, 379, 2486, 2365, 2365, 558, 45525, -1000, 2596,
	-1000, 61769, 1199, 1090, 1081, 1070, 2826, -1000, -1000, -1000,
	-1000, -1000, 2129, 2102, 1917, 13168, 19216, -1000, -1000, -1000,
	-1000, -1000, 3057, 3057, -1000, -1000, -1000, -1000, -1000, -1000,
	1705, 3051, 1482, 2565, -1000, -1000, -1000, 2581, -1000, 1828,
	1236, 1830, 1725, -1000, -1000, -1000, -1000, -1000, -1000, 13924,
	-1000, -1000, 60293, -1000, 18460, 18460, 18460, 1948, -1000, 44784,
	-1000, -1000, -1000, 23752, 1490, 19216, 1836, 1586, 19216, 19216,
	19216, 19216, 19216, 19216, 19216, 19216, 19216, 19216, 19216, 19216,
	19216, 19216, 19216, 1380, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2100, -1000, 319, 36604, 13168, 36604, 808, 808,
	76529, 1315, 1315, 1315, 1315, 1315, 1315, 61031, -1000, -1000,
	-1000, 2938, 35092, 76529, 36604, 2938, 2938, 2938, 2938, 2938,
	2480, 16948, 1900, 10824, 55119, 13168, 13168, 13168, 2365, 18460,
	18460, 13168, 19216, 13168, 16192, 15436, 20728, 13168, 13168, 2938,
	1616, 1900, 26776, 13168, -1000, 2365, -1000, -1000, -1000, -1000,
	1873, -1000, -1000, -313, -313, -313, 428, 13168, 13168, 13168,
	13168, 2365, 2365, 13168, 13168, 13168, 13168, 13168, 13168, 2365,
	2365, 2365, 13168, 13168, 13168, 13168, 13168, 13168, 13168, 13168,
	13168, 13168, 13168, 13168, -1000, -1000, -1000, 1804, 57333, 55119,
	60293, 2541, 2508, -1000, -1000, 1224, 29800, 2554, -1000, -24,
	-23, -40, -1000, -1000, 1280, -1000, -1000, -1000, -1000, 14680,
	-1000, -1000, -1000, 24508, 2970, 319, -1000, 40356, -1000, 58,
	-1000, -1000, -1000, 2606, -1000, 2610, 120, 554, 2610, 91,
	89, 2610, 2610, 2610, -1000, -1000, -1000, -1000, 103, -1000,
	-1000, -1000, -1000, -1000, 2627, 2626, -1000, 2606, 2606, 2606,
	-1000, -1000, -1000, -1000, -1000, -1000, 2610, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2616, 532, 2607, 2607, 2607,
	2607, 2607, -1000, -1000, -1000, -1000, -1000, 994, -1000, -1000,
	-1000, 18460, 2889, 2856, 76529, 60293, 1061, -464, 812, 2898,
	2920, 2898, 880, -1000, 1221, 2625, 78005, 868, 2547, -1000,
	458, 2512, 1135, 56595, -1000, -1000, -1000, -1000, -1000, 60293,
	60293, 66935, 66935, 66935, 60293, 2666, 2580, -1000, -1000, -1000,
	-1000, -1000, 2579, -1000, 2512, -1000, -1000, 1220, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -436, -437, 60293, -1000, -1000, -1000, -1000, -1000,
	-1000, 2573, -1000, 2573, -1000, -1000, -1000, 2354, 1900, 2098,
	2097, 2930, -1000, -1000, -1000, -1000, 1597, -1000, -1000, -1000,
	-1000, 1611, 60293, 2930, -1000, -1000, -1000, 1900, 1769, 2634,
	2596, 2365, -1000, -1000, -1000, 161, -1000, 150, -1000, -1000,
	-1000, 2094, -1000, -1000, -1000, -1000, -1000, 357, -1000, 19216,
	2825, 2823, -1000, 2572, 2572, -1000, 2572, 1184, 62507, 2572,
	-1000, -1000, 2476, -1000, 295, 2353, 60293, -1000, 61769, 60,
	-1000, -51, 75053, -1000, -1000, -1000, 946, 75053, -1000, 355,
	317, -1000, 1050, -1000, 2473, -1000, -1000, -1000, -1000, 2622,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	946, 447, 2568, 946, 66935, 66935, 278, 2567, -1000, 1558,
	1550, -1000, -1000, 139, -1000, -1000, -1000, -1000, 2965, -1000,
	-1000, 292, -28, -1000, 292, 2352, 19216, -1000, 2596, 2432,
	-1000, 1209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2596,
	-1000, -1000, -1000, -1000, 2846, 1479, 1479, 1479, 5715, 458,
	2665, 2621, 2664, 545, -1000, -1000, -1000, -1000, 2709, -1000,
	2686, 2685, -1000, -1000, -1000, 2599, 61769, 55119, -1000, -1000,
	-1000, 2365, 76529, 1148, -1000, 61769, 2596, 2596, 2596, 19216,
	19216, 1481, -1000, 19216, 19216, 1468, -1000, 19216, 19216, 1441,
	-1000, 2365, 2564, -1000, -1000, 1900, 1197, 5134, -1000, 75791,
	-236, 2711, 28288, 28288, 18460, -1000, -1000, -1000, 24508, 2966,
	-1000, 2754, 2751, 3026, -1000, -1000, -1000, 1490, 1765, 1521,
	-1000, -1000, 1738, -1000, -1000, -1000, -1000, -1000, 1195, 2596,
	-1000, -1000, -1000, -1000, -1000, -1000, 5167, -1000, -1000, -1000,
	-1000, 1836, 19216, 19216, 19216, 1769, 5167, 4948, 2060, 2110,
	1315, 1573, 1573, 1310, 1310, 1310, 1310, 1310, 2148, 2148,
	-1000, -1000, -1000, -1000, 2365, -1000, 2470, -1000, -1000, 2351,
	2350, 2349, -1000, -1000, -1000, -1000, 13168, -1000, -1000, -1000,
	-1000, -1000, -1000, 13168, 13168, 13168, 13168, 13168, 18460, -1000,
	2470, 2470, 2470, -1000, 1701, 2117, 2367, 5011, 2470, 1363,
	3024, 2470, 1302, 3023, 2470, 2132, 19216, 19216, 19216, 2470,
	2470, 13168, 1668, -1000, 18460, 2365, 1231, 2365, 1190, 1162,
	2470, -1000, 2365, 2563, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2561, 3022, 2558, -1000, -1000,
	-1000, -1000, 2470, 2365, 2470, 2470, -99, -99, 2365, 2470,
	2365, 2470, 2470, 2365, -99, -99, -99, 2470, 2470, 2470,
	2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, -1000,
	2365, 1432, 60293, -1000, 2559, 1432, 2504, 55119, -1000, -1000,
	55119, 78743, 26020, -1000, 29044, -40, -44, -1000, -1000, 2554,
	-1000, -1000, 1497, -1000, -1000, 2347, 1900, -1000, 1160, 2889,
	5034, -1000, -1000, -1000, -1000, 2618, 44046, -1000, 2774, 1228,
	1228, 1228, 65459, 77267, 2773, -1000, -1000, 241, 37, -1000,
	-1000, -1000, 1967, -1000, 384, 560, 2610, -1000, -1000, -1000,
	2610, 2610, -1000, 2610, 2610, -1000, -1000, -1000, -1000, 2346,
	2346, -1000, -1000, -1000, -1000, -1000, 1960, -1000, 2616, -1000,
	1952, -1000, -1000, -1000, -1000, 241, 241, 241, 241, 241,
	-1000, 1649, -1000, 2632, 2596, 60293, -354, -1000, -1000, -1000,
	3018, -1000, -1000, 76529, 63983, 2663, -1000, -1000, 369, 66935,
	450, 761, 377, -1000, 1658, -1000, -1000, 1049, -1000, 1047,
	-1000, -1000, 1124, 60293, 60293, 66935, 76529, 2662, 2661, -1000,
	51429, -1000, -1000, -1000, -1000, 3003, 2090, 2074, -1000, 1574,
	1611, -1000, 19216, 66935, -1000, 912, -1000, -1000, -1000, -1000,
	5167, 19216, 19216, -1000, -1000, -1000, -1000, 1697, -1000, -1000,
	-1000, -1000, -10, -1000, -1000, 1045, 1155, 1154, 75053, 1043,
	-1000, 386, 66935, -1000, 76529, -1000, 75053, 409, 443, 75053,
	1156, 3021, 2551, -1000, 1549, 1544, 1542, 1534, 1527, 1508,
	1506, 1505, 205, 2615, 2614, -1000, -1000, 284, -1000, 2838,
	-1000, -1000, 5167, -1000, -1000, 22996, 36604, -1000, 1479, 1491,
	-1000, 1438, 2345, 1273, 1657, -1000, -1000, -1000, 2991, 1235,
	1139, 998, 1479, 1001, 442, 1041, 2835, 2831, 689, 574,
	-1000, 1479, 1001, 1176, 624, -1000, 1461, 1460, 1458, 1455,
	1449, 1447, 1446, 1437, 610, -355, -1000, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, -150, -153, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	32068, 1479, 1479, -250, -1000, 1115, 668, -1000, -1000, 18460,
	2611, -1000, 18460, -1000, -1000, -1000, -1000, -1000, 76529, 2599,
	558, -1000, 2430, -1000, -1000, 1148, 76529, 76529, 76529, 4845,
	2004, 2596, 4702, 1970, 2596, 4282, 1928, 2596, 2926, 13168,
	22240, 2342, 2550, 2341, 2325, -1000, 47, -1000, 2740, -1000,
	-1000, -1000, 60293, -1000, -1000, -1000, -1000, 3003, 54381, 13924,
	-1000, -1000, -1000, -1000, 34336, 13168, -1000, 1769, 5167, 4195,
	-1000, 19216, -1000, -1000, 2365, 2470, 2470, 2470, 2470, 2470,
	1900, -1000, -1000, -1000, 219, 1380, 219, -1000, 1380, 19216,
	-1000, 19216, 19216, -1000, 19216, 19216, -1000, -1000, 19216, 3817,
	3716, 2624, -245, -1000, 2555, 1579, -1000, 18460, 1884, -1000,
	-1000, -1000, -1000, -1000, 19216, 19216, 19216, 19216, -1000, -1000,
	-1000, -1000, -1000, 74315, -1000, -99, -99, -99, -99, -99,
	-99, -1000, -1000, -1000, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -1000, 395, 2596, -1000,
	25264, 3003, 55119, 2545, 2545, -1000, 1137, -1000, -1000, -1000,
	-30, -59, -1000, -1000, -1000, -1000, -1000, 36604, -1000, -1000,
	-1000, 5934, -1000, 1479, 1479, 1479, 385, 1479, 1479, 1479,
	1479, 1479, -157, -170, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 187, 1479, 1479, 1479, 1479, 1479, 1479, 32068, 1479,
	1479, -357, 49215, 1167, 999, -1000, -1000, -1000, 77267, 77267,
	77267, -1000, 77267, 77267, -1000, -1000, -1000, -1000, 49953, -1000,
	-1000, 1726, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2596, -490, 1951, 60293, -1000, 2845, 1423, 38872, 3048, -1000,
	2772, -1000, 2771, 2770, 2324, -1000, -1000, 2500, 2499, 2498,
	-1000, 2610, -1000, -1000, -1000, -1000, -1000, 2468, -1000, 2466,
	2549, -1000, 2464, -425, 2660, 76529, 2935, 2596, 1949, 2659,
	-1000, -1000, -1000, -1000, 2481, 2548, -1000, 58490, 76529, 76529,
	76529, 685, -250, 576, -1000, 66935, 398, 458, 787, 1993,
	-395, 2918, 60293, 66935, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 73577, 73577, -1000, -1000, 18460, -1000, -1000, 2930, -1000,
	5167, 2512, -1000, -1000, 5167, 5167, 1432, 1095, -1000, 66935,
	1330, 72839, 1039, 66935, 407, 263, -1000, 3020, 3019, 405,
	3013, -1000, 280, 66935, 278, 2323, 2320, 2319, 1934, 1933,
	1911, 1909, 1907, -1000, 60293, 60293, 2317, -1000, -1000, -1000,
	1418, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1425, 7012,
	1657, 1420, 1411, 1408, 1403, -1000, 164, 46263, 1020, 1185,
	1003, -1000, -1000, 2596, -1000, 43308, 49953, 49953, 49953, 1023,
	2769, 2768, 76529, 49953, 49953, 76529, 49953, 893, 2071, 2844,
	1479, 100, -1000, -1000, -1000, 72101, -1000, 71363, 832, 50691,
	49953, 76529, 60293, 42570, -1000, -1000, -1000, -1000, 70625, 1906,
	76529, 76529, 69887, 69149, 68411, 67673, -1000, -235, 867, 18460,
	867, 1929, 1929, 2314, 2300, 2299, 1479, 1479, 208, 1929,
	2279, 208, 1929, 38116, 2276, 968, 867, 867, 867, 1929,
	1929, 1929, 1929, 2275, 425, 1798, 2274, 1929, 2264, 2261,
	867, -1000, -211, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1929, 2596, -1000, 378, 905, 1038,
	843, -3, 1900, 76529, 1900, 2444, -1000, -1000, 1399, 76529,
	-1000, 2395, 2395, 2395, 19216, 19216, 19216, 19216, 19216, 19216,
	19216, 19216, 19216, 61769, -1000, -1000, 1133, 13, 76529, -1000,
	36, -1000, -1000, -1000, 3001, -1000, 2544, -1000, -1000, -1000,
	2365, -1000, 19216, 5167, -1000, -99, -99, -99, -99, -99,
	2365, 2606, 2606, 2606, -1000, 2606, 2607, 111, -1000, -1000,
	-1000, 2606, 129, 2606, 128, -1000, 2365, 2365, 2365, 2032,
	3163, 2759, 2707, 2255, 2032, 19216, 19216, 19216, 2596, -93,
	-1000, 1900, 18460, 2398, 2364, 2032, 2032, -1000, -1000, 2069,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2658,
	2658, 25264, 2926, -1000, 21484, -1000, 864, -1000, -1000, 76529,
	2556, -1000, 1479, 1205, 1479, 1479, 2995, 2545, -1000, -1000,
	1326, -1000, -1000, -1000, -1000, 867, 867, 867, 1479, 2843,
	1479, 1929, 1929, 2272, 2271, 2262, 1479, 1479, 208, 1929,
	2260, 208, 1929, 38116, 2259, 968, 867, 867, 867, 1929,
	1929, 1929, 1929, 2245, 425, -1000, 1786, 2243, 1929, 2218,
	2170, 867, -1000, -212, 1929, 2596, -237, 2442, -1000, 2606,
	2606, 2767, 1228, -1000, -1000, -1000, -1000, -1000, -1000, 2605,
	-1000, -1000, 19216, 2934, -1000, 2604, 1415, -1000, -1000, -1000,
	-1000, 808, 2242, -1000, -1000, 19216, -1000, -1000, 2596, 2596,
	2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
	2596, -60, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2239, -1000, 1902, -1000, 1895, -1000, -1000, -1000, 60293,
	-1000, -1000, 2933, -1000, 60293, 273, 63983, -1000, 58490, 58490,
	58490, -3, 431, -1000, 1681, -1000, -1000, -1000, 2238, 2237,
	2236, 2512, 462, 1680, 430, -1000, 2925, 2914, 2235, 2233,
	2232, 2231, 1891, -1000, -1000, 2633, 76529, 2540, -1000, 1900,
	1611, 36, 60293, 263, -1000, -1000, -1000, 66935, 263, -1000,
	-1000, 438, 66935, 66935, 3010, 66935, 526, 1156, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2440, 2437, -1000,
	-1000, -1000, -1000, -1000, -1000, 1322, 1174, 365, 364, -201,
	-1000, 456, 391, -1000, -1000, -1000, 50691, 971, 58490, 58490,
	77267, 1228, -1000, 2764, 1384, -1000, -1000, -1000, -1000, 76529,
	-1000, 49953, 2538, -427, -429, 1281, -442, -1000, -1000, -1000,
	-1000, 50691, 1479, 1380, 2841, 687, 363, 686, 359, -1000,
	-1000, -1000, -1000, 971, 1203, 1035, -1000, 2763, 49953, 1034,
	684, 358, -1000, 1690, -252, 2538, -1000, 2538, -1000, 2538,
	-1000, 2538, -1000, -1000, -1000, 1900, -1000, -1000, -1000, -1000,
	-1000, -1000, 2230, 2227, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -164, -1000, 38116, 378, -1000, 1881, 1879, 1874,
	1868, 1732, -1000, 2657, 78005, -1000, 657, 2652, 559, 808,
	2434, -1000, 76529, -1000, -1000, -1000, -1000, -1000, 5167, 5167,
	2332, 5167, 5167, 2282, 5167, 5167, 2200, -1000, 33580, 2596,
	-1000, 21, -1000, 2997, 2989, -1000, -1000, 5167, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 539, 481, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19216, 19216,
	19216, 19216, -1000, 2032, 2032, 2032, 19216, 2365, 2226, 1900,
	19216, 19216, -1000, -1000, 1395, -1000, 2941, 2890, 2941, 2496,
	61769, 2365, 2510, 2432, 2365, 376, -1000, -1000, -1000, 10824,
	55119, 2537, -1000, 2596, 2430, 2995, 25264, 18460, 18460, 18460,
	18460, 2970, -1000, -1000, -1000, -1000, 1380, 1479, 32824, -1000,
	-1000, -1000, -1000, -1000, 2225, 2224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -165, -1000, 38116, -1000, 249, 49215, 2902,
	2902, 77267, 77267, 76529, 2032, 2596, 76529, -1000, -1000, -1000,
	-1000, -1000, 2032, -1000, -1000, 2461, 2447, 2603, -1000, -1000,
	-395, 2963, -1000, 273, -1000, 2215, 811, 833, -1000, 809,
	805, 797, 726, 700, -1000, -1000, -1000, -1000, 2652, 785,
	431, -1000, -39, 1858, 1427, 2830, 585, -1000, -1000, -1000,
	-1000, 348, 458, -1000, 783, 2214, 781, 2212, -1000, -1000,
	455, -1000, -1000, 2814, 2427, -1000, 21, -1000, 2932, 263,
	2932, 404, 1156, 1156, 66935, 1156, -1000, -1000, -1000, -1000,
	-214, 1854, 19216, 2596, 2596, 693, 2406, -1000, -1000, 2068,
	-1000, -1000, 2632, 1020, 77267, 2399, -1000, 76529, -1000, -1000,
	-1000, -1000, -1000, -1000, 2897, 2894, -1000, -1000, 971, 1380,
	-1000, 1380, -1000, -1000, -1000, -1000, -1000, 49953, 76529, 49953,
	1033, 49953, -1000, -1000, 2596, 1094, -1000, -1000, -1000, -1000,
	2412, -1000, -1000, -1000, -1000, -1000, -1000, 550, 2211, 327,
	-1000, -1000, 1115, 663, -1000, -1000, -1000, -281, -1000, -1000,
	19216, 19216, 19216, -1000, 35848, 2808, 2806, -101, 18460, 18460,
	-1000, -1000, -1000, -1000, 2032, 2032, 2032, 2032, -1000, -1000,
	-1000, 282, -1000, -1000, 2032, 2032, 2995, 2988, -1000, -1000,
	2760, -1000, 2941, 2599, -1000, -1000, 2510, 376, -1000, 864,
	-1000, 12412, -1000, 2970, -1000, 1900, 1900, 1900, 1900, -1000,
	-1000, 1380, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2412,
	249, -1000, 38116, 1479, 2208, 1479, 1479, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2405, -494, 19216, 2403, -1000, -1000,
	-1000, 49215, 319, -1000, 885, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2813, 2811, 840, 905, -1000, 2207, 2195, -1000,
	712, 1886, 1262, -107, -1000, -1000, -1000, -1000, -1000, -1000,
	714, 2067, -1000, 429, -1000, -1000, 426, -1000, -1000, 2987,
	-395, 19216, -1000, 2808, -1000, 66935, 2932, -1000, -1000, -1000,
	-1000, 1156, -1000, 2596, 2981, -1000, 2032, 76529, 19216, 2596,
	1465, -1000, -1000, 241, 241, 2601, 77267, 2600, -1000, 1384,
	2645, 19216, -1000, -1000, 1314, 1312, -1000, -1000, 1032, 49953,
	-1000, 1384, 60293, 38116, -1000, -1000, -1000, -1000, 905, 1338,
	681, 2032, 2032, 2032, 2369, -1000, 10203, 389, -1000, -1000,
	2784, 2976, -1000, 76529, -1000, 1900, 2533, -1000, 1900, -1000,
	-1000, -1000, -1000, 2365, 368, -289, -1000, -1000, 1422, 18460,
	2531, 3044, -1000, -1000, -1000, -1000, 376, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1853, -1000, 2194, 2192, 977, -1000,
	-1000, -1000, 2032, -1000, 2401, -1000, -1000, 319, 319, 855,
	82190, -1000, -1000, -1000, -1000, 1732, -1000, -1000, -1000, -1000,
	1846, -1000, -1000, 1876, 711, 406, -1000, 2931, -1000, -1000,
	1845, 5167, 1026, -253, -1000, -1000, -1000, 1384, -401, -1000,
	2395, 2032, 76529, 1826, 49215, 2632, 49215, -1000, 940, 5167,
	1479, 1380, 49953, -1000, 2399, 51, -1000, 82190, 1732, 1258,
	674, 559, -1000, -1000, -1000, 2365, 35848, 436, -454, 2,
	2191, 2786, 2787, 2802, -1000, 2172, 2528, -1000, 2928, 18460,
	-1000, 2731, -248, -318, 2365, 441, 441, 2523, 25264, 2365,
	-1000, -1000, -1000, 60293, -494, 249, -256, 2365, 2365, -1000,
	886, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 11656, 18460, 186, 37360, 2066,
	2047, 82190, 2359, 82190, 18460, 2043, 2041, 2789, 19216, 82037,
	549, -332, -1000, -333, -1000, -1000, -1000, 2156, -1000, 2599,
	1791, 444, 2399, 387, -1000, -1000, 2395, -1000, 2380, 2598,
	2378, 910, 1380, -1000, -1000, -1000, 623, -1000, -1000, 533,
	808, -1000, 559, -1000, 2926, -1000, -1000, 2153, -141, -1000,
	2596, -4, 2975, 2974, -1000, 2973, 2972, -1000, 76529, 2596,
	-1000, -1000, 2730, -1000, -1000, -1000, 388, -1000, 1409, 851,
	1349, -1000, 808, -1000, 2519, -1000, 2597, -1000, -1000, 249,
	-1000, 352, -1000, -256, -1000, 2040, 2038, -1000, 2114, 1591,
	-1000, 18460, 1869, 586, 575, 7970, -1000, -1000, -1000, -1000,
	-1000, -1000, -501, -1000, 338, -502, 984, -1000, -1000, 2037,
	-1000, 3008, 5167, -1000, -503, -1000, -1000, -1000, -1000, 2840,
	1452, 63245, -1000, 2596, 693, -1000, 249, 49215, 249, 2596,
	-1000, -1000, -1000, -1000, -281, -1000, 1338, 61769, 650, 2151,
	35848, 2596, 2144, 2143, 2141, 1903, -1000, -1000, -280, 1676,
	-1000, -1000, -1000, -1000, -1000, -313, 76529, 403, 988, 985,
	-1000, -1000, -1000, -1000, 1578, 1635, 82190, -1000, 1857, 82190,
	2962, 2961, 2959, 36, 36604, 81886, 81654, 82190, 82190, 18460,
	81490, 82190, 1689, -1000, 81420, 82190, -1000, 25264, -1000, -1000,
	-1000, -1000, 3060, 2512, 19216, 2596, -1000, 2376, -1000, 19972,
	82190, -1000, 1338, -1000, 1880, 1792, 2651, 2650, 808, -1000,
	2369, 35848, -1000, -1000, -1000, -1000, -316, 388, -1000, 2374,
	-1000, 390, 381, 412, 1628, 82190, -1000, -504, 82190, -505,
	826, 319, 1053, 1280, -1000, 563, -1000, 2034, -506, -507,
	-508, 839, 18460, -509, 2033, -1000, -1000, 2519, 66935, 2032,
	19216, 249, 2032, 2365, -1000, -1000, 2649, 808, -1000, 2648,
	808, -81, -84, 2644, -1000, 2369, -320, -1000, 2643, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 81256, 10824,
	-1000, -510, 81186, -511, 7844, -1000, -1000, -1000, 81022, -1000,
	-1000, -1000, -1000, 572, -1000, -1000, 2893, -1000, -1000, 80952,
	80788, 80484, 82190, 1837, 80427, 2518, -1000, -1000, 2512, -219,
	2032, -1000, -1000, -1000, -1000, 299, 2642, -369, 2641, 296,
	294, -1000, -1000, -85, -1000, -1000, 2640, 2639, 3007, -1000,
	-512, -1000, -1000, 80274, 1621, 82190, 1018, 82190, 1627, -1000,
	18460, -1000, 1053, -1000, 19216, 2031, 561, 18460, -513, 562,
	553, 2014, -1000, 1761, -219, 293, -371, 2638, 2623, -1000,
	-1000, -1000, 3043, -1000, 3041, 1145, 1145, 80220, 1598, -1000,
	-1000, -514, 1017, 82190, -1000, 1823, -1000, 5167, -1000, 2001,
	1775, 10112, -1000, -1000, -1000, -1000, -1000, 290, -374, -1000,
	-1000, -1000, 983, 1777, -1000, -1000, -1000, 9939, -1000, -517,
	82190, -1000, 556, 546, -1000, -1000, -1000, -1000, -1000, 1012,
	9587, -522, 2000, 1930, -1000, 1009, 82190, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3529, 3528, 3527, 14, 3526, 289, 331, 317, 12,
	66, 3171, 3525, 319, 3524, 296, 3523, 30, 24, 21,
	35, 3522, 3169, 3163, 3161, 3158, 32, 3521, 8, 3520,
	3519, 3144, 3516, 3515, 3141, 3514, 3511, 3503, 3497, 3496,
	3495, 3493, 3492, 3490, 3136, 3134, 3131, 3129, 3487, 3485,
	3483, 3127, 3109, 3105, 3482, 83, 3481, 13, 40, 37,
	3475, 4, 3474, 203, 237, 3473, 5, 3471, 3465, 16,
	204, 3464, 3463, 65, 3101, 3462, 3452, 3451, 3448, 3447,
	3442, 143, 3441, 3440, 3097, 3439, 3095, 3437, 3092, 3089,
	3086, 3084, 3082, 202, 3436, 3076, 3074, 3072, 3435, 2749,
	234, 506, 232, 3434, 131, 137, 1742, 3433, 214, 3432,
	218, 3431, 3429, 3427, 477, 231, 3426, 164, 85, 492,
	165, 179, 176, 321, 3425, 61, 183, 367, 3424, 10,
	3423, 108, 3422, 265, 3421, 228, 229, 200, 371, 196,
	3420, 3419, 174, 3416, 3415, 3414, 220, 3413, 3412, 235,
	4889, 3397, 3396, 189, 3395, 136, 3394, 177, 3393, 3392,
	3391, 3390, 239, 122, 89, 180, 142, 3389, 168, 3388,
	3387, 3386, 3385, 3384, 3381, 80, 67, 873, 3380, 162,
	197, 3379, 55, 47, 38, 3372, 3370, 56, 3369, 3368,
	127, 3365, 3364, 132, 3362, 195, 68, 3361, 3360, 3359,
	3358, 111, 76, 3357, 69, 3356, 193, 3354, 3353, 3352,
	3351, 3350, 100, 3349, 82, 3346, 194, 313, 268, 3344,
	3343, 48, 49, 3342, 53, 23, 211, 112, 42, 104,
	79, 184, 170, 133, 160, 50, 152, 54, 147, 139,
	81, 3341, 233, 191, 217, 117, 26, 3339, 3338, 206,
	3337, 114, 213, 190, 192, 207, 3336, 3334, 3333, 241,
	3332, 173, 559, 3331, 129, 151, 113, 2803, 240, 138,
	3330, 3329, 3327, 3326, 119, 52, 145, 3325, 39, 238,
	236, 248, 44, 150, 3324, 444, 5295, 5745, 7418, 43,
	88, 91, 6294, 149, 215, 3323, 62, 3321, 3320, 3318,
	3622, 178, 34, 72, 167, 3316, 159, 115, 101, 3315,
	3314, 3311, 3310, 3309, 3308, 161, 226, 3291, 3290, 64,
	3288, 3287, 46, 41, 19, 18, 3286, 146, 225, 223,
	222, 3285, 212, 58, 3284, 3283, 181, 135, 3282, 3281,
	3280, 3279, 188, 125, 210, 3277, 209, 126, 140, 3276,
	118, 3271, 3267, 130, 6661, 186, 3266, 3265, 673, 134,
	154, 198, 3264, 3263, 3261, 73, 3260, 3259, 3, 3258,
	107, 60, 51, 110, 9, 163, 3256, 3254, 208, 3253,
	3252, 156, 175, 3250, 141, 153, 71, 3247, 70, 155,
	3246, 169, 2, 7, 6, 3243, 3241, 3235, 3229, 3227,
	3225, 3224, 3222, 124, 3221, 3220, 96, 93, 77, 3218,
	3217, 3216, 3214, 3210, 199, 172, 74, 227, 103, 17,
	3209, 3206, 11, 3204, 182, 3203, 92, 3201, 3200, 128,
	3199, 3197, 75, 105, 29, 94, 3194, 3193, 116, 157,
	3192, 102, 3185, 3180, 230, 424, 3179, 399, 3178, 201,
	171, 78, 95, 3177, 84, 106, 3174, 99, 3165, 28,
	63, 3156, 27, 20, 1767, 3146, 0, 3205, 216, 3138,
	158, 3099, 3079, 221, 3034,
}

var yyR1 = [...]int{
	0, 465, 465, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 247, 247, 98, 4, 4, 11, 11, 9,
	9, 10, 10, 16, 6, 6, 12, 12, 12, 13,
	13, 7, 7, 14, 14, 15, 15, 5, 5, 129,
	129, 8, 8, 128, 128, 128, 244, 244, 244, 244,
	241, 241, 130, 130, 127, 127, 135, 17, 17, 17,
	112, 112, 18, 19, 19, 19, 19, 468, 468, 144,
	144, 142, 142, 143, 143, 238, 238, 240, 240, 20,
	20, 20, 249, 249, 254, 254, 254, 257, 257, 257,
	257, 226, 227, 228, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 456,
	456, 456, 457, 457, 457, 457, 457, 282, 282, 282,
	282, 420, 420, 436, 436, 436, 437, 437, 435, 435,
	435, 435, 435, 439, 439, 440, 440, 438, 438, 438,
	438, 442, 442, 443, 443, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 423,
	423, 423, 51, 51, 51, 51, 51, 55, 55, 52,
	52, 52, 52, 52, 52, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 445, 445,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 447,
	447, 448, 448, 449, 449, 449, 449, 450, 450, 450,
	450, 450, 451, 451, 451, 451, 451, 451, 451, 452,
	452, 453, 453, 3, 2, 401, 401, 402, 402, 403,
	403, 403, 403, 404, 404, 405, 405, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 32, 32, 32,
	32, 32, 32, 281, 281, 277, 277, 277, 279, 279,
	280, 280, 280, 422, 422, 422, 416, 416, 416, 418,
	418, 417, 417, 417, 419, 419, 424, 424, 424, 424,
	424, 427, 427, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 428, 428, 428, 425, 425, 163, 163,
	429, 429, 434, 434, 430, 430, 431, 431, 433, 433,
	433, 432, 432, 432, 432, 319, 319, 182, 182, 71,
	71, 72, 72, 72, 215, 215, 215, 21, 21, 21,
	21, 21, 21, 27, 27, 29, 29, 29, 29, 58,
	58, 59, 30, 30, 30, 30, 60, 60, 61, 33,
	33, 33, 33, 33, 33, 68, 68, 68, 67, 67,
	66, 66, 66, 66, 66, 66, 35, 36, 37, 469,
	469, 469, 62, 62, 38, 38, 38, 41, 41, 41,
	42, 42, 42, 39, 40, 43, 31, 31, 31, 31,
	69, 69, 64, 64, 63, 63, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 34, 34,
	34, 34, 34, 34, 26, 400, 400, 400, 57, 57,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 79, 79, 356, 357, 357, 357, 357,
	357, 357, 343, 343, 344, 344, 344, 344, 344, 344,
	333, 333, 333, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	307, 307, 307, 307, 311, 311, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 310, 310, 310, 310, 310, 310, 310, 310, 312,
	312, 312, 312, 312, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 342,
	342, 316, 316, 315, 315, 315, 336, 336, 337, 337,
	337, 334, 334, 334, 335, 335, 320, 320, 320, 320,
	320, 320, 321, 338, 322, 322, 323, 323, 323, 323,
	323, 323, 324, 324, 325, 325, 325, 327, 327, 332,
	332, 331, 331, 331, 331, 331, 331, 328, 328, 328,
	328, 328, 328, 329, 329, 329, 330, 341, 341, 341,
	341, 341, 317, 47, 47, 53, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 378, 378, 383, 383, 271, 271, 272, 272,
	54, 54, 54, 54, 54, 169, 169, 56, 56, 56,
	379, 379, 381, 381, 381, 381, 381, 381, 381, 381,
	380, 380, 382, 382, 345, 345, 374, 374, 373, 373,
	372, 372, 372, 372, 372, 372, 372, 354, 354, 355,
	355, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	349, 349, 349, 348, 348, 350, 350, 353, 353, 353,
	371, 371, 370, 370, 346, 346, 346, 384, 384, 384,
	384, 384, 103, 103, 347, 347, 347, 385, 351, 351,
	352, 352, 352, 393, 394, 392, 392, 392, 392, 392,
	170, 170, 170, 376, 376, 376, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 104, 104, 104, 105, 105, 326,
	326, 358, 358, 358, 358, 358, 464, 464, 464, 359,
	359, 359, 359, 359, 359, 455, 455, 454, 454, 454,
	360, 360, 361, 362, 362, 362, 363, 363, 365, 365,
	278, 278, 366, 366, 367, 367, 364, 364, 364, 368,
	368, 397, 397, 397, 396, 396, 74, 74, 74, 74,
	76, 76, 75, 75, 75, 83, 83, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	73, 73, 291, 291, 78, 214, 214, 214, 276, 276,
	390, 390, 391, 391, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 387, 387, 386, 386, 388,
	388, 77, 77, 77, 77, 164, 164, 23, 23, 80,
	80, 421, 421, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 395, 395, 395, 25, 25, 84, 85,
	85, 85, 290, 290, 290, 290, 290, 88, 88, 88,
	88, 242, 242, 243, 243, 89, 89, 89, 89, 90,
	90, 90, 90, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 124, 263, 263, 262,
	262, 261, 261, 261, 264, 264, 264, 264, 305, 305,
	305, 87, 87, 87, 99, 99, 94, 94, 97, 97,
	97, 97, 100, 100, 101, 101, 102, 102, 95, 96,
	44, 45, 45, 45, 45, 46, 92, 92, 92, 93,
	93, 93, 93, 114, 114, 115, 115, 471, 471, 471,
	91, 472, 106, 107, 107, 109, 109, 109, 110, 110,
	110, 111, 111, 111, 268, 268, 268, 268, 268, 268,
	268, 108, 108, 108, 118, 118, 122, 122, 122, 122,
	121, 121, 121, 121, 217, 217, 222, 297, 297, 198,
	198, 218, 218, 223, 223, 223, 224, 224, 225, 225,
	225, 225, 225, 220, 220, 219, 219, 221, 185, 185,
	185, 185, 183, 183, 183, 183, 183, 183, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 181, 181, 295, 295, 295, 295, 294,
	294, 294, 126, 126, 131, 131, 133, 133, 133, 133,
	133, 133, 133, 133, 136, 200, 200, 473, 473, 154,
	154, 155, 155, 155, 155, 156, 156, 156, 156, 156,
	158, 158, 158, 159, 159, 159, 159, 159, 159, 160,
	161, 161, 157, 157, 157, 179, 179, 236, 236, 237,
	237, 235, 235, 239, 239, 132, 132, 134, 134, 134,
	134, 139, 139, 140, 140, 141, 141, 302, 302, 302,
	145, 145, 145, 147, 146, 146, 146, 146, 146, 146,
	148, 148, 458, 459, 459, 460, 460, 460, 460, 461,
	461, 461, 461, 461, 461, 461, 461, 461, 461, 462,
	462, 463, 463, 149, 149, 151, 152, 152, 150, 150,
	150, 150, 150, 150, 162, 162, 153, 165, 165, 165,
	165, 166, 166, 123, 123, 123, 123, 123, 123, 123,
	123, 260, 260, 168, 168, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 194, 194, 194, 194, 194,
	194, 171, 171, 171, 171, 171, 171, 171, 117, 117,
	195, 195, 195, 138, 137, 137, 120, 120, 119, 119,
	196, 196, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 188, 188,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 193, 193,
	193, 193, 193, 470, 470, 190, 190, 189, 189, 189,
	189, 189, 189, 113, 113, 113, 113, 113, 303, 303,
	303, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 70, 70, 207, 207, 116, 116, 205,
	205, 206, 208, 208, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 178, 178, 178, 209, 209, 197, 197, 125,
	210, 210, 211, 212, 212, 213, 213, 216, 229, 229,
	229, 230, 230, 230, 230, 180, 180, 180, 231, 231,
	231, 231, 231, 173, 173, 172, 172, 172, 174, 174,
	174, 174, 175, 175, 474, 474, 234, 234, 233, 233,
	232, 232, 232, 232, 232, 232, 232, 245, 245, 199,
	199, 202, 202, 201, 203, 246, 246, 251, 251, 251,
	251, 248, 248, 252, 252, 252, 252, 255, 255, 256,
	256, 256, 253, 253, 253, 253, 250, 250, 250, 299,
	299, 299, 299, 258, 258, 267, 267, 265, 265, 266,
	266, 259, 259, 318, 318, 318, 273, 273, 274, 274,
	275, 275, 269, 269, 269, 269, 270, 270, 296, 296,
	292, 292, 298, 298, 293, 293, 300, 300, 301, 301,
	301, 301, 398, 398, 399, 399, 399, 339, 339, 410,
	410, 340, 340, 411, 411, 412, 412, 407, 407, 408,
	408, 409, 409, 409, 48, 413, 413, 414, 414, 415,
	415, 415, 415, 49, 50, 50, 50, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 289, 289, 289, 289, 289, 289, 286, 286, 286,
	286, 286, 286, 287, 287, 287, 466, 467,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	3, 1, 3, 5, 1, 1, 1, 3, 3, 3,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 2,
	1, 10, 2, 0, 2, 2, 0, 2, 3, 6,
	1, 3, 0, 2, 1, 3, 4, 9, 9, 10,
	1, 1, 10, 9, 8, 7, 7, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 0, 2, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 2, 3, 12, 12,
	13, 5, 5, 16, 12, 9, 4, 15, 1, 6,
	9, 8, 0, 3, 3, 6, 3, 0, 3, 4,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 0, 3, 9,
	9, 9, 10, 6, 8, 2, 3, 2, 3, 3,
	3, 4, 3, 3, 2, 2, 3, 2, 2, 2,
	3, 2, 2, 3, 2, 2, 2, 3, 3, 2,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 1, 3, 0, 1, 1, 1, 1, 3, 1,
	3, 3, 0, 2, 5, 5, 5, 7, 5, 0,
	3, 0, 3, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 2, 4, 5,
	4, 6, 7, 2, 3, 3, 3, 3, 0, 3,
	0, 3, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 0, 1, 4, 3, 3, 3, 6, 6, 5,
	5, 5, 5, 4, 3, 5, 1, 3, 1, 3,
	3, 5, 0, 5, 0, 3, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 8, 4, 7, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 5, 7, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 2, 5, 0,
	1, 2, 1, 3, 5, 7, 8, 7, 9, 10,
	7, 9, 10, 2, 2, 2, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	4, 3, 2, 4, 4, 0, 2, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 5, 5, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 6, 8, 3, 6, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	3, 3, 2, 3, 4, 2, 2, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 4, 4,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 2, 2,
	3, 3, 0, 3, 0, 3, 1, 1, 0, 1,
	5, 4, 2, 3, 3, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 3, 5, 5, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 3, 3, 1, 1, 0, 1, 1,
	1, 3, 5, 3, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 3, 3, 3, 3, 2, 1, 11, 12, 12,
	13, 13, 0, 1, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 2, 3, 3, 3, 3, 4,
	5, 3, 3, 4, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	0, 1, 6, 1, 4, 5, 5, 6, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 8, 9, 0,
	2, 0, 1, 2, 0, 2, 1, 1, 1, 1,
	4, 3, 7, 5, 5, 1, 3, 5, 4, 9,
	11, 9, 2, 2, 3, 3, 4, 4, 4, 4,
	3, 3, 3, 3, 6, 5, 4, 4, 5, 5,
	8, 4, 5, 7, 2, 2, 2, 2, 3, 4,
	3, 4, 1, 3, 3, 3, 3, 4, 5, 5,
	3, 7, 6, 5, 2, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 6, 0, 1, 2, 0, 1,
	0, 1, 1, 2, 5, 3, 4, 4, 4, 4,
	4, 4, 3, 7, 6, 8, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 3, 1, 3, 8,
	8, 8, 11, 12, 15, 0, 3, 3, 3, 3,
	5, 3, 5, 6, 6, 4, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 8,
	5, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	4, 1, 3, 1, 1, 2, 2, 4, 4, 3,
	3, 3, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 4, 3, 2, 2, 6, 2, 4, 3,
	3, 4, 4, 5, 8, 6, 3, 4, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 4, 2, 4, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 4, 1, 0, 1, 2, 1, 2, 4,
	4, 5, 0, 1, 0, 3, 0, 2, 4, 4,
	2, 3, 4, 4, 5, 3, 4, 5, 4, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 0, 2, 2, 2, 2, 2,
	2, 0, 1, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 5, 1,
	2, 3, 1, 1, 2, 2, 4, 0, 1, 2,
	6, 1, 3, 2, 4, 1, 1, 1, 1, 1,
	5, 5, 8, 5, 5, 8, 5, 5, 8, 2,
	2, 2, 3, 4, 4, 0, 1, 3, 1, 0,
	3, 1, 3, 1, 3, 4, 6, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	2, 2, 12, 1, 3, 3, 3, 6, 7, 2,
	3, 3, 4, 4, 5, 5, 8, 8, 3, 3,
	4, 3, 4, 1, 3, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 6, 4,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 4, 4, 4, 2, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 6, 3, 4,
	2, 2, 2, 0, 2, 1, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 1, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 1, 0, 2,
	4, 3, 4, 1, 4, 1, 3, 4, 1, 4,
	3, 6, 2, 3, 1, 1, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 0, 5, 1,
	3, 2, 3, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 4, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 3, 3, 0, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	2, 0, 4, 4, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -465, -1, -4, -11, -16, -17, -18, -19, -20,
	-22, -74, -23, -24, -25, -84, -88, -89, -90, -86,
	-87, -94, -95, -96, -92, -91, -31, -34, -26, -98,
	-44, -45, -46, -48, -49, -50, -51, -52, -54, -53,
	-47, -5, 11, -136, -466, 12, -130, 35, -79, 191,
	-456, -76, -75, -77, -78, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -97, 450, 451, -471, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -12, 200, -13, -14, -7,
	764, -212, 20, -106, -472, -212, -11, -9, -466, -4,
	653, -106, -112, 14, 15, 13, 558, -106, -356, 29,
	-3, 118, 77, -8, 11, -270, -281, 98, 549, 199,
	-279, 331, 333, 209, -267, -269, -277, 257, 267, 50,
	211, 210, 268, 200, 331, -267, 201, 203, 549, 199,
	240, 239, 331, 333, 272, 647, 200, -150, -300, -286,
	-288, -287, 349, 83, -285, 578, 582, 272, 585, 586,
	591, 339, 91, 53, 369, 572, 361, 370, 221, 527,
	573, 332, 338, 341, 362, 736, 371, 373, 374, 570,
	571, 55, 203, 560, 561, 564, 214, 751, 354, 222,
	650, 268, 759, 754, 756, 343, 757, 517, 609, 447,
	466, 458, 485, 651, 707, 280, 302, 455, 386, 534,
	610, 346, 295, 367, 708, 322, 290, 523, 529, 305,
	450, 611, 612, 613, 543, 248, 278, 709, 456, 299,
	301, 300, 262, 577, 306, 42, 227, 482, 660, 648,
	257, 710, 616, 703, 615, 251, 284, 614, 329, 41,
	33, 617, 250, 546, 109, 277, 711, 377, 531, 618,
	503, 378, 246, 273, 275, 291, 713, 655, 350, 233,
	530, 432, 478, 360, 128, 255, 317, 379, 714, 504,
	508, 715, 535, 336, 316, 621, 716, 717, 380, 659,
	285, 718, 202, 342, 622, 281, 719, 258, 445, 537,
	347, 502, 212, 652, 223, 57, 237, 538, 506, 624,
	512, 515, 433, 376, 434, 720, 721, 722, 723, 358,
	356, 626, 357, 359, 628, 269, 297, 656, 625, 658,
	62, 197, 662, 510, 509, 511, 298, 676, 533, 490,
	488, 724, 725, 351, 218, 726, 727, 489, 23, 728,
	729, 541, 321, 353, 730, 731, 732, 627, 294, 632,
	608, 733, 734, 532, 505, 507, 256, 127, 647, 279,
	735, 355, 528, 364, 663, 654, 340, 292, 633, 737,
	382, 293, 236, 229, 542, 427, 428, 443, 444, 372,
	738, 431, 739, 740, 741, 742, 334, 333, 451, 365,
	634, 452, 274, 303, 657, 743, 635, 636, 744, 745,
	266, 249, 545, 536, 61, 519, 514, 368, 383, 457,
	429, 440, 435, 436, 438, 439, 442, 441, 437, 446,
	522, 448, 276, 243, 637, 638, 639, 430, 640, 12,
	296, 348, 641, 642, 643, 526, 366, 304, 267, 270,
	493, 238, 746, 747, 480, 481, 449, 241, 231, 122,
	544, 387, 327, 702, 331, 384, 289, 60, 244, 54,
	748, 749, 271, 245, 661, 288, 453, 345, 664, 200,
	83, -290, -285, -288, -289, -286, -287, 349, 232, 59,
	96, 64, 63, 83, -285, 647, 144, 486, 534, 191,
	524, 525, 531, -349, 532, 239, 427, 368, 242, -305,
	200, -263, 241, 523, 336, 355, 582, 245, 246, 273,
	428, 434, 201, 202, 38, 536, 535, 527, -300, -99,
	453, -99, -99, 204, 453, -114, 233, 195, -150, 232,
	-69, 83, 309, -69, 35, 83, -162, -292, -300, 83,
	-285, 42, 83, 452, 526, 526, 85, 654, 248, 27,
	-445, -419, 364, -444, -417, 192, 191, 15, 193, 272,
	369, 370, 335, 201, 13, 36, 736, 219, 371, 372,
	11, 224, 373, 374, 240, 14, 375, -446, -422, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 82, 83,
	-285, -265, 206, 372, 427, 449, 427, 427, -272, -271,
	385, 512, 144, -129, 706, -127, -135, -302, -300, -286,
	-287, -200, -473, 253, 549, -259, 331, -279, 205, -131,
	-133, -134, -154, -137, 704, -466, -132, -458, -150, -138,
	83, 607, -110, 10, -109, -111, 9, 8, -110, -230,
	22, 21, -268, -107, -230, -467, 79, -467, -9, -129,
	-121, 135, -123, -300, -167, 101, -177, 34, 30, -176,
	349, 232, -168, -204, -286, -203, -138, 144, -304, 133,
	134, 141, 102, 187, -188, -186, -187, -189, -191, -192,
	227, 480, 481, 82, 84, 92, 85, 86, 87, 88,
	93, 94, 95, -292, -288, -287, -284, 578, 582, 585,
	586, 591, -201, -466, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 67, 68, 576, 199,
	559, 560, 483, 561, 13, 562, 563, 564, 649, 221,
	568, 104, 56, 326, 550, 551, 555, -193, 552, 556,
	557, 570, 571, 572, 573, 206, 549, 139, 558, 595,
	596, 597, 598, 599, 600, 601, 602, 604, 605, 603,
	579, 580, 581, 583, 584, 587, 588, 589, 590, 592,
	593, 594, 678, 196, 192, 195, 100, 29, 31, 679,
	254, 103, 464, 498, 567, 21, 25, 215, 198, 486,
	213, 143, 208, 216, 311, 313, 191, 71, 680, 547,
	312, 524, 674, 671, 673, 672, 477, 475, 310, 681,
	15, 32, 225, 261, 682, 473, 193, 252, 107, 108,
	683, 47, 46, 8, 314, 226, 320, 474, 684, 685,
	24, 74, 217, 16, 211, 242, 758, 686, 335, 18,
	126, 19, 687, 668, 670, 669, 205, 120, 201, 750,
	69, 259, 688, 462, 467, 468, 469, 470, 471, 463,
	97, 689, 690, 117, 325, 65, 607, 38, 247, 704,
	565, 324, 691, 44, 43, 497, 501, 496, 323, 513,
	118, 22, 553, 554, 36, 692, 693, 235, 500, 461,
	495, 705, 694, 666, 264, 72, 385, 476, 762, 39,
	75, 230, 381, 352, 48, 98, 20, 260, 70, 40,
	574, 123, 763, 479, 207, 239, 695, 539, 263, 696,
	124, 472, 706, 219, 119, 454, 194, 363, 308, 220,
	330, 26, 337, 697, 253, 125, 525, 665, 698, 569,
	35, 224, 307, 460, 209, 699, 265, 319, 309, 318,
	700, 701, 344, 49, 760, 677, 200, 45, 106, 499,
	459, 494, 204, 566, 240, 315, 9, 50, 37, 520,
	14, 375, 73, 76, 487, 484, 492, 491, 210, 761,
	17, 328, 575, 653, 540, 99, 675, 521, 548, -106,
	-106, -106, -248, 449, -255, -252, 535, 536, -253, -256,
	-250, -204, 512, 733, 734, 534, 486, 533, -292, -300,
	-286, 349, 232, 144, 579, 580, 581, 104, 483, 559,
	595, 550, 552, 547, 551, 549, 34, 596, 30, 95,
	597, 576, 206, 13, 187, 583, 584, 598, 599, 600,
	67, 553, 554, 649, 139, 101, 601, 602, 93, 604,
	605, 326, 558, 68, 603, 199, 589, 588, 587, 590,
	562, 563, 94, 555, 556, 557, 56, 593, 592, 594,
	-2, -6, -466, -150, -357, -344, -347, -292, -286, -288,
	-289, 228, -287, 216, -385, 83, -285, 213, -212, -106,
	201, 203, 558, -266, 206, -266, 240, 239, 272, -280,
	265, -266, -266, 737, 200, -279, 110, 110, -80, -150,
	-421, -416, -422, 200, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, 83, -290, -150, 188, -85, -150, -142,
	16, 16, 76, 76, 83, -290, 83, 433, 376, 35,
	-264, 118, 17, 549, 199, 200, 239, 240, 203, 272,
	-264, -351, 16, 120, 243, 243, 243, 243, 243, 244,
	243, -262, 526, 528, 529, 530, -261, 16, 120, 17,
	-124, 118, 24, -466, -230, -230, -261, 243, 136, -101,
	100, -101, 83, 452, 204, -115, 234, -114, -115, -179,
	-157, 29, 6, 7, 110, 35, 35, 82, 60, 35,
	-64, -63, -65, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 35, -400, 77, 188, -339,
	512, 83, -413, -414, -150, 85, 85, 75, 355, 75,
	78, 204, 78, 75, -447, 365, 77, -447, 333, 365,
	366, 267, 331, 203, -447, -447, 333, -447, -447, -447,
	352, -447, -447, 526, -447, -447, -447, 367, 368, -447,
	524, 203, -447, -447, -447, -447, -447, 80, 27, -445,
	-419, 364, 30, 429, 432, 539, 653, -56, 445, 446,
	-169, 27, -377, 144, 377, 378, 379, 380, 376, 355,
	381, 382, 383, 243, 384, 200, 526, 376, -6, -127,
	78, -234, -466, 78, -201, -466, 83, -332, -331, -328,
	-329, -330, -327, 34, 200, -265, 272, -145, -147, -146,
	-148, 65, 69, 71, 66, 67, 68, 527, 72, -275,
	29, -137, -466, -126, -9, -136, -131, -466, -155, 123,
	-165, -275, -156, 73, 205, 74, 29, -157, -158, -159,
	-160, -161, 6, 7, 55, -466, -466, -7, -8, 27,
	28, -15, -7, -13, -15, 27, 28, 27, 28, -7,
	-231, 24, 36, -180, 85, 88, -204, -213, -216, -123,
	-300, 59, -118, 27, 28, 66, 58, 64, 63, -227,
	90, -467, 16, -295, 100, 98, 99, 117, -294, 29,
	83, 82, -290, 188, -123, -171, 120, 101, 118, 119,
	103, 130, 129, 140, 133, 134, 135, 136, 137, 138,
	139, 131, 132, 143, 110, 111, 112, 113, 114, 115,
	116, -260, -466, -138, -466, 188, -466, 188, 189, 190,
	188, -177, -177, -177, -177, -177, -177, -177, 82, 82,
	82, -466, 188, 188, 188, -466, -466, -466, -466, -466,
	-196, -466, -123, 653, 200, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-207, -123, -466, -466, -470, -466, -470, -470, -190, -470,
	-466, -190, -190, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -190, -190, -190, -466, -259, -259,
	16, -142, -143, -150, -153, -300, 78, -249, -254, 537,
	539, 449, -253, -253, -299, -292, 82, 34, 144, -355,
	110, 121, 35, 188, -212, -466, 79, 78, -307, -311,
	-313, -312, -314, -309, -310, -70, 490, 488, 484, 483,
	486, 489, 144, 487, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 35, 227, 480, 481, 482,
	664, 504, 505, 506, 507, 508, 210, 509, 510, 511,
	458, 485, 651, 459, 460, 461, 462, 463, 464, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, -307, -307, -307, -307, -307, -291, -385, 83,
	-290, 77, -230, -268, -266, -266, -281, 209, -279, 83,
	101, 83, -149, -292, -300, -162, -266, 266, -425, -424,
	-416, -419, 677, -266, -280, -416, 271, 269, 270, 78,
	204, 78, 204, 80, -265, -292, -144, -150, 83, 83,
	-149, -162, -418, -416, -419, -163, -292, -300, -301, -300,
	-283, -288, -289, 678, 196, 27, 192, 195, 100, 29,
	31, 679, 254, 103, 464, 144, 579, 580, 581, 498,
	567, 21, 25, 215, 104, 198, 483, 486, 213, 143,
	208, 216, 311, 313, 559, 595, 191, 71, 680, 550,
	552, 547, 551, 312, 549, 524, 674, 671, 673, 672,
	477, 475, 310, 34, 681, 15, 596, 32, 225, 261,
	28, 682, 137, 473, 193, 606, 252, 107, 108, 683,
	47, 46, 8, 30, 314, 226, 95, 320, 597, 474,
	684, 685, 24, 74, 217, 16, 211, 242, 758, 686,
	335, 18, 576, 126, 19, 687, 668, 670, 669, 206,
	205, 120, 201, 750, 69, 259, 13, 688, 462, 467,
	468, 469, 470, 471, 463, 187, 97, 689, 690, 117,
	325, 65, 583, 584, 607, 51, 38, 247, 598, 599,
	704, 600, 565, 324, 691, 44, 43, 497, 501, 496,
	323, 513, 67, 118, 22, 553, 554, 36, 692, 693,
	649, 235, 500, 461, 495, 705, 694, 666, 139, 264,
	72, 101, 385, 601, 602, 93, 476, 762, 39, 75,
	230, 381, 352, 48, 98, 20, 260, 70, 40, 574,
	123, 763, 604, 479, 207, 239, 695, 539, 263, 696,
	124, 605, 472, 706, 219, 119, 454, 194, 326, 558,
	363, 308, 220, 330, 26, 337, 68, 697, 253, 125,
	603, 199, 525, 665, 11, 698, 569, 35, 224, 307,
	460, 209, 699, 265, 319, 309, 318, 700, 58, 701,
	344, 49, 589, 588, 587, 590, 760, 66, 562, 563,
	677, 200, 45, 106, 499, 459, 494, 204, 566, 240,
	94, 315, 9, 50, 37, 520, 14, 375, 73, 76,
	555, 556, 557, 56, 487, 484, 492, 593, 491, 592,
	594, 210, 761, 105, 17, 328, 575, 653, 540, 99,
	675, 521, 14, 193, 78, 82, -243, 83, -290, 82,
	-243, -242, -243, -242, 243, -264, 82, -304, -123, -266,
	-266, -150, -150, -150, -150, -150, -150, -264, -264, -264,
	-264, -261, 16, -261, -264, -300, -300, -123, -177, -416,
	551, 135, -264, -300, -102, -100, 218, -100, -102, 83,
	83, 452, -93, -4, -19, -17, -18, -115, -9, 39,
	29, 29, 83, -64, -64, 82, -64, 78, 110, -64,
	-179, 79, -196, -292, -398, 750, 78, -415, 29, 539,
	540, 513, -449, 200, 242, 239, 75, -449, -444, 372,
	-418, -417, -416, -447, -448, -292, -447, -447, -447, 526,
	-447, -447, -447, -447, -447, -447, -447, -447, -447, -422,
	75, 78, 355, 75, 16, 75, 204, -380, -382, 443,
	444, 540, 541, 456, 376, 376, 376, 376, 376, 376,
	-378, -142, 653, -378, -142, 204, 254, -135, 29, -233,
	-232, -293, -286, -287, -288, -289, 228, -292, -283, -473,
	-332, -329, -328, -330, 486, 534, 143, 546, -150, -416,
	-163, -133, -133, -131, -133, 65, 65, 65, 70, 65,
	70, 70, 65, 65, -146, -302, -275, 78, -467, -467,
	-467, -9, -466, -302, -165, -275, 201, 201, 201, 103,
	16, 53, 27, 103, 16, 53, 27, 103, 16, 53,
	27, -120, -119, -122, 135, -123, -300, -177, -244, 97,
	14, 120, 78, 23, 78, -229, 31, 32, 188, -178,
	60, 85, 88, -244, 78, -121, -150, -123, -123, -123,
	-194, 93, 101, 94, 95, -294, 228, 135, -301, -293,
	-288, -286, -287, 349, 232, -283, -177, -195, -201, -138,
	89, 120, 118, 119, 103, -177, -177, -177, -177, -177,
	-177, -177, -177, -177, -177, -177, -177, -177, -177, -177,
	-303, 83, 82, 144, 83, -293, -119, -293, -176, 227,
	480, 481, 93, -176, -292, -292, -108, 27, 28, -293,
	527, -292, -293, -108, -108, -108, -108, -108, 78, -467,
	-119, -119, -119, -467, -123, -123, -119, -177, -119, -204,
	82, -119, -204, 82, -119, -177, 565, 566, 567, -119,
	-119, -108, -205, -206, 105, -204, -286, -289, 349, 232,
	-119, -467, 85, -183, -184, 656, 665, 666, 668, 671,
	664, 663, 662, 660, 659, 658, 661, 657, 675, 674,
	673, 672, 670, 669, 667, -183, -183, -185, 227, 482,
	480, 481, -119, -120, -119, -119, -467, -467, -122, -119,
	-122, -119, -119, -122, -467, -467, -467, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -467,
	85, -152, 97, -150, -126, -150, -142, -468, 16, 76,
	-468, 78, 188, -252, -255, 78, 538, 540, 541, -249,
	-324, -325, 143, 75, 96, 82, -123, -293, -301, -230,
	-376, -344, -345, -346, -347, -369, 216, -384, 207, 209,
	211, 210, 50, -348, 217, 201, 51, -308, -334, 519,
	520, -316, 77, -315, 77, -70, 484, 483, 486, -315,
	484, 491, -315, 491, 491, -315, -315, -315, 484, 77,
	77, -316, -316, -316, -315, -336, 77, -336, 479, -337,
	77, -337, -337, -337, -337, -308, -308, -308, -308, -308,
	-385, -123, -231, -292, -150, 203, 737, -332, 30, -332,
	-71, 254, 222, 188, 77, -163, 257, 258, -420, 78,
	34, -426, 332, 85, 206, -150, 232, -150, -150, -416,
	-416, -422, -142, 75, 78, 78, 188, 716, 716, -150,
	78, 82, 83, 83, -179, -352, 16, 120, -264, -150,
	-179, -117, 228, 76, -470, -467, 454, 455, 83, -93,
	-177, 39, 39, -63, -176, -292, 79, -399, 205, 558,
	82, -414, -302, 512, 540, -450, 135, -292, -449, -450,
	-453, 653, 204, 79, 78, -447, -449, 335, 78, -449,
	-418, -416, -379, -381, 435, 437, 438, 436, 439, 440,
	441, 442, 78, 110, 110, 457, -383, 24, -378, 539,
	-378, 82, -177, -137, -467, 78, 188, -201, 35, -354,
	-355, -354, -354, -83, -391, -361, -81, -389, 123, 196,
	193, 192, 268, 198, -327, 559, 251, 250, 284, 285,
	74, 36, 197, 194, -73, -82, 231, 290, 236, 291,
	195, 230, 292, 229, 293, 653, 288, 757, 517, 609,
	610, 643, 91, 613, 248, 42, 201, 623, 616, 546,
	619, 620, 377, 618, 622, 212, 626, 625, 627, 629,
	630, 631, 341, 634, 635, 636, 249, 637, 638, 639,
	366, 644, 9, -427, -426, -433, 75, -140, -139, 75,
	76, -141, 75, -139, 65, 65, 65, -237, 77, -302,
	-131, -467, -239, -292, -165, -302, -466, -466, -466, -177,
	-177, 120, -177, -177, 120, -177, -177, 120, -467, 78,
	188, 78, -241, 41, 40, -292, 514, 726, 61, -180,
	-180, -216, -258, 24, 16, 56, 56, -128, 16, -227,
	-227, 93, 94, 95, 188, -466, -195, -177, -177, -177,
	-117, 100, -467, -467, -120, -119, -119, -119, -119, -119,
	-123, -467, -467, -467, 78, 76, 29, -467, 76, 120,
	-467, 16, 16, -467, 16, 16, -467, -467, 16, -177,
	-177, -177, -467, -467, -119, -208, -206, 107, -123, -467,
	-467, -467, -467, -467, 78, 78, 16, 78, -467, -467,
	-467, -467, -217, 574, -217, -467, -467, -467, -467, -467,
	-467, -217, -217, -217, -467, -467, -467, -467, -467, -467,
	-467, -467, -467, -467, -467, -467, -467, -238, 123, -150,
	35, -238, 76, -126, -126, -153, -300, 135, -254, -257,
	542, 539, 545, 83, 82, 144, 82, 188, -231, -360,
	-375, 78, -361, 757, 517, 609, -327, 610, 643, 91,
	613, 248, 42, 201, 623, 616, 546, 619, 620, 377,
	618, 622, 212, 626, 625, 627, 629, 630, 631, 341,
	634, 448, 635, 636, 249, 637, 638, 639, 366, 644,
	9, 653, 77, -353, -291, -384, 83, -285, 51, -348,
	-350, -348, -348, -348, -353, 83, -285, -353, 51, 719,
	93, 101, -323, -325, 144, -320, -321, -338, -341, -317,
	29, 758, 522, 219, -347, 486, 534, 34, 75, 517,
	207, 51, 50, 211, 91, -335, 521, 85, 85, 585,
	-315, 491, -315, -315, -315, -315, -315, -342, 82, -342,
	85, -336, 85, 79, -296, 76, -234, -150, 677, -72,
	13, 14, 15, -292, -401, -402, -403, -292, 120, 259,
	260, 75, -436, 363, -424, 333, 342, 100, 21, 653,
	-457, 101, 204, 204, -395, 220, 215, -150, -150, -416,
	-292, 75, 75, -243, -166, 17, 83, 83, -261, -264,
	-177, -419, 245, 246, -177, -177, -151, 97, -415, 204,
	188, 188, -450, 204, 354, -418, -292, -450, 352, 335,
	-450, -55, 205, 16, 78, 110, 110, 110, 110, 110,
	110, 110, 110, -382, 77, 77, 386, 36, -232, -293,
	-354, 83, 82, 144, 83, 82, 144, 82, -390, 78,
	-391, 196, 193, 284, 285, -389, 21, -276, -348, -397,
	-396, -346, -347, 123, 208, 216, 216, 213, -276, -348,
	207, 217, 123, 216, 213, -276, 201, -354, -276, 486,
	143, 204, 38, 38, 366, 123, 366, 123, -354, -276,
	208, -348, -273, 216, -274, 204, 29, 289, 123, 123,
	123, 123, 123, 123, 123, 123, 294, 677, -354, -354,
	-354, -354, -354, -354, -354, -354, 615, 615, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -358, -454, 82, -464, 91, 272, 341, 83, -285,
	-283, 85, 87, 86, -354, -354, -439, 653, -164, 194,
	278, 274, -123, 77, -123, -235, -292, -237, -467, 78,
	-165, -235, -235, -235, 100, 204, -466, 100, 204, -466,
	100, 204, -466, -275, -122, 135, -301, 82, 78, 82,
	82, 515, 62, -150, -166, 606, -126, -121, 135, -293,
	-120, -117, 100, -177, -467, -467, -467, -467, -467, -467,
	-306, 144, 483, 486, 227, 482, 475, 473, 472, 474,
	502, 488, 519, 480, 520, 664, -303, -306, -303, -177,
	-177, -177, -177, -177, -177, 16, 16, 16, 650, -212,
	109, -123, 106, -177, -177, -177, -177, -292, -222, -466,
	-217, -217, -217, -217, -217, -217, -218, -217, -218, -218,
	-218, -218, -218, -218, -218, -218, -218, -218, -218, -173,
	-174, 35, -172, -9, -466, -175, -474, 56, 60, -466,
	-246, -251, -204, -286, -289, 228, -166, -126, -166, -166,
	188, 539, 543, 544, -375, -354, -354, -354, 534, 486,
	143, -354, -354, -354, -354, -354, 615, 615, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, 449, -354, -354, -354, -354,
	-354, -354, -358, -454, -354, -354, 677, -371, -370, 83,
	-290, 207, 50, -384, -353, -353, -353, -353, -353, -103,
	-291, 93, -466, 759, 85, -150, 35, 83, 144, 82,
	-176, 134, -304, -168, -187, -466, 94, 95, 550, 551,
	555, 552, 556, 557, 570, 571, 572, 573, 547, 553,
	554, 14, 51, 51, 51, 82, 79, 79, 79, -315,
	79, 78, 79, 78, 79, 78, -170, 711, 712, 75,
	-292, 29, -234, 85, 75, 79, 78, -307, -292, -292,
	-292, 274, -439, 338, -437, -435, 344, 345, 346, 347,
	348, -419, 343, -426, 340, 82, 83, 82, 676, 710,
	731, 703, 30, -150, -416, -236, 77, -235, -236, -123,
	-179, -238, 200, -418, 135, 135, -292, 204, -418, 352,
	-452, 653, 16, 16, 352, 16, 387, -418, -381, 82,
	82, 82, 85, 85, 85, 85, 85, -142, -142, 82,
	83, 82, 144, -360, -81, 196, 193, 284, 285, -362,
	-363, -366, -365, 124, 624, 691, 77, -343, 83, -290,
	-266, -269, 209, 207, -466, 83, -291, -291, -291, -265,
	51, 51, -239, -291, -291, -292, -291, 34, 281, 282,
	283, 83, 35, -354, 486, -239, 27, -239, 27, 34,
	338, 286, 287, -343, -291, -292, -150, 217, 213, -291,
	-239, 27, 85, -239, -292, -239, 27, -239, 27, -239,
	27, -239, 27, 645, -358, -123, -358, -464, -464, 82,
	82, 82, -354, -354, -105, 646, 218, -464, 82, -105,
	-464, -454, 82, -104, 218, 221, 223, -358, -358, -358,
	-464, -464, -464, -464, 82, -359, 34, 617, 478, 612,
	633, 611, 83, 93, 82, 82, -464, 34, -464, 34,
	-464, -358, 640, -464, -466, -440, -438, 356, 357, 358,
	359, -432, 250, 251, 204, 279, 101, -429, 756, 275,
	-235, 79, 78, -155, -292, -467, -467, -467, -177, -177,
	-177, -177, -177, -177, -177, -177, -177, -302, 188, 529,
	-292, -322, -323, -209, 18, -227, -467, -177, -218, -218,
	-218, -218, -218, -467, -316, -316, -316, -316, -337, 479,
	-316, 463, -316, 463, -467, -467, -467, -467, 24, 24,
	24, 24, -467, -177, -177, -177, -466, -116, 569, -123,
	78, 78, -467, -467, -297, 83, -245, 75, -245, -246,
	-275, -9, -467, -233, -175, -466, 11, 56, 60, 653,
	200, -199, -202, -473, -239, -166, 78, -355, -355, -355,
	-355, -212, -166, -358, -358, -358, -354, 35, -354, -464,
	-464, 82, 82, 82, -354, -354, -105, -464, 82, -105,
	-464, -454, 82, -104, -358, -358, -358, -464, -464, -464,
	-464, 82, -359, 83, 93, 82, 82, -464, 34, -464,
	34, -464, -358, 640, -464, -466, 645, 79, 78, -316,
	-316, 51, -350, 77, -177, 29, 77, 83, 144, 82,
	-176, 82, -177, -193, 82, 85, 85, -150, -226, 29,
	-457, -150, -404, -405, -406, 91, 652, 101, 261, 262,
	218, 263, 264, 265, -403, -307, -307, -307, -429, -442,
	-443, -441, 341, 361, 362, 349, 100, 82, 82, 82,
	-428, 332, 100, 341, 21, 29, 21, 29, 82, 82,
	82, 82, 85, 76, -235, -264, -322, -150, -452, -418,
	-452, 335, -418, -418, 16, -418, 331, -55, 79, 79,
	-367, 632, -466, 529, 621, 51, -343, -214, 221, 222,
	-307, -307, -353, -350, 51, -386, -388, 123, -292, -291,
	711, 712, 711, 712, 35, 193, 749, 719, -343, -354,
	-303, 35, 366, 366, 366, 366, -214, -274, 204, 51,
	-291, 204, 366, 366, 97, 653, 82, 82, 614, 628,
	-455, -454, -438, 85, 85, 85, 85, -319, 91, 75,
	-163, 279, -433, 75, -182, -176, -187, -176, 79, -292,
	78, 78, 78, 135, -466, -407, -262, -210, 19, 21,
	-322, 83, -322, 83, -177, -177, -177, -177, -467, -467,
	-467, -177, -467, 82, -177, -177, -198, 123, -240, 26,
	33, -240, -245, -302, -467, -175, -466, -467, -467, 78,
	-201, -466, -467, -212, -251, -123, -123, -123, -123, -230,
	-303, -354, -326, -454, 82, 82, 82, 614, 628, -455,
	-373, -372, 76, 212, 91, 618, 636, 749, 719, -370,
	-229, -229, -353, -353, -235, -467, -466, -235, -467, 79,
	79, 77, -228, -226, 24, -227, -406, 82, 265, 261,
	265, 265, 265, 265, 266, -433, -423, 91, 339, -441,
	350, 717, 334, 363, 85, 85, 122, 36, 37, -435,
	21, 653, -426, 340, 82, 82, 340, 82, 82, 332,
	-457, 42, 79, -407, -451, 29, -452, -451, 352, -55,
	-55, -418, -55, -364, 641, 85, -177, -466, -466, -278,
	268, 79, 83, -308, -308, -296, -266, -353, -467, 78,
	-292, 34, 34, -214, -303, -303, -291, -292, -291, 204,
	-291, -466, 200, 78, -467, 329, 82, 368, -164, -434,
	-184, -177, -177, -177, -459, -460, -293, 724, -408, 44,
	-411, 45, -220, 575, -211, -123, -197, -125, -123, -467,
	-467, -467, -467, -113, 120, 653, -467, -467, -212, 21,
	-118, 51, -240, -237, -175, -9, -466, -202, -467, -230,
	-303, -467, -372, -454, -354, 82, -354, -354, 79, -333,
	761, 760, -177, 79, -371, -10, -9, -466, -228, 252,
	-228, 42, 42, 257, 258, -432, 82, 82, 34, 351,
	187, 34, 85, 187, 577, 340, 82, 83, 341, 341,
	21, -177, -408, -416, -451, -55, -387, -466, 21, -467,
	-235, -177, -466, 110, 77, -353, 77, -388, 56, -177,
	143, 143, 204, -291, -386, -150, -454, -226, -432, 133,
	-430, 276, -467, -467, -467, -467, 78, -307, 24, 82,
	608, -409, -410, -340, 48, 21, -219, -221, -292, 78,
	-467, 651, 72, 654, -223, 125, 124, -196, 14, -9,
	85, 82, 82, 219, -467, 79, -226, -9, -10, -10,
	253, -28, -4, -17, -18, -19, -20, -22, -74, -23,
	-24, -29, -30, -25, -84, -88, -89, -90, -86, -97,
	-95, -96, -92, -91, -33, -35, -36, -38, -41, -42,
	-39, -40, -37, -31, -34, -43, -26, -44, -45, -46,
	-51, -52, -32, -53, -47, 104, 206, 448, 310, 321,
	322, 323, 83, 326, 328, 324, 325, 320, 330, 447,
	-319, 85, 34, 85, 34, 353, 341, 29, 85, -318,
	205, 653, -386, -365, -467, -467, -235, 85, -371, -296,
	-371, 237, -354, -303, -291, -467, -73, 653, -28, -319,
	187, -431, 277, -182, -467, -460, -461, 608, 30, 730,
	529, 82, 49, 45, -412, 46, 47, 82, 78, 29,
	-125, 62, 652, 655, -467, -224, 103, -225, 122, 577,
	-181, 85, 187, -224, -246, -467, -150, -333, -374, -373,
	-282, 653, -467, -226, -215, 255, 256, -226, -123, -58,
	-59, 105, -123, 83, -68, -298, 313, 314, 315, -293,
	83, 83, -57, -28, 81, -57, -123, 83, 83, -469,
	16, 59, -177, 109, -57, 329, 660, 660, 82, -237,
	85, 333, -467, 621, 51, -467, 79, 77, 79, 238,
	-303, 289, -226, 329, -176, -182, -434, -275, 82, 608,
	-466, 529, 21, 21, 21, 21, -221, -222, 62, -225,
	127, 128, 253, 127, 128, -176, 77, 213, 280, 512,
	-282, -226, 83, 83, -58, 109, 107, -59, -123, 106,
	311, 312, 316, -307, 78, 764, 447, 323, 326, 328,
	764, 329, 83, 16, 764, -226, -247, 35, 44, 125,
	34, 338, 27, -419, -466, -278, -374, -371, -374, -466,
	-226, -184, -434, -302, -462, -463, 378, 93, 34, 82,
	-459, -466, 82, 82, 82, 82, 653, 100, -183, -235,
	352, 213, 213, -228, 109, 107, 104, -57, 106, -57,
	24, 24, 24, -322, -293, 109, -28, 109, -57, -57,
	-57, -123, 327, -57, 97, 109, -28, -246, 8, -177,
	-466, 79, -177, 235, -28, -463, 93, 34, -462, 93,
	34, 75, 75, -176, -467, -459, 654, -225, 79, 352,
	352, -21, -27, -20, -26, -17, -18, -19, 447, 653,
	104, -57, 764, -57, 764, -69, 85, -9, -67, -66,
	85, -69, 318, 101, 319, 83, -324, 323, 83, 764,
	764, 764, 329, -123, 764, -62, 83, -226, -419, -467,
	-177, -374, -467, -467, -226, 75, -176, 75, -176, 683,
	378, 683, 378, 75, -467, 655, -393, -394, 75, -226,
	-57, 109, -129, 764, 109, 764, 109, 107, -60, -61,
	108, -28, 78, 317, 34, 109, 109, 327, -57, 109,
	109, 78, -368, 642, -467, 75, 75, 378, 378, 683,
	378, -394, 75, -393, 75, 15, 14, 764, 109, 104,
	206, -57, 109, 107, -61, -123, -66, -177, 83, 323,
	-123, 764, 326, 328, 83, 85, -368, 75, 75, -392,
	220, 215, 218, 35, -392, 109, 104, 764, 206, -57,
	106, 83, 109, 109, 378, 683, 214, 34, 93, 109,
	764, -57, 326, 328, 206, 109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1733, 1231, 1733, 0, 1231, 0, 1231, 0, -2,
	138, 936, 937, 938, 939, 0, 1815, 0, 0, 0,
	0, 0, -2, 1193, 1194, 1197, 1194, 1194, 1223, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 738, 0, 67, 0, 1337, 2766,
	-2, 1227, 1228, 1229, -2, -2, 0, 56, 0, 63,
	2, 1741, 0, 1244, 1233, 1741, 0, 0, 0, 49,
	0, 0, 1231, 1231, 1231, 90, 91, 0, 124, 0,
	126, 0, 0, 1733, 1231, 0, 0, 0, 1819, 1819,
	340, 1819, 1819, 1834, 0, 1837, 338, 0, 1816, 1832,
	1833, 1835, 0, 0, 0, 0, 1817, 1817, 1817, 1817,
	1817, 1817, 1817, 1817, 1817, 0, 0, 1107, 1428, 1430,
	1431, 1432, 1433, 1846, 1847, 2757, 2758, 2759, 2760, 2761,
	2762, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2763, 2764, 2765, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 0,
	0, 0, 1112, 1113, 1114, 1115, 1116, 2751, 2752, 2753,
	2754, 2755, 2756, 1125, 1126, 0, 0, 0, 1184, 0,
	1184, 1144, 1145, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 1181, 1159, 1162, 1166, 0, 1741, 1741, 1181,
	1172, 0, 790, 791, 792, 1189, 1190, 1178, 1191, 1196,
	1195, 1204, 1204, 0, 1195, 1225, -2, 1225, 1365, 0,
	466, 468, 0, 489, 0, 492, 495, 1434, 0, -2,
	-2, 1857, 1210, 0, 0, 1883, 1884, 0, 0, 0,
	0, 0, 2623, 238, 354, 279, 279, 279, 279, 279,
	279, 279, 0, 279, 279, 0, 279, 279, 279, 2639,
	279, 0, 279, 279, 279, 279, 279, 237, 353, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 278, 343, 344,
	345, 0, 0, 0, 742, 1198, 747, 745, 0, 739,
	736, 737, 0, 83, 0, 70, 84, 1766, 1387, 1388,
	1389, 1334, 0, 1338, -2, 0, 1817, 0, 1822, 72,
	1324, 1325, 1326, -2, 0, 0, 1332, 1333, -2, 1484,
	1846, 0, 0, 1238, 0, 0, 1235, 1241, 0, 1748,
	0, 0, 122, 1232, 47, 48, 2767, 62, 0, 0,
	0, 1260, 1315, 0, 1443, 2319, 1449, -2, 2232, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 2177, 0, 0,
	0, 0, 0, 2274, 1522, 1523, 1524, 1525, 1526, 1527,
	2486, 2704, 2705, 1711, 1715, 1716, 1717, 1718, 1719, 1720,
	-2, -2, -2, 1694, 1695, 1709, 0, 2757, 2758, 2760,
	2761, 2762, 1784, 0, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 2300, 2364, 2251, 2369,
	2196, 2763, 2188, 2764, 2265, 2393, 2394, 2765, 2308, 2736,
	0, -2, 2418, 2356, -2, -2, -2, 1590, -2, -2,
	-2, 2747, 2748, 2733, 2738, 2258, 2206, 2316, 2357, 2197,
	2218, 2237, 2286, 2287, 2289, 2321, 2322, 2340, 2349, 2368,
	2178, 2179, 2180, 2281, 2282, 2390, 2389, 2388, 2391, 2424,
	2422, 2425, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2181, 2182, 2183, 2184, 2185, 2187, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2198, 2199, 2200, -2,
	2205, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2216,
	2217, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2233, 2234, 2236, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2252, 2253, 2254, 2255, 2256, 2257, 2259, 2260, 2261, 2262,
	2263, 2264, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2275, 2276, 2277, 2278, 2279, 2280, 2283, 2284, 2285, 2288,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2301, 2302, -2, -2, 2305, 2306, 2307, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2317, 2318, 2320, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2350, 2351, 2352, 2353, 2354, 2355, 2358, 2359, 2360,
	2361, 2362, 2363, 2365, 2366, 2367, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2392, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2419, 2420, 2421, 2423, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 0, 1821,
	1821, 0, 109, 2706, 0, 1791, -2, -2, 1793, 0,
	0, 0, -2, -2, -2, -2, 2189, -2, 1694, 0,
	0, 0, 0, 2177, 2178, 2179, 2180, 2186, 2188, 2196,
	2197, 2201, 2202, 2203, 2204, 2206, 2215, 2218, 2232, 2235,
	2237, 2251, 2258, 2265, 2274, 2281, 2282, 2286, 2287, 2289,
	2300, 2303, 2304, 2308, 2316, 2319, 2321, 2322, 2323, 2340,
	2349, 2356, 2357, 2364, 2368, 2369, 2388, 2389, 2390, 2391,
	2393, 2394, 2405, 2415, 2416, 2417, 2418, 2422, 2424, 2425,
	125, 1733, 0, 127, 0, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 816, 1840, 1841, 0, 1741, 1244,
	1819, 1819, 338, 0, 0, 0, 0, 0, 1819, 333,
	0, 0, 0, 0, 1819, 340, 0, 0, 1087, 0,
	1088, 0, 348, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1131, 1132, 1106, 0, 1108, 101, 1111,
	0, 0, 0, 0, 1129, 1130, 1133, 0, 1175, 1184,
	1135, 0, 0, 1819, 1819, 0, 0, 0, 0, 0,
	1143, 0, 818, 819, 1184, 1149, 1150, 1184, 1184, 1184,
	1181, 0, 1181, 1156, 1179, 1180, 1184, 0, 0, 0,
	1161, 0, 0, 0, 1169, 1170, 1184, 1174, 0, -2,
	1202, -2, 1211, 0, 0, 82, 1226, 1225, 0, 1230,
	1366, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	491, 472, 0, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 1365, 0, 0, 1852,
	1858, 1215, 1874, 1875, 0, 1885, 1886, 283, 0, 283,
	0, 0, 0, 0, 205, 279, 0, 207, 279, 279,
	279, 0, 279, 279, 214, 215, 279, 217, 218, 219,
	279, 221, 222, 279, 224, 225, 226, 279, 279, 229,
	279, 279, 232, 233, 234, 235, 236, 352, 0, 0,
	0, 2623, 1818, 0, 0, 0, 0, 743, 748, 749,
	744, 746, 715, 0, 0, 0, 0, 720, 721, 722,
	723, 0, 0, 726, 727, 732, 732, 0, 68, 69,
	0, 0, 0, 1337, 1335, 0, -2, 941, -2, 691,
	692, 693, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 1393, 0, 0, 0, 0, 0,
	1831, -2, 0, 0, 0, 0, 1322, 0, 1339, 0,
	1341, 0, -2, 0, 0, 0, 1831, 1345, 1346, 1347,
	1348, 1349, 0, 0, 0, 1486, 0, 60, 61, 1239,
	1240, 57, 65, 66, 58, 1236, 1237, 1242, 1243, 59,
	76, 0, 0, 1742, 1745, 1746, 1747, 1734, 1735, 1738,
	0, 0, 76, 1245, 1246, 1247, 1248, 1249, 1250, 0,
	1234, -2, 0, 1261, 0, 0, 0, 0, 1316, 0,
	1319, 1320, 1321, 0, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1450, 0, 1464, 0, 0, 0, 0, 0, 0,
	0, 1515, 1516, 1517, 1518, 1519, 1520, 0, 1712, 1713,
	1714, 1251, 0, 0, 0, 1251, 1251, 1251, 1251, 1251,
	0, 0, 1490, 2431, 2396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 1686, 0, 0, 1587, 0, 1588, 1589, 1591, 1605,
	0, 1592, 1593, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1600, 1601, 1602, 0, 0, 0,
	0, 0, 0, 101, 103, 1428, 0, 110, 112, 0,
	0, 2706, 1794, 1795, 682, 1809, 1810, 1811, 1812, 0,
	779, 780, 1807, 0, 1741, 0, 833, 0, 563, 661,
	581, 582, 583, 651, 585, 653, 0, 653, 653, 1683,
	1684, 653, 653, 653, 627, 628, 629, 630, 631, 633,
	634, 635, 636, 637, 0, 0, 609, 651, 651, 651,
	613, 640, 641, 642, 643, 644, 653, 646, 647, 648,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 656, 656, 658, 658, 658,
	658, 658, 563, 563, 563, 563, 563, 0, 815, 1042,
	1043, 0, 1748, 122, 0, 0, 0, 0, 340, -2,
	0, -2, 0, 1423, 0, 0, 0, 0, 151, 376,
	356, 136, 0, 0, 334, 339, 335, 336, 337, 0,
	0, 0, 0, 347, 0, 0, 1095, 99, 1096, 1097,
	1098, 1099, 1100, 349, 1101, 1102, 378, 0, 1429, 1848,
	1849, 1850, 1851, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 0, 0, 0, 1117, 1119, 1123, 1124, 1118,
	1120, 1127, 1121, 1128, 1173, 1134, 1185, 0, 1187, 0,
	0, 1365, 1139, 1140, 1141, 1142, 820, 1148, 1151, 1152,
	1158, 1184, 0, 1365, 1157, 1182, 1183, 1160, 1478, 1163,
	1603, 0, 1171, 1192, 1208, 0, 1203, 0, 1209, 1213,
	1212, 0, 1216, 1219, 1220, 1221, 1222, 82, 1218, 0,
	0, 0, 1224, 467, 469, 471, 490, 0, 0, 493,
	494, 496, 0, 1435, 1854, 0, 0, 1877, 0, 1879,
	1881, 0, 0, 284, 285, 286, 283, 0, 239, 0,
	301, 355, 0, 206, 0, 281, 208, 209, 210, 279,
	212, 213, 216, 220, 223, 227, 228, 230, 231, 351,
	283, 0, 0, 283, 0, 0, 0, 741, 760, 0,
	0, 1199, 1200, 0, 716, 717, 718, 719, 734, 725,
	728, 732, 0, 729, 732, 0, 0, 85, 0, 0,
	1768, 1771, 1772, 1773, 1774, 1775, 1776, 1844, 1845, 0,
	940, 694, 695, 696, 0, 777, 777, 777, 687, 361,
	388, 1383, 1385, 0, 1380, 1391, 1392, 1394, 0, 1396,
	0, 0, 1399, 1400, 1401, 1369, 0, 0, 1331, 1483,
	1485, 0, 0, 1437, 1343, 0, 0, 0, 0, 0,
	0, 0, 1359, 0, 0, 0, 1360, 0, 0, 0,
	1361, 0, 1487, 1488, 1256, 1257, 0, 0, 45, 0,
	1749, 0, 0, 0, 0, 1737, 1739, 1740, 0, 0,
	1722, 0, 0, 73, 122, 122, 53, 1444, 1445, 1446,
	1448, 1465, 0, 1467, 1469, 1317, 1318, 1262, 0, 1696,
	-2, 1698, 1699, -2, -2, -2, 1455, 1456, 1480, 1481,
	1482, 0, 0, 0, 0, 1478, 1460, 0, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1514, 1618, 1619, 1620, 0, 1707, 0, 1708, 1512, 0,
	0, 0, 1721, 1513, 1702, 1521, 1486, 1252, 1253, 1705,
	1706, 1703, 1704, 0, 0, 0, 0, 0, 0, 1783,
	0, 0, 0, 1562, 0, 0, 0, 0, 0, 1496,
	1711, 0, 1496, 1711, 0, 0, 2290, 2403, 2182, 0,
	0, 0, 1692, 1689, 0, 0, 0, 0, 2751, 2752,
	0, 1604, 0, 0, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 0, 0, 0, 1288, 1289,
	1290, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 105, 0, 1427, 0, -2, 0, 0, 97, 98,
	0, 0, 0, 1792, 0, 0, 0, 115, 116, 111,
	1796, 683, 0, -2, 1803, 1711, 1805, 1696, 0, 1748,
	-2, 548, 549, 550, 551, 0, 797, 806, 0, 0,
	795, 0, 797, 797, 0, 793, 794, 554, 664, 662,
	663, 584, 0, 614, 0, 653, 653, 1683, 1684, 616,
	653, 653, 619, 653, 653, 622, 625, 626, 632, 0,
	0, 610, 611, 612, 645, 601, 0, 602, 656, 604,
	0, 605, 606, 607, 608, 555, 556, 557, 558, 559,
	814, 0, 303, 1838, 1766, 0, 0, 131, 1820, 132,
	0, 399, 400, 0, 305, 0, 341, 342, 153, 0,
	0, 357, 0, 142, 0, 543, 544, 0, 1089, 0,
	1091, 346, 1103, 0, 0, 0, 0, 0, 0, 102,
	0, 1186, 1136, 1137, 1138, 1441, 0, 0, 1153, 1181,
	1184, 1176, 0, 0, 1164, 0, 1207, 1205, 1214, 1217,
	1362, 0, 0, 473, 474, 475, 497, 0, 1855, 1856,
	1853, 1876, 0, 1880, 1882, 0, 287, 289, 0, 0,
	195, 0, 0, 280, 0, 211, 0, 0, 0, 0,
	197, 0, 740, 750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1201, 724, 0, 730, 0,
	731, 713, 714, 86, 1767, 0, 0, 1336, 777, 0,
	778, 0, 0, 1050, 943, 944, 945, 1052, 0, -2,
	1048, 1048, 777, 1048, 0, 0, 0, 0, 0, 0,
	982, 777, 1048, 1826, 0, 995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1040, 1041, 777, 777, 777,
	777, 777, 777, 777, 777, 0, 0, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	0, 777, 777, 163, 362, 1085, 0, 1377, 1384, 0,
	0, 1378, 0, 1379, 1395, 1397, 1398, 1327, 0, 1369,
	1323, -2, 0, 1373, 1342, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 0, 77, 2499, 0, 80, 0, 1751, 0, 1743,
	1744, 1736, 0, 1813, 1814, 1723, 1724, 1441, 0, 0,
	1254, 1466, 1468, 1470, 0, 1486, 1457, 1478, 1461, 0,
	1458, 0, 1452, 1560, 0, 0, 0, 0, 0, 0,
	1491, 1558, 1559, 1561, 0, 0, 0, 1565, 0, 0,
	1569, 0, 0, 1611, 0, 0, 1612, 1574, 0, 0,
	0, 0, 0, 1580, 1733, 0, 1690, 0, 0, 1583,
	1584, 1585, 1586, 1606, 0, 0, 0, 0, 1607, 1608,
	1609, 1610, 1547, 0, 1548, 0, 0, 0, 0, 0,
	0, 1555, 1556, 1557, 1271, 1271, 1271, 1271, 1271, 1271,
	1271, 1271, 1271, 1271, 1271, 1271, 1599, 0, 0, 1426,
	0, 1441, 0, 1441, 1441, 104, 0, 1436, 113, 114,
	0, 0, 120, 684, 685, 686, 1804, 0, 304, 545,
	834, 687, 911, 777, 777, 777, 0, 777, 777, 777,
	777, 777, 0, 0, 777, 777, 777, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	777, 0, 777, 777, 777, 777, 777, 777, 0, 777,
	777, 0, 0, 0, 0, 805, -2, -2, 797, 797,
	797, 796, 797, 797, 788, 798, 799, 789, 812, 564,
	565, 0, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 0, 0, 0, 579, 0, 0, 0, 0, 673,
	0, 708, 710, 0, 0, 580, 665, 0, 0, 0,
	615, 653, 623, 617, 618, 620, 621, 0, 649, 0,
	0, 603, 0, 830, 0, 0, 0, 1766, 0, 0,
	401, 402, 403, 1424, 0, 306, 307, 0, 0, 0,
	0, 0, 163, 0, 377, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 1093, 1104, 1105, 1094, 100, 350,
	379, 0, 0, 1122, 1146, 0, 821, 822, 1365, 1155,
	1479, 1165, 1167, 1168, 1363, 1364, 105, 0, 1878, 0,
	0, 0, 0, 0, 0, 299, 282, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 0, 0, 733, 1769, 1770,
	0, 700, 701, 702, 703, 704, 705, 706, 910, 687,
	1051, 0, 0, 0, 0, 1053, 918, 0, 1819, 0,
	0, 952, 953, 0, 1049, 932, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 974, 975, 976, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 1827, 1828, 1829, 994, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 1034, 891, 892, 893, 894, 895, 907, 908,
	909, 896, 897, 898, 0, 0, 1044, 0, 391, 0,
	0, 0, 1381, 0, 1386, 0, 1371, 1328, -2, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1489, 1258, 0, 0, 0, 78,
	674, 1750, 1752, 46, 1725, 74, 75, 122, 1263, 1710,
	0, 1459, 0, 1462, 1528, 1271, 1271, 1271, 1271, 1271,
	0, 651, 651, 651, 1668, 651, 658, 1671, 1673, 1674,
	1675, 651, 1677, 651, 1680, 1682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	1582, 1693, 0, 0, 0, 0, 0, 1264, 1265, 1267,
	1549, 1550, 1551, 1552, 1553, 1554, 1532, 1272, 1533, 1534,
	1536, 1537, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1777,
	1777, 0, -2, 1758, 0, 1755, 1337, 1764, 1765, 0,
	1441, 1785, 0, 0, 0, 0, 1733, 1441, 95, 96,
	0, 117, 118, 119, 835, 0, 0, 0, 777, 0,
	777, 0, 0, 0, 0, 0, 777, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 0, 0, 0, 0,
	0, 0, 877, 878, 0, 0, 0, 0, 800, 651,
	651, 0, 795, 804, 781, 783, 784, 785, 787, 0,
	813, 566, 0, 0, 577, 0, 0, 679, 680, 681,
	666, 0, 0, 669, 670, 0, 1453, 1454, 1603, 1603,
	1603, 1603, 1603, 1603, 0, 0, 0, 0, 1603, 1603,
	1603, 0, 707, 709, 711, 712, 652, 654, 655, 624,
	638, 0, 639, 0, 659, 0, 817, 831, 832, 0,
	1839, 121, 0, 142, 0, 313, 0, 309, 0, 0,
	0, 0, 171, 154, 155, 156, 158, 159, 0, 0,
	0, 152, 0, 359, 0, 364, 365, 366, 0, 0,
	0, 0, 0, 1090, 1092, 0, 0, 1368, 1110, 1442,
	1184, 674, 0, 299, 288, 290, 291, 0, 299, 302,
	196, 0, 0, 0, 0, 0, 0, 197, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 0, 0, 735,
	697, 698, 699, 942, 946, -2, 1048, 0, 0, 924,
	913, 0, 0, 922, 923, 919, 0, 1045, 0, 0,
	797, 795, 1834, 0, 0, -2, 954, 955, 978, 0,
	980, 0, 1055, 0, 0, 0, 0, 960, 961, 962,
	963, 0, 777, 0, 0, 0, 0, 0, 0, 983,
	984, 985, 986, 1045, 0, 0, 990, 0, 0, 0,
	0, 0, 1062, 0, 0, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1039, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 0, 0, 1006, 887, 888, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 884, 885, 886, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 899, 900, 901, 902,
	903, 904, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 0, 1037, 0, 164, 165, 0, 0, 0,
	0, 395, 392, 393, 0, 389, 0, 388, 0, 0,
	0, 1370, 0, 1340, 1374, 1438, 1439, 1440, 1350, 1351,
	0, 1353, 1354, 0, 1356, 1357, 0, 1376, 0, 0,
	81, 1867, 675, 1730, 0, 1255, 1529, 1463, 1531, 1535,
	1530, 1538, 1543, 1563, 1663, 674, 674, 1669, 1670, 1672,
	1676, 1678, 1679, 1681, 1567, 1564, 1566, 1568, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 1596, 1597, 1269, 1268, 107, 0, 107, 1777,
	0, 0, 0, 0, 0, 0, -2, -2, -2, 2161,
	2125, 1762, 1779, 0, 0, 1733, 0, 0, 0, 0,
	0, 1741, 94, 836, 837, 838, 0, 777, 0, 841,
	842, 844, 845, 846, 0, 0, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 0, 881, 0, 883, 765, 0, 1738,
	1738, 797, 797, 0, 0, 0, 0, 676, 677, 678,
	667, 668, 0, 672, 650, 0, 0, 0, 123, 121,
	141, 0, 122, 314, 315, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 308, 310, 311, 312, 388, 189,
	172, 173, 0, 0, 0, 0, 0, 160, 161, 162,
	358, 0, 0, 363, 0, 0, 0, 0, 143, 144,
	0, 146, 142, 0, 0, 1154, 1867, 1425, 292, 299,
	292, 0, 197, 197, 0, 197, 198, 204, 762, 763,
	926, 0, 0, 0, 0, 920, 0, 948, 1046, 0,
	563, 563, 1838, 1819, 797, 0, 1077, 0, 979, 981,
	956, 958, 957, 959, 0, 0, 966, 967, 1045, 0,
	971, 0, 1056, 1057, 1058, 1059, 987, 0, 0, 0,
	0, 0, 1060, 1061, 0, 0, 1004, 1005, 1035, 1036,
	0, 905, 166, 167, 168, 169, 170, 1081, 0, 0,
	1086, 390, 1085, 0, 382, 397, 398, 0, 1382, 1372,
	0, 0, 0, 1259, 0, 1869, 1863, 1283, 0, 0,
	1664, 1665, 1666, 1667, 0, 0, 0, 0, 1576, 1577,
	1578, 1613, 1581, 1688, 0, 0, 1733, 0, 87, 122,
	0, 88, 107, 1369, -2, 1756, 0, 0, 1763, 1337,
	1781, 0, 106, 1741, 1786, 1787, 1788, 1789, 1790, 93,
	839, 0, 843, 889, 890, 847, 848, 879, 880, 0,
	764, 768, 0, 777, 0, 777, 777, 775, 776, 801,
	802, 803, 782, 786, 0, 560, 0, 0, 671, 657,
	660, 0, 0, 123, 0, 123, 316, 317, 318, 319,
	321, 322, 0, 0, 0, 391, 135, 0, 0, 174,
	0, 0, 0, 0, 184, 185, 186, 187, 188, 157,
	0, 0, 360, 0, 369, 371, 0, 370, 372, 0,
	140, 0, 1367, 1869, 192, 0, 292, 194, 300, 199,
	201, 197, 200, 1075, 0, 925, 0, 0, 0, 0,
	0, 947, 1047, 552, 553, 0, 797, 0, 1054, 0,
	0, 0, 965, 968, 969, 972, 988, 989, 0, 0,
	993, 0, 0, 0, 1038, 121, 396, 394, 391, 380,
	384, 0, 0, 0, 0, 1403, 0, 2591, 79, 1871,
	-2, 0, 71, 0, 1731, 1732, 1726, 1727, 1729, 1570,
	1572, 1571, 1573, 0, 0, 0, 1594, 1595, 1273, 0,
	108, 0, 89, 1754, 1757, 1759, 0, 1780, 1782, 92,
	840, 882, 769, 770, 0, 772, 0, 0, 0, 575,
	561, 562, 0, 578, 0, 121, 51, 0, 0, 0,
	82, 323, 324, 325, 326, 395, 190, 191, 175, 176,
	0, 178, 179, 0, 0, 0, 374, 0, 367, 368,
	0, 1109, 1823, 293, 193, 202, 912, 0, 918, 914,
	0, 0, 0, 0, 0, 1838, 0, 1078, 0, 964,
	777, 0, 0, 992, 0, 1064, 906, 82, 395, 0,
	386, 0, 1352, 1355, 1358, 0, 0, 0, 0, 0,
	0, 1870, 1865, 0, 1862, 0, 1284, 1285, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 1270, 0, 0,
	771, 773, 774, 0, 560, 766, 147, 0, 0, 121,
	404, 121, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 82, 0, 82, 0, 0, 0, 449, 0, 82,
	0, 0, 180, 0, 182, 183, 373, 0, 145, 1369,
	0, 0, 0, 0, 915, 916, 0, 921, 0, 0,
	0, 0, 0, 973, 991, 1063, 0, 1040, 121, 1082,
	0, 381, 0, 382, 1830, 1404, 1405, 0, 0, 1406,
	0, 0, 0, 0, 1868, 0, 0, 1864, 0, 0,
	1728, 1614, 0, 1617, 1266, 1274, 0, 1277, 0, 0,
	0, 1313, 0, 1275, 1778, -2, 0, 576, 128, 767,
	129, 0, 52, 147, 121, 0, 0, 134, 0, 0,
	419, 0, 0, 1840, 0, 0, -2, -2, -2, 1842,
	446, 447, 0, 498, 0, 0, 0, 463, 464, 0,
	450, 0, 465, 327, 0, 121, 177, 181, 375, 42,
	0, 0, 1076, 0, 920, 917, 766, 0, 766, 0,
	970, 1065, 1083, 121, 0, 382, 385, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 1286, 1287, 1615, 0,
	1278, 1279, 1280, 1281, 1282, 0, 0, 0, 0, 0,
	130, 123, 405, 406, 0, 0, 82, 420, 0, 82,
	0, 0, 0, 674, 0, 82, 82, 82, 82, 0,
	82, 82, 0, 451, 82, 82, 44, 0, 1824, 1825,
	294, 295, 296, 298, 0, 0, 949, 0, 951, 0,
	82, 383, 387, 1402, 1410, 1411, 0, 0, 0, 1418,
	0, 0, 1872, 1873, 1866, 1860, 0, 0, 1314, 0,
	148, 0, 0, 82, 0, 82, 417, 0, 82, 0,
	0, 0, 0, 682, 1843, 0, 499, 328, 0, 0,
	0, 0, 0, 0, 0, 330, 121, 43, 0, 0,
	0, 766, 0, 2309, 121, 1412, 0, 0, 1413, 0,
	0, 0, 0, 0, 1407, 0, 0, 1276, 807, 149,
	150, 121, 407, 408, 409, 410, 411, 412, 82, 0,
	415, 0, 82, 0, 82, 429, 430, 431, 82, 438,
	440, 441, 442, 0, 444, 445, 433, 454, 329, 82,
	82, 82, 82, 0, 82, 448, 452, 137, 297, 929,
	0, 950, 1079, 1080, 1084, 0, 0, 0, 0, 1414,
	1415, 1419, 1421, 0, 1408, 1616, 808, 809, 0, 133,
	0, 414, 83, 82, 0, -2, 0, 82, 0, 426,
	0, 432, 0, 443, 0, 331, 0, 0, 0, 0,
	0, 0, 927, 0, 929, 0, 0, 0, 0, 1420,
	1422, 810, 0, 811, 0, 0, 0, 82, 0, 418,
	422, 0, 0, 82, 427, 0, 439, 434, 332, 455,
	0, 82, 457, 460, 453, 930, 928, 0, 0, 823,
	825, 826, 0, 0, 824, 413, 416, 82, 424, 0,
	82, 456, 0, 0, 1416, 1417, 827, 828, 829, 0,
	82, 0, 458, 461, 423, 0, -2, 459, 462, 425,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			// Allow parenthesized SELECT statements in contexts that disallow INTO
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			// Unwrap parentheses recursively for CREATE VIEW MySQL compatibility
			// Issue: https://github.com/dolthub/dolt/issues/9738
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:723
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:750
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:763
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 71:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:831
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.val = TableExprs(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.val = TableExprs(nil)
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:870
		{
			yyVAL.val = (*Into)(nil)
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 79:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:882
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = (*With)(nil)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:901
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:917
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:929
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:955
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:981
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.val = InsertStr
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.val = ReplaceStr
		}
	case 92:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1027
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1045
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1068
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1081
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1094
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1148
		{
			yyVAL.val = Partitions(nil)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1152
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1157
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1178
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1223
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1228
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1233
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1238
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 128:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1272
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1301
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1322
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1343
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1361
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1379
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1403
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1425
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1457
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1472
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1506
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1518
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1531
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1545
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1567
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1577
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1596
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1600
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = []AccountName(nil)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1618
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1650
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1683
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1696
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1724
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1736
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1744
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1773
		{
			yyVAL.val = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1788
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1804
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1820
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1835
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1847
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1860
		{
			yyVAL.val = false
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.val = true
		}
	case 199:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1870
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1886
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1901
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1917
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 204:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1946
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2049
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2099
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2145
		{
			yyVAL.val = []string(nil)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2164
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2211
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2215
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 297:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.val = false
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.val = true
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = false
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = true
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2252
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2265
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2305
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2384
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2397
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 332:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2401
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2422
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = ""
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.val = ""
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2448
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2552
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2557
		{
			yyVAL.val = &Authentication{}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.val = yyDollar[1].val
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2567
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2571
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2587
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2591
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2599
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2603
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2609
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2627
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2647
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.val = EventStatus_Enable
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.val = EventStatus_Disable
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.val = BeforeStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.val = AfterStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.val = InsertStr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = UpdateStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.val = DeleteStr
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2752
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2777
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2787
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2791
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2795
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2799
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2815
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2821
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 423:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2826
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2831
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 425:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2837
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2865
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2869
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2873
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2877
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2884
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2912
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2944
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2956
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2961
		{
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2978
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2982
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2986
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2997
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3001
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3005
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 461:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3020
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 462:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3024
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3035
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3041
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3057
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3091
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3137
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.val = &Resignal{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3159
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3171
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3177
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3193
		{
			yyVAL.val = Exprs(nil)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.val = Exprs(nil)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3265
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3292
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3322
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3417
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3451
		{
			yyVAL.val = BoolVal(false)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.val = BoolVal(false)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			yyVAL.val = BoolVal(true)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3464
		{
			yyVAL.val = ColumnType{}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3468
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3472
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3504
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3526
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3570
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3581
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3592
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3615
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3657
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3725
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3753
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3767
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3877
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3906
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3969
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3986
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3998
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4004
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4012
		{
			yyVAL.val = BoolVal(false)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.val = BoolVal(false)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = BoolVal(false)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = BoolVal(true)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4053
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4065
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = BoolVal(true)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.val = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4118
		{
			yyVAL.val = ""
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4141
		{
			yyVAL.val = false
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.val = true
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4176
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4186
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4190
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4194
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4198
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4206
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4212
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4216
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4220
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4226
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = colKeyPrimary
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = colKey
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4240
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.val = colKeyUnique
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4270
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4288
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4292
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4336
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4349
		{
			yyVAL.val = false
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yyVAL.val = true
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4356
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			yyVAL.val = ""
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4371
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4381
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4420
		{
			yyVAL.val = false
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.val = true
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.bytes = nil
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4461
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4493
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4503
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4507
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4512
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.val = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.val = ":="
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4589
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4605
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4614
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.val = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4688
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4708
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4712
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4716
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4720
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4724
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.bytes = []byte(nil)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4743
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4753
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4768
		{
			yyVAL.val = ""
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4772
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4776
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4782
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.val = Restrict
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = Cascade
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = NoAction
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = SetDefault
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = SetNull
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = true
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = true
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.val = false
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4828
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4836
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4962
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4966
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4982
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4990
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5006
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5010
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5014
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5026
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5097
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5148
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5158
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5171
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5187
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5195
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5205
		{
			yyVAL.val = false
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = true
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5214
		{
			yyVAL.val = ""
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5233
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5242
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5246
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 928:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5255
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5266
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5270
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5275
		{
			yyVAL.val = ""
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
			yyVAL.val = ""
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5288
		{
			yyVAL.val = string("")
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5292
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5304
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5318
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5333
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5353
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5366
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5390
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5408
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5427
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5446
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5472
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5508
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5559
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5569
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5579
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5589
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5599
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5619
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5629
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5639
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5654
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5670
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5680
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5690
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5706
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5720
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5734
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5748
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5762
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5776
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5789
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5802
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5812
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5822
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5834
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5850
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5864
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5881
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5911
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5921
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5931
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5951
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5964
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 991:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5993
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6014
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6035
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6054
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6076
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6080
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6088
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6092
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6096
		{
			yyVAL.val = &DDL{Action: AlterStr, AlterCommentSpec: &AlterCommentSpec{Comment: string(yyDollar[3].bytes)}}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6108
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6112
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6116
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6120
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6124
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6128
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6132
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6136
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6140
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6144
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6148
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6152
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6156
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6160
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6164
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6168
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6172
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6176
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6180
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6184
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6188
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6192
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6196
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6200
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6204
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6216
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6224
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6228
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6232
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6236
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6240
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6244
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6248
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.val = true
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.val = false
		}
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6268
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6294
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6298
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6302
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6307
		{
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6312
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6322
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6326
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6332
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6340
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6344
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6348
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6352
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6356
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6360
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6368
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6372
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6376
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6397
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6401
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6405
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6409
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6413
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6417
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6421
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6426
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6430
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6440
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6446
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6450
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1081:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6456
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6486
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6512
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6540
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6570
		{
			yyVAL.val = EventName{}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6574
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6580
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6584
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6620
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6636
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6640
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6646
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6671
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6696
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6714
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6731
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6748
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6768
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6788
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6803
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6818
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6837
		{

		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6841
		{
			yyVAL.val = Restrict
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6845
		{
			yyVAL.val = Cascade
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6851
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6864
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6879
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6893
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6906
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6910
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6914
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6918
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6935
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6939
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6945
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6949
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6953
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6957
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6963
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6967
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6971
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6975
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6981
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6992
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7014
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7026
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7038
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7051
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7064
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7075
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7086
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7097
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7108
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7118
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7128
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7141
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7151
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7162
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7172
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7182
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7193
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7205
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7217
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7231
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7244
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7255
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7269
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7281
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7291
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7302
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7315
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7325
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7337
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7348
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7361
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7370
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7392
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7403
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7414
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7428
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7438
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7448
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7458
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7470
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7476
		{
			yyVAL.val = false
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7480
		{
			yyVAL.val = true
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7486
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7490
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7496
		{
			yyVAL.val = ""
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7500
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7504
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7510
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7514
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7518
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7522
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			yyVAL.val = ""
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7532
		{
			yyVAL.val = SessionStr
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7536
		{
			yyVAL.val = GlobalStr
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7542
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7554
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7567
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7579
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7583
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7589
		{
			yyVAL.val = &Begin{}
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7593
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7599
		{
			yyVAL.val = &Begin{}
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7603
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7607
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7611
		{
			yyVAL.val = &Begin{}
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7616
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7620
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7625
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7629
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7634
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7638
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7644
		{
			yyVAL.val = &Commit{}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7650
		{
			yyVAL.val = &Rollback{}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7656
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7662
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7666
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7670
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7680
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7686
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7690
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7694
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7700
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7708
		{
			yyVAL.val = ""
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7712
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7717
		{
			yyVAL.val = false
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7721
		{
			yyVAL.val = true
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7733
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7753
		{
			setAllowComments(yylex, true)
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7757
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7765
		{
			yyVAL.val = Comments(nil)
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7769
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7775
		{
			yyVAL.val = UnionStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7779
		{
			yyVAL.val = UnionAllStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7783
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7789
		{
			yyVAL.val = IntersectStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7793
		{
			yyVAL.val = IntersectAllStr
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7797
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7803
		{
			yyVAL.val = ExceptStr
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7807
		{
			yyVAL.val = ExceptAllStr
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7811
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7816
		{
			yyVAL.val = QueryOpts{}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7820
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7831
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7842
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7853
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7864
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7875
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7887
		{
			yyVAL.val = ""
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7891
		{
			yyVAL.val = AllStr
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7895
		{
			yyVAL.val = DistinctStr
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7901
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7909
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7920
		{
			yyVAL.val = &StarExpr{}
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7924
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7928
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7932
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7938
		{
			yyVAL.val = &StarExpr{}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7942
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7946
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7950
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7956
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7960
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7966
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7971
		{
			yyVAL.val = ColIdent{}
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7974
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7979
		{
			yyVAL.val = Exprs(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7983
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7992
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7997
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8001
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8005
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8012
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8035
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8050
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8054
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8058
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8062
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8069
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8077
		{
			yyVAL.val = Window(nil)
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8086
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8089
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8095
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8135
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8144
		{
			yyVAL.val = ColIdent{}
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8148
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8152
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8156
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8162
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8166
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8170
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8176
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8180
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8190
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8194
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8209
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8224
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8230
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8236
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8244
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8250
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8254
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8259
		{
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8261
		{
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8275
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8290
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8294
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8302
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8308
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8312
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8316
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8324
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8330
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8334
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8338
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8344
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8348
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8352
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8356
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8360
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8364
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8370
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8376
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8380
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8386
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8390
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8394
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = Expr(nil)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8403
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8409
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8413
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8418
		{
			yyVAL.val = Columns(nil)
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8422
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8428
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8432
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8438
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8442
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8448
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8452
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8466
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8470
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8474
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8478
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8484
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8490
		{
			yyVAL.val = JoinCondition{}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8492
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8496
		{
			yyVAL.val = JoinCondition{}
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8498
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8507
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8513
		{
			yyVAL.val = JoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8517
		{
			yyVAL.val = JoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8521
		{
			yyVAL.val = JoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8527
		{
			yyVAL.val = StraightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8533
		{
			yyVAL.val = LeftJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8537
		{
			yyVAL.val = LeftJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8541
		{
			yyVAL.val = RightJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8545
		{
			yyVAL.val = RightJoinStr
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8549
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8553
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8559
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8563
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1402:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8573
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8580
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8585
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8591
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8595
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8599
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8604
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8627
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8631
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8635
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8639
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8643
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8647
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = &NullVal{}
		}
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8657
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8663
		{
			yyVAL.val = &NullVal{}
		}
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8667
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8673
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8677
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8683
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8689
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8693
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8699
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8703
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8707
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8711
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8715
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8735
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8752
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8757
		{
			yyVAL.val = Expr(nil)
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8761
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8767
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8771
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8775
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8779
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8783
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8791
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8795
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8801
		{
			yyVAL.val = ""
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8805
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8811
		{
			yyVAL.val = BoolVal(true)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8815
		{
			yyVAL.val = BoolVal(false)
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8821
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8825
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8829
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8833
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8837
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8841
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8845
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8849
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8853
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8857
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = IsNullStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8867
		{
			yyVAL.val = IsNotNullStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8871
		{
			yyVAL.val = IsTrueStr
		}
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8875
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8879
		{
			yyVAL.val = IsFalseStr
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8883
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8889
		{
			yyVAL.val = EqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8893
		{
			yyVAL.val = LessThanStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8897
		{
			yyVAL.val = GreaterThanStr
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = LessEqualStr
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8905
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8909
		{
			yyVAL.val = NotEqualStr
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8913
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8918
		{
			yyVAL.val = Expr(nil)
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8922
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8928
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8932
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8942
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8948
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8952
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8964
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8968
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8974
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8984
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8988
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8992
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8996
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9000
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9004
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9012
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9016
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9020
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9024
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9028
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9032
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9036
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9048
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9052
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9056
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9060
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9064
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9076
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9080
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9084
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9092
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9106
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9110
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9114
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9148
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9152
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9156
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9160
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9164
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9168
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9172
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9176
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9180
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9184
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9188
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9192
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9196
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9221
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9225
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9229
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9233
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9237
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9241
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9245
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9249
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9253
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9257
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9261
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9272
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9276
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9280
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9284
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9288
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9292
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9296
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9300
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9304
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1567:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9308
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9312
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9316
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9320
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9324
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9328
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9332
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9336
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9340
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1576:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9344
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9348
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1578:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9352
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1579:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9356
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9360
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1581:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9364
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9368
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9372
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9376
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9381
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9385
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9409
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9413
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9417
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9421
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9425
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9429
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9433
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9437
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9445
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9461
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9474
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9478
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9488
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9492
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9496
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9500
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9504
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9508
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9514
		{
			yyVAL.val = ""
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9518
		{
			yyVAL.val = BooleanModeStr
		}
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9522
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1616:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9526
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9530
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9536
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9540
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9544
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9550
		{
			yyVAL.val = Armscii8Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9554
		{
			yyVAL.val = AsciiStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9558
		{
			yyVAL.val = Big5Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9562
		{
			yyVAL.val = UBinaryStr
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9566
		{
			yyVAL.val = Cp1250Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9570
		{
			yyVAL.val = Cp1251Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9574
		{
			yyVAL.val = Cp1256Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9578
		{
			yyVAL.val = Cp1257Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9582
		{
			yyVAL.val = Cp850Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9586
		{
			yyVAL.val = Cp852Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9590
		{
			yyVAL.val = Cp866Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9594
		{
			yyVAL.val = Cp932Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9598
		{
			yyVAL.val = Dec8Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9602
		{
			yyVAL.val = EucjpmsStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9606
		{
			yyVAL.val = EuckrStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9610
		{
			yyVAL.val = Gb18030Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9614
		{
			yyVAL.val = Gb2312Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9618
		{
			yyVAL.val = GbkStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9622
		{
			yyVAL.val = Geostd8Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9626
		{
			yyVAL.val = GreekStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9630
		{
			yyVAL.val = HebrewStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9634
		{
			yyVAL.val = Hp8Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9638
		{
			yyVAL.val = Keybcs2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9642
		{
			yyVAL.val = Koi8rStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9646
		{
			yyVAL.val = Koi8uStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9650
		{
			yyVAL.val = Latin1Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9654
		{
			yyVAL.val = Latin2Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9658
		{
			yyVAL.val = Latin5Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9662
		{
			yyVAL.val = Latin7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9666
		{
			yyVAL.val = MacceStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9670
		{
			yyVAL.val = MacromanStr
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9674
		{
			yyVAL.val = SjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9678
		{
			yyVAL.val = Swe7Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9682
		{
			yyVAL.val = Tis620Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9686
		{
			yyVAL.val = Ucs2Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9690
		{
			yyVAL.val = UjisStr
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = Utf16Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = Utf16leStr
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = Utf32Str
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9710
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9714
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9720
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9724
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9728
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9732
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9744
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9748
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9755
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9759
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9763
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9767
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9771
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9775
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9779
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9783
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9787
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9791
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9795
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9799
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9805
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9809
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9814
		{
			yyVAL.val = Expr(nil)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9818
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9833
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9837
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9843
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = Expr(nil)
		}
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9858
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9862
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9866
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9870
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9874
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9878
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9906
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9910
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9914
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9918
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9922
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9928
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9944
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9948
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9952
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9964
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9968
		{
			yyVAL.val = &NullVal{}
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9974
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9987
		{
			yyVAL.val = Exprs(nil)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9997
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10001
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10007
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10012
		{
			yyVAL.val = Expr(nil)
		}
	case 1731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10037
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10041
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10047
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10052
		{
			yyVAL.val = AscScr
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = AscScr
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10060
		{
			yyVAL.val = DescScr
		}
	case 1741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10065
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10069
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10073
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10077
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10083
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10087
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10096
		{
			yyVAL.val = ""
		}
	case 1749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = ForUpdateStr
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10104
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10108
		{
			yyVAL.val = ForUpdateNowaitStr
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10112
		{
			yyVAL.val = ShareModeStr
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10118
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10122
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10142
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10146
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10151
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10158
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10162
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10166
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1761:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10171
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10178
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10182
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10191
		{
			yyVAL.val = Columns(nil)
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10195
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10201
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10205
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10211
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10215
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10219
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10223
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10227
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10231
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10240
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10244
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10250
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10254
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10260
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10264
		{
			yyVAL.val = ValTuple{}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10270
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10276
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10286
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10296
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10303
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10307
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10323
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10334
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10347
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10360
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10366
		{
			yyVAL.val = SetScope_Global
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10370
		{
			yyVAL.val = SetScope_Session
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = SetScope_Session
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10380
		{
			yyVAL.val = SetScope_Persist
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10384
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10390
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10398
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10415
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10422
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = &Default{}
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10443
		{
			yyVAL.val = 0
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = 1
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10448
		{
			yyVAL.val = 0
		}
	case 1818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10450
		{
			yyVAL.val = 1
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = 0
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10455
		{
			yyVAL.val = 1
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = ""
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = IgnoreStr
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10463
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10465
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10467
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10472
		{
			yyVAL.val = struct{}{}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10476
		{
			yyVAL.val = struct{}{}
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = struct{}{}
		}
	case 1830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10481
		{
			yyVAL.val = struct{}{}
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10483
		{
			yyVAL.val = struct{}{}
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10487
		{
			yyVAL.val = UniqueStr
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10489
		{
			yyVAL.val = FulltextStr
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10491
		{
			yyVAL.val = SpatialStr
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = VectorStr
		}
	case 1836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10496
		{
			yyVAL.val = ""
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10498
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10501
		{
			yyVAL.val = ColIdent{}
		}
	case 1839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10507
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10517
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10528
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10534
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10538
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10549
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10553
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10558
		{
			yyVAL.val = string("")
		}
	case 1853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10560
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10563
		{
			yyVAL.val = string("")
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10565
		{
			yyVAL.val = IgnoreStr
		}
	case 1856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10567
		{
			yyVAL.val = ReplaceStr
		}
	case 1857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10570
		{
			yyVAL.val = BoolVal(false)
		}
	case 1858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10572
		{
			yyVAL.val = BoolVal(true)
		}
	case 1859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10575
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10579
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10584
		{
			yyVAL.val = BoolVal(false)
		}
	case 1862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10588
		{
			yyVAL.val = BoolVal(true)
		}
	case 1863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10593
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10597
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10602
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10606
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10614
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10618
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10623
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10627
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10632
		{
			yyVAL.val = &Lines{}
		}
	case 1872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10636
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10645
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10656
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10662
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10666
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10672
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10687
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10705
		{
			yyVAL.val = LockRead
		}
	case 1880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10709
		{
			yyVAL.val = LockReadLocal
		}
	case 1881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10713
		{
			yyVAL.val = LockWrite
		}
	case 1882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10717
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10723
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10729
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10740
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10750
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11681
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11690
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
