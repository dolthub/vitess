// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const UNKNOWN = 57709
const APPLICATION_PASSWORD_ADMIN = 57710
const AUDIT_ABORT_EXEMPT = 57711
const AUDIT_ADMIN = 57712
const AUTHENTICATION_POLICY_ADMIN = 57713
const BACKUP_ADMIN = 57714
const BINLOG_ADMIN = 57715
const BINLOG_ENCRYPTION_ADMIN = 57716
const CLONE_ADMIN = 57717
const CONNECTION_ADMIN = 57718
const ENCRYPTION_KEY_ADMIN = 57719
const FIREWALL_ADMIN = 57720
const FIREWALL_EXEMPT = 57721
const FIREWALL_USER = 57722
const FLUSH_OPTIMIZER_COSTS = 57723
const FLUSH_STATUS = 57724
const FLUSH_TABLES = 57725
const FLUSH_USER_RESOURCES = 57726
const GROUP_REPLICATION_ADMIN = 57727
const GROUP_REPLICATION_STREAM = 57728
const INNODB_REDO_LOG_ARCHIVE = 57729
const INNODB_REDO_LOG_ENABLE = 57730
const NDB_STORED_USER = 57731
const PASSWORDLESS_USER_ADMIN = 57732
const PERSIST_RO_VARIABLES_ADMIN = 57733
const REPLICATION_APPLIER = 57734
const REPLICATION_SLAVE_ADMIN = 57735
const RESOURCE_GROUP_ADMIN = 57736
const RESOURCE_GROUP_USER = 57737
const ROLE_ADMIN = 57738
const SENSITIVE_VARIABLES_OBSERVER = 57739
const SESSION_VARIABLES_ADMIN = 57740
const SET_USER_ID = 57741
const SHOW_ROUTINE = 57742
const SKIP_QUERY_REWRITE = 57743
const SYSTEM_VARIABLES_ADMIN = 57744
const TABLE_ENCRYPTION_ADMIN = 57745
const TP_CONNECTION_ADMIN = 57746
const VERSION_TOKEN_ADMIN = 57747
const XA_RECOVER_ADMIN = 57748
const REPLICA = 57749
const REPLICAS = 57750
const SOURCE = 57751
const STOP = 57752
const RESET = 57753
const FILTER = 57754
const LOG = 57755
const MASTER = 57756
const SOURCE_HOST = 57757
const SOURCE_SSL = 57758
const SOURCE_USER = 57759
const SOURCE_PASSWORD = 57760
const SOURCE_PORT = 57761
const SOURCE_CONNECT_RETRY = 57762
const SOURCE_RETRY_COUNT = 57763
const SOURCE_AUTO_POSITION = 57764
const REPLICATE_DO_TABLE = 57765
const REPLICATE_IGNORE_TABLE = 57766
const IO_THREAD = 57767
const SQL_THREAD = 57768
const BEGIN = 57769
const START = 57770
const TRANSACTION = 57771
const COMMIT = 57772
const ROLLBACK = 57773
const SAVEPOINT = 57774
const WORK = 57775
const RELEASE = 57776
const CHAIN = 57777
const CONSISTENT = 57778
const SNAPSHOT = 57779
const BIT = 57780
const TINYINT = 57781
const SMALLINT = 57782
const MEDIUMINT = 57783
const INT = 57784
const INTEGER = 57785
const BIGINT = 57786
const INTNUM = 57787
const SERIAL = 57788
const INT1 = 57789
const INT2 = 57790
const INT3 = 57791
const INT4 = 57792
const INT8 = 57793
const REAL = 57794
const DOUBLE = 57795
const FLOAT_TYPE = 57796
const DECIMAL = 57797
const NUMERIC = 57798
const DEC = 57799
const FIXED = 57800
const PRECISION = 57801
const TIME = 57802
const TIMESTAMP = 57803
const DATETIME = 57804
const CHAR = 57805
const VARCHAR = 57806
const BOOL = 57807
const CHARACTER = 57808
const VARBINARY = 57809
const NCHAR = 57810
const NVARCHAR = 57811
const NATIONAL = 57812
const VARYING = 57813
const VARCHARACTER = 57814
const TEXT = 57815
const TINYTEXT = 57816
const MEDIUMTEXT = 57817
const LONGTEXT = 57818
const LONG = 57819
const BLOB = 57820
const TINYBLOB = 57821
const MEDIUMBLOB = 57822
const LONGBLOB = 57823
const JSON = 57824
const ENUM = 57825
const GEOMETRY = 57826
const POINT = 57827
const LINESTRING = 57828
const POLYGON = 57829
const GEOMETRYCOLLECTION = 57830
const MULTIPOINT = 57831
const MULTILINESTRING = 57832
const MULTIPOLYGON = 57833
const LOCAL = 57834
const LOW_PRIORITY = 57835
const SKIP = 57836
const LOCKED = 57837
const NULLX = 57838
const AUTO_INCREMENT = 57839
const APPROXNUM = 57840
const SIGNED = 57841
const UNSIGNED = 57842
const ZEROFILL = 57843
const SRID = 57844
const COLLATION = 57845
const DATABASES = 57846
const SCHEMAS = 57847
const TABLES = 57848
const FULL = 57849
const PROCESSLIST = 57850
const COLUMNS = 57851
const FIELDS = 57852
const ENGINES = 57853
const PLUGINS = 57854
const NAMES = 57855
const CHARSET = 57856
const GLOBAL = 57857
const SESSION = 57858
const ISOLATION = 57859
const LEVEL = 57860
const READ = 57861
const WRITE = 57862
const ONLY = 57863
const REPEATABLE = 57864
const COMMITTED = 57865
const UNCOMMITTED = 57866
const SERIALIZABLE = 57867
const ENCRYPTION = 57868
const CURRENT_TIMESTAMP = 57869
const NOW = 57870
const DATABASE = 57871
const CURRENT_DATE = 57872
const CURRENT_USER = 57873
const CURRENT_TIME = 57874
const LOCALTIME = 57875
const LOCALTIMESTAMP = 57876
const UTC_DATE = 57877
const UTC_TIME = 57878
const UTC_TIMESTAMP = 57879
const REPLACE = 57880
const CONVERT = 57881
const CAST = 57882
const POSITION = 57883
const SUBSTR = 57884
const SUBSTRING = 57885
const TRIM = 57886
const LEADING = 57887
const TRAILING = 57888
const BOTH = 57889
const GROUP_CONCAT = 57890
const SEPARATOR = 57891
const TIMESTAMPADD = 57892
const TIMESTAMPDIFF = 57893
const EXTRACT = 57894
const GET_FORMAT = 57895
const OVER = 57896
const WINDOW = 57897
const GROUPING = 57898
const CURRENT = 57899
const AVG = 57900
const BIT_AND = 57901
const BIT_OR = 57902
const BIT_XOR = 57903
const COUNT = 57904
const JSON_ARRAYAGG = 57905
const JSON_OBJECTAGG = 57906
const MAX = 57907
const MIN = 57908
const STDDEV_POP = 57909
const STDDEV = 57910
const STD = 57911
const STDDEV_SAMP = 57912
const SUM = 57913
const VAR_POP = 57914
const VARIANCE = 57915
const VAR_SAMP = 57916
const CUME_DIST = 57917
const DENSE_RANK = 57918
const FIRST_VALUE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LEAD = 57922
const NTH_VALUE = 57923
const NTILE = 57924
const ROW_NUMBER = 57925
const PERCENT_RANK = 57926
const RANK = 57927
const DUAL = 57928
const JSON_TABLE = 57929
const PATH = 57930
const AVG_ROW_LENGTH = 57931
const CHECKSUM = 57932
const COMPACT = 57933
const COMPRESSED = 57934
const COMPRESSION = 57935
const DISK = 57936
const DIRECTORY = 57937
const DELAY_KEY_WRITE = 57938
const DYNAMIC = 57939
const ENGINE_ATTRIBUTE = 57940
const ENCRYPTED = 57941
const ENCRYPTION_KEY_ID = 57942
const HASH = 57943
const INSERT_METHOD = 57944
const ITEF_QUOTES = 57945
const LIST = 57946
const MIN_ROWS = 57947
const MAX_ROWS = 57948
const PACK_KEYS = 57949
const MEMORY = 57950
const PAGE_CHECKSUM = 57951
const PAGE_COMPRESSED = 57952
const PAGE_COMPRESSION_LEVEL = 57953
const PARTITIONS = 57954
const REDUNDANT = 57955
const ROW_FORMAT = 57956
const SECONDARY_ENGINE = 57957
const SECONDARY_ENGINE_ATTRIBUTE = 57958
const STATS_AUTO_RECALC = 57959
const STATS_PERSISTENT = 57960
const STATS_SAMPLE_PAGES = 57961
const STORAGE = 57962
const SUBPARTITION = 57963
const SUBPARTITIONS = 57964
const TABLE_CHECKSUM = 57965
const TRANSACTIONAL = 57966
const VERSIONING = 57967
const YES = 57968
const PREPARE = 57969
const DEALLOCATE = 57970
const MATCH = 57971
const AGAINST = 57972
const BOOLEAN = 57973
const LANGUAGE = 57974
const WITH = 57975
const QUERY = 57976
const EXPANSION = 57977
const MICROSECOND = 57978
const SECOND = 57979
const MINUTE = 57980
const HOUR = 57981
const DAY = 57982
const WEEK = 57983
const MONTH = 57984
const QUARTER = 57985
const YEAR = 57986
const SECOND_MICROSECOND = 57987
const MINUTE_MICROSECOND = 57988
const MINUTE_SECOND = 57989
const HOUR_MICROSECOND = 57990
const HOUR_SECOND = 57991
const HOUR_MINUTE = 57992
const DAY_MICROSECOND = 57993
const DAY_SECOND = 57994
const DAY_MINUTE = 57995
const DAY_HOUR = 57996
const YEAR_MONTH = 57997
const NAME = 57998
const SYSTEM = 57999
const ACCESSIBLE = 58000
const ASENSITIVE = 58001
const CUBE = 58002
const DELAYED = 58003
const DISTINCTROW = 58004
const EMPTY = 58005
const FLOAT4 = 58006
const FLOAT8 = 58007
const GET = 58008
const HIGH_PRIORITY = 58009
const INSENSITIVE = 58010
const IO_AFTER_GTIDS = 58011
const IO_BEFORE_GTIDS = 58012
const LINEAR = 58013
const MASTER_BIND = 58014
const MASTER_SSL_VERIFY_SERVER_CERT = 58015
const MIDDLEINT = 58016
const PURGE = 58017
const READ_WRITE = 58018
const RLIKE = 58019
const SENSITIVE = 58020
const SPECIFIC = 58021
const SQL_BIG_RESULT = 58022
const SQL_SMALL_RESULT = 58023
const UNUSED = 58024
const DESCRIPTION = 58025
const LATERAL = 58026
const MEMBER = 58027
const RECURSIVE = 58028
const BUCKETS = 58029
const CLONE = 58030
const COMPONENT = 58031
const DEFINITION = 58032
const ENFORCED = 58033
const NOT_ENFORCED = 58034
const EXCLUDE = 58035
const GEOMCOLLECTION = 58036
const GET_MASTER_PUBLIC_KEY = 58037
const HISTOGRAM = 58038
const HISTORY = 58039
const INACTIVE = 58040
const INVISIBLE = 58041
const MASTER_COMPRESSION_ALGORITHMS = 58042
const MASTER_PUBLIC_KEY_PATH = 58043
const MASTER_TLS_CIPHERSUITES = 58044
const MASTER_ZSTD_COMPRESSION_LEVEL = 58045
const NESTED = 58046
const NETWORK_NAMESPACE = 58047
const NOWAIT = 58048
const NULLS = 58049
const OJ = 58050
const OLD = 58051
const ORDINALITY = 58052
const ORGANIZATION = 58053
const OTHERS = 58054
const PERSIST = 58055
const PERSIST_ONLY = 58056
const PRIVILEGE_CHECKS_USER = 58057
const PROCESS = 58058
const REFERENCE = 58059
const REQUIRE_ROW_FORMAT = 58060
const RESOURCE = 58061
const RESPECT = 58062
const RESTART = 58063
const RETAIN = 58064
const SECONDARY = 58065
const SECONDARY_LOAD = 58066
const SECONDARY_UNLOAD = 58067
const THREAD_PRIORITY = 58068
const TIES = 58069
const VCPU = 58070
const VISIBLE = 58071
const INFILE = 58072
const ACTIVE = 58073
const AGGREGATE = 58074
const ANY = 58075
const ARRAY = 58076
const ASCII = 58077
const AT = 58078
const AUTOEXTEND_SIZE = 58079
const GENERATED = 58080
const ALWAYS = 58081
const STORED = 58082
const VIRTUAL = 58083
const NVAR = 58084
const PASSWORD_LOCK = 58085

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	763, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1808,
	200, 1829,
	-2, 333,
	-1, 62,
	242, 1182,
	243, 1182,
	-2, 1171,
	-1, 90,
	271, 333,
	-2, 1814,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 545,
	1, 2510,
	6, 2510,
	7, 2510,
	28, 2510,
	187, 2510,
	763, 2510,
	-2, 1217,
	-1, 558,
	187, 1839,
	-2, 1833,
	-1, 559,
	187, 1840,
	-2, 1834,
	-1, 663,
	1, 683,
	763, 683,
	-2, 681,
	-1, 672,
	1, 1323,
	8, 1323,
	9, 1323,
	10, 1323,
	17, 1323,
	18, 1323,
	19, 1323,
	20, 1323,
	22, 1323,
	24, 1323,
	34, 1323,
	35, 1323,
	64, 1323,
	65, 1323,
	66, 1323,
	67, 1323,
	68, 1323,
	70, 1323,
	71, 1323,
	74, 1323,
	75, 1323,
	77, 1323,
	78, 1323,
	96, 1323,
	526, 1323,
	574, 1323,
	652, 1323,
	763, 1323,
	-2, 1823,
	-1, 677,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 705,
	187, 2207,
	-2, 1445,
	-1, 738,
	187, 2315,
	-2, 1715,
	-1, 739,
	187, 2396,
	-2, 1447,
	-1, 740,
	187, 2227,
	-2, 1448,
	-1, 809,
	187, 2178,
	-2, 1679,
	-1, 812,
	187, 2193,
	-2, 1597,
	-1, 813,
	187, 2196,
	-2, 1597,
	-1, 814,
	187, 2406,
	-2, 1597,
	-1, 816,
	187, 2194,
	-2, 1597,
	-1, 817,
	187, 2407,
	-2, 1597,
	-1, 818,
	187, 2408,
	-2, 1597,
	-1, 877,
	187, 2195,
	-2, 1597,
	-1, 960,
	187, 2295,
	-2, 1597,
	-1, 961,
	187, 2296,
	-2, 1597,
	-1, 1073,
	109, 2523,
	120, 2523,
	187, 2523,
	-2, 1790,
	-1, 1074,
	109, 2654,
	120, 2654,
	187, 2654,
	-2, 1791,
	-1, 1079,
	109, 2551,
	120, 2551,
	187, 2551,
	-2, 1792,
	-1, 1080,
	109, 2602,
	120, 2602,
	187, 2602,
	-2, 1793,
	-1, 1081,
	109, 2603,
	120, 2603,
	187, 2603,
	-2, 1794,
	-1, 1082,
	109, 2450,
	120, 2450,
	187, 2450,
	-2, 1799,
	-1, 1084,
	109, 2579,
	120, 2579,
	187, 2579,
	-2, 1801,
	-1, 1256,
	453, 1196,
	-2, 1200,
	-1, 1258,
	453, 1196,
	-2, 1200,
	-1, 1383,
	1, 683,
	763, 683,
	-2, 681,
	-1, 1385,
	1, 684,
	763, 684,
	-2, 681,
	-1, 1408,
	1, 1324,
	8, 1324,
	9, 1324,
	10, 1324,
	17, 1324,
	18, 1324,
	19, 1324,
	20, 1324,
	22, 1324,
	24, 1324,
	34, 1324,
	35, 1324,
	64, 1324,
	65, 1324,
	66, 1324,
	67, 1324,
	68, 1324,
	70, 1324,
	71, 1324,
	74, 1324,
	75, 1324,
	77, 1324,
	78, 1324,
	96, 1324,
	526, 1324,
	574, 1324,
	652, 1324,
	763, 1324,
	-2, 1823,
	-1, 1419,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 1713,
	1, 683,
	763, 683,
	-2, 681,
	-1, 1715,
	1, 683,
	763, 683,
	-2, 681,
	-1, 2273,
	187, 1843,
	-2, 1691,
	-1, 2276,
	187, 2742,
	-2, 1694,
	-1, 2277,
	187, 2743,
	-2, 1695,
	-1, 2278,
	187, 1842,
	-2, 1838,
	-1, 2428,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2446,
	187, 2319,
	-2, 1795,
	-1, 2453,
	1, 904,
	763, 904,
	-2, 681,
	-1, 2641,
	49, 925,
	206, 928,
	208, 925,
	209, 925,
	210, 925,
	-2, 1042,
	-1, 2723,
	8, 59,
	9, 59,
	10, 59,
	-2, 1477,
	-1, 2740,
	1, 1369,
	8, 1369,
	9, 1369,
	10, 1369,
	17, 1369,
	18, 1369,
	19, 1369,
	20, 1369,
	22, 1369,
	24, 1369,
	34, 1369,
	35, 1369,
	64, 1369,
	65, 1369,
	66, 1369,
	67, 1369,
	68, 1369,
	70, 1369,
	71, 1369,
	74, 1369,
	75, 1369,
	77, 1369,
	78, 1369,
	96, 1369,
	526, 1369,
	574, 1369,
	652, 1369,
	763, 1369,
	-2, 1823,
	-1, 2917,
	212, 1036,
	216, 1036,
	-2, 792,
	-1, 2918,
	212, 1106,
	216, 1106,
	-2, 793,
	-1, 3188,
	1, 1431,
	8, 1431,
	9, 1431,
	10, 1431,
	17, 1431,
	18, 1431,
	19, 1431,
	20, 1431,
	22, 1431,
	24, 1431,
	34, 1431,
	35, 1431,
	64, 1431,
	65, 1431,
	66, 1431,
	67, 1431,
	68, 1431,
	70, 1431,
	71, 1431,
	74, 1431,
	75, 1431,
	77, 1431,
	78, 1431,
	96, 1431,
	526, 1431,
	574, 1431,
	652, 1431,
	763, 1431,
	-2, 1823,
	-1, 3292,
	1, 1746,
	74, 1746,
	763, 1746,
	-2, 1823,
	-1, 3495,
	49, 925,
	206, 928,
	208, 925,
	209, 925,
	210, 925,
	-2, 1042,
	-1, 3515,
	206, 929,
	212, 1036,
	216, 1036,
	-2, 927,
	-1, 3706,
	77, 2090,
	78, 2090,
	187, 2090,
	-2, 1225,
	-1, 3707,
	76, 1757,
	252, 1757,
	-2, 2139,
	-1, 3708,
	76, 1758,
	252, 1758,
	-2, 2708,
	-1, 3950,
	8, 59,
	9, 59,
	10, 59,
	-2, 1753,
	-1, 4096,
	46, 1854,
	-2, 1852,
	-1, 4355,
	8, 59,
	9, 59,
	10, 59,
	-2, 1754,
	-1, 4375,
	315, 430,
	-2, 1910,
	-1, 4376,
	315, 431,
	-2, 1951,
	-1, 4377,
	315, 432,
	-2, 2127,
	-1, 4613,
	104, 416,
	106, 416,
	108, 416,
	-2, 79,
	-1, 4694,
	106, 423,
	107, 423,
	108, 423,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 82835

var yyAct = [...]int{
	751, 44, 4667, 4630, 4568, 4604, 4617, 4382, 4605, 2934,
	2443, 697, 4347, 1411, 4483, 3788, 4090, 4235, 8, 1189,
	4570, 4232, 3, 3300, 4358, 493, 4266, 28, 4234, 7,
	4484, 2933, 570, 3651, 4233, 6, 4236, 9, 4369, 2366,
	3457, 4055, 3998, 4368, 4085, 44, 656, 3268, 3977, 4360,
	4209, 1418, 2367, 2303, 2719, 3913, 4133, 3357, 107, 4345,
	4103, 724, 707, 4091, 2656, 1536, 108, 3502, 3906, 2915,
	3865, 3041, 3621, 3866, 4094, 2975, 3704, 688, 3900, 4040,
	3712, 3178, 3924, 3857, 3435, 1457, 3470, 4381, 3001, 2533,
	549, 552, 3811, 1633, 1746, 2707, 3794, 674, 597, 652,
	1466, 2470, 2248, 4359, 3899, 3358, 101, 750, 3301, 1747,
	3616, 3114, 2914, 1413, 1749, 3507, 3696, 2921, 2987, 1149,
	2945, 2181, 3627, 3595, 815, 3583, 1565, 3574, 2632, 3077,
	2172, 1217, 2460, 2501, 1415, 1161, 1389, 2724, 2638, 134,
	2474, 2870, 2639, 157, 2922, 2848, 2605, 1157, 1266, 537,
	105, 3176, 1170, 1378, 157, 3455, 710, 557, 3230, 1564,
	716, 711, 3014, 2563, 2234, 2871, 1752, 698, 1417, 2636,
	2173, 1206, 2110, 657, 1267, 2151, 2236, 1447, 2045, 1723,
	2497, 1410, 157, 693, 1243, 2968, 2587, 1614, 1610, 2356,
	1075, 2280, 2710, 1455, 2873, 657, 701, 1450, 672, 2163,
	2115, 1300, 1086, 2085, 1278, 1640, 157, 1384, 3081, 1152,
	668, 1474, 1613, 2430, 1396, 3713, 681, 669, 1071, 3276,
	1072, 2476, 655, 1388, 573, 1262, 2241, 572, 157, 1165,
	1387, 1386, 2319, 2078, 2077, 2044, 640, 555, 1176, 1716,
	691, 157, 1153, 1277, 129, 4694, 125, 4688, 664, 4675,
	4659, 4645, 4613, 1188, 4611, 4583, 4580, 4579, 4578, 4563,
	4561, 4092, 4463, 4459, 4454, 100, 3373, 3277, 4135, 4134,
	3629, 3876, 2108, 2518, 1180, 3448, 4329, 2550, 1078, 2549,
	3505, 1172, 86, 1178, 1179, 3871, 3872, 3869, 3870, 4018,
	3417, 3418, 3503, 3161, 4638, 4683, 4600, 99, 1438, 4637,
	4599, 3875, 3451, 97, 661, 4016, 4598, 94, 3356, 3449,
	3127, 3978, 2979, 2238, 1726, 4396, 687, 4395, 4019, 3795,
	4603, 4343, 71, 565, 4545, 2668, 3980, 42, 42, 3797,
	3450, 47, 714, 4215, 42, 666, 2368, 2380, 2378, 2377,
	2376, 2379, 2375, 2374, 2373, 2369, 2370, 2387, 2371, 2386,
	2385, 2372, 2384, 2383, 2382, 2381, 122, 2380, 2378, 2377,
	2376, 2379, 2375, 2374, 2373, 654, 4026, 2387, 42, 2386,
	2385, 88, 2384, 2383, 2382, 2381, 2547, 42, 3297, 2999,
	1182, 2037, 3298, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 2547, 89, 89, 4495, 4110, 1352, 4361, 2941, 89,
	3291, 1148, 4301, 2948, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 3894, 3177, 1499, 2953,
	2952, 3297, 4342, 4214, 700, 3298, 3258, 504, 3576, 678,
	3766, 3563, 4631, 89, 569, 148, 4050, 145, 3763, 146,
	3612, 1704, 89, 3596, 2949, 3851, 3800, 3979, 3327, 3973,
	3897, 4328, 4403, 3855, 3326, 3137, 3136, 4418, 2959, 4156,
	2955, 4351, 2931, 3974, 3898, 4099, 2235, 4201, 4351, 2824,
	2932, 3688, 114, 112, 113, 150, 149, 1169, 2586, 4346,
	2114, 3398, 1065, 3311, 544, 1256, 567, 3399, 3400, 3798,
	3799, 3801, 3802, 3803, 3312, 3313, 2862, 2621, 4348, 2861,
	2439, 490, 2863, 137, 2580, 4348, 2112, 2113, 153, 1615,
	1353, 1616, 2445, 2935, 667, 96, 96, 2189, 3320, 1221,
	1222, 2111, 96, 1225, 2440, 2441, 1250, 2154, 2155, 2946,
	1239, 4420, 1240, 1241, 1242, 3932, 4330, 3231, 1241, 1242,
	3649, 2206, 89, 1402, 1403, 3930, 2132, 1330, 564, 563,
	3925, 1398, 1401, 1402, 1403, 1399, 96, 1400, 1405, 1223,
	1224, 2711, 2712, 4352, 1338, 96, 136, 151, 2957, 152,
	4352, 2472, 2473, 3211, 157, 4436, 2951, 2947, 2748, 2585,
	2954, 649, 1164, 1297, 2487, 1160, 2477, 2486, 2944, 3100,
	2480, 2479, 1226, 2481, 2477, 3534, 1201, 2491, 3669, 4637,
	3164, 4599, 3673, 3671, 1251, 1252, 2617, 2156, 2569, 2391,
	2498, 4597, 1398, 1401, 1402, 1403, 1399, 2568, 1400, 1405,
	3234, 542, 539, 562, 644, 643, 731, 3345, 732, 734,
	735, 736, 737, 1355, 1356, 646, 733, 2315, 2152, 2153,
	665, 1227, 4437, 645, 3476, 2083, 1259, 644, 1350, 157,
	3056, 1351, 4682, 1149, 4638, 4487, 4456, 1379, 4636, 4457,
	597, 4458, 1382, 4635, 2606, 2609, 2607, 2608, 2610, 2611,
	2612, 2613, 4017, 1347, 1409, 1414, 2162, 642, 1213, 4600,
	1432, 1433, 1149, 2161, 1149, 1149, 2160, 2159, 1149, 4083,
	4317, 1334, 1335, 2158, 2157, 1374, 108, 3892, 1149, 2994,
	3107, 3105, 3189, 3884, 3882, 3106, 1508, 1510, 650, 3104,
	1512, 3812, 3034, 1253, 4486, 3617, 3618, 3619, 3620, 3815,
	4549, 4296, 3442, 3189, 1406, 4294, 3841, 3433, 2998, 4150,
	4548, 3813, 3814, 3436, 3437, 3438, 3439, 3440, 4499, 657,
	4044, 4161, 1527, 4557, 3474, 3189, 1531, 1532, 1533, 1534,
	1535, 3628, 1539, 4160, 2143, 1313, 1304, 2144, 3469, 1311,
	157, 3823, 3436, 3437, 3438, 3439, 3440, 3038, 1327, 1381,
	3039, 2312, 1265, 108, 2599, 1086, 4400, 2996, 4657, 4035,
	4455, 2534, 3821, 4412, 1313, 147, 142, 4013, 3846, 4394,
	4081, 4691, 3504, 4690, 4158, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	4661, 1558, 1559, 1561, 1561, 1561, 4660, 1566, 1566, 1566,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1453, 1424, 3981, 4033, 2946, 3575, 2581, 663, 3505,
	2187, 3319, 2393, 2394, 2392, 3238, 3237, 3239, 3236, 1220,
	543, 3982, 1408, 3243, 4438, 3235, 3232, 4030, 1566, 3233,
	3796, 3241, 4152, 154, 4576, 1337, 2950, 3598, 3539, 3445,
	1313, 2943, 566, 4621, 4565, 3240, 3163, 4451, 550, 3171,
	3173, 3172, 1392, 2947, 4410, 3165, 3126, 3117, 2188, 3318,
	1320, 553, 3242, 3244, 1471, 1472, 1470, 143, 3910, 138,
	2190, 4449, 4450, 3181, 3626, 3180, 4193, 3180, 4111, 4322,
	3431, 1393, 3099, 1473, 4574, 1375, 4569, 4056, 2946, 1560,
	1562, 1563, 1360, 3106, 3104, 4009, 1212, 3527, 2946, 4558,
	4010, 3471, 4572, 4349, 3984, 1721, 2165, 4008, 2960, 554,
	4349, 1566, 1566, 1731, 1732, 1730, 2593, 126, 109, 109,
	2997, 1215, 136, 4007, 1318, 109, 4006, 1567, 1568, 1434,
	1375, 1439, 1439, 1441, 3983, 1446, 2947, 1440, 1440, 1435,
	3891, 1435, 1435, 4202, 3853, 1435, 2947, 4027, 1372, 4485,
	2962, 2483, 4213, 1404, 1456, 2114, 678, 678, 2484, 87,
	3000, 3883, 2500, 1404, 2084, 1260, 115, 1480, 109, 1376,
	3601, 3599, 4402, 3854, 2313, 2314, 3597, 1258, 1214, 4327,
	1264, 2112, 2113, 3881, 2145, 4014, 1305, 1600, 1319, 1509,
	1315, 1370, 3600, 1312, 4295, 731, 4151, 732, 734, 735,
	736, 737, 4157, 4004, 1177, 733, 2315, 3245, 4005, 4145,
	4146, 2528, 2529, 4364, 4365, 1537, 1603, 3072, 128, 2662,
	3071, 1238, 1316, 1317, 1404, 1346, 4141, 2524, 132, 140,
	139, 4431, 4230, 2168, 662, 2047, 3166, 1254, 2930, 3622,
	3623, 3398, 1065, 1237, 3388, 3389, 3391, 3399, 3400, 3390,
	3392, 3393, 3625, 2665, 2663, 2658, 3022, 3023, 1234, 2523,
	2660, 1233, 4032, 1232, 3394, 3395, 3396, 3397, 551, 4408,
	1601, 1602, 1263, 1557, 551, 1231, 136, 2942, 1235, 1236,
	1471, 1472, 1470, 2169, 4311, 4029, 137, 141, 1711, 548,
	3541, 3542, 1478, 3858, 3859, 4581, 1323, 3444, 1164, 1473,
	1149, 4225, 2467, 1366, 1611, 3167, 2079, 1086, 3073, 3074,
	551, 4684, 1086, 107, 2659, 2661, 2664, 2666, 4501, 4571,
	4573, 108, 1174, 1173, 1365, 1361, 1362, 1363, 1364, 1367,
	1368, 1369, 1371, 2116, 3584, 551, 136, 3585, 4500, 3586,
	2312, 1164, 3540, 3362, 3528, 3529, 3530, 141, 1177, 597,
	130, 3096, 131, 3084, 3513, 1175, 2535, 1625, 3084, 4697,
	4692, 4676, 1725, 3094, 4648, 2469, 3093, 2547, 597, 4671,
	1171, 641, 2118, 4300, 1407, 2117, 2469, 667, 4184, 1756,
	1701, 1748, 1309, 1078, 3116, 4075, 4078, 3890, 1078, 3887,
	1607, 3624, 3467, 1706, 3101, 3033, 3029, 2037, 3004, 1696,
	1697, 1698, 1699, 1700, 3116, 1630, 3003, 2594, 2149, 1718,
	557, 1736, 1618, 1149, 1734, 1261, 1149, 1619, 1420, 1422,
	2517, 1168, 2221, 2469, 1420, 1422, 2469, 2220, 157, 2091,
	2087, 1718, 557, 2219, 2086, 1751, 1167, 108, 1724, 1753,
	2469, 2089, 3462, 1729, 1391, 1190, 1702, 2088, 3092, 1181,
	488, 3179, 1514, 1515, 2469, 3648, 3873, 2035, 157, 157,
	157, 157, 157, 138, 157, 1604, 1605, 3310, 3031, 89,
	1708, 1709, 2795, 695, 1373, 1754, 2792, 2536, 1720, 597,
	2068, 2069, 3030, 2868, 1727, 1314, 1321, 1322, 1324, 1325,
	1326, 2076, 1328, 1329, 3042, 1331, 1332, 1333, 2048, 1336,
	3361, 1339, 1340, 1341, 1342, 1343, 1513, 4320, 1308, 2072,
	2105, 4460, 3083, 2060, 2142, 2468, 2061, 2062, 2063, 1511,
	2765, 3090, 3084, 2052, 2053, 2067, 2468, 3087, 2742, 2050,
	3086, 3091, 3090, 3084, 3007, 2075, 2039, 2043, 3087, 3006,
	1626, 3086, 3091, 2858, 2628, 674, 674, 674, 674, 4669,
	1421, 1627, 4670, 2123, 4668, 2178, 1421, 1707, 2548, 3115,
	1149, 123, 1719, 4155, 1712, 1414, 1710, 2215, 127, 2525,
	2125, 1728, 2064, 2468, 2066, 2435, 2468, 1738, 2214, 3115,
	1513, 108, 1516, 3110, 1745, 1744, 108, 2251, 1516, 1629,
	2468, 3113, 2103, 2313, 2314, 1530, 2046, 3084, 1529, 1528,
	123, 651, 1164, 2208, 2468, 3085, 2467, 1479, 157, 157,
	2209, 3084, 1295, 657, 3874, 2216, 1164, 118, 1516, 3085,
	2467, 2218, 3512, 140, 139, 1203, 89, 157, 2445, 1751,
	157, 157, 157, 157, 4183, 2036, 1489, 2305, 2304, 1499,
	2090, 2080, 657, 2081, 1514, 1515, 3779, 3777, 1514, 1515,
	157, 4182, 2192, 1499, 657, 1756, 1255, 2120, 2193, 3464,
	2196, 1149, 2074, 4191, 3867, 121, 2096, 2097, 2239, 3946,
	2099, 3491, 3490, 3379, 3377, 4021, 1429, 1430, 1429, 1430,
	4432, 4433, 108, 2051, 2124, 2121, 2102, 4429, 4430, 3107,
	1539, 674, 3065, 3064, 2164, 2167, 4218, 4217, 1423, 2306,
	1423, 4467, 701, 2214, 157, 2739, 120, 3105, 3778, 3092,
	2070, 108, 4022, 3062, 3061, 1753, 3083, 1492, 1493, 1494,
	1495, 1496, 1489, 2166, 1431, 1499, 1431, 2311, 2316, 2640,
	2849, 2865, 2864, 3492, 2360, 3378, 3125, 3124, 2217, 3123,
	2281, 2183, 1420, 1422, 1420, 1422, 2182, 3122, 2239, 96,
	2170, 2278, 3121, 3120, 3066, 3119, 674, 3118, 1537, 2186,
	2388, 2389, 2194, 2195, 1244, 2197, 2184, 2185, 2558, 1229,
	2207, 2736, 2733, 2244, 657, 3063, 157, 2239, 2239, 2239,
	2444, 1470, 4468, 2239, 2258, 2239, 2239, 2239, 96, 2239,
	2239, 2174, 1416, 2866, 1086, 2239, 2271, 1473, 1473, 2041,
	2041, 2041, 2041, 1626, 668, 1756, 687, 4175, 1157, 2239,
	2239, 2239, 2239, 1219, 1627, 2239, 2239, 2239, 2239, 2239,
	2239, 1472, 1470, 3052, 2239, 2239, 2239, 2239, 2239, 2239,
	2239, 2239, 2239, 2239, 2239, 2239, 2256, 2268, 3051, 1473,
	157, 157, 157, 1246, 3050, 3049, 1537, 103, 1086, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 3260, 2452, 1499,
	2357, 4674, 2342, 2345, 3048, 1753, 2287, 1245, 3047, 3046,
	2358, 2559, 1230, 4647, 1421, 3045, 1421, 678, 678, 678,
	678, 2285, 2286, 2284, 2616, 1471, 1472, 1470, 4370, 2396,
	4504, 2272, 4503, 110, 2615, 116, 4680, 678, 2786, 2101,
	2785, 2278, 1271, 2457, 1473, 4559, 2401, 2543, 2403, 1184,
	1183, 2406, 3069, 1218, 2326, 2327, 2328, 2329, 2330, 4505,
	1471, 1472, 1470, 2308, 1078, 2310, 4496, 2466, 2429, 3002,
	700, 2249, 2250, 1714, 2260, 2261, 2262, 2427, 2354, 1473,
	2322, 3822, 2325, 1248, 3816, 157, 2451, 559, 2507, 2508,
	2509, 2510, 2511, 2494, 2495, 2496, 1751, 4523, 1257, 1066,
	1067, 1068, 2357, 157, 2808, 2282, 4651, 4618, 4650, 157,
	157, 1166, 2433, 3027, 157, 157, 2503, 2504, 2505, 2506,
	2442, 2437, 4370, 2436, 4445, 2527, 4444, 2512, 2762, 2763,
	2764, 2456, 2454, 3189, 2257, 2541, 2542, 2478, 1471, 1472,
	1470, 2242, 4685, 1537, 3371, 163, 4663, 491, 503, 2337,
	2338, 163, 3893, 2242, 2482, 2485, 163, 1473, 2488, 2489,
	2490, 2499, 3907, 678, 89, 1467, 639, 3072, 4399, 2662,
	3071, 2264, 2266, 2267, 2514, 163, 2283, 695, 4539, 2265,
	4536, 2450, 4307, 2423, 163, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 163, 4298, 4291,
	2544, 4686, 2231, 2665, 2663, 2658, 4222, 1478, 163, 1163,
	2660, 2519, 2233, 2521, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 4051, 695, 1499, 678, 2449,
	163, 639, 2365, 1163, 3755, 3753, 4292, 4538, 2232, 4535,
	4020, 3905, 491, 163, 3904, 3754, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 3073, 3074,
	1499, 3903, 3760, 3902, 2659, 2661, 2664, 2666, 3832, 2309,
	4696, 4153, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 3786, 3785, 1499, 4293, 2230, 3552,
	2787, 3604, 3602, 1471, 1472, 1470, 3486, 3485, 2333, 2334,
	2335, 4678, 3603, 3484, 2339, 3483, 2341, 2344, 2347, 2513,
	2352, 2353, 1473, 3171, 3173, 3172, 2363, 1471, 1472, 1470,
	3482, 3201, 4154, 1471, 1472, 1470, 3423, 3374, 4627, 2973,
	2395, 4507, 2397, 2398, 2971, 2958, 1473, 2402, 1303, 2404,
	2405, 1302, 1473, 1390, 4494, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 4695, 2253, 1471,
	1472, 1470, 2126, 4679, 1561, 2129, 2130, 2131, 4662, 2133,
	2134, 2564, 4656, 2135, 1471, 1472, 1470, 2136, 1473, 4585,
	2137, 1149, 4448, 2254, 2138, 2139, 2255, 2140, 2141, 1471,
	1472, 1470, 1383, 1473, 4577, 4493, 4370, 4492, 2087, 3171,
	3173, 3172, 2086, 4461, 3758, 3447, 3446, 3609, 1473, 2089,
	1471, 1472, 1470, 157, 4442, 2088, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 4441, 1473,
	1499, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 157, 4387, 1499, 1471, 1472, 1470, 4386, 2584, 4380,
	2974, 4379, 3262, 4383, 2576, 3171, 3173, 3172, 3171, 3173,
	3172, 4159, 1409, 1473, 2227, 4058, 3695, 2223, 3531, 1471,
	1472, 1470, 3017, 1382, 2229, 3016, 2094, 2225, 3607, 2093,
	2570, 2555, 2554, 695, 2307, 157, 2560, 657, 1473, 2095,
	2566, 3198, 2082, 2556, 1743, 1742, 1715, 1713, 1298, 561,
	2228, 674, 4491, 2224, 4488, 2562, 1275, 4417, 4397, 4337,
	2728, 2729, 2730, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 4331, 1309, 1499, 1274, 3171,
	3173, 3172, 2602, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 4224, 2721, 1499, 2603, 4223,
	2226, 4149, 4148, 2222, 4129, 2727, 4082, 4034, 4031, 4003,
	3972, 3971, 3942, 2766, 3896, 3895, 3831, 1756, 3830, 3829,
	3828, 3819, 2706, 3818, 3817, 3784, 163, 3781, 3756, 3751,
	2629, 3742, 3738, 3733, 2571, 657, 157, 3732, 3195, 3731,
	3605, 3594, 491, 3582, 657, 2575, 3578, 2591, 3571, 3570,
	3569, 2583, 3489, 3481, 3480, 3479, 3405, 3210, 3209, 3207,
	2590, 3067, 2969, 2867, 2722, 1526, 1525, 1524, 2646, 2623,
	2582, 1086, 1086, 2553, 2098, 1737, 2789, 1753, 2741, 695,
	4198, 695, 3632, 4547, 2598, 3768, 4476, 2601, 3768, 4407,
	3768, 4405, 3632, 695, 4065, 695, 3768, 4227, 2760, 2761,
	1344, 163, 3632, 4137, 2620, 3632, 4132, 2622, 3921, 4629,
	2625, 4079, 695, 2278, 2799, 3632, 4038, 3189, 695, 2627,
	695, 3632, 3917, 2037, 3849, 2726, 2637, 2037, 3848, 2715,
	3768, 3767, 2281, 3632, 3631, 3415, 3414, 3411, 3412, 3411,
	3410, 2741, 695, 2596, 2595, 2239, 2431, 1453, 1453, 2331,
	2578, 695, 2239, 2239, 2239, 2239, 2239, 4057, 2451, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 674, 3996, 1499, 674, 3297, 695, 3995, 639, 3298,
	2239, 2752, 2431, 2750, 2751, 2331, 695, 2210, 695, 1632,
	1631, 163, 2771, 3425, 3015, 3015, 89, 3697, 3681, 3408,
	3716, 1756, 3407, 3406, 2853, 2432, 2037, 2434, 2246, 2851,
	3716, 2331, 163, 3920, 2532, 4338, 2767, 2146, 2147, 102,
	1307, 4211, 1306, 3955, 2775, 1307, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 491, 3189,
	1499, 2432, 3632, 2037, 678, 2210, 3426, 3413, 3208, 3044,
	2438, 157, 2210, 2272, 2210, 3716, 157, 1379, 2531, 157,
	2857, 1753, 2245, 1086, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 2741, 2818, 1499, 1309,
	2816, 2815, 2741, 678, 2614, 2807, 2600, 2100, 2552, 2547,
	2546, 2247, 1377, 2109, 2037, 1735, 1733, 1754, 1612, 1380,
	89, 1456, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 2852, 4435, 1499, 2720, 2925, 2928,
	4309, 4178, 4176, 3997, 704, 597, 3776, 3773, 2475, 2502,
	2877, 2477, 2916, 3183, 3055, 1702, 3054, 2498, 3021, 1078,
	2913, 2711, 2712, 157, 1313, 2526, 2493, 2920, 2492, 2923,
	2924, 1705, 2854, 1294, 2976, 2855, 3833, 2282, 2565, 1210,
	1209, 4666, 4665, 2856, 4642, 4640, 2859, 4634, 1618, 4633,
	2869, 4606, 157, 4601, 4595, 4593, 4541, 4540, 3912, 3908,
	3697, 1724, 3424, 3419, 3012, 2781, 3011, 2992, 2714, 2708,
	2148, 2119, 1739, 2178, 1310, 2718, 2717, 3009, 2205, 1460,
	1461, 3919, 538, 2204, 2202, 2716, 2199, 2823, 2825, 2203,
	2977, 2809, 2198, 2200, 4427, 2832, 2833, 2834, 2201, 2970,
	4341, 2972, 3212, 2749, 4180, 4389, 133, 2757, 4116, 3035,
	1463, 1458, 2756, 3888, 3019, 1465, 1464, 3864, 1462, 3771,
	2961, 2963, 1460, 1461, 3521, 2964, 2965, 3520, 2966, 2967,
	3404, 2995, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 3403, 3402, 1499, 4390, 4206, 540,
	541, 3013, 2929, 1463, 3196, 2919, 4336, 3199, 1465, 1464,
	3202, 1462, 4335, 144, 4333, 4097, 3018, 4095, 4332, 4144,
	4143, 4037, 560, 2574, 4, 3691, 2573, 3028, 1412, 43,
	674, 3185, 3082, 678, 2092, 3103, 678, 3102, 1756, 3191,
	3192, 3193, 3088, 3095, 3057, 3098, 3187, 3032, 1448, 3075,
	4466, 3162, 4023, 4024, 3109, 3037, 3078, 3089, 3040, 1449,
	3053, 3880, 3203, 2776, 2777, 2778, 2779, 2780, 3058, 106,
	3111, 3727, 3532, 43, 3376, 3070, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 2630, 1628,
	1499, 2805, 1292, 1276, 3170, 3269, 1273, 2239, 1753, 1272,
	1216, 4622, 4068, 4067, 1390, 2249, 2250, 3826, 3947, 157,
	3246, 1269, 1270, 3248, 3827, 157, 701, 3452, 3824, 3294,
	3299, 2520, 2239, 1349, 674, 3825, 1407, 4339, 4297, 4041,
	3789, 102, 3293, 1268, 2278, 3775, 163, 3421, 2171, 1483,
	108, 1486, 2320, 2321, 4511, 1163, 2094, 3304, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 2093, 1484, 1485, 1482, 2174,
	3059, 1358, 2597, 1444, 1445, 4510, 3190, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 3206,
	3690, 1499, 3259, 1442, 1443, 1436, 1437, 4509, 3204, 2755,
	4000, 3214, 2619, 1249, 689, 3295, 4424, 2754, 3217, 4423,
	4422, 3220, 3221, 4421, 4207, 4170, 4162, 1086, 4115, 157,
	3928, 3216, 3372, 3076, 690, 3927, 3247, 3654, 3015, 3385,
	2981, 2982, 2983, 4644, 4643, 682, 4462, 3844, 491, 3475,
	3473, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 3472, 3043, 1499, 639, 639, 2817, 1379,
	2796, 639, 2793, 2759, 2065, 1468, 1208, 1207, 3353, 4643,
	163, 4644, 4220, 3401, 2041, 639, 639, 2243, 4527, 3370,
	3296, 163, 686, 685, 2272, 491, 491, 491, 491, 2877,
	3384, 3380, 104, 3302, 68, 3306, 597, 3308, 3309, 4388,
	163, 163, 163, 163, 163, 3182, 163, 3219, 3184, 3441,
	157, 3170, 3364, 3365, 3366, 3307, 3367, 3368, 3314, 4249,
	65, 1, 163, 163, 4251, 23, 4326, 639, 3363, 4250,
	22, 2512, 676, 163, 4252, 24, 3278, 3279, 3280, 3281,
	3282, 3283, 3284, 3285, 3286, 3287, 3288, 4253, 25, 4247,
	18, 4246, 17, 50, 700, 4245, 16, 4248, 19, 4244,
	15, 2592, 3427, 2127, 3514, 4238, 11, 596, 3443, 157,
	4273, 39, 678, 1163, 3270, 3271, 3272, 3273, 3274, 3275,
	4271, 37, 4270, 36, 3810, 3383, 639, 639, 639, 3382,
	3809, 1163, 4274, 40, 3454, 4269, 32, 4268, 31, 4267,
	30, 3615, 3261, 3434, 3463, 4264, 27, 2993, 3468, 4321,
	3219, 4192, 3422, 4263, 26, 4243, 14, 3820, 3477, 2705,
	157, 157, 639, 4240, 13, 3432, 4239, 12, 4237, 10,
	1722, 4012, 1187, 2530, 1299, 4334, 3516, 3517, 3518, 4096,
	4204, 4203, 3793, 3523, 3524, 3792, 3526, 3460, 3458, 2986,
	163, 163, 3461, 3680, 2985, 163, 3614, 1163, 1293, 2579,
	3544, 2107, 3079, 3549, 3409, 3080, 678, 3005, 3068, 163,
	639, 3478, 163, 163, 163, 163, 4168, 2618, 157, 2150,
	2604, 1359, 2453, 3352, 163, 2458, 2646, 3850, 3494, 3501,
	3493, 4049, 163, 3075, 3500, 3499, 163, 1151, 2916, 3511,
	117, 1702, 3581, 2557, 3630, 3543, 3487, 3488, 1228, 512,
	3522, 3510, 2455, 2939, 4205, 1296, 2938, 2956, 2471, 1385,
	3968, 2937, 3652, 3535, 2936, 3537, 4299, 2940, 1637, 1635,
	3647, 1636, 1634, 1639, 1638, 518, 3550, 1620, 3553, 3686,
	3555, 3557, 3559, 3561, 4374, 3170, 163, 3694, 1469, 3579,
	744, 135, 3112, 491, 647, 648, 124, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 657,
	520, 1499, 1507, 2753, 2860, 3705, 1076, 1077, 1069, 4465,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 2744, 3701, 1163,
	4216, 1163, 4098, 4208, 1163, 3699, 108, 3304, 3655, 4363,
	2178, 1163, 1454, 3633, 4100, 3926, 1163, 1163, 1163, 3459,
	3653, 2806, 1556, 2355, 713, 660, 163, 3711, 163, 3945,
	4102, 2263, 727, 726, 3700, 725, 722, 723, 2390, 4350,
	2252, 3290, 3289, 3292, 1481, 3360, 3765, 3416, 1357, 702,
	1428, 1427, 1426, 1424, 1425, 1419, 671, 2424, 3026, 1397,
	3668, 1395, 3664, 3665, 3666, 1394, 3667, 1086, 1740, 1608,
	2713, 2709, 3670, 670, 3672, 675, 46, 2758, 1247, 1561,
	1561, 1561, 1566, 1566, 1566, 1569, 1570, 1571, 1572, 1566,
	1566, 1566, 163, 163, 163, 1459, 2364, 3698, 3687, 4109,
	111, 684, 3741, 3721, 683, 692, 3369, 29, 21, 20,
	1204, 2635, 3564, 2657, 3566, 3703, 1185, 48, 54, 53,
	1163, 3717, 3718, 3719, 3720, 51, 52, 3714, 2980, 2522,
	3587, 3588, 3589, 3565, 3780, 3658, 3659, 3660, 3661, 3662,
	4373, 4567, 1279, 3302, 3611, 3170, 3736, 4584, 4616, 3739,
	1354, 3743, 38, 3715, 35, 34, 33, 4265, 3752, 4259,
	3722, 4258, 4261, 4260, 4257, 4262, 4256, 4255, 4254, 4272,
	3772, 4242, 4241, 4551, 4550, 5, 98, 95, 41, 119,
	1147, 2, 0, 3652, 0, 3836, 0, 3834, 0, 0,
	3769, 3770, 3852, 0, 0, 157, 1163, 163, 0, 0,
	157, 0, 3790, 694, 696, 1560, 1562, 1563, 0, 3509,
	0, 0, 3805, 3806, 3807, 163, 3783, 0, 0, 0,
	0, 163, 163, 639, 639, 639, 163, 163, 0, 0,
	0, 0, 0, 0, 0, 3804, 0, 0, 157, 3847,
	3838, 3509, 1567, 1568, 3808, 3840, 2174, 3679, 1600, 1601,
	1602, 0, 3839, 0, 0, 0, 0, 3842, 3843, 0,
	3845, 0, 0, 0, 0, 0, 3689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3879, 0, 0,
	0, 3868, 3835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3860, 3861, 0, 0, 0, 0, 0, 3723,
	3724, 3725, 0, 0, 0, 0, 3082, 0, 3889, 0,
	0, 0, 3856, 3862, 0, 0, 3088, 3885, 0, 3863,
	3744, 3745, 3746, 0, 0, 0, 0, 0, 0, 0,
	3078, 3089, 0, 0, 0, 3762, 0, 3877, 0, 0,
	3923, 0, 0, 0, 0, 0, 3886, 0, 0, 3678,
	0, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1489, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3915, 3914, 3916, 0, 0, 0, 0, 3652, 3652, 3929,
	3931, 0, 0, 3952, 0, 0, 3705, 0, 0, 0,
	1751, 674, 0, 0, 3957, 0, 0, 0, 0, 107,
	0, 0, 0, 3911, 0, 3257, 3901, 108, 0, 0,
	0, 0, 3567, 3568, 0, 0, 3170, 0, 0, 3909,
	3577, 0, 3304, 3580, 0, 0, 0, 3949, 0, 0,
	3590, 3591, 3592, 3593, 0, 0, 0, 0, 3606, 3608,
	3610, 0, 0, 1488, 1487, 1497, 1498, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1489, 3613, 3992, 1499, 0, 3951,
	3966, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 157, 0, 0, 3965,
	0, 0, 1086, 0, 0, 3999, 0, 3969, 0, 0,
	0, 0, 0, 0, 3990, 0, 3948, 3993, 0, 0,
	0, 3956, 3959, 0, 668, 3960, 0, 0, 0, 0,
	0, 0, 0, 2071, 0, 163, 0, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0,
	3170, 1499, 0, 0, 4053, 4054, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 3256, 0, 0, 0,
	3975, 3976, 3986, 3987, 3985, 0, 0, 0, 3302, 0,
	0, 0, 0, 0, 3988, 3989, 0, 3170, 0, 0,
	4002, 0, 0, 4001, 4077, 0, 0, 0, 0, 1163,
	0, 4025, 0, 4015, 4011, 0, 0, 163, 0, 163,
	3219, 0, 4028, 1163, 4045, 4046, 0, 4048, 1163, 4039,
	4043, 4036, 3729, 3730, 0, 0, 4042, 0, 0, 0,
	3737, 0, 4070, 3740, 4071, 0, 0, 0, 4061, 4047,
	3747, 3748, 3749, 3750, 0, 639, 639, 0, 3509, 3757,
	3759, 3761, 0, 3952, 4120, 3764, 4072, 0, 4074, 0,
	4076, 4069, 4059, 4060, 0, 0, 0, 4119, 0, 4086,
	0, 0, 0, 3509, 0, 108, 4062, 4063, 1488, 1487,
	1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489,
	3255, 0, 1499, 4084, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 0, 4117, 0, 0, 163, 163, 0,
	0, 0, 4139, 1163, 0, 0, 163, 0, 2240, 0,
	108, 4124, 0, 0, 0, 4126, 0, 0, 0, 0,
	4118, 3961, 3962, 3963, 3964, 0, 4121, 4123, 0, 0,
	1163, 0, 4140, 678, 4142, 0, 0, 0, 0, 0,
	4169, 0, 4114, 0, 0, 4138, 4174, 4127, 0, 0,
	0, 0, 0, 0, 0, 0, 2279, 0, 0, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 4147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4172, 0, 0, 4189, 0, 0,
	3170, 0, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 4164, 0, 1499, 0, 0, 4167,
	0, 3705, 4166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2340, 4221, 0, 3222, 2348, 4177, 4179,
	0, 1149, 108, 1149, 0, 4185, 0, 0, 4186, 0,
	4231, 4165, 0, 0, 4229, 4228, 0, 4190, 4188, 0,
	0, 0, 108, 0, 157, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	0, 4219, 0, 0, 0, 0, 4199, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 4318, 0, 0,
	0, 3170, 0, 0, 0, 0, 0, 0, 0, 0,
	3360, 0, 0, 0, 0, 4306, 4290, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 163, 0,
	0, 163, 163, 163, 4308, 0, 4310, 4313, 4303, 0,
	4302, 4101, 4104, 0, 4354, 4362, 3304, 4366, 0, 4323,
	0, 0, 4316, 0, 4314, 3915, 3914, 2918, 0, 4319,
	0, 0, 4325, 2927, 2927, 3200, 0, 0, 0, 0,
	0, 1537, 4340, 0, 0, 0, 0, 0, 4353, 0,
	0, 0, 1149, 4357, 1149, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 1488, 1487, 1497, 1498, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1489, 1086, 0, 1499, 0,
	0, 157, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 1163, 1163, 0, 0, 0, 0, 639,
	0, 4419, 0, 0, 4411, 0, 0, 0, 0, 0,
	3269, 0, 0, 0, 163, 639, 1163, 0, 0, 0,
	491, 0, 0, 0, 4398, 0, 0, 0, 0, 4428,
	0, 0, 0, 639, 0, 0, 4409, 4406, 4415, 0,
	0, 4384, 0, 0, 0, 0, 4416, 4393, 4414, 4440,
	0, 0, 3302, 4413, 3915, 3914, 0, 4426, 1163, 4425,
	0, 0, 639, 0, 1163, 0, 1163, 0, 0, 1163,
	0, 0, 0, 4473, 0, 0, 0, 4446, 4126, 4478,
	4464, 4443, 4439, 0, 0, 4434, 0, 0, 0, 0,
	597, 4490, 0, 0, 0, 1163, 1163, 0, 4479, 1537,
	4475, 0, 4477, 4472, 0, 0, 4489, 0, 0, 3360,
	0, 0, 0, 0, 0, 4474, 1149, 0, 0, 1149,
	0, 0, 0, 0, 0, 1149, 1149, 1149, 1149, 4481,
	1149, 1149, 4515, 4482, 1149, 1149, 4480, 4515, 4452, 0,
	0, 4515, 4525, 0, 4497, 4529, 4498, 0, 0, 0,
	1149, 0, 4446, 4502, 3652, 0, 4512, 4533, 0, 0,
	4526, 0, 3304, 0, 0, 0, 0, 0, 0, 4537,
	3169, 4530, 657, 0, 0, 1149, 0, 4544, 1149, 4546,
	0, 1149, 0, 0, 4534, 0, 0, 0, 1163, 0,
	4556, 0, 2444, 4575, 4566, 4104, 1163, 1163, 1163, 4553,
	4564, 4555, 108, 4506, 0, 0, 4508, 4554, 0, 4552,
	4378, 4586, 0, 4517, 4518, 4519, 0, 597, 4522, 4592,
	4542, 163, 1086, 0, 0, 0, 0, 163, 1149, 0,
	4587, 0, 1149, 1163, 1149, 0, 4607, 0, 1149, 4515,
	4610, 4515, 0, 0, 0, 4619, 0, 0, 0, 1149,
	1149, 1149, 1149, 0, 1149, 0, 4515, 4515, 4515, 4367,
	4371, 4515, 4560, 0, 0, 4562, 0, 0, 4385, 4594,
	0, 0, 4596, 0, 0, 0, 0, 0, 0, 0,
	0, 4641, 1149, 4639, 1149, 0, 1149, 0, 3360, 4515,
	3360, 4515, 1163, 4652, 0, 4654, 0, 0, 3302, 0,
	0, 0, 0, 0, 0, 0, 4664, 0, 0, 677,
	0, 0, 0, 0, 657, 4608, 1149, 4672, 0, 0,
	0, 163, 1149, 4515, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 1163, 4515, 0, 4626,
	0, 0, 0, 0, 0, 0, 1149, 2572, 0, 1149,
	0, 0, 0, 4515, 4447, 0, 0, 0, 0, 1149,
	0, 0, 0, 0, 0, 1149, 4515, 156, 0, 0,
	0, 0, 4515, 4649, 0, 0, 0, 3169, 547, 0,
	0, 491, 0, 0, 0, 4513, 0, 2927, 2927, 2927,
	0, 2927, 2927, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4677,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 3360, 0, 0, 2624, 0, 0, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 4689, 0, 0, 0,
	0, 0, 4520, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 1163, 1163, 1163,
	0, 0, 0, 0, 639, 1202, 0, 0, 0, 0,
	0, 163, 639, 0, 0, 0, 0, 2731, 2732, 1163,
	1163, 2734, 2735, 0, 0, 2737, 2738, 2211, 2212, 2213,
	0, 0, 0, 0, 0, 0, 3197, 639, 0, 1163,
	0, 639, 0, 0, 0, 4582, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 163, 533, 1488, 1487, 1497, 1498, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 0, 1499,
	2768, 2769, 2770, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 491, 491, 491, 491, 1163, 0, 0,
	1163, 491, 491, 1163, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 1163, 0, 491, 491, 1163,
	163, 491, 0, 0, 0, 0, 1163, 0, 1163, 1163,
	1163, 1163, 1163, 1163, 2704, 0, 0, 0, 0, 0,
	0, 0, 4653, 3194, 2800, 2801, 2802, 0, 0, 4658,
	0, 3169, 0, 2332, 0, 0, 0, 0, 1390, 0,
	2653, 2336, 0, 0, 0, 0, 2677, 0, 0, 0,
	505, 0, 1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1489, 0, 0, 1499, 0, 0, 0,
	0, 1163, 0, 0, 2399, 2400, 0, 1163, 2652, 0,
	0, 0, 2407, 2408, 2409, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 2674, 1163, 508, 2772, 0,
	2422, 2790, 712, 0, 0, 0, 519, 531, 532, 0,
	1488, 1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1489, 0, 0, 1499, 0, 0, 1488, 1487, 1497,
	1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0,
	0, 1499, 0, 0, 0, 514, 0, 521, 517, 0,
	0, 526, 527, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 2743, 0, 0, 0, 528,
	0, 0, 1163, 0, 0, 0, 0, 1163, 0, 0,
	658, 0, 0, 0, 0, 0, 2643, 3496, 2655, 158,
	3495, 2654, 2645, 0, 0, 2678, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 2687, 0, 1205, 1087,
	0, 3169, 0, 158, 1155, 0, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 0, 3020,
	1499, 0, 523, 0, 0, 158, 0, 0, 3024, 3025,
	0, 0, 2676, 2698, 2649, 2648, 0, 494, 158, 0,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2644, 0, 516, 0, 1488, 1487, 1497, 1498,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1489, 3497, 3498,
	1499, 0, 2668, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 163, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 529, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 1163, 2694, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	639, 639, 0, 639, 0, 0, 0, 0, 0, 0,
	2702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2684, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 506, 0, 491, 0, 0, 0, 2927, 0,
	0, 71, 0, 0, 0, 0, 0, 93, 0, 491,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	509, 510, 0, 536, 0, 0, 491, 511, 513, 0,
	507, 535, 534, 0, 0, 0, 0, 3223, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4282, 0,
	0, 0, 0, 0, 0, 3249, 0, 3250, 3251, 0,
	3252, 3253, 0, 0, 3254, 0, 0, 0, 0, 4275,
	0, 0, 4615, 4618, 4614, 0, 0, 0, 525, 0,
	3263, 3264, 3265, 3266, 0, 0, 0, 0, 0, 0,
	0, 0, 3169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 2670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2647, 0, 0, 49, 90, 56, 55,
	58, 2567, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4276, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 158, 0, 0, 0, 0, 0, 163, 163, 62,
	92, 91, 0, 0, 0, 0, 57, 494, 0, 0,
	0, 0, 0, 2671, 2672, 0, 3169, 2675, 0, 0,
	2680, 0, 2685, 2682, 2683, 0, 2686, 2679, 0, 2689,
	2688, 2690, 0, 2691, 2692, 2693, 0, 0, 2695, 2696,
	2697, 2699, 2700, 2701, 0, 0, 0, 2673, 2703, 0,
	0, 0, 0, 3169, 0, 0, 491, 2667, 0, 2927,
	2927, 1163, 0, 0, 1163, 0, 158, 0, 0, 2626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285,
	4286, 4283, 0, 4284, 0, 4288, 0, 0, 0, 0,
	78, 2723, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2740, 639, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 2927, 2927, 0, 0, 1163, 658, 0, 0, 0,
	0, 2669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2911, 491, 1163, 491, 158, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 1390, 1609, 0,
	0, 0, 0, 494, 2773, 2883, 2774, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4289, 4277, 0, 66, 67, 73, 0, 74,
	2782, 2783, 2784, 0, 0, 0, 2788, 0, 2791, 0,
	0, 2794, 0, 0, 2797, 2798, 0, 0, 0, 2803,
	2804, 0, 0, 0, 2880, 2810, 2811, 2812, 0, 0,
	2813, 0, 2814, 0, 0, 0, 3169, 0, 0, 3638,
	3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 2819, 2820, 2821, 2822, 0, 3657, 2826, 2827,
	2828, 2829, 2830, 2831, 0, 0, 0, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 0,
	2847, 0, 1741, 0, 0, 0, 0, 0, 0, 639,
	3683, 3684, 3685, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 2055, 2056, 2057, 2058, 0, 2059, 0,
	0, 0, 0, 491, 2884, 0, 163, 3169, 0, 0,
	0, 0, 0, 0, 0, 2893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2882, 2905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3782, 0, 1163, 0, 491, 0, 491, 0, 0, 0,
	85, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 160, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 1609, 1609, 2900, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 659, 0, 0,
	0, 2191, 0, 0, 0, 0, 160, 0, 0, 2909,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	2890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 1159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 158, 160, 0, 1087, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 495, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 2259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3188, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 3224, 3225, 3226, 3227, 3228, 3229, 0, 0,
	2875, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 1163, 0, 2887,
	494, 494, 494, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 158, 158, 158, 158, 158,
	0, 158, 0, 0, 2426, 0, 2428, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3933, 3934, 3935, 3936, 0, 0, 0,
	0, 3940, 0, 0, 0, 3943, 3944, 0, 0, 0,
	0, 0, 2876, 2878, 0, 0, 2881, 0, 1163, 2886,
	0, 2891, 2888, 2889, 0, 2892, 2885, 0, 2895, 2894,
	2896, 0, 2897, 2898, 2899, 0, 0, 2901, 2903, 2904,
	2906, 2907, 2908, 0, 0, 0, 2879, 2910, 0, 0,
	0, 0, 0, 0, 0, 639, 2912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2516,
	1660, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2537, 0, 0,
	0, 0, 0, 2539, 2540, 0, 0, 0, 1609, 2545,
	0, 0, 0, 0, 0, 158, 158, 0, 0, 0,
	658, 0, 2175, 4453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 158, 158, 158,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 158, 160, 0,
	2874, 658, 0, 0, 0, 0, 0, 4052, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 0, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 2274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 4087, 4088, 4089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 658, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2359, 0, 0, 0, 0, 0, 4136, 0, 0,
	0, 1085, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 3635, 3636,
	3637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1191, 0, 0, 0, 160, 0, 0, 158, 158, 158,
	0, 0, 4163, 0, 0, 1087, 0, 3656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3663, 0, 4173,
	495, 0, 2274, 0, 0, 1155, 0, 0, 0, 0,
	0, 0, 4181, 3674, 3675, 3676, 3677, 0, 0, 0,
	0, 3682, 0, 0, 0, 0, 0, 2704, 0, 0,
	0, 0, 3692, 3693, 0, 0, 0, 2551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 2653, 0, 0, 0, 0, 0, 2677,
	0, 3702, 0, 0, 0, 2561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 2652, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 158, 158, 2674, 1301,
	0, 158, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 1677, 1678, 1679, 1680, 1681, 1682,
	2640, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 0, 1662, 1663, 1664, 1644, 1643,
	1675, 1645, 1648, 1642, 1646, 1641, 0, 0, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2643,
	2642, 2655, 2662, 2641, 2654, 2645, 0, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2687,
	0, 0, 0, 4391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2665, 2663, 2658, 0,
	0, 0, 0, 2660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 2698, 2649, 2648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2650, 2651, 0, 0, 2668, 0, 2659, 2661, 2664,
	2666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 4528, 0,
	0, 0, 0, 4531, 0, 2850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3937, 3938, 3939, 0, 3941, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 3950, 0,
	3953, 3954, 0, 0, 4589, 0, 0, 0, 0, 0,
	0, 3958, 158, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 495, 495,
	495, 0, 0, 0, 1085, 0, 0, 2978, 0, 0,
	0, 0, 160, 160, 160, 160, 160, 0, 160, 0,
	0, 0, 0, 0, 2670, 0, 0, 0, 0, 0,
	0, 3991, 0, 0, 0, 0, 3008, 0, 0, 3994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2681, 0, 0, 0, 4655, 0, 0,
	0, 0, 0, 0, 0, 0, 2647, 0, 0, 0,
	0, 0, 658, 158, 0, 0, 0, 0, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 1087,
	0, 0, 0, 0, 2274, 0, 2671, 2672, 0, 0,
	2675, 0, 4064, 2680, 0, 2685, 2682, 2683, 0, 2686,
	2679, 0, 2689, 2688, 2690, 0, 2691, 2692, 2693, 0,
	0, 2695, 2696, 2697, 2699, 2700, 2701, 0, 0, 0,
	2673, 2703, 0, 0, 0, 0, 4080, 0, 0, 0,
	2667, 0, 160, 160, 0, 0, 0, 659, 0, 2176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 160, 160, 160, 160, 0, 0,
	4105, 4106, 4107, 4108, 0, 0, 659, 742, 0, 0,
	4112, 4113, 0, 0, 160, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 4122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 492, 160, 0,
	0, 0, 0, 0, 2669, 495, 159, 0, 0, 2275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 158, 159, 0, 158, 0, 0, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 4171,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 1156,
	0, 0, 494, 0, 0, 0, 0, 0, 659, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 4194, 4195, 4196, 4197, 0, 0,
	0, 0, 492, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 1085, 0, 0, 0,
	0, 1085, 1621, 4226, 160, 160, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 2275,
	0, 0, 1159, 0, 0, 0, 0, 0, 0, 4304,
	4305, 0, 0, 0, 3375, 0, 0, 0, 0, 0,
	0, 0, 0, 4315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4324, 0, 0, 0, 0, 0,
	0, 0, 2911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4344, 0, 0, 0, 0, 4355, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 1717, 556,
	2175, 0, 0, 3453, 2883, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1717, 556, 0, 0, 1750, 0, 0, 160, 0, 0,
	0, 0, 0, 160, 160, 0, 0, 0, 160, 160,
	2872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2880, 1609, 1609, 42, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4401,
	71, 0, 0, 4404, 0, 0, 93, 0, 0, 47,
	75, 76, 0, 0, 0, 2640, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3546, 0, 0, 2274, 0, 63, 0, 0,
	2106, 89, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2893, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	2882, 2905, 492, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 3303, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 80, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 159, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 77, 0, 0, 0, 4588, 0, 0, 4590, 4591,
	0, 0, 494, 2900, 2180, 0, 0, 0, 0, 0,
	0, 4602, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2909, 0,
	0, 0, 0, 0, 0, 0, 2180, 160, 2180, 2890,
	0, 2317, 0, 0, 0, 0, 0, 42, 2318, 0,
	0, 69, 70, 2180, 2324, 2180, 4632, 0, 0, 0,
	0, 71, 0, 0, 0, 160, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 158, 0, 0, 78,
	0, 79, 159, 1085, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 492, 160,
	2902, 659, 89, 60, 0, 0, 0, 0, 4282, 3787,
	0, 0, 0, 0, 3791, 0, 0, 158, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 1085, 0, 4275,
	0, 0, 0, 0, 4693, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 2180, 0, 0, 1154, 494, 494,
	494, 494, 3837, 0, 0, 0, 494, 494, 0, 494,
	0, 0, 0, 0, 82, 83, 0, 0, 0, 2875,
	0, 0, 494, 494, 0, 158, 494, 0, 0, 0,
	0, 64, 81, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2887, 659,
	160, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 2515, 0, 96, 0, 0, 0, 0,
	0, 4276, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 2275, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 2876, 2878, 0, 0, 2881, 658, 0, 2886, 0,
	2891, 2888, 2889, 0, 2892, 2885, 0, 2895, 2894, 2896,
	0, 2897, 2898, 2899, 0, 0, 2901, 2903, 2904, 2906,
	2907, 2908, 0, 0, 0, 2879, 2910, 0, 0, 0,
	0, 0, 0, 0, 589, 2912, 583, 594, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	0, 0, 69, 70, 0, 4278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285,
	4286, 4283, 0, 4284, 3303, 4288, 0, 2175, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 84, 0, 87, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2874,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	160, 0, 0, 160, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 4289, 4277, 0, 66, 67, 73, 0, 74,
	0, 0, 158, 575, 574, 577, 0, 158, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 586, 0, 0, 0, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 492, 492, 492, 492, 0,
	0, 494, 0, 0, 0, 0, 2577, 2176, 0, 0,
	159, 159, 159, 159, 159, 0, 159, 581, 0, 0,
	2589, 0, 0, 0, 0, 2589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 580, 587, 2122, 591, 592, 595, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 0,
	85, 0, 0, 0, 0, 0, 4200, 0, 0, 0,
	2725, 0, 2275, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 2747, 0, 0,
	1085, 1085, 0, 658, 0, 0, 2180, 0, 4187, 0,
	159, 159, 658, 158, 0, 0, 0, 2177, 0, 3303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 159, 159, 159, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4356, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 494, 1085, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 159, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2273, 585, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2984, 2988, 0, 0, 160, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 3010, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 495, 495, 495, 495, 2633,
	2634, 0, 0, 495, 495, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	495, 0, 160, 495, 0, 2589, 0, 159, 0, 0,
	0, 3036, 0, 2589, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 0, 159, 159, 494, 0,
	0, 158, 2180, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	1677, 1678, 1679, 1680, 1681, 1682, 0, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	0, 1662, 1663, 1664, 1644, 1643, 1675, 1645, 1648, 1642,
	1646, 1641, 0, 659, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 3186, 0, 0, 0, 494,
	0, 494, 0, 3186, 3186, 3186, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2180, 0, 0, 3303, 2176, 0, 0, 0, 158, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 3267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 1085, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3420, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 3428, 3429, 3430, 159, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	3060, 495, 0, 0, 0, 0, 3186, 3186, 0, 3303,
	0, 0, 0, 0, 3097, 0, 0, 0, 495, 0,
	0, 0, 0, 3108, 0, 0, 3466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3128,
	3129, 3130, 3131, 3132, 3133, 3134, 3135, 0, 0, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
	3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
	3159, 3160, 0, 3174, 3175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3519, 0, 0, 2725, 159, 0,
	3525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2725, 658, 2725, 0, 0, 0, 3545, 0, 0, 0,
	0, 0, 0, 2725, 0, 2725, 3554, 2725, 2725, 2725,
	2725, 0, 0, 0, 0, 0, 0, 0, 0, 2273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 3186, 659,
	160, 0, 0, 0, 3634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 3315, 3316, 3317, 0, 3321, 3322,
	3323, 3324, 3325, 0, 0, 3328, 3329, 3330, 3331, 3332,
	3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342,
	3343, 3344, 0, 3346, 3347, 3348, 3349, 3350, 3351, 0,
	3354, 3355, 0, 0, 0, 0, 1085, 0, 0, 2180,
	0, 0, 0, 0, 2725, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 159, 0,
	0, 159, 0, 1755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 495, 0,
	495, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2988, 0, 0, 159, 0, 89, 0, 0, 0,
	492, 0, 4282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3186, 0, 4275, 0, 0, 0, 0, 4687, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	3533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2177, 3572, 3573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 495, 0, 0, 160, 96,
	0, 0, 0, 0, 0, 4276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1750,
	2273, 0, 0, 0, 0, 0, 0, 3918, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 2180, 0, 0, 495, 0, 495, 0,
	0, 0, 0, 0, 495, 0, 69, 70, 0, 4278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 3726, 0,
	3728, 0, 0, 0, 0, 160, 3734, 3735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 1085, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 3186, 0,
	0, 3186, 0, 0, 0, 0, 0, 0, 0, 495,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 492, 0, 0, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 4066, 4681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 4073, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2180, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 159, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 492, 0, 0, 0, 0,
	4276, 0, 0, 492, 492, 492, 492, 0, 0, 0,
	0, 492, 492, 0, 492, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 492, 492, 0,
	159, 492, 4282, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4275, 0, 0, 0, 0, 4673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 3186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 4210, 0, 0, 3967, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4276, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3186,
	71, 0, 2177, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 1085, 69, 70, 0, 4278,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 4275, 0,
	0, 0, 0, 4646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 2180, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 4210, 47, 49, 90, 56, 55, 58,
	159, 0, 0, 0, 96, 0, 0, 0, 0, 4128,
	4276, 4130, 4131, 0, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 42, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 0, 0, 0,
	71, 0, 4282, 0, 492, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 59, 61, 4275, 0, 0, 0, 87, 4628, 492,
	0, 0, 0, 0, 2180, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	3186, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2180, 85,
	0, 69, 70, 0, 4278, 0, 0, 0, 4275, 0,
	0, 1085, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 2180, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4276, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 1647, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 4312, 0, 96, 0, 59, 61, 0, 0,
	4276, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 159, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 85, 0, 69, 70, 0, 4278,
	1661, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 69, 70, 0, 4278, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 4625, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 492, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 1674, 1677, 1678, 1679, 1680, 1681, 1682, 0, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 0, 1662, 1663, 1664, 1644, 1643, 1675, 1645,
	1648, 1642, 1646, 1641, 0, 492, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 492, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1665, 0, 85,
	0, 0, 0, 0, 492, 0, 492, 0, 0, 0,
	901, 1043, 492, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 706, 856, 889, 259, 705, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 159, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 703, 720, 859, 809, 4370, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 492, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 706, 856, 889, 259,
	705, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 695, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 703, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1033, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 706, 856, 889, 259, 705, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 703, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 2237, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 706, 856, 889, 259,
	705, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 703, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 699, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1033, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 706, 856, 889, 259, 705, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 2446, 1050, 89, 0,
	0, 0, 0, 2448, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 2447, 938, 983,
	1062, 854, 703, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 706, 856, 889, 259,
	705, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 0, 0, 0, 2346, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 703, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 2237, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1033, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 706, 856, 889, 259, 705, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	0, 0, 0, 2343, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 703, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 2237, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 42, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 706, 856, 889, 259,
	705, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 703, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1540, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1538,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 706, 856, 889, 259, 705, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	2104, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 703, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 706, 856, 889, 259,
	705, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 703, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1033, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 1122, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 948, 1040, 862, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	802, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 1105, 856, 889, 259,
	1103, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1049,
	909, 978, 1050, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1062, 854, 1122, 720, 859,
	809, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1033, 926, 301, 191,
	1039, 924, 823, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1018, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 4532, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 811, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 877, 1065, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1040, 862, 808, 1016, 819, 820, 821, 822,
	988, 1059, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 802, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 810, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 794, 795,
	928, 986, 875, 973, 1049, 909, 978, 1050, 89, 0,
	0, 0, 0, 731, 558, 732, 734, 735, 736, 737,
	0, 0, 171, 733, 738, 739, 740, 0, 938, 983,
	1062, 854, 1122, 720, 859, 809, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 717, 718, 0, 0, 0, 0,
	825, 0, 719, 0, 869, 715, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 721, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	797, 1033, 926, 301, 191, 1039, 924, 823, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 807, 198, 313, 1018, 890, 903, 728, 0,
	392, 979, 467, 709, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 811, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	708, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 729, 730, 246, 800, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 877, 1065,
	824, 812, 813, 816, 960, 961, 814, 817, 818, 826,
	798, 799, 801, 803, 804, 805, 2349, 2350, 2351, 808,
	1016, 819, 820, 821, 822, 988, 1059, 796, 242, 745,
	838, 839, 840, 746, 841, 842, 747, 748, 843, 844,
	845, 846, 749, 847, 848, 849, 827, 828, 829, 830,
	831, 832, 833, 834, 837, 835, 836, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	806, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 1826, 2005, 0, 3706, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	478, 190, 3707, 314, 1981, 498, 3708, 423, 339, 501,
	500, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 89, 0, 695, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 499, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 3710, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 177, 198, 313,
	1971, 1812, 1829, 245, 2179, 392, 1924, 467, 497, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 180, 406,
	405, 1844, 292, 1958, 181, 170, 385, 182, 302, 204,
	1983, 486, 220, 309, 450, 496, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1954,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 192, 193, 1991, 1992,
	194, 1886, 2001, 1774, 0, 1969, 188, 189, 174, 179,
	1933, 2029, 1846, 242, 164, 1770, 1771, 1772, 165, 1876,
	1877, 167, 168, 1987, 1986, 1985, 1988, 169, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 3709,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 172, 478, 190, 2016, 314, 1981,
	498, 476, 423, 339, 501, 500, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1919, 2003, 1830, 499, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 3205, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 191, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 177, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 2277, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 180, 406, 405, 1844, 292, 1958, 181,
	170, 385, 182, 302, 204, 1983, 486, 220, 309, 450,
	2276, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1954, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 192, 193, 1991, 1992, 194, 1886, 2001, 1774, 0,
	1969, 188, 189, 174, 179, 1933, 2029, 1846, 242, 164,
	1770, 1771, 1772, 165, 1876, 1877, 167, 168, 1987, 1986,
	1985, 1988, 169, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	478, 190, 2016, 314, 1981, 498, 476, 423, 339, 501,
	500, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 499, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 177, 198, 313,
	1971, 1812, 1829, 245, 2179, 392, 1924, 467, 497, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 180, 406,
	405, 1844, 292, 1958, 181, 170, 385, 182, 302, 204,
	1983, 486, 220, 309, 450, 496, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1954,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 192, 193, 1991, 1992,
	194, 1886, 2001, 1774, 0, 1969, 188, 189, 174, 179,
	1933, 2029, 1846, 242, 164, 1770, 1771, 1772, 165, 1876,
	1877, 167, 168, 1987, 1986, 1985, 1988, 169, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 172, 478, 190, 2016, 314, 1981,
	498, 476, 423, 339, 501, 500, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1919, 2003, 1830, 499, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 2270, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 191, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 177, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 2277, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 180, 406, 405, 1844, 292, 1958, 181,
	170, 385, 182, 302, 204, 1983, 486, 220, 309, 450,
	2276, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1954, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 192, 193, 1991, 1992, 194, 1886, 2001, 1774, 0,
	1969, 188, 189, 174, 179, 1933, 2029, 1846, 242, 164,
	1770, 1771, 1772, 165, 1876, 1877, 167, 168, 1987, 1986,
	1985, 1988, 169, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	478, 190, 2016, 314, 1981, 498, 476, 423, 339, 501,
	500, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 499, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 177, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 2277, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 180, 406,
	405, 1844, 292, 1958, 181, 170, 385, 182, 302, 204,
	1983, 486, 220, 309, 450, 2276, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1954,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 192, 193, 1991, 1992,
	194, 1886, 2001, 1774, 0, 1969, 188, 189, 174, 179,
	1933, 2029, 1846, 242, 164, 1770, 1771, 1772, 165, 1876,
	1877, 167, 168, 1987, 1986, 1985, 1988, 169, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	901, 1043, 0, 0, 448, 1110, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 1143, 314, 0,
	498, 476, 423, 339, 501, 500, 943, 0, 1117, 1130,
	928, 986, 875, 973, 1049, 909, 978, 1050, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1125, 1139, 1106, 499, 938, 983,
	1062, 854, 1122, 0, 859, 1094, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 869, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1132, 1033, 926, 301, 191, 1039, 924, 1109, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1018, 890, 903, 245, 3305,
	392, 979, 467, 2362, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 1128, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	2361, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1095, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 1100, 0,
	1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141, 1142, 1129,
	1096, 192, 193, 1137, 1138, 194, 948, 1040, 862, 0,
	1016, 188, 189, 174, 179, 988, 1059, 1108, 242, 164,
	1091, 1092, 1093, 165, 1112, 1113, 167, 168, 1135, 1134,
	1133, 1136, 169, 1145, 1144, 1146, 1097, 1104, 1107, 1114,
	1115, 1116, 1123, 1124, 1131, 1126, 1127, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1120, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	478, 190, 2016, 314, 1981, 498, 476, 423, 339, 501,
	500, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 499, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 2858, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 177, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 497, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 180, 406,
	405, 1844, 292, 1958, 181, 170, 385, 182, 302, 204,
	1983, 486, 220, 309, 450, 496, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1954,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 188, 189, 174, 179,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	901, 1043, 0, 0, 448, 1110, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 1143, 314, 0,
	498, 476, 423, 339, 501, 500, 943, 0, 1117, 1130,
	928, 986, 875, 973, 1049, 909, 978, 1050, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1125, 1139, 1106, 499, 938, 983,
	1062, 854, 1122, 0, 859, 1094, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 869, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1132, 1033, 926, 301, 191, 1039, 924, 1109, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1018, 890, 903, 245, 0,
	392, 979, 467, 2362, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 1128, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	2361, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1095, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 1100, 0,
	1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141, 1142, 1129,
	1096, 192, 193, 1137, 1138, 194, 948, 1040, 862, 0,
	1016, 188, 189, 174, 179, 988, 1059, 1108, 242, 164,
	1091, 1092, 1093, 165, 1112, 1113, 167, 168, 1135, 1134,
	1133, 1136, 169, 1145, 1144, 1146, 1097, 1104, 1107, 1114,
	1115, 1116, 1123, 1124, 1131, 1126, 1127, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1120, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 172,
	478, 190, 2016, 314, 1981, 498, 476, 423, 339, 501,
	500, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1919,
	2003, 1830, 499, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 191,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 177, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 497, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 180, 406,
	405, 1844, 292, 1958, 181, 170, 385, 182, 302, 204,
	1983, 486, 220, 309, 450, 496, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1954,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 188, 189, 174, 179,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	901, 1043, 0, 0, 448, 1110, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 1143, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 1117, 1130,
	928, 986, 875, 973, 1049, 909, 978, 1050, 0, 0,
	0, 0, 0, 0, 558, 0, 1451, 0, 0, 1452,
	0, 0, 171, 0, 1125, 1139, 1106, 0, 938, 983,
	1062, 854, 1122, 0, 859, 1094, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 869, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1132, 1033, 926, 301, 191, 1039, 924, 1109, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1018, 890, 903, 245, 0,
	392, 979, 467, 1089, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 1128, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	1088, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1095, 1052, 211, 867, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 1100, 0,
	1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141, 1142, 1129,
	1096, 192, 193, 1137, 1138, 194, 948, 1040, 862, 0,
	1016, 188, 189, 174, 179, 988, 1059, 1108, 242, 164,
	1091, 1092, 1093, 165, 1112, 1113, 167, 168, 1135, 1134,
	1133, 1136, 169, 1145, 1144, 1146, 1097, 1104, 1107, 1114,
	1115, 1116, 1123, 1124, 1131, 1126, 1127, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1120, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	1110, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 1105, 856, 889, 259,
	1103, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 1143, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 1117, 1130, 928, 986, 875, 973, 1049,
	909, 978, 1050, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1125,
	1139, 1106, 0, 938, 983, 1062, 854, 1122, 0, 859,
	1094, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 869,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 1132, 1033, 926, 301, 191,
	1039, 924, 1109, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 177, 198, 313,
	1018, 890, 903, 245, 0, 392, 979, 467, 1089, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 1128, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 1088, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 463, 464, 246, 1095,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 1100, 0, 1102, 1098, 1101, 1099, 1118,
	1119, 1140, 1141, 1142, 1129, 1096, 192, 193, 1137, 1138,
	194, 948, 1040, 862, 0, 1016, 188, 189, 174, 179,
	988, 1059, 1108, 242, 164, 1091, 1092, 1093, 165, 1112,
	1113, 167, 168, 1135, 1134, 1133, 1136, 169, 1145, 1144,
	1146, 1097, 1104, 1107, 1114, 1115, 1116, 1123, 1124, 1131,
	1126, 1127, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1120, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 1110, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 1143, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 1117, 1130,
	928, 986, 875, 973, 1049, 909, 978, 1050, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1125, 1139, 1106, 0, 938, 983,
	1062, 854, 1122, 0, 859, 1094, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 869, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1132, 1033, 926, 301, 191, 1039, 924, 1109, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1018, 890, 903, 245, 0,
	392, 979, 467, 1089, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 1128, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	1088, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1095, 1052, 211, 1083, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 1079, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 1084, 1082, 1073, 1074, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 1100, 0,
	1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141, 1142, 1129,
	1096, 192, 193, 1137, 1138, 194, 948, 1040, 862, 0,
	1016, 188, 189, 174, 179, 988, 1059, 1108, 242, 164,
	1091, 1092, 1093, 165, 1112, 1113, 167, 168, 1135, 1134,
	1133, 1136, 169, 1145, 1144, 1146, 1097, 1104, 1107, 1114,
	1115, 1116, 1123, 1124, 1131, 1126, 1127, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1120, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 1080, 1081, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 901, 1043, 0, 0, 448,
	1110, 1047, 888, 911, 1057, 917, 919, 984, 863, 959,
	357, 908, 864, 0, 0, 855, 1105, 856, 889, 259,
	1103, 1017, 962, 1045, 945, 977, 987, 258, 244, 952,
	951, 1034, 900, 899, 982, 1030, 1044, 0, 0, 172,
	478, 190, 1143, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 1117, 1130, 928, 986, 875, 973, 1049,
	909, 978, 1050, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1125,
	1139, 1106, 0, 938, 983, 1062, 854, 1122, 0, 859,
	1094, 0, 1035, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1012, 918, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 869,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 1132, 1033, 926, 301, 191,
	1039, 924, 1109, 992, 870, 1021, 1055, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 177, 198, 313,
	1018, 890, 903, 245, 0, 392, 979, 467, 1089, 278,
	0, 965, 391, 315, 460, 993, 1041, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1011,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1023, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1019, 1006, 1025, 886, 872, 878, 873,
	902, 1042, 293, 285, 1026, 1024, 904, 361, 224, 956,
	949, 942, 1128, 471, 1058, 257, 1008, 473, 180, 406,
	405, 916, 292, 1009, 181, 170, 385, 182, 302, 204,
	1029, 486, 220, 309, 450, 1088, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1048, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 1617, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1037, 1020, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 463, 464, 246, 1095,
	1052, 211, 867, 1051, 349, 356, 348, 1054, 1053, 459,
	1038, 968, 955, 953, 861, 1036, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1046, 1064, 439, 226,
	879, 1013, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1061, 360, 393, 233,
	469, 421, 262, 1100, 0, 1102, 1098, 1101, 1099, 1118,
	1119, 1140, 1141, 1142, 1129, 1096, 192, 193, 1137, 1138,
	194, 948, 1040, 862, 0, 1016, 188, 189, 174, 179,
	988, 1059, 1108, 242, 164, 1091, 1092, 1093, 165, 1112,
	1113, 167, 168, 1135, 1134, 1133, 1136, 169, 1145, 1144,
	1146, 1097, 1104, 1107, 1114, 1115, 1116, 1123, 1124, 1131,
	1126, 1127, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1120, 199, 212, 312, 1060,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1014, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1063, 346, 1032, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1010, 1015, 1022, 1027, 1028, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1031, 1056, 976, 990,
	901, 1043, 0, 0, 448, 1110, 1047, 888, 911, 1057,
	917, 919, 984, 863, 959, 357, 908, 864, 0, 0,
	855, 1105, 856, 889, 259, 1103, 1017, 962, 1045, 945,
	977, 987, 258, 244, 952, 951, 1034, 900, 899, 982,
	1030, 1044, 0, 0, 172, 478, 190, 1143, 314, 0,
	0, 476, 423, 339, 0, 0, 943, 0, 1117, 1130,
	928, 986, 875, 973, 1049, 909, 978, 1050, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1125, 1139, 1106, 0, 938, 983,
	1062, 854, 1122, 0, 859, 1094, 0, 1035, 896, 897,
	263, 0, 0, 0, 0, 0, 0, 0, 941, 958,
	1002, 925, 0, 468, 989, 998, 1012, 918, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 869, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 0, 874, 852, 894, 1004, 853, 851, 340, 866,
	1132, 1033, 926, 301, 191, 1039, 924, 1109, 992, 870,
	1021, 1055, 912, 311, 868, 195, 865, 871, 910, 353,
	1001, 1007, 177, 198, 313, 1018, 890, 903, 245, 0,
	392, 979, 467, 1089, 278, 0, 965, 391, 315, 460,
	993, 1041, 466, 913, 442, 477, 482, 271, 946, 234,
	420, 261, 254, 895, 1011, 858, 284, 375, 249, 306,
	929, 985, 891, 241, 996, 972, 1023, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1019, 1006,
	1025, 886, 872, 878, 873, 902, 1042, 293, 285, 1026,
	1024, 904, 361, 224, 956, 949, 942, 1128, 471, 1058,
	257, 1008, 473, 180, 406, 405, 916, 292, 1009, 181,
	170, 385, 182, 302, 204, 1029, 486, 220, 309, 450,
	1088, 277, 352, 981, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1005, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1048, 322, 266, 270,
	286, 297, 980, 389, 427, 474, 974, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	1070, 229, 407, 410, 485, 1003, 216, 237, 428, 210,
	1037, 1020, 967, 931, 937, 860, 0, 209, 932, 933,
	934, 935, 936, 999, 893, 905, 885, 975, 884, 281,
	991, 463, 464, 246, 1095, 1052, 211, 1083, 1051, 349,
	356, 348, 1054, 1053, 459, 1038, 968, 955, 953, 861,
	1036, 966, 954, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 1079, 957, 425, 320, 0, 206, 0,
	424, 1046, 1064, 439, 226, 879, 1013, 454, 178, 381,
	227, 279, 267, 372, 1084, 1082, 1073, 1074, 308, 316,
	995, 1061, 360, 393, 233, 469, 421, 262, 1100, 0,
	1102, 1098, 1101, 1099, 1118, 1119, 1140, 1141, 1142, 1129,
	1096, 192, 193, 1137, 1138, 194, 948, 1040, 862, 0,
	1016, 188, 189, 174, 179, 988, 1059, 1108, 242, 164,
	1091, 1092, 1093, 165, 1112, 1113, 167, 168, 1135, 1134,
	1133, 1136, 169, 1145, 1144, 1146, 1097, 1104, 1107, 1114,
	1115, 1116, 1123, 1124, 1131, 1126, 1127, 0, 944, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1120, 199, 212, 312, 1060, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1014, 971, 0, 921,
	923, 922, 881, 883, 882, 880, 1063, 346, 1032, 850,
	857, 876, 887, 892, 898, 906, 907, 915, 920, 930,
	939, 940, 950, 963, 964, 970, 994, 997, 1010, 1015,
	1022, 1027, 1028, 472, 252, 947, 969, 1000, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 1080, 1081, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 927, 196, 0, 0, 202, 0, 203, 205, 914,
	201, 1031, 1056, 976, 990, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	478, 0, 2016, 314, 1981, 0, 476, 423, 339, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 3163, 3168,
	0, 3171, 3173, 3172, 0, 0, 0, 3165, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 0, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 0, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 3166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 0, 406,
	405, 1844, 292, 1958, 0, 0, 385, 3167, 302, 204,
	1983, 486, 220, 309, 450, 0, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1954,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 0, 0, 0, 0,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 0, 478, 0, 2016, 314, 1981,
	0, 476, 423, 339, 0, 0, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 3970, 3168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 2003, 1830, 0, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 0, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 0, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 0, 406, 405, 1844, 292, 1958, 0,
	0, 385, 0, 302, 204, 1983, 486, 220, 309, 450,
	0, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1954, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	478, 0, 2016, 314, 1981, 0, 476, 423, 339, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 3922, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 0, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 0, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 0, 406,
	405, 1844, 292, 1958, 0, 0, 385, 0, 302, 204,
	1983, 486, 220, 309, 450, 0, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1954,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 0, 0, 0, 0,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 0, 478, 0, 2016, 314, 1981,
	0, 476, 423, 339, 0, 0, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 2003, 1830, 0, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 3218, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 0, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 0, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 0, 406, 405, 1844, 292, 1958, 0,
	0, 385, 0, 302, 204, 1983, 486, 220, 309, 450,
	0, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1954, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	478, 0, 2016, 314, 1981, 0, 476, 423, 339, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 0, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 0, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 0, 406,
	405, 1844, 292, 1958, 0, 0, 385, 0, 302, 204,
	1983, 486, 220, 309, 450, 0, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1954,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 2323, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 0, 0, 0, 0,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 0, 478, 0, 2016, 314, 1981,
	0, 476, 423, 339, 0, 0, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 2003, 1830, 0, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 0, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 0, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 1787, 1828, 2004, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 0, 406, 405, 1844, 292, 1958, 0,
	0, 385, 0, 302, 204, 1983, 486, 220, 309, 450,
	0, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1954, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 4093, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	478, 0, 2016, 314, 1981, 0, 476, 423, 339, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 0, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 0, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 0, 406,
	405, 1844, 292, 1958, 0, 0, 385, 0, 302, 204,
	1983, 486, 220, 309, 450, 0, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1954,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 0, 0, 0, 0,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	1826, 2005, 0, 1967, 448, 1860, 2009, 1809, 1839, 2027,
	1845, 1848, 1929, 1775, 1898, 357, 1836, 1776, 1759, 1814,
	1763, 1827, 1764, 1811, 259, 1807, 1970, 1901, 2007, 1880,
	1922, 1932, 258, 244, 1890, 1889, 1995, 1825, 1824, 1927,
	1984, 2006, 1879, 0, 0, 478, 0, 2016, 314, 1981,
	0, 476, 423, 339, 0, 0, 1875, 1990, 1896, 1959,
	1858, 1931, 1791, 1914, 2011, 1837, 1923, 2012, 0, 0,
	0, 0, 0, 0, 4372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1919, 2003, 1830, 0, 1870, 1928,
	2032, 1762, 1915, 0, 1767, 1778, 2026, 1996, 1821, 1822,
	263, 0, 0, 0, 0, 0, 0, 0, 1873, 1897,
	1949, 1855, 0, 468, 1934, 1944, 1962, 1847, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	1912, 0, 0, 0, 1783, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 1790, 1760, 1818, 1951, 1761, 1758, 340, 1779,
	1964, 1994, 1856, 301, 0, 2000, 1854, 1853, 1938, 1784,
	1974, 2024, 1840, 311, 1782, 195, 1777, 1785, 1838, 353,
	1948, 1956, 0, 198, 313, 1971, 1812, 1829, 245, 0,
	392, 1924, 467, 0, 278, 0, 1905, 391, 315, 460,
	1939, 2002, 466, 1841, 442, 477, 482, 271, 1881, 234,
	420, 261, 254, 1820, 1961, 1766, 284, 375, 249, 306,
	1859, 1930, 1813, 241, 1942, 1913, 1976, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1972, 1955,
	1978, 1806, 1786, 1797, 4375, 4376, 4377, 293, 285, 1979,
	1977, 1831, 361, 224, 1894, 1887, 1874, 1952, 471, 2028,
	257, 1957, 473, 0, 406, 405, 1844, 292, 1958, 0,
	0, 385, 0, 302, 204, 1983, 486, 220, 309, 450,
	0, 277, 352, 1926, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1954, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2010, 322, 266, 270,
	286, 297, 1925, 389, 427, 474, 1916, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 1950, 216, 237, 428, 210,
	1998, 1973, 1907, 1862, 1868, 1768, 0, 209, 1863, 1864,
	1865, 1866, 1867, 1946, 1817, 1833, 1805, 1920, 1804, 281,
	1937, 463, 464, 246, 1780, 2018, 211, 1781, 2017, 349,
	356, 348, 2021, 2019, 459, 1999, 1908, 1893, 1891, 1773,
	1997, 1906, 1892, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 1895, 425, 320, 0, 206, 0,
	424, 2008, 2034, 439, 226, 1799, 1965, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	1941, 2031, 360, 393, 233, 469, 421, 262, 1795, 0,
	1798, 1793, 1796, 1794, 1899, 1900, 2013, 2014, 2015, 1953,
	1788, 0, 0, 1991, 1992, 0, 1886, 2001, 1774, 0,
	1969, 0, 0, 0, 0, 1933, 2029, 1846, 242, 0,
	1770, 1771, 1772, 0, 1876, 1877, 0, 0, 1987, 1986,
	1985, 1988, 0, 2022, 2020, 2023, 1789, 1810, 1832, 1882,
	1883, 1885, 1917, 1918, 1963, 1936, 1945, 1819, 1878, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	1904, 199, 212, 312, 2030, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 1966, 1911, 0, 1850,
	1852, 1851, 1801, 1803, 1802, 1800, 2033, 346, 1993, 1757,
	1765, 1792, 1808, 1815, 1823, 1834, 1835, 1843, 1849, 1861,
	1871, 1872, 1888, 1902, 1903, 1910, 1940, 1943, 1960, 1968,
	1975, 1980, 1982, 472, 252, 1884, 1909, 1947, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 1857, 196, 0, 0, 202, 0, 203, 205, 1842,
	201, 1989, 2025, 1921, 1935, 1826, 2005, 0, 1967, 448,
	1860, 2009, 1809, 1839, 2027, 1845, 1848, 1929, 1775, 1898,
	357, 1836, 1776, 1759, 1814, 1763, 1827, 1764, 1811, 259,
	1807, 1970, 1901, 2007, 1880, 1922, 1932, 258, 244, 1890,
	1889, 1995, 1825, 1824, 1927, 1984, 2006, 1879, 0, 0,
	478, 0, 2016, 314, 1981, 0, 476, 423, 339, 0,
	0, 1875, 1990, 1896, 1959, 1858, 1931, 1791, 1914, 2011,
	1837, 1923, 2012, 0, 0, 0, 0, 0, 0, 3168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	2003, 1830, 0, 1870, 1928, 2032, 1762, 1915, 0, 1767,
	1778, 2026, 1996, 1821, 1822, 263, 0, 0, 0, 0,
	0, 0, 0, 1873, 1897, 1949, 1855, 0, 468, 1934,
	1944, 1962, 1847, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 1912, 0, 0, 0, 1783,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 1790, 1760, 1818,
	1951, 1761, 1758, 340, 1779, 1964, 1994, 1856, 301, 0,
	2000, 1854, 1853, 1938, 1784, 1974, 2024, 1840, 311, 1782,
	195, 1777, 1785, 1838, 353, 1948, 1956, 0, 198, 313,
	1971, 1812, 1829, 245, 0, 392, 1924, 467, 0, 278,
	0, 1905, 391, 315, 460, 1939, 2002, 466, 1841, 442,
	477, 482, 271, 1881, 234, 420, 261, 254, 1820, 1961,
	1766, 284, 375, 249, 306, 1859, 1930, 1813, 241, 1942,
	1913, 1976, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1972, 1955, 1978, 1806, 1786, 1797, 1787,
	1828, 2004, 293, 285, 1979, 1977, 1831, 361, 224, 1894,
	1887, 1874, 1952, 471, 2028, 257, 1957, 473, 0, 406,
	405, 1844, 292, 1958, 0, 0, 385, 0, 302, 204,
	1983, 486, 220, 309, 450, 0, 277, 352, 1926, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1954,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2010, 322, 266, 270, 286, 297, 1925, 389, 427,
	474, 1916, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1950, 216, 237, 428, 210, 1998, 1973, 1907, 1862, 1868,
	1768, 0, 209, 1863, 1864, 1865, 1866, 1867, 1946, 1817,
	1833, 1805, 1920, 1804, 281, 1937, 463, 464, 246, 1780,
	2018, 211, 1781, 2017, 349, 356, 348, 2021, 2019, 459,
	1999, 1908, 1893, 1891, 1773, 1997, 1906, 1892, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1895,
	425, 320, 0, 206, 0, 424, 2008, 2034, 439, 226,
	1799, 1965, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1941, 2031, 360, 393, 233,
	469, 421, 262, 1795, 0, 1798, 1793, 1796, 1794, 1899,
	1900, 2013, 2014, 2015, 1953, 1788, 0, 0, 1991, 1992,
	0, 1886, 2001, 1774, 0, 1969, 0, 0, 0, 0,
	1933, 2029, 1846, 242, 0, 1770, 1771, 1772, 0, 1876,
	1877, 0, 0, 1987, 1986, 1985, 1988, 0, 2022, 2020,
	2023, 1789, 1810, 1832, 1882, 1883, 1885, 1917, 1918, 1963,
	1936, 1945, 1819, 1878, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1904, 199, 212, 312, 2030,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1966, 1911, 0, 1850, 1852, 1851, 1801, 1803, 1802,
	1800, 2033, 346, 1993, 1757, 1765, 1792, 1808, 1815, 1823,
	1834, 1835, 1843, 1849, 1861, 1871, 1872, 1888, 1902, 1903,
	1910, 1940, 1943, 1960, 1968, 1975, 1980, 1982, 472, 252,
	1884, 1909, 1947, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1857, 196, 0, 0,
	202, 0, 203, 205, 1842, 201, 1989, 2025, 1921, 1935,
	589, 448, 583, 594, 576, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 1345, 0, 0, 0, 0,
	0, 259, 0, 0, 584, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	637, 638, 0, 731, 0, 732, 734, 735, 736, 737,
	0, 0, 0, 733, 2315, 3386, 3387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 3381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 0, 575,
	574, 577, 0, 0, 0, 340, 0, 0, 0, 582,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 586, 0, 0,
	198, 313, 590, 0, 0, 245, 0, 392, 2312, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 593, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	578, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 581, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 1348, 408, 455, 222, 426, 579, 580, 587,
	588, 591, 592, 595, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 2313, 2314, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 3398, 1065,
	0, 3388, 3389, 3391, 3399, 3400, 3390, 3392, 3393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3394, 3395, 3396, 3397, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 585, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 0, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 589, 448,
	583, 594, 576, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 568, 0, 0, 0, 0, 0, 259,
	0, 0, 584, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 574, 577,
	0, 0, 0, 340, 0, 0, 0, 582, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 586, 0, 0, 198, 313,
	590, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 593, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 578, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 581, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	571, 408, 455, 222, 426, 579, 580, 587, 588, 591,
	592, 595, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 585, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 2465, 2469, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 2468, 301, 191, 0, 0, 0,
	2461, 0, 2462, 2464, 2463, 311, 1164, 195, 0, 2459,
	2467, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 1158, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 1475,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1477, 1476, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 1471, 1472,
	1470, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	1164, 195, 0, 1160, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 1158, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 3548, 195, 0,
	0, 3547, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3515, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1164, 195, 0, 0, 2467, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2917, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 1164, 195, 0, 0, 2467, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1477, 1476, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 2269, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 0, 196, 42, 448, 202,
	0, 203, 205, 0, 201, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 88, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 96, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 161, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 109, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 673,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3506,
	0, 0, 0, 0, 0, 3508, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 498, 476,
	423, 339, 501, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2042, 2040, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 497, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 496, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 2040,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 498, 476, 423, 339, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1164, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 497, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 496, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3359, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 498, 476, 423, 339,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 497,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 496, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3508, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 478, 190, 0, 314, 0,
	498, 476, 423, 339, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 497, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 486, 220, 309, 450,
	496, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 478,
	190, 0, 314, 0, 498, 476, 423, 339, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 497, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	486, 220, 309, 450, 496, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3215, 680, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 673, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	673, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 548, 545, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 2538, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 478, 190, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 2425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 486, 220, 309, 450, 161, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 2165, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 0, 196, 0, 0, 202, 0,
	203, 205, 448, 201, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 155, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 478, 190, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 486, 220,
	309, 450, 161, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 1488,
	1487, 1497, 1498, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1489, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 653, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 1162, 732, 734, 735, 736, 737,
	0, 0, 0, 733, 2315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 728, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 729, 730, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 4471, 0, 0, 0, 0,
	0, 259, 4469, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 4470, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2989, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 2990, 2991, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1623, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	2469, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	2468, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3562, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 3560, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3558, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 3556, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 3551, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 3538, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 3536,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 3465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 0, 353, 0, 0,
	0, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 0, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 0, 406, 405, 0, 292, 0, 0, 0, 385,
	0, 302, 204, 0, 486, 220, 309, 450, 0, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 0, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3456, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	314, 0, 0, 476, 423, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 195, 0, 0,
	0, 353, 0, 0, 0, 198, 313, 0, 0, 0,
	245, 0, 392, 0, 467, 0, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 477, 482, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 481, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 484, 475, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	471, 0, 257, 0, 473, 0, 406, 405, 0, 292,
	0, 0, 0, 385, 0, 302, 204, 0, 486, 220,
	309, 450, 0, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 0, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 474, 0, 217,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 485, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 483, 341, 383, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 479, 480, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 2588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 2746, 2745, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 0, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 0, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 0, 0, 314, 0,
	0, 476, 423, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 195, 0, 0, 0, 353,
	0, 0, 0, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 0, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 477, 482, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 481, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 484,
	475, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 471, 0,
	257, 0, 473, 0, 406, 405, 0, 292, 0, 0,
	0, 385, 0, 302, 204, 0, 486, 220, 309, 450,
	0, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 0, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 474, 0, 217, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 485, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 483, 341, 383, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 479,
	480, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 314, 0, 0, 476, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 0, 0, 0, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 477,
	482, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 481, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 484, 475, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 471, 0, 257, 0, 473, 0, 406, 405,
	0, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	486, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 474,
	0, 217, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 485, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 483, 341, 383, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 479, 480, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 42, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4282, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4275, 0, 0, 0, 0, 4624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 0, 4623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 4620, 0, 0,
	71, 0, 4282, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4278, 0, 0, 4275, 0, 0, 0, 0, 0, 0,
	4287, 4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0,
	4288, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 69, 70, 0, 4278, 0, 0, 0, 4275, 60,
	0, 0, 0, 4612, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4276, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 4289, 4277, 0,
	66, 67, 73, 0, 74, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 69, 70, 0, 4278, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 71, 0, 0, 0,
	0, 0, 93, 60, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4282, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 59, 61, 0, 4275, 0, 0, 87, 0, 4609,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 0, 4524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 59, 61, 0, 0,
	4276, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 0, 0, 0,
	71, 0, 4282, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 85, 0, 0, 69, 70, 0,
	4278, 59, 61, 4275, 0, 0, 0, 87, 0, 0,
	4287, 4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0,
	4288, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	84, 69, 70, 0, 4278, 0, 0, 0, 4275, 60,
	0, 0, 0, 4516, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4276, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 4289, 4277, 0,
	66, 67, 73, 0, 74, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 4521, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 69, 70, 0, 4278, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 71, 0, 0, 0,
	0, 0, 93, 60, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4282, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 59, 61, 0, 4275, 0, 0, 87, 0, 4514,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 4275, 0,
	0, 0, 0, 4392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 59, 61, 0, 0,
	4276, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 89, 0, 0, 0,
	0, 0, 4282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 69, 70, 0,
	4278, 59, 61, 4275, 0, 0, 0, 87, 0, 0,
	4287, 4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0,
	4288, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	84, 69, 70, 0, 4278, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 4287, 4279, 4280, 4281, 4285, 4286,
	4283, 0, 4284, 0, 4288, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 84, 4276, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 4289, 4277, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4289, 4277, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4287,
	4279, 4280, 4281, 4285, 4286, 4283, 0, 4284, 0, 4288,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 4289, 4277, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	7685, -1000, -498, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2841, -1000, 2841, 316, -1000, 459, -1000, 1439, 870,
	-1000, -1000, -1000, -1000, -1000, 587, 237, 59357, 1101, 53453,
	79993, -219, 4817, 79256, 170, -1000, 170, 418, 55664, 816,
	877, 78519, 2711, 2127, 172, 24, 23, 239, 39447, 1016,
	306, 199, 217, 209, 197, 1308, -1000, 61568, 832, -1000,
	310, -1000, -1000, -1000, -1000, -1000, 54927, 2945, 2994, 2945,
	-1000, 2902, 2923, -1000, -1000, 2902, 2333, 2333, -1000, 61568,
	13787, -1000, -1000, -1000, -1000, -1000, 31152, -1000, 1400, -1000,
	60094, 41658, 2841, -1000, 1086, 1069, -80, 1015, 1015, 934,
	1015, 1015, -462, 1100, -1000, 716, 1651, -1000, -1000, -1000,
	-1000, 1650, 60094, 67464, 1096, 77045, 1016, 1016, 1016, 1016,
	1016, 1016, 1016, 1016, 52716, 60094, -1000, 1288, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60094, 2971,
	2970, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2545, 2544, 51979, 596, 2796, 1646, 321, 1646,
	-1000, -1000, 1603, -1000, 883, 871, 869, 866, 886, 851,
	5, 1598, 1676, 2899, -1000, 2484, 2902, 2902, 1598, -1000,
	845, -1000, -1000, -1000, -1000, -1000, -1000, 1371, -1000, -1000,
	1709, 1709, 564, 1062, 889, 908, 889, 2835, 1643, 2795,
	2792, 2157, 2789, 1601, 2788, 2537, -1000, 1275, -1000, -1000,
	72, -1000, 2126, 60094, -1000, -1000, 1967, 1964, 682, 2408,
	1155, 2580, -1000, -1000, 679, 708, 2528, 814, 2528, 2528,
	2528, 417, 2528, 2528, 22, 2528, 2528, 2528, 325, 2528,
	362, 2528, 2528, 2528, 2528, 2528, -1000, 2281, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38699, 2824, 220, -1000, -142, 189, 2865, 799, -1000, -1000,
	-1000, 320, 1400, 62305, 2475, -1000, 2484, -1000, -1000, -1000,
	2482, 2484, -1000, 2020, 1095, 1016, 660, -1000, 548, -1000,
	-1000, -1000, 2828, 2484, 45346, -1000, -1000, 1520, -1000, 2484,
	2484, 1400, 2889, 1400, 1400, 2887, 2867, 1400, 2754, 28132,
	18317, 2633, 1786, -1000, -1000, -1000, -1000, 1400, 2969, -1000,
	40921, 1270, -1000, 18317, 2769, 2484, 2484, -1000, 1182, 1243,
	-1000, 1114, 1251, -1000, -1000, 19072, 19072, 19072, 19072, 19072,
	19072, 19072, -1000, -1000, -1000, -1000, -1000, -1000, 2246, 2245,
	2244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2484, 1262, 1261, 1258, 2484, 2484, 2484, 2484, 2484,
	-1000, 16807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2484, 2484, 2484, 2484, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 18317,
	2484, 2484, 2484, 2484, 2484, -1000, 2484, 2484, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2484, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2484, 2484, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2484, 1023, 1023, 58620, 2481,
	-27, 30397, -1000, -1000, -1000, -1000, 28887, 65253, 1544, -1000,
	-1000, -1000, -1000, 2785, -1000, -1000, 1252, 1251, 1182, 1169,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2841, 317,
	-1000, 2372, -1000, -1000, 10854, 10854, 10854, 10854, 10854, 10854,
	48294, -1000, -1000, -1000, 2535, 2902, -1000, 1015, 1015, 930,
	2125, 1683, 2124, 78519, 78519, 1015, -1000, 690, 67464, 67464,
	-362, 1015, 790, 67464, 695, 2479, 1061, 2478, 1058, 2256,
	1016, 2578, 60094, 2123, 2122, 78519, 78519, 67464, 67464, 78519,
	-1000, -1000, -1000, 27377, -1000, 1293, 2477, 47557, 46820, 51242,
	51242, -1000, -1000, -1000, 843, -1000, 1646, -1000, 9095, 18317,
	1015, 1015, 60094, 60094, 60094, 60094, 60094, -1000, 60094, -1000,
	-1000, 1646, -1000, -1000, 1646, 1646, 1646, 1598, 2968, 1598,
	-1000, -1000, -1000, 1646, 79256, 79256, 18317, -1000, 19072, 66727,
	1378, -1000, -1000, 1646, -1000, 79256, 939, 939, 939, -1000,
	2120, 563, 357, -1000, 889, 317, -1000, -1000, 2726, 2857,
	2848, 2117, 1601, 1601, -1000, 2253, 1601, 2470, -1000, 1640,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1601, 2835, 17562, 77045, -477, -1000, -1000, 2476,
	-1000, 493, -1000, -1000, 984, 2577, 984, 8243, 67464, 67464,
	67464, -1000, 2528, 77045, -1000, 2528, 2528, 2528, 21, 2528,
	2528, -1000, -1000, 2528, -1000, -1000, -1000, 2528, -1000, -1000,
	2528, -1000, -1000, -1000, 2528, 2528, -1000, 2528, 2528, -1000,
	-1000, -1000, -1000, -1000, 67464, 680, 2403, 2462, 2576, -1000,
	1055, 196, -12, 152, -1000, -1000, -1000, -1000, -1000, -1000,
	319, 318, 312, 311, -1000, -1000, -1000, -1000, 308, 301,
	-1000, -1000, 57875, 57875, 880, -1000, 2475, 62305, 2840, 22847,
	832, -1000, 18317, 2801, -1000, 2801, -1000, -1000, -1000, 375,
	-1000, 60094, 67464, 78519, 54927, 54927, 54927, 54927, -1000, 2608,
	2602, -1000, 2609, 2600, 2594, 477, 62305, -1000, 2828, 316,
	2370, 2333, 2333, 548, 45346, -1000, 2484, -1000, 62305, 1196,
	1083, 1077, 1072, 2726, -1000, -1000, -1000, -1000, -1000, 2161,
	2158, 1896, 13032, 19072, -1000, -1000, -1000, -1000, -1000, 2945,
	2945, -1000, -1000, -1000, -1000, -1000, -1000, 1755, 2983, 1504,
	2445, -1000, -1000, -1000, 2474, -1000, 1751, 1250, 2009, 1767,
	-1000, -1000, -1000, -1000, -1000, -1000, 13787, -1000, 60094, -1000,
	18317, 18317, 18317, 1789, -1000, 44606, -1000, -1000, -1000, 23602,
	1531, 19072, 1798, 1614, 19072, 19072, 19072, 19072, 19072, 19072,
	19072, 19072, 19072, 19072, 19072, 19072, 19072, 19072, 19072, 1406,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2112, -1000,
	317, 36437, 13032, 36437, 964, 964, 77045, 1361, 1361, 1361,
	1361, 1361, 1361, 60831, -1000, -1000, -1000, 2846, 34927, 77045,
	36437, 2846, 2846, 2846, 2846, 2846, 2368, 2023, 61568, 16807,
	54927, 13032, 13032, 13032, 2333, 18317, 18317, 13032, 19072, 13032,
	16052, 15297, 20582, 13032, 13032, 2846, 1606, 2023, 26622, 13032,
	-1000, 2333, -1000, -1000, -1000, -1000, 1858, -1000, -1000, -319,
	-319, -319, 383, 13032, 13032, 13032, 13032, 2333, 2333, 13032,
	13032, 13032, 13032, 13032, 13032, 2333, 2333, 2333, 13032, 13032,
	13032, 13032, 13032, 13032, 13032, 13032, 13032, 13032, 13032, 13032,
	-1000, -1000, -1000, 1809, 57138, 54927, 60094, 2426, 2390, -1000,
	-1000, 1238, 29642, 2433, -1000, -37, -15, -27, -1000, -1000,
	1336, -1000, -1000, -1000, -1000, 14542, -1000, -1000, -1000, 24357,
	2902, -1000, 40184, -1000, 53, -1000, -1000, -1000, 2512, -1000,
	2515, 108, 518, 2515, 97, 94, 2515, 2515, 2515, -1000,
	-1000, -1000, -1000, 114, -1000, -1000, -1000, -1000, -1000, 2532,
	2530, -1000, 2512, 2512, 2512, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2521,
	534, 2513, 2513, 2513, 2513, 2513, -1000, -1000, -1000, -1000,
	-1000, 979, -1000, -1000, -1000, 18317, 2754, 2676, 77045, 60094,
	1068, -463, 790, 2801, 2822, 2801, 856, -1000, 1232, 2529,
	78519, 805, 2441, -1000, 450, 2159, 1122, 56401, -1000, -1000,
	-1000, -1000, -1000, 60094, 60094, 67464, 67464, 67464, 60094, 60094,
	2473, -1000, -1000, -1000, -1000, -1000, 2472, -1000, 2159, -1000,
	-1000, 1221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -436, -438, 60094, -1000, -1000,
	-1000, -1000, -1000, -1000, 2471, -1000, 2471, -1000, -1000, -1000,
	2252, 2023, 2110, 2109, 2835, -1000, -1000, -1000, -1000, 1602,
	-1000, -1000, -1000, -1000, 1646, 60094, 2835, -1000, -1000, -1000,
	2023, 1854, 2543, 2484, 2333, -1000, -1000, -1000, 164, -1000,
	154, -1000, -1000, -1000, 2108, -1000, -1000, -1000, -1000, -1000,
	357, -1000, 19072, 2718, 2715, -1000, 2470, 2470, -1000, 2470,
	1601, 63042, 2470, -1000, -1000, 2332, -1000, 300, 2249, 60094,
	-1000, 62305, 68, -1000, -61, 75571, -1000, -1000, -1000, 984,
	75571, -1000, 325, 314, -1000, 1054, -1000, 2326, -1000, -1000,
	-1000, -1000, 2528, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 984, 440, 2469, 984, 67464, 67464, 230,
	2467, -1000, 1635, 1625, -1000, -1000, 150, -1000, -1000, -1000,
	-1000, 2898, -1000, -1000, 304, -41, -1000, 304, 2248, 19072,
	-1000, 2484, 2302, -1000, 1207, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2484, -1000, -1000, -1000, -1000, 2784, 1544, 1544,
	1544, 6658, 450, 2575, 2527, 2574, 487, -1000, -1000, -1000,
	-1000, 2601, -1000, 2592, 2591, -1000, -1000, -1000, 2501, 62305,
	54927, -1000, -1000, -1000, 2333, 77045, 1202, -1000, 62305, 2484,
	2484, 2484, 19072, 19072, 1503, -1000, 19072, 19072, 1502, -1000,
	19072, 19072, 1436, -1000, 2333, 2465, -1000, -1000, 2023, 1191,
	5008, -1000, 76308, 65, 2623, 28132, 28132, 18317, -1000, -1000,
	-1000, 24357, 2903, -1000, 2637, 2632, 2967, -1000, -1000, -1000,
	1531, 1573, 1532, -1000, -1000, 1746, -1000, -1000, -1000, -1000,
	-1000, 1183, 2484, -1000, -1000, -1000, -1000, -1000, -1000, 5058,
	-1000, -1000, -1000, -1000, 1798, 19072, 19072, 19072, 1854, 5058,
	4909, 2011, 1795, 1361, 1433, 1433, 1347, 1347, 1347, 1347,
	1347, 1567, 1567, -1000, -1000, -1000, -1000, 2333, -1000, 2324,
	-1000, -1000, 2246, 2245, 2244, -1000, -1000, -1000, -1000, 13032,
	-1000, -1000, -1000, -1000, -1000, -1000, 13032, 13032, 13032, 13032,
	13032, 18317, -1000, 2324, 2324, 2324, -1000, 1673, 1972, 2261,
	4892, 2324, 1310, 2966, 2324, 1306, 2964, 2324, 2358, 19072,
	19072, 19072, 2324, 2324, 13032, 1708, -1000, 18317, 2333, 1245,
	2333, 1182, 1169, 2324, -1000, 2333, 2464, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2463, 2962,
	2460, -1000, -1000, -1000, -1000, 2324, 2333, 2324, 2324, -104,
	-104, 2333, 2324, 2333, 2324, 2324, 2333, -104, -104, -104,
	2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324,
	2324, 2324, -1000, 2333, 1458, 60094, -1000, 2435, 1458, 2389,
	54927, -1000, -1000, 54927, 79256, 25867, -1000, 28887, -27, -42,
	-1000, -1000, 2433, -1000, -1000, 1500, -1000, -1000, 2242, 2023,
	-1000, 1146, 2754, 7603, -1000, -1000, -1000, -1000, 2524, 43869,
	-1000, 2685, 1223, 1223, 1223, 65990, 77782, 2682, -1000, -1000,
	370, 48, -1000, -1000, -1000, 1961, -1000, 374, 510, 2515,
	-1000, -1000, -1000, 2515, 2515, -1000, 2515, 2515, -1000, -1000,
	-1000, -1000, 2241, 2241, -1000, -1000, -1000, -1000, 1960, -1000,
	2521, -1000, 1955, -1000, -1000, -1000, -1000, 370, 370, 370,
	370, 370, -1000, 2082, -1000, 2539, 2484, 60094, -364, -1000,
	-1000, -1000, 2937, -1000, -1000, 77045, 64516, 2573, -1000, -1000,
	337, 67464, 445, 629, 358, -1000, 1679, -1000, -1000, 1053,
	-1000, 1045, -1000, -1000, 1170, -1000, 60094, 67464, 77045, 2572,
	2570, -1000, 51242, -1000, -1000, -1000, -1000, 2931, 2103, 2100,
	-1000, 1598, 1646, -1000, 19072, 67464, -1000, 862, -1000, -1000,
	-1000, -1000, 5058, 19072, 19072, -1000, -1000, -1000, -1000, 1727,
	-1000, -1000, -1000, -1000, -32, -1000, -1000, 1043, 1145, 1131,
	75571, 1042, -1000, 359, 67464, -1000, 77045, -1000, 75571, 416,
	436, 75571, 1140, 2958, 2432, -1000, 1616, 1610, 1609, 1605,
	1586, 1585, 1579, 1564, 196, 2520, 2518, -1000, -1000, 265,
	-1000, 2739, -1000, -1000, 5058, -1000, -1000, 22847, 36437, -1000,
	1544, 1482, -1000, 1461, 2240, 1685, 875, -1000, -1000, -1000,
	2922, 1240, 1176, 1001, 1544, 996, 447, 1041, 2730, 2728,
	579, 578, -1000, 1544, 996, 1226, 619, -1000, 1485, 1483,
	1481, 1480, 1475, 1467, 1465, 1464, 613, -366, -1000, 1544,
	1544, 1544, 1544, 1544, 1544, 1544, 1544, -158, -159, 1544,
	1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
	1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
	1544, 1544, 31907, 1544, 1544, -235, -1000, 1108, 650, -1000,
	-1000, 18317, 2517, -1000, 18317, -1000, -1000, -1000, -1000, -1000,
	77045, 2501, 548, -1000, 2300, -1000, -1000, 1202, 77045, 77045,
	77045, 4834, 2095, 2484, 4727, 1998, 2484, 4166, 1828, 2484,
	2828, 13032, 22092, 2238, 2431, 2237, 2236, -1000, 59, 2621,
	-1000, -1000, -1000, 60094, -1000, -1000, -1000, -1000, 2931, 54190,
	13787, -1000, -1000, -1000, -1000, 34172, 13032, -1000, 1854, 5058,
	4037, -1000, 19072, -1000, -1000, 2333, 2324, 2324, 2324, 2324,
	2324, 2023, -1000, -1000, -1000, 394, 1406, 394, -1000, 1406,
	19072, -1000, 19072, 19072, -1000, 19072, 19072, -1000, -1000, 19072,
	3974, 3850, 3709, -223, -1000, 2459, 1599, -1000, 18317, 2057,
	-1000, -1000, -1000, -1000, -1000, 19072, 19072, 19072, 19072, -1000,
	-1000, -1000, -1000, -1000, 74834, -1000, -104, -104, -104, -104,
	-104, -104, -1000, -1000, -1000, -104, -104, -104, -104, -104,
	-104, -104, -104, -104, -104, -104, -104, -1000, 366, 2484,
	-1000, 25112, 2931, 54927, 2437, 2437, -1000, 1130, -1000, -1000,
	-1000, -55, -48, -1000, -1000, -1000, -1000, -1000, 36437, -1000,
	-1000, -1000, 5674, -1000, 1544, 1544, 1544, 376, 1544, 1544,
	1544, 1544, 1544, -160, -166, 1544, 1544, 1544, 1544, 1544,
	1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544, 1544,
	1544, 1544, 179, 1544, 1544, 1544, 1544, 1544, 1544, 31907,
	1544, 1544, -368, 49031, 1144, 936, -1000, -1000, -1000, 77782,
	77782, 77782, -1000, 77782, 77782, -1000, -1000, -1000, -1000, 49768,
	-1000, -1000, 1762, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2484, -492, 1953, 60094, -1000, 2770, 1442, 38702, 2979,
	-1000, 2675, -1000, 2674, 2660, 2235, -1000, -1000, 2385, 2384,
	2381, -1000, 2515, -1000, -1000, -1000, -1000, -1000, 2322, -1000,
	2320, 2430, -1000, 2318, -420, 2569, 77045, 2839, 2484, 1952,
	2568, -1000, -1000, -1000, -1000, 2375, 2429, -1000, 10854, 77045,
	77045, 77045, 657, -235, 390, -1000, 67464, 380, 450, 808,
	2034, -400, 2818, 60094, 67464, -1000, -1000, -1000, -1000, -1000,
	-1000, 74097, 74097, -1000, -1000, 18317, -1000, -1000, 2835, -1000,
	5058, 2159, -1000, -1000, 5058, 5058, 1458, 1093, -1000, 67464,
	1375, 73360, 1039, 67464, 407, 299, -1000, 2957, 2944, 393,
	2943, -1000, 258, 67464, 230, 2234, 2233, 2232, 1946, 1931,
	1929, 1923, 1922, -1000, 60094, 60094, 2231, -1000, -1000, -1000,
	1440, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1457, 4915,
	875, 1444, 1437, 1435, 1417, -1000, 169, 46083, 1015, 1264,
	998, -1000, -1000, 2484, -1000, 43132, 49768, 49768, 49768, 77045,
	2657, 2654, 77045, 49768, 49768, 77045, 49768, 914, 2096, 2768,
	1544, 110, -1000, -1000, -1000, 72623, -1000, 71886, 855, 50505,
	49768, 77045, 60094, 42395, -1000, -1000, -1000, -1000, 71149, 1915,
	77045, 77045, 70412, 69675, 68938, 68201, -1000, -213, 815, 18317,
	815, 2025, 2025, 2229, 2228, 2227, 1544, 1544, 211, 2025,
	2225, 211, 2025, 37947, 2222, 967, 815, 815, 815, 2025,
	2025, 2025, 2025, 2220, 410, 1920, 2219, 2025, 2155, 2084,
	815, -1000, -199, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2025, 2484, -1000, 360, 840, 1038,
	824, -4, 2023, 77045, 2023, 2316, -1000, -1000, 1522, 77045,
	-1000, 2275, 2275, 2275, 19072, 19072, 19072, 19072, 19072, 19072,
	19072, 19072, 19072, 62305, -1000, -1000, 1118, 12, 77045, -1000,
	44, -1000, -1000, -1000, 2929, -1000, 2428, -1000, -1000, -1000,
	2333, -1000, 19072, 5058, -1000, -104, -104, -104, -104, -104,
	2333, 2512, 2512, 2512, -1000, 2512, 2513, 120, -1000, -1000,
	-1000, 2512, 141, 2512, 140, -1000, 2333, 2333, 2333, 2115,
	3635, 3533, 3149, 2434, 2115, 19072, 19072, 19072, 2484, -97,
	-1000, 2023, 18317, 2833, 2678, 2115, 2115, -1000, -1000, 2094,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2566,
	2566, 25112, 2828, -1000, 21337, -1000, 832, -1000, -1000, 77045,
	2438, -1000, 1544, 1281, 1544, 1544, 2841, 2437, -1000, -1000,
	1259, -1000, -1000, -1000, -1000, 815, 815, 815, 1544, 2767,
	1544, 2025, 2025, 2218, 2216, 2212, 1544, 1544, 211, 2025,
	2211, 211, 2025, 37947, 2210, 967, 815, 815, 815, 2025,
	2025, 2025, 2025, 2208, 410, -1000, 1863, 2207, 2025, 2081,
	1939, 815, -1000, -201, 2025, 2484, -214, 2313, -1000, 2512,
	2512, 2649, 1223, -1000, -1000, -1000, -1000, -1000, -1000, 2511,
	-1000, -1000, 19072, 2837, -1000, 2510, 1415, -1000, -1000, -1000,
	-1000, 964, 2206, -1000, -1000, 19072, -1000, -1000, 2484, 2484,
	2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
	2484, -65, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2204, -1000, 1911, -1000, 1910, -1000, -1000, -1000, 60094,
	-1000, -1000, 2832, -1000, 60094, 229, 64516, -1000, 10854, 10854,
	10854, -4, 371, -1000, 1695, -1000, -1000, -1000, 2203, 2202,
	2200, 2159, 451, 1692, 421, -1000, 2827, 2816, 2199, 2198,
	2197, 2195, 1894, -1000, -1000, 2541, 77045, 2425, -1000, 2023,
	1646, 44, 60094, 299, -1000, -1000, -1000, 67464, 299, -1000,
	-1000, 392, 67464, 67464, 2941, 67464, 458, 1140, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2310, 2306, -1000,
	-1000, -1000, -1000, -1000, -1000, 1254, 1165, 344, 340, -186,
	-1000, 466, 403, -1000, -1000, -1000, 50505, 923, 10854, 10854,
	77782, 1223, -1000, 2647, 1392, -1000, -1000, -1000, -1000, -1000,
	-1000, 49768, 2422, -423, -425, 1272, -447, -1000, -1000, -1000,
	-1000, 50505, 1544, 1406, 2757, 668, 339, 646, 338, -1000,
	-1000, -1000, -1000, 923, 1206, 1036, -1000, 2643, 49768, 1034,
	625, 332, -1000, 1766, -236, 2422, -1000, 2422, -1000, 2422,
	-1000, 2422, -1000, -1000, -1000, 2023, -1000, -1000, -1000, -1000,
	-1000, -1000, 2194, 2193, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -163, -1000, 37947, 360, -1000, 1889, 1887, 1870,
	1867, 1782, -1000, 2565, 78519, -1000, 640, 2564, 545, 964,
	2304, -1000, 77045, -1000, -1000, -1000, -1000, -1000, 5058, 5058,
	2584, 5058, 5058, 2396, 5058, 5058, 2291, -1000, 33417, 2484,
	-1000, 10, -1000, 2926, 2919, -1000, -1000, 5058, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 463, 453, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19072, 19072,
	19072, 19072, -1000, 2115, 2115, 2115, 19072, 2333, 2191, 2023,
	19072, 19072, -1000, -1000, 1397, -1000, -1000, 2806, -1000, 2383,
	62305, 2333, 2380, 2302, 2333, 323, -1000, -1000, -1000, 61568,
	54927, 2406, -1000, 2484, 2300, 2841, 25112, 18317, 18317, 18317,
	18317, 2902, -1000, -1000, -1000, -1000, 1406, 1544, 32662, -1000,
	-1000, -1000, -1000, -1000, 2190, 2189, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -164, -1000, 37947, -1000, 236, 49031, 2805,
	2805, 77782, 77782, 77045, 2115, 2484, 77045, -1000, -1000, -1000,
	-1000, -1000, 2115, -1000, -1000, 2359, 2354, 2507, -1000, -1000,
	-400, 2896, -1000, 229, -1000, 2188, 789, 798, -1000, 712,
	709, 693, 681, 685, -1000, -1000, -1000, -1000, 2564, 697,
	371, -1000, -44, 1866, 1441, 2747, 419, -1000, -1000, -1000,
	-1000, 345, 450, -1000, 796, 2187, 773, 2186, -1000, -1000,
	448, -1000, -1000, 2710, 2298, -1000, 10, -1000, 2831, 299,
	2831, 389, 1140, 1140, 67464, 1140, -1000, -1000, -1000, -1000,
	-204, 1851, 19072, 2484, 2484, 670, 2339, -1000, -1000, 2093,
	-1000, -1000, 2539, 77782, 77782, 2277, -1000, 77045, -1000, -1000,
	-1000, -1000, -1000, 2800, 2799, -1000, -1000, 923, 1406, -1000,
	1406, -1000, -1000, -1000, -1000, -1000, 49768, 77045, 49768, 1032,
	49768, -1000, -1000, 2484, 1037, -1000, -1000, -1000, -1000, 2294,
	-1000, -1000, -1000, -1000, -1000, -1000, 462, 2185, 322, -1000,
	-1000, 1108, 648, -1000, -1000, -1000, -299, -1000, -1000, 19072,
	19072, 19072, -1000, 35682, 2704, 2701, -109, 18317, 18317, -1000,
	-1000, -1000, -1000, 2115, 2115, 2115, 2115, -1000, -1000, -1000,
	276, -1000, -1000, 2115, 2115, 2841, 2917, 2638, -1000, 2501,
	-1000, -1000, 2380, 323, -1000, 832, -1000, 12277, -1000, 2902,
	-1000, 2023, 2023, 2023, 2023, -1000, -1000, 1406, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2294, 236, -1000, 37947, 1544,
	2183, 1544, 1544, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2288, -491, 19072, 2285, -1000, -1000, -1000, 49031, 317, -1000,
	825, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2709, 2708,
	803, 840, -1000, 2181, 2180, -1000, 696, 1948, 1227, -117,
	-1000, -1000, -1000, -1000, -1000, -1000, 713, 2089, -1000, 413,
	-1000, -1000, 401, -1000, -1000, 2915, -400, 19072, -1000, 2704,
	-1000, 67464, 2831, -1000, -1000, -1000, -1000, 1140, -1000, 2484,
	2914, -1000, 2115, 77045, 19072, 2484, 1548, -1000, -1000, 370,
	370, 2506, 2539, 2505, -1000, 1392, 2629, 19072, -1000, -1000,
	1359, 1342, -1000, -1000, 1025, 49768, -1000, 1392, 60094, 37947,
	-1000, -1000, -1000, -1000, 840, 1381, 651, 2115, 2115, 2115,
	2263, -1000, 8652, 386, -1000, -1000, 2681, 2913, -1000, 77045,
	-1000, 2023, 2404, -1000, 2023, -1000, -1000, -1000, -1000, 2333,
	352, -320, -1000, -1000, 1423, 18317, 2978, -1000, -1000, -1000,
	323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1832, -1000,
	2178, 2174, 933, -1000, -1000, -1000, 2115, -1000, 2279, -1000,
	317, 830, 82140, -1000, -1000, -1000, -1000, 1782, -1000, -1000,
	-1000, -1000, 1825, -1000, -1000, 1913, 692, 381, -1000, 2830,
	-1000, -1000, 1824, 5058, 1019, -250, -1000, -1000, -1000, 1392,
	-410, -1000, 2275, 2115, 77045, 1808, 49031, 2504, 49031, -1000,
	898, 5058, 1544, 1406, 49768, -1000, 2277, 38, -1000, 82140,
	1782, 1171, 653, 545, -1000, -1000, -1000, 2333, 35682, 422,
	-453, 8, 2154, 2700, 2697, 2690, -1000, 2138, 2398, -1000,
	2829, 18317, -1000, 2619, -229, -333, 2333, 377, 377, 2394,
	25112, 2333, -1000, -1000, -1000, 60094, -491, 236, -255, -1000,
	809, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 11522, 18317, 176, 37192, 2079,
	2077, 82140, 2083, 82140, 18317, 2075, 2070, 2669, 19072, 81985,
	461, -342, -1000, -344, -1000, -1000, -1000, 2137, -1000, 2501,
	1794, 444, 2277, 402, -1000, -1000, 2275, -1000, 2273, 49031,
	2271, 882, 1406, -1000, -1000, -1000, 616, -1000, -1000, 455,
	964, -1000, 545, -1000, 2828, -1000, -1000, 2136, -150, -1000,
	2484, 3, 2912, 2909, -1000, 2908, 2905, -1000, 77045, 2484,
	-1000, -1000, 2613, -1000, -1000, -1000, 384, -1000, 1411, 829,
	1404, -1000, 964, -1000, 2393, -1000, 2499, -1000, -1000, 236,
	-1000, 363, -255, -1000, 2056, 2042, -1000, 2002, 1728, -1000,
	18317, 1987, 611, 582, 6316, -1000, -1000, -1000, -1000, -1000,
	-1000, -499, -1000, 334, -500, 1033, -1000, -1000, 2031, -1000,
	2940, 5058, -1000, -501, -1000, -1000, -1000, -1000, 2746, 1508,
	63779, -1000, 2484, 670, -1000, 236, 2268, 236, 2484, -1000,
	-1000, -1000, -1000, -299, -1000, 1381, 62305, 622, 2133, 35682,
	2484, 2131, 2026, 2024, 1973, -1000, -1000, -258, 1677, -1000,
	-1000, -1000, -1000, -1000, -319, 77045, 387, 976, 956, -1000,
	-1000, -1000, -1000, 1634, 1666, 82140, -1000, 1936, 82140, 2893,
	2871, 2850, 44, 36437, 81931, 81595, 82140, 82140, 18317, 81540,
	82140, 1711, -1000, 81385, 82140, -1000, 25112, -1000, -1000, -1000,
	-1000, 2990, 2159, 19072, 2484, -1000, 236, -1000, 19827, 82140,
	-1000, 1381, -1000, 1857, 1855, 2563, 2562, 964, -1000, 2263,
	35682, -1000, -1000, -1000, -1000, -329, 384, -1000, 2265, -1000,
	379, 369, 297, 1652, 82140, -1000, -503, 82140, -504, 810,
	317, 852, 1336, -1000, 562, -1000, 2022, -505, -506, -507,
	817, 18317, -508, 2007, -1000, -1000, 2393, 67464, 2115, 19072,
	-1000, 2115, 2333, -1000, -1000, 2561, 964, -1000, 2560, 964,
	-71, -81, 2559, -1000, 2263, -334, -1000, 2557, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 81331, 61568, -1000,
	-509, 80995, -511, 5286, -1000, -1000, -1000, 80940, -1000, -1000,
	-1000, -1000, 577, -1000, -1000, 2798, -1000, -1000, 80785, 80731,
	10825, 82140, 1930, 10770, 2292, -1000, -1000, 2159, -209, 2115,
	-1000, -1000, -1000, 302, 2555, -382, 2553, 286, 281, -1000,
	-1000, -83, -1000, -1000, 2551, 2550, 2939, -1000, -512, -1000,
	-1000, 10615, 1620, 82140, 1009, 82140, 1710, -1000, 18317, -1000,
	852, -1000, 19072, 2000, 456, 18317, -513, 491, 483, 1996,
	-1000, 1772, -209, 277, -383, 2548, 2547, -1000, -1000, -1000,
	2977, -1000, 2974, 1185, 1185, 10380, 1608, -1000, -1000, -514,
	1006, 82140, -1000, 1906, -1000, 5058, -1000, 1991, 1638, 10225,
	-1000, -1000, -1000, -1000, -1000, 275, -387, -1000, -1000, -1000,
	948, 1819, -1000, -1000, -1000, 9820, -1000, -516, 82140, -1000,
	468, 464, -1000, -1000, -1000, -1000, -1000, 1005, 7976, -518,
	1985, 1898, -1000, 1004, 82140, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3491, 3490, 3489, 21, 3488, 282, 297, 307, 13,
	2754, 3487, 303, 3486, 298, 3485, 34, 28, 17, 36,
	3484, 3148, 3146, 3143, 3135, 26, 3483, 7, 3482, 3481,
	3133, 3479, 3478, 3125, 3477, 3476, 3475, 3474, 3473, 3472,
	3471, 3469, 3467, 3119, 3117, 3115, 3112, 3466, 3465, 3464,
	3102, 3100, 3090, 3462, 71, 3460, 87, 43, 38, 3458,
	6, 3457, 204, 243, 3452, 4, 3451, 3450, 20, 205,
	3439, 3438, 64, 3085, 3436, 3435, 3429, 3428, 3427, 3426,
	138, 3423, 3421, 3079, 3420, 3077, 3419, 3075, 3071, 3069,
	3067, 3054, 203, 3418, 3049, 3044, 3039, 3417, 2662, 233,
	485, 234, 3416, 125, 127, 1697, 3415, 232, 3414, 216,
	3411, 3410, 3409, 484, 225, 3408, 163, 3405, 466, 164,
	167, 176, 313, 3388, 60, 181, 365, 3387, 11, 3386,
	113, 3385, 217, 3383, 222, 2758, 198, 332, 192, 3381,
	3380, 171, 3379, 3378, 3375, 214, 3371, 3369, 239, 4639,
	3368, 3367, 188, 3366, 134, 3365, 174, 3364, 3362, 3361,
	3360, 237, 114, 81, 168, 162, 3359, 156, 3358, 3357,
	3354, 3353, 3352, 3351, 76, 62, 2584, 3350, 148, 197,
	3349, 55, 39, 52, 3348, 3347, 61, 3346, 3345, 159,
	3343, 3342, 124, 3341, 191, 65, 3340, 3339, 3337, 3335,
	107, 80, 3334, 161, 3333, 189, 3332, 3331, 3330, 3325,
	3324, 106, 3322, 83, 3319, 193, 267, 219, 3313, 3312,
	50, 47, 3310, 59, 12, 15, 100, 42, 102, 77,
	177, 170, 130, 153, 40, 155, 54, 145, 137, 3307,
	235, 178, 226, 116, 23, 3299, 3298, 212, 3297, 108,
	220, 190, 187, 218, 3296, 3294, 3293, 248, 3292, 184,
	550, 3290, 131, 236, 152, 2686, 240, 139, 3276, 3275,
	3274, 3272, 111, 51, 129, 3271, 41, 244, 238, 246,
	49, 121, 3270, 1797, 5012, 5939, 7347, 25, 441, 69,
	6464, 261, 211, 3268, 75, 3267, 3264, 3257, 85, 166,
	46, 53, 160, 3255, 158, 93, 101, 3254, 3253, 3252,
	3251, 3249, 3248, 221, 140, 3247, 3246, 68, 3244, 3241,
	33, 31, 10, 9, 3240, 136, 231, 230, 223, 3239,
	207, 56, 3238, 3237, 180, 133, 3236, 3235, 3234, 3233,
	185, 115, 209, 3232, 208, 120, 144, 3229, 117, 3228,
	3223, 112, 6839, 128, 3220, 3217, 293, 123, 141, 194,
	3215, 3214, 3211, 67, 3209, 3207, 3, 3205, 105, 57,
	48, 103, 24, 165, 3202, 3201, 199, 3200, 3199, 146,
	175, 3197, 132, 135, 70, 3196, 73, 142, 3188, 169,
	2, 5, 8, 3187, 3185, 3182, 3181, 3179, 3178, 3174,
	3169, 118, 3165, 3162, 96, 82, 74, 3161, 3160, 3159,
	3155, 3154, 201, 172, 109, 224, 94, 32, 3153, 3152,
	19, 3151, 179, 3150, 89, 3139, 3137, 122, 3131, 3129,
	72, 95, 44, 84, 3127, 3123, 110, 151, 3121, 92,
	3110, 3104, 227, 434, 3087, 759, 3083, 200, 186, 79,
	86, 3081, 78, 104, 3073, 88, 3052, 16, 63, 3046,
	14, 30, 600, 3041, 0, 3406, 213, 3019, 126, 3014,
	3012, 215, 3000,
}

var yyR1 = [...]int{
	0, 463, 463, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 245, 245, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 242, 242, 242, 242, 239, 239, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 466, 466, 143, 143, 141, 141,
	142, 142, 237, 237, 19, 19, 19, 247, 247, 252,
	252, 252, 255, 255, 255, 255, 225, 226, 227, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 454, 454, 454, 455, 455, 455,
	455, 455, 280, 280, 280, 280, 418, 418, 434, 434,
	434, 435, 435, 433, 433, 433, 433, 433, 437, 437,
	438, 438, 436, 436, 436, 436, 440, 440, 441, 441,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 421, 421, 421, 50, 50, 50,
	50, 50, 54, 54, 51, 51, 51, 51, 51, 51,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 443, 443, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 445, 445, 446, 446, 447, 447,
	447, 447, 448, 448, 448, 448, 448, 449, 449, 449,
	449, 449, 449, 449, 450, 450, 451, 451, 3, 2,
	399, 399, 400, 400, 401, 401, 401, 401, 402, 402,
	403, 403, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 31, 31, 31, 31, 31, 31, 279, 279,
	275, 275, 275, 277, 277, 278, 278, 278, 420, 420,
	420, 414, 414, 414, 416, 416, 415, 415, 415, 417,
	417, 422, 422, 422, 422, 422, 425, 425, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 426, 426,
	426, 423, 423, 162, 162, 427, 427, 432, 432, 428,
	428, 429, 429, 431, 431, 431, 430, 430, 430, 430,
	317, 317, 181, 181, 70, 70, 71, 71, 71, 214,
	214, 214, 20, 20, 20, 20, 20, 20, 26, 26,
	28, 28, 28, 28, 57, 57, 58, 29, 29, 29,
	29, 59, 59, 60, 32, 32, 32, 32, 32, 32,
	67, 67, 67, 66, 66, 65, 65, 65, 65, 65,
	65, 34, 35, 36, 467, 467, 467, 61, 61, 37,
	37, 37, 40, 40, 40, 41, 41, 41, 38, 39,
	42, 30, 30, 30, 30, 68, 68, 63, 63, 62,
	62, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 33, 33, 33, 33, 33, 33, 25,
	398, 398, 398, 56, 56, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 78, 78,
	354, 355, 355, 355, 355, 355, 355, 341, 341, 342,
	342, 342, 342, 342, 342, 331, 331, 331, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 305, 305, 305, 305, 309,
	309, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 308, 308, 308, 308,
	308, 308, 308, 308, 310, 310, 310, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 340, 340, 314, 314, 313, 313, 313,
	334, 334, 335, 335, 335, 332, 332, 332, 333, 333,
	318, 318, 318, 318, 318, 318, 319, 336, 320, 320,
	321, 321, 321, 321, 321, 321, 322, 322, 323, 323,
	323, 325, 325, 330, 330, 329, 329, 329, 329, 329,
	329, 326, 326, 326, 326, 326, 326, 327, 327, 327,
	328, 339, 339, 339, 339, 339, 315, 46, 46, 52,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 376, 376, 381, 381,
	269, 269, 270, 270, 53, 53, 53, 53, 53, 168,
	168, 55, 55, 55, 377, 377, 379, 379, 379, 379,
	379, 379, 379, 379, 378, 378, 380, 380, 343, 343,
	372, 372, 371, 371, 370, 370, 370, 370, 370, 370,
	370, 352, 352, 353, 353, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 347, 347, 347, 346, 346, 348,
	348, 351, 351, 351, 369, 369, 368, 368, 344, 344,
	344, 382, 382, 382, 382, 382, 102, 102, 345, 345,
	345, 383, 349, 349, 350, 350, 350, 391, 392, 390,
	390, 390, 390, 390, 169, 169, 169, 374, 374, 374,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 103, 103,
	103, 104, 104, 324, 324, 356, 356, 356, 356, 356,
	462, 462, 462, 357, 357, 357, 357, 357, 357, 453,
	453, 452, 452, 452, 358, 358, 359, 360, 360, 360,
	361, 361, 363, 363, 276, 276, 364, 364, 365, 365,
	362, 362, 362, 366, 366, 395, 395, 395, 394, 394,
	73, 73, 73, 73, 75, 75, 74, 74, 74, 82,
	82, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 72, 72, 289, 289, 77, 213,
	213, 213, 274, 274, 388, 388, 389, 389, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 385,
	385, 384, 384, 386, 386, 76, 76, 76, 76, 163,
	163, 22, 22, 79, 79, 419, 419, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 393, 393, 393,
	24, 24, 83, 84, 84, 84, 288, 288, 288, 288,
	288, 87, 87, 87, 87, 240, 240, 241, 241, 88,
	88, 88, 88, 89, 89, 89, 89, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	123, 261, 261, 260, 260, 259, 259, 259, 262, 262,
	262, 262, 303, 303, 303, 86, 86, 86, 98, 98,
	93, 93, 96, 96, 96, 96, 99, 99, 100, 100,
	101, 101, 94, 95, 43, 44, 44, 44, 44, 45,
	91, 91, 91, 92, 92, 92, 92, 113, 113, 114,
	114, 469, 469, 469, 90, 470, 105, 106, 106, 108,
	108, 108, 109, 109, 109, 110, 110, 110, 266, 266,
	266, 266, 266, 266, 266, 107, 107, 107, 117, 117,
	121, 121, 121, 121, 120, 120, 120, 120, 216, 216,
	221, 295, 295, 197, 197, 217, 217, 222, 222, 222,
	223, 223, 224, 224, 224, 224, 224, 219, 219, 218,
	218, 220, 184, 184, 184, 184, 182, 182, 182, 182,
	182, 182, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 180, 180, 293,
	293, 293, 293, 292, 292, 292, 125, 125, 130, 130,
	132, 132, 132, 132, 132, 132, 132, 132, 135, 199,
	199, 471, 471, 153, 153, 154, 154, 154, 154, 155,
	155, 155, 155, 155, 157, 157, 157, 158, 158, 158,
	158, 158, 158, 159, 160, 160, 156, 156, 156, 178,
	178, 235, 235, 236, 236, 234, 234, 238, 238, 131,
	131, 133, 133, 133, 133, 138, 138, 139, 139, 140,
	140, 300, 300, 300, 144, 144, 144, 146, 145, 145,
	145, 145, 145, 145, 147, 147, 456, 457, 457, 458,
	458, 458, 458, 459, 459, 459, 459, 459, 459, 459,
	459, 459, 459, 460, 460, 461, 461, 148, 148, 150,
	151, 151, 149, 149, 149, 149, 149, 149, 161, 161,
	152, 164, 164, 164, 164, 165, 165, 122, 122, 122,
	122, 122, 122, 122, 122, 258, 258, 167, 167, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 193,
	193, 193, 193, 193, 193, 170, 170, 170, 170, 170,
	170, 170, 116, 116, 194, 194, 194, 137, 136, 136,
	119, 119, 118, 118, 195, 195, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 187, 187, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 192, 192, 192, 192, 192, 468, 468, 189,
	189, 188, 188, 188, 188, 188, 188, 112, 112, 112,
	112, 112, 301, 301, 301, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 69, 69, 206,
	206, 115, 115, 204, 204, 205, 207, 207, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 177, 177, 177, 208,
	208, 196, 196, 124, 209, 209, 210, 211, 211, 212,
	212, 215, 228, 228, 228, 229, 229, 229, 229, 179,
	179, 179, 230, 230, 230, 230, 172, 172, 171, 171,
	171, 173, 173, 173, 173, 174, 174, 472, 472, 233,
	233, 232, 232, 231, 231, 231, 231, 231, 231, 231,
	243, 243, 198, 198, 201, 201, 200, 202, 244, 244,
	249, 249, 249, 249, 246, 246, 250, 250, 250, 250,
	253, 253, 254, 254, 254, 251, 251, 251, 251, 248,
	248, 248, 297, 297, 297, 297, 256, 256, 265, 265,
	263, 263, 264, 264, 257, 257, 316, 316, 316, 271,
	271, 272, 272, 273, 273, 267, 267, 267, 267, 268,
	268, 294, 294, 290, 290, 296, 296, 291, 291, 298,
	298, 299, 299, 299, 299, 396, 396, 397, 397, 397,
	337, 337, 408, 408, 338, 338, 409, 409, 410, 410,
	405, 405, 406, 406, 407, 407, 407, 47, 411, 411,
	412, 412, 413, 413, 413, 413, 48, 49, 49, 49,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 287, 287, 287, 287, 287, 287, 284, 284,
	284, 284, 284, 284, 285, 285, 285, 464, 465,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 12, 12, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 0, 3, 9, 9, 9, 10, 6, 8,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 3, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 2, 4, 5, 4, 6, 7, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 0, 1, 4, 3,
	3, 3, 6, 6, 5, 5, 5, 5, 4, 3,
	5, 1, 3, 1, 3, 3, 5, 0, 5, 0,
	3, 0, 3, 0, 3, 4, 0, 1, 1, 3,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 8, 4, 7, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 5, 7,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 2, 5, 0, 1, 2, 1, 3, 5,
	7, 8, 7, 9, 10, 7, 9, 10, 2, 2,
	2, 2, 4, 2, 4, 2, 3, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 4,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 5,
	5, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	6, 8, 3, 6, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	3, 2, 3, 3, 2, 3, 3, 2, 3, 4,
	2, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 3, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 3, 2, 2, 4, 3, 1, 0, 1,
	3, 3, 3, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 2, 1, 2, 1, 2, 2, 5, 5, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 2, 2, 3, 3, 0, 3, 0, 3,
	1, 1, 0, 1, 5, 4, 2, 3, 3, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 3, 5, 5, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 3, 3, 1,
	1, 0, 1, 1, 1, 3, 5, 3, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 2,
	1, 11, 12, 12, 13, 13, 0, 1, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 2, 3,
	3, 3, 3, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 4, 4, 3, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 0, 1, 6, 1, 4, 5,
	5, 6, 0, 1, 0, 3, 1, 1, 0, 2,
	0, 8, 9, 0, 2, 0, 1, 2, 0, 2,
	1, 1, 1, 1, 4, 3, 7, 5, 5, 1,
	3, 5, 4, 9, 10, 9, 2, 2, 3, 3,
	4, 4, 4, 4, 3, 3, 3, 3, 6, 5,
	4, 4, 5, 5, 8, 4, 5, 7, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 3, 3,
	3, 4, 5, 5, 3, 7, 6, 5, 2, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 5, 3, 1, 1, 1, 1, 6, 0,
	1, 2, 0, 1, 0, 1, 1, 2, 5, 3,
	4, 4, 4, 4, 4, 4, 3, 7, 6, 8,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	3, 1, 3, 8, 8, 8, 11, 12, 15, 0,
	3, 3, 3, 3, 5, 3, 5, 6, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 8, 5, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 4, 1, 3, 1, 1, 2,
	2, 4, 4, 3, 3, 3, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 4, 3, 2, 2,
	6, 2, 4, 3, 3, 4, 4, 5, 8, 6,
	3, 4, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 4, 2, 4, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 0, 1,
	2, 1, 2, 4, 4, 5, 0, 1, 0, 3,
	0, 2, 4, 4, 2, 3, 4, 4, 5, 3,
	4, 5, 4, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 0, 2,
	2, 2, 2, 2, 2, 0, 1, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 2, 2, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 5, 1, 2, 3, 1, 1, 2, 2,
	4, 0, 1, 2, 6, 1, 3, 2, 4, 1,
	1, 1, 1, 1, 5, 5, 8, 5, 5, 8,
	5, 5, 8, 2, 2, 2, 3, 4, 4, 0,
	1, 3, 1, 0, 3, 1, 3, 1, 3, 4,
	6, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 2, 2, 2, 12, 1, 3, 3,
	3, 6, 7, 2, 3, 3, 4, 4, 5, 5,
	8, 8, 3, 3, 4, 3, 4, 1, 3, 3,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 4,
	6, 6, 6, 4, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 4, 4,
	4, 2, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 6, 3, 4, 2, 2, 2, 0, 2, 1,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 2, 1, 2, 1, 1, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 5, 1, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 1, 0, 2, 4, 4, 1, 4, 1, 3,
	4, 1, 4, 3, 6, 2, 3, 1, 1, 0,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 2, 3, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 4, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 1,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 2, 0, 4, 4, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -463, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -464, 12, -129, 34, -78, 190,
	-454, -75, -74, -76, -77, 193, 192, 230, 194, 646,
	368, 647, 223, 72, 446, -96, 449, 450, -469, 306,
	307, 25, 42, 451, 453, 35, 36, 246, 334, 336,
	197, 447, 429, 430, 359, 694, -6, 652, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	763, -211, 20, -105, -470, -211, -10, -9, -4, 652,
	-105, -111, 14, 15, 13, 557, -105, -354, 28, -3,
	117, 76, -8, 11, -268, -279, 97, 548, 198, -277,
	330, 332, 208, -265, -267, -275, 256, 266, 49, 210,
	209, 267, 199, 330, -265, 200, 202, 548, 198, 239,
	238, 330, 332, 271, 646, 199, -149, -298, -284, -286,
	-285, 348, 82, -283, 577, 581, 271, 584, 585, 590,
	338, 90, 52, 368, 571, 360, 369, 220, 526, 572,
	331, 337, 340, 361, 735, 370, 372, 373, 569, 570,
	54, 202, 559, 560, 563, 213, 750, 353, 221, 649,
	267, 758, 753, 755, 342, 756, 516, 608, 446, 465,
	457, 484, 650, 706, 279, 301, 454, 385, 533, 609,
	345, 294, 366, 707, 321, 289, 522, 528, 304, 449,
	610, 611, 612, 542, 247, 277, 708, 455, 298, 300,
	299, 261, 576, 305, 41, 226, 481, 659, 647, 256,
	709, 615, 702, 614, 250, 283, 613, 328, 40, 32,
	616, 249, 545, 108, 276, 710, 376, 530, 617, 502,
	377, 245, 272, 274, 290, 712, 654, 349, 232, 529,
	431, 477, 359, 127, 254, 316, 378, 713, 503, 507,
	714, 534, 335, 315, 620, 715, 716, 379, 658, 284,
	717, 201, 341, 621, 280, 718, 257, 444, 536, 346,
	501, 211, 651, 222, 56, 236, 537, 505, 623, 511,
	514, 432, 375, 433, 719, 720, 721, 722, 357, 355,
	625, 356, 358, 627, 268, 296, 655, 624, 657, 61,
	196, 661, 509, 508, 510, 297, 675, 532, 489, 487,
	723, 724, 350, 217, 725, 726, 488, 23, 727, 728,
	540, 320, 352, 729, 730, 731, 626, 293, 631, 607,
	732, 733, 531, 504, 506, 255, 126, 646, 278, 734,
	354, 527, 363, 662, 653, 339, 291, 632, 736, 381,
	292, 235, 228, 541, 426, 427, 442, 443, 371, 737,
	430, 738, 739, 740, 741, 333, 332, 450, 364, 633,
	451, 273, 302, 656, 742, 634, 635, 743, 744, 265,
	248, 544, 535, 60, 518, 513, 367, 382, 456, 428,
	439, 434, 435, 437, 438, 441, 440, 436, 445, 521,
	447, 275, 242, 636, 637, 638, 429, 639, 12, 295,
	347, 640, 641, 642, 525, 365, 303, 266, 269, 492,
	237, 745, 746, 479, 480, 448, 240, 230, 121, 543,
	386, 326, 701, 330, 383, 288, 59, 243, 53, 747,
	748, 270, 244, 660, 287, 452, 344, 663, 199, 82,
	-288, -283, -286, -287, -284, -285, 348, 231, 58, 95,
	63, 62, 82, -283, 646, 143, 485, 533, 190, 523,
	524, 530, -347, 531, 238, 426, 367, 241, -303, 199,
	-261, 240, 522, 335, 354, 581, 244, 245, 272, 427,
	433, 200, 201, 37, 535, 534, 526, -298, -98, 452,
	-98, -98, 203, 452, -113, 232, 194, -149, 231, -68,
	82, 308, -68, 34, 82, -161, -290, -298, 82, -283,
	41, 82, 451, 525, 525, 84, 653, 247, 26, -443,
	-417, 363, -442, -415, 191, 190, 15, 192, 271, 368,
	369, 334, 200, 13, 35, 735, 218, 370, 371, 11,
	223, 372, 373, 239, 14, 374, -444, -420, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 81, 82, -283,
	-263, 205, 371, 426, 448, 426, 426, -270, -269, 384,
	511, 143, -128, 705, -126, -134, -300, -298, -284, -285,
	-199, -471, 252, 548, -257, 330, -277, 204, -130, -132,
	-133, -153, -136, 703, -464, -131, -456, -149, -137, 82,
	606, -109, 10, -108, -110, 9, 8, -109, -229, 22,
	21, -266, -106, -229, -465, 78, -465, -128, -120, 134,
	-122, -298, -166, 100, -176, 33, 29, -175, 348, 231,
	-167, -203, -284, -202, -137, 143, -302, 132, 133, 140,
	101, 186, -187, -185, -186, -188, -190, -191, 226, 479,
	480, 81, 83, 91, 84, 85, 86, 87, 92, 93,
	94, -290, -286, -285, -282, 577, 581, 584, 585, 590,
	-200, -464, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 66, 67, 575, 198, 558, 559,
	482, 560, 13, 561, 562, 563, 648, 220, 567, 103,
	55, 325, 549, 550, 554, -192, 551, 555, 556, 569,
	570, 571, 572, 205, 548, 138, 557, 594, 595, 596,
	597, 598, 599, 600, 601, 603, 604, 602, 578, 579,
	580, 582, 583, 586, 587, 588, 589, 591, 592, 593,
	677, 195, 191, 194, 99, 28, 30, 678, 253, 102,
	463, 497, 566, 21, 25, 214, 197, 485, 212, 142,
	207, 215, 310, 312, 190, 70, 679, 546, 311, 523,
	673, 670, 672, 671, 476, 474, 309, 680, 15, 31,
	224, 260, 681, 472, 192, 251, 106, 107, 682, 46,
	45, 8, 313, 225, 319, 473, 683, 684, 24, 73,
	216, 16, 210, 241, 757, 685, 334, 18, 125, 19,
	686, 667, 669, 668, 204, 119, 200, 749, 68, 258,
	687, 461, 466, 467, 468, 469, 470, 462, 96, 688,
	689, 116, 324, 64, 606, 37, 246, 703, 564, 323,
	690, 43, 42, 496, 500, 495, 322, 512, 117, 22,
	552, 553, 35, 691, 692, 234, 499, 460, 494, 704,
	693, 665, 263, 71, 384, 475, 761, 38, 74, 229,
	380, 351, 47, 97, 20, 259, 69, 39, 573, 122,
	762, 478, 206, 238, 694, 538, 262, 695, 123, 471,
	705, 218, 118, 453, 193, 362, 307, 219, 329, 336,
	696, 252, 124, 524, 664, 697, 568, 34, 223, 306,
	459, 208, 698, 264, 318, 308, 317, 699, 700, 343,
	48, 759, 676, 199, 44, 105, 498, 458, 493, 203,
	565, 239, 314, 9, 49, 36, 519, 14, 374, 72,
	75, 486, 483, 491, 490, 209, 760, 17, 327, 574,
	652, 539, 98, 674, 520, 547, -105, -105, -105, -246,
	448, -253, -250, 534, 535, -251, -254, -248, -203, 511,
	732, 733, 533, 485, 532, -290, -298, -284, 348, 231,
	143, 578, 579, 580, 103, 482, 558, 594, 549, 551,
	546, 550, 548, 33, 595, 29, 94, 596, 575, 205,
	13, 186, 582, 583, 597, 598, 599, 66, 552, 553,
	648, 138, 100, 600, 601, 92, 603, 604, 325, 557,
	67, 602, 198, 588, 587, 586, 589, 561, 562, 93,
	554, 555, 556, 55, 592, 591, 593, -2, -6, -464,
	-149, -355, -342, -345, -290, -284, -286, -287, 227, -285,
	215, -383, 82, -283, 212, -211, -105, 200, 202, 557,
	-264, 205, -264, 239, 238, 271, -278, 264, -264, -264,
	736, 199, -277, 109, 109, -79, -149, -419, -414, -420,
	199, -290, -263, -263, -263, -263, -263, -263, -263, -263,
	82, -288, -149, 187, -84, -149, -141, 16, 16, 75,
	75, 82, -288, 82, 432, 375, 34, -262, 117, 17,
	548, 198, 199, 238, 239, 202, 271, -262, -349, 16,
	119, 242, 242, 242, 242, 242, 243, 242, -260, 525,
	527, 528, 529, -259, 16, 119, 17, -123, 117, 24,
	-464, -229, -229, -259, 242, 135, -100, 99, -100, 82,
	451, 203, -114, 233, -113, -114, -178, -156, 28, 6,
	7, 109, 34, 34, 81, 59, 34, -63, -62, -64,
	294, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 34, -398, 76, 187, -337, 511, 82, -411,
	-412, -149, 84, 84, 74, 354, 74, 77, 203, 77,
	74, -445, 364, 76, -445, 332, 364, 365, 266, 330,
	202, -445, -445, 332, -445, -445, -445, 351, -445, -445,
	525, -445, -445, -445, 366, 367, -445, 523, 202, -445,
	-445, -445, -445, -445, 79, 26, -443, -417, 363, 29,
	428, 431, 538, 652, -55, 444, 445, -168, 26, -375,
	143, 376, 377, 378, 379, 375, 354, 380, 381, 382,
	242, 383, 199, 525, 375, -6, -126, 77, -233, -464,
	77, -200, -464, 82, -330, -329, -326, -327, -328, -325,
	33, 199, -263, 271, -144, -146, -145, -147, 64, 68,
	70, 65, 66, 67, 526, 71, -273, 28, -136, -464,
	-125, -9, -135, -130, -464, -154, 122, -164, -273, -155,
	72, 204, 73, 28, -156, -157, -158, -159, -160, 6,
	7, 54, -464, -464, -7, -8, 26, 27, -14, -7,
	-12, -14, 26, 27, 26, 27, -7, -230, 24, 35,
	-179, 84, 87, -203, -212, -215, -122, -298, 58, -117,
	26, 27, 65, 57, 63, 62, -226, 89, 16, -293,
	99, 97, 98, 116, -292, 28, 82, 81, -288, 187,
	-122, -170, 119, 100, 117, 118, 102, 129, 128, 139,
	132, 133, 134, 135, 136, 137, 138, 130, 131, 142,
	109, 110, 111, 112, 113, 114, 115, -258, -464, -137,
	-464, 187, -464, 187, 188, 189, 187, -176, -176, -176,
	-176, -176, -176, -176, 81, 81, 81, -464, 187, 187,
	187, -464, -464, -464, -464, -464, -195, -122, 652, -464,
	199, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -206, -122, -464, -464,
	-468, -464, -468, -468, -189, -468, -464, -189, -189, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -464, -464,
	-189, -189, -189, -464, -257, -257, 16, -141, -142, -149,
	-152, -298, 77, -247, -252, 536, 538, 448, -251, -251,
	-297, -290, 81, 33, 143, -353, 109, 120, 34, 187,
	-211, 78, 77, -305, -309, -311, -310, -312, -307, -308,
	-69, 489, 487, 483, 482, 485, 488, 143, 486, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	34, 226, 479, 480, 481, 663, 503, 504, 505, 506,
	507, 508, 509, 510, 457, 484, 650, 458, 459, 460,
	461, 462, 463, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, -305, -305, -305, -305,
	-305, -289, -383, 82, -288, 76, -229, -266, -264, -264,
	-279, 208, -277, 82, 100, 82, -148, -290, -298, -161,
	-264, 265, -423, -422, -414, -417, 676, -264, -278, -414,
	270, 268, 269, 77, 203, 77, 203, 79, -263, 74,
	-143, -149, 82, 82, -148, -161, -416, -414, -417, -162,
	-290, -298, -299, -298, -281, -286, -287, 677, 195, 26,
	191, 194, 99, 28, 30, 678, 253, 102, 463, 143,
	578, 579, 580, 497, 566, 21, 25, 214, 103, 197,
	482, 485, 212, 142, 207, 215, 310, 312, 558, 594,
	190, 70, 679, 549, 551, 546, 550, 311, 548, 523,
	673, 670, 672, 671, 476, 474, 309, 33, 680, 15,
	595, 31, 224, 260, 27, 681, 136, 472, 192, 605,
	251, 106, 107, 682, 46, 45, 8, 29, 313, 225,
	94, 319, 596, 473, 683, 684, 24, 73, 216, 16,
	210, 241, 757, 685, 334, 18, 575, 125, 19, 686,
	667, 669, 668, 205, 204, 119, 200, 749, 68, 258,
	13, 687, 461, 466, 467, 468, 469, 470, 462, 186,
	96, 688, 689, 116, 324, 64, 582, 583, 606, 50,
	37, 246, 597, 598, 703, 599, 564, 323, 690, 43,
	42, 496, 500, 495, 322, 512, 66, 117, 22, 552,
	553, 35, 691, 692, 648, 234, 499, 460, 494, 704,
	693, 665, 138, 263, 71, 100, 384, 600, 601, 92,
	475, 761, 38, 74, 229, 380, 351, 47, 97, 20,
	259, 69, 39, 573, 122, 762, 603, 478, 206, 238,
	694, 538, 262, 695, 123, 604, 471, 705, 218, 118,
	453, 193, 325, 557, 362, 307, 219, 329, 336, 67,
	696, 252, 124, 602, 198, 524, 664, 11, 697, 568,
	34, 223, 306, 459, 208, 698, 264, 318, 308, 317,
	699, 57, 700, 343, 48, 588, 587, 586, 589, 759,
	65, 561, 562, 676, 199, 44, 105, 498, 458, 493,
	203, 565, 239, 93, 314, 9, 49, 36, 519, 14,
	374, 72, 75, 554, 555, 556, 55, 486, 483, 491,
	592, 490, 591, 593, 209, 760, 104, 17, 327, 574,
	652, 539, 98, 674, 520, 14, 192, 77, 81, -241,
	82, -288, 81, -241, -240, -241, -240, 242, -262, 81,
	-302, -122, -264, -264, -149, -149, -149, -149, -149, -149,
	-262, -262, -262, -262, -259, 16, -259, -262, -298, -298,
	-122, -176, -414, 550, 134, -262, -298, -101, -99, 217,
	-99, -101, 82, 82, 451, -92, -4, -18, -16, -17,
	-114, -9, 38, 28, 28, 82, -63, -63, 81, -63,
	77, 109, -63, -178, 78, -195, -290, -396, 749, 77,
	-413, 28, 538, 539, 512, -447, 199, 241, 238, 74,
	-447, -442, 371, -416, -415, -414, -445, -446, -290, -445,
	-445, -445, 525, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -420, 74, 77, 354, 74, 16, 74, 203,
	-378, -380, 442, 443, 539, 540, 455, 375, 375, 375,
	375, 375, 375, -376, -141, 652, -376, -141, 203, 253,
	-134, 28, -232, -231, -291, -284, -285, -286, -287, 227,
	-290, -281, -471, -330, -327, -326, -328, 485, 533, 142,
	545, -149, -414, -162, -132, -132, -130, -132, 64, 64,
	64, 69, 64, 69, 69, 64, 64, -145, -300, -273,
	77, -465, -465, -465, -9, -464, -300, -164, -273, 200,
	200, 200, 102, 16, 52, 26, 102, 16, 52, 26,
	102, 16, 52, 26, -119, -118, -121, 134, -122, -298,
	-176, -242, 96, 14, 119, 77, 23, 77, -228, 30,
	31, 187, -177, 59, 84, 87, -242, 77, -120, -149,
	-122, -122, -122, -193, 92, 100, 93, 94, -292, 227,
	134, -299, -291, -286, -284, -285, 348, 231, -281, -176,
	-194, -200, -137, 88, 119, 117, 118, 102, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -301, 82, 81, 143, 82, -291, -118,
	-291, -175, 226, 479, 480, 92, -175, -290, -290, -107,
	26, 27, -291, 526, -290, -291, -107, -107, -107, -107,
	-107, 77, -465, -118, -118, -118, -465, -122, -122, -118,
	-176, -118, -203, 81, -118, -203, 81, -118, -176, 564,
	565, 566, -118, -118, -107, -204, -205, 104, -203, -284,
	-287, 348, 231, -118, -465, 84, -182, -183, 655, 664,
	665, 667, 670, 663, 662, 661, 659, 658, 657, 660,
	656, 674, 673, 672, 671, 669, 668, 666, -182, -182,
	-184, 226, 481, 479, 480, -118, -119, -118, -118, -465,
	-465, -121, -118, -121, -118, -118, -121, -465, -465, -465,
	-118, -118, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -465, 84, -151, 96, -149, -125, -149, -141,
	-466, 16, 75, -466, 77, 187, -250, -253, 77, 537,
	539, 540, -247, -322, -323, 142, 74, 95, 81, -122,
	-291, -299, -229, -374, -342, -343, -344, -345, -367, 215,
	-382, 206, 208, 210, 209, 49, -346, 216, 200, 50,
	-306, -332, 518, 519, -314, 76, -313, 76, -69, 483,
	482, 485, -313, 483, 490, -313, 490, 490, -313, -313,
	-313, 483, 76, 76, -314, -314, -314, -334, 76, -334,
	478, -335, 76, -335, -335, -335, -335, -306, -306, -306,
	-306, -306, -383, -122, -230, -290, -149, 202, 736, -330,
	29, -330, -70, 253, 221, 187, 76, -162, 256, 257,
	-418, 77, 33, -424, 331, 84, 205, -149, 231, -149,
	-149, -414, -414, -420, -141, -149, 77, 77, 187, 715,
	715, -149, 77, 81, 82, 82, -178, -350, 16, 119,
	-262, -149, -178, -116, 227, 75, -468, -465, 453, 454,
	82, -92, -176, 38, 38, -62, -175, -290, 78, -397,
	204, 557, 81, -412, -300, 511, 539, -448, 134, -290,
	-447, -448, -451, 652, 203, 78, 77, -445, -447, 334,
	77, -447, -416, -414, -377, -379, 434, 436, 437, 435,
	438, 439, 440, 441, 77, 109, 109, 456, -381, 24,
	-376, 538, -376, 81, -176, -136, -465, 77, 187, -200,
	34, -352, -353, -352, -352, -82, -389, -359, -80, -387,
	122, 195, 192, 191, 267, 197, -325, 558, 250, 249,
	283, 284, 73, 35, 196, 193, -72, -81, 230, 289,
	235, 290, 194, 229, 291, 228, 292, 652, 287, 756,
	516, 608, 609, 642, 90, 612, 247, 41, 200, 622,
	615, 545, 618, 619, 376, 617, 621, 211, 625, 624,
	626, 628, 629, 630, 340, 633, 634, 635, 248, 636,
	637, 638, 365, 643, 9, -425, -424, -431, 74, -139,
	-138, 74, 75, -140, 74, -138, 64, 64, 64, -236,
	76, -300, -130, -465, -238, -290, -164, -300, -464, -464,
	-464, -176, -176, 119, -176, -176, 119, -176, -176, 119,
	-465, 77, 187, 77, -239, 40, 39, -290, 513, 60,
	-179, -179, -215, -256, 24, 16, 55, 55, -127, 16,
	-226, -226, 92, 93, 94, 187, -464, -194, -176, -176,
	-176, -116, 99, -465, -465, -119, -118, -118, -118, -118,
	-118, -122, -465, -465, -465, 77, 75, 28, -465, 75,
	119, -465, 16, 16, -465, 16, 16, -465, -465, 16,
	-176, -176, -176, -465, -465, -118, -207, -205, 106, -122,
	-465, -465, -465, -465, -465, 77, 77, 16, 77, -465,
	-465, -465, -465, -216, 573, -216, -465, -465, -465, -465,
	-465, -465, -216, -216, -216, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -237, 122,
	-149, 34, -237, 75, -125, -125, -152, -298, 134, -252,
	-255, 541, 538, 544, 82, 81, 143, 81, 187, -230,
	-358, -373, 77, -359, 756, 516, 608, -325, 609, 642,
	90, 612, 247, 41, 200, 622, 615, 545, 618, 619,
	376, 617, 621, 211, 625, 624, 626, 628, 629, 630,
	340, 633, 447, 634, 635, 248, 636, 637, 638, 365,
	643, 9, 652, 76, -351, -289, -382, 82, -283, 50,
	-346, -348, -346, -346, -346, -351, 82, -283, -351, 50,
	718, 92, 100, -321, -323, 143, -318, -319, -336, -339,
	-315, 28, 757, 521, 218, -345, 485, 533, 33, 74,
	516, 206, 50, 49, 210, 90, -333, 520, 84, 84,
	584, -313, 490, -313, -313, -313, -313, -313, -340, 81,
	-340, 84, -334, 84, 78, -294, 75, -233, -149, 676,
	-71, 13, 14, 15, -290, -399, -400, -401, -290, 119,
	258, 259, 74, -434, 362, -422, 332, 341, 99, 21,
	652, -455, 100, 203, 203, -393, 219, 214, -149, -414,
	-290, 74, 74, -241, -165, 17, 82, 82, -259, -262,
	-176, -417, 244, 245, -176, -176, -150, 96, -413, 203,
	187, 187, -448, 203, 353, -416, -290, -448, 351, 334,
	-448, -54, 204, 16, 77, 109, 109, 109, 109, 109,
	109, 109, 109, -380, 76, 76, 385, 35, -231, -291,
	-352, 82, 81, 143, 82, 81, 143, 81, -388, 77,
	-389, 195, 192, 283, 284, -387, 21, -274, -346, -395,
	-394, -344, -345, 122, 207, 215, 215, 212, -274, -346,
	206, 216, 122, 215, 212, -274, 200, -352, -274, 485,
	142, 203, 37, 37, 365, 122, 365, 122, -352, -274,
	207, -346, -271, 215, -272, 203, 28, 288, 122, 122,
	122, 122, 122, 122, 122, 122, 293, 676, -352, -352,
	-352, -352, -352, -352, -352, -352, 614, 614, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -356, -452, 81, -462, 90, 271, 340, 82, -283,
	-281, 84, 86, 85, -352, -352, -437, 652, -163, 193,
	277, 273, -122, 76, -122, -234, -290, -236, -465, 77,
	-164, -234, -234, -234, 99, 203, -464, 99, 203, -464,
	99, 203, -464, -273, -121, 134, -299, 81, 77, 81,
	81, 514, 61, -149, -165, 605, -125, -120, 134, -291,
	-119, -116, 99, -176, -465, -465, -465, -465, -465, -465,
	-304, 143, 482, 485, 226, 481, 474, 472, 471, 473,
	501, 487, 518, 479, 519, 663, -301, -304, -301, -176,
	-176, -176, -176, -176, -176, 16, 16, 16, 649, -211,
	108, -122, 105, -176, -176, -176, -176, -290, -221, -464,
	-216, -216, -216, -216, -216, -216, -217, -216, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -172,
	-173, 34, -171, -9, -464, -174, -472, 55, 59, -464,
	-244, -249, -203, -284, -287, 227, -165, -125, -165, -165,
	187, 538, 542, 543, -373, -352, -352, -352, 533, 485,
	142, -352, -352, -352, -352, -352, 614, 614, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, 448, -352, -352, -352, -352,
	-352, -352, -356, -452, -352, -352, 676, -369, -368, 82,
	-288, 206, 49, -382, -351, -351, -351, -351, -351, -102,
	-289, 92, -464, 758, 84, -149, 34, 82, 143, 81,
	-175, 133, -302, -167, -186, -464, 93, 94, 549, 550,
	554, 551, 555, 556, 569, 570, 571, 572, 546, 552,
	553, 14, 50, 50, 50, 81, 78, 78, 78, -313,
	78, 77, 78, 77, 78, 77, -169, 710, 711, 74,
	-290, 28, -233, 84, 74, 78, 77, -305, -290, -290,
	-290, 273, -437, 337, -435, -433, 343, 344, 345, 346,
	347, -417, 342, -424, 339, 81, 82, 81, 675, 709,
	730, 702, 29, -149, -414, -235, 76, -234, -235, -122,
	-178, -237, 199, -416, 134, 134, -290, 203, -416, 351,
	-450, 652, 16, 16, 351, 16, 386, -416, -379, 81,
	81, 81, 84, 84, 84, 84, 84, -141, -141, 81,
	82, 81, 143, -358, -80, 195, 192, 283, 284, -360,
	-361, -364, -363, 123, 623, 690, 76, -341, 82, -288,
	-264, -267, 208, 206, -464, 82, -289, -289, -289, -290,
	50, 50, -238, -289, -289, -290, -289, 33, 280, 281,
	282, 82, 34, -352, 485, -238, 26, -238, 26, 33,
	337, 285, 286, -341, -289, -290, -149, 216, 212, -289,
	-238, 26, 84, -238, -290, -238, 26, -238, 26, -238,
	26, -238, 26, 644, -356, -122, -356, -462, -462, 81,
	81, 81, -352, -352, -104, 645, 217, -462, 81, -104,
	-462, -452, 81, -103, 217, 220, 222, -356, -356, -356,
	-462, -462, -462, -462, 81, -357, 33, 616, 477, 611,
	632, 610, 82, 92, 81, 81, -462, 33, -462, 33,
	-462, -356, 639, -462, -464, -438, -436, 355, 356, 357,
	358, -430, 249, 250, 203, 278, 100, -427, 755, 274,
	-234, 78, 77, -154, -290, -465, -465, -465, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -300, 187, 528,
	-290, -320, -321, -208, 18, -226, -465, -176, -217, -217,
	-217, -217, -217, -465, -314, -314, -314, -314, -335, 478,
	-314, 462, -314, 462, -465, -465, -465, -465, 24, 24,
	24, 24, -465, -176, -176, -176, -464, -115, 568, -122,
	77, 77, -465, -465, -295, 82, -243, 74, -243, -244,
	-273, -9, -465, -232, -174, -464, 11, 55, 59, 652,
	199, -198, -201, -471, -238, -165, 77, -353, -353, -353,
	-353, -211, -165, -356, -356, -356, -352, 34, -352, -462,
	-462, 81, 81, 81, -352, -352, -104, -462, 81, -104,
	-462, -452, 81, -103, -356, -356, -356, -462, -462, -462,
	-462, 81, -357, 82, 92, 81, 81, -462, 33, -462,
	33, -462, -356, 639, -462, -464, 644, 78, 77, -314,
	-314, 50, -348, 76, -176, 28, 76, 82, 143, 81,
	-175, 81, -176, -192, 81, 84, 84, -149, -225, 28,
	-455, -149, -402, -403, -404, 90, 651, 100, 260, 261,
	217, 262, 263, 264, -401, -305, -305, -305, -427, -440,
	-441, -439, 340, 360, 361, 348, 99, 81, 81, 81,
	-426, 331, 99, 340, 21, 28, 21, 28, 81, 81,
	81, 81, 84, 75, -234, -262, -320, -149, -450, -416,
	-450, 334, -416, -416, 16, -416, 330, -54, 78, 78,
	-365, 631, -464, 528, 620, 50, -341, -213, 220, 221,
	-305, -305, -351, -348, 50, -384, -386, 122, -289, 710,
	711, 710, 711, 34, 192, 748, 718, -341, -352, -301,
	34, 365, 365, 365, 365, -213, -272, 203, 50, -289,
	203, 365, 365, 96, 652, 81, 81, 613, 627, -453,
	-452, -436, 84, 84, 84, 84, -317, 90, 74, -162,
	278, -431, 74, -181, -175, -186, -175, 78, -290, 77,
	77, 77, 134, -464, -405, -260, -209, 19, 21, -320,
	82, -320, 82, -176, -176, -176, -176, -465, -465, -465,
	-176, -465, 81, -176, -176, -197, 122, 32, -243, -300,
	-465, -174, -464, -465, -465, 77, -200, -464, -465, -211,
	-249, -122, -122, -122, -122, -229, -301, -352, -324, -452,
	81, 81, 81, 613, 627, -453, -371, -370, 75, 211,
	90, 617, 635, 748, 718, -368, -228, -228, -351, -351,
	-234, -465, -464, -234, -465, 78, 78, 76, -227, -225,
	24, -226, -404, 81, 264, 260, 264, 264, 264, 264,
	265, -431, -421, 90, 338, -439, 349, 716, 333, 362,
	84, 84, 121, 35, 36, -433, 21, 652, -424, 339,
	81, 81, 339, 81, 81, 331, -455, 41, 78, -405,
	-449, 28, -450, -449, 351, -54, -54, -416, -54, -362,
	640, 84, -176, -464, -464, -276, 267, 78, 82, -306,
	-306, -294, -351, -351, -465, 77, -290, 33, 33, -213,
	-301, -301, -289, -290, -289, 203, -289, -464, 199, 77,
	-465, 328, 81, 367, -163, -432, -183, -176, -176, -176,
	-457, -458, -291, 723, -406, 43, -409, 44, -219, 574,
	-210, -122, -196, -124, -122, -465, -465, -465, -465, -112,
	119, 652, -465, -465, -211, 21, 50, -236, -174, -9,
	-464, -201, -465, -229, -301, -465, -370, -452, -352, 81,
	-352, -352, 78, -331, 760, 759, -176, 78, -369, -9,
	-227, 251, -227, 41, 41, 256, 257, -430, 81, 81,
	33, 350, 186, 33, 84, 186, 576, 339, 81, 82,
	340, 340, 21, -176, -406, -414, -449, -54, -385, -464,
	21, -465, -234, -176, -464, 109, 76, -294, 76, -386,
	55, -176, 142, 142, 203, -289, -384, -149, -452, -225,
	-430, 132, -428, 275, -465, -465, -465, -465, 77, -305,
	24, 81, 607, -407, -408, -338, 47, 21, -218, -220,
	-290, 77, -465, 650, 71, 653, -222, 124, 123, -195,
	14, -9, 84, 81, 81, 218, -465, 78, -225, -9,
	252, -27, -4, -16, -17, -18, -19, -21, -73, -22,
	-23, -28, -29, -24, -83, -87, -88, -89, -85, -96,
	-94, -95, -91, -90, -32, -34, -35, -37, -40, -41,
	-38, -39, -36, -30, -33, -42, -25, -43, -44, -45,
	-50, -51, -31, -52, -46, 103, 205, 447, 309, 320,
	321, 322, 82, 325, 327, 323, 324, 319, 329, 446,
	-317, 84, 33, 84, 33, 352, 340, 28, 84, -316,
	204, 652, -384, -363, -465, -465, -234, 84, -369, 76,
	-369, 236, -352, -301, -289, -465, -72, 652, -27, -317,
	186, -429, 276, -181, -465, -458, -459, 607, 29, 729,
	528, 81, 48, 44, -410, 45, 46, 81, 77, 28,
	-124, 61, 651, 654, -465, -223, 102, -224, 121, 576,
	-180, 84, 186, -223, -244, -465, -149, -331, -372, -371,
	-280, 652, -225, -214, 254, 255, -225, -122, -57, -58,
	104, -122, 82, -67, -296, 312, 313, 314, -291, 82,
	82, -56, -27, 80, -56, -122, 82, 82, -467, 16,
	58, -176, 108, -56, 328, 659, 659, 81, -236, 84,
	332, -465, 620, 50, -465, 78, -369, 78, 237, -301,
	288, -225, 328, -175, -181, -432, -273, 81, 607, -464,
	528, 21, 21, 21, 21, -220, -221, 61, -224, 126,
	127, 252, 126, 127, -175, 76, 212, 279, 511, -280,
	-225, 82, 82, -57, 108, 106, -58, -122, 105, 310,
	311, 315, -305, 77, 763, 446, 322, 325, 327, 763,
	328, 82, 16, 763, -225, -245, 34, 43, 124, 33,
	337, 26, -417, -464, -276, -372, 78, -372, -464, -225,
	-183, -432, -300, -460, -461, 377, 92, 33, 81, -457,
	-464, 81, 81, 81, 81, 652, 99, -182, -234, 351,
	212, 212, -227, 108, 106, 103, -56, 105, -56, 24,
	24, 24, -320, -291, 108, -27, 108, -56, -56, -56,
	-122, 326, -56, 96, 108, -27, -244, 8, -176, -464,
	-372, -176, 234, -27, -461, 92, 33, -460, 92, 33,
	74, 74, -175, -465, -457, 653, -224, 78, 351, 351,
	-20, -26, -19, -25, -16, -17, -18, 446, 652, 103,
	-56, 763, -56, 763, -68, 84, -9, -66, -65, 84,
	-68, 317, 100, 318, 82, -322, 322, 82, 763, 763,
	763, 328, -122, 763, -61, 82, -225, -417, -465, -176,
	-465, -465, -225, 74, -175, 74, -175, 682, 377, 682,
	377, 74, -465, 654, -391, -392, 74, -225, -56, 108,
	-128, 763, 108, 763, 108, 106, -59, -60, 107, -27,
	77, 316, 33, 108, 108, 326, -56, 108, 108, 77,
	-366, 641, -465, 74, 74, 377, 377, 682, 377, -392,
	74, -391, 74, 15, 14, 763, 108, 103, 205, -56,
	108, 106, -60, -122, -65, -176, 82, 322, -122, 763,
	325, 327, 82, 84, -366, 74, 74, -390, 219, 214,
	217, 34, -390, 108, 103, 763, 205, -56, 105, 82,
	108, 108, 377, 682, 213, 33, 92, 108, 763, -56,
	325, 327, 205, 108, 763, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1727, 1225, 1727, 0, 1225, 0, 1225, 0, -2,
	133, 930, 931, 932, 933, 0, 1808, 0, 0, 0,
	0, 0, -2, 1187, 1188, 1191, 1188, 1188, 1217, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 0, 0, 732, 0, 64, 0, 1331, 2757,
	-2, 1221, 1222, 1223, -2, -2, 0, 53, 0, 60,
	2, 1735, 0, 1238, 1227, 1735, 0, 0, 49, 0,
	0, 1225, 1225, 1225, 87, 88, 0, 119, 0, 121,
	0, 0, 1727, 1225, 0, 0, 0, 1812, 1812, 335,
	1812, 1812, 1827, 0, 1830, 333, 0, 1809, 1825, 1826,
	1828, 0, 0, 0, 0, 0, 1810, 1810, 1810, 1810,
	1810, 1810, 1810, 1810, 0, 0, 1101, 1422, 1424, 1425,
	1426, 1427, 1839, 1840, 2748, 2749, 2750, 2751, 2752, 2753,
	2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
	2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739,
	2740, 2741, 2754, 2755, 2756, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 0, 0,
	0, 1106, 1107, 1108, 1109, 1110, 2742, 2743, 2744, 2745,
	2746, 2747, 1119, 1120, 0, 0, 0, 1178, 0, 1178,
	1138, 1139, 0, 1141, 0, 0, 0, 0, 0, 0,
	0, 1175, 1153, 1156, 1160, 0, 1735, 1735, 1175, 1166,
	0, 784, 785, 786, 1183, 1184, 1172, 1185, 1190, 1189,
	1198, 1198, 0, 1189, 1219, -2, 1219, 1359, 0, 461,
	463, 0, 484, 0, 487, 490, 1428, 0, -2, -2,
	1850, 1204, 0, 0, 1876, 1877, 0, 0, 0, 0,
	0, 2614, 233, 349, 274, 274, 274, 274, 274, 274,
	274, 0, 274, 274, 0, 274, 274, 274, 2630, 274,
	0, 274, 274, 274, 274, 274, 232, 348, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 338, 339, 340,
	0, 0, 0, 736, 1192, 741, 739, 0, 733, 730,
	731, 0, 80, 0, 67, 81, 1759, 1381, 1382, 1383,
	1328, 0, 1332, -2, 0, 1810, 0, 1815, 69, 1318,
	1319, 1320, -2, 0, 0, 1326, 1327, -2, 1478, 1839,
	0, 0, 1232, 0, 0, 1229, 1235, 0, 1742, 0,
	0, 117, 1226, 47, 48, 2758, 59, 0, 0, 1254,
	1309, 0, 1437, 2311, 1443, -2, 2224, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 2169, 0, 0, 0, 0,
	0, 2266, 1516, 1517, 1518, 1519, 1520, 1521, 2477, 2695,
	2696, 1705, 1709, 1710, 1711, 1712, 1713, 1714, -2, -2,
	-2, 1688, 1689, 1703, 0, 2748, 2749, 2751, 2752, 2753,
	1777, 0, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 2292, 2355, 2243, 2360, 2188, 2754,
	2180, 2755, 2257, 2384, 2385, 2756, 2300, 2727, 0, -2,
	2409, 2348, -2, -2, -2, 1584, -2, -2, -2, 2738,
	2739, 2724, 2729, 2250, 2198, 2308, 2349, 2189, 2210, 2229,
	2278, 2279, 2281, 2313, 2314, 2332, 2341, 2359, 2170, 2171,
	2172, 2273, 2274, 2381, 2380, 2379, 2382, 2415, 2413, 2416,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2173, 2174, 2175, 2176, 2177, 2179, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2190, 2191, 2192, -2, 2197, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2208, 2209, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2225, 2226, 2228, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2244, 2245,
	2246, 2247, 2248, 2249, 2251, 2252, 2253, 2254, 2255, 2256,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2267, 2268,
	2269, 2270, 2271, 2272, 2275, 2276, 2277, 2280, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2293, 2294,
	-2, -2, 2297, 2298, 2299, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2309, 2310, 2312, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2342,
	2343, 2344, 2345, 2346, 2347, 2350, 2351, 2352, 2353, 2354,
	2356, 2357, 2358, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2383, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2410, 2411, 2412, 2414, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 0, 1814, 1814, 0, 104,
	2697, 0, 1784, -2, -2, 1786, 0, 0, 0, -2,
	-2, -2, -2, 2181, -2, 1688, 0, 0, 0, 0,
	2169, 2170, 2171, 2172, 2178, 2180, 2188, 2189, 2193, 2194,
	2195, 2196, 2198, 2207, 2210, 2224, 2227, 2229, 2243, 2250,
	2257, 2266, 2273, 2274, 2278, 2279, 2281, 2292, 2295, 2296,
	2300, 2308, 2311, 2313, 2314, 2315, 2332, 2341, 2348, 2349,
	2355, 2359, 2360, 2379, 2380, 2381, 2382, 2384, 2385, 2396,
	2406, 2407, 2408, 2409, 2413, 2415, 2416, 120, 1727, 0,
	122, 0, 541, 542, 0, 0, 0, 0, 0, 0,
	0, 810, 1833, 1834, 0, 1735, 1238, 1812, 1812, 333,
	0, 0, 0, 0, 0, 1812, 328, 0, 0, 0,
	0, 1812, 335, 0, 0, 1081, 0, 1082, 0, 343,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 1126, 1100, 0, 1102, 98, 1105, 0, 0, 0,
	0, 1123, 1124, 1127, 0, 1169, 1178, 1129, 0, 0,
	1812, 1812, 0, 0, 0, 0, 0, 1137, 0, 812,
	813, 1178, 1143, 1144, 1178, 1178, 1178, 1175, 0, 1175,
	1150, 1173, 1174, 1178, 0, 0, 0, 1155, 0, 0,
	0, 1163, 1164, 1178, 1168, 0, -2, 1196, -2, 1205,
	0, 0, 79, 1220, 1219, 0, 1224, 1360, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 486, 467, 0,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 1359, 0, 0, 1845, 1851, 1209, 1867,
	1868, 0, 1878, 1879, 278, 0, 278, 0, 0, 0,
	0, 200, 274, 0, 202, 274, 274, 274, 0, 274,
	274, 209, 210, 274, 212, 213, 214, 274, 216, 217,
	274, 219, 220, 221, 274, 274, 224, 274, 274, 227,
	228, 229, 230, 231, 347, 0, 0, 0, 2614, 1811,
	0, 0, 0, 0, 737, 742, 743, 738, 740, 709,
	0, 0, 0, 0, 714, 715, 716, 717, 0, 0,
	720, 721, 726, 726, 0, 65, 66, 0, 0, 0,
	1331, 1329, 0, -2, 935, -2, 685, 686, 687, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 1384, 0,
	0, 1387, 0, 0, 0, 0, 0, 1824, -2, 0,
	0, 0, 0, 1316, 0, 1333, 0, 1335, 0, -2,
	0, 0, 0, 1824, 1339, 1340, 1341, 1342, 1343, 0,
	0, 0, 1480, 0, 57, 58, 1233, 1234, 54, 62,
	63, 55, 1230, 1231, 1236, 1237, 56, 73, 0, 0,
	1736, 1739, 1740, 1741, 1728, 1729, 1732, 0, 0, 73,
	1239, 1240, 1241, 1242, 1243, 1244, 0, 1228, 0, 1255,
	0, 0, 0, 0, 1310, 0, 1313, 1314, 1315, 0,
	1441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1444, 0, 1458,
	0, 0, 0, 0, 0, 0, 0, 1509, 1510, 1511,
	1512, 1513, 1514, 0, 1706, 1707, 1708, 1245, 0, 0,
	0, 1245, 1245, 1245, 1245, 1245, 0, 1484, 2422, 0,
	2387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1245, 0, 1680, 0, 0,
	1581, 0, 1582, 1583, 1585, 1599, 0, 1586, 1587, 0,
	0, 0, 0, 0, 1480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1594, 1595, 1596, 0, 0, 0, 0, 0, 0, 98,
	100, 1422, 0, 105, 107, 0, 0, 2697, 1787, 1788,
	676, 1802, 1803, 1804, 1805, 0, 773, 774, 1800, 0,
	1735, 827, 0, 558, 655, 576, 577, 578, 645, 580,
	647, 0, 647, 647, 1677, 1678, 647, 647, 647, 622,
	623, 624, 625, 626, 628, 629, 630, 631, 632, 0,
	0, 604, 645, 645, 645, 608, 635, 636, 637, 638,
	639, 640, 641, 642, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 650,
	650, 652, 652, 652, 652, 652, 558, 558, 558, 558,
	558, 0, 809, 1036, 1037, 0, 1742, 117, 0, 0,
	0, 0, 335, -2, 0, -2, 0, 1417, 0, 0,
	0, 0, 146, 371, 351, 131, 0, 0, 329, 334,
	330, 331, 332, 0, 0, 0, 0, 342, 0, 0,
	1089, 96, 1090, 1091, 1092, 1093, 1094, 344, 1095, 1096,
	373, 0, 1423, 1841, 1842, 1843, 1844, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 0, 0, 0, 1111, 1113,
	1117, 1118, 1112, 1114, 1121, 1115, 1122, 1167, 1128, 1179,
	0, 1181, 0, 0, 1359, 1133, 1134, 1135, 1136, 814,
	1142, 1145, 1146, 1152, 1178, 0, 1359, 1151, 1176, 1177,
	1154, 1472, 1157, 1597, 0, 1165, 1186, 1202, 0, 1197,
	0, 1203, 1207, 1206, 0, 1210, 1213, 1214, 1215, 1216,
	79, 1212, 0, 0, 0, 1218, 462, 464, 466, 485,
	0, 0, 488, 489, 491, 0, 1429, 1847, 0, 0,
	1870, 0, 1872, 1874, 0, 0, 279, 280, 281, 278,
	0, 234, 0, 296, 350, 0, 201, 0, 276, 203,
	204, 205, 274, 207, 208, 211, 215, 218, 222, 223,
	225, 226, 346, 278, 0, 0, 278, 0, 0, 0,
	735, 754, 0, 0, 1193, 1194, 0, 710, 711, 712,
	713, 728, 719, 722, 726, 0, 723, 726, 0, 0,
	82, 0, 0, 1761, 1764, 1765, 1766, 1767, 1768, 1769,
	1837, 1838, 0, 934, 688, 689, 690, 0, 771, 771,
	771, 681, 356, 383, 1377, 1379, 0, 1374, 1385, 1386,
	1388, 0, 1390, 0, 0, 1393, 1394, 1395, 1363, 0,
	0, 1325, 1477, 1479, 0, 0, 1431, 1337, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 1354,
	0, 0, 0, 1355, 0, 1481, 1482, 1250, 1251, 0,
	0, 45, 0, 1743, 0, 0, 0, 0, 1731, 1733,
	1734, 0, 0, 1716, 0, 0, 70, 117, 117, 50,
	1438, 1439, 1440, 1442, 1459, 0, 1461, 1463, 1311, 1312,
	1256, 0, 1690, -2, 1692, 1693, -2, -2, -2, 1449,
	1450, 1474, 1475, 1476, 0, 0, 0, 0, 1472, 1454,
	0, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1508, 1612, 1613, 1614, 0, 1701, 0,
	1702, 1506, 0, 0, 0, 1715, 1507, 1696, 1515, 1480,
	1246, 1247, 1699, 1700, 1697, 1698, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 1556, 0, 0, 0,
	0, 0, 1490, 1705, 0, 1490, 1705, 0, 0, 2282,
	2394, 2174, 0, 0, 0, 1686, 1683, 0, 0, 0,
	0, 2742, 2743, 0, 1598, 0, 0, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 0, 0,
	0, 1282, 1283, 1284, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1592, 0, 102, 0, 1421, 0, -2, 0,
	0, 94, 95, 0, 0, 0, 1785, 0, 0, 0,
	110, 111, 106, 1789, 677, 0, -2, 1796, 1705, 1798,
	1690, 0, 1742, -2, 543, 544, 545, 546, 0, 791,
	800, 0, 0, 789, 0, 791, 791, 0, 787, 788,
	549, 658, 656, 657, 579, 0, 609, 0, 647, 647,
	1677, 1678, 611, 647, 647, 614, 647, 647, 617, 620,
	621, 627, 0, 0, 605, 606, 607, 596, 0, 597,
	650, 599, 0, 600, 601, 602, 603, 550, 551, 552,
	553, 554, 808, 0, 298, 1831, 1759, 0, 0, 126,
	1813, 127, 0, 394, 395, 0, 300, 0, 336, 337,
	148, 0, 0, 352, 0, 137, 0, 538, 539, 0,
	1083, 0, 1085, 341, 1097, 1088, 0, 0, 0, 0,
	0, 99, 0, 1180, 1130, 1131, 1132, 1435, 0, 0,
	1147, 1175, 1178, 1170, 0, 0, 1158, 0, 1201, 1199,
	1208, 1211, 1356, 0, 0, 468, 469, 470, 492, 0,
	1848, 1849, 1846, 1869, 0, 1873, 1875, 0, 282, 284,
	0, 0, 190, 0, 0, 275, 0, 206, 0, 0,
	0, 0, 192, 0, 734, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 718, 0,
	724, 0, 725, 707, 708, 83, 1760, 0, 0, 1330,
	771, 0, 772, 0, 0, 1044, 937, 938, 939, 1046,
	0, -2, 1042, 1042, 771, 1042, 0, 0, 0, 0,
	0, 0, 976, 771, 1042, 1819, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1034, 1035, 771,
	771, 771, 771, 771, 771, 771, 771, 0, 0, 771,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 0, 771, 771, 158, 357, 1079, 0, 1371,
	1378, 0, 0, 1372, 0, 1373, 1389, 1391, 1392, 1321,
	0, 1363, 1317, -2, 0, 1367, 1336, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 74, 2490, 0, 77, 0, 0,
	1737, 1738, 1730, 0, 1806, 1807, 1717, 1718, 1435, 0,
	0, 1248, 1460, 1462, 1464, 0, 1480, 1451, 1472, 1455,
	0, 1452, 0, 1446, 1554, 0, 0, 0, 0, 0,
	0, 1485, 1552, 1553, 1555, 0, 0, 0, 1559, 0,
	0, 1563, 0, 0, 1605, 0, 0, 1606, 1568, 0,
	0, 0, 0, 0, 1574, 1727, 0, 1684, 0, 0,
	1577, 1578, 1579, 1580, 1600, 0, 0, 0, 0, 1601,
	1602, 1603, 1604, 1541, 0, 1542, 0, 0, 0, 0,
	0, 0, 1549, 1550, 1551, 1265, 1265, 1265, 1265, 1265,
	1265, 1265, 1265, 1265, 1265, 1265, 1265, 1593, 0, 0,
	1420, 0, 1435, 0, 1435, 1435, 101, 0, 1430, 108,
	109, 0, 0, 115, 678, 679, 680, 1797, 0, 299,
	540, 828, 681, 905, 771, 771, 771, 0, 771, 771,
	771, 771, 771, 0, 0, 771, 771, 771, 771, 771,
	771, 771, 771, 771, 771, 771, 771, 771, 771, 771,
	771, 771, 0, 771, 771, 771, 771, 771, 771, 0,
	771, 771, 0, 0, 0, 0, 799, -2, -2, 791,
	791, 791, 790, 791, 791, 782, 792, 793, 783, 806,
	559, 560, 0, 562, 563, 564, 565, 566, 567, 568,
	569, 0, 0, 0, 0, 574, 0, 0, 0, 0,
	667, 0, 702, 704, 0, 0, 575, 659, 0, 0,
	0, 610, 647, 618, 612, 613, 615, 616, 0, 643,
	0, 0, 598, 0, 824, 0, 0, 0, 1759, 0,
	0, 396, 397, 398, 1418, 0, 301, 302, 0, 0,
	0, 0, 0, 158, 0, 372, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 1087, 1098, 1099, 97, 345,
	374, 0, 0, 1116, 1140, 0, 815, 816, 1359, 1149,
	1473, 1159, 1161, 1162, 1357, 1358, 102, 0, 1871, 0,
	0, 0, 0, 0, 0, 294, 277, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 0, 0, 0, 727, 1762, 1763,
	0, 694, 695, 696, 697, 698, 699, 700, 904, 681,
	1045, 0, 0, 0, 0, 1047, 912, 0, 1812, 0,
	0, 946, 947, 0, 1043, 926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 968, 969, 970, 0, 971, 0, 0, 0,
	0, 0, 0, 0, 1820, 1821, 1822, 988, 0, 0,
	0, 0, 0, 0, 0, 0, 1068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1027, 1028, 885, 886, 887, 888, 889, 901, 902,
	903, 890, 891, 892, 0, 0, 1038, 0, 386, 0,
	0, 0, 1375, 0, 1380, 0, 1365, 1322, -2, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 1252, 0, 0, 0, 75,
	668, 1744, 1745, 46, 1719, 71, 72, 117, 1257, 1704,
	0, 1453, 0, 1456, 1522, 1265, 1265, 1265, 1265, 1265,
	0, 645, 645, 645, 1662, 645, 652, 1665, 1667, 1668,
	1669, 645, 1671, 645, 1674, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	1576, 1687, 0, 0, 0, 0, 0, 1258, 1259, 1261,
	1543, 1544, 1545, 1546, 1547, 1548, 1526, 1266, 1527, 1528,
	1530, 1531, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1770,
	1770, 0, -2, 1751, 0, 1748, 1331, 1757, 1758, 0,
	1435, 1778, 0, 0, 0, 0, 1727, 1435, 92, 93,
	0, 112, 113, 114, 829, 0, 0, 0, 771, 0,
	771, 0, 0, 0, 0, 0, 771, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 0, 871, 872, 0, 0, 0, 0, 794, 645,
	645, 0, 789, 798, 775, 777, 778, 779, 781, 0,
	807, 561, 0, 0, 572, 0, 0, 673, 674, 675,
	660, 0, 0, 663, 664, 0, 1447, 1448, 1597, 1597,
	1597, 1597, 1597, 1597, 0, 0, 0, 0, 1597, 1597,
	1597, 0, 701, 703, 705, 706, 646, 648, 649, 619,
	633, 0, 634, 0, 653, 0, 811, 825, 826, 0,
	1832, 116, 0, 137, 0, 308, 0, 304, 0, 0,
	0, 0, 166, 149, 150, 151, 153, 154, 0, 0,
	0, 147, 0, 354, 0, 359, 360, 361, 0, 0,
	0, 0, 0, 1084, 1086, 0, 0, 1362, 1104, 1436,
	1178, 668, 0, 294, 283, 285, 286, 0, 294, 297,
	191, 0, 0, 0, 0, 0, 0, 192, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 0, 0, 729,
	691, 692, 693, 936, 940, -2, 1042, 0, 0, 918,
	907, 0, 0, 916, 917, 913, 0, 1039, 0, 0,
	791, 789, 1827, 0, 0, -2, 948, 949, 972, 973,
	974, 0, 1049, 0, 0, 0, 0, 954, 955, 956,
	957, 0, 771, 0, 0, 0, 0, 0, 0, 977,
	978, 979, 980, 1039, 0, 0, 984, 0, 0, 0,
	0, 0, 1056, 0, 0, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1033, 990, 991, 992, 993, 994, 995,
	996, 997, 0, 0, 1000, 881, 882, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 878, 879, 880, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 893, 894, 895, 896,
	897, 898, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 0, 1031, 0, 159, 160, 0, 0, 0,
	0, 390, 387, 388, 0, 384, 0, 383, 0, 0,
	0, 1364, 0, 1334, 1368, 1432, 1433, 1434, 1344, 1345,
	0, 1347, 1348, 0, 1350, 1351, 0, 1370, 0, 0,
	78, 1860, 669, 1724, 0, 1249, 1523, 1457, 1525, 1529,
	1524, 1532, 1537, 1557, 1657, 668, 668, 1663, 1664, 1666,
	1670, 1672, 1673, 1675, 1561, 1558, 1560, 1562, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 1590, 1591, 1263, 1262, 84, 0, 85, 1770,
	0, 0, 0, 0, 0, 0, -2, -2, -2, 2153,
	2117, 1755, 1772, 0, 0, 1727, 0, 0, 0, 0,
	0, 1735, 91, 830, 831, 832, 0, 771, 0, 835,
	836, 838, 839, 840, 0, 0, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 0, 875, 0, 877, 759, 0, 1732,
	1732, 791, 791, 0, 0, 0, 0, 670, 671, 672,
	661, 662, 0, 666, 644, 0, 0, 0, 118, 116,
	136, 0, 117, 309, 310, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 303, 305, 306, 307, 383, 184,
	167, 168, 0, 0, 0, 0, 0, 155, 156, 157,
	353, 0, 0, 358, 0, 0, 0, 0, 138, 139,
	0, 141, 137, 0, 0, 1148, 1860, 1419, 287, 294,
	287, 0, 192, 192, 0, 192, 193, 199, 756, 757,
	920, 0, 0, 0, 0, 914, 0, 942, 1040, 0,
	558, 558, 1831, 791, 791, 0, 1071, 0, 975, 950,
	952, 951, 953, 0, 0, 960, 961, 1039, 0, 965,
	0, 1050, 1051, 1052, 1053, 981, 0, 0, 0, 0,
	0, 1054, 1055, 0, 0, 998, 999, 1029, 1030, 0,
	899, 161, 162, 163, 164, 165, 1075, 0, 0, 1080,
	385, 1079, 0, 377, 392, 393, 0, 1376, 1366, 0,
	0, 0, 1253, 0, 1862, 1856, 1277, 0, 0, 1658,
	1659, 1660, 1661, 0, 0, 0, 0, 1570, 1571, 1572,
	1607, 1575, 1682, 0, 0, 1727, 0, 0, 86, 1363,
	-2, 1749, 0, 0, 1756, 1331, 1774, 0, 103, 1735,
	1779, 1780, 1781, 1782, 1783, 90, 833, 0, 837, 883,
	884, 841, 842, 873, 874, 0, 758, 762, 0, 771,
	0, 771, 771, 769, 770, 795, 796, 797, 776, 780,
	0, 555, 0, 0, 665, 651, 654, 0, 0, 118,
	0, 118, 311, 312, 313, 314, 316, 317, 0, 0,
	0, 386, 130, 0, 0, 169, 0, 0, 0, 0,
	179, 180, 181, 182, 183, 152, 0, 0, 355, 0,
	364, 366, 0, 365, 367, 0, 135, 0, 1361, 1862,
	187, 0, 287, 189, 295, 194, 196, 192, 195, 1069,
	0, 919, 0, 0, 0, 0, 0, 941, 1041, 547,
	548, 0, 1831, 0, 1048, 0, 0, 0, 959, 962,
	963, 966, 982, 983, 0, 0, 987, 0, 0, 0,
	1032, 116, 391, 389, 386, 375, 379, 0, 0, 0,
	0, 1397, 0, 2582, 76, 1864, -2, 0, 68, 0,
	1725, 1726, 1720, 1721, 1723, 1564, 1566, 1565, 1567, 0,
	0, 0, 1588, 1589, 1267, 0, 0, 1747, 1750, 1752,
	0, 1773, 1775, 89, 834, 876, 763, 764, 0, 766,
	0, 0, 0, 570, 556, 557, 0, 573, 0, 116,
	0, 0, 79, 318, 319, 320, 321, 390, 185, 186,
	170, 171, 0, 173, 174, 0, 0, 0, 369, 0,
	362, 363, 0, 1103, 1816, 288, 188, 197, 906, 0,
	912, 908, 0, 0, 0, 0, 0, 0, 0, 1072,
	0, 958, 771, 0, 0, 986, 0, 1058, 900, 79,
	390, 0, 381, 0, 1346, 1349, 1352, 0, 0, 0,
	0, 0, 0, 1863, 1858, 0, 1855, 0, 1278, 1279,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 1264,
	0, 0, 765, 767, 768, 0, 555, 760, 142, 116,
	399, 116, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 0, 0, 0, 0, 0,
	0, 79, 0, 79, 0, 0, 0, 444, 0, 79,
	0, 0, 175, 0, 177, 178, 368, 0, 140, 1363,
	0, 0, 0, 0, 909, 910, 0, 915, 0, 0,
	0, 0, 0, 967, 985, 1057, 0, 1034, 116, 1076,
	0, 376, 0, 377, 1823, 1398, 1399, 0, 0, 1400,
	0, 0, 0, 0, 1861, 0, 0, 1857, 0, 0,
	1722, 1608, 0, 1611, 1260, 1268, 0, 1271, 0, 0,
	0, 1307, 0, 1269, 1771, -2, 0, 571, 123, 761,
	124, 0, 142, 116, 0, 0, 129, 0, 0, 414,
	0, 0, 1833, 0, 0, -2, -2, -2, 1835, 441,
	442, 0, 493, 0, 0, 0, 458, 459, 0, 445,
	0, 460, 322, 0, 116, 172, 176, 370, 42, 0,
	0, 1070, 0, 914, 911, 760, 0, 760, 0, 964,
	1059, 1077, 116, 0, 377, 380, 0, 1403, 0, 0,
	0, 0, 0, 0, 0, 1280, 1281, 1609, 0, 1272,
	1273, 1274, 1275, 1276, 0, 0, 0, 0, 0, 125,
	118, 400, 401, 0, 0, 79, 415, 0, 79, 0,
	0, 0, 668, 0, 79, 79, 79, 79, 0, 79,
	79, 0, 446, 79, 79, 44, 0, 1817, 1818, 289,
	290, 291, 293, 0, 0, 943, 760, 945, 0, 79,
	378, 382, 1396, 1404, 1405, 0, 0, 0, 1412, 0,
	0, 1865, 1866, 1859, 1853, 0, 0, 1308, 0, 143,
	0, 0, 79, 0, 79, 412, 0, 79, 0, 0,
	0, 0, 676, 1836, 0, 494, 323, 0, 0, 0,
	0, 0, 0, 0, 325, 116, 43, 0, 0, 0,
	944, 0, 2301, 116, 1406, 0, 0, 1407, 0, 0,
	0, 0, 0, 1401, 0, 0, 1270, 801, 144, 145,
	116, 402, 403, 404, 405, 406, 407, 79, 0, 410,
	0, 79, 0, 79, 424, 425, 426, 79, 433, 435,
	436, 437, 0, 439, 440, 428, 449, 324, 79, 79,
	79, 79, 0, 79, 443, 447, 132, 292, 923, 0,
	1073, 1074, 1078, 0, 0, 0, 0, 1408, 1409, 1413,
	1415, 0, 1402, 1610, 802, 803, 0, 128, 0, 409,
	80, 79, 0, -2, 0, 79, 0, 421, 0, 427,
	0, 438, 0, 326, 0, 0, 0, 0, 0, 0,
	921, 0, 923, 0, 0, 0, 0, 1414, 1416, 804,
	0, 805, 0, 0, 0, 79, 0, 413, 417, 0,
	0, 79, 422, 0, 434, 429, 327, 450, 0, 79,
	452, 455, 448, 924, 922, 0, 0, 817, 819, 820,
	0, 0, 818, 408, 411, 79, 419, 0, 79, 451,
	0, 0, 1410, 1411, 821, 822, 823, 0, 79, 0,
	453, 456, 418, 0, -2, 454, 457, 420,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 763,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:608
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:613
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:617
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:623
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:645
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:657
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:704
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:771
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:779
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:812
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:826
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:851
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:863
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:898
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:910
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:935
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:960
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1005
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1023
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1046
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1059
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1072
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1126
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1130
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1147
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1197
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1241
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1270
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1291
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1312
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1330
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1348
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1372
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1394
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1426
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1441
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1475
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1487
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1500
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1514
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1536
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1742
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1757
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1773
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1789
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1804
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1816
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1829
		{
			yyVAL.val = false
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1833
		{
			yyVAL.val = true
		}
	case 194:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1839
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 195:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1855
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1870
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1886
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1902
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1915
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1954
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2022
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2114
		{
			yyVAL.val = []string(nil)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2188
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2192
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2196
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2201
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2210
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2221
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2234
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2349
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2353
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2370
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2391
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2404
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2413
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2499
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2513
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2517
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2521
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = &Authentication{}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = yyDollar[1].val
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2552
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2556
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2560
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2564
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2568
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2578
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2612
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2616
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2625
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2630
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2639
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = EventStatus_Enable
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.val = EventStatus_Disable
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.val = BeforeStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = AfterStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.val = InsertStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = UpdateStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = DeleteStr
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2721
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2746
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2756
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2764
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2768
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2784
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2790
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 418:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2795
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2800
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2806
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2818
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2824
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2830
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2834
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2838
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2842
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2846
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2853
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2925
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2937
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2951
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 451:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2955
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2966
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 453:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2970
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 454:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2974
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2985
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2989
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 457:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2993
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3026
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3034
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = &Resignal{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3132
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3140
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3162
		{
			yyVAL.val = Exprs(nil)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.val = Exprs(nil)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3170
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3180
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3234
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3261
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3291
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.val = BoolVal(false)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.val = BoolVal(false)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.val = BoolVal(true)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3433
		{
			yyVAL.val = ColumnType{}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3437
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3441
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3539
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3550
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3561
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3584
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3680
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3786
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3802
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3810
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3814
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3875
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3925
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3934
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3951
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3969
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = BoolVal(false)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.val = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.val = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = BoolVal(true)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4018
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4030
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.val = BoolVal(true)
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4047
		{
			yyVAL.val = ""
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = ""
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4106
		{
			yyVAL.val = false
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.val = true
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4115
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4145
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4197
		{
			yyVAL.val = colKeyPrimary
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.val = colKey
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.val = colKeyUnique
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4225
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4229
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4281
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4285
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4309
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.val = false
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.val = true
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4336
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4385
		{
			yyVAL.val = false
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.val = true
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4390
		{
			yyVAL.bytes = nil
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4422
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4426
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4458
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4462
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4491
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.val = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.val = ":="
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4554
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4570
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4616
		{
			yyVAL.val = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4625
		{
			yyVAL.val = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4663
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4673
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4689
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4694
		{
			yyVAL.bytes = []byte(nil)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4718
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = ""
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4741
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = Restrict
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = Cascade
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = NoAction
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4771
		{
			yyVAL.val = SetDefault
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4775
		{
			yyVAL.val = SetNull
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.val = true
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.val = true
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.val = false
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4823
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4835
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4851
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4855
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4871
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4887
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4891
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4971
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4975
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4983
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4991
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5123
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5136
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5143
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5152
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5160
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5170
		{
			yyVAL.val = false
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5174
		{
			yyVAL.val = true
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5179
		{
			yyVAL.val = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5198
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5211
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5220
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5231
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5235
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5240
		{
			yyVAL.val = ""
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5244
		{
			yyVAL.val = ""
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5248
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5253
		{
			yyVAL.val = string("")
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5269
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5283
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5298
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5318
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5331
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5355
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5373
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 943:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5392
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5411
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5435
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5457
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5471
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5485
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5503
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5522
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5532
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5542
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5552
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5562
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5582
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5592
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5602
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5617
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5633
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5643
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5653
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5669
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5683
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5697
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5711
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5725
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5752
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5765
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5775
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5785
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5797
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5825
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5842
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5852
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5862
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5872
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5882
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5892
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5909
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5922
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5937
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5951
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5972
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5993
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6012
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6022
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6034
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6042
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6050
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6058
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6062
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6066
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6070
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6086
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6174
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6182
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6186
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6190
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6194
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6206
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = true
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.val = false
		}
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6226
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6252
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6256
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6260
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6265
		{
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6270
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6280
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6284
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6290
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6294
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6298
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6302
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6306
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6310
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6314
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6318
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6322
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6326
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6330
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6334
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6338
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6342
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6367
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6371
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6375
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6379
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6404
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6408
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6414
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1076:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6444
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6470
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6498
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6528
		{
			yyVAL.val = EventName{}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6532
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6538
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6542
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6554
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6578
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6594
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6598
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6604
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6629
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6649
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6667
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6684
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6701
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6721
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6741
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6756
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6771
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6790
		{

		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6794
		{
			yyVAL.val = Restrict
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6798
		{
			yyVAL.val = Cascade
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6804
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6817
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6832
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1103:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6838
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6842
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6859
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6863
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6871
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6877
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6881
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6888
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6892
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6898
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6902
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6906
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6910
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6920
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6924
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6934
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6945
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6956
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6967
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6979
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6991
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7004
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7017
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7028
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7039
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7050
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7061
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7071
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7081
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7094
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7104
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7115
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7125
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7135
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7146
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7158
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7170
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7184
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7197
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7208
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7222
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7234
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7244
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7255
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7268
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7278
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7290
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7301
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7314
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7323
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7334
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7345
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7356
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7367
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7391
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7401
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7423
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7429
		{
			yyVAL.val = false
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7433
		{
			yyVAL.val = true
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7439
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7443
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = ""
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7453
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7457
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7463
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7467
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7471
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7481
		{
			yyVAL.val = ""
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7485
		{
			yyVAL.val = SessionStr
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7489
		{
			yyVAL.val = GlobalStr
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7495
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7507
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7520
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7532
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7536
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7542
		{
			yyVAL.val = &Begin{}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7546
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7552
		{
			yyVAL.val = &Begin{}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7556
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7560
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7564
		{
			yyVAL.val = &Begin{}
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7569
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7573
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7578
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7582
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7587
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7591
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7597
		{
			yyVAL.val = &Commit{}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7603
		{
			yyVAL.val = &Rollback{}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7609
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7615
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7619
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7623
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7627
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7633
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7639
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7643
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7647
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7653
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7661
		{
			yyVAL.val = ""
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7665
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7670
		{
			yyVAL.val = false
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = true
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7686
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7706
		{
			setAllowComments(yylex, true)
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7710
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7718
		{
			yyVAL.val = Comments(nil)
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7722
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7728
		{
			yyVAL.val = UnionStr
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7732
		{
			yyVAL.val = UnionAllStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7736
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7742
		{
			yyVAL.val = IntersectStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			yyVAL.val = IntersectAllStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7750
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7756
		{
			yyVAL.val = ExceptStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7760
		{
			yyVAL.val = ExceptAllStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7764
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7769
		{
			yyVAL.val = QueryOpts{}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7773
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7784
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7795
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7806
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7817
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7828
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7840
		{
			yyVAL.val = ""
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7844
		{
			yyVAL.val = AllStr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7848
		{
			yyVAL.val = DistinctStr
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7854
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7862
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7873
		{
			yyVAL.val = &StarExpr{}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7877
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7881
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7885
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7891
		{
			yyVAL.val = &StarExpr{}
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7895
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7899
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7903
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7909
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7913
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7919
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7924
		{
			yyVAL.val = ColIdent{}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7927
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7932
		{
			yyVAL.val = Exprs(nil)
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7936
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7941
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7950
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7958
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7965
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7988
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8003
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8007
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8011
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8015
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8022
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = Window(nil)
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8033
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8039
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8042
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8048
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8088
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8092
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8097
		{
			yyVAL.val = ColIdent{}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8101
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8105
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8109
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8115
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8119
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8123
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8129
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8133
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8143
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8147
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8162
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8177
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8183
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8189
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8197
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8203
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8207
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8212
		{
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8214
		{
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8218
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8228
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8243
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8247
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8251
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8255
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8261
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8283
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8287
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8297
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8301
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8305
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8309
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8329
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8333
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8352
		{
			yyVAL.val = Expr(nil)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8356
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8362
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8366
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = Columns(nil)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8375
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8395
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8401
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8405
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8419
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8423
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8427
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8437
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = JoinCondition{}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8445
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = JoinCondition{}
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8456
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8460
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8466
		{
			yyVAL.val = JoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8470
		{
			yyVAL.val = JoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8474
		{
			yyVAL.val = JoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8480
		{
			yyVAL.val = StraightJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = LeftJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8490
		{
			yyVAL.val = LeftJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8494
		{
			yyVAL.val = RightJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8498
		{
			yyVAL.val = RightJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8502
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8506
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8512
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8516
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1396:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8526
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8533
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8538
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8544
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8548
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8552
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8557
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8564
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8568
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8572
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8576
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8580
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8584
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8588
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8592
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1411:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8596
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8600
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = &NullVal{}
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8616
		{
			yyVAL.val = &NullVal{}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8620
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8626
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8630
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8636
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8642
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8646
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8652
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8656
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8660
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8672
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8688
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8693
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8697
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8701
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8705
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = Expr(nil)
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8714
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8732
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = ""
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = BoolVal(true)
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = BoolVal(false)
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8782
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8786
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8790
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8794
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8798
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8802
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8806
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8810
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = IsNullStr
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = IsNotNullStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = IsTrueStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = IsFalseStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = EqualStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = LessThanStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = GreaterThanStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = LessEqualStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = NotEqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8871
		{
			yyVAL.val = Expr(nil)
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8875
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8881
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8885
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8889
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8895
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8905
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8910
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8917
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8921
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8937
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8941
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8945
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8949
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8961
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8973
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8977
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8981
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8985
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8989
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8993
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8997
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9001
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9005
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9009
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9013
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9017
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9021
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9025
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9029
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9033
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9037
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9045
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9063
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9067
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9087
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9091
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9101
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9105
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9109
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9113
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9121
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9125
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9129
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9133
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9137
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9141
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9145
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9149
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9153
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9157
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9161
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9165
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9174
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9178
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9182
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9186
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9190
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9194
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9198
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9202
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9206
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9214
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9225
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9229
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9233
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9237
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9241
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1557:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9245
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9249
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9253
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9257
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1561:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9261
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9265
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9269
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9273
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9277
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9281
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9285
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9289
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9293
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1570:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9297
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1571:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9301
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9305
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1573:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9309
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9313
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9317
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9321
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9325
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9329
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9349
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9353
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9357
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9374
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9378
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1589:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1590:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1591:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9427
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9431
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9441
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9445
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9461
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9467
		{
			yyVAL.val = ""
		}
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = BooleanModeStr
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1610:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9489
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9503
		{
			yyVAL.val = Armscii8Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9507
		{
			yyVAL.val = AsciiStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9511
		{
			yyVAL.val = Big5Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = UBinaryStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = Cp1250Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = Cp1251Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = Cp1256Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = Cp1257Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9535
		{
			yyVAL.val = Cp850Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9539
		{
			yyVAL.val = Cp852Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9543
		{
			yyVAL.val = Cp866Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9547
		{
			yyVAL.val = Cp932Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9551
		{
			yyVAL.val = Dec8Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9555
		{
			yyVAL.val = EucjpmsStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9559
		{
			yyVAL.val = EuckrStr
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9563
		{
			yyVAL.val = Gb18030Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9567
		{
			yyVAL.val = Gb2312Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9571
		{
			yyVAL.val = GbkStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9575
		{
			yyVAL.val = Geostd8Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9579
		{
			yyVAL.val = GreekStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9583
		{
			yyVAL.val = HebrewStr
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9587
		{
			yyVAL.val = Hp8Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9591
		{
			yyVAL.val = Keybcs2Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9595
		{
			yyVAL.val = Koi8rStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9599
		{
			yyVAL.val = Koi8uStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9603
		{
			yyVAL.val = Latin1Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9607
		{
			yyVAL.val = Latin2Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9611
		{
			yyVAL.val = Latin5Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = Latin7Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = MacceStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = MacromanStr
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = SjisStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9631
		{
			yyVAL.val = Swe7Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9635
		{
			yyVAL.val = Tis620Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9639
		{
			yyVAL.val = Ucs2Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9643
		{
			yyVAL.val = UjisStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9647
		{
			yyVAL.val = Utf16Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9651
		{
			yyVAL.val = Utf16leStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9655
		{
			yyVAL.val = Utf32Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9659
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9663
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9667
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9681
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9693
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9697
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9701
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9708
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9712
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9716
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9720
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9724
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9728
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9732
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9736
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9744
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9748
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9752
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9758
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9762
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9767
		{
			yyVAL.val = Expr(nil)
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9771
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9786
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9790
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9796
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = Expr(nil)
		}
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9835
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9839
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9843
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9847
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9851
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9855
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9859
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9863
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9867
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9871
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9875
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9905
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9909
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9913
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9917
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9921
		{
			yyVAL.val = &NullVal{}
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9927
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = Exprs(nil)
		}
	case 1720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9944
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9950
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9954
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = Expr(nil)
		}
	case 1725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9975
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9980
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9984
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9994
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10000
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10005
		{
			yyVAL.val = AscScr
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10009
		{
			yyVAL.val = AscScr
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10013
		{
			yyVAL.val = DescScr
		}
	case 1735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10018
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10026
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10030
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10036
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10040
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10044
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10049
		{
			yyVAL.val = ""
		}
	case 1743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10053
		{
			yyVAL.val = ForUpdateStr
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10057
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10061
		{
			yyVAL.val = ShareModeStr
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10067
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10071
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10095
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10100
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10107
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10111
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10115
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1754:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10120
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10127
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10131
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10140
		{
			yyVAL.val = Columns(nil)
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10144
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10150
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10154
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10160
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10164
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10168
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10172
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10180
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10184
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10189
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10193
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10199
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10203
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10209
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10213
		{
			yyVAL.val = ValTuple{}
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10219
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10225
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10239
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10245
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10248
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10252
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10256
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10262
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10266
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10272
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10283
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10296
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10309
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10315
		{
			yyVAL.val = SetScope_Global
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10319
		{
			yyVAL.val = SetScope_Session
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10325
		{
			yyVAL.val = SetScope_Session
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10329
		{
			yyVAL.val = SetScope_Persist
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10333
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10339
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10347
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10357
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10364
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10371
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10375
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10379
		{
			yyVAL.val = &Default{}
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10392
		{
			yyVAL.val = 0
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = 1
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10397
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10399
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10402
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10407
		{
			yyVAL.val = ""
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = IgnoreStr
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10412
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10414
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = struct{}{}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = struct{}{}
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10427
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10432
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = UniqueStr
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = FulltextStr
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10440
		{
			yyVAL.val = SpatialStr
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = VectorStr
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = ""
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10450
		{
			yyVAL.val = ColIdent{}
		}
	case 1832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10477
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10483
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10487
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10494
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10498
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10502
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10507
		{
			yyVAL.val = string("")
		}
	case 1846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10512
		{
			yyVAL.val = string("")
		}
	case 1848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10514
		{
			yyVAL.val = IgnoreStr
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10516
		{
			yyVAL.val = ReplaceStr
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10519
		{
			yyVAL.val = BoolVal(false)
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = BoolVal(true)
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10524
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10528
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10533
		{
			yyVAL.val = BoolVal(false)
		}
	case 1855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10537
		{
			yyVAL.val = BoolVal(true)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10542
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10546
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10551
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10563
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10567
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10572
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10576
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10581
		{
			yyVAL.val = &Lines{}
		}
	case 1865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10585
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10594
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10605
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10611
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10615
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10621
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10636
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10654
		{
			yyVAL.val = LockRead
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10658
		{
			yyVAL.val = LockReadLocal
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10662
		{
			yyVAL.val = LockWrite
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10666
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10672
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10678
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10689
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10699
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11628
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11637
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
