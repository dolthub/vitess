// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const ENABLE = 57517
const DISABLE = 57518
const EACH = 57519
const ROW = 57520
const BEFORE = 57521
const FOLLOWS = 57522
const PRECEDES = 57523
const DEFINER = 57524
const INVOKER = 57525
const INOUT = 57526
const OUT = 57527
const DETERMINISTIC = 57528
const CONTAINS = 57529
const READS = 57530
const MODIFIES = 57531
const SQL = 57532
const SECURITY = 57533
const TEMPORARY = 57534
const ALGORITHM = 57535
const MERGE = 57536
const TEMPTABLE = 57537
const UNDEFINED = 57538
const CLASS_ORIGIN = 57539
const SUBCLASS_ORIGIN = 57540
const MESSAGE_TEXT = 57541
const MYSQL_ERRNO = 57542
const CONSTRAINT_CATALOG = 57543
const CONSTRAINT_SCHEMA = 57544
const CONSTRAINT_NAME = 57545
const CATALOG_NAME = 57546
const SCHEMA_NAME = 57547
const TABLE_NAME = 57548
const COLUMN_NAME = 57549
const CURSOR_NAME = 57550
const SIGNAL = 57551
const RESIGNAL = 57552
const SQLSTATE = 57553
const DECLARE = 57554
const CONDITION = 57555
const CURSOR = 57556
const CONTINUE = 57557
const EXIT = 57558
const UNDO = 57559
const HANDLER = 57560
const FOUND = 57561
const SQLWARNING = 57562
const SQLEXCEPTION = 57563
const USER = 57564
const IDENTIFIED = 57565
const ROLE = 57566
const REUSE = 57567
const GRANT = 57568
const GRANTS = 57569
const REVOKE = 57570
const NONE = 57571
const ATTRIBUTE = 57572
const RANDOM = 57573
const PASSWORD = 57574
const INITIAL = 57575
const AUTHENTICATION = 57576
const SSL = 57577
const X509 = 57578
const CIPHER = 57579
const ISSUER = 57580
const SUBJECT = 57581
const ACCOUNT = 57582
const EXPIRE = 57583
const NEVER = 57584
const DAY = 57585
const OPTION = 57586
const OPTIONAL = 57587
const EXCEPT = 57588
const ADMIN = 57589
const PRIVILEGES = 57590
const MAX_QUERIES_PER_HOUR = 57591
const MAX_UPDATES_PER_HOUR = 57592
const MAX_CONNECTIONS_PER_HOUR = 57593
const MAX_USER_CONNECTIONS = 57594
const FLUSH = 57595
const FAILED_LOGIN_ATTEMPTS = 57596
const PASSWORD_LOCK_TIME = 57597
const REQUIRE = 57598
const PROXY = 57599
const ROUTINE = 57600
const TABLESPACE = 57601
const CLIENT = 57602
const SLAVE = 57603
const EVENT = 57604
const EXECUTE = 57605
const FILE = 57606
const RELOAD = 57607
const REPLICATION = 57608
const SHUTDOWN = 57609
const SUPER = 57610
const USAGE = 57611
const LOGS = 57612
const ENGINE = 57613
const ERROR = 57614
const GENERAL = 57615
const HOSTS = 57616
const OPTIMIZER_COSTS = 57617
const RELAY = 57618
const SLOW = 57619
const USER_RESOURCES = 57620
const NO_WRITE_TO_BINLOG = 57621
const CHANNEL = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const WORK = 57629
const RELEASE = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const SERIAL = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL = 57643
const NUMERIC = 57644
const DEC = 57645
const FIXED = 57646
const PRECISION = 57647
const TIME = 57648
const TIMESTAMP = 57649
const DATETIME = 57650
const YEAR = 57651
const CHAR = 57652
const VARCHAR = 57653
const BOOL = 57654
const CHARACTER = 57655
const VARBINARY = 57656
const NCHAR = 57657
const NVARCHAR = 57658
const NATIONAL = 57659
const VARYING = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const LONG = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const ENUM = 57671
const GEOMETRY = 57672
const POINT = 57673
const LINESTRING = 57674
const POLYGON = 57675
const GEOMETRYCOLLECTION = 57676
const MULTIPOINT = 57677
const MULTILINESTRING = 57678
const MULTIPOLYGON = 57679
const LOCAL = 57680
const LOW_PRIORITY = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const COLLATION = 57688
const DATABASES = 57689
const SCHEMAS = 57690
const TABLES = 57691
const FULL = 57692
const PROCESSLIST = 57693
const COLUMNS = 57694
const FIELDS = 57695
const ENGINES = 57696
const PLUGINS = 57697
const NAMES = 57698
const CHARSET = 57699
const GLOBAL = 57700
const SESSION = 57701
const ISOLATION = 57702
const LEVEL = 57703
const READ = 57704
const WRITE = 57705
const ONLY = 57706
const REPEATABLE = 57707
const COMMITTED = 57708
const UNCOMMITTED = 57709
const SERIALIZABLE = 57710
const ENCRYPTION = 57711
const CURRENT_TIMESTAMP = 57712
const DATABASE = 57713
const CURRENT_DATE = 57714
const CURRENT_USER = 57715
const CURRENT_TIME = 57716
const LOCALTIME = 57717
const LOCALTIMESTAMP = 57718
const UTC_DATE = 57719
const UTC_TIME = 57720
const UTC_TIMESTAMP = 57721
const REPLACE = 57722
const CONVERT = 57723
const CAST = 57724
const SUBSTR = 57725
const SUBSTRING = 57726
const TRIM = 57727
const LEADING = 57728
const TRAILING = 57729
const BOTH = 57730
const GROUP_CONCAT = 57731
const SEPARATOR = 57732
const TIMESTAMPADD = 57733
const TIMESTAMPDIFF = 57734
const OVER = 57735
const WINDOW = 57736
const GROUPING = 57737
const CURRENT = 57738
const AVG = 57739
const BIT_AND = 57740
const BIT_OR = 57741
const BIT_XOR = 57742
const COUNT = 57743
const JSON_ARRAYAGG = 57744
const JSON_OBJECTAGG = 57745
const MAX = 57746
const MIN = 57747
const STDDEV_POP = 57748
const STDDEV = 57749
const STD = 57750
const STDDEV_SAMP = 57751
const SUM = 57752
const VAR_POP = 57753
const VARIANCE = 57754
const VAR_SAMP = 57755
const CUME_DIST = 57756
const DENSE_RANK = 57757
const FIRST_VALUE = 57758
const LAG = 57759
const LAST_VALUE = 57760
const LEAD = 57761
const NTH_VALUE = 57762
const NTILE = 57763
const ROW_NUMBER = 57764
const PERCENT_RANK = 57765
const RANK = 57766
const MATCH = 57767
const AGAINST = 57768
const BOOLEAN = 57769
const LANGUAGE = 57770
const WITH = 57771
const QUERY = 57772
const EXPANSION = 57773
const UNUSED = 57774
const ARRAY = 57775
const DESCRIPTION = 57776
const EMPTY = 57777
const JSON_TABLE = 57778
const LATERAL = 57779
const MEMBER = 57780
const RECURSIVE = 57781
const ACTIVE = 57782
const BUCKETS = 57783
const CLONE = 57784
const COMPONENT = 57785
const DEFINITION = 57786
const ENFORCED = 57787
const EXCLUDE = 57788
const GEOMCOLLECTION = 57789
const GET_MASTER_PUBLIC_KEY = 57790
const HISTOGRAM = 57791
const HISTORY = 57792
const INACTIVE = 57793
const INVISIBLE = 57794
const LOCKED = 57795
const MASTER_COMPRESSION_ALGORITHMS = 57796
const MASTER_PUBLIC_KEY_PATH = 57797
const MASTER_TLS_CIPHERSUITES = 57798
const MASTER_ZSTD_COMPRESSION_LEVEL = 57799
const NESTED = 57800
const NETWORK_NAMESPACE = 57801
const NOWAIT = 57802
const NULLS = 57803
const OJ = 57804
const OLD = 57805
const ORDINALITY = 57806
const ORGANIZATION = 57807
const OTHERS = 57808
const PATH = 57809
const PERSIST = 57810
const PERSIST_ONLY = 57811
const PRIVILEGE_CHECKS_USER = 57812
const PROCESS = 57813
const REFERENCE = 57814
const REQUIRE_ROW_FORMAT = 57815
const RESOURCE = 57816
const RESPECT = 57817
const RESTART = 57818
const RETAIN = 57819
const SECONDARY = 57820
const SECONDARY_ENGINE = 57821
const SECONDARY_LOAD = 57822
const SECONDARY_UNLOAD = 57823
const SKIP = 57824
const SRID = 57825
const THREAD_PRIORITY = 57826
const TIES = 57827
const VCPU = 57828
const VISIBLE = 57829
const SYSTEM = 57830
const INFILE = 57831
const GENERATED = 57832
const ALWAYS = 57833
const STORED = 57834
const VIRTUAL = 57835
const NVAR = 57836
const PASSWORD_LOCK = 57837

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1080,
	-1, 43,
	147, 1144,
	148, 1162,
	-2, 237,
	-1, 49,
	186, 709,
	187, 709,
	-2, 699,
	-1, 557,
	135, 1172,
	-2, 1166,
	-1, 558,
	135, 1173,
	-2, 1167,
	-1, 662,
	98, 1459,
	135, 1459,
	-2, 1128,
	-1, 663,
	98, 1578,
	135, 1578,
	-2, 1129,
	-1, 668,
	98, 1483,
	135, 1483,
	-2, 1130,
	-1, 669,
	98, 1531,
	135, 1531,
	-2, 1131,
	-1, 670,
	98, 1532,
	135, 1532,
	-2, 1132,
	-1, 671,
	98, 1406,
	135, 1406,
	-2, 1136,
	-1, 673,
	98, 1508,
	135, 1508,
	-2, 1138,
	-1, 1196,
	1, 806,
	5, 806,
	12, 806,
	13, 806,
	14, 806,
	15, 806,
	17, 806,
	19, 806,
	30, 806,
	31, 806,
	56, 806,
	57, 806,
	58, 806,
	59, 806,
	60, 806,
	62, 806,
	63, 806,
	66, 806,
	67, 806,
	69, 806,
	70, 806,
	412, 806,
	514, 806,
	-2, 838,
	-1, 1202,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1298,
	1, 489,
	514, 489,
	-2, 487,
	-1, 1300,
	1, 489,
	514, 489,
	-2, 487,
	-1, 1459,
	135, 1175,
	-2, 1171,
	-1, 1625,
	44, 555,
	-2, 1418,
	-1, 1629,
	68, 553,
	72, 553,
	-2, 1453,
	-1, 1630,
	68, 555,
	-2, 1364,
	-1, 1633,
	68, 551,
	72, 551,
	-2, 1281,
	-1, 1634,
	68, 552,
	72, 552,
	-2, 1291,
	-1, 1681,
	1, 490,
	514, 490,
	-2, 487,
	-1, 1764,
	44, 598,
	154, 600,
	156, 598,
	157, 598,
	-2, 635,
	-1, 1840,
	5, 51,
	-2, 908,
	-1, 2152,
	69, 1338,
	70, 1338,
	135, 1338,
	-2, 740,
	-1, 2175,
	1, 863,
	5, 863,
	12, 863,
	13, 863,
	14, 863,
	15, 863,
	17, 863,
	19, 863,
	30, 863,
	31, 863,
	56, 863,
	57, 863,
	58, 863,
	59, 863,
	60, 863,
	62, 863,
	63, 863,
	66, 863,
	67, 863,
	69, 863,
	70, 863,
	412, 863,
	514, 863,
	-2, 838,
	-1, 2285,
	154, 601,
	-2, 599,
	-1, 2346,
	5, 51,
	-2, 1100,
	-1, 2562,
	41, 1182,
	-2, 1180,
	-1, 2669,
	5, 51,
	-2, 1103,
}

const yyPrivate = 57344

const yyLast = 35474

var yyAct = [...]int{
	624, 80, 2862, 1983, 2886, 2893, 2844, 2769, 2864, 888,
	2768, 2845, 2743, 2673, 428, 560, 2094, 2681, 7, 2680,
	6, 558, 2651, 2679, 5, 2801, 2736, 2229, 2656, 2682,
	8, 1233, 2649, 2582, 2464, 1617, 2504, 2189, 2741, 2358,
	2609, 2562, 1875, 1151, 2169, 687, 563, 2077, 2066, 1583,
	1676, 549, 1926, 2145, 2445, 2564, 1635, 2246, 1700, 1577,
	2399, 1333, 2421, 1437, 2674, 2415, 411, 414, 2190, 129,
	1581, 542, 129, 2146, 83, 1905, 453, 453, 129, 2678,
	3, 80, 459, 2279, 474, 1626, 2076, 2269, 456, 456,
	1932, 1999, 576, 1616, 921, 106, 1876, 565, 1667, 93,
	2142, 129, 1789, 1763, 623, 1615, 2154, 2161, 1430, 2116,
	944, 2044, 129, 1335, 1726, 1445, 129, 690, 685, 682,
	1622, 1493, 1556, 1933, 1332, 1380, 1484, 1560, 1684, 904,
	1663, 683, 1309, 1049, 1974, 1683, 129, 456, 667, 690,
	1682, 1352, 1567, 1192, 1213, 1199, 1550, 129, 1461, 1196,
	952, 664, 973, 660, 1056, 1193, 1680, 1212, 1052, 1743,
	541, 661, 681, 1069, 473, 545, 431, 430, 656, 951,
	871, 1385, 1605, 1304, 102, 1638, 1301, 887, 876, 1167,
	1204, 1060, 98, 653, 2925, 85, 1946, 1168, 2921, 2916,
	2901, 2899, 1948, 126, 2881, 2857, 2809, 82, 2611, 2610,
	2203, 1378, 410, 471, 2541, 2227, 2386, 1953, 1952, 423,
	69, 2872, 2752, 2843, 36, 36, 2667, 36, 2823, 2727,
	2539, 2243, 2751, 87, 88, 89, 90, 91, 36, 1949,
	446, 2554, 440, 451, 434, 2542, 655, 2011, 2137, 1870,
	679, 2629, 2652, 1713, 1955, 1811, 1939, 2087, 2340, 870,
	2185, 2186, 1940, 1742, 2666, 441, 1871, 1990, 2489, 2400,
	885, 36, 2184, 72, 39, 40, 1214, 2402, 1215, 1579,
	1042, 899, 873, 1601, 878, 879, 81, 81, 1401, 81,
	1001, 1713, 881, 2596, 422, 561, 421, 1651, 1602, 1603,
	81, 1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1085, 1009, 677, 1095, 637, 1384, 643, 645,
	644, 641, 642, 640, 639, 638, 1957, 1951, 1426, 1427,
	1954, 2747, 2747, 81, 1637, 425, 1914, 2378, 2379, 1913,
	1382, 1383, 1915, 110, 120, 116, 117, 2742, 118, 925,
	926, 1381, 2405, 463, 1741, 970, 1657, 1652, 1652, 924,
	2117, 1643, 1645, 2327, 1644, 2744, 2744, 2325, 420, 470,
	2041, 405, 433, 432, 435, 476, 1422, 1421, 1420, 1419,
	122, 121, 439, 72, 39, 40, 99, 1418, 1417, 985,
	2748, 2748, 2403, 2404, 2406, 2407, 2408, 1005, 1006, 443,
	2033, 2119, 2006, 447, 2838, 41, 931, 1639, 1639, 129,
	2567, 2268, 464, 2038, 2475, 1754, 2771, 450, 80, 80,
	2416, 908, 909, 2253, 2717, 912, 2770, 2633, 2419, 2422,
	2423, 2424, 2425, 2010, 1664, 939, 2433, 941, 123, 2540,
	124, 940, 2417, 2418, 2441, 101, 1755, 1412, 1364, 2777,
	2008, 1701, 2431, 129, 114, 112, 111, 910, 911, 2715,
	934, 2890, 2806, 2623, 2804, 2805, 875, 874, 1988, 108,
	1316, 1317, 1315, 1495, 2529, 2534, 1307, 1038, 932, 933,
	113, 2533, 1771, 1765, 1766, 1046, 1764, 1767, 1768, 2532,
	1016, 2531, 877, 1017, 2530, 2528, 877, 938, 942, 108,
	108, 415, 2619, 2620, 129, 1695, 1696, 2756, 2757, 109,
	113, 2791, 1989, 2676, 436, 437, 438, 444, 1391, 448,
	449, 452, 1774, 985, 1991, 406, 2631, 1691, 1008, 2536,
	2360, 1896, 1950, 901, 920, 2558, 1773, 1772, 2256, 103,
	2818, 104, 922, 416, 923, 925, 926, 115, 2121, 2615,
	2024, 2025, 2841, 2125, 412, 2120, 1690, 2118, 918, 919,
	917, 551, 2123, 916, 2608, 2859, 1232, 1104, 2625, 1231,
	1106, 2911, 2244, 2446, 2447, 2122, 1232, 974, 2247, 2248,
	2249, 2250, 2251, 1072, 1232, 2926, 2050, 119, 2052, 2226,
	2124, 2126, 424, 2284, 2923, 985, 2009, 984, 2917, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 2270, 2597, 1149, 2401, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 2665, 1166, 1169, 1169,
	1169, 1175, 1169, 1169, 1175, 1169, 1175, 1184, 1185, 1186,
	1187, 1035, 1197, 73, 907, 79, 79, 1105, 79, 1748,
	2745, 2745, 2555, 1652, 2853, 1964, 1642, 992, 2012, 79,
	1365, 1947, 129, 129, 129, 1384, 1044, 1037, 100, 1666,
	1018, 1023, 935, 2716, 2624, 1386, 2537, 995, 690, 408,
	413, 2630, 1770, 2247, 2248, 2249, 2250, 2251, 1382, 1383,
	2557, 413, 79, 2255, 1150, 2868, 2902, 667, 2863, 413,
	1205, 1191, 667, 442, 2505, 2635, 2193, 2000, 2897, 872,
	1388, 1232, 2866, 1387, 409, 2052, 890, 990, 2507, 2456,
	469, 981, 2457, 2032, 2029, 2014, 1033, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 1200,
	2013, 1749, 1226, 2001, 1321, 1319, 1931, 991, 476, 987,
	936, 1679, 869, 73, 1931, 1931, 1931, 1586, 1588, 1903,
	1902, 1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1085, 110, 2063, 1095, 1901, 868, 2460, 2027,
	1041, 1936, 1849, 988, 989, 880, 1190, 377, 1202, 2310,
	1846, 1230, 1710, 1292, 2302, 2506, 1931, 1709, 1107, 1108,
	2031, 2030, 1217, 980, 1918, 1910, 1029, 1218, 1170, 1172,
	1174, 1176, 1178, 1180, 1181, 1183, 1171, 1173, 1727, 1177,
	1179, 1806, 1182, 1794, 1779, 1208, 1203, 1073, 1028, 1024,
	1025, 1026, 1027, 1030, 1031, 1032, 1034, 2002, 2003, 2895,
	1694, 1692, 2896, 2086, 2894, 1587, 2628, 2455, 1440, 1930,
	1225, 1210, 413, 1075, 1227, 2058, 2050, 1930, 1930, 1930,
	2055, 2865, 2867, 2054, 2057, 555, 2050, 900, 2522, 2393,
	1232, 1606, 96, 2051, 2052, 1095, 2391, 2264, 2216, 453,
	690, 129, 1597, 1362, 1311, 112, 111, 2650, 2461, 1085,
	456, 456, 1095, 2471, 456, 2792, 2793, 1048, 453, 1930,
	2071, 129, 2062, 1334, 129, 2544, 2059, 1107, 1108, 456,
	456, 1561, 129, 1586, 1588, 1107, 1108, 2789, 2790, 2662,
	2661, 129, 129, 129, 129, 129, 1433, 2523, 2394, 1353,
	1310, 1068, 2067, 1718, 1314, 2392, 1337, 2217, 2159, 2545,
	2158, 1373, 456, 1084, 1083, 1093, 1094, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1085, 914, 1223, 1095, 1553, 2139,
	1291, 1066, 1067, 1066, 943, 1084, 1083, 1093, 1094, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1085, 883, 1068, 1095,
	1068, 453, 1360, 1088, 1089, 1090, 1091, 1092, 1085, 1067,
	1066, 1095, 456, 456, 456, 1468, 2919, 690, 1057, 1067,
	1066, 1587, 1376, 1067, 1066, 1295, 2856, 1068, 1076, 2802,
	1466, 1467, 1465, 1067, 1066, 1410, 1551, 1068, 1438, 1439,
	2803, 1068, 1845, 1338, 906, 655, 1354, 456, 1327, 80,
	1719, 1068, 456, 456, 1394, 1297, 1348, 1349, 1350, 1351,
	882, 1312, 927, 1296, 2915, 1343, 1344, 1345, 1346, 1347,
	1313, 96, 915, 129, 1356, 129, 1357, 1980, 690, 1551,
	1331, 1861, 1330, 1323, 1844, 2854, 1843, 1299, 1341, 1342,
	1067, 1066, 1431, 1416, 1067, 1066, 129, 2141, 1152, 2821,
	1067, 1066, 1072, 2432, 1067, 1066, 1067, 1066, 1068, 1165,
	2426, 2201, 1068, 468, 1063, 1392, 95, 80, 1068, 2720,
	1442, 1458, 1068, 1485, 1068, 1486, 1368, 1369, 1424, 1053,
	1371, 1459, 1054, 1488, 1489, 2905, 2887, 2904, 905, 2802,
	2136, 2827, 81, 2826, 1443, 2712, 1374, 1444, 690, 1791,
	1792, 1793, 2912, 1464, 94, 1415, 929, 1390, 1393, 2713,
	1389, 2670, 2552, 2626, 1153, 1093, 1094, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1085, 690, 690, 1095, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1085, 1463, 2551, 1095, 1451,
	1453, 1454, 2550, 1462, 2549, 1452, 1150, 1425, 1411, 1457,
	2543, 1414, 650, 651, 2799, 2714, 2913, 889, 1580, 2627,
	2385, 1423, 1589, 2384, 1979, 1197, 1537, 1540, 1428, 1197,
	1447, 129, 1977, 1552, 1958, 1916, 976, 1917, 2811, 129,
	975, 129, 2810, 2774, 2772, 949, 129, 129, 2726, 2622,
	129, 129, 129, 1531, 1455, 1084, 1083, 1093, 1094, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1085, 1503, 948, 1095,
	690, 690, 1508, 2621, 2607, 2559, 1337, 2527, 667, 2485,
	2429, 1610, 2428, 2427, 1592, 683, 2395, 2382, 1594, 2275,
	2209, 1459, 1975, 1738, 1370, 1339, 2798, 1150, 581, 580,
	583, 584, 585, 586, 1585, 2632, 2605, 582, 587, 2576,
	1936, 2570, 2453, 2313, 2298, 1200, 1576, 2294, 1612, 1491,
	2286, 2257, 1200, 1499, 2241, 2240, 1200, 2239, 2019, 2018,
	1731, 1715, 1714, 1487, 1510, 1511, 892, 893, 894, 895,
	896, 897, 898, 1366, 1363, 1329, 1328, 1523, 1300, 476,
	1590, 1527, 1707, 1298, 129, 1562, 971, 902, 419, 1611,
	129, 129, 456, 456, 456, 1548, 417, 129, 1322, 1623,
	1292, 1593, 1015, 1631, 2496, 2824, 1073, 1569, 1572, 1573,
	1574, 1570, 1175, 1571, 1575, 1599, 1048, 2162, 2163, 2569,
	1340, 2369, 2817, 1598, 1604, 129, 129, 129, 1595, 2733,
	1048, 2518, 1705, 1706, 2517, 1669, 1670, 1671, 1672, 1734,
	2236, 1358, 1620, 1613, 2369, 2731, 2369, 2729, 2369, 2613,
	2210, 129, 981, 129, 2496, 2601, 1591, 690, 1205, 1673,
	1674, 690, 2496, 2512, 2784, 1665, 1640, 1641, 2157, 1646,
	1647, 1648, 1649, 1650, 2496, 1048, 2496, 2495, 2369, 2368,
	1776, 1529, 1152, 690, 2350, 1048, 690, 1660, 1661, 1662,
	2738, 2317, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1778, 1048, 2224, 2223, 1716, 2304, 1906, 1688, 1702, 1795,
	2220, 2221, 2220, 2219, 1703, 1704, 1740, 1724, 1804, 1048,
	1206, 1711, 1564, 1048, 1751, 1750, 1458, 1529, 1735, 1529,
	1048, 84, 1720, 1229, 1228, 476, 1459, 1725, 1084, 1083,
	1093, 1094, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085,
	1206, 1723, 1095, 1906, 2143, 1699, 2568, 2157, 1563, 1019,
	1047, 978, 979, 2305, 979, 1906, 2344, 1291, 1020, 1713,
	2237, 2222, 1435, 1733, 2171, 974, 1207, 1200, 1209, 2043,
	1448, 1449, 1739, 1920, 1600, 1804, 1804, 1653, 1654, 1655,
	1656, 1729, 1833, 1832, 1372, 1698, 1712, 1564, 1436, 1746,
	1043, 1413, 1379, 1320, 1611, 1318, 1207, 1211, 1205, 1677,
	1564, 1872, 1874, 1463, 2305, 1197, 1197, 1197, 1197, 1197,
	1462, 1753, 2157, 1434, 1756, 1728, 981, 678, 81, 1775,
	2753, 1580, 2730, 1897, 1800, 2170, 129, 129, 129, 129,
	129, 1783, 1197, 1781, 1782, 2575, 2573, 2387, 129, 1639,
	2356, 1668, 129, 2200, 1664, 1760, 129, 2162, 2163, 1878,
	1877, 1924, 985, 129, 1796, 1693, 1659, 1152, 1658, 1293,
	968, 1535, 1536, 1083, 1093, 1094, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1085, 427, 1900, 1095, 690, 2876, 81,
	1873, 1569, 1572, 1573, 1574, 1570, 667, 1571, 1575, 2874,
	1838, 1907, 2846, 2235, 2165, 2143, 1981, 1325, 1021, 982,
	1531, 1892, 1200, 1200, 1200, 1200, 1200, 476, 1908, 1899,
	1909, 977, 1888, 2168, 1886, 2167, 2135, 1889, 1200, 1887,
	1790, 1885, 1884, 1935, 1937, 546, 547, 1609, 1890, 1200,
	1573, 1574, 2795, 2750, 2074, 1780, 1860, 1061, 1062, 690,
	1446, 129, 458, 2783, 2347, 1788, 1787, 2486, 1879, 1921,
	2195, 1882, 1904, 2452, 690, 2372, 690, 2293, 1891, 2292,
	456, 1880, 1881, 1938, 1883, 2208, 1059, 2207, 2206, 1928,
	2637, 2640, 2725, 2724, 129, 456, 2563, 2773, 453, 2561,
	1923, 2618, 2617, 2023, 1292, 1911, 1919, 418, 1810, 1812,
	456, 1217, 1929, 1367, 1934, 2546, 2547, 1675, 2070, 2069,
	1310, 1824, 1825, 1826, 1827, 2231, 1050, 1968, 1224, 966,
	950, 456, 947, 690, 946, 2016, 903, 80, 1051, 456,
	2834, 1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1085, 2017, 1976, 1095, 2580, 1978, 2579, 1686,
	690, 690, 2342, 1438, 1439, 1359, 129, 2462, 1737, 1687,
	1987, 1324, 2095, 2785, 2072, 2073, 690, 1985, 1961, 1962,
	1963, 1965, 1986, 2718, 1967, 1984, 1969, 1970, 1971, 1972,
	2079, 2007, 2434, 690, 2565, 2376, 945, 2230, 1678, 2435,
	1061, 1062, 1458, 96, 1429, 1039, 1040, 1786, 2833, 2832,
	2831, 2524, 1459, 1759, 2021, 1785, 1150, 930, 2015, 543,
	2776, 2775, 476, 2722, 2026, 2020, 2028, 2641, 2588, 2584,
	476, 544, 2148, 80, 2034, 84, 2042, 2053, 2583, 2064,
	2065, 2465, 2040, 2068, 2048, 2047, 1906, 2273, 2045, 2056,
	2061, 1993, 1994, 1995, 690, 2039, 690, 2173, 2878, 2877,
	1057, 2037, 2177, 2178, 2179, 2036, 1850, 1847, 1431, 1757,
	1355, 1927, 2081, 2144, 1064, 2877, 1878, 1877, 2080, 690,
	2089, 2878, 2598, 2205, 1432, 622, 2085, 678, 1959, 1960,
	2075, 465, 467, 2138, 86, 1966, 2692, 52, 2694, 19,
	690, 55, 690, 1, 690, 1973, 690, 2202, 1747, 2176,
	1396, 2156, 2149, 1460, 2079, 2128, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 2127, 2693, 18, 2695, 20, 2147, 2696, 21, 2414,
	2181, 2151, 2197, 2183, 2413, 2198, 2420, 2199, 2691, 15,
	2166, 2690, 14, 1839, 2684, 10, 2707, 34, 2705, 33,
	2242, 2172, 2245, 129, 2174, 2704, 32, 2703, 28, 2702,
	27, 2194, 2005, 2196, 2430, 1862, 2188, 674, 453, 2701,
	26, 686, 1308, 2252, 2699, 23, 2187, 2698, 22, 2535,
	456, 886, 2238, 2700, 24, 129, 456, 1543, 2232, 2233,
	2234, 2689, 13, 891, 1673, 1554, 1674, 2686, 12, 129,
	1697, 456, 972, 690, 456, 2723, 1557, 2636, 456, 456,
	2638, 456, 2096, 2685, 11, 2560, 2099, 2100, 2101, 2254,
	2437, 2104, 2683, 9, 2398, 1853, 2259, 2397, 690, 1998,
	1997, 967, 129, 690, 1377, 2046, 2049, 1708, 1769, 2648,
	690, 1500, 1501, 690, 1758, 1022, 1624, 1614, 2282, 680,
	92, 1717, 913, 385, 1513, 1514, 1515, 1516, 1621, 1944,
	2639, 969, 1943, 1956, 1636, 1681, 1685, 1942, 1941, 1528,
	1530, 2634, 1945, 1237, 1235, 1534, 1236, 2228, 1234, 2306,
	1239, 2260, 2211, 2212, 1048, 1238, 389, 1219, 2338, 2215,
	2214, 2763, 2283, 2312, 1065, 2276, 2218, 2277, 2297, 107,
	56, 2454, 2303, 2060, 2263, 461, 462, 2267, 97, 2258,
	105, 2271, 2272, 391, 2274, 1103, 1784, 1912, 665, 666,
	1292, 658, 1045, 2262, 2660, 129, 2735, 2755, 1055, 2653,
	1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1085, 690, 1859, 1095, 1164, 1549, 564, 1895, 690,
	690, 690, 2470, 1878, 1877, 2655, 2295, 1450, 579, 690,
	2192, 578, 577, 574, 575, 2746, 1441, 2364, 2365, 2366,
	2323, 1869, 690, 1077, 2225, 2362, 562, 553, 1195, 1188,
	80, 2351, 1736, 1568, 2389, 1566, 1565, 1326, 654, 2164,
	2374, 2160, 1578, 1732, 1194, 2343, 1198, 70, 928, 2213,
	407, 2339, 2595, 2367, 2352, 38, 466, 129, 548, 25,
	17, 937, 16, 1762, 884, 42, 44, 1992, 1689, 2762,
	2861, 2410, 2411, 2412, 953, 2363, 2885, 2800, 31, 30,
	2390, 1921, 29, 2697, 2706, 2688, 2373, 2687, 2848, 2847,
	4, 1036, 71, 2320, 2321, 456, 2322, 35, 2377, 2324,
	676, 2326, 2, 0, 0, 1197, 0, 0, 0, 2388,
	0, 0, 2448, 2449, 2261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 2140, 129, 0, 0, 2409,
	2281, 1730, 690, 2450, 0, 0, 0, 1927, 2463, 0,
	2288, 2290, 1797, 1798, 1799, 2148, 2079, 0, 2148, 2491,
	2281, 2439, 2458, 2467, 2468, 2440, 2438, 0, 0, 0,
	0, 2173, 2444, 2443, 2466, 0, 0, 2370, 2371, 0,
	2182, 2194, 690, 0, 2451, 0, 0, 2514, 690, 1143,
	1144, 2396, 2459, 129, 0, 129, 2380, 0, 0, 0,
	2436, 690, 2520, 1761, 0, 0, 2494, 0, 2442, 1777,
	0, 2488, 1200, 0, 1673, 0, 0, 0, 0, 690,
	0, 0, 0, 0, 0, 0, 0, 2521, 2487, 0,
	1854, 1855, 1856, 2493, 0, 2519, 2511, 0, 2490, 0,
	0, 0, 2498, 2503, 2509, 2510, 0, 0, 2508, 476,
	0, 0, 0, 0, 0, 2525, 1585, 0, 2499, 2147,
	0, 0, 2147, 0, 0, 0, 1802, 0, 0, 2526,
	0, 1805, 0, 2581, 0, 2497, 1807, 1808, 0, 0,
	0, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 690,
	2538, 1823, 0, 2548, 2553, 0, 1828, 1829, 1830, 1831,
	2148, 2556, 80, 1835, 1836, 1837, 2566, 0, 0, 0,
	1840, 1841, 1842, 0, 2574, 2571, 2572, 2381, 1848, 2383,
	0, 1851, 1852, 0, 2578, 0, 1857, 0, 690, 2586,
	0, 1863, 80, 1864, 1865, 1866, 0, 1867, 1868, 0,
	2299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2604, 551, 2585, 2599, 983, 2587, 1893, 1894, 0, 2603,
	0, 0, 0, 2616, 2515, 2606, 2516, 0, 0, 0,
	0, 0, 0, 0, 2281, 0, 0, 0, 0, 1197,
	0, 2600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2281, 0, 674, 456, 0, 0,
	129, 674, 1220, 0, 2147, 690, 0, 690, 0, 0,
	0, 2614, 0, 2022, 0, 2341, 0, 0, 0, 2474,
	0, 2644, 1152, 2646, 0, 0, 0, 80, 2675, 0,
	2658, 0, 2353, 2354, 2677, 2645, 2355, 2642, 2643, 2357,
	129, 0, 2663, 0, 2659, 0, 0, 1152, 0, 0,
	0, 2668, 0, 0, 1878, 1877, 0, 476, 0, 476,
	0, 0, 0, 0, 0, 2192, 0, 0, 0, 0,
	0, 2090, 2091, 0, 0, 0, 1200, 0, 0, 0,
	2097, 2098, 690, 2192, 690, 0, 0, 2083, 2721, 2719,
	0, 2758, 2105, 2106, 2107, 2108, 0, 0, 0, 2112,
	2113, 2114, 2739, 0, 0, 0, 0, 0, 0, 0,
	0, 2749, 0, 0, 0, 0, 0, 0, 2109, 2110,
	0, 2604, 80, 2754, 0, 0, 0, 0, 0, 2728,
	0, 0, 2129, 2130, 0, 2131, 2132, 0, 0, 2133,
	0, 0, 690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2779, 0, 2781, 2767, 0, 0, 0,
	0, 0, 690, 0, 2671, 2788, 0, 0, 0, 2797,
	0, 0, 2787, 2778, 2794, 0, 2782, 2786, 2780, 0,
	0, 0, 2084, 0, 2175, 690, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 0, 2095, 453, 0, 0,
	2102, 2103, 2815, 2796, 1294, 2807, 0, 0, 0, 456,
	1302, 1305, 2820, 2111, 80, 0, 690, 2115, 0, 0,
	80, 2819, 2816, 0, 2830, 0, 690, 2837, 0, 0,
	0, 1302, 1305, 0, 2204, 2825, 2828, 0, 80, 0,
	690, 2840, 0, 80, 2842, 0, 0, 0, 2855, 2839,
	2858, 2150, 2871, 2852, 2835, 2851, 0, 0, 453, 2850,
	0, 2879, 2875, 2870, 80, 2849, 2873, 80, 80, 2192,
	456, 2192, 80, 0, 2880, 2837, 0, 2882, 0, 2888,
	0, 0, 0, 2180, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 0, 2898, 80, 0, 0, 0, 2837,
	2906, 0, 2908, 0, 0, 2903, 0, 0, 0, 0,
	80, 0, 80, 0, 0, 0, 80, 2837, 0, 2837,
	0, 1397, 2860, 0, 0, 0, 2918, 80, 0, 0,
	80, 2333, 80, 0, 2837, 0, 80, 0, 0, 2837,
	2922, 551, 0, 2837, 0, 0, 0, 0, 2309, 0,
	0, 0, 0, 0, 0, 0, 2311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2314, 2315, 2308, 0,
	0, 0, 0, 0, 0, 2318, 0, 0, 0, 0,
	0, 0, 686, 1259, 0, 0, 0, 0, 986, 993,
	994, 996, 997, 998, 999, 1000, 0, 1002, 1003, 1004,
	0, 1007, 0, 1010, 1011, 1012, 1013, 1014, 0, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	2335, 2336, 2337, 0, 0, 1058, 2192, 0, 1084, 1083,
	1093, 1094, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 0, 0, 2654, 2657, 2307,
	0, 0, 1152, 0, 0, 0, 0, 0, 0, 2332,
	0, 0, 0, 127, 0, 0, 404, 0, 0, 1521,
	1522, 0, 127, 0, 1246, 0, 0, 0, 2375, 0,
	0, 0, 0, 0, 0, 2319, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 475, 2328, 2329, 0, 0,
	0, 0, 2334, 552, 0, 0, 657, 675, 0, 0,
	127, 0, 0, 0, 0, 1260, 0, 2345, 2346, 0,
	2348, 0, 0, 2349, 2331, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 127, 0, 2361, 0, 0, 0, 0, 0, 0,
	0, 686, 0, 0, 686, 686, 1084, 1083, 1093, 1094,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085, 0, 0,
	1095, 0, 2759, 2760, 0, 1492, 1497, 1498, 0, 0,
	0, 1502, 0, 1504, 1505, 1506, 1507, 0, 1509, 0,
	0, 1512, 2472, 2473, 0, 0, 1517, 1518, 1519, 1520,
	0, 0, 2657, 1524, 1525, 1526, 2476, 2477, 2478, 2479,
	0, 1532, 1533, 0, 2483, 0, 1539, 1542, 0, 1547,
	2330, 1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1085, 0, 0, 1095, 0, 0, 0, 0,
	0, 1555, 0, 1558, 1559, 0, 0, 0, 0, 0,
	1273, 1276, 1277, 1278, 1279, 1280, 1281, 400, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 2829, 1261, 1262, 1263,
	1264, 1240, 1244, 1274, 1241, 1247, 1243, 1245, 1242, 0,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 0,
	0, 0, 0, 0, 2480, 2481, 2482, 0, 2484, 0,
	0, 1745, 0, 0, 0, 1745, 0, 1084, 1083, 1093,
	1094, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085, 0,
	0, 1095, 0, 2500, 2501, 2502, 0, 1745, 0, 36,
	1745, 72, 39, 40, 2513, 0, 0, 2082, 0, 0,
	0, 2907, 0, 59, 0, 378, 0, 0, 0, 78,
	0, 0, 381, 41, 0, 0, 686, 0, 0, 0,
	0, 390, 398, 399, 0, 1084, 1083, 1093, 1094, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1085, 0, 1275, 1095,
	2612, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 387, 0, 0, 388,
	0, 0, 396, 397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2708, 0, 0, 2884, 2887,
	2883, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 2589, 2590, 0, 0, 2591, 2592, 2593, 2594, 0,
	0, 0, 0, 0, 0, 2647, 0, 0, 0, 0,
	0, 0, 0, 2316, 0, 0, 0, 0, 0, 393,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 0, 475, 674,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	1084, 1083, 1093, 1094, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1085, 0, 0, 1095, 674, 0, 0, 0, 1395,
	0, 0, 1398, 1399, 1400, 0, 1402, 1403, 0, 2134,
	1404, 686, 0, 0, 0, 0, 1405, 0, 1803, 0,
	1406, 1407, 0, 1408, 1409, 379, 1809, 0, 0, 0,
	57, 58, 0, 2710, 2664, 0, 0, 1821, 1822, 2669,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	1834, 2672, 0, 0, 0, 0, 0, 0, 392, 382,
	383, 0, 403, 0, 0, 0, 384, 386, 0, 380,
	402, 401, 0, 1982, 68, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2732, 1996, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 2740,
	0, 0, 2711, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 395, 1084, 1083, 1093, 1094, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1085, 1801, 0, 1095, 0,
	0, 0, 0, 0, 0, 0, 127, 127, 127, 0,
	0, 0, 0, 0, 0, 0, 675, 2035, 0, 0,
	0, 675, 0, 0, 1084, 1083, 1093, 1094, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1085, 0, 0, 1095, 0,
	0, 0, 0, 0, 686, 686, 0, 0, 0, 0,
	2869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 0, 1259, 0, 0, 0, 0, 0, 0,
	0, 73, 686, 0, 0, 0, 0, 2093, 0, 0,
	1079, 0, 1082, 0, 0, 0, 0, 2891, 0, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 0, 1080, 1081, 1078,
	0, 0, 2808, 0, 0, 0, 0, 1084, 1083, 1093,
	1094, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085, 0,
	79, 1095, 0, 1084, 1083, 1093, 1094, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1085, 0, 674, 1095, 686, 0,
	2155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2155, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 686, 0, 686, 0,
	2191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2909, 2910, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	1303, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 127, 0,
	0, 1303, 1306, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 127, 127, 127, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2291, 0, 0, 0, 0, 2296, 0, 0,
	0, 0, 0, 0, 2300, 0, 0, 2301, 0, 0,
	1273, 1276, 1277, 1278, 1279, 1280, 1281, 0, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 0, 1261, 1262, 1263,
	1264, 1240, 1244, 1274, 1241, 1247, 1243, 1245, 1242, 0,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 674, 0, 0, 0, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 2359, 0, 0, 0,
	0, 0, 0, 2359, 2359, 2359, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2359, 0, 0, 0,
	0, 0, 0, 0, 1496, 1496, 1496, 0, 1275, 0,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 0, 0,
	1496, 0, 0, 0, 0, 1496, 1496, 1496, 1496, 0,
	0, 0, 1496, 1496, 1496, 0, 0, 0, 0, 0,
	1496, 1496, 0, 0, 0, 1496, 1496, 0, 1496, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 1496, 1496, 1496, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 475, 0, 0, 0, 0,
	127, 127, 0, 0, 127, 1596, 1336, 675, 686, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2492, 0, 0, 0,
	0, 0, 2359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 127, 127, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	1722, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2191,
	0, 2191, 0, 0, 0, 0, 0, 1496, 2285, 0,
	0, 0, 0, 0, 0, 1496, 0, 540, 0, 0,
	0, 0, 0, 0, 674, 0, 1496, 1496, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 1496,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2734, 0, 2737, 675,
	127, 127, 127, 127, 127, 0, 539, 0, 0, 0,
	0, 0, 475, 0, 0, 1232, 127, 0, 0, 0,
	475, 0, 0, 497, 479, 1496, 0, 127, 0, 0,
	0, 0, 0, 501, 0, 675, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 492, 0, 486, 0, 0,
	0, 0, 0, 0, 500, 0, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 0, 505, 0, 2359,
	0, 0, 0, 513, 480, 0, 517, 0, 0, 0,
	0, 0, 0, 0, 478, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 519,
	2737, 0, 0, 0, 0, 0, 493, 494, 496, 523,
	2822, 525, 531, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 37,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 63, 64, 481, 0, 0, 0, 60,
	127, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 0, 0, 0, 0, 0,
	1496, 0, 1336, 0, 0, 0, 50, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	489, 482, 483, 484, 485, 487, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 488, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	0, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2278, 0, 0, 0,
	2280, 0, 0, 0, 0, 521, 0, 0, 0, 540,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 516, 518,
	0, 0, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 0, 0, 0, 0, 0, 127, 539, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 497, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 127,
	0, 0, 0, 68, 526, 0, 0, 492, 0, 486,
	0, 0, 0, 127, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 0, 505,
	0, 0, 0, 552, 0, 513, 480, 0, 517, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 519, 0, 0, 0, 0, 0, 0, 493, 494,
	496, 523, 0, 525, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 36, 0, 72, 39, 40, 0, 0, 0, 475,
	0, 0, 0, 675, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 79,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2708, 0, 0,
	0, 127, 2924, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 489, 482, 483, 484, 485, 487, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	488, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 475,
	0, 0, 57, 58, 0, 2710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2711, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 847, 822, 338,
	767, 850, 724, 750, 865, 755, 759, 802, 707, 780,
	264, 746, 708, 0, 728, 697, 738, 698, 725, 769,
	181, 723, 824, 783, 849, 220, 797, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 848, 775, 0, 857,
	223, 0, 792, 858, 325, 248, 0, 0, 771, 834,
	778, 820, 766, 804, 716, 791, 852, 747, 799, 853,
	0, 0, 0, 73, 2761, 0, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 795, 846, 741, 798, 801,
	695, 794, 0, 702, 709, 864, 841, 731, 732, 733,
	0, 0, 0, 0, 127, 0, 0, 770, 779, 814,
	763, 358, 275, 292, 313, 757, 283, 744, 0, 0,
	0, 0, 79, 0, 0, 0, 729, 0, 789, 0,
	0, 0, 710, 703, 675, 0, 768, 0, 0, 0,
	715, 694, 730, 816, 127, 692, 249, 148, 821, 840,
	765, 211, 862, 844, 762, 761, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 813, 307, 743,
	693, 825, 726, 739, 171, 735, 299, 268, 357, 748,
	786, 298, 224, 347, 809, 845, 356, 752, 828, 366,
	371, 734, 776, 713, 322, 183, 179, 182, 0, 137,
	745, 282, 176, 216, 764, 803, 727, 168, 811, 790,
	827, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 2764, 2765, 2766, 758, 749,
	0, 0, 362, 760, 310, 309, 754, 206, 819, 793,
	699, 291, 806, 212, 136, 335, 374, 154, 218, 340,
	691, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 740, 808, 818, 289, 312, 342,
	156, 329, 736, 737, 742, 815, 301, 826, 838, 851,
	231, 186, 189, 200, 207, 800, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 700, 0, 327, 360, 376, 158, 722, 315, 341,
	751, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	720, 721, 718, 0, 719, 781, 782, 854, 855, 856,
	817, 712, 0, 835, 836, 0, 0, 0, 0, 0,
	823, 842, 843, 805, 866, 756, 717, 701, 704, 705,
	706, 714, 772, 773, 785, 788, 831, 830, 829, 832,
	837, 860, 859, 861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 784, 133, 144, 222, 867,
	290, 192, 361, 696, 178, 0, 774, 777, 787, 812,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 810, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 839, 0,
	753, 135, 833, 863, 796, 807, 847, 822, 338, 767,
	850, 724, 750, 865, 755, 759, 802, 707, 780, 264,
	746, 708, 0, 728, 697, 738, 698, 725, 769, 181,
	723, 824, 783, 849, 220, 797, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 848, 775, 0, 857, 223,
	0, 792, 858, 325, 248, 0, 0, 771, 834, 778,
	820, 766, 804, 716, 791, 852, 747, 799, 853, 0,
	0, 0, 0, 689, 0, 1618, 1619, 0, 0, 0,
	0, 0, 711, 0, 795, 846, 741, 798, 801, 695,
	794, 0, 702, 709, 864, 841, 731, 732, 733, 1922,
	0, 0, 0, 0, 0, 0, 770, 779, 814, 763,
	358, 275, 292, 313, 757, 283, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 789, 0, 0,
	0, 710, 703, 0, 0, 768, 0, 0, 0, 715,
	694, 730, 816, 0, 692, 249, 148, 821, 840, 765,
	211, 862, 844, 762, 761, 285, 0, 332, 199, 221,
	153, 130, 146, 164, 198, 260, 813, 307, 743, 693,
	825, 726, 739, 171, 735, 299, 268, 357, 748, 786,
	298, 224, 347, 809, 845, 356, 752, 828, 366, 371,
	734, 776, 713, 322, 183, 179, 182, 0, 137, 745,
	282, 176, 216, 764, 803, 727, 168, 811, 790, 827,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 758, 749, 0,
	0, 362, 760, 310, 309, 754, 206, 819, 793, 699,
	291, 806, 212, 136, 335, 374, 154, 218, 340, 691,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 740, 808, 818, 289, 312, 342, 156,
	329, 736, 737, 742, 815, 301, 826, 838, 851, 231,
	186, 189, 200, 207, 800, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	700, 0, 327, 360, 376, 158, 722, 315, 341, 751,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 720,
	721, 718, 0, 719, 781, 782, 854, 855, 856, 817,
	712, 0, 835, 836, 0, 0, 0, 0, 0, 823,
	842, 843, 805, 866, 756, 717, 701, 704, 705, 706,
	714, 772, 773, 785, 788, 831, 830, 829, 832, 837,
	860, 859, 861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 133, 144, 222, 867, 290,
	192, 361, 696, 178, 0, 774, 777, 787, 812, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	810, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 839, 0, 753,
	135, 833, 863, 796, 807, 847, 822, 338, 767, 850,
	724, 750, 865, 755, 759, 802, 707, 780, 264, 746,
	708, 0, 728, 697, 738, 698, 725, 769, 181, 723,
	824, 783, 849, 220, 797, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 848, 775, 0, 857, 223, 0,
	792, 858, 325, 248, 0, 0, 771, 834, 778, 820,
	766, 804, 716, 791, 852, 747, 799, 853, 0, 0,
	0, 0, 689, 0, 1618, 1619, 0, 0, 0, 0,
	0, 711, 0, 795, 846, 741, 798, 801, 695, 794,
	0, 702, 709, 864, 841, 731, 732, 733, 0, 0,
	0, 0, 0, 0, 0, 770, 779, 814, 763, 358,
	275, 292, 313, 757, 283, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 789, 0, 0, 0,
	710, 703, 0, 0, 768, 0, 0, 0, 715, 694,
	730, 816, 0, 692, 249, 148, 821, 840, 765, 211,
	862, 844, 762, 761, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 813, 307, 743, 693, 825,
	726, 739, 171, 735, 299, 268, 357, 748, 786, 298,
	224, 347, 809, 845, 356, 752, 828, 366, 371, 734,
	776, 713, 322, 183, 179, 182, 0, 137, 745, 282,
	176, 216, 764, 803, 727, 168, 811, 790, 827, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 758, 749, 0, 0,
	362, 760, 310, 309, 754, 206, 819, 793, 699, 291,
	806, 212, 136, 335, 374, 154, 218, 340, 691, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 740, 808, 818, 289, 312, 342, 156, 329,
	736, 737, 742, 815, 301, 826, 838, 851, 231, 186,
	189, 200, 207, 800, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 700,
	0, 327, 360, 376, 158, 722, 315, 341, 751, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 720, 721,
	718, 0, 719, 781, 782, 854, 855, 856, 817, 712,
	0, 835, 836, 0, 0, 0, 0, 0, 823, 842,
	843, 805, 866, 756, 717, 701, 704, 705, 706, 714,
	772, 773, 785, 788, 831, 830, 829, 832, 837, 860,
	859, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 784, 133, 144, 222, 867, 290, 192,
	361, 696, 178, 0, 774, 777, 787, 812, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 810,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 839, 0, 753, 135,
	833, 863, 796, 807, 847, 2152, 338, 767, 850, 724,
	750, 865, 755, 759, 802, 707, 780, 264, 746, 708,
	0, 728, 697, 738, 698, 725, 769, 181, 723, 824,
	783, 849, 220, 797, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 848, 775, 0, 857, 223, 0, 792,
	858, 325, 248, 0, 0, 771, 834, 778, 820, 766,
	804, 716, 791, 852, 747, 799, 853, 81, 0, 1048,
	0, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	711, 0, 795, 846, 741, 798, 801, 695, 794, 0,
	702, 709, 864, 841, 731, 732, 733, 0, 0, 0,
	0, 0, 0, 0, 770, 779, 814, 763, 358, 275,
	292, 313, 757, 283, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 789, 0, 0, 0, 710,
	703, 0, 0, 768, 0, 0, 0, 715, 694, 730,
	816, 0, 692, 249, 148, 821, 840, 765, 211, 862,
	844, 762, 761, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 813, 307, 743, 693, 825, 726,
	739, 171, 735, 299, 268, 357, 748, 786, 298, 224,
	347, 809, 845, 356, 752, 828, 366, 371, 734, 776,
	713, 322, 183, 179, 182, 0, 137, 745, 282, 176,
	216, 764, 803, 727, 168, 811, 790, 827, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 758, 749, 0, 0, 362,
	760, 310, 309, 754, 206, 819, 793, 699, 291, 806,
	212, 136, 335, 374, 154, 218, 340, 691, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 740, 808, 818, 289, 312, 342, 156, 329, 736,
	737, 742, 815, 301, 826, 838, 851, 231, 186, 189,
	200, 207, 800, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 700, 0,
	327, 360, 376, 158, 722, 315, 341, 751, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 720, 721, 718,
	0, 719, 781, 782, 854, 855, 856, 817, 712, 0,
	835, 836, 0, 0, 0, 0, 0, 823, 842, 843,
	805, 866, 756, 717, 701, 704, 705, 706, 714, 772,
	773, 785, 788, 831, 830, 829, 832, 837, 860, 859,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 133, 144, 222, 2153, 290, 192, 361,
	696, 178, 0, 774, 777, 787, 812, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 810, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 839, 0, 753, 135, 833,
	863, 796, 807, 847, 822, 338, 767, 850, 724, 750,
	865, 755, 759, 802, 707, 780, 264, 746, 708, 0,
	728, 697, 738, 698, 725, 769, 181, 723, 824, 783,
	849, 220, 797, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 848, 775, 0, 857, 223, 0, 792, 858,
	325, 248, 0, 0, 771, 834, 778, 820, 766, 804,
	716, 791, 852, 747, 799, 853, 0, 0, 0, 0,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 711,
	0, 795, 846, 741, 798, 801, 695, 794, 0, 702,
	709, 864, 841, 731, 732, 733, 0, 0, 0, 0,
	0, 0, 0, 770, 779, 814, 763, 358, 275, 292,
	313, 757, 283, 744, 0, 0, 0, 0, 0, 0,
	2469, 0, 729, 0, 789, 0, 0, 0, 710, 703,
	0, 0, 768, 0, 0, 0, 715, 694, 730, 816,
	0, 692, 249, 148, 821, 840, 765, 211, 862, 844,
	762, 761, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 813, 307, 743, 693, 825, 726, 739,
	171, 735, 299, 268, 357, 748, 786, 298, 224, 347,
	809, 845, 356, 752, 828, 366, 371, 734, 776, 713,
	322, 183, 179, 182, 0, 137, 745, 282, 176, 216,
	764, 803, 727, 168, 811, 790, 827, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 758, 749, 0, 0, 362, 760,
	310, 309, 754, 206, 819, 793, 699, 291, 806, 212,
	136, 335, 374, 154, 218, 340, 691, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	740, 808, 818, 289, 312, 342, 156, 329, 736, 737,
	742, 815, 301, 826, 838, 851, 231, 186, 189, 200,
	207, 800, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 700, 0, 327,
	360, 376, 158, 722, 315, 341, 751, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 720, 721, 718, 0,
	719, 781, 782, 854, 855, 856, 817, 712, 0, 835,
	836, 0, 0, 0, 0, 0, 823, 842, 843, 805,
	866, 756, 717, 701, 704, 705, 706, 714, 772, 773,
	785, 788, 831, 830, 829, 832, 837, 860, 859, 861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 784, 133, 144, 222, 867, 290, 192, 361, 696,
	178, 0, 774, 777, 787, 812, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 810, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 839, 0, 753, 135, 833, 863,
	796, 807, 847, 822, 338, 767, 850, 724, 750, 865,
	755, 759, 802, 707, 780, 264, 746, 708, 0, 728,
	697, 738, 698, 725, 769, 181, 723, 824, 783, 849,
	220, 797, 0, 170, 228, 226, 0, 0, 0, 271,
	337, 848, 775, 0, 857, 223, 0, 792, 858, 325,
	248, 0, 0, 771, 834, 778, 820, 766, 804, 716,
	791, 852, 747, 799, 853, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	795, 846, 741, 798, 801, 695, 794, 0, 702, 709,
	864, 841, 731, 732, 733, 0, 0, 0, 0, 0,
	0, 0, 770, 779, 814, 763, 358, 275, 292, 313,
	757, 283, 744, 0, 0, 0, 0, 0, 0, 2088,
	0, 729, 0, 789, 0, 0, 0, 710, 703, 0,
	0, 768, 0, 0, 0, 715, 694, 730, 816, 0,
	692, 249, 148, 821, 840, 765, 211, 862, 844, 762,
	761, 285, 0, 332, 199, 221, 153, 130, 146, 164,
	198, 260, 813, 307, 743, 693, 825, 726, 739, 171,
	735, 299, 268, 357, 748, 786, 298, 224, 347, 809,
	845, 356, 752, 828, 366, 371, 734, 776, 713, 322,
	183, 179, 182, 0, 137, 745, 282, 176, 216, 764,
	803, 727, 168, 811, 790, 827, 321, 344, 134, 246,
	345, 370, 155, 339, 247, 253, 165, 167, 166, 147,
	316, 343, 160, 169, 326, 303, 333, 175, 0, 0,
	0, 0, 0, 758, 749, 0, 0, 362, 760, 310,
	309, 754, 206, 819, 793, 699, 291, 806, 212, 136,
	335, 374, 154, 218, 340, 691, 193, 259, 173, 269,
	270, 190, 132, 287, 240, 241, 239, 242, 197, 740,
	808, 818, 289, 312, 342, 156, 329, 736, 737, 742,
	815, 301, 826, 838, 851, 231, 186, 189, 200, 207,
	800, 296, 330, 363, 0, 149, 138, 336, 355, 161,
	311, 314, 372, 297, 141, 353, 331, 244, 213, 214,
	139, 0, 140, 294, 180, 196, 174, 263, 0, 195,
	284, 350, 351, 172, 375, 150, 365, 143, 151, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 142,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 700, 0, 327, 360,
	376, 158, 722, 315, 341, 751, 288, 159, 194, 187,
	279, 254, 152, 205, 324, 217, 225, 293, 373, 267,
	300, 162, 359, 323, 184, 720, 721, 718, 0, 719,
	781, 782, 854, 855, 856, 817, 712, 0, 835, 836,
	0, 0, 0, 0, 0, 823, 842, 843, 805, 866,
	756, 717, 701, 704, 705, 706, 714, 772, 773, 785,
	788, 831, 830, 829, 832, 837, 860, 859, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	784, 133, 144, 222, 867, 290, 192, 361, 696, 178,
	0, 774, 777, 787, 812, 131, 145, 157, 163, 177,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 810, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 334, 348,
	349, 368, 369, 839, 0, 753, 135, 833, 863, 796,
	807, 847, 822, 338, 767, 850, 724, 750, 865, 755,
	759, 802, 707, 780, 264, 746, 708, 0, 728, 697,
	738, 698, 725, 769, 181, 723, 824, 783, 849, 220,
	797, 0, 170, 228, 226, 0, 0, 0, 271, 337,
	848, 775, 0, 857, 223, 0, 792, 858, 325, 248,
	0, 0, 771, 834, 778, 820, 766, 804, 716, 791,
	852, 747, 799, 853, 0, 0, 0, 0, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 711, 0, 795,
	846, 741, 798, 801, 695, 794, 0, 702, 709, 864,
	841, 731, 732, 733, 0, 0, 0, 0, 0, 0,
	0, 770, 779, 814, 763, 358, 275, 292, 313, 757,
	283, 744, 0, 0, 0, 0, 0, 0, 2078, 0,
	729, 0, 789, 0, 0, 0, 710, 703, 0, 0,
	768, 0, 0, 0, 715, 694, 730, 816, 0, 692,
	249, 148, 821, 840, 765, 211, 862, 844, 762, 761,
	285, 0, 332, 199, 221, 153, 130, 146, 164, 198,
	260, 813, 307, 743, 693, 825, 726, 739, 171, 735,
	299, 268, 357, 748, 786, 298, 224, 347, 809, 845,
	356, 752, 828, 366, 371, 734, 776, 713, 322, 183,
	179, 182, 0, 137, 745, 282, 176, 216, 764, 803,
	727, 168, 811, 790, 827, 321, 344, 134, 246, 345,
	370, 155, 339, 247, 253, 165, 167, 166, 147, 316,
	343, 160, 169, 326, 303, 333, 175, 0, 0, 0,
	0, 0, 758, 749, 0, 0, 362, 760, 310, 309,
	754, 206, 819, 793, 699, 291, 806, 212, 136, 335,
	374, 154, 218, 340, 691, 193, 259, 173, 269, 270,
	190, 132, 287, 240, 241, 239, 242, 197, 740, 808,
	818, 289, 312, 342, 156, 329, 736, 737, 742, 815,
	301, 826, 838, 851, 231, 186, 189, 200, 207, 800,
	296, 330, 363, 0, 149, 138, 336, 355, 161, 311,
	314, 372, 297, 141, 353, 331, 244, 213, 214, 139,
	0, 140, 294, 180, 196, 174, 263, 0, 195, 284,
	350, 351, 172, 375, 150, 365, 143, 151, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 142, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 700, 0, 327, 360, 376,
	158, 722, 315, 341, 751, 288, 159, 194, 187, 279,
	254, 152, 205, 324, 217, 225, 293, 373, 267, 300,
	162, 359, 323, 184, 720, 721, 718, 0, 719, 781,
	782, 854, 855, 856, 817, 712, 0, 835, 836, 0,
	0, 0, 0, 0, 823, 842, 843, 805, 866, 756,
	717, 701, 704, 705, 706, 714, 772, 773, 785, 788,
	831, 830, 829, 832, 837, 860, 859, 861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 784,
	133, 144, 222, 867, 290, 192, 361, 696, 178, 0,
	774, 777, 787, 812, 131, 145, 157, 163, 177, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 810, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 334, 348, 349,
	368, 369, 839, 0, 753, 135, 833, 863, 796, 807,
	847, 822, 338, 767, 850, 724, 750, 865, 755, 759,
	802, 707, 780, 264, 746, 708, 0, 728, 697, 738,
	698, 725, 769, 181, 723, 824, 783, 849, 220, 797,
	0, 170, 228, 226, 0, 0, 0, 271, 337, 848,
	775, 0, 857, 223, 0, 792, 858, 325, 248, 0,
	0, 771, 834, 778, 820, 766, 804, 716, 791, 852,
	747, 799, 853, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 711, 0, 795, 846,
	741, 798, 801, 695, 794, 0, 702, 709, 864, 841,
	731, 732, 733, 0, 0, 0, 0, 0, 0, 0,
	770, 779, 814, 763, 358, 275, 292, 313, 757, 283,
	744, 0, 0, 0, 0, 0, 0, 1597, 0, 729,
	0, 789, 0, 0, 0, 710, 703, 0, 0, 768,
	0, 0, 0, 715, 694, 730, 816, 0, 692, 249,
	148, 821, 840, 765, 211, 862, 844, 762, 761, 285,
	0, 332, 199, 221, 153, 130, 146, 164, 198, 260,
	813, 307, 743, 693, 825, 726, 739, 171, 735, 299,
	268, 357, 748, 786, 298, 224, 347, 809, 845, 356,
	752, 828, 366, 371, 734, 776, 713, 322, 183, 179,
	182, 0, 137, 745, 282, 176, 216, 764, 803, 727,
	168, 811, 790, 827, 321, 344, 134, 246, 345, 370,
	155, 339, 247, 253, 165, 167, 166, 147, 316, 343,
	160, 169, 326, 303, 333, 175, 0, 0, 0, 0,
	0, 758, 749, 0, 0, 362, 760, 310, 309, 754,
	206, 819, 793, 699, 291, 806, 212, 136, 335, 374,
	154, 218, 340, 691, 193, 259, 173, 269, 270, 190,
	132, 287, 240, 241, 239, 242, 197, 740, 808, 818,
	289, 312, 342, 156, 329, 736, 737, 742, 815, 301,
	826, 838, 851, 231, 186, 189, 200, 207, 800, 296,
	330, 363, 0, 149, 138, 336, 355, 161, 311, 314,
	372, 297, 141, 353, 331, 244, 213, 214, 139, 0,
	140, 294, 180, 196, 174, 263, 0, 195, 284, 350,
	351, 172, 375, 150, 365, 143, 151, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 142, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 700, 0, 327, 360, 376, 158,
	722, 315, 341, 751, 288, 159, 194, 187, 279, 254,
	152, 205, 324, 217, 225, 293, 373, 267, 300, 162,
	359, 323, 184, 720, 721, 718, 0, 719, 781, 782,
	854, 855, 856, 817, 712, 0, 835, 836, 0, 0,
	0, 0, 0, 823, 842, 843, 805, 866, 756, 717,
	701, 704, 705, 706, 714, 772, 773, 785, 788, 831,
	830, 829, 832, 837, 860, 859, 861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 133,
	144, 222, 867, 290, 192, 361, 696, 178, 0, 774,
	777, 787, 812, 131, 145, 157, 163, 177, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 810, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 334, 348, 349, 368,
	369, 839, 0, 753, 135, 833, 863, 796, 807, 847,
	822, 338, 767, 850, 724, 750, 865, 755, 759, 802,
	707, 780, 264, 746, 708, 0, 728, 697, 738, 698,
	725, 769, 181, 723, 824, 783, 849, 220, 797, 0,
	170, 228, 226, 0, 0, 0, 271, 337, 848, 775,
	0, 857, 223, 0, 792, 858, 325, 248, 0, 0,
	771, 834, 778, 820, 766, 804, 716, 791, 852, 747,
	799, 853, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 0, 795, 846, 741,
	798, 801, 695, 794, 0, 702, 709, 864, 841, 731,
	732, 733, 0, 0, 0, 0, 0, 0, 0, 770,
	779, 814, 763, 358, 275, 292, 313, 757, 283, 744,
	0, 0, 0, 0, 0, 0, 1456, 0, 729, 0,
	789, 0, 0, 0, 710, 703, 0, 0, 768, 0,
	0, 0, 715, 694, 730, 816, 0, 692, 249, 148,
	821, 840, 765, 211, 862, 844, 762, 761, 285, 0,
	332, 199, 221, 153, 130, 146, 164, 198, 260, 813,
	307, 743, 693, 825, 726, 739, 171, 735, 299, 268,
	357, 748, 786, 298, 224, 347, 809, 845, 356, 752,
	828, 366, 371, 734, 776, 713, 322, 183, 179, 182,
	0, 137, 745, 282, 176, 216, 764, 803, 727, 168,
	811, 790, 827, 321, 344, 134, 246, 345, 370, 155,
	339, 247, 253, 165, 167, 166, 147, 316, 343, 160,
	169, 326, 303, 333, 175, 0, 0, 0, 0, 0,
	758, 749, 0, 0, 362, 760, 310, 309, 754, 206,
	819, 793, 699, 291, 806, 212, 136, 335, 374, 154,
	218, 340, 691, 193, 259, 173, 269, 270, 190, 132,
	287, 240, 241, 239, 242, 197, 740, 808, 818, 289,
	312, 342, 156, 329, 736, 737, 742, 815, 301, 826,
	838, 851, 231, 186, 189, 200, 207, 800, 296, 330,
	363, 0, 149, 138, 336, 355, 161, 311, 314, 372,
	297, 141, 353, 331, 244, 213, 214, 139, 0, 140,
	294, 180, 196, 174, 263, 0, 195, 284, 350, 351,
	172, 375, 150, 365, 143, 151, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 142, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 700, 0, 327, 360, 376, 158, 722,
	315, 341, 751, 288, 159, 194, 187, 279, 254, 152,
	205, 324, 217, 225, 293, 373, 267, 300, 162, 359,
	323, 184, 720, 721, 718, 0, 719, 781, 782, 854,
	855, 856, 817, 712, 0, 835, 836, 0, 0, 0,
	0, 0, 823, 842, 843, 805, 866, 756, 717, 701,
	704, 705, 706, 714, 772, 773, 785, 788, 831, 830,
	829, 832, 837, 860, 859, 861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 133, 144,
	222, 867, 290, 192, 361, 696, 178, 0, 774, 777,
	787, 812, 131, 145, 157, 163, 177, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 810, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 334, 348, 349, 368, 369,
	839, 0, 753, 135, 833, 863, 796, 807, 847, 822,
	338, 767, 850, 724, 750, 865, 755, 759, 802, 707,
	780, 264, 746, 708, 0, 728, 697, 738, 698, 725,
	769, 181, 723, 824, 783, 849, 220, 797, 0, 170,
	228, 226, 0, 0, 0, 271, 337, 848, 775, 0,
	857, 223, 0, 792, 858, 325, 248, 0, 0, 771,
	834, 778, 820, 766, 804, 716, 791, 852, 747, 799,
	853, 0, 0, 0, 0, 689, 0, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 795, 846, 741, 798,
	801, 695, 794, 0, 702, 709, 864, 841, 731, 732,
	733, 0, 0, 0, 0, 0, 0, 0, 770, 779,
	814, 763, 358, 275, 292, 313, 757, 283, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 789,
	0, 0, 0, 710, 703, 0, 0, 768, 0, 0,
	0, 715, 694, 730, 816, 0, 692, 249, 148, 821,
	840, 765, 211, 862, 844, 762, 761, 285, 0, 332,
	199, 221, 153, 130, 146, 164, 198, 260, 813, 307,
	743, 693, 825, 726, 739, 171, 735, 299, 268, 357,
	748, 786, 298, 224, 347, 809, 845, 356, 752, 828,
	366, 371, 734, 776, 713, 322, 183, 179, 182, 0,
	137, 745, 282, 176, 216, 764, 803, 727, 168, 811,
	790, 827, 321, 344, 134, 246, 345, 370, 155, 339,
	247, 253, 165, 167, 166, 147, 316, 343, 160, 169,
	326, 303, 333, 175, 0, 0, 0, 0, 0, 758,
	749, 0, 0, 362, 760, 310, 309, 754, 206, 819,
	793, 699, 291, 806, 212, 136, 335, 374, 154, 218,
	340, 691, 193, 259, 173, 269, 270, 190, 132, 287,
	240, 241, 239, 242, 197, 740, 808, 818, 289, 312,
	342, 156, 329, 736, 737, 742, 815, 301, 826, 838,
	851, 231, 186, 189, 200, 207, 800, 296, 330, 363,
	0, 149, 138, 336, 355, 161, 311, 314, 372, 297,
	141, 353, 331, 244, 213, 214, 139, 0, 140, 294,
	180, 196, 174, 263, 0, 195, 284, 350, 351, 172,
	375, 150, 365, 143, 151, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 142, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 700, 0, 327, 360, 376, 158, 722, 315,
	341, 751, 288, 159, 194, 187, 279, 254, 152, 205,
	324, 217, 225, 293, 373, 267, 300, 162, 359, 323,
	184, 720, 721, 718, 0, 719, 781, 782, 854, 855,
	856, 817, 712, 0, 835, 836, 0, 0, 0, 0,
	0, 823, 842, 843, 805, 866, 756, 717, 701, 704,
	705, 706, 714, 772, 773, 785, 788, 831, 830, 829,
	832, 837, 860, 859, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 133, 144, 222,
	867, 290, 192, 361, 696, 178, 0, 774, 777, 787,
	812, 131, 145, 157, 163, 177, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 810, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 334, 348, 349, 368, 369, 839,
	0, 753, 135, 833, 863, 796, 807, 847, 822, 338,
	767, 850, 724, 750, 865, 755, 759, 802, 707, 780,
	264, 746, 708, 0, 728, 697, 738, 698, 725, 769,
	181, 723, 824, 783, 849, 220, 797, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 848, 775, 0, 857,
	223, 0, 792, 858, 325, 248, 0, 0, 771, 834,
	778, 820, 766, 804, 716, 791, 852, 747, 799, 853,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 795, 846, 741, 798, 801,
	695, 794, 0, 702, 709, 864, 841, 731, 732, 733,
	0, 0, 0, 0, 0, 0, 0, 770, 779, 814,
	763, 358, 275, 292, 313, 757, 283, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 789, 0,
	0, 0, 710, 703, 0, 0, 768, 0, 0, 0,
	715, 694, 730, 816, 0, 692, 249, 148, 821, 840,
	765, 211, 862, 844, 762, 761, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 813, 307, 743,
	693, 825, 726, 739, 171, 735, 299, 268, 357, 748,
	786, 298, 224, 347, 809, 845, 356, 752, 828, 366,
	371, 734, 776, 713, 322, 183, 179, 182, 0, 137,
	745, 282, 176, 216, 764, 803, 727, 168, 811, 790,
	827, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 0, 0, 0, 758, 749,
	0, 0, 362, 760, 310, 309, 754, 206, 819, 793,
	699, 291, 806, 212, 136, 335, 374, 154, 218, 340,
	691, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 740, 808, 818, 289, 312, 342,
	156, 329, 736, 737, 742, 815, 301, 826, 838, 851,
	231, 186, 189, 200, 207, 800, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 700, 0, 327, 360, 376, 158, 722, 315, 341,
	751, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	720, 721, 718, 0, 719, 781, 782, 854, 855, 856,
	817, 712, 0, 835, 836, 0, 0, 0, 0, 0,
	823, 842, 843, 805, 866, 756, 717, 701, 704, 705,
	706, 714, 772, 773, 785, 788, 831, 830, 829, 832,
	837, 860, 859, 861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 784, 133, 144, 222, 867,
	290, 192, 361, 696, 178, 0, 774, 777, 787, 812,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 810, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 839, 0,
	753, 135, 833, 863, 796, 807, 847, 822, 338, 767,
	850, 724, 750, 865, 755, 759, 802, 707, 780, 264,
	746, 708, 0, 728, 697, 738, 698, 725, 769, 181,
	723, 824, 783, 849, 220, 797, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 1630, 1634, 0, 857, 223,
	0, 792, 858, 325, 248, 0, 0, 771, 834, 778,
	820, 766, 804, 716, 791, 852, 747, 799, 853, 0,
	0, 0, 0, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 795, 846, 741, 798, 801, 695,
	794, 0, 702, 709, 864, 841, 731, 732, 733, 0,
	0, 0, 0, 0, 0, 0, 770, 779, 814, 763,
	358, 275, 292, 313, 757, 283, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 789, 0, 0,
	0, 710, 703, 0, 0, 768, 0, 0, 0, 715,
	694, 730, 816, 0, 692, 249, 148, 821, 840, 1633,
	211, 862, 844, 762, 761, 1627, 0, 1628, 1629, 221,
	688, 130, 146, 1625, 1632, 260, 813, 307, 743, 693,
	825, 726, 739, 171, 735, 299, 268, 357, 748, 786,
	298, 224, 347, 809, 845, 356, 752, 828, 366, 371,
	734, 776, 713, 322, 183, 179, 182, 0, 137, 745,
	282, 176, 216, 764, 803, 727, 168, 811, 790, 827,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 758, 749, 0,
	0, 362, 760, 310, 309, 754, 206, 819, 793, 699,
	291, 806, 212, 136, 335, 374, 154, 218, 340, 691,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 740, 808, 818, 289, 312, 342, 156,
	329, 736, 737, 742, 815, 301, 826, 838, 851, 231,
	186, 189, 200, 207, 800, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	700, 0, 327, 360, 376, 158, 722, 315, 341, 751,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 720,
	721, 718, 0, 719, 781, 782, 854, 855, 856, 817,
	712, 0, 835, 836, 0, 0, 0, 0, 0, 823,
	842, 843, 805, 866, 756, 717, 701, 704, 705, 706,
	714, 772, 773, 785, 788, 831, 830, 829, 832, 837,
	860, 859, 861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 133, 144, 222, 867, 290,
	192, 361, 696, 178, 0, 774, 777, 787, 812, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	810, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 839, 0, 753,
	135, 833, 863, 796, 807, 847, 822, 338, 767, 850,
	724, 750, 865, 755, 759, 802, 707, 780, 264, 746,
	708, 0, 728, 697, 738, 698, 725, 769, 181, 723,
	824, 783, 849, 220, 797, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 848, 775, 0, 857, 223, 0,
	792, 858, 325, 248, 0, 0, 771, 834, 778, 820,
	766, 804, 716, 791, 852, 747, 799, 853, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 795, 846, 741, 798, 801, 695, 794,
	0, 702, 709, 864, 841, 731, 732, 733, 0, 0,
	0, 0, 0, 0, 0, 770, 779, 814, 763, 358,
	275, 292, 313, 757, 283, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 789, 0, 0, 0,
	710, 703, 0, 0, 768, 0, 0, 0, 715, 694,
	730, 816, 0, 692, 249, 148, 821, 840, 765, 211,
	862, 844, 762, 761, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 813, 307, 743, 693, 825,
	726, 739, 171, 735, 299, 268, 357, 748, 786, 298,
	224, 347, 809, 845, 356, 752, 828, 366, 371, 734,
	776, 713, 322, 183, 179, 182, 0, 137, 745, 282,
	176, 216, 764, 803, 727, 168, 811, 790, 827, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 758, 749, 0, 0,
	362, 760, 310, 309, 754, 206, 819, 793, 699, 291,
	806, 212, 136, 335, 374, 154, 218, 340, 691, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 740, 808, 818, 289, 312, 342, 156, 329,
	736, 737, 742, 815, 301, 826, 838, 851, 231, 186,
	189, 200, 207, 800, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 700,
	0, 327, 360, 376, 158, 722, 315, 341, 751, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 720, 721,
	718, 0, 719, 781, 782, 854, 855, 856, 817, 712,
	0, 835, 836, 0, 0, 0, 0, 0, 823, 842,
	843, 805, 866, 756, 717, 701, 704, 705, 706, 714,
	772, 773, 785, 788, 831, 830, 829, 832, 837, 860,
	859, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 784, 133, 144, 222, 867, 290, 192,
	361, 696, 178, 0, 774, 777, 787, 812, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 810,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 839, 0, 753, 135,
	833, 863, 796, 807, 847, 822, 338, 767, 850, 724,
	750, 865, 755, 759, 802, 707, 780, 264, 746, 708,
	0, 728, 697, 738, 698, 725, 769, 181, 723, 824,
	783, 849, 220, 797, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 848, 775, 0, 857, 223, 0, 792,
	858, 325, 248, 0, 0, 771, 834, 778, 820, 766,
	804, 716, 791, 852, 747, 799, 853, 0, 0, 0,
	0, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	711, 0, 795, 846, 741, 798, 801, 695, 794, 0,
	702, 709, 864, 841, 731, 732, 733, 0, 0, 0,
	0, 0, 0, 0, 770, 779, 814, 763, 358, 275,
	292, 313, 757, 283, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 789, 0, 0, 0, 710,
	703, 0, 0, 768, 0, 0, 0, 715, 694, 730,
	816, 0, 692, 249, 148, 821, 840, 765, 211, 862,
	844, 762, 761, 285, 0, 332, 199, 221, 688, 130,
	146, 684, 198, 260, 813, 307, 743, 693, 825, 726,
	739, 171, 735, 299, 268, 357, 748, 786, 298, 224,
	347, 809, 845, 356, 752, 828, 366, 371, 734, 776,
	713, 322, 183, 179, 182, 0, 137, 745, 282, 176,
	216, 764, 803, 727, 168, 811, 790, 827, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 758, 749, 0, 0, 362,
	760, 310, 309, 754, 206, 819, 793, 699, 291, 806,
	212, 136, 335, 374, 154, 218, 340, 691, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 740, 808, 818, 289, 312, 342, 156, 329, 736,
	737, 742, 815, 301, 826, 838, 851, 231, 186, 189,
	200, 207, 800, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 700, 0,
	327, 360, 376, 158, 722, 315, 341, 751, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 720, 721, 718,
	0, 719, 781, 782, 854, 855, 856, 817, 712, 0,
	835, 836, 0, 0, 0, 0, 0, 823, 842, 843,
	805, 866, 756, 717, 701, 704, 705, 706, 714, 772,
	773, 785, 788, 831, 830, 829, 832, 837, 860, 859,
	861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 133, 144, 222, 867, 290, 192, 361,
	696, 178, 0, 774, 777, 787, 812, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 810, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 839, 338, 753, 135, 833,
	863, 796, 807, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 181, 556, 0,
	0, 0, 220, 0, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 636, 223, 0, 0,
	535, 325, 248, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 1607, 0, 81, 0, 0,
	0, 557, 581, 580, 583, 584, 585, 586, 0, 0,
	540, 582, 587, 620, 621, 1608, 0, 0, 554, 572,
	0, 635, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 499, 0, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 648, 0, 571, 0, 0,
	566, 567, 568, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 148, 627, 0, 0, 211, 539,
	0, 0, 646, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 0, 307, 595, 479, 0, 0,
	0, 171, 0, 299, 268, 357, 597, 0, 298, 224,
	347, 0, 0, 356, 0, 526, 366, 371, 492, 0,
	486, 322, 183, 179, 182, 0, 137, 500, 282, 176,
	216, 0, 0, 0, 168, 0, 0, 0, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 362,
	505, 310, 309, 0, 206, 0, 513, 480, 291, 517,
	212, 136, 335, 374, 154, 218, 340, 478, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 495, 519, 0, 289, 312, 342, 156, 329, 493,
	494, 496, 523, 301, 525, 531, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 158, 0, 315, 341, 503, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 637, 647, 643,
	645, 644, 641, 642, 640, 639, 638, 649, 628, 629,
	630, 631, 632, 0, 0, 0, 634, 0, 614, 615,
	0, 0, 0, 489, 588, 589, 590, 591, 592, 598,
	599, 603, 604, 612, 611, 610, 613, 616, 618, 617,
	619, 593, 594, 596, 600, 601, 602, 605, 606, 609,
	607, 608, 633, 133, 144, 222, 0, 290, 192, 361,
	0, 178, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 521, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 36, 338, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 181, 556, 0,
	0, 0, 220, 0, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 636, 223, 0, 0,
	535, 325, 248, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 581, 580, 583, 584, 585, 586, 0, 0,
	540, 582, 587, 620, 621, 0, 0, 0, 554, 572,
	0, 635, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 499, 0, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 648, 0, 571, 0, 0,
	566, 567, 568, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 148, 627, 0, 0, 211, 539,
	0, 0, 646, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 0, 307, 595, 479, 0, 0,
	0, 171, 0, 299, 268, 357, 597, 0, 298, 224,
	347, 0, 0, 356, 0, 526, 366, 371, 492, 0,
	486, 322, 183, 179, 182, 0, 137, 500, 282, 176,
	216, 0, 0, 0, 168, 0, 0, 0, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 362,
	505, 310, 309, 0, 206, 0, 513, 480, 291, 517,
	212, 136, 335, 374, 154, 218, 340, 478, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 495, 519, 0, 289, 312, 342, 156, 329, 493,
	494, 496, 523, 301, 525, 531, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 158, 0, 315, 341, 503, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 637, 647, 643,
	645, 644, 641, 642, 640, 639, 638, 649, 628, 629,
	630, 631, 632, 0, 0, 0, 634, 0, 614, 615,
	0, 0, 0, 489, 588, 589, 590, 591, 592, 598,
	599, 603, 604, 612, 611, 610, 613, 616, 618, 617,
	619, 593, 594, 596, 600, 601, 602, 605, 606, 609,
	607, 608, 633, 133, 144, 222, 79, 290, 192, 361,
	0, 178, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 521, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 338, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 181, 556, 0, 0,
	0, 220, 0, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 636, 223, 0, 0, 535,
	325, 248, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	557, 581, 580, 583, 584, 585, 586, 0, 0, 540,
	582, 587, 620, 621, 0, 0, 0, 554, 572, 0,
	635, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 499, 0, 0, 0, 0, 569, 570,
	550, 0, 0, 0, 648, 0, 571, 0, 0, 566,
	567, 568, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 148, 627, 0, 0, 211, 539, 0,
	0, 646, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 0, 307, 595, 479, 0, 0, 0,
	171, 0, 299, 268, 357, 597, 0, 298, 224, 347,
	0, 0, 356, 0, 526, 366, 371, 492, 0, 486,
	322, 183, 179, 182, 0, 137, 500, 282, 176, 216,
	0, 0, 0, 168, 0, 0, 0, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 362, 505,
	310, 309, 0, 206, 0, 513, 480, 291, 517, 212,
	136, 335, 374, 154, 218, 340, 478, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	495, 519, 0, 289, 312, 342, 156, 329, 493, 494,
	496, 523, 301, 525, 531, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 158, 0, 315, 341, 503, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 637, 647, 643, 645,
	644, 641, 642, 640, 639, 638, 649, 628, 629, 630,
	631, 632, 0, 0, 0, 634, 0, 614, 615, 0,
	0, 0, 489, 588, 589, 590, 591, 592, 598, 599,
	603, 604, 612, 611, 610, 613, 616, 618, 617, 619,
	593, 594, 596, 600, 601, 602, 605, 606, 609, 607,
	608, 633, 133, 144, 222, 0, 290, 192, 361, 0,
	178, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 521, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 338, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 181, 556, 0, 0, 0,
	220, 0, 0, 170, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 636, 223, 0, 0, 535, 325,
	248, 0, 0, 0, 0, 625, 626, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1048, 0, 557,
	581, 580, 583, 584, 585, 586, 0, 0, 540, 582,
	587, 620, 621, 0, 0, 0, 554, 572, 0, 635,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 499, 0, 0, 0, 0, 569, 570, 0,
	0, 0, 0, 648, 0, 571, 0, 0, 566, 567,
	568, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 148, 627, 0, 0, 211, 539, 0, 0,
	646, 285, 0, 332, 199, 221, 153, 130, 146, 164,
	198, 260, 0, 307, 595, 479, 0, 0, 0, 171,
	0, 299, 268, 357, 597, 0, 298, 224, 347, 0,
	0, 356, 0, 526, 366, 371, 492, 0, 486, 322,
	183, 179, 182, 0, 137, 500, 282, 176, 216, 0,
	0, 0, 168, 0, 0, 0, 321, 344, 134, 246,
	345, 370, 155, 339, 247, 253, 165, 167, 166, 147,
	316, 343, 160, 169, 326, 303, 333, 175, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 362, 505, 310,
	309, 0, 206, 0, 513, 480, 291, 517, 212, 136,
	335, 374, 154, 218, 340, 478, 193, 259, 173, 269,
	270, 190, 132, 287, 240, 241, 239, 242, 197, 495,
	519, 0, 289, 312, 342, 156, 329, 493, 494, 496,
	523, 301, 525, 531, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 149, 138, 336, 355, 161,
	311, 314, 372, 297, 141, 353, 331, 244, 213, 214,
	139, 0, 140, 294, 180, 196, 174, 263, 0, 195,
	284, 350, 351, 172, 375, 150, 365, 143, 151, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 142,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 158, 0, 315, 341, 503, 288, 159, 194, 187,
	279, 254, 152, 205, 324, 217, 225, 293, 373, 267,
	300, 162, 359, 323, 184, 637, 647, 643, 645, 644,
	641, 642, 640, 639, 638, 649, 628, 629, 630, 631,
	632, 0, 0, 0, 634, 0, 614, 615, 0, 0,
	0, 489, 588, 589, 590, 591, 592, 598, 599, 603,
	604, 612, 611, 610, 613, 616, 618, 617, 619, 593,
	594, 596, 600, 601, 602, 605, 606, 609, 607, 608,
	633, 133, 144, 222, 0, 290, 192, 361, 0, 178,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 177,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 521, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 334, 348,
	349, 368, 369, 338, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 181, 556, 0, 0, 0, 220,
	0, 0, 170, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 636, 223, 0, 0, 535, 325, 248,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 557, 581,
	580, 583, 584, 585, 586, 0, 0, 540, 582, 587,
	620, 621, 0, 0, 0, 554, 572, 0, 635, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 499, 0, 0, 0, 0, 569, 570, 1494, 0,
	0, 0, 648, 0, 571, 0, 0, 566, 567, 568,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 148, 627, 0, 0, 211, 539, 0, 0, 646,
	285, 0, 332, 199, 221, 153, 130, 146, 164, 198,
	260, 0, 307, 595, 479, 0, 0, 0, 171, 0,
	299, 268, 357, 597, 0, 298, 224, 347, 0, 0,
	356, 0, 526, 366, 371, 492, 0, 486, 322, 183,
	179, 182, 0, 137, 500, 282, 176, 216, 0, 0,
	0, 168, 0, 0, 0, 321, 344, 134, 246, 345,
	370, 155, 339, 247, 253, 165, 167, 166, 147, 316,
	343, 160, 169, 326, 303, 333, 175, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 362, 505, 310, 309,
	0, 206, 0, 513, 480, 291, 517, 212, 136, 335,
	374, 154, 218, 340, 478, 193, 259, 173, 269, 270,
	190, 132, 287, 240, 241, 239, 242, 197, 495, 519,
	0, 289, 312, 342, 156, 329, 493, 494, 496, 523,
	301, 525, 531, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 149, 138, 336, 355, 161, 311,
	314, 372, 297, 141, 353, 331, 244, 213, 214, 139,
	0, 140, 294, 180, 196, 174, 263, 0, 195, 284,
	350, 351, 172, 375, 150, 365, 143, 151, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 142, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	158, 0, 315, 341, 503, 288, 159, 194, 187, 279,
	254, 152, 205, 324, 217, 225, 293, 373, 267, 300,
	162, 359, 323, 184, 637, 647, 643, 645, 644, 641,
	642, 640, 639, 638, 649, 628, 629, 630, 631, 632,
	0, 0, 0, 634, 0, 614, 615, 0, 0, 0,
	489, 588, 589, 590, 591, 592, 598, 599, 603, 604,
	612, 611, 610, 613, 616, 618, 617, 619, 593, 594,
	596, 600, 601, 602, 605, 606, 609, 607, 608, 633,
	133, 144, 222, 0, 290, 192, 361, 0, 178, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 177, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 521, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 334, 348, 349,
	368, 369, 338, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 181, 556, 0, 0, 0, 220, 0,
	0, 170, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 636, 223, 0, 0, 535, 325, 248, 0,
	0, 0, 0, 625, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 557, 581, 1541,
	583, 584, 585, 586, 0, 0, 540, 582, 587, 620,
	621, 0, 0, 0, 554, 572, 0, 635, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	499, 0, 0, 0, 0, 569, 570, 1494, 0, 0,
	0, 648, 0, 571, 0, 0, 566, 567, 568, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	148, 627, 0, 0, 211, 539, 0, 0, 646, 285,
	0, 332, 199, 221, 153, 130, 146, 164, 198, 260,
	0, 307, 595, 479, 0, 0, 0, 171, 0, 299,
	268, 357, 597, 0, 298, 224, 347, 0, 0, 356,
	0, 526, 366, 371, 492, 0, 486, 322, 183, 179,
	182, 0, 137, 500, 282, 176, 216, 0, 0, 0,
	168, 0, 0, 0, 321, 344, 134, 246, 345, 370,
	155, 339, 247, 253, 165, 167, 166, 147, 316, 343,
	160, 169, 326, 303, 333, 175, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 362, 505, 310, 309, 0,
	206, 0, 513, 480, 291, 517, 212, 136, 335, 374,
	154, 218, 340, 478, 193, 259, 173, 269, 270, 190,
	132, 287, 240, 241, 239, 242, 197, 495, 519, 0,
	289, 312, 342, 156, 329, 493, 494, 496, 523, 301,
	525, 531, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 149, 138, 336, 355, 161, 311, 314,
	372, 297, 141, 353, 331, 244, 213, 214, 139, 0,
	140, 294, 180, 196, 174, 263, 0, 195, 284, 350,
	351, 172, 375, 150, 365, 143, 151, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 142, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 158,
	0, 315, 341, 503, 288, 159, 194, 187, 279, 254,
	152, 205, 324, 217, 225, 293, 373, 267, 300, 162,
	359, 323, 184, 637, 647, 643, 645, 644, 641, 642,
	640, 639, 638, 649, 628, 629, 630, 631, 632, 0,
	0, 0, 634, 0, 614, 615, 0, 0, 0, 489,
	588, 589, 590, 591, 592, 598, 599, 603, 604, 612,
	611, 610, 613, 616, 618, 617, 619, 593, 594, 596,
	600, 601, 602, 605, 606, 609, 607, 608, 633, 133,
	144, 222, 0, 290, 192, 361, 0, 178, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 177, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 521, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 334, 348, 349, 368,
	369, 338, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 181, 556, 0, 0, 0, 220, 0, 0,
	170, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 636, 223, 0, 0, 535, 325, 248, 0, 0,
	0, 0, 625, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 557, 581, 1538, 583,
	584, 585, 586, 0, 0, 540, 582, 587, 620, 621,
	0, 0, 0, 554, 572, 0, 635, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 499,
	0, 0, 0, 0, 569, 570, 1494, 0, 0, 0,
	648, 0, 571, 0, 0, 566, 567, 568, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 148,
	627, 0, 0, 211, 539, 0, 0, 646, 285, 0,
	332, 199, 221, 153, 130, 146, 164, 198, 260, 0,
	307, 595, 479, 0, 0, 0, 171, 0, 299, 268,
	357, 597, 0, 298, 224, 347, 0, 0, 356, 0,
	526, 366, 371, 492, 0, 486, 322, 183, 179, 182,
	0, 137, 500, 282, 176, 216, 0, 0, 0, 168,
	0, 0, 0, 321, 344, 134, 246, 345, 370, 155,
	339, 247, 253, 165, 167, 166, 147, 316, 343, 160,
	169, 326, 303, 333, 175, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 362, 505, 310, 309, 0, 206,
	0, 513, 480, 291, 517, 212, 136, 335, 374, 154,
	218, 340, 478, 193, 259, 173, 269, 270, 190, 132,
	287, 240, 241, 239, 242, 197, 495, 519, 0, 289,
	312, 342, 156, 329, 493, 494, 496, 523, 301, 525,
	531, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 149, 138, 336, 355, 161, 311, 314, 372,
	297, 141, 353, 331, 244, 213, 214, 139, 0, 140,
	294, 180, 196, 174, 263, 0, 195, 284, 350, 351,
	172, 375, 150, 365, 143, 151, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 142, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 158, 0,
	315, 341, 503, 288, 159, 194, 187, 279, 254, 152,
	205, 324, 217, 225, 293, 373, 267, 300, 162, 359,
	323, 184, 637, 647, 643, 645, 644, 641, 642, 640,
	639, 638, 649, 628, 629, 630, 631, 632, 0, 0,
	0, 634, 0, 614, 615, 0, 0, 0, 489, 588,
	589, 590, 591, 592, 598, 599, 603, 604, 612, 611,
	610, 613, 616, 618, 617, 619, 593, 594, 596, 600,
	601, 602, 605, 606, 609, 607, 608, 633, 133, 144,
	222, 0, 290, 192, 361, 0, 178, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 177, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 521, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 334, 348, 349, 368, 369,
	338, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 181, 556, 0, 0, 0, 220, 0, 0, 170,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	636, 223, 0, 0, 535, 325, 248, 0, 0, 0,
	0, 625, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 1375, 0, 557, 581, 580, 583, 584,
	585, 586, 0, 0, 540, 582, 587, 620, 621, 0,
	0, 0, 554, 572, 0, 635, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 499, 0,
	0, 0, 0, 569, 570, 0, 0, 0, 0, 648,
	0, 571, 0, 0, 566, 567, 568, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 148, 627,
	0, 0, 211, 539, 0, 0, 646, 285, 0, 332,
	199, 221, 153, 130, 146, 164, 198, 260, 0, 307,
	595, 479, 0, 0, 0, 171, 0, 299, 268, 357,
	597, 0, 298, 224, 347, 0, 0, 356, 0, 526,
	366, 371, 492, 0, 486, 322, 183, 179, 182, 0,
	137, 500, 282, 176, 216, 0, 0, 0, 168, 0,
	0, 0, 321, 344, 134, 246, 345, 370, 155, 339,
	247, 253, 165, 167, 166, 147, 316, 343, 160, 169,
	326, 303, 333, 175, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 362, 505, 310, 309, 0, 206, 0,
	513, 480, 291, 517, 212, 136, 335, 374, 154, 218,
	340, 478, 193, 259, 173, 269, 270, 190, 132, 287,
	240, 241, 239, 242, 197, 495, 519, 0, 289, 312,
	342, 156, 329, 493, 494, 496, 523, 301, 525, 531,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 149, 138, 336, 355, 161, 311, 314, 372, 297,
	141, 353, 331, 244, 213, 214, 139, 0, 140, 294,
	180, 196, 174, 263, 0, 195, 284, 350, 351, 172,
	375, 150, 365, 143, 151, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 142, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 158, 0, 315,
	341, 503, 288, 159, 194, 187, 279, 254, 152, 205,
	324, 217, 225, 293, 373, 267, 300, 162, 359, 323,
	184, 637, 647, 643, 645, 644, 641, 642, 640, 639,
	638, 649, 628, 629, 630, 631, 632, 0, 0, 0,
	634, 0, 614, 615, 0, 0, 0, 489, 588, 589,
	590, 591, 592, 598, 599, 603, 604, 612, 611, 610,
	613, 616, 618, 617, 619, 593, 594, 596, 600, 601,
	602, 605, 606, 609, 607, 608, 633, 133, 144, 222,
	0, 290, 192, 361, 0, 178, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 177, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 521, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 334, 348, 349, 368, 369, 338,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	181, 556, 0, 0, 0, 220, 0, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 636,
	223, 0, 0, 535, 325, 248, 0, 0, 0, 0,
	625, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 557, 581, 580, 583, 584, 585,
	586, 0, 0, 540, 582, 587, 620, 621, 0, 0,
	0, 554, 572, 0, 635, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 499, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 648, 0,
	571, 0, 0, 566, 567, 568, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 148, 627, 0,
	0, 211, 539, 0, 0, 646, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 0, 307, 595,
	479, 0, 0, 0, 171, 0, 299, 268, 357, 597,
	0, 298, 224, 347, 0, 0, 356, 0, 526, 366,
	371, 492, 0, 486, 322, 183, 179, 182, 0, 137,
	500, 282, 176, 216, 0, 0, 0, 168, 0, 0,
	0, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 362, 505, 310, 309, 0, 206, 0, 513,
	480, 291, 517, 212, 136, 335, 374, 154, 218, 340,
	478, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 495, 519, 0, 289, 312, 342,
	156, 329, 493, 494, 496, 523, 301, 525, 531, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 158, 0, 315, 341,
	503, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	637, 647, 643, 645, 644, 641, 642, 640, 639, 638,
	649, 628, 629, 630, 631, 632, 0, 0, 0, 634,
	0, 614, 615, 0, 0, 0, 489, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 633, 133, 144, 222, 0,
	290, 192, 361, 0, 178, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 521, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 338, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 636, 223,
	0, 0, 535, 325, 248, 0, 0, 0, 0, 625,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 557, 581, 580, 583, 584, 585, 586,
	0, 0, 540, 582, 587, 620, 621, 0, 0, 0,
	0, 572, 0, 635, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 499, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 648, 0, 571,
	0, 0, 566, 567, 568, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 148, 627, 0, 0,
	211, 539, 0, 0, 646, 285, 0, 332, 199, 221,
	153, 130, 146, 164, 198, 260, 0, 307, 595, 479,
	0, 0, 0, 171, 0, 299, 268, 357, 597, 0,
	298, 224, 347, 0, 0, 356, 0, 526, 366, 371,
	492, 0, 486, 322, 183, 179, 182, 0, 137, 500,
	282, 176, 216, 0, 0, 0, 168, 0, 0, 0,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 362, 505, 310, 309, 0, 206, 0, 513, 480,
	291, 517, 212, 136, 335, 374, 154, 218, 340, 478,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 495, 519, 0, 289, 312, 342, 156,
	329, 493, 494, 496, 523, 301, 525, 531, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 158, 0, 315, 341, 503,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 637,
	647, 643, 645, 644, 641, 642, 640, 639, 638, 649,
	628, 629, 630, 631, 632, 1544, 1545, 1546, 634, 0,
	614, 615, 0, 0, 0, 489, 588, 589, 590, 591,
	592, 598, 599, 603, 604, 612, 611, 610, 613, 616,
	618, 617, 619, 593, 594, 596, 600, 601, 602, 605,
	606, 609, 607, 608, 633, 133, 144, 222, 0, 290,
	192, 361, 0, 178, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	521, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 338, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 636, 223, 0,
	0, 535, 325, 248, 0, 0, 0, 0, 625, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 557, 581, 580, 583, 584, 585, 586, 0,
	0, 540, 582, 587, 620, 621, 0, 0, 0, 0,
	572, 0, 635, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 499, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 648, 0, 571, 0,
	0, 566, 567, 568, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 148, 627, 0, 0, 211,
	539, 0, 0, 646, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 0, 307, 595, 479, 0,
	0, 0, 171, 0, 299, 268, 357, 597, 2892, 298,
	224, 347, 0, 0, 356, 0, 526, 366, 371, 492,
	0, 486, 322, 183, 179, 182, 0, 137, 500, 282,
	176, 216, 0, 0, 0, 168, 0, 0, 0, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	362, 505, 310, 309, 0, 206, 0, 513, 480, 291,
	517, 212, 136, 335, 374, 154, 218, 340, 478, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 495, 519, 0, 289, 312, 342, 156, 329,
	493, 494, 496, 523, 301, 525, 531, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 158, 0, 315, 341, 503, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 637, 647,
	643, 645, 644, 641, 642, 640, 639, 638, 649, 628,
	629, 630, 631, 632, 0, 0, 0, 634, 0, 614,
	615, 0, 0, 0, 489, 588, 589, 590, 591, 592,
	598, 599, 603, 604, 612, 611, 610, 613, 616, 618,
	617, 619, 593, 594, 596, 600, 601, 602, 605, 606,
	609, 607, 608, 633, 133, 144, 222, 0, 290, 192,
	361, 0, 178, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 521,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 338, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 636, 223, 0, 0,
	535, 325, 248, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1048,
	0, 557, 581, 580, 583, 584, 585, 586, 0, 0,
	540, 582, 587, 620, 621, 0, 0, 0, 0, 572,
	0, 635, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 499, 0, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 648, 0, 571, 0, 0,
	566, 567, 568, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 148, 627, 0, 0, 211, 539,
	0, 0, 646, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 0, 307, 595, 479, 0, 0,
	0, 171, 0, 299, 268, 357, 597, 0, 298, 224,
	347, 0, 0, 356, 0, 526, 366, 371, 492, 0,
	486, 322, 183, 179, 182, 0, 137, 500, 282, 176,
	216, 0, 0, 0, 168, 0, 0, 0, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 362,
	505, 310, 309, 0, 206, 0, 513, 480, 291, 517,
	212, 136, 335, 374, 154, 218, 340, 478, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 495, 519, 0, 289, 312, 342, 156, 329, 493,
	494, 496, 523, 301, 525, 531, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 158, 0, 315, 341, 503, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 637, 647, 643,
	645, 644, 641, 642, 640, 639, 638, 649, 628, 629,
	630, 631, 632, 0, 0, 0, 634, 0, 614, 615,
	0, 0, 0, 489, 588, 589, 590, 591, 592, 598,
	599, 603, 604, 612, 611, 610, 613, 616, 618, 617,
	619, 593, 594, 596, 600, 601, 602, 605, 606, 609,
	607, 608, 633, 133, 144, 222, 0, 290, 192, 361,
	0, 178, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 521, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 338, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 636, 223, 0, 0, 535,
	325, 248, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	557, 581, 580, 583, 584, 585, 586, 0, 0, 540,
	582, 587, 620, 621, 0, 0, 0, 0, 572, 0,
	635, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 499, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 648, 0, 571, 0, 0, 566,
	567, 568, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 148, 627, 0, 0, 211, 539, 0,
	0, 646, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 0, 307, 595, 479, 0, 0, 0,
	171, 0, 299, 268, 357, 597, 0, 298, 224, 347,
	0, 0, 356, 0, 526, 366, 371, 492, 0, 486,
	322, 183, 179, 182, 0, 137, 500, 282, 176, 216,
	0, 0, 0, 168, 0, 0, 0, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 362, 505,
	310, 309, 0, 206, 0, 513, 480, 291, 517, 212,
	136, 335, 374, 154, 218, 340, 478, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	495, 519, 0, 289, 312, 342, 156, 329, 493, 494,
	496, 523, 301, 525, 531, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 158, 0, 315, 341, 503, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 637, 647, 643, 645,
	644, 641, 642, 640, 639, 638, 649, 628, 629, 630,
	631, 632, 0, 0, 0, 634, 0, 614, 615, 0,
	0, 0, 489, 588, 589, 590, 591, 592, 598, 599,
	603, 604, 612, 611, 610, 613, 616, 618, 617, 619,
	593, 594, 596, 600, 601, 602, 605, 606, 609, 607,
	608, 633, 133, 144, 222, 0, 290, 192, 361, 0,
	178, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 521, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 338, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 264, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 170, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 535, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 1588, 0, 0, 0, 0, 0, 0, 128,
	0, 477, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 148, 0, 0, 0, 211, 539, 0, 1587,
	0, 285, 0, 332, 199, 221, 153, 130, 146, 164,
	198, 260, 0, 307, 497, 479, 0, 0, 0, 171,
	0, 299, 268, 357, 501, 0, 298, 224, 347, 0,
	0, 356, 0, 526, 366, 371, 492, 0, 486, 322,
	183, 179, 182, 0, 137, 500, 282, 176, 216, 0,
	0, 0, 168, 0, 0, 0, 321, 344, 134, 246,
	345, 370, 155, 339, 247, 253, 165, 167, 166, 147,
	316, 343, 160, 169, 326, 303, 333, 175, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 362, 505, 310,
	309, 0, 206, 0, 513, 480, 291, 517, 212, 136,
	335, 374, 154, 218, 340, 478, 193, 259, 173, 269,
	270, 190, 132, 287, 240, 241, 239, 242, 197, 495,
	519, 0, 289, 312, 342, 156, 329, 493, 494, 496,
	523, 301, 525, 531, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 149, 138, 336, 355, 161,
	311, 314, 372, 297, 141, 353, 331, 244, 213, 214,
	139, 0, 140, 294, 180, 196, 174, 263, 0, 195,
	284, 350, 351, 172, 375, 150, 365, 143, 151, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 142,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 158, 0, 315, 341, 503, 288, 159, 194, 187,
	279, 254, 152, 205, 324, 217, 225, 293, 373, 267,
	300, 162, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 0,
	0, 489, 482, 483, 484, 485, 487, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 488,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 133, 144, 222, 0, 290, 192, 361, 0, 178,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 177,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 521, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 334, 348,
	349, 368, 369, 338, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 264, 0, 0, 0, 0, 1584,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 170, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 535, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 1588, 0, 0, 0, 0, 0, 0, 128, 0,
	477, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 1582, 292, 313, 0,
	283, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 148, 0, 0, 0, 211, 539, 0, 1587, 0,
	285, 0, 332, 199, 221, 153, 130, 146, 164, 198,
	260, 0, 307, 497, 479, 0, 0, 0, 171, 0,
	299, 268, 357, 501, 0, 298, 224, 347, 0, 0,
	356, 0, 526, 366, 371, 492, 0, 486, 322, 183,
	179, 182, 0, 137, 500, 282, 176, 216, 0, 0,
	0, 168, 0, 0, 0, 321, 344, 134, 246, 345,
	370, 155, 339, 247, 253, 165, 167, 166, 147, 316,
	343, 160, 169, 326, 303, 333, 175, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 362, 505, 310, 309,
	0, 206, 0, 513, 480, 291, 517, 212, 136, 335,
	374, 154, 218, 340, 478, 193, 259, 173, 269, 270,
	190, 132, 287, 240, 241, 239, 242, 197, 495, 519,
	0, 289, 312, 342, 156, 329, 493, 494, 496, 523,
	301, 525, 531, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 149, 138, 336, 355, 161, 311,
	314, 372, 297, 141, 353, 331, 244, 213, 214, 139,
	0, 140, 294, 180, 196, 174, 263, 0, 195, 284,
	350, 351, 172, 375, 150, 365, 143, 151, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 142, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	158, 0, 315, 341, 503, 288, 159, 194, 187, 279,
	254, 152, 205, 324, 217, 225, 293, 373, 267, 300,
	162, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	489, 482, 483, 484, 485, 487, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 488, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	133, 144, 222, 0, 290, 192, 361, 0, 178, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 177, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 521, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 334, 348, 349,
	368, 369, 338, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 264, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 170, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 535, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 1074,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 1067, 1066, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	1068, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	148, 0, 0, 0, 211, 539, 0, 0, 0, 285,
	0, 332, 199, 221, 153, 130, 146, 164, 198, 260,
	0, 307, 497, 479, 0, 0, 0, 171, 0, 299,
	268, 357, 501, 0, 298, 224, 347, 0, 0, 356,
	0, 526, 366, 371, 492, 0, 486, 322, 183, 179,
	182, 0, 137, 500, 282, 176, 216, 0, 0, 0,
	168, 0, 0, 0, 321, 344, 134, 246, 345, 370,
	155, 339, 247, 253, 165, 167, 166, 147, 316, 343,
	160, 169, 326, 303, 333, 175, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 362, 505, 310, 309, 0,
	206, 0, 513, 480, 291, 517, 212, 136, 335, 374,
	154, 218, 340, 478, 193, 259, 173, 269, 270, 190,
	132, 287, 240, 241, 239, 242, 197, 495, 519, 0,
	289, 312, 342, 156, 329, 493, 494, 496, 523, 301,
	525, 531, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 149, 138, 336, 355, 161, 311, 314,
	372, 297, 141, 353, 331, 244, 213, 214, 139, 0,
	140, 294, 180, 196, 174, 263, 0, 195, 284, 350,
	351, 172, 375, 150, 365, 143, 151, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 142, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 158,
	0, 315, 341, 503, 288, 159, 194, 187, 279, 254,
	152, 205, 324, 217, 225, 293, 373, 267, 300, 162,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 489,
	482, 483, 484, 485, 487, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 488, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 133,
	144, 222, 0, 290, 192, 361, 0, 178, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 177, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 521, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 334, 348, 349, 368,
	369, 338, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	170, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 535, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 477, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 148,
	0, 0, 0, 211, 539, 0, 0, 0, 285, 0,
	332, 199, 221, 153, 130, 146, 164, 198, 260, 0,
	307, 497, 479, 0, 0, 0, 171, 0, 299, 268,
	357, 501, 0, 298, 224, 347, 0, 0, 356, 0,
	526, 366, 371, 492, 0, 486, 322, 183, 179, 182,
	0, 137, 500, 282, 176, 216, 0, 0, 0, 168,
	0, 0, 0, 321, 344, 134, 246, 345, 370, 155,
	339, 247, 253, 165, 167, 166, 147, 316, 343, 160,
	169, 326, 303, 333, 175, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 362, 505, 310, 309, 0, 206,
	0, 513, 480, 291, 517, 212, 136, 335, 374, 154,
	218, 340, 478, 193, 259, 173, 269, 270, 190, 132,
	287, 240, 241, 239, 242, 197, 495, 519, 0, 289,
	312, 342, 156, 329, 493, 494, 496, 523, 301, 525,
	531, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 149, 138, 336, 355, 161, 311, 314, 372,
	297, 141, 353, 331, 244, 213, 214, 139, 0, 140,
	294, 180, 196, 174, 263, 0, 195, 284, 350, 351,
	172, 375, 150, 365, 143, 151, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 142, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 158, 0,
	315, 341, 503, 288, 159, 194, 187, 279, 254, 152,
	205, 324, 217, 225, 293, 373, 267, 300, 162, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 533, 0, 0, 0, 489, 482,
	483, 484, 485, 487, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 488, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 133, 144,
	222, 0, 290, 192, 361, 0, 178, 0, 0, 0,
	0, 472, 131, 145, 157, 163, 177, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 521, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 334, 348, 349, 368, 369,
	338, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 1898, 0, 170,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 535, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 477, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 148, 0,
	0, 0, 211, 539, 0, 0, 0, 285, 0, 332,
	199, 221, 153, 130, 146, 164, 198, 260, 0, 307,
	497, 479, 0, 0, 0, 171, 0, 299, 268, 357,
	501, 0, 298, 224, 347, 0, 0, 356, 0, 526,
	366, 371, 492, 0, 486, 322, 183, 179, 182, 0,
	137, 500, 282, 176, 216, 0, 0, 0, 168, 0,
	0, 0, 321, 344, 134, 246, 345, 370, 155, 339,
	247, 253, 165, 167, 166, 147, 316, 343, 160, 169,
	326, 303, 333, 175, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 362, 505, 310, 309, 0, 206, 0,
	513, 480, 291, 517, 212, 136, 335, 374, 154, 218,
	340, 478, 193, 259, 173, 269, 270, 190, 132, 287,
	240, 241, 239, 242, 197, 495, 519, 0, 289, 312,
	342, 156, 329, 493, 494, 496, 523, 301, 525, 531,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 149, 138, 336, 355, 161, 311, 314, 372, 297,
	141, 353, 331, 244, 213, 214, 139, 0, 140, 294,
	180, 196, 174, 263, 0, 195, 284, 350, 351, 172,
	375, 150, 365, 143, 151, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 142, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 158, 0, 315,
	341, 503, 288, 159, 194, 187, 279, 254, 152, 205,
	324, 217, 225, 293, 373, 267, 300, 162, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 489, 482, 483,
	484, 485, 487, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 488, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 133, 144, 222,
	0, 290, 192, 361, 0, 178, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 177, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 521, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 334, 348, 349, 368, 369, 338,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 535, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 477, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 148, 0, 0,
	0, 211, 539, 0, 0, 0, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 0, 307, 497,
	479, 0, 0, 0, 171, 0, 299, 268, 357, 501,
	0, 298, 224, 347, 0, 0, 356, 0, 526, 366,
	371, 492, 0, 486, 322, 183, 179, 182, 0, 137,
	500, 282, 176, 216, 0, 0, 0, 168, 0, 0,
	0, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 362, 505, 310, 309, 0, 206, 0, 513,
	480, 291, 517, 212, 136, 335, 374, 154, 218, 340,
	478, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 495, 519, 0, 289, 312, 342,
	156, 329, 493, 494, 496, 523, 301, 525, 531, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 158, 0, 315, 341,
	503, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 489, 482, 483, 484,
	485, 487, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 488, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 133, 144, 222, 0,
	290, 192, 361, 0, 178, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 521, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 338, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 535, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1071, 0, 1074, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 148, 0, 0, 0,
	211, 539, 0, 0, 0, 285, 0, 332, 199, 221,
	153, 130, 146, 164, 198, 260, 0, 307, 497, 479,
	0, 0, 0, 171, 0, 299, 268, 357, 501, 0,
	298, 224, 347, 0, 0, 356, 0, 526, 366, 371,
	492, 0, 486, 322, 183, 179, 182, 0, 137, 500,
	282, 176, 216, 0, 0, 0, 168, 0, 0, 0,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 362, 505, 310, 309, 0, 206, 0, 513, 480,
	291, 517, 212, 136, 335, 374, 154, 218, 340, 478,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 495, 519, 0, 289, 312, 342, 156,
	329, 493, 494, 496, 523, 301, 525, 531, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 158, 0, 315, 341, 503,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 533, 0, 0, 0, 489, 482, 483, 484, 485,
	487, 506, 507, 511, 512, 529, 528, 527, 530, 534,
	537, 536, 538, 488, 490, 498, 508, 509, 510, 514,
	515, 524, 520, 522, 0, 133, 144, 222, 0, 290,
	192, 361, 0, 178, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	521, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 338, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 535, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 148, 0, 0, 0, 211,
	539, 0, 0, 0, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 0, 307, 497, 479, 0,
	0, 0, 171, 0, 299, 268, 357, 501, 0, 298,
	224, 347, 0, 0, 356, 0, 526, 366, 371, 492,
	0, 486, 322, 183, 179, 182, 0, 137, 500, 282,
	176, 216, 0, 0, 0, 168, 0, 0, 0, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	362, 505, 310, 309, 0, 206, 0, 513, 480, 291,
	517, 212, 136, 335, 374, 154, 218, 340, 478, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 495, 519, 0, 289, 312, 342, 156, 329,
	493, 494, 496, 523, 301, 525, 531, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 158, 0, 315, 341, 503, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	533, 0, 0, 0, 489, 482, 483, 484, 485, 487,
	506, 507, 511, 512, 529, 528, 527, 530, 534, 537,
	536, 538, 488, 490, 498, 508, 509, 510, 514, 515,
	524, 520, 522, 0, 133, 144, 222, 0, 290, 192,
	361, 0, 178, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 521,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 0, 0, 0, 135,
	0, 0, 516, 518, 446, 338, 440, 451, 434, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 457,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 441,
	0, 220, 0, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 432, 435, 0,
	0, 0, 249, 148, 0, 0, 439, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 443, 307, 0, 0, 447, 0, 0,
	171, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 450, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 179, 182, 0, 137, 0, 282, 176, 216,
	0, 0, 0, 168, 0, 0, 0, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	136, 335, 374, 154, 218, 340, 0, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 460, 312, 342, 156, 329, 436, 437,
	438, 444, 445, 448, 449, 452, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 158, 0, 315, 341, 0, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 222, 0, 290, 192, 361, 0,
	178, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 442, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 0, 0, 0, 135, 446, 338,
	440, 451, 434, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 426, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 441, 0, 220, 0, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 432, 435, 0, 0, 0, 249, 148, 0, 0,
	439, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 443, 307, 0,
	0, 447, 0, 0, 171, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 450, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 179, 182, 0, 137,
	0, 282, 176, 216, 0, 0, 0, 168, 0, 0,
	0, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 136, 335, 374, 154, 218, 340,
	0, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 429, 312, 342,
	156, 329, 436, 437, 438, 444, 445, 448, 449, 452,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 158, 0, 315, 341,
	0, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 222, 0,
	290, 192, 361, 0, 178, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 442, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 338, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 1084, 1083, 1093,
	1094, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1085, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 148, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	153, 130, 146, 164, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 171, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 179, 182, 0, 137, 0,
	282, 176, 216, 0, 0, 0, 168, 0, 0, 0,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 136, 335, 374, 154, 218, 340, 0,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 156,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 158, 0, 315, 341, 0,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 222, 0, 290,
	192, 361, 0, 178, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 338, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 2814, 0, 0, 0, 0, 0, 0, 181, 2812,
	0, 0, 0, 220, 0, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 148, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 171, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 179, 182, 0, 137, 0, 282,
	176, 216, 0, 0, 0, 168, 0, 0, 0, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 2813, 0, 291,
	0, 212, 136, 335, 374, 154, 218, 340, 0, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 156, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 158, 0, 315, 341, 0, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 222, 0, 290, 192,
	361, 0, 178, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 36, 338, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 1579, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 148, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 171, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 179, 182, 0, 137, 0, 282,
	176, 216, 0, 0, 0, 168, 0, 0, 0, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 136, 335, 374, 154, 218, 340, 0, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 156, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 158, 0, 315, 341, 0, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 222, 79, 290, 192,
	361, 0, 178, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 338, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 148, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 171, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 179, 182, 0, 137, 0, 282, 176,
	216, 0, 0, 0, 168, 0, 0, 0, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 136, 335, 374, 154, 218, 340, 0, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 156, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 158, 0, 315, 341, 0, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 222, 0, 290, 192, 361,
	0, 178, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 338, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 1222, 0, 0,
	0, 220, 0, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	689, 0, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 148, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	171, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 179, 182, 0, 137, 0, 282, 176, 216,
	0, 0, 0, 168, 0, 0, 0, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	136, 335, 374, 154, 218, 340, 0, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 156, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 158, 0, 315, 341, 0, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 222, 0, 290, 192, 361, 0,
	178, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 338, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 170, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 148, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 153, 130, 146, 164,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 171,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 179, 182, 0, 137, 0, 282, 176, 216, 0,
	0, 0, 168, 0, 0, 0, 321, 344, 134, 246,
	345, 370, 155, 339, 247, 253, 165, 167, 166, 147,
	316, 343, 160, 169, 326, 303, 333, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 136,
	335, 374, 154, 218, 340, 0, 193, 259, 173, 269,
	270, 190, 132, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 156, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 149, 138, 336, 355, 161,
	311, 314, 372, 297, 141, 353, 331, 244, 213, 214,
	139, 0, 140, 294, 180, 196, 174, 263, 0, 195,
	284, 350, 351, 172, 375, 150, 365, 143, 151, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 142,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 158, 0, 315, 341, 0, 288, 159, 194, 187,
	279, 254, 152, 205, 324, 217, 225, 293, 373, 267,
	300, 162, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 222, 0, 290, 192, 361, 0, 178,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 177,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 334, 348,
	349, 368, 369, 338, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 170, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 148, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 153, 130, 146, 164, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 171, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	179, 182, 0, 137, 0, 282, 176, 216, 0, 0,
	0, 168, 0, 0, 0, 321, 344, 134, 246, 345,
	370, 155, 339, 247, 253, 165, 167, 166, 147, 316,
	343, 160, 169, 326, 303, 333, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 136, 335,
	374, 154, 218, 340, 0, 193, 259, 173, 269, 270,
	190, 132, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 156, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 149, 138, 336, 355, 161, 311,
	314, 372, 297, 141, 353, 331, 244, 213, 214, 139,
	0, 140, 294, 180, 196, 174, 263, 0, 195, 284,
	350, 351, 172, 375, 150, 365, 143, 151, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 142, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 0, 0, 327, 360, 376,
	158, 0, 315, 341, 0, 288, 159, 194, 187, 279,
	254, 152, 205, 324, 217, 225, 293, 373, 267, 300,
	162, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 222, 0, 290, 192, 361, 0, 178, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 177, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 334, 348, 349,
	368, 369, 338, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 170, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 2265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	148, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 153, 130, 146, 164, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 171, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 179,
	182, 0, 137, 0, 282, 176, 216, 0, 0, 0,
	168, 0, 0, 0, 321, 344, 134, 246, 345, 370,
	155, 339, 247, 253, 165, 167, 166, 147, 316, 343,
	160, 169, 326, 303, 333, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 136, 335, 374,
	154, 218, 340, 0, 193, 259, 173, 269, 270, 190,
	132, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 156, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 149, 138, 336, 355, 161, 311, 314,
	372, 297, 141, 353, 331, 244, 213, 214, 139, 0,
	140, 294, 180, 196, 174, 263, 0, 195, 284, 350,
	351, 172, 375, 150, 365, 143, 151, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 142, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 158,
	0, 315, 341, 0, 288, 159, 194, 187, 279, 254,
	152, 205, 324, 217, 225, 293, 373, 267, 300, 162,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 222, 0, 290, 192, 361, 0, 178, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 177, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 334, 348, 349, 368,
	369, 338, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	170, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 148,
	0, 0, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 153, 130, 146, 164, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 171, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 179, 182,
	0, 137, 0, 282, 176, 216, 0, 0, 0, 168,
	0, 0, 0, 321, 344, 134, 246, 345, 370, 155,
	339, 247, 253, 165, 167, 166, 147, 316, 343, 160,
	169, 326, 303, 333, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 136, 335, 374, 154,
	218, 340, 0, 193, 259, 173, 269, 270, 190, 132,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 156, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 149, 138, 336, 355, 161, 311, 314, 372,
	297, 141, 353, 331, 244, 213, 214, 139, 0, 140,
	294, 180, 196, 174, 263, 0, 195, 284, 350, 351,
	172, 375, 150, 365, 143, 151, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 142, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 0, 0, 327, 360, 376, 158, 0,
	315, 341, 0, 288, 159, 194, 187, 279, 254, 152,
	205, 324, 217, 225, 293, 373, 267, 300, 162, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	222, 0, 290, 192, 361, 0, 178, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 177, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 0, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 334, 348, 349, 368, 369,
	338, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 170,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 148, 0,
	0, 0, 211, 0, 0, 0, 0, 285, 0, 332,
	199, 221, 153, 130, 146, 164, 198, 260, 0, 307,
	0, 0, 0, 0, 0, 171, 0, 299, 268, 357,
	0, 0, 298, 224, 347, 0, 0, 356, 0, 0,
	366, 371, 0, 0, 0, 322, 183, 179, 182, 0,
	137, 0, 282, 176, 216, 0, 0, 0, 168, 0,
	0, 0, 321, 344, 134, 246, 345, 370, 155, 339,
	247, 253, 165, 167, 166, 147, 316, 343, 160, 169,
	326, 303, 333, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 310, 309, 0, 206, 0,
	0, 0, 291, 0, 212, 136, 335, 374, 154, 218,
	340, 0, 193, 259, 173, 269, 270, 190, 132, 287,
	240, 241, 239, 242, 197, 0, 0, 0, 289, 312,
	342, 156, 329, 0, 0, 0, 0, 301, 0, 0,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 149, 138, 336, 355, 161, 311, 314, 372, 297,
	141, 353, 331, 244, 213, 214, 139, 0, 140, 294,
	180, 196, 174, 263, 0, 195, 284, 350, 351, 172,
	375, 150, 365, 143, 151, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 142, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 0, 0, 327, 360, 376, 158, 0, 315,
	341, 0, 288, 159, 194, 187, 279, 254, 152, 205,
	324, 217, 225, 293, 373, 267, 300, 162, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 222,
	0, 290, 192, 361, 0, 178, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 177, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 0, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 334, 348, 349, 368, 369, 338,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 1189,
	181, 0, 0, 0, 0, 220, 0, 0, 170, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 148, 0, 0,
	0, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 153, 130, 146, 164, 198, 260, 0, 307, 0,
	0, 0, 0, 0, 171, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 0, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 179, 182, 0, 137,
	0, 282, 176, 216, 0, 0, 0, 168, 0, 0,
	0, 321, 344, 134, 246, 345, 370, 155, 339, 247,
	253, 165, 167, 166, 147, 316, 343, 160, 169, 326,
	303, 333, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 136, 335, 374, 154, 218, 340,
	0, 193, 259, 173, 269, 270, 190, 132, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 289, 312, 342,
	156, 329, 0, 0, 0, 0, 301, 0, 0, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	149, 138, 336, 355, 161, 311, 314, 372, 297, 141,
	353, 331, 244, 213, 214, 139, 0, 140, 294, 180,
	196, 174, 263, 0, 195, 284, 350, 351, 172, 375,
	150, 365, 143, 151, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 142, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 158, 0, 315, 341,
	0, 288, 159, 194, 187, 279, 254, 152, 205, 324,
	217, 225, 293, 373, 267, 300, 162, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 222, 0,
	290, 192, 361, 0, 178, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 177, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 0, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 334, 348, 349, 368, 369, 338, 0,
	0, 135, 652, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 170, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 148, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	153, 130, 146, 164, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 171, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 179, 182, 0, 137, 0,
	282, 176, 216, 0, 0, 0, 168, 0, 0, 0,
	321, 344, 134, 246, 345, 370, 155, 339, 247, 253,
	165, 167, 166, 147, 316, 343, 160, 169, 326, 303,
	333, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 136, 335, 374, 154, 218, 340, 0,
	193, 259, 173, 269, 270, 190, 132, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 156,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 149,
	138, 336, 355, 161, 311, 314, 372, 297, 141, 353,
	331, 244, 213, 214, 139, 0, 140, 294, 180, 196,
	174, 263, 0, 195, 284, 350, 351, 172, 375, 150,
	365, 143, 151, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 142, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 158, 0, 315, 341, 0,
	288, 159, 194, 187, 279, 254, 152, 205, 324, 217,
	225, 293, 373, 267, 300, 162, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 222, 0, 290,
	192, 361, 0, 178, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 177, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 334, 348, 349, 368, 369, 338, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 170, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 148, 0, 125, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 153,
	130, 146, 164, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 171, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 179, 182, 0, 137, 0, 282,
	176, 216, 0, 0, 0, 168, 0, 0, 0, 321,
	344, 134, 246, 345, 370, 155, 339, 247, 253, 165,
	167, 166, 147, 316, 343, 160, 169, 326, 303, 333,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 136, 335, 374, 154, 218, 340, 0, 193,
	259, 173, 269, 270, 190, 132, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 156, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 149, 138,
	336, 355, 161, 311, 314, 372, 297, 141, 353, 331,
	244, 213, 214, 139, 0, 140, 294, 180, 196, 174,
	263, 0, 195, 284, 350, 351, 172, 375, 150, 365,
	143, 151, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 142, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 158, 0, 315, 341, 0, 288,
	159, 194, 187, 279, 254, 152, 205, 324, 217, 225,
	293, 373, 267, 300, 162, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 222, 0, 290, 192,
	361, 0, 178, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 177, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 334, 348, 349, 368, 369, 338, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 170, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 148, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 153, 130,
	146, 164, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 171, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 179, 182, 0, 137, 0, 282, 176,
	216, 0, 0, 0, 168, 0, 0, 0, 321, 344,
	134, 246, 345, 370, 155, 339, 247, 253, 165, 167,
	166, 147, 316, 343, 160, 169, 326, 303, 333, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 136, 335, 374, 154, 218, 340, 0, 193, 259,
	173, 269, 270, 190, 132, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 156, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 149, 138, 336,
	355, 161, 311, 314, 372, 297, 141, 353, 331, 244,
	213, 214, 139, 0, 140, 294, 180, 196, 174, 263,
	0, 195, 284, 350, 351, 172, 375, 150, 365, 143,
	151, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 142, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 158, 0, 315, 341, 0, 288, 159,
	194, 187, 279, 254, 152, 205, 324, 217, 225, 293,
	373, 267, 300, 162, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 222, 0, 290, 192, 361,
	0, 178, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 177, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	334, 348, 349, 368, 369, 338, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 170, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 148, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 153, 130, 146,
	164, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	171, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 179, 182, 0, 137, 0, 282, 176, 216,
	0, 0, 0, 168, 0, 0, 0, 321, 344, 134,
	246, 345, 370, 155, 339, 247, 253, 165, 167, 166,
	147, 316, 343, 160, 169, 326, 303, 333, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	136, 335, 374, 154, 218, 340, 0, 193, 259, 173,
	269, 270, 190, 132, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 156, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 149, 138, 336, 355,
	161, 311, 314, 372, 297, 141, 353, 331, 244, 213,
	214, 139, 0, 140, 294, 180, 196, 174, 263, 0,
	195, 284, 350, 351, 172, 375, 150, 365, 143, 151,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	142, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 158, 0, 315, 341, 0, 288, 159, 194,
	187, 279, 254, 152, 205, 324, 217, 225, 293, 373,
	267, 300, 162, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 222, 0, 290, 192, 361, 0,
	178, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	177, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 334,
	348, 349, 368, 369, 338, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 170, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 148, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 153, 130, 146, 164,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 171,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 179, 182, 0, 137, 0, 282, 176, 216, 0,
	0, 0, 168, 0, 0, 0, 321, 344, 134, 246,
	345, 370, 155, 339, 247, 253, 165, 167, 166, 147,
	316, 343, 160, 169, 326, 303, 333, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 136,
	335, 374, 154, 218, 340, 0, 193, 259, 173, 269,
	270, 190, 132, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 156, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 149, 138, 336, 355, 161,
	311, 314, 372, 297, 141, 353, 331, 244, 213, 214,
	139, 0, 140, 294, 180, 196, 174, 263, 0, 195,
	284, 350, 351, 172, 375, 150, 365, 143, 151, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 142,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 158, 0, 315, 341, 0, 288, 159, 194, 187,
	279, 254, 152, 205, 324, 217, 225, 293, 373, 267,
	300, 162, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 222, 0, 290, 192, 361, 0, 178,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 177,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 334, 348,
	349, 368, 369, 338, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 170, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 148, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 153, 130, 146, 164, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 171, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	179, 182, 0, 137, 0, 282, 176, 216, 0, 0,
	0, 168, 0, 0, 0, 321, 344, 134, 246, 345,
	370, 155, 339, 247, 253, 165, 167, 166, 147, 316,
	343, 160, 169, 326, 303, 333, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 136, 335,
	374, 154, 218, 340, 0, 193, 259, 173, 269, 270,
	190, 132, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 156, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 149, 138, 336, 355, 161, 311,
	314, 372, 297, 141, 353, 331, 244, 213, 214, 139,
	0, 140, 294, 180, 196, 174, 263, 0, 195, 284,
	350, 351, 172, 375, 150, 365, 143, 672, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 142, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 668, 234, 0, 0, 0, 327, 360, 376,
	158, 0, 315, 341, 0, 288, 159, 194, 187, 279,
	673, 671, 662, 663, 217, 225, 293, 373, 267, 300,
	162, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 222, 0, 290, 192, 361, 0, 178, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 177, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 669, 670, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 334, 348, 349,
	368, 369, 338, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 170, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	148, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 153, 130, 146, 164, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 171, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 179,
	182, 0, 137, 0, 282, 176, 216, 0, 0, 0,
	168, 0, 0, 0, 321, 344, 134, 246, 345, 370,
	155, 339, 247, 253, 165, 167, 166, 147, 316, 343,
	160, 169, 326, 303, 333, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 136, 335, 374,
	154, 218, 340, 0, 193, 259, 173, 269, 270, 190,
	132, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 156, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 149, 138, 336, 1216, 161, 311, 314,
	372, 297, 141, 353, 331, 244, 213, 214, 139, 0,
	140, 294, 180, 196, 174, 263, 0, 195, 284, 350,
	351, 172, 375, 150, 365, 143, 151, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 142, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 158,
	0, 315, 341, 0, 288, 159, 194, 187, 279, 254,
	152, 205, 324, 217, 225, 293, 373, 267, 300, 162,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 222, 0, 290, 192, 361, 0, 178, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 177, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 334, 348, 349, 368,
	369, 338, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	170, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 148,
	0, 0, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 153, 130, 146, 164, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 171, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 179, 182,
	0, 137, 0, 282, 176, 216, 0, 0, 0, 168,
	0, 0, 0, 321, 344, 134, 246, 345, 370, 155,
	339, 247, 253, 165, 167, 166, 147, 316, 343, 160,
	169, 326, 303, 333, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 136, 335, 374, 154,
	218, 340, 0, 193, 259, 173, 269, 270, 190, 132,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 156, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 149, 138, 336, 659, 161, 311, 314, 372,
	297, 141, 353, 331, 244, 213, 214, 139, 0, 140,
	294, 180, 196, 174, 263, 0, 195, 284, 350, 351,
	172, 375, 150, 365, 143, 672, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 142, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	668, 234, 0, 0, 0, 327, 360, 376, 158, 0,
	315, 341, 0, 288, 159, 194, 187, 279, 673, 671,
	662, 663, 217, 225, 293, 373, 267, 300, 162, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	222, 0, 290, 192, 361, 0, 178, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 177, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	669, 670, 286, 535, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 334, 348, 349, 368, 369,
	0, 0, 0, 135, 1925, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	535, 1232, 0, 0, 0, 0, 0, 0, 0, 497,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 1290, 0, 0, 0, 0, 0, 0, 526, 0,
	540, 492, 0, 486, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 513,
	480, 0, 517, 0, 0, 0, 0, 0, 0, 539,
	478, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 0, 0, 495, 519, 497, 479, 0, 0,
	0, 0, 493, 494, 496, 523, 501, 525, 531, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 492, 0,
	486, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 513, 480, 0, 517,
	0, 481, 0, 0, 0, 0, 0, 478, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 0, 525, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 489, 482, 483, 484,
	485, 487, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 488, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	0, 0, 0, 0, 2280, 0, 0, 503, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 518, 0, 499, 532, 533,
	0, 0, 0, 489, 482, 483, 484, 485, 487, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 488, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 539, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 2289, 0, 0, 0, 0, 0, 0, 526, 0,
	540, 492, 0, 486, 0, 0, 0, 0, 521, 0,
	500, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 518, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 513,
	480, 0, 517, 0, 0, 0, 0, 0, 0, 539,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 519, 497, 479, 0, 0,
	0, 0, 493, 494, 496, 523, 501, 525, 531, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 492, 0,
	486, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 513, 480, 0, 517,
	0, 481, 0, 0, 0, 0, 0, 478, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 0, 525, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 489, 482, 483, 484,
	485, 487, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 488, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	0, 0, 0, 0, 2287, 0, 0, 503, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 518, 0, 499, 532, 533,
	0, 0, 0, 489, 482, 483, 484, 485, 487, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 488, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 492, 0, 486, 0, 0, 0, 0, 521, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 59, 0, 0, 0, 513,
	480, 78, 517, 0, 0, 41, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 519, 0, 0, 0, 0,
	0, 0, 493, 494, 496, 523, 0, 525, 531, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2708, 0, 0,
	0, 0, 2920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 43, 74, 46, 45, 48, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 2709, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	59, 47, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 532, 533, 0, 0, 0, 489, 482, 483, 484,
	485, 487, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 488, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 81, 0,
	0, 0, 57, 58, 0, 2710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 2708, 0, 0, 0, 0, 2914, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 521, 0, 0, 0, 0, 68, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 41, 0, 0,
	0, 0, 0, 0, 516, 518, 0, 0, 43, 74,
	46, 45, 48, 0, 2711, 75, 0, 53, 54, 61,
	0, 62, 0, 2709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2708,
	0, 0, 0, 0, 2900, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 41, 0, 0, 57, 58, 0,
	2710, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 73, 66, 36, 67, 72, 39, 40,
	2709, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 81, 2889, 0, 78, 49, 77, 76, 41,
	0, 68, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2708, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 2711,
	75, 0, 53, 54, 61, 0, 62, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2710, 0, 0,
	0, 2708, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 66, 36, 67, 72, 39, 40, 2709, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 78, 49, 77, 76, 41, 0, 68, 0,
	47, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2709, 0, 0, 0, 2711, 75, 73, 53,
	54, 61, 0, 62, 81, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 57, 58, 0, 2710, 0, 0, 0, 2708, 0,
	0, 0, 0, 2836, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 57, 58, 0, 2710,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 2709,
	0, 0, 0, 2711, 75, 73, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	68, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2711, 75,
	0, 53, 54, 61, 79, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2711, 75, 73, 53, 54,
	61, 79, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79,
}

var yyPact = [...]int{
	4762, -1000, -317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1860, -1000, -1000, -1000, -1000,
	-1000, -1000, 1038, 289, -1000, 297, 188, 30080, 650, 3224,
	31078, -1000, -1000, -1000, 210, 547, 31078, 472, 461, 1274,
	1711, 1266, 54, -81, -83, 134, 23592, 23088, 46, -1000,
	1925, 1927, -1000, -1000, 578, 58, -1000, -1000, -1000, 20584,
	208, -1000, -1000, 1842, 1855, 1631, -1000, 13598, 578, 578,
	29581, 33074, -1000, 1921, 31078, 12099, -1000, 639, 612, -149,
	566, 566, 274, 566, 566, 648, -1000, 290, 952, -1000,
	-1000, -1000, -1000, 889, 31078, 26587, 573, 30579, 573, 573,
	573, 573, 573, 573, 573, 31078, -1000, 742, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31078, 1265, 1746,
	1022, 265, -1000, -1000, -1000, 954, -1000, 367, 364, 362,
	338, 165, 1040, 1838, -1000, 1510, 1842, 1842, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 378, 609, 255, 208, 876,
	1813, 1744, 1742, 1174, 1740, 522, 1739, 1552, -11, -1000,
	1264, 31078, -1000, -1000, 1145, 1141, 1605, 1445, 662, 1593,
	-1000, -1000, 311, 517, 1544, 445, 1544, 1544, 1544, 1544,
	1544, -87, 1544, 1544, 1544, 109, 1544, 153, 1544, 1544,
	1544, 1544, 1544, 1281, -1000, -1000, -1000, 414, 1443, 1507,
	1592, 550, -1000, -1000, -1000, -1000, 1571, 1824, 643, -1000,
	-110, 1481, 21582, -1000, 1510, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1296, 1747, 1044, 16592, 1676, -1000, -1000, 1024, 1903,
	-1000, 20085, 728, -1000, 16592, 3651, 1510, -1000, -1000, 1510,
	-1000, -1000, -1000, 672, -1000, -1000, 18588, 18588, 18588, 18588,
	18588, 18588, 18588, 18588, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
	-1000, -1000, 1510, -1000, 13099, 1510, 1510, 1510, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 16592, 1510, 1510, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
	29082, 27086, 31078, 1489, 1459, -1000, -1000, 726, 1488, -112,
	32575, -1000, -1000, -1000, -1000, 31577, 26088, 868, -1000, -1000,
	-1000, -1000, 1738, -1000, -1000, 725, -1000, 1860, -1000, -1000,
	1414, 397, -1000, 2943, 33619, -1000, -1000, -1000, 1551, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30579, 31078,
	259, 1261, 988, 1256, 31577, 31577, -1000, 257, 26587, 26587,
	566, 278, 26587, 248, 1486, 604, 1484, 603, 1277, 31078,
	1787, 1591, 31078, 1254, 1253, 31577, 31577, 26587, 26587, -1000,
	11590, -1000, -1000, 1022, -1000, 1201, 16592, 566, 566, 31078,
	31078, 31078, 31078, 31078, -1000, -1000, 1022, 1022, 1022, 1022,
	928, 1899, 928, -1000, 928, -1000, -1000, 16592, -1000, 18588,
	25589, 771, -1000, -1000, -1000, 1252, 366, -1000, -1000, -1000,
	-1000, -1000, -1000, 1251, -1000, 1719, 522, 522, -1000, 1200,
	522, 1475, -1000, 853, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 522, -1000, 16093, -306,
	-1000, -1000, 1483, -1000, 318, -1000, -1000, 538, 538, 224,
	26587, 26587, 26587, -1000, 1544, 30579, -1000, 1544, 1544, 1544,
	-89, 1544, 1544, -1000, -1000, 1544, -1000, -1000, -1000, -1000,
	-1000, 1544, -1000, -1000, -1000, 1544, 1544, -1000, 1544, 1544,
	-1000, -1000, -1000, -1000, -1000, 26587, 538, 193, 1482, 538,
	26587, 26587, -1000, 90, 89, 81, 80, -1000, -1000, -1000,
	-1000, 79, 78, -1000, -1000, 1631, -1000, -1000, 208, -1000,
	-1000, 31078, -63, 21582, 1481, 1821, 10063, -1000, -1000, -1000,
	1915, 828, 1504, -1000, -1000, 1479, -1000, 1003, 723, 1059,
	1651, -1000, -1000, -1000, 31078, -1000, 16592, 16592, 1096, -1000,
	22081, -1000, -1000, -1000, -1000, 9554, 836, 18588, 1064, 914,
	18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588,
	18588, 18588, 18588, 18588, 18588, 1041, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1241, -1000, 208, 1205, 1205, 755,
	755, 755, 755, 755, 755, 755, 24091, 1819, 14596, 14596,
	14596, 1819, 1296, 1296, 14596, 14596, 14596, 14596, 14596, 14596,
	14596, 14596, 1819, 1819, 14596, 1296, 1296, 1296, 1296, 14596,
	14596, 14596, 14596, 30579, 30579, 1819, 14596, 14596, 14596, 1819,
	1296, 1410, 885, 13099, 14596, 14596, 1296, 16592, 16592, 15594,
	15095, 17091, 14596, 1819, 933, 885, 31577, -1000, -1000, 18089,
	-1000, -1000, -1000, -1000, -1000, 1296, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14596, 14596, 14596, 14596, 811, 31078,
	-1000, 1478, 1585, -1000, -1000, -1000, 1820, 25090, -1000, 19586,
	-1000, 1510, 811, 1339, 27086, 31078, -1000, -1000, 27086, 31078,
	9045, 32076, 1465, -1000, -106, -93, -112, -1000, -1000, 751,
	-1000, -1000, -1000, 12599, -1000, 10572, 1842, 1631, 6500, 11081,
	-1000, 33619, 1551, -1000, -38, -1000, -1000, -1000, 1531, -1000,
	1531, 330, 23, 1531, 1531, 1531, 1531, 1531, 16, 16,
	16, 16, 17, -1000, -1000, -1000, -1000, -1000, 1550, 1548,
	-1000, 1531, 1531, 1531, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1536, 356, 1533, 1533, 1533, 1533, 1533,
	407, 407, -1000, 16592, 1492, 1815, 611, 278, 1770, 1785,
	1770, 349, -1000, 716, 1547, -1000, 715, 295, 1476, -1000,
	200, 1333, 31078, -1000, -1000, -1000, -1000, -1000, 31078, 31078,
	26587, 26587, 26587, 641, -1000, 31078, 1477, -1000, -1000, -1000,
	-1000, -1000, 1450, -1000, 1333, -1000, -1000, -1000, -1000, -1000,
	885, 1240, 1239, 1813, -1000, -1000, -1000, 932, -1000, -1000,
	-1000, -1000, 1022, 31078, 31078, 31078, 1813, 1022, 885, 655,
	1508, 1510, 1296, -1000, -1000, 1238, -1000, 18588, 1475, 1475,
	-1000, 1475, 522, 1205, 1475, -1000, 1408, 1781, 1199, 31078,
	-1000, 21582, -12, -1000, -128, 28583, -1000, -1000, -1000, 28583,
	-1000, 109, 212, -1000, 600, -1000, 1405, -1000, -1000, -1000,
	-1000, 1544, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 28583, 143, 192, 28583, 1450, 1898, -1000, -1000, -1000,
	-1000, 1834, -1000, 1819, 1296, 333, -1000, -1000, -1000, 1510,
	1381, 699, -1000, 1643, 1044, 1044, 16592, -1000, -1000, -1000,
	10572, 1836, -1000, 1659, 1658, 1623, -1000, -1000, 836, 883,
	-1000, -1000, 1056, -1000, -1000, -1000, -1000, 698, 1510, -1000,
	3667, -1000, -1000, -1000, -1000, 1064, 18588, 18588, 18588, 655,
	3667, 3568, 1037, 1506, 755, 871, 871, 772, 772, 772,
	772, 772, 1048, 1048, -1000, -1000, -1000, 1296, -1000, -1000,
	-1000, 14596, 1399, -1000, -1000, 885, 696, 1399, 1399, 14596,
	-166, -166, 1399, 1296, 1399, 1399, 1399, 1399, 1296, 1399,
	14596, 14596, 1399, -166, -166, -166, -166, 1399, 1399, 1399,
	1399, 1474, 1473, 14596, 1399, 1399, 1399, 14596, -1000, 16592,
	-1000, 1296, 1399, 1399, -1000, 1007, 1009, 789, 1896, 1399,
	781, 1895, 1399, 2064, 18588, 18588, 18588, 1399, 14596, 976,
	-1000, 16592, 1296, -1000, 837, 1399, 1296, 1467, 1399, 1399,
	209, 1510, -1000, 10572, 27086, 27086, 27086, 27086, 27086, -1000,
	1626, 1625, -1000, 1618, 1616, 1632, 21582, 1403, 1296, 325,
	25090, -1000, 1510, -1000, 21083, 703, 638, 622, 621, 14596,
	1874, 27086, 1491, -1000, 1491, -1000, 680, -1000, -1000, 31577,
	-112, -54, -1000, -1000, 1465, -1000, 1143, -1000, -1000, 885,
	-1000, 679, 1747, 1819, 1464, 5991, -1000, -1000, -1000, -1000,
	397, -1000, -1000, -1000, 1543, 33512, -1000, 1684, 720, 720,
	719, 1218, 1678, -1000, -1000, 163, -47, -1000, -1000, 1139,
	16, 16, 1531, 1531, 329, 1531, -1000, 16, -1000, -1000,
	-1000, 751, 1737, 751, 751, 751, 751, 16, 1198, 1198,
	-1000, -1000, -1000, -1000, 1137, -1000, 1536, -1000, 1129, -1000,
	-1000, -1000, -1000, -1000, -1000, 997, 1590, 30579, -1000, 31078,
	-1000, 1770, -1000, -1000, -1000, 127, -1000, -1000, -1000, 1883,
	-1000, -1000, 30579, 645, 30579, -1000, -1000, 118, 26587, 198,
	335, 221, -1000, 599, -1000, 584, -1000, -1000, -1000, -1000,
	-1000, -1000, 31078, 26587, -1000, -1000, -1000, 1874, 1237, 1236,
	-1000, -1000, -1000, 928, 1022, -1000, -1000, 18588, 26587, -1000,
	352, -1000, 3667, -1000, -1000, -1000, 811, 642, -1000, -1000,
	-50, -1000, -1000, 583, 676, 675, 582, -1000, 125, 26587,
	-1000, 30579, -1000, 1894, 1890, 141, 1884, 26587, -1000, 62,
	1651, -1000, 1460, -1000, 721, 711, 761, 421, 421, -1000,
	844, 421, 1726, 1725, 800, -1000, 222, -1000, 10063, 10063,
	1641, -1000, -1000, -1000, 31078, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8536, 14596, -1000, 655, 3667, 3259,
	-1000, 18588, -1000, 1399, 14596, -166, 8027, -166, -166, 1399,
	-1000, 28084, -1000, -1000, -166, -1000, -166, -166, -166, -166,
	-166, 1399, 1399, -166, -1000, -1000, -1000, -1000, -166, -166,
	-166, -166, 18588, 18588, 1399, -166, -166, -166, 1296, 885,
	-1000, -1000, -1000, 219, 1041, 219, 18588, 18588, -1000, 18588,
	18588, -1000, -1000, 18588, 3528, 1665, 1119, -206, 1466, 872,
	-1000, 16592, 993, -1000, -1000, -1000, -1000, -1000, -1000, 1589,
	10572, 1510, 7009, -1000, 30579, 1503, -1000, 852, 850, 1585,
	1541, 1588, 1301, -1000, -1000, -1000, -1000, 1619, -1000, 1617,
	-1000, -1000, 1517, -1000, -1000, 1455, 1510, 30579, 18588, 703,
	-1000, 1510, 1510, 1510, 1296, 1860, 16592, 1491, -1000, -1000,
	770, -1000, -1000, -118, -134, -1000, -1000, -1000, 10063, -1000,
	6500, -1000, 6500, -1000, 22580, 562, 1666, 415, -1000, 1218,
	-1000, -1000, 1218, -1000, 1218, -1000, -1000, -1000, 1535, -1000,
	1018, -1000, -1000, -1000, -1000, -1000, 1510, -309, 18588, 1914,
	-1000, 1683, -1000, 1682, 1680, 1196, -1000, -1000, 1330, 751,
	751, 16, -1000, -1000, 1531, -1000, 751, -1000, 816, -1000,
	-1000, -1000, -1000, 751, 1393, -1000, 1391, 1452, -1000, 1383,
	116, 31078, -1000, -1000, 1814, -1000, -1000, -1000, 1735, 844,
	844, 844, 1587, -1000, -1000, -1000, -1000, 1320, 1451, -1000,
	2943, 1235, 1233, 1232, -1000, -226, 315, -1000, 26587, 161,
	200, 454, 1229, 31078, 26587, -1000, -1000, -1000, -1000, -1000,
	1813, -1000, 3667, 1333, -1000, -1000, 16, 31078, -1000, 26587,
	765, 27585, 26587, 139, 174, -1000, 26587, 26587, 1876, 26587,
	1450, 1195, 1623, 333, 4848, 1218, 739, -1000, -1000, 429,
	-1000, 4436, 1678, 1228, 34312, 34019, 30579, 1674, 1672, 1225,
	31078, 30579, -1000, -1000, 33912, 1222, 16592, -1000, 30579, -1000,
	-1000, 30579, 669, -1000, -1000, -1000, 1444, 13598, -1000, -1000,
	1296, -1000, 18588, 3667, -166, -1000, -1000, -1000, -1000, 664,
	-1000, -1000, -166, -1000, -1000, 1221, -1000, -1000, -1000, -1000,
	-1000, -1000, -166, -166, -1000, -1000, -1000, -1000, -1000, 3394,
	1372, -166, -1000, -1000, -1000, -1000, 1296, 1531, 1531, -1000,
	1531, 1533, -1000, 1531, 45, 1531, 41, 1296, 1296, 3201,
	3105, 3040, 2902, 837, 18588, 18588, 18588, 1510, -160, -1000,
	885, 16592, -1000, 1774, 1438, 1447, -1000, -1000, 14097, 1296,
	1657, 1381, -1000, 20584, 1365, -1000, 1860, 10572, 16592, 16592,
	-1000, -1000, 16592, 1532, -1000, 16592, -1000, -1000, -1000, -1000,
	30579, 324, -1000, 16592, 1365, 859, -1000, 30579, 30579, 30579,
	-1000, 1842, 885, -1000, -1000, -1000, -1000, 5991, -1000, 1359,
	-1000, 1531, 1531, 1670, -1000, 720, -1000, -1000, -1000, -1000,
	30579, -1000, 18588, 1812, 3667, -82, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 751, -1000, -1000, -1000, -1000, -1000, 16,
	1193, 16, 1128, -1000, 1125, -1000, -1000, -257, 1529, 208,
	-1000, 844, 814, 807, 1192, 31078, 178, 645, -1000, 2943,
	2943, 2943, 160, 152, -1000, 1012, -1000, -1000, -1000, 1189,
	1188, 1186, 1333, 201, 1005, 176, -1000, 1816, -1000, -1000,
	1022, -31, -1000, 174, -1000, -1000, -1000, 174, -1000, -1000,
	190, 1450, 1450, 26587, 1450, -1000, -1000, -1000, 33912, 396,
	2943, 2943, 1492, 720, 1668, 415, -1000, -1000, -1000, -1000,
	-1000, -1000, 1220, -1000, 706, -1000, 581, 396, 33912, 885,
	758, 1780, 10063, 1868, 27086, -1000, -1000, -1000, 3667, -1000,
	7518, -1000, 793, -1000, -1000, -1000, 18588, 18588, -1000, -1000,
	-1000, 332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18588, 18588, 18588, 18588, -1000, 837, 837, 837, 18588, 1296,
	1185, 885, 1662, -1000, 1510, -1000, -1000, 1510, 211, -1000,
	30579, 1842, -1000, 885, 885, 885, 30579, 885, 1357, -1000,
	1510, 19087, -1000, 21582, 1355, 1355, 1355, -1000, 647, 22580,
	1778, 1778, -1000, 1218, 1343, 837, 1510, -1000, 1510, 1510,
	-1000, 751, -1000, 751, 1314, 1311, -1000, 22580, -1000, -1000,
	806, -1000, -1000, -1000, -1000, -1000, 1832, -1000, 178, -1000,
	1183, 277, 260, -1000, 276, 273, 271, 263, 256, -1000,
	-1000, -1000, -1000, 438, 160, -1000, -39, 1115, 840, 1724,
	152, -1000, 1109, 1107, 1102, 1077, 440, -1000, -1000, -1000,
	-1000, 215, 200, -1000, 451, 1181, -1000, 1701, 1697, 1811,
	1811, 138, 1450, 1495, 1299, -1000, -1000, 1219, -1000, -1000,
	1528, 1218, 1527, -1000, 1217, -1000, -1000, 30579, -1000, 396,
	1769, 1767, 1510, -1000, 1864, 1853, 1491, 13598, -1000, -1000,
	1860, 1852, 837, 837, -1000, -1000, 837, 837, 837, 837,
	-1000, -1000, -1000, 175, -1000, -1000, 1913, -1000, 1447, 1510,
	-1000, 208, -1000, -1000, 1335, -1000, 30579, -1000, -1000, 703,
	-1000, -1000, -1000, 647, -1000, 1214, 844, 1180, -1000, -1000,
	-1000, -1000, 389, -312, 18588, -1000, -1000, -1000, -1000, 1329,
	-1000, 208, -1000, -1000, 344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1706, 1705, 292, -1000, 1179, 1155, -1000, 424,
	1124, 722, -173, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 442, 1213, -1000, 167, -1000, -1000,
	563, 1687, 1689, 1851, -1000, 26587, -1000, -1000, 27086, -1000,
	-1000, 163, 163, 22580, 1492, 22580, -1000, -1000, -1000, 18588,
	-1000, 787, -170, 16592, 16592, 1868, -1000, 818, 16592, -1000,
	-1000, -1000, -1000, -1000, -1000, 1296, 191, -232, 10572, 1447,
	1296, -1000, -1000, -1000, -1000, -1000, 1076, -1000, 31078, -1000,
	-1000, -1000, 837, 647, -1000, 307, 34929, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1060, -1000, -1000, 1120, 420,
	164, -1000, 1800, -1000, 1517, 1034, 1697, 1847, 1693, 1691,
	-1000, 1154, -228, 1491, 1327, 1514, 1325, 3667, 1310, -1000,
	30579, -1000, 30579, -1000, 885, 1371, -1000, 885, 1864, -1000,
	1296, 246, 246, 1362, -1000, 1640, -224, -237, 1349, -1000,
	-1000, 1512, -312, -1000, 647, -1000, 299, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16592, 16592,
	5482, 34929, 155, -1000, 145, -1000, -1000, -1000, 1150, -1000,
	1699, -1000, 1149, -1000, 1845, 1844, -1000, 197, 1868, 647,
	22580, 647, -1000, 787, 1656, 1345, -1000, 1790, 16592, -170,
	-1000, -1000, 247, -1000, 813, 305, 791, -1000, 1205, -1000,
	-1000, 1639, -1000, 30579, -1000, -1000, 1204, 1122, -1000, 926,
	936, 223, 216, 3693, -1000, -1000, -1000, -1000, -318, -1000,
	-1000, -1000, -1000, -1000, -1000, 1148, 1144, 24590, 1864, -1000,
	1302, -1000, -1000, 350, 30579, 1510, -1000, -1000, 1001, -1000,
	-1000, -1000, -1000, -1000, 30579, -229, 1285, -1000, -1000, -1000,
	1036, -1000, 16592, 34929, 1831, 1830, 1829, 1751, 10063, 35026,
	-1000, -1000, -1000, -1000, 130, 1333, -170, 647, 361, -1000,
	-1000, 247, -1000, -235, 1586, 365, 983, 34929, -1000, 922,
	-319, 480, 208, 633, 18588, -1000, -1000, -1000, 26587, -1000,
	-1000, 1510, -1000, -238, 1583, 1572, 1889, -1000, -1000, -1000,
	-1000, -1000, -1000, 34929, -1000, -320, 34929, 3333, -1000, -1000,
	-1000, 34884, -1000, -1000, -1000, -1000, 214, -1000, -1000, 3667,
	1333, 17590, -1000, -1000, 1912, -1000, 1905, 688, 688, -1000,
	-323, 34787, -324, 553, 34929, 1030, -1000, 16592, -1000, 633,
	-1000, 837, 1296, -1000, -1000, -1000, 401, 1113, -1000, 34690,
	962, 34929, -1000, -325, 435, 34929, -1000, 912, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34535, -1000, -326, 34929,
	431, 5155, -330, -1000, 422, 34929, -1000,
}

var yyPgo = [...]int{
	0, 2302, 2300, 79, 2297, 210, 2292, 2291, 2290, 23,
	19, 17, 29, 2289, 2072, 2063, 2047, 2041, 2033, 2288,
	7, 2287, 2285, 2027, 2284, 2283, 2024, 2019, 2009, 2007,
	2282, 2279, 2278, 2005, 1998, 1996, 10, 2277, 25, 2276,
	4, 150, 169, 2274, 2, 2270, 2269, 8, 2268, 2267,
	1994, 2266, 2265, 2264, 103, 2263, 1991, 1988, 2262, 1977,
	1974, 2261, 2260, 1972, 1938, 1936, 2259, 185, 2258, 2256,
	2255, 181, 102, 165, 2252, 2251, 2250, 114, 86, 2056,
	122, 51, 121, 463, 2248, 28, 59, 203, 2247, 143,
	2246, 155, 2244, 164, 2242, 149, 97, 107, 2241, 2239,
	183, 2238, 2237, 2236, 142, 2235, 2233, 176, 145, 2232,
	2229, 168, 2228, 70, 173, 49, 75, 2227, 2226, 2224,
	2223, 2221, 15, 875, 2216, 110, 158, 2215, 2214, 92,
	2213, 2212, 187, 2211, 2208, 2207, 148, 43, 2205, 2202,
	53, 2198, 104, 73, 2197, 46, 2196, 146, 2195, 2193,
	34, 33, 2179, 74, 2178, 54, 2177, 154, 247, 853,
	2176, 22, 26, 16, 2174, 38, 12, 3, 47, 27,
	63, 71, 133, 108, 2172, 39, 44, 127, 106, 100,
	42, 2171, 157, 2169, 96, 161, 151, 144, 153, 2168,
	2167, 2166, 1103, 2165, 141, 94, 2163, 129, 1197, 170,
	115, 2160, 95, 2158, 2156, 2155, 2153, 2151, 99, 111,
	2150, 2149, 174, 178, 182, 45, 21, 285, 1925, 35,
	163, 2144, 50, 2143, 2141, 2137, 3015, 113, 84, 126,
	2136, 109, 31, 56, 2135, 2130, 2128, 2126, 2124, 2123,
	175, 2122, 2121, 2118, 2117, 287, 172, 2116, 140, 135,
	128, 2115, 156, 40, 2114, 2113, 130, 98, 2112, 2111,
	2110, 2109, 134, 83, 162, 2108, 120, 119, 123, 2103,
	90, 2102, 2101, 52, 48, 2100, 2099, 2097, 105, 93,
	2096, 68, 37, 36, 64, 13, 2095, 2094, 85, 118,
	2089, 32, 2088, 5, 6, 11, 2087, 2086, 2085, 2084,
	2081, 2080, 2079, 91, 2077, 2074, 60, 2070, 2065, 2060,
	41, 2057, 2055, 2052, 152, 125, 61, 166, 124, 14,
	2050, 2031, 9, 2029, 132, 2022, 58, 2014, 57, 2012,
	2002, 62, 2000, 1986, 65, 1984, 1979, 167, 1634, 2544,
	1950, 171, 159, 55, 87, 1948, 1943, 0, 968, 180,
	179, 1941, 1934,
}

var yyR1 = [...]int{
	0, 346, 346, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 349, 349, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	320, 320, 329, 329, 329, 330, 330, 328, 328, 328,
	328, 328, 332, 332, 333, 333, 331, 331, 331, 331,
	335, 335, 336, 336, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 323, 323,
	323, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 338, 338, 339, 339, 340, 340, 341, 341,
	341, 341, 342, 342, 342, 342, 342, 343, 343, 343,
	343, 343, 343, 343, 344, 344, 345, 345, 2, 301,
	301, 302, 302, 303, 303, 303, 303, 304, 304, 305,
	305, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 24, 214, 214, 211, 211, 211, 212, 212, 213,
	213, 213, 322, 322, 322, 316, 316, 316, 318, 318,
	317, 317, 317, 319, 319, 324, 324, 324, 324, 324,
	326, 326, 326, 326, 326, 326, 327, 327, 327, 325,
	325, 48, 48, 49, 49, 49, 156, 156, 156, 13,
	13, 13, 13, 13, 19, 21, 21, 37, 37, 38,
	22, 22, 22, 22, 39, 39, 40, 25, 25, 25,
	25, 25, 25, 46, 46, 46, 45, 45, 44, 44,
	44, 44, 44, 44, 23, 23, 23, 23, 47, 47,
	42, 42, 41, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 26, 26, 26, 26, 26,
	26, 18, 300, 300, 300, 36, 36, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 52, 275, 276,
	276, 276, 276, 276, 276, 276, 276, 263, 263, 264,
	253, 253, 253, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 232, 232, 232, 232, 236, 236, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 235,
	235, 235, 235, 235, 235, 235, 235, 237, 237, 237,
	237, 237, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 239, 239, 239,
	239, 239, 239, 239, 239, 262, 262, 240, 240, 256,
	256, 257, 257, 257, 254, 254, 255, 255, 243, 244,
	258, 245, 245, 245, 246, 246, 246, 247, 247, 252,
	252, 251, 251, 251, 251, 251, 251, 248, 248, 248,
	248, 249, 249, 250, 261, 261, 261, 261, 261, 241,
	35, 286, 286, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 287, 287, 204, 204, 205, 205, 265,
	265, 285, 285, 284, 284, 283, 283, 283, 274, 274,
	280, 280, 280, 280, 280, 280, 280, 280, 269, 269,
	269, 268, 268, 270, 270, 273, 273, 282, 282, 281,
	281, 266, 266, 266, 288, 288, 288, 288, 288, 267,
	267, 267, 267, 289, 271, 271, 272, 272, 272, 294,
	295, 293, 293, 293, 293, 293, 119, 119, 119, 277,
	277, 277, 278, 278, 278, 279, 279, 279, 298, 298,
	297, 297, 50, 51, 55, 55, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 155, 155, 155, 209, 209, 292, 290, 290,
	291, 291, 15, 15, 53, 53, 321, 321, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 296, 296, 296,
	17, 17, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 84, 196,
	196, 195, 195, 194, 194, 194, 197, 197, 197, 230,
	230, 230, 58, 58, 62, 62, 65, 65, 65, 63,
	64, 27, 28, 28, 28, 28, 29, 210, 210, 60,
	60, 61, 61, 61, 61, 76, 76, 351, 351, 59,
	352, 67, 68, 68, 69, 69, 69, 200, 200, 73,
	73, 73, 71, 71, 71, 72, 72, 78, 78, 82,
	82, 82, 82, 81, 81, 81, 81, 158, 158, 163,
	223, 223, 139, 139, 159, 159, 164, 164, 164, 165,
	165, 166, 166, 166, 166, 166, 161, 161, 160, 160,
	162, 127, 127, 221, 221, 221, 220, 220, 220, 220,
	86, 86, 89, 89, 91, 91, 91, 91, 91, 94,
	141, 141, 112, 112, 113, 113, 113, 113, 113, 125,
	125, 176, 176, 175, 175, 178, 178, 90, 92, 92,
	92, 92, 97, 97, 98, 98, 99, 99, 208, 208,
	228, 228, 228, 103, 103, 103, 105, 104, 104, 104,
	104, 106, 106, 107, 107, 109, 110, 110, 108, 108,
	114, 114, 111, 115, 115, 115, 115, 116, 116, 83,
	83, 83, 83, 83, 83, 83, 193, 193, 118, 118,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	135, 135, 135, 135, 135, 135, 120, 120, 120, 120,
	120, 120, 120, 77, 77, 136, 136, 136, 96, 95,
	95, 80, 80, 79, 79, 137, 137, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 130, 130, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	350, 350, 132, 131, 131, 131, 131, 131, 131, 74,
	74, 74, 74, 74, 229, 229, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 148,
	148, 75, 75, 146, 146, 147, 149, 149, 145, 145,
	145, 122, 122, 122, 122, 122, 122, 122, 122, 124,
	124, 124, 150, 150, 138, 138, 85, 151, 151, 152,
	153, 153, 154, 154, 157, 170, 170, 170, 171, 171,
	171, 171, 126, 126, 172, 172, 172, 121, 121, 121,
	121, 121, 121, 121, 174, 174, 173, 173, 173, 173,
	179, 179, 140, 140, 143, 143, 142, 144, 180, 180,
	184, 184, 181, 181, 185, 185, 185, 185, 188, 188,
	189, 189, 189, 186, 186, 186, 183, 183, 183, 225,
	225, 225, 191, 191, 201, 201, 198, 198, 199, 199,
	192, 192, 242, 242, 207, 207, 206, 206, 206, 202,
	202, 202, 203, 203, 222, 222, 218, 218, 224, 224,
	219, 219, 226, 226, 227, 227, 299, 299, 259, 259,
	309, 309, 260, 260, 310, 310, 312, 312, 307, 307,
	308, 308, 311, 311, 30, 313, 313, 314, 314, 315,
	315, 315, 315, 31, 32, 32, 32, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 347, 348,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	2, 4, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	1, 1, 2, 1, 1, 1, 2, 4, 4, 1,
	1, 2, 3, 4, 4, 5, 3, 1, 1, 3,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 3, 5, 1,
	1, 3, 5, 1, 2, 3, 5, 2, 2, 6,
	0, 1, 0, 3, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 0, 2, 1, 3,
	3, 1, 3, 0, 1, 2, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 1, 3, 1, 2,
	2, 4, 2, 6, 1, 4, 6, 3, 2, 0,
	3, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -346, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 299, -65, 302, 303, -351, -210, 227, 228, 20,
	37, 304, 306, 31, 32, 190, 244, 246, 271, -5,
	-88, -6, 8, 398, 139, 300, 171, 170, 26, 447,
	-347, 68, 514, -153, 15, -67, -352, -67, -67, -67,
	-67, -67, -275, -208, 106, 68, 23, -203, -214, 87,
	389, 146, -212, 240, 242, -201, -202, -211, 200, 210,
	44, 157, 156, 211, 147, 240, 147, 148, 150, 389,
	146, 183, 182, 240, 242, 147, -108, -226, 72, -216,
	160, 458, 265, 444, 211, 509, 252, 197, 299, 313,
	315, 307, 342, 330, 445, 459, 161, 222, 145, 298,
	328, 331, 375, 159, 255, 215, 278, 460, 364, 370,
	225, 302, 384, 461, 162, 219, 221, 220, 205, 226,
	36, 172, 326, 261, 319, 230, 200, 462, 452, 194,
	317, 28, 195, 193, 387, 463, 289, 372, 347, 290,
	264, 464, 449, 259, 371, 322, 318, 271, 163, 157,
	291, 465, 348, 352, 466, 376, 245, 292, 467, 468,
	469, 149, 251, 311, 312, 470, 201, 378, 256, 346,
	33, 158, 446, 48, 180, 379, 38, 350, 37, 356,
	471, 288, 345, 340, 357, 472, 473, 474, 475, 269,
	267, 268, 270, 344, 310, 339, 212, 217, 53, 144,
	354, 353, 355, 218, 374, 335, 333, 476, 477, 260,
	164, 478, 479, 320, 18, 480, 481, 382, 175, 262,
	263, 42, 482, 483, 484, 110, 485, 486, 487, 373,
	349, 351, 199, 114, 323, 154, 488, 266, 369, 275,
	448, 249, 111, 380, 316, 490, 294, 306, 179, 174,
	383, 284, 491, 228, 492, 493, 494, 166, 495, 243,
	242, 303, 276, 112, 304, 366, 223, 496, 497, 498,
	499, 209, 192, 386, 377, 52, 227, 361, 500, 279,
	295, 309, 156, 229, 501, 253, 300, 43, 7, 216,
	257, 367, 277, 224, 210, 213, 337, 181, 502, 503,
	324, 325, 343, 308, 338, 301, 184, 176, 109, 385,
	362, 450, 240, 296, 332, 329, 187, 336, 504, 505,
	214, 188, 305, 381, 254, 327, 363, 147, 131, 331,
	375, 138, 365, 366, 372, -269, 373, 182, 185, -230,
	147, -196, 364, 245, 266, 419, 188, 189, 148, 149,
	33, 377, 376, 368, -226, 151, 305, -76, 142, 177,
	-108, -47, 72, 229, -47, 30, 72, 72, 36, 72,
	304, 367, 367, 75, 448, 191, 21, -338, -319, 275,
	-337, -317, 139, 138, 10, 140, 280, 281, 282, 148,
	8, 31, 489, 165, 283, 284, 6, 169, 285, 286,
	183, 9, 287, -322, 74, 72, -216, 21, -338, -319,
	275, -205, -204, 297, 356, 6, -69, 5, -192, 152,
	301, -87, 457, -93, -228, -226, -217, 74, 258, 168,
	248, 359, 415, 416, 417, 418, 191, 419, 432, 414,
	433, 97, 189, 280, 281, 272, 282, 167, 434, 115,
	198, 177, 237, 368, 236, 241, 420, 421, 435, 436,
	437, 422, 423, 247, 438, 439, 512, 250, 513, 273,
	441, 489, 442, 283, 440, 285, 186, 426, 425, 424,
	427, 286, 409, 410, 428, 51, 430, 429, 431, 150,
	81, -3, -171, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -226, -117, 89, -123, 29, 72, -216, 24,
	-122, -217, -118, -145, -144, -96, 131, 132, 133, 120,
	121, 128, 90, 134, -130, -128, -129, -131, -133, -134,
	74, 73, 82, 75, 76, 77, 78, 83, 415, 416,
	417, 418, 419, 432, 433, 167, 434, 177, 420, 421,
	435, 436, 437, 422, 423, 438, 439, 441, 442, 440,
	426, 425, 424, 427, 409, 410, 428, 430, 429, 431,
	84, 85, -218, -142, -347, 58, 59, 146, 399, 400,
	401, 402, 403, 443, 407, 92, 47, 388, 397, 396,
	395, 393, 394, 390, 392, 391, 153, 389, 126, 398,
	-192, -192, 11, -100, -101, -108, -111, -226, -181, 301,
	-188, -185, 376, 377, -186, -189, -183, -145, 356, 486,
	487, 375, 331, 374, -218, -226, -2, -5, 6, -108,
	-276, -264, -267, -219, 162, -289, -218, -215, 159, 72,
	-216, 258, 143, 168, 139, 88, 451, 23, 25, 248,
	359, 415, 91, 131, 416, 417, 418, 16, 20, 92,
	130, 81, 399, 191, 419, 138, 62, 414, 390, 392,
	388, 389, 365, 29, 10, 26, 170, 204, 22, 124,
	140, 95, 96, 97, 189, 173, 280, 281, 24, 171,
	272, 85, 282, 167, 115, 198, 19, 65, 177, 237,
	11, 368, 185, 508, 244, 13, 413, 113, 236, 14,
	241, 153, 152, 108, 202, 148, 60, 8, 134, 27,
	105, 56, 420, 421, 454, 45, 190, 455, 58, 106,
	17, 393, 394, 31, 443, 422, 178, 456, 423, 126,
	207, 63, 50, 247, 89, 83, 512, 34, 86, 66,
	293, 87, 15, 203, 61, 411, 250, 513, 273, 182,
	489, 206, 457, 165, 107, 283, 141, 398, 274, 246,
	59, 146, 6, 408, 30, 169, 285, 208, 186, 426,
	425, 424, 427, 510, 57, 401, 402, 428, 286, 506,
	147, 94, 409, 410, 151, 183, 84, 5, 44, 32,
	9, 287, 64, 67, 395, 396, 397, 47, 51, 430,
	429, 431, 150, 511, 93, 12, 412, 447, 148, 150,
	398, -199, 153, -199, 183, 182, -213, 208, -199, -199,
	147, -212, 98, 98, -53, -108, -321, -316, -322, -198,
	153, -218, -198, -198, -198, -198, -198, -198, -198, -108,
	135, -108, 72, 30, -197, 106, 12, 389, 146, 147,
	182, 183, 150, -271, 11, 108, 186, 186, 186, 187,
	186, -195, 367, 369, 184, 370, 371, 12, -84, 106,
	19, -347, -171, -171, 72, 304, 151, -61, -3, -11,
	-9, -10, -3, 98, -125, 23, 30, 30, 74, 51,
	30, -42, -41, -43, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 30, -300, 68, -259,
	356, 72, -313, -314, -108, 75, 75, 66, 66, 69,
	151, 69, 66, -339, 276, 68, -339, 242, 276, 277,
	210, 240, 150, -339, -339, 242, -339, -339, -339, -339,
	-339, 367, -339, -339, -339, 278, 279, -339, 365, 150,
	-339, -339, -339, -339, -339, 71, 66, 69, 266, 66,
	11, 66, -286, 131, 289, 290, 291, 292, 288, 266,
	293, 294, 295, 186, 296, -67, -7, -5, -347, 21,
	22, 147, 380, 69, -87, -174, -347, -348, 70, -172,
	19, 31, -126, 75, 78, -154, -157, -83, -226, 50,
	-71, 21, 22, 80, 11, -221, 88, 87, 105, -220,
	23, 72, -216, -217, 74, 135, -83, -120, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -193, -347, -96, -347, 136, 137, -123,
	-123, -123, -123, -123, -123, -123, -123, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-3, -137, -83, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -148, -83, -347, -350, -132, -347,
	-350, -132, -350, -132, -350, -347, -350, -132, -350, -132,
	-350, -350, -132, -350, -347, -347, -347, -347, -110, 27,
	-108, -86, -89, -91, -92, -112, -95, -347, -90, -108,
	-96, 72, -108, -100, -349, 69, 11, 67, -349, 69,
	135, 69, -182, -187, 378, 380, 301, -186, -186, -225,
	-218, 74, 29, 98, 30, 135, -153, -67, 70, 69,
	-267, 162, 159, -232, -236, -238, -237, -239, -234, -235,
	328, 331, 335, 333, 329, 334, 131, 332, 337, 338,
	339, 340, 341, 342, 343, 344, 345, 346, 347, 30,
	172, 324, 325, 326, 327, 348, 349, 350, 351, 352,
	353, 354, 355, 307, 330, 445, 308, 309, 310, 311,
	312, 313, 315, 316, 317, 318, 319, 320, 321, 322,
	72, -217, -289, 68, -218, -108, -214, -212, 72, 89,
	72, -107, -218, -226, -114, -218, -226, 209, -325, -324,
	-316, -319, -199, -213, -316, 214, 212, 213, 69, 151,
	69, 151, 71, -100, 24, 66, -102, -108, 72, 72,
	-107, -114, -318, -316, -319, -227, -226, -215, -197, 74,
	-83, -199, -199, -108, -108, -108, -108, -108, -197, -197,
	-197, -197, -194, 11, 108, 11, -194, -194, -83, -123,
	-316, 391, 122, 72, 72, 304, 72, 34, -42, -42,
	74, -42, 69, 98, -42, 70, -137, -299, 507, 69,
	-315, 23, 380, 381, 357, -341, 147, 185, 182, -341,
	-337, 284, -318, -317, -316, -339, -340, -218, -339, -339,
	-339, 367, -339, -339, -339, -339, -339, -339, -339, -339,
	-322, -341, 244, 69, -341, -318, -316, 288, 288, 288,
	288, 288, 288, -73, -3, -108, 381, 382, -93, 23,
	-173, -219, 9, 108, 69, 18, 69, -170, 25, 26,
	135, -124, 51, 75, 78, -200, 49, -108, -83, -83,
	-135, 83, 89, 84, 85, -220, 122, -227, -219, -215,
	-123, -136, -142, -96, 79, 108, 106, 107, 91, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -229, 72, 74, 72, -122, -122,
	-218, -71, -79, -82, 122, -83, -226, -79, -79, -71,
	-348, -348, -79, -82, -79, -79, -79, -79, -82, -79,
	-71, -71, -79, -348, -348, -348, -348, -79, -79, -79,
	-79, -218, -218, -71, -79, -79, -79, -71, -348, 69,
	-348, -3, -79, -79, -348, -83, -83, -145, 74, -79,
	-145, 74, -79, -123, 404, 405, 406, -79, -71, -146,
	-147, 93, -145, -348, -123, -79, -80, -79, -79, -79,
	-177, 110, -108, 30, 69, -103, -105, -104, -106, 56,
	60, 62, 57, 58, 59, 63, -208, -86, -94, 47,
	-347, -113, 110, -115, 23, -228, 64, 152, 65, -347,
	-177, 67, -86, -108, -86, -111, -226, 122, -185, -188,
	69, 379, 381, 382, -182, -246, 130, 66, 86, -83,
	-219, -227, -171, -73, -277, -278, -279, -219, 74, 75,
	-264, -265, -266, -267, -280, 162, -288, 154, 156, 157,
	44, -268, 163, 148, 45, -233, -254, 362, -240, 68,
	-240, -240, 336, 328, 331, 329, -240, -240, -240, -240,
	-240, -245, 331, -245, -245, -245, -245, 329, 68, 68,
	-240, -240, -240, -256, 68, -256, 323, -257, 68, -257,
	-257, -257, -257, -289, -289, -83, -222, 67, 23, 150,
	-252, -251, -248, -249, -250, -247, 29, 24, -252, -48,
	197, 168, 135, 68, 135, 200, 201, -320, 69, 29,
	-326, 241, -108, -108, -108, -316, -316, -322, -296, 166,
	161, -108, 69, 69, 72, 72, -125, -272, 11, 108,
	-197, -226, -226, -108, -125, -197, -77, 173, 67, -350,
	-348, 72, -123, -41, -122, 70, -109, 27, 74, -314,
	-228, 356, 381, -342, 122, -218, -342, -345, 447, 151,
	70, 69, -339, -342, 262, 244, -342, 11, -287, 19,
	-71, -348, -55, -54, 143, 140, 141, 144, 145, -292,
	359, 139, 194, 193, 179, -95, -347, -348, 69, 135,
	52, -126, -126, -157, -191, 19, 11, 47, 47, -72,
	57, 83, 84, 85, 135, -347, -136, -123, -123, -123,
	-77, 88, -348, -79, 69, -348, 135, -348, -348, -79,
	-158, 411, -158, -348, -348, -348, -348, -348, -348, -348,
	-348, -79, -79, -348, -158, -158, -158, -158, -348, -348,
	-348, -348, 69, 69, -79, -348, -348, -348, -80, -83,
	-348, -348, -348, 69, 67, 23, 11, 11, -348, 11,
	11, -348, -348, 11, -123, -123, -123, -348, -79, -149,
	-147, 95, -83, -348, -348, -348, -348, -348, -348, -121,
	30, 47, -347, -3, -347, -180, -184, -145, -215, -89,
	-91, -91, -89, -91, 56, 56, 56, 61, 56, 61,
	56, -104, -228, -348, -348, -141, 196, -347, 34, -228,
	-115, 148, 148, 148, -80, -116, 12, -86, -116, -116,
	135, -187, -190, 383, 380, 386, 72, 74, 135, -172,
	69, -279, 98, -267, 68, 72, -273, -217, 45, -268,
	148, 45, -270, -268, -268, -273, 72, -273, 45, 83,
	89, -243, -244, -258, -261, -241, 23, 508, 29, 66,
	359, 154, 45, 44, 157, 81, -255, 363, 75, -245,
	-245, -240, -240, -240, 336, -240, -245, -246, 30, -246,
	-246, -246, -246, -245, -262, 74, -262, 75, -256, 75,
	70, 66, -218, -167, -108, -249, -248, -250, 331, 375,
	130, 387, -49, 8, 9, 10, -218, -301, -302, -303,
	72, 108, 202, 203, -218, -329, 274, -324, 242, 251,
	88, 16, 447, 151, 151, -108, -316, -116, 72, 72,
	-194, -197, -123, -319, 188, 189, -177, 147, -315, 151,
	135, 135, 151, 265, -318, -218, 11, 11, 262, 11,
	-318, 298, -200, 69, -209, -268, -298, -266, -267, -297,
	155, 162, 163, -209, 162, 159, -268, 163, 154, 155,
	-206, -268, 151, 23, -209, -209, -274, 98, -209, 33,
	33, 110, -219, -219, 53, -108, -78, -168, 122, -219,
	-80, -77, 88, -123, -348, -82, -159, -158, 122, -227,
	-159, -159, -348, -218, -163, -347, -158, -159, -159, -158,
	-158, -158, -348, -348, -158, -159, -159, -159, -159, -123,
	-123, -348, -159, -159, -159, -348, -231, 131, 328, 172,
	326, 319, 346, 333, 361, 324, 362, -229, -231, -123,
	-123, -123, -123, -123, 11, 11, 11, 444, -153, 97,
	-83, 94, -179, 66, -180, -140, -143, -142, -347, -3,
	-348, -173, 6, 447, -178, -218, -116, 69, 98, 98,
	-98, -97, 66, 67, -99, 66, -97, 56, 56, -176,
	68, 69, -142, -347, -178, -123, -115, -347, -347, -347,
	-348, -153, -83, -116, 380, 384, 385, -278, -279, -282,
	-281, -218, -217, 154, -288, 44, -288, -273, -273, -273,
	68, 83, -347, 509, -123, 9, 45, 45, 45, 74,
	70, -246, -246, -245, -240, -246, 72, 131, -246, 70,
	69, 70, 69, 70, 69, -119, 463, 89, -108, -169,
	23, 30, -274, -274, -274, 66, 70, 69, -232, 72,
	72, 72, -332, 447, 247, -330, -328, 253, 254, 255,
	256, 257, -319, 252, -326, 249, 74, 72, -108, -316,
	-125, -245, -108, -318, 122, 122, -218, -318, 262, -344,
	447, -318, -318, 11, -318, 74, -72, -54, 68, -263,
	72, -217, -273, -202, 154, 72, 72, 72, -217, 72,
	-217, -218, 45, 45, 72, -108, -218, -263, 72, -83,
	-218, -218, 135, -116, 11, 69, -81, -348, -123, -159,
	135, -159, -223, 72, -159, -159, 69, 69, -159, -348,
	-240, -240, -240, -257, -240, 312, -240, 312, -348, -348,
	19, 19, 19, 19, -348, -123, -123, -123, -347, -75,
	408, -83, 28, -179, 69, -348, -348, 47, -348, -348,
	69, -153, -184, -83, -83, -83, 68, -83, -175, -218,
	196, -348, -115, -208, -175, -175, -175, -171, 70, 69,
	-240, -240, 45, -270, -175, -123, 23, -129, 409, 410,
	-246, -245, 74, -245, 75, 75, 463, 68, -3, -167,
	-274, 72, 131, 72, 131, 74, -108, -304, -305, -306,
	81, 446, 89, 204, 205, 164, 206, 207, 208, -303,
	-232, -232, -232, -335, -336, -334, 250, 272, 273, 258,
	-333, -331, 267, 268, 269, 270, 88, 74, 74, 74,
	-327, 241, 88, 250, 16, 23, -197, -307, -195, -344,
	-344, 244, -318, -78, -263, -155, 167, 168, -232, -232,
	-222, -270, 45, 72, -207, 151, 23, 151, -155, -263,
	30, 140, 27, -219, -150, 13, -86, -168, -168, 122,
	-139, 110, -123, -123, -245, 72, -123, -123, -123, -123,
	-348, -348, -348, -123, -348, 74, 45, -143, -140, 47,
	-3, -347, -218, -171, -175, 70, 69, -142, -113, -228,
	-348, -348, -348, -284, -283, 67, 158, 81, -281, -170,
	-170, -273, 70, -348, -347, -246, -246, 70, 70, -282,
	-167, -169, 72, 131, 19, -168, -306, 74, 208, 204,
	208, 208, 208, 208, 209, -323, 81, 248, -334, 259,
	468, 243, 274, 75, 75, 109, 31, 32, -331, 75,
	75, 75, 75, -328, 16, 447, -326, 249, 74, 74,
	-308, 38, -310, 39, -343, 23, -343, 262, 11, 70,
	72, -233, -233, 68, -273, 68, 72, -218, -155, 29,
	29, -347, -151, 14, 16, -116, -81, -153, 16, -348,
	-348, -348, -348, -348, -348, -74, 108, 447, 9, -140,
	-3, 70, -218, -115, -283, 72, -274, 74, 165, -253,
	511, 510, -123, 70, -3, 195, -169, 36, 36, 200,
	201, 74, 74, 29, 260, 134, 29, 75, 134, 414,
	249, 74, 72, 250, -242, 152, -311, 43, -309, -260,
	42, 16, -316, -86, -282, -222, -282, -123, -290, -291,
	110, -161, 412, -152, -83, -138, -85, -83, -150, -168,
	-164, 112, 111, -137, -348, 445, 63, 448, -180, -348,
	75, -108, -348, -285, -284, -167, 196, -20, -3, -9,
	-10, -11, -12, -14, -50, -15, -16, -21, -22, -17,
	-56, -57, -65, -63, -64, -60, -59, -25, -23, -26,
	-18, -27, -28, -29, -33, -34, -24, -35, 92, 153,
	230, 299, 75, 29, 75, 29, 263, 250, 23, -176,
	75, -310, 16, -312, 40, 41, 74, 447, -116, 70,
	68, 70, -348, 69, -218, -160, -162, -218, 69, -151,
	-348, -165, 91, -166, 109, 414, -127, 75, 134, -165,
	53, 446, 449, 68, -253, -156, 198, 199, -167, -83,
	-83, 72, -46, -224, 233, 234, 235, -219, -36, -20,
	261, 261, 74, 38, 74, 16, 16, 242, -150, -285,
	-282, -285, -291, 47, 69, 23, -85, -161, -166, 114,
	115, 196, 114, 115, -122, 53, -175, -167, 72, 72,
	-37, -38, 93, 94, 231, 232, 236, -232, 69, 514,
	74, 74, 29, 247, 21, -319, -151, 70, 180, -162,
	-163, 88, -218, 447, 70, -169, 97, 95, -38, -83,
	-36, 19, 19, 19, 29, -219, 97, -20, 264, -161,
	-285, 181, -166, 448, -294, -295, 66, -13, -19, -12,
	-9, -10, -11, 299, 92, -36, 94, 514, -47, 75,
	-3, -45, -44, 75, -47, 238, 89, 239, 72, -123,
	-319, -347, 449, -295, 66, -294, 66, 10, 9, -167,
	-36, 514, -36, 97, 95, -39, -40, 96, -20, 69,
	237, -123, 178, -293, 166, 161, 164, 30, -293, 514,
	97, 514, 153, -36, 97, 95, -40, -83, -44, -348,
	-348, 160, 29, 83, 97, 92, 514, 153, -36, 94,
	97, 514, -36, 153, 97, 514, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 740, 740, 740, 740,
	740, 740, 838, -2, 602, 0, 0, 0, 0, -2,
	713, 714, 715, 719, 720, 735, 737, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 40,
	0, 0, 56, 57, 1150, 0, 738, 727, 728, 0,
	0, 1694, 2, 1088, 0, 749, 742, 0, 1150, 1150,
	0, 0, 88, 0, 0, 0, 839, 0, 0, 0,
	1148, 1148, 239, 1148, 1148, 0, 1163, 237, 0, 1145,
	1159, 1160, 1161, 0, 0, 0, 1146, 0, 1146, 1146,
	1146, 1146, 1146, 1146, 1146, 0, 661, 858, 1172, 1173,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 0, 0, 0,
	706, 0, 672, 673, 674, 0, 676, 0, 0, 0,
	0, 0, 686, 689, 693, 0, 1088, 1088, 548, 549,
	550, 710, 711, 700, 712, 0, 0, 0, 0, 0,
	819, 314, 316, 0, 336, 0, 339, 342, 1178, 721,
	0, 0, 1203, 1204, 0, 0, 0, 0, 0, 1543,
	182, 253, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 0, 184, 184, 184, 1555, 184, 0, 184, 184,
	184, 184, 184, 252, 242, 243, 244, 0, 0, 0,
	1543, 0, 528, 525, 526, 740, 0, 744, 0, 1151,
	716, 45, 0, 47, 1104, 840, 841, 842, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 0, 1094, 0, 0, 752, 750, 751, 741, 0,
	763, 793, 0, 869, 0, 874, 876, -2, -2, 0,
	917, 918, 919, 920, 921, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 947, 948, 949, 950, 951,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1635, 1636,
	1637, 1638, 1640, 1641, 1643, 1650, 1651, 1654, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1667, 1668, 1673, 1675, 1677,
	1680, 1681, 1682, 1683, 1685, 1686, 1687, 1689, 1690, 1691,
	878, 879, 1058, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1049, 0, 1020, 1020, 1020,
	1020, 1020, 1020, 1020, 1020, 1020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 69, 858, 73, 1609,
	0, 1122, -2, -2, 1124, 0, 0, 0, -2, -2,
	-2, -2, 1405, -2, 1058, 0, 89, 1080, 740, 90,
	0, 379, 380, 0, 1418, 572, 1170, 1171, 1407, 1166,
	1167, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 0, 0,
	237, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	1148, 239, 0, 0, 642, 0, 643, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 662, 663, 706, 665, 0, 0, 1148, 1148, 0,
	0, 0, 0, 0, 574, 575, 706, 706, 706, 706,
	703, 0, 703, 683, 703, 701, 702, 0, 688, 0,
	0, 0, 696, 697, 722, 0, 0, 729, 731, 732,
	733, 734, 730, 0, 739, 0, 0, 0, 318, 0,
	0, 338, 320, 0, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 341, 0, 1176,
	1179, 726, 1194, 1195, 0, 1205, 1206, 188, 188, 0,
	0, 0, 0, 151, 184, 0, 153, 184, 184, 184,
	0, 184, 184, 160, 161, 184, 163, 164, 165, 166,
	167, 184, 169, 170, 171, 184, 184, 174, 184, 184,
	177, 178, 179, 180, 181, 251, 188, 0, 0, 188,
	0, 0, 510, 0, 0, 0, 0, 515, 516, 517,
	518, 0, 0, 521, 522, 749, 42, 52, 0, 745,
	746, 0, 0, 0, 46, 0, 0, 51, 1695, 37,
	0, 0, 1089, 1092, 1093, 1081, 1082, 1085, 0, 0,
	747, 753, 754, 743, 0, 764, 0, 0, 0, 794,
	0, 796, 797, 798, 799, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 896, 897, 898, 899,
	900, 901, 902, 875, 0, 889, 0, 0, 0, 938,
	939, 940, 941, 942, 943, 944, 0, 752, 0, 0,
	0, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 0, 0, 752,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 1050, 0, 1003, 1012, 0,
	1004, 1013, 1005, 1014, 1006, 0, 1007, 1015, 1008, 1016,
	1009, 1010, 1017, 1011, 0, 911, 0, 0, 71, 0,
	857, 0, 800, 802, 803, 804, -2, 0, 808, 863,
	909, 1172, -2, 0, 0, 0, 63, 64, 0, 0,
	0, 0, 74, 76, 0, 0, 1609, 1125, 1126, 484,
	1139, 1140, 1141, 0, 1137, 0, 1088, 749, 589, 0,
	381, 0, 0, 393, 474, 404, 405, 406, 467, 408,
	467, 467, 0, 467, 467, 467, 467, 467, 481, 481,
	481, 481, 481, 450, 451, 452, 453, 454, 0, 0,
	427, 467, 467, 467, 431, 457, 458, 459, 460, 461,
	462, 463, 464, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 418, 469, 469, 471, 471, 471, 471, 471,
	0, 0, 571, 0, 1164, 0, 0, 239, -2, 0,
	-2, 0, 853, 0, 0, 860, 0, 0, 100, 269,
	255, 99, 0, 233, 238, 234, 235, 236, 0, 0,
	0, 0, 246, 657, 1147, 0, 650, 65, 651, 652,
	653, 654, 655, 248, 656, 859, 1174, 1175, 664, 707,
	708, 0, 0, 819, 669, 670, 671, 576, 677, 678,
	679, 685, 706, 0, 0, 0, 819, 706, 687, 903,
	690, 1020, 0, 724, 723, 0, 736, 0, 315, 317,
	319, 337, 0, 0, 340, 343, 0, 0, 0, 0,
	1197, 0, 1199, 1201, 0, 0, 189, 190, 191, 0,
	183, 0, 206, 254, 0, 152, 0, 186, 154, 155,
	156, 184, 158, 159, 162, 168, 172, 173, 175, 176,
	250, 0, 0, 0, 0, 149, 0, 511, 512, 513,
	514, 523, 520, 752, 0, 0, 717, 718, 48, 0,
	0, 1106, 1095, 0, 0, 0, 0, 1084, 1086, 1087,
	0, 0, 1069, 0, 0, 755, 748, 39, 870, 871,
	873, 890, 0, 892, 894, 795, 765, 0, 1059, -2,
	880, 881, 905, 906, 907, 0, 0, 0, 0, 903,
	885, 0, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 937, 1034, 1035, 0, 935, 936,
	945, 0, 0, 913, 759, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 911, 908, 0,
	1116, 0, 0, 0, 985, 0, 0, 920, 1061, 0,
	920, 1061, 0, 0, 0, 0, 0, 0, 0, 1056,
	1053, 0, 0, 1021, 0, 0, 0, 912, 0, 0,
	0, 0, 856, 0, 0, 0, 0, 0, 0, 843,
	0, 0, 846, 0, 0, 0, 0, 0, 0, 0,
	0, 812, 1529, 814, 0, 863, 0, 0, 0, 911,
	867, 0, 867, 68, 867, 70, 0, 862, 1123, 0,
	0, 0, 79, 80, 75, 1127, 0, 1133, 1134, 1135,
	1059, 0, 1094, 752, 378, 590, 592, 595, 596, 597,
	382, 384, 385, 386, 0, -2, 563, 1539, 1586, -2,
	-2, 555, 1452, -2, -2, 389, 476, 475, 407, 0,
	481, 481, 467, 467, 467, 467, 436, 481, 439, 442,
	443, 484, 0, 484, 484, 484, 484, 481, 0, 0,
	428, 429, 430, 419, 0, 420, 469, 422, 0, 423,
	424, 425, 426, 569, 570, 0, 0, 0, 85, 0,
	94, -2, 491, 492, 493, 0, 488, 1149, 95, 0,
	271, 272, 0, 209, 0, 240, 241, 102, 0, 0,
	256, 0, 377, 0, 644, 0, 646, 245, 648, 658,
	659, 649, 0, 0, 666, 667, 668, 867, 0, 0,
	680, 704, 705, 703, 706, 684, 698, 0, 0, 691,
	0, 725, 820, 321, 322, 344, 71, 0, 1177, 1196,
	0, 1200, 1202, 0, 192, 194, 0, 143, 0, 0,
	185, 0, 157, 0, 0, 0, 0, 0, 519, 0,
	747, 53, 603, 604, -2, 635, 1156, 635, 635, 621,
	538, 635, 0, 0, 0, 49, 0, 1105, 0, 0,
	0, 1090, 1091, 1083, 0, 1142, 1143, 1070, 1071, 86,
	756, 891, 893, 895, 0, 911, 882, 903, 886, 0,
	883, 0, 877, 0, 0, 774, 0, 774, 774, 0,
	971, 0, 972, 999, 0, 984, 774, 774, 0, 0,
	0, 0, 0, 0, 978, 979, 980, 981, 774, 774,
	774, 774, 0, 0, 0, 774, 774, 774, 0, 916,
	-2, 982, 983, 0, 0, 0, 0, 0, 1027, 0,
	0, 1028, 993, 0, 0, 0, 0, 0, 1080, 0,
	1054, 0, 0, 1002, 1022, 1023, 1024, 1025, 1026, 1110,
	0, 0, 0, 1099, 0, 867, 1118, 0, 0, 801,
	834, 836, 0, 831, 844, 845, 847, 0, 849, 0,
	851, 852, 821, 807, 910, 809, 0, 0, 0, 863,
	818, 0, 0, 0, 0, 1080, 0, 867, 61, 62,
	0, 77, 78, 0, 0, 84, 485, 486, 0, 208,
	0, 593, 0, 383, 0, 556, 0, 0, 540, 555,
	551, 552, 555, 554, 555, 546, 556, 547, 0, 394,
	0, 396, 397, 398, 399, 400, 0, 0, 0, 0,
	480, 0, 505, 507, 0, 0, 403, 477, 0, 484,
	484, 481, 434, 435, 467, 440, 484, 444, 0, 445,
	446, 447, 448, 484, 0, 465, 0, 0, 421, 0,
	586, 0, 1165, 87, 0, 494, 495, 496, 0, 538,
	538, 538, 0, 273, 274, 275, 854, 0, 210, 211,
	0, 0, 0, 0, 861, 112, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 66, 249, 675, 577, 578,
	819, 682, 904, 692, 694, 695, 481, 0, 1198, 0,
	0, 0, 0, 0, 204, 187, 0, 0, 0, 0,
	150, 0, 755, 0, 0, 555, 0, 622, 623, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1157, 1158, 0, 0, 0, 539, 0, 630,
	631, 0, 1108, 1107, 1096, 38, 867, 0, 766, 1060,
	0, 884, 0, 887, 774, 914, 956, 775, 761, 0,
	957, 958, 774, 767, 768, 770, 973, 960, 961, 974,
	975, 976, 774, 774, 977, 965, 964, 963, 966, 0,
	0, 774, 969, 968, 970, 952, 0, 467, 467, 1039,
	467, 471, 1042, 467, 1044, 467, 1047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1051, 1001,
	1057, 0, 54, 0, 1110, 1097, 1112, 1114, 0, 0,
	0, 0, -2, 1383, 0, 825, 1080, 0, 0, 0,
	828, 835, 0, 0, 829, 0, 830, 848, 850, 805,
	0, 0, 810, 0, 0, -2, 817, 0, 0, 0,
	827, 1088, 868, 60, 81, 82, 83, 591, 594, 0,
	557, 467, 467, 0, 561, 553, 562, 542, 543, 545,
	0, 395, 0, 0, 478, 0, 504, 506, 508, 509,
	468, 432, 433, 484, 441, 437, 482, 483, 449, 481,
	0, 481, 0, 472, 0, 573, 587, 0, 0, 0,
	85, 538, 0, 0, 0, 0, 217, 0, 213, 0,
	0, 0, 120, 0, 103, 104, 105, 107, 108, 0,
	0, 0, 101, 0, 258, 0, 261, 262, 645, 647,
	706, 1188, 855, 204, 193, 195, 196, 204, 207, 144,
	0, 145, 147, 0, 146, 524, 86, 605, 0, 632,
	0, 0, 1164, 553, 0, -2, 608, 613, 614, 615,
	616, 617, 0, 628, 0, 610, 0, 632, 0, 625,
	0, 0, 0, 1072, 0, 86, 86, 953, 888, 955,
	0, 959, 772, 771, 954, 962, 0, 0, 967, 986,
	1036, 481, 1040, 1041, 1043, 1045, 1046, 1048, 988, 987,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 1055, 0, 55, 0, 1115, -2, 0, 0, 72,
	0, 1088, 1119, 1120, 1121, 832, 0, 837, 0, 823,
	0, 863, 815, 0, 0, 0, 0, 59, 530, 0,
	1085, 1085, 541, 555, 0, 0, 0, 479, 0, 0,
	438, 484, 466, 484, 0, 0, 588, 0, 85, 87,
	0, 499, 500, 501, 502, 503, 0, 86, 218, 219,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 212,
	214, 215, 216, 138, 121, 122, 0, 0, 0, 0,
	113, 114, 0, 0, 0, 0, 0, 109, 110, 111,
	257, 0, 0, 260, 0, 0, 681, 1190, 1184, 197,
	197, 0, 148, 0, 0, 607, 633, 0, 393, 393,
	0, 555, 0, 624, 0, 1154, 1155, 0, 619, 632,
	0, 0, 0, 1109, 1077, 0, 867, 0, 757, 762,
	1080, 0, 0, 0, 1037, 1038, 0, 0, 0, 0,
	995, 996, 997, 1029, 1000, 1052, 0, 1113, 1098, 0,
	1102, 0, 826, 58, 0, 822, 0, 811, 813, 863,
	864, 865, 866, 529, 533, 0, 538, 0, 558, 559,
	560, 544, 0, 390, 0, 455, 456, 470, 473, 0,
	92, 0, 497, 498, 0, 87, 220, 221, 222, 223,
	225, 226, 0, 0, 0, 98, 0, 0, 123, 0,
	0, 0, 0, 133, 134, 135, 136, 137, 115, 116,
	117, 118, 119, 106, 0, 0, 259, 0, 264, 265,
	1152, 1192, -2, 0, 141, 0, 142, 205, 0, 606,
	634, 387, 388, 0, 1164, 0, 609, 618, 620, 0,
	627, 0, 786, 0, 0, 1072, 86, 776, 0, 1018,
	1019, 989, 991, 990, 992, 0, 0, 0, 0, 1101,
	0, 833, 824, 816, 534, 535, 0, 537, 0, 401,
	391, 392, 0, 531, 85, 0, 0, 227, 228, 229,
	230, 139, 140, 124, 125, 0, 127, 128, 0, 0,
	0, 267, 0, 263, 821, 0, 1184, 0, 1186, 0,
	1183, 0, 198, 867, 0, 0, 0, 626, 0, 638,
	0, 43, 0, 1078, 1079, 1073, 1074, 1076, 1077, 758,
	0, 0, 0, 773, 998, 0, 0, 0, 1111, -2,
	536, 0, 390, 91, 532, 93, 276, 85, 347, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 0,
	0, 0, 0, 129, 0, 131, 132, 266, 0, 36,
	0, 1191, 0, 1189, 0, 0, 1185, 0, 1072, 531,
	0, 531, 637, 0, 0, 787, 788, 0, 0, 786,
	769, 777, 0, 780, 0, 0, 0, 791, 0, 778,
	1030, 0, 1033, 0, 402, 85, 0, 0, 97, 0,
	0, 1166, 0, 0, 303, 304, 305, 1168, 0, 345,
	126, 130, 268, 1153, 1193, 0, 0, 0, 1077, 611,
	0, 629, 639, 0, 0, 0, 1075, 44, 0, 781,
	782, 783, 784, 785, 0, 1031, 0, 87, 277, 278,
	0, 287, 0, 0, 0, 0, 0, 301, 0, 0,
	1187, 1181, 199, 200, 201, 203, 786, 531, 0, 789,
	790, 0, 792, 0, 564, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 1169, 231, 346, 0, 41,
	612, 0, 779, 0, 565, 566, 0, 85, 279, 280,
	281, 282, 283, 0, 285, 0, 0, 0, 297, 298,
	299, 0, 306, 308, 309, 310, 0, 312, 313, 302,
	202, 0, 1032, 567, 0, 568, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 294, 0, 300, 0,
	311, 0, 0, 579, 581, 582, 0, 0, 580, 0,
	0, 289, 290, 0, 0, 0, 295, 0, 307, 640,
	641, 583, 584, 585, 284, 286, 0, 292, 0, 0,
	0, 0, 0, 291, 0, 296, 293,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 514,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:509
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:516
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:551
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:557
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:563
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:587
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:600
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:662
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:674
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:696
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:702
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:706
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:710
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:714
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:753
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:757
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:763
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:767
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:774
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:787
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:801
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:811
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:819
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:824
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:829
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:859
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:863
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:869
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:875
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:883
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:891
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:895
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:899
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:918
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:927
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:931
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1013
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1062
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1066
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1070
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1110
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1115
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1119
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1123
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1129
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1134
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1138
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1142
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1150
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1291
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1387
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1398
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1426
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1483
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1487
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1495
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1505
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1511
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1571
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1643
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1647
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1651
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1657
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1669
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1673
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1677
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1683
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1691
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = BeforeStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = AfterStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = InsertStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = UpdateStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = DeleteStr
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1730
		{
			yyVAL.triggerOrder = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1738
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1754
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1780
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1786
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 291:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1791
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1796
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 293:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1802
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1820
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1846
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.statement = &Resignal{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2028
		{
			yyVAL.exprs = nil
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.exprs = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2087
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2103
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2130
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2176
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = ColumnType{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2193
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2220
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2229
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2247
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2256
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2265
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{
			yyVAL.sqlVal = nil
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2563
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2568
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2572
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2580
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2590
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2598
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2607
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2660
		{
			yyVAL.boolean = false
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.boolean = true
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.charsetCollates = nil
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2705
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2709
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2717
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2727
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2733
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.colKeyOpt = colKey
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2755
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2777
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2801
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = yyDollar[1].str
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2839
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2843
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.indexOptions = nil
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2909
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2918
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = ""
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = yyDollar[1].str
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3008
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 565:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3012
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 566:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3016
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 567:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3020
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 568:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3024
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3030
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3048
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3097
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3110
		{
			yyVAL.boolean = true
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.boolean = true
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.boolean = false
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3166
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = string("")
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3188
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3211
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3218
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3225
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3229
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3238
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 612:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3242
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3251
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3256
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3266
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3270
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3274
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3281
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3287
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3312
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3324
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3330
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3339
		{
			yyVAL.columnOrder = nil
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3347
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3352
		{
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
		}
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3358
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3374
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 641:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3378
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3398
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3410
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3416
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3424
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3428
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3436
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3444
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3460
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3468
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3476
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3485
		{

		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3519
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3527
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3535
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3540
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3548
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3560
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3564
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3568
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3580
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3584
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3588
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3593
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3606
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3614
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3620
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3632
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3637
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3641
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3650
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3674
		{
			yyVAL.boolean = false
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.boolean = true
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3708
		{
			yyVAL.showFilter = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = SessionStr
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = GlobalStr
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3740
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.statement = &Begin{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.statement = &Begin{}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3760
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3764
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.statement = &Commit{}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.statement = &Rollback{}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3792
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3796
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3800
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3849
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			setAllowComments(yylex, true)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3859
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3865
		{
			yyVAL.bytes2 = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3869
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = UnionStr
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = UnionAllStr
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = UnionDistinctStr
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.byt = 0
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.byt = 1
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = SQLCacheStr
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = DistinctStr
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.str = ""
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.str = StraightJoinHint
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3941
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3982
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3992
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3998
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.exprs = nil
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4020
		{
			yyVAL.over = nil
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.over = yyDollar[1].over
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4029
		{
			yyVAL.frame = nil
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4037
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4044
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4082
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4086
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4094
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4109
		{
			yyVAL.window = nil
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.window = yyDollar[2].window
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4145
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 813:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4239
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4254
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4258
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4277
		{
			yyVAL.expr = nil
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4281
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.columns = nil
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4316
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4329
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4333
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4337
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4349
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4353
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.empty = struct{}{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = JoinStr
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = JoinStr
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = JoinStr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = StraightJoinStr
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = LeftJoinStr
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = LeftJoinStr
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = RightJoinStr
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = RightJoinStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = NaturalJoinStr
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4463
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4484
		{
			yyVAL.indexHints = nil
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4488
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4492
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4496
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = nil
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = IsNullStr
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = IsNotNullStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = IsTrueStr
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = IsNotTrueStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = IsFalseStr
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = IsNotFalseStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = EqualStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = LessThanStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = GreaterThanStr
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = LessEqualStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = GreaterEqualStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = NotEqualStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4658
		{
			yyVAL.expr = nil
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.selectExprs = nil
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4829
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4843
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4847
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4871
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4875
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4889
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4893
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4917
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4933
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4937
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4941
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4945
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4949
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5017
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5021
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5029
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5033
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 989:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5061
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5065
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5069
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 998:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5073
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1000:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5081
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5089
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5165
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5169
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = BooleanModeStr
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1032:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5236
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5256
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5264
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5282
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5290
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5302
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = nil
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = string("")
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5330
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5336
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5341
		{
			yyVAL.expr = nil
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5345
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5355
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5359
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.expr = &NullVal{}
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5412
		{
			yyVAL.exprs = nil
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5416
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5426
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5437
		{
			yyVAL.expr = nil
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5441
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5452
		{
			yyVAL.orderBy = nil
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5472
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = AscScr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = AscScr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = DescScr
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5490
		{
			yyVAL.limit = nil
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5498
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5502
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5508
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5512
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.str = ForUpdateStr
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = ShareModeStr
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5538
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5542
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5550
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5555
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5559
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5563
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.columns = nil
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5583
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5587
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5591
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.assignExprs = nil
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5600
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5606
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5620
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5632
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5646
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5652
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5655
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5682
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5695
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5728
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5732
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5738
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5742
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5753
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.expr = &Default{}
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.byt = 0
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.byt = 1
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5782
		{
			yyVAL.byt = 0
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5784
		{
			yyVAL.byt = 1
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5787
		{
			yyVAL.byt = 0
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5789
		{
			yyVAL.byt = 1
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5792
		{
			yyVAL.str = ""
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = IgnoreStr
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5797
		{
			yyVAL.sqlVal = nil
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5799
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.empty = struct{}{}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.empty = struct{}{}
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5808
		{
			yyVAL.empty = struct{}{}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.empty = struct{}{}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.empty = struct{}{}
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
			yyVAL.str = UniqueStr
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = FulltextStr
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5820
		{
			yyVAL.str = SpatialStr
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5823
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5828
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5830
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5834
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5838
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5848
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5855
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5861
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = string("")
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5879
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5882
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5884
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5887
		{
			yyVAL.EnclosedBy = nil
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5891
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5896
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5900
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5905
		{
			yyVAL.sqlVal = nil
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5909
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5914
		{
			yyVAL.sqlVal = nil
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5923
		{
			yyVAL.Fields = nil
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5927
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5932
		{
			yyVAL.Lines = nil
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5936
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5941
		{
			yyVAL.sqlVal = nil
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5945
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5961
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5967
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5971
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.lockType = LockRead
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5981
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.lockType = LockWrite
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5989
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5995
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6005
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6009
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6533
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6542
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
