// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const CURRENT = 57588
const PROXY = 57589
const BEGIN = 57590
const START = 57591
const TRANSACTION = 57592
const COMMIT = 57593
const ROLLBACK = 57594
const SAVEPOINT = 57595
const WORK = 57596
const RELEASE = 57597
const BIT = 57598
const TINYINT = 57599
const SMALLINT = 57600
const MEDIUMINT = 57601
const INT = 57602
const INTEGER = 57603
const BIGINT = 57604
const INTNUM = 57605
const REAL = 57606
const DOUBLE = 57607
const FLOAT_TYPE = 57608
const DECIMAL = 57609
const NUMERIC = 57610
const DEC = 57611
const FIXED = 57612
const PRECISION = 57613
const TIME = 57614
const TIMESTAMP = 57615
const DATETIME = 57616
const YEAR = 57617
const CHAR = 57618
const VARCHAR = 57619
const BOOL = 57620
const CHARACTER = 57621
const VARBINARY = 57622
const NCHAR = 57623
const NVARCHAR = 57624
const NATIONAL = 57625
const VARYING = 57626
const TEXT = 57627
const TINYTEXT = 57628
const MEDIUMTEXT = 57629
const LONGTEXT = 57630
const LONG = 57631
const BLOB = 57632
const TINYBLOB = 57633
const MEDIUMBLOB = 57634
const LONGBLOB = 57635
const JSON = 57636
const ENUM = 57637
const GEOMETRY = 57638
const POINT = 57639
const LINESTRING = 57640
const POLYGON = 57641
const GEOMETRYCOLLECTION = 57642
const MULTIPOINT = 57643
const MULTILINESTRING = 57644
const MULTIPOLYGON = 57645
const LOCAL = 57646
const LOW_PRIORITY = 57647
const NULLX = 57648
const AUTO_INCREMENT = 57649
const APPROXNUM = 57650
const SIGNED = 57651
const UNSIGNED = 57652
const ZEROFILL = 57653
const COLLATION = 57654
const DATABASES = 57655
const SCHEMAS = 57656
const TABLES = 57657
const FULL = 57658
const PROCESSLIST = 57659
const COLUMNS = 57660
const FIELDS = 57661
const ENGINES = 57662
const PLUGINS = 57663
const NAMES = 57664
const CHARSET = 57665
const GLOBAL = 57666
const SESSION = 57667
const ISOLATION = 57668
const LEVEL = 57669
const READ = 57670
const WRITE = 57671
const ONLY = 57672
const REPEATABLE = 57673
const COMMITTED = 57674
const UNCOMMITTED = 57675
const SERIALIZABLE = 57676
const CURRENT_TIMESTAMP = 57677
const DATABASE = 57678
const CURRENT_DATE = 57679
const CURRENT_USER = 57680
const CURRENT_TIME = 57681
const LOCALTIME = 57682
const LOCALTIMESTAMP = 57683
const UTC_DATE = 57684
const UTC_TIME = 57685
const UTC_TIMESTAMP = 57686
const REPLACE = 57687
const CONVERT = 57688
const CAST = 57689
const SUBSTR = 57690
const SUBSTRING = 57691
const TRIM = 57692
const LEADING = 57693
const TRAILING = 57694
const BOTH = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const OVER = 57700
const WINDOW = 57701
const GROUPING = 57702
const GROUPS = 57703
const AVG = 57704
const BIT_AND = 57705
const BIT_OR = 57706
const BIT_XOR = 57707
const COUNT = 57708
const JSON_ARRAYAGG = 57709
const JSON_OBJECTAGG = 57710
const MAX = 57711
const MIN = 57712
const STDDEV_POP = 57713
const STDDEV = 57714
const STD = 57715
const STDDEV_SAMP = 57716
const SUM = 57717
const VAR_POP = 57718
const VARIANCE = 57719
const VAR_SAMP = 57720
const CUME_DIST = 57721
const DENSE_RANK = 57722
const FIRST_VALUE = 57723
const LAG = 57724
const LAST_VALUE = 57725
const LEAD = 57726
const NTH_VALUE = 57727
const NTILE = 57728
const ROW_NUMBER = 57729
const PERCENT_RANK = 57730
const RANK = 57731
const MATCH = 57732
const AGAINST = 57733
const BOOLEAN = 57734
const LANGUAGE = 57735
const WITH = 57736
const QUERY = 57737
const EXPANSION = 57738
const UNUSED = 57739
const ARRAY = 57740
const DESCRIPTION = 57741
const EMPTY = 57742
const JSON_TABLE = 57743
const LATERAL = 57744
const MEMBER = 57745
const RECURSIVE = 57746
const ACTIVE = 57747
const BUCKETS = 57748
const CLONE = 57749
const COMPONENT = 57750
const DEFINITION = 57751
const ENFORCED = 57752
const EXCLUDE = 57753
const FOLLOWING = 57754
const GEOMCOLLECTION = 57755
const GET_MASTER_PUBLIC_KEY = 57756
const HISTOGRAM = 57757
const HISTORY = 57758
const INACTIVE = 57759
const INVISIBLE = 57760
const LOCKED = 57761
const MASTER_COMPRESSION_ALGORITHMS = 57762
const MASTER_PUBLIC_KEY_PATH = 57763
const MASTER_TLS_CIPHERSUITES = 57764
const MASTER_ZSTD_COMPRESSION_LEVEL = 57765
const NESTED = 57766
const NETWORK_NAMESPACE = 57767
const NOWAIT = 57768
const NULLS = 57769
const OJ = 57770
const OLD = 57771
const ORDINALITY = 57772
const ORGANIZATION = 57773
const OTHERS = 57774
const PATH = 57775
const PERSIST = 57776
const PERSIST_ONLY = 57777
const PRECEDING = 57778
const PRIVILEGE_CHECKS_USER = 57779
const PROCESS = 57780
const REFERENCE = 57781
const REQUIRE_ROW_FORMAT = 57782
const RESOURCE = 57783
const RESPECT = 57784
const RESTART = 57785
const RETAIN = 57786
const SECONDARY = 57787
const SECONDARY_ENGINE = 57788
const SECONDARY_LOAD = 57789
const SECONDARY_UNLOAD = 57790
const SKIP = 57791
const SRID = 57792
const THREAD_PRIORITY = 57793
const TIES = 57794
const VCPU = 57795
const VISIBLE = 57796
const SYSTEM = 57797
const INFILE = 57798

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"CURRENT",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 36,
	5, 51,
	-2, 986,
	-1, 44,
	141, 1048,
	142, 1074,
	-2, 205,
	-1, 51,
	181, 638,
	182, 638,
	-2, 628,
	-1, 58,
	1, 1530,
	475, 1530,
	-2, 666,
	-1, 491,
	128, 1084,
	-2, 1078,
	-1, 492,
	128, 1085,
	-2, 1079,
	-1, 596,
	98, 1338,
	128, 1338,
	-2, 1032,
	-1, 597,
	98, 1449,
	128, 1449,
	-2, 1033,
	-1, 602,
	98, 1361,
	128, 1361,
	-2, 1034,
	-1, 603,
	98, 1407,
	128, 1407,
	-2, 1035,
	-1, 604,
	98, 1408,
	128, 1408,
	-2, 1036,
	-1, 605,
	98, 1290,
	128, 1290,
	-2, 1040,
	-1, 607,
	98, 1384,
	128, 1384,
	-2, 1042,
	-1, 1066,
	1, 718,
	5, 718,
	12, 718,
	13, 718,
	14, 718,
	15, 718,
	17, 718,
	19, 718,
	30, 718,
	31, 718,
	56, 718,
	57, 718,
	58, 718,
	59, 718,
	60, 718,
	62, 718,
	63, 718,
	66, 718,
	67, 718,
	69, 718,
	70, 718,
	475, 718,
	-2, 748,
	-1, 1070,
	67, 68,
	69, 68,
	-2, 72,
	-1, 1300,
	128, 1087,
	-2, 1083,
	-1, 1469,
	68, 476,
	-2, 1253,
	-1, 1472,
	68, 472,
	72, 472,
	-2, 1180,
	-1, 1473,
	68, 473,
	72, 473,
	-2, 1190,
	-1, 1590,
	44, 519,
	148, 521,
	150, 519,
	151, 519,
	-2, 559,
	-1, 1666,
	5, 52,
	-2, 814,
	-1, 1972,
	69, 1232,
	70, 1232,
	128, 1232,
	-2, 673,
	-1, 1995,
	1, 769,
	5, 769,
	12, 769,
	13, 769,
	14, 769,
	15, 769,
	17, 769,
	19, 769,
	30, 769,
	31, 769,
	56, 769,
	57, 769,
	58, 769,
	59, 769,
	60, 769,
	62, 769,
	63, 769,
	66, 769,
	67, 769,
	69, 769,
	70, 769,
	475, 769,
	-2, 748,
	-1, 2098,
	148, 522,
	-2, 520,
	-1, 2161,
	5, 52,
	-2, 1006,
	-1, 2360,
	41, 1094,
	-2, 1092,
	-1, 2489,
	5, 52,
	-2, 1009,
}

const yyPrivate = 57344

const yyLast = 30557

var yyAct = [...]int{

	554, 84, 2505, 2608, 2630, 2656, 2620, 2492, 2610, 2621,
	2412, 7, 2411, 6, 2479, 793, 2380, 1517, 2410, 5,
	2413, 8, 2173, 415, 2474, 2541, 2308, 2268, 2008, 2360,
	1989, 1898, 87, 553, 1734, 1705, 1888, 621, 1965, 1190,
	1017, 1418, 483, 2248, 2362, 1474, 2506, 1515, 497, 1424,
	1529, 2058, 2219, 2203, 2225, 1101, 2009, 1762, 1897, 1422,
	1278, 1966, 832, 1815, 2493, 2091, 1466, 510, 1456, 2082,
	1706, 398, 401, 471, 97, 2409, 3, 1470, 1962, 1506,
	1066, 1588, 476, 619, 110, 84, 1619, 423, 423, 1974,
	1981, 1455, 1934, 1192, 809, 1271, 460, 1325, 499, 1462,
	1555, 1863, 1334, 1397, 1239, 1864, 1286, 1401, 1170, 1212,
	394, 1081, 1502, 1189, 616, 598, 1798, 919, 1408, 1063,
	1389, 1302, 926, 1571, 883, 1062, 862, 494, 615, 479,
	1080, 939, 590, 1490, 594, 470, 418, 1244, 930, 1908,
	922, 595, 417, 780, 601, 1035, 587, 89, 861, 1072,
	2678, 2674, 2664, 2646, 1036, 2644, 2625, 792, 2603, 2549,
	475, 86, 1237, 2043, 73, 822, 2339, 2197, 893, 1445,
	395, 396, 397, 410, 2637, 2535, 2619, 2487, 1542, 1542,
	2591, 37, 2337, 2204, 2522, 2055, 91, 92, 93, 94,
	95, 2206, 37, 2534, 37, 37, 1955, 2340, 2352, 1826,
	1641, 2153, 1601, 2391, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 1600, 779, 965, 1700,
	1570, 1743, 2293, 814, 1742, 1442, 1443, 1744, 37, 2003,
	76, 40, 41, 1420, 2004, 2005, 1701, 1266, 1267, 913,
	1243, 2486, 1082, 85, 1083, 1441, 836, 837, 835, 782,
	1781, 785, 786, 409, 85, 408, 85, 85, 1476, 1605,
	2209, 1569, 611, 1241, 1242, 617, 880, 569, 1599, 575,
	577, 576, 573, 574, 572, 571, 570, 1491, 122, 118,
	119, 1478, 120, 820, 412, 1478, 2140, 1503, 578, 579,
	85, 813, 817, 113, 2138, 819, 76, 40, 41, 2207,
	2208, 2210, 2211, 2212, 1482, 1484, 388, 1483, 1240, 1496,
	1224, 1491, 407, 468, 2454, 124, 123, 846, 42, 1597,
	1591, 1592, 1773, 1590, 2220, 1593, 1594, 2277, 815, 818,
	1821, 816, 2223, 2342, 1852, 2616, 103, 1778, 1777, 2226,
	2227, 2228, 2229, 2365, 2081, 2221, 2222, 2056, 1857, 1825,
	1581, 2551, 2512, 2059, 2060, 2061, 2062, 2063, 2550, 1774,
	1603, 1606, 2065, 2458, 2237, 821, 821, 125, 2338, 126,
	2244, 2557, 1582, 2448, 1779, 1257, 1766, 1823, 842, 1530,
	2235, 821, 1767, 2510, 2634, 116, 492, 2546, 2327, 105,
	2494, 84, 84, 102, 2059, 2060, 2061, 2062, 2063, 115,
	114, 851, 833, 853, 834, 836, 837, 899, 2332, 852,
	900, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 2544, 2545, 2331, 402, 2330, 2329, 2328,
	2326, 2538, 2539, 389, 2407, 2456, 131, 1524, 1245, 131,
	2356, 1776, 111, 2068, 831, 131, 2444, 2445, 2175, 2334,
	828, 1935, 112, 1726, 2605, 1843, 1844, 827, 426, 426,
	2618, 843, 844, 399, 908, 1523, 850, 854, 403, 2590,
	131, 2450, 916, 117, 1247, 88, 1336, 1246, 107, 2475,
	108, 131, 829, 830, 1598, 131, 624, 784, 783, 131,
	1891, 974, 121, 1937, 976, 1402, 2249, 2250, 2405, 2670,
	1100, 1824, 2042, 131, 426, 812, 624, 2392, 1505, 1225,
	2660, 411, 1596, 2205, 131, 1788, 847, 2460, 2097, 1481,
	2343, 2083, 1576, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1602, 1491, 1015, 2599, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 485, 1034,
	1037, 1037, 1037, 1043, 1037, 1037, 1043, 1037, 1043, 1052,
	1053, 1054, 1055, 1056, 1057, 77, 1067, 83, 2485, 895,
	896, 897, 975, 2449, 2353, 1827, 901, 400, 83, 2455,
	83, 83, 1604, 104, 2355, 2335, 2511, 2067, 1243, 400,
	905, 1816, 1939, 1073, 400, 1870, 391, 1943, 1775, 1938,
	2614, 1936, 2309, 2609, 2679, 1100, 1941, 1061, 907, 2014,
	1016, 1241, 1242, 2128, 83, 2658, 2311, 2612, 2659, 1940,
	2657, 2676, 2665, 601, 1094, 1760, 2647, 1817, 601, 823,
	1760, 77, 392, 781, 1942, 1944, 421, 1100, 419, 422,
	1099, 795, 113, 1885, 845, 891, 954, 953, 963, 964,
	956, 957, 958, 959, 960, 961, 962, 955, 2012, 2260,
	965, 1427, 1429, 1100, 1069, 1760, 466, 2014, 467, 467,
	2261, 1851, 1848, 1760, 1829, 1828, 1577, 1178, 1176, 1539,
	1760, 848, 1159, 1163, 1538, 1733, 1732, 2310, 1731, 777,
	1085, 1846, 911, 787, 359, 1086, 1038, 1040, 1042, 1044,
	1046, 1048, 1049, 1051, 1556, 1039, 1041, 1763, 1045, 1047,
	1098, 1050, 1676, 1071, 1818, 1819, 977, 978, 1076, 2125,
	2117, 890, 1759, 2264, 1850, 100, 131, 1759, 1880, 1870,
	1849, 624, 624, 1877, 1870, 1747, 1876, 1879, 1100, 1739,
	1095, 1873, 1871, 1428, 1636, 1624, 400, 624, 115, 114,
	1609, 1281, 1093, 1872, 1078, 2611, 2613, 945, 1872, 1673,
	805, 2453, 1759, 1446, 965, 1884, 1427, 1429, 955, 1881,
	1759, 965, 2032, 2077, 1437, 131, 1222, 1759, 1274, 938,
	1889, 2259, 423, 1213, 1546, 1309, 936, 825, 821, 420,
	1172, 811, 794, 1979, 838, 821, 821, 821, 1390, 423,
	1307, 1308, 1306, 938, 2542, 1171, 2571, 1191, 2570, 1957,
	821, 954, 953, 963, 964, 956, 957, 958, 959, 960,
	961, 962, 955, 1194, 2033, 965, 2265, 1978, 1279, 1280,
	977, 978, 1232, 131, 963, 964, 956, 957, 958, 959,
	960, 961, 962, 955, 1091, 949, 965, 952, 1428, 2650,
	2631, 2649, 942, 855, 966, 967, 968, 969, 970, 971,
	972, 1220, 950, 951, 948, 954, 953, 963, 964, 956,
	957, 958, 959, 960, 961, 962, 955, 977, 978, 965,
	1214, 1547, 788, 1196, 826, 810, 2663, 423, 840, 84,
	937, 936, 2600, 821, 1255, 1390, 1270, 1689, 1165, 1235,
	2236, 2230, 1208, 1209, 2020, 1211, 933, 2515, 938, 465,
	100, 1173, 1252, 797, 798, 799, 800, 801, 802, 803,
	1671, 1180, 1670, 1216, 1261, 1217, 958, 959, 960, 961,
	962, 955, 937, 936, 965, 927, 1199, 1200, 2507, 2667,
	937, 936, 2508, 937, 936, 946, 2490, 937, 936, 2542,
	938, 131, 131, 131, 2602, 99, 2671, 84, 938, 937,
	936, 938, 1303, 1300, 1263, 938, 2543, 624, 956, 957,
	958, 959, 960, 961, 962, 955, 1269, 938, 965, 85,
	937, 936, 2350, 2349, 1250, 1227, 1228, 1959, 2509, 1230,
	1305, 937, 936, 98, 1069, 2348, 918, 1260, 938, 2347,
	1019, 1672, 584, 585, 1283, 1233, 1248, 2341, 1251, 938,
	2672, 1018, 1249, 2569, 2196, 1262, 1804, 1256, 2195, 1298,
	1259, 1621, 1622, 1623, 1033, 1803, 923, 1304, 1284, 924,
	1268, 1285, 1016, 937, 936, 954, 953, 963, 964, 956,
	957, 958, 959, 960, 961, 962, 955, 1801, 1421, 965,
	2583, 938, 1296, 1067, 2451, 1375, 1378, 1067, 1292, 1294,
	1295, 1782, 1272, 1391, 1293, 937, 936, 1326, 1745, 1327,
	1746, 1195, 886, 885, 859, 1368, 2582, 1343, 1201, 1202,
	1203, 1347, 2554, 938, 489, 1329, 1330, 2552, 2521, 2447,
	2446, 1299, 2404, 1210, 1432, 2357, 1194, 858, 1434, 1516,
	2452, 2325, 2287, 2233, 2232, 2231, 1332, 2193, 601, 2025,
	1340, 1300, 1799, 1566, 1229, 1197, 2568, 2457, 2402, 1349,
	1350, 1417, 1426, 1016, 2374, 1410, 1413, 1414, 1415, 1411,
	1360, 1412, 1416, 1763, 1364, 1982, 1983, 414, 2368, 2257,
	2112, 891, 2108, 2099, 624, 821, 1069, 821, 2069, 2053,
	1387, 1069, 426, 426, 2052, 1069, 2051, 1452, 1430, 1837,
	1836, 131, 1560, 1159, 131, 1544, 1543, 1451, 1328, 426,
	426, 1226, 131, 1223, 624, 1536, 1265, 1188, 1187, 1186,
	1185, 624, 624, 624, 131, 131, 131, 1174, 1168, 1907,
	1435, 131, 1463, 1167, 1439, 1444, 624, 1534, 1535, 1166,
	1164, 1438, 1043, 881, 807, 1453, 1460, 406, 426, 404,
	459, 2300, 2592, 1508, 1509, 1510, 1511, 2184, 2589, 2528,
	918, 1512, 1513, 2184, 2526, 2184, 2524, 2184, 2406, 2300,
	2398, 1492, 1493, 1494, 1495, 2300, 2315, 2300, 918, 1450,
	2300, 2299, 1457, 617, 1504, 515, 514, 517, 518, 519,
	520, 84, 2184, 2183, 516, 521, 1179, 426, 426, 426,
	1074, 624, 2165, 918, 918, 426, 1680, 898, 1198, 88,
	426, 426, 1608, 918, 2119, 1735, 2040, 2039, 131, 624,
	1625, 131, 1735, 624, 2036, 2037, 1074, 1548, 2036, 2035,
	1634, 918, 1554, 2367, 1568, 1218, 1405, 918, 2366, 1300,
	2319, 131, 1579, 1578, 1366, 1563, 2318, 942, 1366, 918,
	1097, 1096, 1963, 2048, 2026, 1977, 1075, 1392, 1077, 1735,
	1303, 1528, 1977, 1366, 85, 918, 1016, 1431, 1276, 1073,
	88, 2530, 2120, 902, 903, 1018, 889, 2159, 1561, 1405,
	1562, 1542, 1075, 1567, 1073, 888, 2049, 1558, 889, 2038,
	1991, 1861, 1574, 624, 1749, 1451, 2120, 1440, 1634, 1404,
	1580, 1527, 1694, 1583, 954, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 1977, 1693, 965, 1275,
	1613, 1585, 1702, 1704, 1634, 1304, 1067, 1067, 1067, 1067,
	1067, 1630, 891, 1289, 1290, 1231, 1611, 1612, 1405, 1541,
	1277, 1258, 1421, 1238, 1727, 1177, 1175, 1079, 1626, 915,
	914, 2536, 1067, 2525, 1990, 2373, 612, 2371, 2198, 624,
	624, 1478, 1708, 2171, 1507, 2019, 131, 1299, 1519, 1503,
	1521, 1982, 1983, 1707, 131, 131, 1753, 1525, 1498, 131,
	131, 1497, 1160, 131, 131, 131, 894, 1737, 1664, 1738,
	878, 1557, 1620, 1736, 85, 2641, 1730, 1703, 2639, 2622,
	2047, 1640, 1642, 624, 624, 1985, 1963, 1805, 601, 1182,
	904, 1722, 1652, 1653, 1654, 1655, 1018, 1368, 85, 1729,
	892, 1373, 1374, 887, 1069, 1069, 1069, 1069, 1069, 1688,
	1410, 1413, 1414, 1415, 1411, 1988, 1412, 1416, 84, 1720,
	1069, 1414, 1415, 1987, 1750, 1715, 1710, 1711, 1764, 1713,
	1069, 1709, 1718, 1716, 1712, 1721, 1714, 1719, 1717, 480,
	481, 821, 2565, 2533, 821, 821, 1758, 1761, 1895, 1159,
	131, 624, 1740, 624, 1610, 1085, 1287, 931, 932, 2563,
	131, 2162, 131, 131, 426, 426, 426, 1171, 1449, 131,
	1748, 1618, 1617, 423, 2290, 1752, 2256, 1765, 2187, 2107,
	1835, 1842, 1832, 2106, 2024, 2146, 929, 2023, 1757, 2462,
	2465, 2520, 2519, 1807, 2361, 2553, 2359, 2443, 2442, 405,
	131, 131, 131, 1840, 1792, 979, 980, 981, 982, 983,
	984, 985, 986, 1783, 1784, 1800, 2344, 2345, 1802, 1092,
	1790, 1457, 920, 876, 860, 131, 857, 131, 856, 808,
	1797, 624, 2266, 2578, 921, 624, 1822, 1514, 2378, 2377,
	2157, 1565, 1915, 624, 1279, 1280, 624, 1839, 2238, 1520,
	1181, 2513, 2363, 1892, 1808, 2239, 931, 932, 2577, 1553,
	1791, 1838, 1793, 1794, 1795, 1796, 2156, 100, 1865, 1878,
	1883, 1162, 1845, 1847, 1300, 954, 953, 963, 964, 956,
	957, 958, 959, 960, 961, 962, 955, 909, 910, 965,
	1867, 1853, 1860, 1874, 1477, 1886, 1887, 1875, 1859, 1890,
	1862, 2576, 1968, 84, 2575, 1868, 954, 953, 963, 964,
	956, 957, 958, 959, 960, 961, 962, 955, 1616, 1956,
	965, 2322, 841, 477, 2556, 2555, 1615, 1993, 1902, 1901,
	1910, 2517, 1997, 1998, 1999, 1967, 1964, 1906, 1708, 2466,
	1976, 2382, 2275, 478, 88, 2381, 2269, 1735, 2086, 1707,
	1810, 1811, 1812, 2642, 927, 2643, 2642, 90, 1858, 1856,
	1992, 1855, 1677, 1674, 1584, 1946, 1215, 2000, 934, 1945,
	2643, 2002, 2395, 2022, 1893, 1894, 1273, 612, 1969, 1996,
	1954, 462, 464, 1916, 2423, 54, 1919, 1920, 1921, 57,
	1900, 1924, 131, 131, 131, 131, 131, 1, 1971, 2425,
	19, 1575, 1299, 1986, 131, 2424, 18, 1253, 131, 2155,
	2426, 20, 131, 917, 2427, 21, 2017, 1994, 131, 2018,
	2007, 2013, 2218, 2016, 1830, 2045, 2046, 1833, 1834, 2422,
	15, 2421, 14, 2015, 2415, 10, 2436, 35, 1512, 423,
	1513, 2006, 624, 1665, 2435, 34, 2217, 2064, 2224, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 2434, 30, 965, 2433, 29, 2054, 1690, 1272, 2071,
	2432, 28, 2050, 2430, 25, 2057, 2066, 1820, 954, 953,
	963, 964, 956, 957, 958, 959, 960, 961, 962, 955,
	2429, 24, 965, 1270, 2431, 26, 2420, 13, 2417, 12,
	2416, 11, 2234, 624, 2414, 9, 1169, 2333, 791, 1526,
	882, 2518, 2461, 1900, 426, 1457, 2463, 1457, 2358, 2029,
	2240, 2202, 2201, 2095, 1814, 1813, 877, 624, 131, 426,
	624, 624, 2118, 2072, 1236, 1866, 1869, 1537, 1595, 2473,
	2145, 2121, 1464, 2089, 426, 1219, 1454, 2088, 2127, 614,
	96, 2096, 2111, 2027, 2028, 1545, 2151, 1159, 824, 2254,
	2031, 367, 2076, 1461, 426, 2080, 624, 2034, 1771, 2084,
	2085, 426, 2087, 2116, 2464, 2094, 879, 1770, 1780, 2074,
	1475, 1769, 1768, 2459, 1772, 1105, 2100, 1103, 1104, 1102,
	1107, 1069, 1106, 371, 1087, 624, 624, 2500, 935, 106,
	58, 131, 2258, 1882, 1589, 101, 109, 373, 973, 2166,
	1614, 624, 1741, 599, 495, 1708, 600, 592, 2537, 2136,
	2179, 2180, 2181, 925, 1398, 2476, 1707, 1687, 624, 1032,
	954, 953, 963, 964, 956, 957, 958, 959, 960, 961,
	962, 955, 2189, 2158, 965, 2177, 1388, 84, 2167, 498,
	1725, 2478, 1301, 1291, 513, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	2178, 512, 511, 2188, 508, 1750, 509, 1552, 1282, 1699,
	947, 2041, 496, 2182, 487, 1065, 427, 427, 1058, 624,
	2190, 624, 1564, 1409, 1407, 1406, 1183, 588, 473, 1984,
	1980, 1419, 1064, 469, 74, 839, 390, 2214, 2215, 2216,
	2152, 2390, 39, 2213, 624, 463, 482, 27, 17, 849,
	1067, 22, 2199, 16, 1587, 789, 43, 46, 45, 1809,
	1522, 2499, 427, 1381, 624, 2607, 624, 2241, 624, 863,
	624, 2629, 1393, 2253, 2540, 33, 2242, 2246, 2251, 2252,
	2243, 32, 2271, 2272, 31, 2262, 2247, 2428, 2437, 2419,
	1968, 2270, 2418, 1968, 2295, 2013, 1958, 2594, 23, 2192,
	2593, 2194, 1457, 4, 2255, 906, 1993, 75, 2263, 36,
	610, 2, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 1967, 2298, 0, 1967, 0, 0, 2191,
	2245, 2292, 0, 0, 0, 0, 0, 0, 0, 2301,
	426, 0, 2001, 0, 0, 131, 426, 2321, 1069, 2323,
	0, 2291, 0, 0, 0, 0, 0, 2320, 0, 0,
	0, 0, 0, 131, 0, 426, 2302, 624, 426, 2294,
	0, 2312, 426, 426, 0, 426, 2313, 2314, 2307, 2297,
	1426, 0, 2303, 0, 0, 0, 2324, 0, 0, 0,
	0, 0, 0, 0, 0, 624, 0, 2379, 2276, 131,
	624, 2336, 0, 0, 0, 0, 0, 624, 624, 2346,
	0, 0, 2351, 2267, 0, 0, 0, 2354, 2364, 0,
	0, 1900, 0, 0, 1968, 0, 84, 2369, 2370, 0,
	0, 0, 0, 0, 0, 2383, 0, 2376, 0, 0,
	0, 0, 2372, 0, 2384, 0, 2385, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 1967, 0, 0,
	1341, 1342, 2396, 0, 2401, 0, 0, 0, 0, 0,
	0, 1352, 1353, 1354, 1355, 0, 0, 2403, 0, 0,
	0, 0, 0, 2400, 1365, 1367, 0, 0, 0, 0,
	131, 1372, 2316, 0, 2317, 2113, 0, 1067, 0, 0,
	2408, 2397, 0, 0, 0, 485, 0, 624, 0, 0,
	0, 0, 0, 0, 624, 624, 624, 0, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	2469, 0, 2471, 2467, 0, 0, 624, 0, 2468, 0,
	0, 2481, 1627, 1628, 1629, 0, 2482, 0, 2483, 0,
	2470, 0, 0, 0, 0, 0, 2495, 0, 0, 0,
	0, 2488, 0, 1708, 131, 0, 2154, 0, 0, 0,
	0, 0, 84, 0, 1707, 1018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 2169, 0, 0, 2170,
	0, 0, 2172, 0, 0, 1069, 0, 0, 0, 0,
	1018, 0, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 1682, 1683,
	2514, 2516, 0, 0, 0, 0, 0, 0, 2531, 0,
	943, 0, 0, 2523, 624, 0, 131, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	2401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2559, 0, 2561, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 84, 2564, 2574, 0, 0, 0,
	84, 2558, 624, 2562, 2560, 2567, 2547, 0, 624, 2566,
	1559, 0, 0, 131, 0, 131, 2572, 0, 0, 0,
	0, 624, 84, 423, 2601, 2588, 0, 84, 2598, 0,
	2597, 2587, 0, 0, 2604, 624, 2596, 0, 2595, 0,
	0, 0, 0, 0, 0, 0, 2581, 2617, 0, 0,
	84, 1586, 2624, 84, 84, 2626, 2504, 0, 84, 1607,
	0, 2623, 0, 0, 0, 0, 0, 0, 0, 2636,
	0, 0, 0, 0, 0, 0, 84, 0, 2640, 84,
	2638, 2648, 423, 1158, 2651, 0, 0, 2653, 0, 608,
	2635, 0, 0, 620, 0, 84, 0, 84, 624, 2661,
	2581, 84, 2606, 2666, 2632, 0, 0, 0, 0, 0,
	0, 1841, 0, 796, 0, 84, 1632, 0, 84, 0,
	2675, 1635, 2581, 2144, 0, 84, 1637, 1638, 0, 84,
	0, 1643, 1644, 1645, 1646, 1647, 1648, 624, 0, 1651,
	0, 2581, 0, 2581, 1656, 1657, 1658, 1659, 0, 1661,
	1662, 1663, 0, 0, 0, 0, 1666, 1667, 1668, 1669,
	0, 2581, 0, 0, 2579, 1675, 0, 0, 1678, 1679,
	0, 2581, 0, 1684, 1685, 2581, 0, 0, 0, 1691,
	0, 1692, 0, 0, 1695, 1696, 1904, 1697, 1698, 0,
	0, 0, 0, 0, 0, 0, 1068, 0, 485, 0,
	426, 0, 1018, 131, 0, 0, 1723, 1724, 624, 0,
	624, 0, 0, 954, 953, 963, 964, 956, 957, 958,
	959, 960, 961, 962, 955, 0, 0, 965, 1947, 1948,
	0, 1949, 1950, 0, 0, 1951, 0, 0, 0, 2143,
	0, 0, 131, 0, 0, 0, 128, 0, 1960, 1961,
	427, 427, 0, 1479, 1480, 393, 1485, 1486, 1487, 1488,
	1489, 0, 0, 0, 0, 0, 0, 427, 427, 0,
	0, 0, 0, 0, 1499, 1500, 1501, 624, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 589, 0, 0, 0, 613, 0, 1911, 1912, 778,
	0, 0, 0, 0, 1917, 1918, 427, 0, 2477, 2480,
	0, 0, 624, 790, 0, 0, 1925, 1926, 1927, 1928,
	0, 1930, 1931, 1932, 804, 0, 0, 0, 2021, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 427, 427, 620, 620,
	0, 0, 624, 427, 0, 2496, 2497, 0, 427, 427,
	0, 0, 0, 624, 620, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 624, 0, 37, 38, 76,
	40, 41, 0, 0, 426, 2073, 0, 0, 0, 0,
	0, 64, 0, 0, 0, 943, 0, 82, 0, 0,
	0, 42, 68, 69, 0, 0, 0, 0, 65, 0,
	0, 1905, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1922, 1923, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 1929, 85,
	0, 0, 1933, 426, 0, 0, 0, 2480, 2123, 0,
	0, 0, 0, 1333, 1338, 1339, 0, 0, 0, 2573,
	1344, 1345, 1346, 0, 1348, 0, 0, 1351, 0, 0,
	0, 0, 1356, 1357, 1358, 1359, 0, 1361, 1362, 1363,
	1970, 0, 0, 0, 0, 1369, 1370, 1371, 0, 0,
	0, 1377, 1380, 0, 1385, 1386, 0, 2148, 2149, 2150,
	0, 0, 44, 78, 48, 47, 50, 0, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1396,
	0, 1399, 1400, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 81, 80, 0, 0, 59,
	60, 49, 0, 0, 0, 0, 806, 0, 2652, 0,
	0, 0, 0, 0, 1158, 2124, 70, 0, 383, 0,
	0, 0, 0, 2126, 0, 0, 0, 0, 0, 0,
	0, 0, 2129, 2130, 0, 0, 0, 0, 608, 2131,
	0, 0, 0, 608, 1088, 0, 0, 62, 63, 0,
	0, 0, 0, 0, 0, 884, 0, 380, 0, 0,
	0, 0, 0, 0, 71, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1786, 1787, 1789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 427, 427, 0, 0, 53, 79, 0,
	55, 56, 66, 0, 67, 0, 0, 0, 0, 360,
	0, 0, 0, 912, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 2278, 2279,
	2280, 2281, 0, 0, 0, 473, 2285, 0, 0, 0,
	2288, 2289, 369, 0, 0, 370, 0, 0, 378, 379,
	0, 0, 2132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2141, 2142, 0, 0, 0, 1953, 2147,
	0, 0, 0, 0, 77, 953, 963, 964, 956, 957,
	958, 959, 960, 961, 962, 955, 2160, 2161, 965, 2163,
	0, 0, 2164, 0, 0, 0, 0, 0, 0, 375,
	0, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1060, 2176, 1070, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 83, 0, 1952, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 1633, 620, 620,
	620, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 0, 0, 620, 1649, 1650, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 1660, 954, 953, 963, 964,
	956, 957, 958, 959, 960, 961, 962, 955, 0, 0,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 374, 364, 365, 0, 386,
	0, 0, 0, 366, 368, 0, 362, 385, 384, 0,
	0, 0, 473, 0, 0, 0, 0, 0, 1254, 0,
	473, 0, 0, 954, 953, 963, 964, 956, 957, 958,
	959, 960, 961, 962, 955, 0, 620, 965, 0, 0,
	620, 0, 0, 0, 0, 2274, 0, 0, 0, 377,
	1903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 2472, 2030, 0, 0, 2282, 2283, 2284, 620,
	2286, 954, 953, 963, 964, 956, 957, 958, 959, 960,
	961, 962, 955, 0, 0, 965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2304, 2305, 2306,
	0, 0, 0, 0, 1631, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 589, 427, 0, 1184, 954, 953, 963, 964, 956,
	957, 958, 959, 960, 961, 962, 955, 427, 0, 965,
	0, 0, 0, 0, 1204, 1205, 1206, 0, 0, 0,
	0, 1207, 427, 0, 0, 0, 0, 0, 608, 954,
	953, 963, 964, 956, 957, 958, 959, 960, 961, 962,
	955, 0, 427, 965, 0, 0, 1394, 1395, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2386, 2387, 2388, 2389,
	0, 0, 0, 608, 0, 0, 2393, 2394, 0, 0,
	2133, 2134, 0, 2135, 0, 0, 2137, 620, 2139, 0,
	620, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 1288, 0, 2615, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2185, 2186, 0, 620, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 2484, 0,
	387, 0, 0, 0, 0, 2489, 129, 0, 0, 0,
	0, 2654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 2011, 486,
	0, 0, 591, 609, 0, 0, 129, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 1573, 0, 129, 0, 0, 0, 0, 0,
	1573, 0, 0, 1573, 0, 129, 1403, 0, 0, 0,
	0, 2527, 0, 37, 0, 76, 40, 41, 0, 0,
	1433, 2532, 0, 0, 0, 620, 0, 64, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 42, 427, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 0, 427, 0, 0, 0,
	427, 427, 0, 427, 0, 85, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 2102, 2104, 0, 0, 0, 0, 0, 0, 2438,
	0, 2093, 2628, 2631, 2627, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1531, 0, 1532, 1533, 0, 0, 0, 0, 0, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 78,
	48, 47, 50, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, 0, 2439, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	51, 81, 80, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 0, 608, 0, 884, 0, 0, 473, 0,
	0, 0, 2668, 2669, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 63, 0, 2440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	71, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2441, 79, 0, 55, 56, 66, 0,
	67, 0, 0, 0, 620, 0, 129, 620, 620, 0,
	0, 0, 0, 0, 0, 2548, 0, 0, 0, 0,
	0, 427, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	1114, 0, 620, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 620, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 1914, 0, 0, 0, 0,
	0, 473, 1128, 473, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 620, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 129, 129, 0, 0, 0, 0, 0,
	0, 1975, 609, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 620, 0, 620, 0, 620, 0, 2010, 0, 0,
	1141, 1144, 1145, 1146, 1147, 1148, 1149, 0, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 0, 1129, 1130, 1131, 1132,
	1108, 1112, 1142, 1109, 1115, 1111, 1113, 1110, 0, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 2011, 37, 2011, 76,
	40, 41, 0, 0, 2079, 0, 0, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 0, 0, 0, 0, 2110, 0, 0,
	0, 0, 0, 0, 2114, 2115, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 129, 2438, 0, 129, 0, 454, 2677, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 129, 129, 1754, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 78, 48, 47, 50, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 0, 0, 2439, 0,
	0, 0, 0, 0, 2174, 0, 0, 0, 0, 0,
	2011, 2174, 2174, 2174, 51, 81, 80, 0, 0, 0,
	620, 49, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2174, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 2070, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 472, 2075, 0, 0, 0, 62, 63, 0,
	2440, 0, 0, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 129, 0, 71, 0, 72, 0, 0, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 2109,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 37,
	0, 76, 40, 41, 0, 0, 0, 2441, 79, 0,
	55, 56, 66, 64, 67, 0, 0, 0, 0, 82,
	0, 620, 0, 42, 0, 0, 1337, 1337, 1337, 620,
	0, 0, 1337, 1337, 1337, 1337, 1337, 1337, 0, 0,
	1337, 0, 0, 0, 0, 1337, 1337, 1337, 1337, 0,
	1337, 1337, 1337, 0, 0, 0, 0, 0, 1337, 1337,
	1337, 85, 0, 0, 1337, 1337, 0, 1337, 1337, 2296,
	0, 0, 609, 0, 0, 2174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2438, 0, 0, 2010, 0,
	2673, 0, 1337, 1337, 1337, 1337, 0, 129, 0, 0,
	0, 0, 2010, 0, 77, 129, 472, 0, 0, 0,
	129, 129, 0, 0, 129, 1436, 1193, 609, 0, 0,
	0, 0, 0, 0, 44, 78, 48, 47, 50, 0,
	0, 1193, 0, 0, 0, 0, 0, 0, 0, 0,
	2439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 2200, 0, 51, 81, 80, 0,
	0, 0, 0, 49, 0, 2375, 428, 429, 430, 431,
	432, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 433, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 2399, 0, 0, 0, 0, 62,
	63, 129, 2440, 129, 129, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 71, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 1550, 129, 0, 0, 0, 0, 0, 2441,
	79, 0, 55, 56, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 129, 2010, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1337, 0, 0, 0, 0, 0, 1128, 0, 1337, 2529,
	0, 0, 0, 0, 0, 0, 0, 1337, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1337, 0,
	0, 0, 1337, 0, 0, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2174, 0, 609, 129, 129, 129, 129, 129, 0, 0,
	0, 0, 620, 0, 0, 472, 0, 0, 0, 129,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 609, 0, 0,
	0, 0, 0, 0, 1141, 1144, 1145, 1146, 1147, 1148,
	1149, 0, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 0,
	1129, 1130, 1131, 1132, 1108, 1112, 1142, 1109, 1115, 1111,
	1113, 1110, 2491, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 37, 0, 76, 40, 41, 0, 0, 0,
	37, 0, 76, 40, 41, 0, 64, 0, 0, 0,
	0, 0, 82, 0, 64, 0, 42, 0, 0, 0,
	82, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2438, 0,
	1143, 0, 0, 2662, 0, 0, 2438, 0, 0, 0,
	0, 2645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 44, 78, 48,
	47, 50, 0, 1337, 0, 44, 78, 48, 47, 50,
	0, 0, 1337, 2439, 1193, 0, 0, 0, 0, 0,
	0, 2439, 0, 0, 0, 0, 0, 0, 0, 51,
	81, 80, 0, 0, 0, 0, 49, 51, 81, 80,
	0, 0, 0, 37, 49, 76, 40, 41, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 62, 63, 0, 2440, 0, 0, 0, 0,
	62, 63, 0, 2440, 0, 0, 0, 0, 0, 71,
	0, 72, 0, 0, 0, 85, 2633, 71, 0, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2438,
	0, 0, 2441, 79, 0, 55, 56, 66, 0, 67,
	2441, 79, 0, 55, 56, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 78,
	48, 47, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 129, 2439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 81, 80, 2098, 0, 0, 129, 49, 0, 0,
	0, 37, 0, 76, 40, 41, 0, 0, 0, 37,
	0, 76, 40, 41, 129, 64, 0, 0, 0, 77,
	0, 82, 0, 64, 0, 42, 0, 77, 0, 82,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 62, 63, 0, 2440, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 2090, 0, 0,
	71, 2092, 72, 85, 0, 0, 486, 0, 83, 0,
	0, 85, 0, 0, 1100, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2438, 0, 0,
	0, 0, 2580, 2441, 79, 2438, 55, 56, 66, 0,
	67, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 78, 48, 47,
	50, 0, 0, 0, 44, 78, 48, 47, 50, 0,
	0, 472, 2439, 0, 0, 609, 0, 0, 0, 0,
	2439, 0, 0, 0, 0, 0, 0, 0, 51, 81,
	80, 0, 0, 0, 0, 49, 51, 81, 80, 0,
	448, 0, 0, 49, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 63, 0, 2440, 129, 0, 0, 0, 62,
	63, 0, 2440, 0, 0, 0, 0, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 71, 0, 72, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2441, 79, 0, 55, 56, 66, 0, 67, 2441,
	79, 0, 55, 56, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 430, 431, 432, 436, 437, 441, 442,
	451, 450, 449, 452, 453, 456, 455, 457, 433, 434,
	435, 438, 439, 440, 443, 444, 447, 445, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 428,
	429, 430, 431, 432, 436, 437, 441, 442, 451, 450,
	449, 452, 453, 456, 455, 457, 433, 434, 435, 438,
	439, 440, 443, 444, 447, 445, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 0, 0, 0, 0, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 738, 322,
	688, 761, 656, 674, 773, 677, 680, 721, 640, 701,
	255, 672, 641, 0, 660, 630, 667, 631, 657, 690,
	179, 655, 740, 704, 760, 213, 717, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 759, 696, 0, 767,
	216, 0, 713, 768, 311, 239, 0, 0, 692, 747,
	699, 736, 687, 723, 649, 712, 762, 673, 719, 763,
	0, 0, 0, 0, 2498, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 129, 716, 757, 670, 718, 720,
	628, 715, 0, 635, 642, 772, 753, 663, 664, 665,
	0, 0, 0, 0, 0, 0, 0, 691, 700, 731,
	684, 0, 0, 609, 0, 0, 0, 0, 0, 661,
	0, 710, 0, 129, 0, 643, 636, 0, 0, 689,
	0, 0, 0, 648, 136, 662, 732, 0, 626, 191,
	240, 148, 737, 752, 686, 204, 351, 756, 683, 682,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 730, 295, 671, 627, 741, 658, 668, 170, 666,
	288, 259, 340, 0, 707, 266, 287, 217, 329, 727,
	338, 339, 675, 776, 348, 353, 0, 697, 646, 308,
	180, 0, 138, 0, 273, 175, 209, 685, 722, 659,
	166, 728, 711, 746, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 2501, 2502, 2503, 0, 0, 0,
	0, 345, 681, 298, 297, 676, 200, 735, 714, 632,
	282, 725, 205, 137, 319, 356, 153, 211, 324, 625,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 669, 726, 341, 734, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 633, 0, 313,
	343, 358, 156, 654, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 652, 653, 650, 0, 651,
	702, 703, 764, 765, 766, 733, 645, 0, 748, 749,
	0, 0, 0, 0, 0, 739, 754, 755, 724, 774,
	678, 679, 634, 637, 638, 639, 647, 693, 694, 706,
	709, 744, 743, 742, 745, 750, 770, 769, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 135, 144, 215, 775, 281, 186, 344, 629, 177,
	0, 695, 698, 708, 729, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 751, 758, 738, 322, 688,
	761, 656, 674, 773, 677, 680, 721, 640, 701, 255,
	672, 641, 0, 660, 630, 667, 631, 657, 690, 179,
	655, 740, 704, 760, 213, 717, 0, 169, 221, 219,
	0, 0, 0, 262, 321, 759, 696, 0, 767, 216,
	0, 713, 768, 311, 239, 0, 0, 692, 747, 699,
	736, 687, 723, 649, 712, 762, 673, 719, 763, 0,
	0, 0, 0, 623, 0, 1458, 1459, 0, 0, 0,
	0, 0, 644, 0, 716, 757, 670, 718, 720, 628,
	715, 0, 635, 642, 772, 753, 663, 664, 665, 1751,
	0, 0, 0, 0, 0, 0, 691, 700, 731, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	710, 0, 0, 0, 643, 636, 0, 0, 689, 0,
	0, 0, 648, 136, 662, 732, 0, 626, 191, 240,
	148, 737, 752, 686, 204, 351, 756, 683, 682, 276,
	0, 316, 194, 214, 152, 132, 146, 162, 193, 251,
	730, 295, 671, 627, 741, 658, 668, 170, 666, 288,
	259, 340, 0, 707, 266, 287, 217, 329, 727, 338,
	339, 675, 776, 348, 353, 0, 697, 646, 308, 180,
	0, 138, 0, 273, 175, 209, 685, 722, 659, 166,
	728, 711, 746, 307, 327, 154, 323, 238, 244, 163,
	165, 164, 147, 302, 326, 158, 168, 312, 291, 317,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 681, 298, 297, 676, 200, 735, 714, 632, 282,
	725, 205, 137, 319, 356, 153, 211, 324, 625, 187,
	250, 172, 260, 261, 184, 134, 278, 232, 233, 231,
	234, 669, 726, 341, 734, 167, 280, 139, 320, 337,
	159, 299, 300, 354, 286, 141, 335, 315, 236, 206,
	207, 140, 0, 284, 178, 190, 173, 254, 0, 189,
	275, 332, 333, 171, 357, 149, 347, 143, 150, 346,
	247, 0, 246, 349, 328, 336, 237, 225, 0, 142,
	334, 235, 224, 212, 183, 196, 271, 220, 272, 197,
	242, 241, 243, 222, 226, 0, 633, 0, 313, 343,
	358, 156, 654, 301, 325, 0, 0, 157, 188, 182,
	270, 245, 151, 199, 310, 210, 218, 283, 355, 258,
	289, 160, 342, 309, 652, 653, 650, 0, 651, 702,
	703, 764, 765, 766, 733, 645, 0, 748, 749, 0,
	0, 0, 0, 0, 739, 754, 755, 724, 774, 678,
	679, 634, 637, 638, 639, 647, 693, 694, 706, 709,
	744, 743, 742, 745, 750, 770, 769, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	135, 144, 215, 775, 281, 186, 344, 629, 177, 0,
	695, 698, 708, 729, 133, 145, 155, 161, 176, 181,
	185, 192, 195, 198, 201, 202, 203, 208, 223, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 274, 277, 279, 285, 290,
	292, 293, 294, 296, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 751, 758, 738, 322, 688, 761,
	656, 674, 773, 677, 680, 721, 640, 701, 255, 672,
	641, 0, 660, 630, 667, 631, 657, 690, 179, 655,
	740, 704, 760, 213, 717, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 759, 696, 0, 767, 216, 0,
	713, 768, 311, 239, 0, 0, 692, 747, 699, 736,
	687, 723, 649, 712, 762, 673, 719, 763, 0, 0,
	0, 0, 623, 0, 1458, 1459, 0, 0, 0, 0,
	0, 644, 0, 716, 757, 670, 718, 720, 628, 715,
	0, 635, 642, 772, 753, 663, 664, 665, 0, 0,
	0, 0, 0, 0, 0, 691, 700, 731, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 710,
	0, 0, 0, 643, 636, 0, 0, 689, 0, 0,
	0, 648, 136, 662, 732, 0, 626, 191, 240, 148,
	737, 752, 686, 204, 351, 756, 683, 682, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 730,
	295, 671, 627, 741, 658, 668, 170, 666, 288, 259,
	340, 0, 707, 266, 287, 217, 329, 727, 338, 339,
	675, 776, 348, 353, 0, 697, 646, 308, 180, 0,
	138, 0, 273, 175, 209, 685, 722, 659, 166, 728,
	711, 746, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	681, 298, 297, 676, 200, 735, 714, 632, 282, 725,
	205, 137, 319, 356, 153, 211, 324, 625, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	669, 726, 341, 734, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 633, 0, 313, 343, 358,
	156, 654, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 652, 653, 650, 0, 651, 702, 703,
	764, 765, 766, 733, 645, 0, 748, 749, 0, 0,
	0, 0, 0, 739, 754, 755, 724, 774, 678, 679,
	634, 637, 638, 639, 647, 693, 694, 706, 709, 744,
	743, 742, 745, 750, 770, 769, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 135,
	144, 215, 775, 281, 186, 344, 629, 177, 0, 695,
	698, 708, 729, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 751, 758, 1972, 322, 688, 761, 656,
	674, 773, 677, 680, 721, 640, 701, 255, 672, 641,
	0, 660, 630, 667, 631, 657, 690, 179, 655, 740,
	704, 760, 213, 717, 0, 169, 221, 219, 0, 0,
	0, 262, 321, 759, 696, 0, 767, 216, 0, 713,
	768, 311, 239, 0, 0, 692, 747, 699, 736, 687,
	723, 649, 712, 762, 673, 719, 763, 85, 0, 918,
	0, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 0, 716, 757, 670, 718, 720, 628, 715, 0,
	635, 642, 772, 753, 663, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 691, 700, 731, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 710, 0,
	0, 0, 643, 636, 0, 0, 689, 0, 0, 0,
	648, 136, 662, 732, 0, 626, 191, 240, 148, 737,
	752, 686, 204, 351, 756, 683, 682, 276, 0, 316,
	194, 214, 152, 132, 146, 162, 193, 251, 730, 295,
	671, 627, 741, 658, 668, 170, 666, 288, 259, 340,
	0, 707, 266, 287, 217, 329, 727, 338, 339, 675,
	776, 348, 353, 0, 697, 646, 308, 180, 0, 138,
	0, 273, 175, 209, 685, 722, 659, 166, 728, 711,
	746, 307, 327, 154, 323, 238, 244, 163, 165, 164,
	147, 302, 326, 158, 168, 312, 291, 317, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 681,
	298, 297, 676, 200, 735, 714, 632, 282, 725, 205,
	137, 319, 356, 153, 211, 324, 625, 187, 250, 172,
	260, 261, 184, 134, 278, 232, 233, 231, 234, 669,
	726, 341, 734, 167, 280, 139, 320, 337, 159, 299,
	300, 354, 286, 141, 335, 315, 236, 206, 207, 140,
	0, 284, 178, 190, 173, 254, 0, 189, 275, 332,
	333, 171, 357, 149, 347, 143, 150, 346, 247, 0,
	246, 349, 328, 336, 237, 225, 0, 142, 334, 235,
	224, 212, 183, 196, 271, 220, 272, 197, 242, 241,
	243, 222, 226, 0, 633, 0, 313, 343, 358, 156,
	654, 301, 325, 0, 0, 157, 188, 182, 270, 245,
	151, 199, 310, 210, 218, 283, 355, 258, 289, 160,
	342, 309, 652, 653, 650, 0, 651, 702, 703, 764,
	765, 766, 733, 645, 0, 748, 749, 0, 0, 0,
	0, 0, 739, 754, 755, 724, 774, 678, 679, 634,
	637, 638, 639, 647, 693, 694, 706, 709, 744, 743,
	742, 745, 750, 770, 769, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 135, 144,
	215, 1973, 281, 186, 344, 629, 177, 0, 695, 698,
	708, 729, 133, 145, 155, 161, 176, 181, 185, 192,
	195, 198, 201, 202, 203, 208, 223, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 274, 277, 279, 285, 290, 292, 293,
	294, 296, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 751, 758, 738, 322, 688, 761, 656, 674,
	773, 677, 680, 721, 640, 701, 255, 672, 641, 0,
	660, 630, 667, 631, 657, 690, 179, 655, 740, 704,
	760, 213, 717, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 759, 696, 0, 767, 216, 0, 713, 768,
	311, 239, 0, 0, 692, 747, 699, 736, 687, 723,
	649, 712, 762, 673, 719, 763, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 644,
	0, 716, 757, 670, 718, 720, 628, 715, 0, 635,
	642, 772, 753, 663, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 691, 700, 731, 684, 0, 0, 0,
	0, 0, 0, 2273, 0, 661, 0, 710, 0, 0,
	0, 643, 636, 0, 0, 689, 0, 0, 0, 648,
	136, 662, 732, 0, 626, 191, 240, 148, 737, 752,
	686, 204, 351, 756, 683, 682, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 730, 295, 671,
	627, 741, 658, 668, 170, 666, 288, 259, 340, 0,
	707, 266, 287, 217, 329, 727, 338, 339, 675, 776,
	348, 353, 0, 697, 646, 308, 180, 0, 138, 0,
	273, 175, 209, 685, 722, 659, 166, 728, 711, 746,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 681, 298,
	297, 676, 200, 735, 714, 632, 282, 725, 205, 137,
	319, 356, 153, 211, 324, 625, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 669, 726,
	341, 734, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 633, 0, 313, 343, 358, 156, 654,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 652, 653, 650, 0, 651, 702, 703, 764, 765,
	766, 733, 645, 0, 748, 749, 0, 0, 0, 0,
	0, 739, 754, 755, 724, 774, 678, 679, 634, 637,
	638, 639, 647, 693, 694, 706, 709, 744, 743, 742,
	745, 750, 770, 769, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 135, 144, 215,
	775, 281, 186, 344, 629, 177, 0, 695, 698, 708,
	729, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 751, 758, 738, 322, 688, 761, 656, 674, 773,
	677, 680, 721, 640, 701, 255, 672, 641, 0, 660,
	630, 667, 631, 657, 690, 179, 655, 740, 704, 760,
	213, 717, 0, 169, 221, 219, 0, 0, 0, 262,
	321, 759, 696, 0, 767, 216, 0, 713, 768, 311,
	239, 0, 0, 692, 747, 699, 736, 687, 723, 649,
	712, 762, 673, 719, 763, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	716, 757, 670, 718, 720, 628, 715, 0, 635, 642,
	772, 753, 663, 664, 665, 0, 0, 0, 0, 0,
	0, 0, 691, 700, 731, 684, 0, 0, 0, 0,
	0, 0, 1909, 0, 661, 0, 710, 0, 0, 0,
	643, 636, 0, 0, 689, 0, 0, 0, 648, 136,
	662, 732, 0, 626, 191, 240, 148, 737, 752, 686,
	204, 351, 756, 683, 682, 276, 0, 316, 194, 214,
	152, 132, 146, 162, 193, 251, 730, 295, 671, 627,
	741, 658, 668, 170, 666, 288, 259, 340, 0, 707,
	266, 287, 217, 329, 727, 338, 339, 675, 776, 348,
	353, 0, 697, 646, 308, 180, 0, 138, 0, 273,
	175, 209, 685, 722, 659, 166, 728, 711, 746, 307,
	327, 154, 323, 238, 244, 163, 165, 164, 147, 302,
	326, 158, 168, 312, 291, 317, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 681, 298, 297,
	676, 200, 735, 714, 632, 282, 725, 205, 137, 319,
	356, 153, 211, 324, 625, 187, 250, 172, 260, 261,
	184, 134, 278, 232, 233, 231, 234, 669, 726, 341,
	734, 167, 280, 139, 320, 337, 159, 299, 300, 354,
	286, 141, 335, 315, 236, 206, 207, 140, 0, 284,
	178, 190, 173, 254, 0, 189, 275, 332, 333, 171,
	357, 149, 347, 143, 150, 346, 247, 0, 246, 349,
	328, 336, 237, 225, 0, 142, 334, 235, 224, 212,
	183, 196, 271, 220, 272, 197, 242, 241, 243, 222,
	226, 0, 633, 0, 313, 343, 358, 156, 654, 301,
	325, 0, 0, 157, 188, 182, 270, 245, 151, 199,
	310, 210, 218, 283, 355, 258, 289, 160, 342, 309,
	652, 653, 650, 0, 651, 702, 703, 764, 765, 766,
	733, 645, 0, 748, 749, 0, 0, 0, 0, 0,
	739, 754, 755, 724, 774, 678, 679, 634, 637, 638,
	639, 647, 693, 694, 706, 709, 744, 743, 742, 745,
	750, 770, 769, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 135, 144, 215, 775,
	281, 186, 344, 629, 177, 0, 695, 698, 708, 729,
	133, 145, 155, 161, 176, 181, 185, 192, 195, 198,
	201, 202, 203, 208, 223, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 268,
	269, 274, 277, 279, 285, 290, 292, 293, 294, 296,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	751, 758, 738, 322, 688, 761, 656, 674, 773, 677,
	680, 721, 640, 701, 255, 672, 641, 0, 660, 630,
	667, 631, 657, 690, 179, 655, 740, 704, 760, 213,
	717, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	759, 696, 0, 767, 216, 0, 713, 768, 311, 239,
	0, 0, 692, 747, 699, 736, 687, 723, 649, 712,
	762, 673, 719, 763, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 644, 0, 716,
	757, 670, 718, 720, 628, 715, 0, 635, 642, 772,
	753, 663, 664, 665, 0, 0, 0, 0, 0, 0,
	0, 691, 700, 731, 684, 0, 0, 0, 0, 0,
	0, 1899, 0, 661, 0, 710, 0, 0, 0, 643,
	636, 0, 0, 689, 0, 0, 0, 648, 136, 662,
	732, 0, 626, 191, 240, 148, 737, 752, 686, 204,
	351, 756, 683, 682, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 730, 295, 671, 627, 741,
	658, 668, 170, 666, 288, 259, 340, 0, 707, 266,
	287, 217, 329, 727, 338, 339, 675, 776, 348, 353,
	0, 697, 646, 308, 180, 0, 138, 0, 273, 175,
	209, 685, 722, 659, 166, 728, 711, 746, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 681, 298, 297, 676,
	200, 735, 714, 632, 282, 725, 205, 137, 319, 356,
	153, 211, 324, 625, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 669, 726, 341, 734,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 633, 0, 313, 343, 358, 156, 654, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 652,
	653, 650, 0, 651, 702, 703, 764, 765, 766, 733,
	645, 0, 748, 749, 0, 0, 0, 0, 0, 739,
	754, 755, 724, 774, 678, 679, 634, 637, 638, 639,
	647, 693, 694, 706, 709, 744, 743, 742, 745, 750,
	770, 769, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 135, 144, 215, 775, 281,
	186, 344, 629, 177, 0, 695, 698, 708, 729, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 751,
	758, 738, 322, 688, 761, 656, 674, 773, 677, 680,
	721, 640, 701, 255, 672, 641, 0, 660, 630, 667,
	631, 657, 690, 179, 655, 740, 704, 760, 213, 717,
	0, 169, 221, 219, 0, 0, 0, 262, 321, 759,
	696, 0, 767, 216, 0, 713, 768, 311, 239, 0,
	0, 692, 747, 699, 736, 687, 723, 649, 712, 762,
	673, 719, 763, 85, 0, 0, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 0, 716, 757,
	670, 718, 720, 628, 715, 0, 635, 642, 772, 753,
	663, 664, 665, 0, 0, 0, 0, 0, 0, 0,
	691, 700, 731, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 710, 0, 0, 0, 643, 636,
	0, 0, 689, 0, 0, 0, 648, 136, 662, 732,
	0, 626, 191, 240, 148, 737, 752, 686, 204, 351,
	756, 683, 682, 276, 0, 316, 194, 214, 152, 132,
	146, 162, 193, 251, 730, 295, 671, 627, 741, 658,
	668, 170, 666, 288, 259, 340, 0, 707, 266, 287,
	217, 329, 727, 338, 339, 675, 776, 348, 353, 0,
	697, 646, 308, 180, 0, 138, 0, 273, 175, 209,
	685, 722, 659, 166, 728, 711, 746, 307, 327, 154,
	323, 238, 244, 163, 165, 164, 147, 302, 326, 158,
	168, 312, 291, 317, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 681, 298, 297, 676, 200,
	735, 714, 632, 282, 725, 205, 137, 319, 356, 153,
	211, 324, 625, 187, 250, 172, 260, 261, 184, 134,
	278, 232, 233, 231, 234, 669, 726, 341, 734, 167,
	280, 139, 320, 337, 159, 299, 300, 354, 286, 141,
	335, 315, 236, 206, 207, 140, 0, 284, 178, 190,
	173, 254, 0, 189, 275, 332, 333, 171, 357, 149,
	347, 143, 150, 346, 247, 0, 246, 349, 328, 336,
	237, 225, 0, 142, 334, 235, 224, 212, 183, 196,
	271, 220, 272, 197, 242, 241, 243, 222, 226, 0,
	633, 0, 313, 343, 358, 156, 654, 301, 325, 0,
	0, 157, 188, 182, 270, 245, 151, 199, 310, 210,
	218, 283, 355, 258, 289, 160, 342, 309, 652, 653,
	650, 0, 651, 702, 703, 764, 765, 766, 733, 645,
	0, 748, 749, 0, 0, 0, 0, 0, 739, 754,
	755, 724, 774, 678, 679, 634, 637, 638, 639, 647,
	693, 694, 706, 709, 744, 743, 742, 745, 750, 770,
	769, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 135, 144, 215, 775, 281, 186,
	344, 629, 177, 0, 695, 698, 708, 729, 133, 145,
	155, 161, 176, 181, 185, 192, 195, 198, 201, 202,
	203, 208, 223, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 274,
	277, 279, 285, 290, 292, 293, 294, 296, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 751, 758,
	738, 322, 688, 761, 656, 674, 773, 677, 680, 721,
	640, 701, 255, 672, 641, 0, 660, 630, 667, 631,
	657, 690, 179, 655, 740, 704, 760, 213, 717, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 759, 696,
	0, 767, 216, 0, 713, 768, 311, 239, 0, 0,
	692, 747, 699, 736, 687, 723, 649, 712, 762, 673,
	719, 763, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 644, 0, 716, 757, 670,
	718, 720, 628, 715, 0, 635, 642, 772, 753, 663,
	664, 665, 0, 0, 0, 0, 0, 0, 0, 691,
	700, 731, 684, 0, 0, 0, 0, 0, 0, 1437,
	0, 661, 0, 710, 0, 0, 0, 643, 636, 0,
	0, 689, 0, 0, 0, 648, 136, 662, 732, 0,
	626, 191, 240, 148, 737, 752, 686, 204, 351, 756,
	683, 682, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 730, 295, 671, 627, 741, 658, 668,
	170, 666, 288, 259, 340, 0, 707, 266, 287, 217,
	329, 727, 338, 339, 675, 776, 348, 353, 0, 697,
	646, 308, 180, 0, 138, 0, 273, 175, 209, 685,
	722, 659, 166, 728, 711, 746, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 681, 298, 297, 676, 200, 735,
	714, 632, 282, 725, 205, 137, 319, 356, 153, 211,
	324, 625, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 669, 726, 341, 734, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 633,
	0, 313, 343, 358, 156, 654, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 652, 653, 650,
	0, 651, 702, 703, 764, 765, 766, 733, 645, 0,
	748, 749, 0, 0, 0, 0, 0, 739, 754, 755,
	724, 774, 678, 679, 634, 637, 638, 639, 647, 693,
	694, 706, 709, 744, 743, 742, 745, 750, 770, 769,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 135, 144, 215, 775, 281, 186, 344,
	629, 177, 0, 695, 698, 708, 729, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 751, 758, 738,
	322, 688, 761, 656, 674, 773, 677, 680, 721, 640,
	701, 255, 672, 641, 0, 660, 630, 667, 631, 657,
	690, 179, 655, 740, 704, 760, 213, 717, 0, 169,
	221, 219, 0, 0, 0, 262, 321, 759, 696, 0,
	767, 216, 0, 713, 768, 311, 239, 0, 0, 692,
	747, 699, 736, 687, 723, 649, 712, 762, 673, 719,
	763, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 0, 716, 757, 670, 718,
	720, 628, 715, 0, 635, 642, 772, 753, 663, 664,
	665, 0, 0, 0, 0, 0, 0, 0, 691, 700,
	731, 684, 0, 0, 0, 0, 0, 0, 1297, 0,
	661, 0, 710, 0, 0, 0, 643, 636, 0, 0,
	689, 0, 0, 0, 648, 136, 662, 732, 0, 626,
	191, 240, 148, 737, 752, 686, 204, 351, 756, 683,
	682, 276, 0, 316, 194, 214, 152, 132, 146, 162,
	193, 251, 730, 295, 671, 627, 741, 658, 668, 170,
	666, 288, 259, 340, 0, 707, 266, 287, 217, 329,
	727, 338, 339, 675, 776, 348, 353, 0, 697, 646,
	308, 180, 0, 138, 0, 273, 175, 209, 685, 722,
	659, 166, 728, 711, 746, 307, 327, 154, 323, 238,
	244, 163, 165, 164, 147, 302, 326, 158, 168, 312,
	291, 317, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 681, 298, 297, 676, 200, 735, 714,
	632, 282, 725, 205, 137, 319, 356, 153, 211, 324,
	625, 187, 250, 172, 260, 261, 184, 134, 278, 232,
	233, 231, 234, 669, 726, 341, 734, 167, 280, 139,
	320, 337, 159, 299, 300, 354, 286, 141, 335, 315,
	236, 206, 207, 140, 0, 284, 178, 190, 173, 254,
	0, 189, 275, 332, 333, 171, 357, 149, 347, 143,
	150, 346, 247, 0, 246, 349, 328, 336, 237, 225,
	0, 142, 334, 235, 224, 212, 183, 196, 271, 220,
	272, 197, 242, 241, 243, 222, 226, 0, 633, 0,
	313, 343, 358, 156, 654, 301, 325, 0, 0, 157,
	188, 182, 270, 245, 151, 199, 310, 210, 218, 283,
	355, 258, 289, 160, 342, 309, 652, 653, 650, 0,
	651, 702, 703, 764, 765, 766, 733, 645, 0, 748,
	749, 0, 0, 0, 0, 0, 739, 754, 755, 724,
	774, 678, 679, 634, 637, 638, 639, 647, 693, 694,
	706, 709, 744, 743, 742, 745, 750, 770, 769, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 705, 135, 144, 215, 775, 281, 186, 344, 629,
	177, 0, 695, 698, 708, 729, 133, 145, 155, 161,
	176, 181, 185, 192, 195, 198, 201, 202, 203, 208,
	223, 227, 228, 229, 230, 248, 249, 252, 253, 256,
	257, 263, 264, 265, 267, 268, 269, 274, 277, 279,
	285, 290, 292, 293, 294, 296, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 751, 758, 738, 322,
	688, 761, 656, 674, 773, 677, 680, 721, 640, 701,
	255, 672, 641, 0, 660, 630, 667, 631, 657, 690,
	179, 655, 740, 704, 760, 213, 717, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 759, 696, 0, 767,
	216, 0, 713, 768, 311, 239, 0, 0, 692, 747,
	699, 736, 687, 723, 649, 712, 762, 673, 719, 763,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 0, 716, 757, 670, 718, 720,
	628, 715, 0, 635, 642, 772, 753, 663, 664, 665,
	0, 0, 0, 0, 0, 0, 0, 691, 700, 731,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 710, 0, 0, 0, 643, 636, 0, 0, 689,
	0, 0, 0, 648, 136, 662, 732, 0, 626, 191,
	240, 148, 737, 752, 686, 204, 351, 756, 683, 682,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 730, 295, 671, 627, 741, 658, 668, 170, 666,
	288, 259, 340, 0, 707, 266, 287, 217, 329, 727,
	338, 339, 675, 776, 348, 353, 0, 697, 646, 308,
	180, 0, 138, 0, 273, 175, 209, 685, 722, 659,
	166, 728, 711, 746, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 681, 298, 297, 676, 200, 735, 714, 632,
	282, 725, 205, 137, 319, 356, 153, 211, 324, 625,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 669, 726, 341, 734, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 633, 0, 313,
	343, 358, 156, 654, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 652, 653, 650, 0, 651,
	702, 703, 764, 765, 766, 733, 645, 0, 748, 749,
	0, 0, 0, 0, 0, 739, 754, 755, 724, 774,
	678, 679, 634, 637, 638, 639, 647, 693, 694, 706,
	709, 744, 743, 742, 745, 750, 770, 769, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 135, 144, 215, 775, 281, 186, 344, 629, 177,
	0, 695, 698, 708, 729, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 751, 758, 738, 322, 688,
	761, 656, 674, 773, 677, 680, 721, 640, 701, 255,
	672, 641, 0, 660, 630, 667, 631, 657, 690, 179,
	655, 740, 704, 760, 213, 717, 0, 169, 221, 219,
	0, 0, 0, 262, 321, 759, 696, 0, 767, 216,
	0, 713, 768, 311, 239, 0, 0, 692, 747, 699,
	736, 687, 723, 649, 712, 762, 673, 719, 763, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 0, 716, 757, 670, 718, 720, 628,
	715, 0, 635, 642, 772, 753, 663, 664, 665, 0,
	0, 0, 0, 0, 0, 0, 691, 700, 731, 684,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	710, 0, 0, 0, 643, 636, 0, 0, 689, 0,
	0, 0, 648, 136, 662, 732, 0, 626, 191, 240,
	148, 737, 752, 686, 204, 351, 756, 683, 682, 276,
	0, 316, 194, 214, 152, 132, 146, 162, 193, 251,
	730, 295, 671, 627, 741, 658, 668, 170, 666, 288,
	259, 340, 0, 707, 266, 287, 217, 329, 727, 338,
	339, 675, 776, 348, 353, 0, 697, 646, 308, 180,
	0, 138, 0, 273, 175, 209, 685, 722, 659, 166,
	728, 711, 746, 307, 327, 154, 323, 238, 244, 163,
	165, 164, 147, 302, 326, 158, 168, 312, 291, 317,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 681, 298, 297, 676, 200, 735, 714, 632, 282,
	725, 205, 137, 319, 356, 153, 211, 324, 625, 187,
	250, 172, 260, 261, 184, 134, 278, 232, 233, 231,
	234, 669, 726, 341, 734, 167, 280, 139, 320, 337,
	159, 299, 300, 354, 286, 141, 335, 315, 236, 206,
	207, 140, 0, 284, 178, 190, 173, 254, 0, 189,
	275, 332, 333, 171, 357, 149, 347, 143, 150, 346,
	247, 0, 246, 349, 328, 336, 237, 225, 0, 142,
	334, 235, 224, 212, 183, 196, 271, 220, 272, 197,
	242, 241, 243, 222, 226, 0, 633, 0, 313, 343,
	358, 156, 654, 301, 325, 0, 0, 157, 188, 182,
	270, 245, 151, 199, 310, 210, 218, 283, 355, 258,
	289, 160, 342, 309, 652, 653, 650, 0, 651, 702,
	703, 764, 765, 766, 733, 645, 0, 748, 749, 0,
	0, 0, 0, 0, 739, 754, 755, 724, 774, 678,
	679, 634, 637, 638, 639, 647, 693, 694, 706, 709,
	744, 743, 742, 745, 750, 770, 769, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	135, 144, 215, 775, 281, 186, 344, 629, 177, 0,
	695, 698, 708, 729, 133, 145, 155, 161, 176, 181,
	185, 192, 195, 198, 201, 202, 203, 208, 223, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 274, 277, 279, 285, 290,
	292, 293, 294, 296, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 751, 758, 738, 322, 688, 761,
	656, 674, 773, 677, 680, 721, 640, 701, 255, 672,
	641, 0, 660, 630, 667, 631, 657, 690, 179, 655,
	740, 704, 760, 213, 717, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 1469, 1473, 0, 767, 216, 0,
	713, 768, 311, 239, 0, 0, 692, 747, 699, 736,
	687, 723, 649, 712, 762, 673, 719, 763, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 716, 757, 670, 718, 720, 628, 715,
	0, 635, 642, 772, 753, 663, 664, 665, 0, 0,
	0, 0, 0, 0, 0, 691, 700, 731, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 710,
	0, 0, 0, 643, 636, 0, 0, 689, 0, 0,
	0, 648, 136, 662, 732, 0, 626, 191, 240, 148,
	737, 752, 1472, 204, 351, 756, 683, 682, 1467, 0,
	1468, 194, 214, 622, 132, 146, 1465, 1471, 251, 730,
	295, 671, 627, 741, 658, 668, 170, 666, 288, 259,
	340, 0, 707, 266, 287, 217, 329, 727, 338, 339,
	675, 776, 348, 353, 0, 697, 646, 308, 180, 0,
	138, 0, 273, 175, 209, 685, 722, 659, 166, 728,
	711, 746, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	681, 298, 297, 676, 200, 735, 714, 632, 282, 725,
	205, 137, 319, 356, 153, 211, 324, 625, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	669, 726, 341, 734, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 633, 0, 313, 343, 358,
	156, 654, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 652, 653, 650, 0, 651, 702, 703,
	764, 765, 766, 733, 645, 0, 748, 749, 0, 0,
	0, 0, 0, 739, 754, 755, 724, 774, 678, 679,
	634, 637, 638, 639, 647, 693, 694, 706, 709, 744,
	743, 742, 745, 750, 770, 769, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 135,
	144, 215, 775, 281, 186, 344, 629, 177, 0, 695,
	698, 708, 729, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 751, 758, 738, 322, 688, 761, 656,
	674, 773, 677, 680, 721, 640, 701, 255, 672, 641,
	0, 660, 630, 667, 631, 657, 690, 179, 655, 740,
	704, 760, 213, 717, 0, 169, 221, 219, 0, 0,
	0, 262, 321, 759, 696, 0, 767, 216, 0, 713,
	768, 311, 239, 0, 0, 692, 747, 699, 736, 687,
	723, 649, 712, 762, 673, 719, 763, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 0, 716, 757, 670, 718, 720, 628, 715, 0,
	635, 642, 772, 753, 663, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 691, 700, 731, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 710, 0,
	0, 0, 643, 636, 0, 0, 689, 0, 0, 0,
	648, 136, 662, 732, 0, 626, 191, 240, 148, 737,
	752, 686, 204, 351, 756, 683, 682, 276, 0, 316,
	194, 214, 152, 132, 146, 162, 193, 251, 730, 295,
	671, 627, 741, 658, 668, 170, 666, 288, 259, 340,
	0, 707, 266, 287, 217, 329, 727, 338, 339, 675,
	776, 348, 353, 0, 697, 646, 308, 180, 0, 138,
	0, 273, 175, 209, 685, 722, 659, 166, 728, 711,
	746, 307, 327, 154, 323, 238, 244, 163, 165, 164,
	147, 302, 326, 158, 168, 312, 291, 317, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 681,
	298, 297, 676, 200, 735, 714, 632, 282, 725, 205,
	137, 319, 356, 153, 211, 324, 625, 187, 250, 172,
	260, 261, 184, 134, 278, 232, 233, 231, 234, 669,
	726, 341, 734, 167, 280, 139, 320, 337, 159, 299,
	300, 354, 286, 141, 335, 315, 236, 206, 207, 140,
	0, 284, 178, 190, 173, 254, 0, 189, 275, 332,
	333, 171, 357, 149, 347, 143, 150, 346, 247, 0,
	246, 349, 328, 336, 237, 225, 0, 142, 334, 235,
	224, 212, 183, 196, 271, 220, 272, 197, 242, 241,
	243, 222, 226, 0, 633, 0, 313, 343, 358, 156,
	654, 301, 325, 0, 0, 157, 188, 182, 270, 245,
	151, 199, 310, 210, 218, 283, 355, 258, 289, 160,
	342, 309, 652, 653, 650, 0, 651, 702, 703, 764,
	765, 766, 733, 645, 0, 748, 749, 0, 0, 0,
	0, 0, 739, 754, 755, 724, 774, 678, 679, 634,
	637, 638, 639, 647, 693, 694, 706, 709, 744, 743,
	742, 745, 750, 770, 769, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 135, 144,
	215, 775, 281, 186, 344, 629, 177, 0, 695, 698,
	708, 729, 133, 145, 155, 161, 176, 181, 185, 192,
	195, 198, 201, 202, 203, 208, 223, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 274, 277, 279, 285, 290, 292, 293,
	294, 296, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 751, 758, 738, 322, 688, 761, 656, 674,
	773, 677, 680, 721, 640, 701, 255, 672, 641, 0,
	660, 630, 667, 631, 657, 690, 179, 655, 740, 704,
	760, 213, 717, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 759, 696, 0, 767, 216, 0, 713, 768,
	311, 239, 0, 0, 692, 747, 699, 736, 687, 723,
	649, 712, 762, 673, 719, 763, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 644,
	0, 716, 757, 670, 718, 720, 628, 715, 0, 635,
	642, 772, 753, 663, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 691, 700, 731, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 710, 0, 0,
	0, 643, 636, 0, 0, 689, 0, 0, 0, 648,
	136, 662, 732, 0, 626, 191, 240, 148, 737, 752,
	686, 204, 351, 756, 683, 682, 276, 0, 316, 194,
	214, 622, 132, 146, 618, 193, 251, 730, 295, 671,
	627, 741, 658, 668, 170, 666, 288, 259, 340, 0,
	707, 266, 287, 217, 329, 727, 338, 339, 675, 776,
	348, 353, 0, 697, 646, 308, 180, 0, 138, 0,
	273, 175, 209, 685, 722, 659, 166, 728, 711, 746,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 681, 298,
	297, 676, 200, 735, 714, 632, 282, 725, 205, 137,
	319, 356, 153, 211, 324, 625, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 669, 726,
	341, 734, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 633, 0, 313, 343, 358, 156, 654,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 652, 653, 650, 0, 651, 702, 703, 764, 765,
	766, 733, 645, 0, 748, 749, 0, 0, 0, 0,
	0, 739, 754, 755, 724, 774, 678, 679, 634, 637,
	638, 639, 647, 693, 694, 706, 709, 744, 743, 742,
	745, 750, 770, 769, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 135, 144, 215,
	775, 281, 186, 344, 629, 177, 0, 695, 698, 708,
	729, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 751, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 179, 490, 0, 0, 0, 213, 0,
	0, 169, 221, 219, 0, 0, 0, 262, 321, 0,
	0, 0, 568, 216, 0, 0, 454, 311, 239, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 0,
	0, 1447, 0, 85, 0, 0, 0, 491, 515, 514,
	517, 518, 519, 520, 0, 0, 0, 516, 521, 550,
	551, 1448, 0, 0, 488, 506, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 582, 0, 505, 0, 0, 500,
	501, 502, 507, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 240, 148, 558, 0, 0, 204, 351,
	0, 0, 580, 276, 0, 316, 194, 214, 152, 132,
	146, 162, 193, 251, 0, 295, 565, 0, 0, 0,
	0, 170, 0, 288, 259, 340, 557, 0, 266, 287,
	217, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 180, 0, 138, 0, 273, 175, 209,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 238, 244, 163, 165, 164, 147, 302, 326, 158,
	168, 312, 291, 317, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 298, 297, 0, 200,
	0, 0, 0, 282, 0, 205, 137, 319, 356, 153,
	211, 324, 0, 187, 250, 172, 260, 261, 184, 134,
	278, 232, 233, 231, 234, 0, 0, 341, 0, 167,
	280, 139, 320, 337, 159, 299, 300, 354, 286, 141,
	335, 315, 236, 206, 207, 140, 0, 284, 178, 190,
	173, 254, 0, 189, 275, 332, 333, 171, 357, 149,
	347, 143, 150, 346, 247, 0, 246, 349, 328, 336,
	237, 225, 0, 142, 334, 235, 224, 212, 183, 196,
	271, 220, 272, 197, 242, 241, 243, 222, 226, 0,
	0, 0, 313, 343, 358, 156, 0, 301, 325, 0,
	0, 157, 188, 182, 270, 245, 151, 199, 310, 210,
	218, 283, 355, 258, 289, 160, 342, 309, 569, 581,
	575, 577, 576, 573, 574, 572, 571, 570, 583, 559,
	560, 561, 562, 563, 0, 0, 0, 566, 0, 578,
	579, 0, 0, 0, 0, 522, 523, 524, 525, 526,
	530, 531, 535, 536, 544, 543, 542, 545, 546, 548,
	547, 549, 527, 528, 529, 532, 533, 534, 537, 538,
	541, 539, 540, 564, 135, 144, 215, 0, 281, 186,
	344, 0, 177, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 176, 181, 185, 192, 195, 198, 201, 202,
	203, 208, 223, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 274,
	277, 279, 285, 290, 292, 293, 294, 296, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 37, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	179, 490, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 568,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 491, 515, 514, 517, 518, 519,
	520, 0, 0, 0, 516, 521, 550, 551, 0, 0,
	0, 488, 506, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 582, 0, 505, 0, 0, 500, 501, 502, 507,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 558, 0, 0, 204, 351, 0, 0, 580,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 565, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 557, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 530, 531, 535,
	536, 544, 543, 542, 545, 546, 548, 547, 549, 527,
	528, 529, 532, 533, 534, 537, 538, 541, 539, 540,
	564, 135, 144, 215, 83, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 179, 490, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 568, 216, 0, 0, 454,
	311, 239, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	491, 515, 514, 517, 518, 519, 520, 0, 0, 0,
	516, 521, 550, 551, 0, 0, 0, 488, 506, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 484, 0, 0, 0, 582, 0, 505,
	0, 0, 500, 501, 502, 507, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 558, 0,
	0, 204, 351, 0, 0, 580, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 565,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 557,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 448,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 569, 581, 575, 577, 576, 573, 574, 572, 571,
	570, 583, 559, 560, 561, 562, 563, 0, 0, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 530, 531, 535, 536, 544, 543, 542,
	545, 546, 548, 547, 549, 527, 528, 529, 532, 533,
	534, 537, 538, 541, 539, 540, 564, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 0, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 179, 490, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 568, 216, 0, 0, 454, 311, 239, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 918, 0, 491, 515, 514, 517,
	518, 519, 520, 0, 0, 0, 516, 521, 550, 551,
	0, 0, 0, 488, 506, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 582, 0, 505, 0, 0, 500, 501,
	502, 507, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 558, 0, 0, 204, 351, 0,
	0, 580, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 565, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 557, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 448, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 569, 581, 575,
	577, 576, 573, 574, 572, 571, 570, 583, 559, 560,
	561, 562, 563, 0, 0, 0, 566, 0, 578, 579,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 530,
	531, 535, 536, 544, 543, 542, 545, 546, 548, 547,
	549, 527, 528, 529, 532, 533, 534, 537, 538, 541,
	539, 540, 564, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 179, 490,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 568, 216, 0,
	0, 454, 311, 239, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 491, 515, 514, 517, 518, 519, 520, 0,
	0, 0, 516, 521, 550, 551, 0, 0, 0, 488,
	506, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 1335, 0, 0, 0, 582,
	0, 505, 0, 0, 500, 501, 502, 507, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	558, 0, 0, 204, 351, 0, 0, 580, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 565, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 557, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 448, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 569, 581, 575, 577, 576, 573, 574,
	572, 571, 570, 583, 559, 560, 561, 562, 563, 0,
	0, 0, 566, 0, 578, 579, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 530, 531, 535, 536, 544,
	543, 542, 545, 546, 548, 547, 549, 527, 528, 529,
	532, 533, 534, 537, 538, 541, 539, 540, 564, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 0, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 179, 490, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 568, 216, 0, 0, 454, 311, 239,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 491, 515,
	1379, 517, 518, 519, 520, 0, 0, 0, 516, 521,
	550, 551, 0, 0, 0, 488, 506, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 1335, 0, 0, 0, 582, 0, 505, 0, 0,
	500, 501, 502, 507, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 558, 0, 0, 204,
	351, 0, 0, 580, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 565, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 557, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 448, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 569,
	581, 575, 577, 576, 573, 574, 572, 571, 570, 583,
	559, 560, 561, 562, 563, 0, 0, 0, 566, 0,
	578, 579, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 530, 531, 535, 536, 544, 543, 542, 545, 546,
	548, 547, 549, 527, 528, 529, 532, 533, 534, 537,
	538, 541, 539, 540, 564, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 0, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	179, 490, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 568,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 491, 515, 1376, 517, 518, 519,
	520, 0, 0, 0, 516, 521, 550, 551, 0, 0,
	0, 488, 506, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 1335, 0, 0,
	0, 582, 0, 505, 0, 0, 500, 501, 502, 507,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 558, 0, 0, 204, 351, 0, 0, 580,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 565, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 557, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 530, 531, 535,
	536, 544, 543, 542, 545, 546, 548, 547, 549, 527,
	528, 529, 532, 533, 534, 537, 538, 541, 539, 540,
	564, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 179, 490, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 568, 216, 0, 0, 454,
	311, 239, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 1234, 0,
	491, 515, 514, 517, 518, 519, 520, 0, 0, 0,
	516, 521, 550, 551, 0, 0, 0, 488, 506, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 0, 0, 0, 0, 582, 0, 505,
	0, 0, 500, 501, 502, 507, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 558, 0,
	0, 204, 351, 0, 0, 580, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 565,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 557,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 448,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 569, 581, 575, 577, 576, 573, 574, 572, 571,
	570, 583, 559, 560, 561, 562, 563, 0, 0, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 530, 531, 535, 536, 544, 543, 542,
	545, 546, 548, 547, 549, 527, 528, 529, 532, 533,
	534, 537, 538, 541, 539, 540, 564, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 0, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 179, 490, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 568, 216, 0, 0, 454, 311, 239, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 491, 515, 514, 517,
	518, 519, 520, 0, 0, 0, 516, 521, 550, 551,
	0, 0, 0, 488, 506, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 582, 0, 505, 0, 0, 500, 501,
	502, 507, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 558, 0, 0, 204, 351, 0,
	0, 580, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 565, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 557, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 448, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 569, 581, 575,
	577, 576, 573, 574, 572, 571, 570, 583, 559, 560,
	561, 562, 563, 0, 0, 0, 566, 0, 578, 579,
	0, 0, 0, 0, 522, 523, 524, 525, 526, 530,
	531, 535, 536, 544, 543, 542, 545, 546, 548, 547,
	549, 527, 528, 529, 532, 533, 534, 537, 538, 541,
	539, 540, 564, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 568, 216, 0,
	0, 454, 311, 239, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 491, 515, 514, 517, 518, 519, 520, 0,
	0, 0, 516, 521, 550, 551, 0, 0, 0, 0,
	506, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 504, 0, 0, 0, 0, 582,
	0, 505, 0, 0, 500, 501, 502, 507, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	558, 0, 0, 204, 351, 0, 0, 580, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 565, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 557, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 448, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 569, 581, 575, 577, 576, 573, 574,
	572, 571, 570, 583, 559, 560, 561, 562, 563, 1382,
	1383, 1384, 566, 0, 578, 579, 0, 0, 0, 0,
	522, 523, 524, 525, 526, 530, 531, 535, 536, 544,
	543, 542, 545, 546, 548, 547, 549, 527, 528, 529,
	532, 533, 534, 537, 538, 541, 539, 540, 564, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 0, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 568, 216, 0, 0, 454, 311, 239,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 491, 515,
	514, 517, 518, 519, 520, 0, 0, 0, 516, 521,
	550, 551, 0, 0, 0, 0, 506, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 0, 0, 0, 0, 582, 0, 505, 0, 0,
	500, 501, 502, 507, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 558, 0, 0, 204,
	351, 0, 0, 580, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 565, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 557, 2655, 266,
	287, 217, 329, 0, 338, 339, 0, 448, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 569,
	581, 575, 577, 576, 573, 574, 572, 571, 570, 583,
	559, 560, 561, 562, 563, 0, 0, 0, 566, 0,
	578, 579, 0, 0, 0, 0, 522, 523, 524, 525,
	526, 530, 531, 535, 536, 544, 543, 542, 545, 546,
	548, 547, 549, 527, 528, 529, 532, 533, 534, 537,
	538, 541, 539, 540, 564, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 0, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 568,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 918, 0, 491, 515, 514, 517, 518, 519,
	520, 0, 0, 0, 516, 521, 550, 551, 0, 0,
	0, 0, 506, 0, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 582, 0, 505, 0, 0, 500, 501, 502, 507,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 558, 0, 0, 204, 351, 0, 0, 580,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 565, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 557, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 530, 531, 535,
	536, 544, 543, 542, 545, 546, 548, 547, 549, 527,
	528, 529, 532, 533, 534, 537, 538, 541, 539, 540,
	564, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 568, 216, 0, 0, 454,
	311, 239, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	491, 515, 514, 517, 518, 519, 520, 0, 0, 0,
	516, 521, 550, 551, 0, 0, 0, 0, 506, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 504, 0, 0, 0, 0, 582, 0, 505,
	0, 0, 500, 501, 502, 507, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 558, 0,
	0, 204, 351, 0, 0, 580, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 565,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 557,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 448,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 454, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 2092, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 569, 581, 575, 577, 576, 573, 574, 572, 571,
	570, 583, 559, 560, 561, 562, 563, 448, 0, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 522, 523,
	524, 525, 526, 530, 531, 535, 536, 544, 543, 542,
	545, 546, 548, 547, 549, 527, 528, 529, 532, 533,
	534, 537, 538, 541, 539, 540, 564, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 0, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 421, 322, 419, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 213, 0,
	0, 169, 221, 219, 0, 0, 0, 262, 321, 0,
	0, 0, 0, 216, 0, 0, 454, 311, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 431,
	432, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 433, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 240, 148, 0, 0, 0, 204, 351,
	0, 0, 0, 276, 0, 316, 194, 214, 152, 132,
	146, 162, 193, 251, 420, 295, 0, 0, 0, 0,
	0, 170, 0, 288, 259, 340, 0, 0, 266, 287,
	217, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 180, 0, 138, 0, 273, 175, 209,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 238, 244, 163, 165, 164, 147, 302, 326, 158,
	168, 312, 291, 317, 174, 0, 0, 0, 0, 0,
	0, 454, 0, 0, 345, 0, 298, 297, 0, 200,
	0, 0, 0, 282, 0, 205, 137, 319, 356, 153,
	211, 324, 2103, 187, 250, 172, 260, 261, 184, 134,
	278, 232, 233, 231, 234, 0, 0, 341, 0, 167,
	461, 139, 320, 337, 159, 299, 300, 354, 286, 141,
	335, 315, 236, 206, 207, 140, 0, 284, 178, 190,
	173, 254, 0, 189, 275, 332, 333, 171, 357, 149,
	347, 143, 150, 346, 247, 0, 246, 349, 328, 336,
	237, 225, 0, 142, 334, 235, 224, 212, 183, 196,
	271, 220, 272, 197, 242, 241, 243, 222, 226, 0,
	0, 0, 313, 343, 358, 156, 0, 301, 325, 0,
	0, 157, 188, 182, 270, 245, 151, 199, 310, 210,
	218, 283, 355, 258, 289, 160, 342, 309, 0, 0,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 430, 431, 432,
	436, 437, 441, 442, 451, 450, 449, 452, 453, 456,
	455, 457, 433, 434, 435, 438, 439, 440, 443, 444,
	447, 445, 446, 0, 135, 144, 215, 0, 281, 186,
	344, 0, 177, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 176, 181, 185, 192, 195, 198, 201, 202,
	203, 208, 223, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 274,
	277, 279, 285, 290, 292, 293, 294, 296, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 421, 322,
	419, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 431, 432, 436, 437, 441, 442, 451,
	450, 449, 452, 453, 456, 455, 457, 433, 434, 435,
	438, 439, 440, 443, 444, 447, 445, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 420, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 454, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 2101,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 416, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 431, 432, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 433,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 1425, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 0, 216, 0, 0, 454,
	311, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 1429, 0, 0, 0, 0, 0, 0,
	130, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 430,
	431, 432, 436, 437, 441, 442, 451, 450, 449, 452,
	453, 456, 455, 457, 433, 434, 435, 438, 439, 440,
	443, 444, 447, 445, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 0, 0,
	0, 204, 351, 0, 1428, 0, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 0,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 448,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 431, 432, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 433, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 0, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 1425, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 0, 216, 0, 0, 454, 311, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 1429,
	0, 0, 0, 0, 0, 0, 130, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 0, 0, 0, 204, 351, 0,
	1428, 0, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 0, 0, 1423, 287, 217,
	329, 0, 338, 339, 0, 448, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 431, 432, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 433, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 0, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 0, 216, 0,
	0, 454, 311, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 0, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 937, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	0, 0, 0, 204, 351, 0, 0, 0, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 0, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 448, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 431, 432, 436, 437, 441, 442, 451,
	450, 449, 452, 453, 456, 455, 457, 433, 434, 435,
	438, 439, 440, 443, 444, 447, 445, 446, 0, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 0, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 2586, 0, 0,
	0, 0, 0, 0, 179, 2584, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 0, 216, 0, 0, 454, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 448, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 2585, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 431,
	432, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 433, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 0, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 1728, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 431, 432, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 433,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 0, 216, 0, 0, 454,
	311, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 0, 0,
	0, 204, 351, 0, 0, 0, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 0,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 448,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 0, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 431, 432, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 433, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 0, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 0, 216, 0, 0, 454, 311, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 0, 0, 0, 204, 351, 0,
	0, 0, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 0, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 448, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 431, 432, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 433, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 0, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 0, 216, 0,
	0, 454, 311, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	0, 0, 0, 204, 351, 0, 0, 0, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 0, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 448, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 431, 432, 436, 437, 441, 442, 451,
	450, 449, 452, 453, 456, 455, 457, 433, 434, 435,
	438, 439, 440, 443, 444, 447, 445, 446, 0, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 0, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 0, 216, 0, 0, 454, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 941, 0,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 448, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 431,
	432, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 433, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 0, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 454, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 448, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 431, 432, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 433,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 0, 216, 0, 0, 0,
	311, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 953, 963,
	964, 956, 957, 958, 959, 960, 961, 962, 955, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 0, 0,
	0, 204, 351, 0, 0, 0, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 0,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 0,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 0, 37, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 1420, 216, 0, 0, 0, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 135, 144, 215,
	0, 281, 186, 344, 85, 177, 0, 0, 130, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 0, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 1090, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 0, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 144, 215, 83, 281,
	186, 344, 0, 177, 623, 0, 1089, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 0, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 454,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 0, 216, 0,
	1157, 0, 311, 239, 0, 0, 0, 0, 0, 0,
	0, 135, 144, 215, 0, 281, 186, 344, 85, 177,
	0, 0, 130, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 0, 0, 0, 0, 0,
	0, 1100, 136, 0, 0, 0, 0, 191, 240, 148,
	0, 0, 0, 204, 351, 0, 0, 0, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 448,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 0, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 0, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 0, 0, 0, 0, 0, 428, 429,
	430, 431, 432, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 433, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 0, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 0, 216, 0, 0, 0, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 0, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 0, 216, 0, 0, 0, 311, 239, 0, 0,
	0, 0, 0, 0, 0, 135, 144, 215, 0, 281,
	186, 344, 85, 177, 0, 0, 623, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 0, 0, 0, 204, 351, 0,
	0, 0, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 0, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 0, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 0, 216, 0,
	0, 0, 311, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	0, 0, 0, 204, 351, 0, 0, 0, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 0, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 0, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 0, 216, 0, 0, 0, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 130, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 0, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 322,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 0, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 130, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 0, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 150,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 222, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 245, 151, 199, 310, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 0, 216, 0, 0, 0,
	311, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	130, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 0, 127,
	0, 204, 351, 0, 0, 0, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 0,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 0,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 337, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 0, 216, 0, 0, 0, 311, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 623, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 0, 0, 0, 204, 351, 0,
	0, 0, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 0, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 0, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 337, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 150, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 222, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 245, 151, 199, 310, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 213, 0, 0, 169, 221, 219, 0,
	0, 0, 262, 321, 0, 0, 0, 0, 216, 0,
	0, 0, 311, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 130, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 240, 148,
	0, 0, 0, 204, 351, 0, 0, 0, 276, 0,
	316, 194, 214, 152, 132, 146, 162, 193, 251, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 259,
	340, 0, 0, 266, 287, 217, 329, 0, 338, 339,
	0, 0, 348, 353, 0, 0, 0, 308, 180, 0,
	138, 0, 273, 175, 209, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 238, 244, 163, 165,
	164, 147, 302, 326, 158, 168, 312, 291, 317, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 298, 297, 0, 200, 0, 0, 0, 282, 0,
	205, 137, 319, 356, 153, 211, 324, 0, 187, 250,
	172, 260, 261, 184, 134, 278, 232, 233, 231, 234,
	0, 0, 341, 0, 167, 280, 139, 320, 337, 159,
	299, 300, 354, 286, 141, 335, 315, 236, 206, 207,
	140, 0, 284, 178, 190, 173, 254, 0, 189, 275,
	332, 333, 171, 357, 149, 347, 143, 150, 346, 247,
	0, 246, 349, 328, 336, 237, 225, 0, 142, 334,
	235, 224, 212, 183, 196, 271, 220, 272, 197, 242,
	241, 243, 222, 226, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 188, 182, 270,
	245, 151, 199, 310, 210, 218, 283, 355, 258, 289,
	160, 342, 309, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 213,
	0, 0, 169, 221, 219, 0, 0, 0, 262, 321,
	0, 0, 0, 0, 216, 0, 0, 0, 311, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	144, 215, 0, 281, 186, 344, 0, 177, 491, 0,
	0, 0, 0, 133, 145, 155, 161, 176, 181, 185,
	192, 195, 198, 201, 202, 203, 208, 223, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 274, 277, 279, 285, 290, 292,
	293, 294, 296, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 240, 148, 0, 0, 0, 204,
	351, 0, 0, 0, 276, 0, 316, 194, 214, 152,
	132, 146, 162, 193, 251, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 259, 340, 0, 0, 266,
	287, 217, 329, 0, 338, 339, 0, 0, 348, 353,
	0, 0, 0, 308, 180, 0, 138, 0, 273, 175,
	209, 0, 0, 0, 166, 0, 0, 0, 307, 327,
	154, 323, 238, 244, 163, 165, 164, 147, 302, 326,
	158, 168, 312, 291, 317, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 298, 297, 0,
	200, 0, 0, 0, 282, 0, 205, 137, 319, 356,
	153, 211, 324, 0, 187, 250, 172, 260, 261, 184,
	134, 278, 232, 233, 231, 234, 0, 0, 341, 0,
	167, 280, 139, 320, 337, 159, 299, 300, 354, 286,
	141, 335, 315, 236, 206, 207, 140, 0, 284, 178,
	190, 173, 254, 0, 189, 275, 332, 333, 171, 357,
	149, 347, 143, 150, 346, 247, 0, 246, 349, 328,
	336, 237, 225, 0, 142, 334, 235, 224, 212, 183,
	196, 271, 220, 272, 197, 242, 241, 243, 222, 226,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 188, 182, 270, 245, 151, 199, 310,
	210, 218, 283, 355, 258, 289, 160, 342, 309, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 213, 0, 0, 169, 221,
	219, 0, 0, 0, 262, 321, 0, 0, 0, 0,
	216, 0, 0, 0, 311, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 144, 215, 0, 281,
	186, 344, 0, 177, 491, 0, 0, 0, 0, 133,
	145, 155, 161, 176, 181, 185, 192, 195, 198, 201,
	202, 203, 208, 223, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	274, 277, 279, 285, 290, 292, 293, 294, 296, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	240, 148, 0, 0, 0, 204, 351, 0, 0, 0,
	276, 0, 316, 194, 214, 152, 132, 146, 162, 193,
	251, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 259, 340, 0, 0, 266, 287, 217, 329, 0,
	338, 339, 0, 0, 348, 353, 0, 0, 0, 308,
	180, 0, 138, 0, 273, 175, 209, 0, 0, 0,
	166, 0, 0, 0, 307, 327, 154, 323, 238, 244,
	163, 165, 164, 147, 302, 326, 158, 168, 312, 291,
	317, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 298, 297, 0, 200, 0, 0, 0,
	282, 0, 205, 137, 319, 356, 153, 211, 324, 0,
	187, 250, 172, 260, 261, 184, 134, 278, 232, 233,
	231, 234, 0, 0, 341, 0, 167, 280, 139, 320,
	337, 159, 299, 300, 354, 286, 141, 335, 315, 236,
	206, 207, 140, 0, 284, 178, 190, 173, 254, 0,
	189, 275, 332, 333, 171, 357, 149, 347, 143, 606,
	346, 247, 0, 246, 349, 328, 336, 237, 225, 0,
	142, 334, 235, 224, 212, 183, 196, 271, 220, 272,
	197, 242, 241, 243, 602, 226, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 188,
	182, 270, 607, 605, 596, 597, 210, 218, 283, 355,
	258, 289, 160, 342, 309, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 213, 0, 0, 169, 221, 219, 0, 0, 0,
	262, 321, 0, 0, 0, 0, 216, 0, 0, 0,
	311, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 144, 215, 0, 281, 186, 344, 0, 177,
	491, 0, 0, 0, 0, 133, 145, 155, 161, 176,
	181, 185, 192, 195, 198, 201, 202, 203, 208, 223,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 603, 604, 274, 277, 279, 285,
	290, 292, 293, 294, 296, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 240, 148, 0, 0,
	0, 204, 351, 0, 0, 0, 276, 0, 316, 194,
	214, 152, 132, 146, 162, 193, 251, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 259, 340, 0,
	0, 266, 287, 217, 329, 0, 338, 339, 0, 0,
	348, 353, 0, 0, 0, 308, 180, 0, 138, 0,
	273, 175, 209, 0, 0, 0, 166, 0, 0, 0,
	307, 327, 154, 323, 238, 244, 163, 165, 164, 147,
	302, 326, 158, 168, 312, 291, 317, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 298,
	297, 0, 200, 0, 0, 0, 282, 0, 205, 137,
	319, 356, 153, 211, 324, 0, 187, 250, 172, 260,
	261, 184, 134, 278, 232, 233, 231, 234, 0, 0,
	341, 0, 167, 280, 139, 320, 1084, 159, 299, 300,
	354, 286, 141, 335, 315, 236, 206, 207, 140, 0,
	284, 178, 190, 173, 254, 0, 189, 275, 332, 333,
	171, 357, 149, 347, 143, 150, 346, 247, 0, 246,
	349, 328, 336, 237, 225, 0, 142, 334, 235, 224,
	212, 183, 196, 271, 220, 272, 197, 242, 241, 243,
	222, 226, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 188, 182, 270, 245, 151,
	199, 310, 210, 218, 283, 355, 258, 289, 160, 342,
	309, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 213, 0, 0,
	169, 221, 219, 0, 0, 0, 262, 321, 0, 0,
	0, 0, 216, 0, 0, 0, 311, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 144, 215,
	0, 281, 186, 344, 0, 177, 491, 0, 0, 0,
	0, 133, 145, 155, 161, 176, 181, 185, 192, 195,
	198, 201, 202, 203, 208, 223, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 274, 277, 279, 285, 290, 292, 293, 294,
	296, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 240, 148, 0, 0, 0, 204, 351, 0,
	0, 0, 276, 0, 316, 194, 214, 152, 132, 146,
	162, 193, 251, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 259, 340, 0, 0, 266, 287, 217,
	329, 0, 338, 339, 0, 0, 348, 353, 0, 0,
	0, 308, 180, 0, 138, 0, 273, 175, 209, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	238, 244, 163, 165, 164, 147, 302, 326, 158, 168,
	312, 291, 317, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 298, 297, 0, 200, 0,
	0, 0, 282, 0, 205, 137, 319, 356, 153, 211,
	324, 0, 187, 250, 172, 260, 261, 184, 134, 278,
	232, 233, 231, 234, 0, 0, 341, 0, 167, 280,
	139, 320, 593, 159, 299, 300, 354, 286, 141, 335,
	315, 236, 206, 207, 140, 0, 284, 178, 190, 173,
	254, 0, 189, 275, 332, 333, 171, 357, 149, 347,
	143, 606, 346, 247, 0, 246, 349, 328, 336, 237,
	225, 0, 142, 334, 235, 224, 212, 183, 196, 271,
	220, 272, 197, 242, 241, 243, 602, 226, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 188, 182, 270, 607, 605, 596, 597, 210, 218,
	283, 355, 258, 289, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 144, 215, 0, 281, 186, 344,
	0, 177, 0, 0, 0, 0, 0, 133, 145, 155,
	161, 176, 181, 185, 192, 195, 198, 201, 202, 203,
	208, 223, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 603, 604, 274, 277,
	279, 285, 290, 292, 293, 294, 296, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352,
}
var yyPact = [...]int{

	2931, -1000, -314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1729, -1000, -1000, -1000,
	-1000, -1000, -1000, 907, 249, -1000, -1000, 244, 138, 28008,
	573, 3085, 28700, -1000, -1000, -1000, 161, 481, 28700, -1000,
	-1000, -1000, 391, 396, 1157, 1563, 1155, 41, -78, -80,
	98, 19522, 19055, -1000, 1775, 1777, -1000, -1000, 542, 45,
	-1000, -1000, -1000, 23250, 188, -1000, -1000, 1706, 1727, 1485,
	-1000, 13928, 543, 543, 27662, 30084, -1000, 1771, 28700, 12528,
	-1000, 567, 28700, -146, 506, 506, 310, 506, 506, 572,
	-1000, 804, -1000, -1000, -1000, -1000, 28700, 22784, 514, 28354,
	514, 514, 514, 514, 514, 514, 514, 28700, -1000, 652,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28700,
	1152, 1599, 799, 151, 9245, 9245, -1000, 796, -1000, 276,
	269, 301, 263, 69, 802, 1703, -1000, 1276, 1706, 1706,
	9245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 245, 556,
	222, 188, 775, -1000, -1000, -1000, -1000, -1000, 1598, 1596,
	1043, 1594, 207, 1593, 1402, -56, -1000, 1151, 28700, -1000,
	-1000, 1018, 1017, 1437, 1299, 596, 1434, -1000, -1000, 1398,
	1398, 1398, 1398, 1216, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 341, 1287,
	1343, 1424, -1000, 1430, 1666, 571, 28700, -1000, -107, 1361,
	-1000, 1406, -1000, -1000, -1000, 1214, 1603, 971, 16724, 1536,
	-1000, -1000, 846, 1757, -1000, 20920, 649, -1000, 16724, 776,
	1276, -1000, -1000, 1276, -1000, -1000, -1000, 607, -1000, -1000,
	18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276,
	1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276,
	1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276,
	-1000, -1000, 1276, -1000, 13462, 1276, 1276, 1276, 1276, 1276,
	1276, 1276, 1276, 1276, 1276, 1276, 1276, 16724, 1276, 1276,
	1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1276,
	1276, 1276, 1276, 1276, 27316, 25690, 28700, 1295, 1269, -1000,
	-1000, 646, 1358, -102, 29738, -1000, -1000, -1000, -1000, 29046,
	25342, 766, -1000, -1000, -1000, -1000, 1589, -1000, -1000, 644,
	-1000, 1729, -1000, -1000, 1261, 504, -1000, 4850, 25668, -1000,
	-1000, -1000, 1394, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28354, 1648, 559,
	1148, 829, 1147, 1141, 1136, 22784, 22784, 506, 1135, 1357,
	553, 1356, 552, 1205, 28700, 1626, 1423, 28700, 1128, 1127,
	1126, 1125, 22784, 22784, -1000, 12059, -1000, 9245, 799, -1000,
	1061, 16724, 506, 506, 9245, 9245, 9245, 28700, 28700, 28700,
	-1000, -1000, -1000, -1000, 28700, -1000, -1000, 799, 799, 9245,
	799, 792, 1755, 792, -1000, 792, -1000, -1000, 16724, -1000,
	18588, 22318, 681, -1000, -1000, -1000, -1000, 1121, 238, -1000,
	-1000, -1000, -1000, -1000, -1000, 1119, 207, 207, -1000, 1060,
	207, 1346, -1000, 754, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 207, -1000, 16258, -312,
	-1000, -1000, 1354, -1000, 285, -1000, -1000, 297, 297, 650,
	22784, 22784, 22784, -1000, 28354, -1000, -1000, -1000, 22784, 297,
	142, 1352, 297, 22784, 22784, 1485, -1000, -1000, 188, -1000,
	-1000, 28700, 9245, -110, 23250, 1276, 10652, -1000, -1000, -1000,
	1767, 690, 1330, -1000, -1000, 1351, -1000, 823, 643, 973,
	1507, -1000, -1000, -1000, 28700, -1000, 16724, 16724, 995, -1000,
	23716, -1000, -1000, -1000, -1000, 10183, 694, 18588, 931, 714,
	18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588, 18588,
	18588, 18588, 18588, 18588, 18588, 1015, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1116, -1000, 188, 1192, 1192, 661,
	661, 661, 661, 661, 661, 661, 24648, 1635, 14860, 14860,
	14860, 1635, 1214, 1214, 14860, 14860, 14860, 14860, 14860, 14860,
	1635, 1635, 14860, 1214, 1214, 1214, 1214, 14860, 14860, 14860,
	14860, 1635, 14860, 14860, 14860, 1635, 1214, 1259, 924, 13462,
	14860, 14860, 14860, 1214, 16724, 16724, 15792, 15326, 17190, 14860,
	14860, 1635, 725, 924, 29046, -1000, -1000, 18122, -1000, -1000,
	-1000, -1000, -1000, 1214, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 28354, 28354, 14860, 14860, 14860, 14860, 322, 28700,
	-1000, 1349, 1454, -1000, -1000, -1000, 1644, 24996, 20454, -1000,
	322, 1280, 25690, 28700, -1000, -1000, 25690, 28700, 9714, 29392,
	1308, -1000, -100, -122, -102, -1000, -1000, 660, -1000, -1000,
	-1000, 12995, -1000, 11121, 1706, 1485, 6900, 11590, -1000, 25668,
	1394, -1000, -70, -1000, -1000, -1000, 1373, -1000, 1373, 217,
	10, 1373, 1373, 1373, 1373, 1373, -20, -20, -20, -20,
	14, -1000, -1000, -1000, -1000, -1000, 1393, 1390, -1000, 1373,
	1373, 1373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1381, 219, 1376, 1376, 1376, 1376, 1376, 347, 347, -1000,
	16724, 1052, -1000, 28700, 9245, 1625, 9245, 275, 1389, 1312,
	-1000, 149, 1092, 28700, -1000, 28700, 28700, 22784, 22784, 22784,
	544, -1000, 28700, 1350, -1000, -1000, -1000, -1000, -1000, 1292,
	-1000, 1092, -1000, -1000, -1000, -1000, -1000, -1000, 924, 1114,
	1113, -1000, -1000, -1000, -1000, -1000, -1000, 793, -1000, -1000,
	-1000, -1000, 799, 28700, 28700, 28700, 1636, 799, 924, 557,
	1404, 1276, 1214, -1000, -1000, 1110, -1000, 1346, 1346, -1000,
	1346, 207, 1192, 1346, -1000, 1255, 1614, 1059, 28700, -1000,
	23250, -61, -1000, -127, 26970, -1000, -1000, -1000, 26970, -1000,
	110, -1000, 551, 1253, -1000, -1000, 26970, 99, 139, 26970,
	1292, 1753, 1635, 1214, 187, -1000, -1000, -1000, -1000, -1000,
	186, 1223, 642, -1000, 1502, 971, 971, 16724, -1000, -1000,
	-1000, 11121, 1707, -1000, 1525, 1524, 1415, -1000, -1000, 694,
	718, -1000, -1000, 958, -1000, -1000, -1000, -1000, 637, 1276,
	-1000, 3470, -1000, -1000, -1000, -1000, 931, 18588, 18588, 18588,
	557, 3470, 3436, 743, 3185, 661, 831, 831, 668, 668,
	668, 668, 668, 875, 875, -1000, -1000, -1000, 1214, -1000,
	-1000, -1000, 14860, 1241, -1000, -1000, 924, 636, 1241, 1241,
	14860, -176, -176, 1214, 1241, 1241, 1241, 1214, 1241, 14860,
	14860, 1241, -176, -176, -176, -176, 1241, 1241, 1241, 1241,
	14860, 1241, 1241, 1241, 14860, -1000, 16724, -1000, 1214, 1241,
	1241, 1241, -1000, 873, 998, 768, 1752, 1241, 721, 1751,
	1241, 1275, 18588, 18588, 18588, 1241, 1241, 14860, 822, -1000,
	16724, 1214, -1000, 946, 1328, 1313, 1241, 1214, 1309, 1241,
	1241, 189, 1276, -1000, 11121, 25690, 25690, 25690, 25690, 25690,
	-1000, 1480, 1469, -1000, 1477, 1476, 1463, 23250, 1247, 1214,
	264, 24996, -1000, 1276, -1000, 21852, 617, 566, 564, 563,
	1735, 25690, 1290, -1000, 1290, -1000, 631, -1000, -1000, 29046,
	-102, -125, -1000, -1000, 1308, -1000, 1016, -1000, -1000, 924,
	-1000, 627, 1603, 1635, 1305, 6431, -1000, -1000, -1000, -1000,
	504, -1000, -1000, -1000, 1388, 4426, -1000, 1543, 648, 655,
	1081, 1532, -1000, -1000, 293, -79, -1000, -1000, 1006, -20,
	-20, 1373, 1373, 213, 1373, -1000, -20, -1000, -1000, -1000,
	660, 1574, 660, 660, 660, 660, -20, 1058, 1058, -1000,
	-1000, -1000, -1000, 992, -1000, 1381, -1000, 970, -1000, -1000,
	-1000, -1000, -1000, -1000, 966, 1421, 28354, 188, 1631, -1000,
	-1000, -1000, 1742, -1000, -1000, 539, 67, 22784, 146, 261,
	183, -1000, 550, -1000, 549, -1000, -1000, -1000, -1000, -1000,
	9245, 28700, 22784, 9245, 9245, 1735, 1108, 1107, -1000, -1000,
	-1000, 792, 799, 1569, -1000, -1000, 18588, 22784, -1000, 272,
	-1000, -1000, -1000, -1000, 322, 570, -1000, -1000, -83, -1000,
	-1000, 547, 622, 616, 546, -1000, 80, 22784, -1000, 28354,
	1750, 1748, 97, 1747, 22784, 1507, -1000, 1302, -1000, -1000,
	605, 600, 640, 466, 466, -1000, 702, 466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 317, 1630, 10652, 10652,
	1495, -1000, -1000, -1000, 28700, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8776, 14860, -1000, 557, 3470, 3382,
	-1000, 18588, -1000, 1241, 14860, -176, 8307, -176, -176, 1241,
	-1000, 26504, -1000, -176, -176, -176, -176, -176, -176, 1241,
	1241, -176, -1000, -1000, -1000, -1000, -176, -176, -176, -176,
	1241, -176, -176, -176, 1214, 924, -1000, -1000, -1000, -1000,
	327, 1015, 327, 18588, 18588, -1000, 18588, 18588, -1000, -1000,
	18588, 3334, 3277, 1769, -213, -1000, 1335, 732, -1000, 16724,
	913, -1000, -1000, 18588, 18588, -1000, -1000, -1000, -1000, 1420,
	11121, 1276, 7369, -1000, 28354, 1327, -1000, 749, 715, 1454,
	1385, 1419, 1089, -1000, -1000, -1000, -1000, 1467, -1000, 1459,
	-1000, -1000, 1366, -1000, -1000, 1301, 1276, 28354, 18588, 617,
	-1000, 1276, 1276, 1276, 1729, 16724, 1290, -1000, -1000, 679,
	-1000, -1000, -117, -116, -1000, -1000, -1000, 10652, -1000, 6900,
	-1000, 6900, -1000, 24182, 530, 648, 472, -1000, 1081, -1000,
	-1000, 1081, -1000, -1000, -1000, 1377, -1000, 841, -1000, -1000,
	-1000, -1000, -1000, 18588, 1764, -1000, 1542, -1000, 1539, 1055,
	-1000, -1000, 1264, 660, 660, -20, -1000, -1000, 1373, -1000,
	660, -1000, 720, -1000, -1000, -1000, -1000, 660, 1239, -1000,
	1235, 1300, -1000, 1227, 74, 28700, -1000, -1000, -1000, 1414,
	-1000, -1000, -1000, 1263, 1297, -1000, 4850, 1104, 1102, 1097,
	-227, 111, -1000, 22784, 121, 149, 369, 1096, 28700, 22784,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 799, -1000,
	18588, 3470, 1092, -1000, -1000, -20, 28700, -1000, 22784, 678,
	26156, 22784, 93, 109, -1000, 22784, 22784, 1737, 22784, 1292,
	1415, 187, -1000, 5499, -1000, 1081, 618, -1000, -1000, 370,
	-1000, 1532, -1000, 5431, 1091, -1000, 19697, 19230, 28354, 1538,
	1534, 1090, 28700, 28354, -1000, -1000, 18776, 1088, 16724, -1000,
	28354, 28354, 1276, 612, -1000, -1000, -1000, 1283, 13928, -1000,
	-1000, 1214, -1000, 18588, 3470, -176, -1000, -1000, -1000, -1000,
	611, -1000, -1000, -176, -1000, 460, -1000, -1000, -1000, -1000,
	-1000, -1000, -176, -176, -1000, -1000, -1000, -1000, -1000, -176,
	-1000, -1000, -1000, -1000, 1214, 1373, 1373, -1000, 1373, 1376,
	-1000, 1373, 15, 1373, 7, 1214, 1214, 2770, 2654, 1921,
	1566, 946, 18588, 18588, 18588, 1276, -172, -1000, 924, 16724,
	1740, 1597, -1000, 1612, 1266, 1288, -1000, -1000, 14394, 1214,
	1514, 1223, -1000, 23250, 1213, -1000, 1729, 11121, 16724, 16724,
	-1000, -1000, 16724, 1375, -1000, 16724, -1000, -1000, -1000, -1000,
	28354, 259, -1000, 16724, 1213, 722, -1000, 28354, 28354, 28354,
	1706, 924, -1000, -1000, -1000, -1000, 6431, -1000, 1203, -1000,
	1373, 1373, 1533, -1000, 1532, 1081, -1000, -1000, -1000, 28354,
	-1000, 3470, -86, -1000, -1000, -1000, -1000, -1000, -1000, 660,
	-1000, -1000, -1000, -1000, -1000, -20, 1053, -20, 963, -1000,
	959, -1000, -1000, -261, 1370, -1000, 188, 28700, 102, 539,
	-1000, 4850, 4850, 4850, 85, 83, -1000, 833, -1000, -1000,
	-1000, 1051, 1050, 1049, 1092, 150, 832, 125, -1000, 1632,
	-1000, -1000, -1000, 3470, -90, -1000, 109, -1000, -1000, -1000,
	109, -1000, -1000, 137, 1292, 1292, 22784, 1292, -1000, -1000,
	18776, 335, 4850, 4850, -1000, 1052, 648, 1531, 472, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1087, -1000, 656, -1000,
	545, 335, 18776, 924, 713, 1605, -1000, 10652, 1733, 25690,
	-1000, -1000, -1000, 3470, -1000, 7838, -1000, 1214, 1726, -1000,
	-1000, -1000, -1000, -1000, 255, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18588, 18588, 18588, 18588, -1000, 946, 946,
	946, 18588, 1214, 1048, 924, 18588, 18588, 1529, -1000, 1276,
	-1000, -1000, 1276, 175, -1000, 28354, 1706, -1000, 924, 924,
	924, 28354, 924, 1191, -1000, 1276, 19988, -1000, 23250, 1188,
	1188, 1188, -1000, 555, 24182, 1619, 1619, -1000, -1000, 1186,
	-1000, -1000, 660, -1000, 660, 1256, 1250, -1000, 24182, -1000,
	1702, -1000, 102, -1000, 1047, 229, 191, -1000, 228, 227,
	226, 224, 206, -1000, -1000, -1000, -1000, 368, 85, -1000,
	-66, 952, 258, 1585, 83, -1000, 944, 940, 928, 927,
	152, -1000, -1000, -1000, -1000, 182, 149, -1000, 366, 1041,
	1558, 1555, 1629, 1629, 92, 1292, 1307, 1243, -1000, -1000,
	1086, -1000, -1000, 1369, 1081, -1000, 1367, -1000, 1072, -1000,
	-1000, 28354, -1000, 335, 1610, 1609, 1276, -1000, 1731, 1725,
	1290, 13928, -1000, -1000, -1000, 16724, -1000, -1000, 946, 946,
	946, 946, -1000, -1000, -1000, 95, -1000, -1000, 946, 946,
	1763, -1000, 1288, 1276, -1000, 188, -1000, -1000, 1180, -1000,
	28354, -1000, -1000, 617, -1000, -1000, -1000, 555, -1000, 1066,
	702, 1038, -1000, -1000, -1000, 339, -1000, -1000, -1000, -1000,
	1178, -1000, 246, 5513, -1000, -1000, -1000, -1000, -1000, -1000,
	1562, 1561, 253, -1000, 1036, 1035, -1000, 344, 1045, 654,
	50, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 361, 1065, -1000, 124, -1000, -1000, 371, 1546,
	1548, 1723, -1000, 22784, -1000, -1000, 25690, -1000, -1000, 293,
	293, 24182, 1052, 24182, -1000, -1000, -1000, 18588, -1000, 306,
	-1000, 16724, 16724, 1733, -1000, 1274, -1000, -1000, -1000, -1000,
	1214, 178, -236, -1000, -1000, 11121, 1288, 1214, -1000, -1000,
	-1000, -1000, -1000, 891, -1000, 28700, 555, 201, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16724, 16724,
	5962, 5513, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	883, -1000, -1000, 933, 354, 113, -1000, 1628, -1000, 1366,
	852, 1555, 1715, 1552, 1550, -1000, 1034, -228, 1290, 1176,
	1365, 1174, 3470, 1170, -1000, 28354, -1000, 924, 1282, -1000,
	924, 1731, -1000, 1214, -1000, 1490, -218, -239, 1273, -1000,
	-1000, 1363, -1000, 555, 240, -1000, 876, 892, 203, 162,
	4026, -1000, -1000, -1000, -1000, -316, -1000, 108, -1000, 101,
	-1000, -1000, -1000, 1033, -1000, 1557, -1000, 1028, -1000, 1709,
	1708, -1000, 140, 1733, 555, 24182, 555, -1000, 306, 1512,
	16724, -1000, -1000, -1000, 1489, -1000, 28354, -1000, 1064, 961,
	731, -1000, 16724, 5513, 1685, 1682, 1639, 1604, 10652, 5505,
	-1000, -1000, -1000, -1000, -1000, 1022, 996, 21386, 1731, -1000,
	1168, -1000, -1000, 294, -1000, -232, 1162, 288, -1000, -1000,
	820, 5513, -1000, 880, -317, 379, 188, 548, 18588, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 82, 1092, -1000, 555,
	284, -237, 1413, -1000, -1000, -1000, -1000, -1000, -1000, 5513,
	-1000, -319, 5513, 3807, -1000, -1000, -1000, 5337, -1000, -1000,
	-1000, -1000, 158, -1000, -1000, 3470, 22784, -1000, 1276, -240,
	1412, 1409, 1746, -1000, -320, 5174, -322, 499, 5513, 774,
	-1000, 16724, -1000, 548, -1000, 1092, 17656, -1000, -1000, 1761,
	-1000, 1743, 480, 480, 5166, 814, 5513, -1000, -323, 495,
	5513, -1000, 865, -1000, 946, 1214, -1000, -1000, -1000, 345,
	947, -1000, -1000, -1000, 4633, -1000, -324, 5513, -1000, -1000,
	-1000, -1000, -1000, 494, 4381, -325, -1000, 477, 5513, -1000,
}
var yyPgo = [...]int{

	0, 2181, 2180, 75, 2179, 164, 2177, 2175, 2173, 18,
	12, 10, 20, 2170, 1904, 1900, 1898, 1896, 2168, 1894,
	2167, 46, 2162, 2159, 1890, 2158, 2157, 1873, 1870, 1864,
	1861, 2154, 2151, 2145, 1844, 1836, 2, 2144, 25, 2141,
	4, 126, 148, 2139, 3, 2135, 2131, 8, 2130, 2129,
	1834, 2128, 2127, 2126, 2125, 81, 2124, 1831, 1829, 2123,
	2121, 1814, 1810, 2119, 2118, 1805, 1799, 1784, 2117, 147,
	2116, 2115, 2112, 138, 86, 129, 2111, 2110, 2106, 100,
	58, 2024, 103, 42, 102, 476, 2105, 14, 41, 2104,
	2103, 125, 119, 2102, 135, 2101, 80, 98, 90, 2100,
	2099, 146, 2097, 2096, 2095, 118, 2094, 2093, 2746, 2092,
	2088, 132, 2085, 59, 49, 34, 2084, 2082, 2081, 2080,
	2079, 127, 1104, 2078, 2077, 140, 2076, 67, 2074, 2072,
	154, 2071, 2054, 2053, 121, 40, 2051, 38, 2050, 33,
	61, 2049, 48, 2046, 120, 2029, 2027, 27, 16, 2025,
	32, 2023, 43, 2018, 122, 139, 1209, 17, 31, 60,
	82, 117, 95, 22, 30, 107, 89, 78, 35, 2017,
	130, 2016, 70, 141, 115, 111, 134, 2013, 2012, 2010,
	929, 2008, 109, 62, 2007, 94, 812, 143, 106, 2006,
	84, 2005, 2004, 2003, 2002, 74, 101, 2000, 1999, 110,
	283, 37, 386, 2014, 2543, 165, 131, 1998, 47, 1997,
	1994, 3677, 93, 73, 97, 1993, 92, 55, 45, 1992,
	1990, 1989, 1988, 1987, 1985, 1694, 1984, 1983, 1982, 1981,
	133, 169, 1980, 1978, 112, 79, 1977, 1976, 1974, 1968,
	116, 65, 128, 1963, 99, 114, 77, 1961, 1959, 1958,
	1955, 57, 36, 1950, 1949, 1946, 91, 68, 1942, 56,
	28, 26, 64, 7, 66, 83, 1939, 24, 1938, 105,
	5, 6, 9, 1937, 1936, 1935, 1934, 1926, 1925, 1924,
	63, 1922, 1921, 53, 1920, 1918, 1916, 29, 1912, 1911,
	1910, 124, 104, 39, 136, 113, 23, 1909, 1908, 15,
	1907, 108, 1906, 50, 1902, 51, 1877, 1875, 54, 1866,
	1848, 52, 1846, 1822, 142, 1157, 168, 1807, 137, 123,
	44, 69, 1801, 1797, 0, 1337, 149, 145, 1789, 1757,
}
var yyR1 = [...]int{

	0, 323, 323, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 68, 3, 3,
	8, 4, 4, 4, 5, 5, 89, 90, 90, 94,
	94, 6, 6, 7, 7, 9, 9, 72, 72, 10,
	11, 11, 11, 11, 326, 326, 103, 103, 101, 101,
	102, 102, 165, 165, 12, 12, 12, 170, 170, 175,
	175, 175, 178, 178, 178, 178, 157, 158, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	297, 297, 306, 306, 306, 307, 307, 305, 305, 305,
	305, 305, 309, 309, 310, 310, 308, 308, 308, 308,
	312, 312, 313, 313, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 300, 300,
	300, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 314, 314, 314, 314, 315, 315, 316, 316, 317,
	317, 318, 318, 318, 318, 319, 319, 319, 319, 319,
	320, 320, 320, 320, 320, 320, 320, 321, 321, 322,
	322, 2, 278, 278, 279, 279, 280, 280, 280, 280,
	281, 281, 282, 282, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 25, 198, 198, 299, 299, 299,
	299, 293, 293, 293, 295, 295, 294, 294, 294, 296,
	296, 301, 301, 301, 301, 301, 303, 303, 303, 303,
	303, 303, 304, 304, 304, 302, 302, 48, 48, 49,
	49, 49, 153, 153, 153, 13, 13, 13, 13, 13,
	20, 22, 22, 37, 37, 38, 23, 23, 23, 23,
	39, 39, 40, 26, 26, 26, 26, 26, 26, 46,
	46, 46, 45, 45, 44, 44, 44, 44, 44, 44,
	24, 24, 24, 24, 47, 47, 42, 42, 41, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 27, 27, 27, 27, 27, 27, 19, 277, 277,
	277, 36, 36, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 53, 253, 254, 254, 254, 254, 254, 254,
	254, 254, 241, 241, 242, 218, 218, 218, 218, 218,
	218, 218, 218, 217, 217, 217, 217, 221, 221, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 220, 220,
	220, 220, 220, 220, 220, 220, 222, 222, 222, 222,
	222, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 224, 224, 224, 224,
	224, 224, 224, 224, 240, 240, 225, 225, 234, 234,
	235, 235, 235, 232, 232, 233, 233, 228, 229, 236,
	230, 230, 230, 231, 231, 231, 239, 239, 239, 239,
	226, 243, 243, 263, 263, 262, 262, 261, 261, 261,
	252, 252, 258, 258, 258, 258, 258, 258, 258, 247,
	247, 247, 246, 246, 248, 248, 251, 251, 260, 260,
	259, 259, 244, 244, 244, 264, 264, 264, 264, 264,
	245, 245, 245, 245, 265, 249, 249, 250, 250, 250,
	271, 272, 270, 270, 270, 270, 270, 118, 118, 118,
	255, 255, 255, 256, 256, 256, 257, 257, 257, 275,
	275, 274, 274, 50, 50, 51, 56, 56, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 152, 152, 152, 52, 196,
	196, 269, 269, 268, 266, 266, 267, 267, 15, 15,
	54, 54, 298, 298, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 273, 273, 273, 17, 17, 57, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 86, 184, 184,
	183, 183, 182, 182, 182, 185, 185, 185, 215, 215,
	215, 59, 59, 64, 64, 67, 67, 67, 65, 66,
	28, 29, 29, 29, 29, 30, 197, 197, 62, 62,
	63, 63, 63, 63, 78, 78, 328, 328, 61, 61,
	60, 60, 18, 329, 69, 70, 70, 71, 71, 71,
	188, 188, 75, 75, 75, 73, 73, 73, 74, 74,
	80, 80, 84, 84, 84, 84, 83, 83, 83, 83,
	155, 155, 155, 156, 156, 207, 207, 207, 206, 206,
	206, 206, 88, 88, 91, 91, 92, 92, 92, 92,
	95, 138, 138, 112, 112, 113, 113, 113, 113, 113,
	124, 124, 164, 164, 163, 163, 166, 166, 93, 93,
	93, 93, 98, 98, 99, 99, 100, 100, 195, 195,
	213, 213, 213, 104, 104, 104, 106, 105, 105, 105,
	105, 107, 107, 109, 110, 110, 108, 108, 111, 114,
	114, 114, 114, 115, 115, 85, 85, 85, 85, 85,
	85, 85, 181, 181, 117, 117, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 133, 133, 133, 133,
	133, 133, 119, 119, 119, 119, 119, 119, 119, 79,
	79, 134, 134, 134, 97, 96, 96, 82, 82, 81,
	81, 135, 135, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 128, 128,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 327, 327, 130, 129,
	129, 129, 129, 129, 129, 76, 76, 76, 76, 76,
	214, 214, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 145, 145, 77, 77, 143,
	143, 144, 146, 146, 142, 142, 142, 121, 121, 121,
	121, 121, 121, 121, 121, 123, 123, 123, 147, 147,
	136, 136, 87, 148, 148, 149, 150, 150, 151, 151,
	154, 159, 159, 159, 160, 160, 160, 160, 125, 125,
	161, 161, 161, 120, 120, 120, 120, 120, 120, 120,
	162, 162, 162, 162, 167, 167, 137, 137, 140, 140,
	139, 141, 168, 168, 172, 172, 169, 169, 173, 173,
	173, 173, 176, 176, 177, 177, 177, 174, 174, 174,
	171, 171, 171, 210, 210, 210, 179, 179, 189, 189,
	186, 186, 187, 187, 180, 180, 227, 227, 192, 192,
	192, 192, 192, 192, 192, 192, 194, 194, 193, 193,
	193, 190, 190, 190, 191, 191, 208, 208, 204, 204,
	209, 209, 205, 205, 211, 211, 212, 212, 276, 276,
	237, 237, 286, 286, 238, 238, 287, 287, 289, 289,
	284, 284, 285, 285, 288, 288, 31, 290, 290, 291,
	291, 292, 292, 292, 292, 32, 33, 33, 33, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 324, 325,
	199, 200, 200, 200,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 11, 4, 7,
	5, 1, 13, 3, 10, 12, 2, 1, 3, 3,
	6, 1, 3, 1, 3, 7, 8, 1, 1, 9,
	8, 7, 6, 6, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 2, 3,
	3, 11, 7, 9, 5, 5, 15, 11, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 2, 2, 2, 1, 3, 0, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 1, 3, 3,
	0, 2, 5, 5, 5, 7, 5, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 0, 3, 1, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 3, 5, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 4, 1, 1, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 0, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 2, 3, 1,
	0, 3, 3, 0, 2, 2, 2, 1, 2, 1,
	2, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 2, 4, 3, 4, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 0, 2, 1, 1, 5, 1, 3, 2, 5,
	4, 3, 3, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 8, 0, 1, 2, 4, 0,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 5, 6, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 4,
	4, 3, 6, 6, 4, 4, 4, 4, 4, 4,
	3, 3, 2, 6, 2, 4, 4, 4, 5, 7,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 1,
	1, 2, 1, 1, 1, 2, 4, 4, 1, 1,
	2, 3, 4, 4, 5, 3, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 2, 2,
	2, 2, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 4, 7, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 3, 2, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -323, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -57, -58, -59, -64, -65, -66,
	-62, -61, -60, -18, -24, -27, -19, -68, -28, -29,
	-30, -31, -32, -33, -34, -35, -4, 6, 7, -72,
	9, 10, 30, -53, 131, -51, -52, 134, 133, 170,
	135, 163, 64, 266, -67, 269, 270, -328, -197, 168,
	169, 137, 216, 217, 20, 37, 271, 273, 31, 32,
	185, 233, 235, -5, -89, -6, 8, 363, 132, 267,
	165, 164, 26, 412, -324, 68, 475, -150, 15, -69,
	-329, -69, -69, -69, -69, -69, -253, -195, 106, 68,
	23, -191, 144, 87, 354, 140, -198, 229, 231, -189,
	-190, 193, 203, 44, 151, 150, 141, 229, 141, 142,
	144, 354, 140, 178, 177, 229, 231, 141, -108, -211,
	72, -202, 154, 423, 254, 409, 132, 241, 190, 266,
	280, 274, 308, 296, 410, 424, 155, 211, 139, 294,
	297, 341, 153, 244, 204, 425, 330, 336, 214, 269,
	350, 426, 156, 208, 210, 209, 198, 264, 215, 36,
	166, 292, 250, 285, 219, 193, 427, 417, 283, 28,
	188, 428, 338, 313, 253, 429, 414, 248, 337, 288,
	284, 137, 430, 157, 151, 431, 314, 318, 432, 342,
	234, 433, 434, 435, 143, 240, 278, 279, 436, 194,
	344, 245, 312, 33, 152, 411, 48, 175, 345, 38,
	316, 37, 322, 437, 311, 306, 323, 438, 439, 440,
	441, 258, 256, 257, 259, 310, 277, 305, 206, 53,
	138, 320, 319, 321, 207, 340, 301, 299, 442, 443,
	249, 158, 444, 445, 286, 18, 446, 447, 348, 169,
	251, 252, 42, 448, 449, 450, 173, 451, 452, 453,
	339, 315, 317, 192, 454, 289, 148, 455, 255, 456,
	265, 413, 238, 346, 282, 457, 273, 174, 168, 349,
	458, 217, 459, 460, 461, 160, 462, 232, 231, 270,
	271, 332, 212, 463, 464, 465, 466, 202, 187, 352,
	343, 52, 216, 327, 467, 276, 150, 218, 468, 242,
	267, 43, 7, 205, 246, 333, 213, 203, 303, 176,
	469, 470, 290, 291, 309, 275, 304, 268, 178, 179,
	170, 262, 351, 328, 415, 229, 298, 295, 182, 302,
	471, 144, 472, 183, 272, 347, 243, 293, 329, 141,
	124, 297, 341, 131, 331, 332, 338, -247, 339, 177,
	180, -215, 141, -184, 330, 234, 255, 384, 183, 184,
	72, 142, 143, 33, 343, 342, 334, -211, 145, 272,
	-78, 135, 171, -108, -199, -199, -199, -199, -47, 72,
	218, -47, 30, 72, 72, 36, 72, 271, 333, 333,
	75, 413, 186, 21, -315, -296, 265, -314, -294, 8,
	159, 6, 9, -299, 74, 72, -202, -203, 380, 381,
	382, 383, 384, 397, 398, 399, 385, 386, 400, 401,
	402, 387, 388, 403, 404, 406, 407, 405, 181, 391,
	390, 389, 392, 393, 51, 395, 394, 396, 21, -315,
	-296, 265, 6, -71, 5, -180, 144, 146, 268, -90,
	-94, -213, -211, -203, 74, -3, -160, 17, 16, -75,
	54, 55, -70, -83, 115, -85, -211, -116, 89, -122,
	29, 72, -202, 24, -121, -203, -117, -142, -141, -97,
	124, 125, 126, 113, 114, 121, 90, 127, -128, -126,
	-127, -129, -131, -132, 74, 73, 82, 75, 76, 77,
	78, 83, 380, 381, 382, 383, 384, 397, 398, 399,
	385, 386, 400, 401, 402, 387, 388, 403, 404, 406,
	407, 405, 391, 390, 389, 392, 393, 395, 394, 396,
	84, 85, -204, -139, -324, 58, 59, 171, 140, 364,
	365, 366, 367, 368, 408, 161, 372, 92, 47, 353,
	362, 361, 360, 358, 359, 355, 357, 356, 374, 375,
	147, 354, 119, 363, -180, -180, 11, -101, -102, -108,
	-111, -211, -169, 268, -176, -173, 342, 343, -174, -177,
	-171, -142, 322, 452, 453, 341, 297, 340, -204, -211,
	-2, -5, 6, -108, -254, -242, -245, -205, 156, -265,
	-204, -201, 153, 72, -202, 247, 136, 162, 88, 416,
	23, 25, 237, 325, 380, 91, 124, 381, 382, 383,
	16, 20, 92, 123, 81, 364, 186, 384, 131, 62,
	355, 357, 353, 354, 331, 29, 10, 26, 164, 197,
	22, 117, 133, 95, 96, 97, 167, 24, 165, 260,
	85, 161, 19, 65, 11, 180, 233, 13, 378, 379,
	14, 230, 147, 146, 108, 195, 142, 60, 8, 127,
	27, 105, 56, 385, 386, 419, 45, 185, 420, 58,
	106, 17, 358, 359, 31, 408, 387, 172, 421, 388,
	119, 200, 63, 50, 236, 89, 83, 34, 86, 66,
	87, 15, 196, 61, 376, 239, 261, 177, 199, 422,
	159, 107, 134, 363, 263, 235, 59, 140, 6, 373,
	30, 163, 391, 390, 389, 392, 201, 57, 366, 367,
	393, 473, 141, 94, 374, 375, 145, 84, 5, 44,
	32, 9, 64, 67, 360, 361, 362, 47, 51, 395,
	394, 396, 93, 12, 377, 412, 181, 142, -108, 363,
	-187, 147, -187, 178, 177, -187, -187, 141, 98, -54,
	-108, -298, -293, -299, -186, 147, -204, -186, -186, -186,
	-186, -186, -186, -186, -108, 128, -108, 72, 30, -185,
	106, 12, 354, 140, 72, 177, 180, 141, 178, 144,
	-200, -324, -205, -200, -249, 11, 108, 181, 181, 181,
	182, 181, -183, 333, 335, 179, 336, 337, 12, -86,
	106, 19, -324, -160, -160, -200, 72, 271, 145, -63,
	-3, -11, -9, -10, -3, 98, 30, 30, 74, 51,
	30, -42, -41, -43, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 30, -277, 68, -237,
	322, 72, -290, -291, -108, 75, 75, 66, 66, 69,
	145, 69, 66, -316, 68, -316, -316, -316, 71, 66,
	69, 255, 66, 11, 66, -69, -7, -5, -324, 21,
	22, 141, -108, 346, 69, 23, -324, -325, 70, -161,
	19, 31, -125, 75, 78, -151, -154, -85, -211, 50,
	-73, 21, 22, 80, 11, -207, 88, 87, 105, -206,
	23, 72, -202, -203, 74, 128, -85, -119, 108, 89,
	106, 107, 91, 110, 109, 120, 113, 114, 115, 116,
	117, 118, 119, 111, 112, 123, 98, 99, 100, 101,
	102, 103, 104, -181, -324, -97, -324, 129, 130, -122,
	-122, -122, -122, -122, -122, -122, -122, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, -324, -3, -135, -85, -324,
	-324, -324, -324, -324, -324, -324, -324, -324, -324, -324,
	-324, -324, -145, -85, -324, -327, -130, -324, -327, -130,
	-327, -130, -327, -324, -327, -130, -327, -130, -327, -327,
	-130, -327, -324, -324, -324, -324, -324, -324, -110, 27,
	-108, -88, -91, -92, -93, -112, -96, -324, -108, -97,
	-108, -101, -326, 69, 11, 67, -326, 69, 128, 69,
	-170, -175, 344, 346, 268, -174, -174, -210, -204, 74,
	29, 98, 30, 128, -150, -69, 70, 69, -245, 156,
	153, -217, -221, -223, -222, -224, -219, -220, 294, 297,
	301, 299, 295, 300, 124, 298, 303, 304, 305, 306,
	307, 308, 309, 310, 311, 312, 313, 30, 166, 290,
	291, 292, 293, 314, 315, 316, 317, 318, 319, 320,
	321, 274, 296, 410, 275, 276, 277, 278, 279, 280,
	282, 283, 284, 285, 286, 287, 288, 72, -203, -265,
	68, -204, 23, 144, 72, 89, 72, 72, 72, -302,
	-301, -293, -296, -187, 72, 69, 145, 69, 145, 71,
	-101, 24, 66, -103, -108, 72, 72, 72, 72, -295,
	-293, -296, -212, -211, -201, -200, -185, 74, -85, -187,
	-187, -200, -200, -200, -108, -108, -108, -108, -185, -185,
	-200, -185, -182, 11, 108, 11, -182, -182, -85, -122,
	-293, 356, 115, 72, 72, 271, 72, -42, -42, 74,
	-42, 69, 98, -42, 70, -135, -276, 474, 69, -292,
	23, 346, 347, 323, -318, 141, 180, 177, -318, -314,
	-295, -294, -293, -317, -204, -299, -318, 233, 69, -318,
	-295, -293, -75, -3, -108, -200, 347, 348, -94, -96,
	-324, -162, -205, 9, 108, 69, 18, 69, -159, 25,
	26, 128, -123, 51, 75, 78, -188, 49, -108, -85,
	-85, -133, 83, 89, 84, 85, -206, 115, -212, -205,
	-201, -122, -134, -139, -97, 79, 108, 106, 107, 91,
	-122, -122, -122, -122, -122, -122, -122, -122, -122, -122,
	-122, -122, -122, -122, -122, -214, 72, 74, 72, -121,
	-121, -204, -73, -81, -84, 115, -85, -211, -81, -81,
	-73, -325, -325, -84, -81, -81, -81, -84, -81, -73,
	-73, -81, -325, -325, -325, -325, -81, -81, -81, -81,
	-73, -81, -81, -81, -73, -325, 69, -325, -3, -81,
	-81, -81, -325, -85, -85, -142, 74, -81, -142, 74,
	-81, -122, 369, 370, 371, -81, -81, -73, -143, -144,
	93, -142, -325, -122, -204, -204, -81, -82, -81, -81,
	-81, -165, 173, -108, 30, 69, -104, -106, -105, -107,
	56, 60, 62, 57, 58, 59, 63, -195, -88, -95,
	47, -324, -113, 173, -114, 23, -213, 64, 146, 65,
	-165, 67, -88, -108, -88, -111, -211, 115, -173, -176,
	69, 345, 347, 348, -170, -231, 123, 66, 86, -85,
	-205, -212, -160, -75, -255, -256, -257, -205, 74, 75,
	-242, -243, -244, -245, -258, 156, -264, 148, 150, 44,
	-246, 157, 142, 45, -218, -232, 328, -225, 68, -225,
	-225, 302, 294, 297, 295, -225, -225, -225, -225, -225,
	-230, 297, -230, -230, -230, -230, 295, 68, 68, -225,
	-225, -225, -234, 68, -234, 289, -235, 68, -235, -235,
	-235, -235, -265, -265, -85, -208, 67, -157, -108, -200,
	24, -200, -48, 190, 162, 68, -297, 69, 29, -303,
	230, -108, -108, -108, -293, -293, -299, -273, 160, 155,
	-108, 69, 69, 72, 72, -250, 11, 108, -185, -211,
	-211, -108, -124, 23, -185, -79, 167, 67, -327, -325,
	72, -41, -121, 70, -109, 27, 74, -291, -213, 322,
	347, -319, 115, -204, -319, -322, 412, 145, 70, 69,
	-319, 251, 233, -319, 11, -73, -325, -56, -55, -192,
	136, 133, 134, 138, 139, -268, 325, 132, 297, 81,
	29, 15, 364, 173, 415, 72, 174, -325, 69, 128,
	52, -125, -125, -154, -179, 19, 11, 47, 47, -74,
	57, 83, 84, 85, 128, -324, -134, -122, -122, -122,
	-79, 88, -325, -81, 69, -325, 128, -325, -325, -81,
	-155, 376, -155, -325, -325, -325, -325, -325, -325, -81,
	-81, -325, -155, -155, -155, -155, -325, -325, -325, -325,
	-81, -325, -325, -325, -82, -85, -325, -325, -325, -325,
	69, 67, 23, 11, 11, -325, 11, 11, -325, -325,
	11, -122, -122, -122, -325, -325, -81, -146, -144, 95,
	-85, -325, -325, 69, 69, -325, -325, -325, -325, -120,
	30, 47, -324, -3, -324, -168, -172, -142, -201, -91,
	-92, -92, -91, -92, 56, 56, 56, 61, 56, 61,
	56, -105, -213, -325, -325, -138, 189, -324, 34, -213,
	-114, 142, 142, 142, -115, 12, -88, -115, -115, 128,
	-175, -178, 349, 346, 352, 72, 74, 128, -161, 69,
	-257, 98, -245, 68, 72, 44, -203, 45, -246, 142,
	45, -246, -251, 72, -251, 45, 83, 89, -228, -229,
	-236, -239, -226, 29, 66, 325, 148, 45, 44, 81,
	-233, 329, 75, -230, -230, -225, -225, -225, 302, -225,
	-230, -231, 30, -231, -231, -231, -231, -230, -240, 74,
	-240, 75, -234, 75, 70, 66, -204, -3, 23, -49,
	8, 9, 10, -278, -279, -280, 72, 108, 195, 196,
	-306, 263, -301, 231, 240, 88, 16, 412, 145, 145,
	-200, -108, -293, -200, -200, -115, 72, 72, -182, -185,
	34, -122, -296, 183, 184, -165, 141, -292, 145, 128,
	128, 145, 254, -295, -204, 11, 11, 251, 11, -295,
	-188, 69, -199, -196, -269, -246, -275, -244, -245, -274,
	149, 157, 173, 156, -196, -269, 156, 153, -246, 157,
	148, 149, -193, -246, 145, 23, -196, -196, -252, 98,
	-196, 173, 23, -205, -205, 53, -108, -80, -158, 115,
	-205, -82, -79, 88, -122, -325, -84, -156, -155, 115,
	-212, -156, -156, -325, -204, -324, -155, -156, -156, -155,
	-155, -155, -325, -325, -155, -156, -156, -156, -156, -325,
	-156, -156, -156, -325, -216, 124, 294, 166, 292, 285,
	312, 299, 327, 290, 328, -214, -216, -122, -122, -122,
	-122, -122, 11, 11, 11, 409, -150, 97, -85, 94,
	-122, -122, -167, 66, -168, -137, -140, -139, -324, -3,
	-325, -162, 6, 412, -166, -204, -115, 69, 98, 98,
	-99, -98, 66, 67, -100, 66, -98, 56, 56, -164,
	68, 69, -139, -324, -166, -122, -114, -324, -324, -324,
	-150, -85, -115, 346, 350, 351, -256, -257, -260, -259,
	-204, -203, 148, -264, 157, -246, -264, -251, -251, 68,
	83, -122, 9, 45, 45, 74, 70, -231, -231, -230,
	-225, -231, 72, 124, -231, 70, 69, 70, 69, 70,
	69, -118, 428, 89, -108, -157, -157, 66, 70, 69,
	-217, 72, 72, 72, -309, 412, 236, -307, -305, 242,
	243, 244, 245, 246, -296, 241, -303, 238, 74, 72,
	-108, -293, -185, -122, -230, -108, -295, 115, 115, -204,
	-295, 251, -321, 412, -295, -295, 11, -295, -74, -55,
	68, -241, 72, -203, -199, -251, -190, 148, 72, 72,
	-199, 72, -203, 72, -203, -204, 45, 45, 72, -108,
	-204, -241, 72, -85, -204, -204, -96, 128, -115, 11,
	69, -83, -325, -122, -156, 128, -156, -150, 173, -156,
	-156, -156, -325, -225, -225, -225, -235, -225, 279, -225,
	279, -325, -325, 19, 19, 19, 19, -325, -122, -122,
	-122, -324, -77, 373, -85, 69, 69, 28, -167, 69,
	-325, -325, 47, -325, -325, 69, -150, -172, -85, -85,
	-85, 68, -85, -163, -204, 189, -325, -114, -195, -163,
	-163, -163, -160, 70, 69, -225, -225, 45, -251, -163,
	-127, -231, -230, 74, -230, 75, 75, 428, 68, -3,
	-108, -281, -282, -283, 81, 411, 89, 197, 198, 158,
	199, 200, 201, -280, -217, -217, -217, -312, -313, -311,
	239, 260, 261, 247, -310, -308, 256, 257, 258, 259,
	88, 74, 74, 74, -304, 230, 88, 239, 16, 23,
	-284, -183, -321, -321, 233, -295, -80, -241, -152, 161,
	162, -217, -217, -208, -248, -246, 45, 72, -194, 145,
	23, 145, -152, -241, 30, 133, 27, -205, -147, 13,
	-88, -158, -158, 115, -325, 16, -230, 72, -122, -122,
	-122, -122, -325, -325, -325, -122, -325, 74, -122, -122,
	45, -140, -137, 47, -3, -324, -204, -160, -163, 70,
	69, -139, -113, -213, -325, -325, -325, -262, -261, 67,
	152, 81, -259, -159, -159, 70, -231, -231, 70, 70,
	-260, -157, 19, -157, -283, 74, 201, 197, 201, 201,
	201, 201, 202, -300, 81, 237, -311, 248, 434, 232,
	263, 75, 75, 262, 31, 32, -308, 75, 75, 75,
	75, -305, 16, 412, -303, 238, 74, 74, -285, 38,
	-287, 39, -320, 23, -320, 251, 11, 70, 72, -218,
	-218, 68, -251, 68, 72, -204, -152, 29, 29, -324,
	-148, 14, 16, -115, -83, -135, -325, -325, -325, -325,
	-76, 108, 412, -325, -325, 9, -137, -3, 70, -204,
	-114, -261, 72, -252, 74, 159, 70, 188, -21, -3,
	-9, -10, -11, -12, -14, -50, -15, -16, -22, -23,
	-17, -57, -58, -67, -65, -66, -62, -61, -26, -24,
	-27, -19, -28, -29, -30, -34, -35, -25, 92, 147,
	219, 266, 36, 36, 193, 194, 74, 74, 29, 249,
	127, 29, 75, 127, 264, 238, 74, 72, 239, -227,
	146, -288, 43, -286, -238, 42, 16, -293, -88, -260,
	-208, -260, -122, -266, -267, 173, -149, -85, -136, -87,
	-85, -147, -158, -150, -325, 410, 63, 413, -168, -325,
	75, -108, -263, -262, 189, -157, -85, -85, 72, -46,
	-209, 222, 223, 224, -205, -36, -21, 75, 29, 75,
	29, 252, 239, 23, -164, 75, -287, 16, -289, 40,
	41, 74, 412, -115, 70, 68, 70, -325, 69, -204,
	69, -148, -325, 53, 411, 414, 68, -153, 191, 192,
	-37, -38, 93, 94, 220, 221, 225, -217, 69, 475,
	250, 250, 74, 38, 74, 16, 16, 231, -147, -263,
	-260, -263, -267, 47, -87, 53, -163, -157, 72, 72,
	97, 95, -38, -85, -36, 19, 19, 19, 29, -205,
	97, -21, 74, 74, 29, 236, 21, -296, -148, 70,
	175, 412, 70, -13, -20, -12, -9, -10, -11, 266,
	92, -36, 94, 475, -47, 75, -3, -45, -44, 75,
	-47, 227, 89, 228, 72, -122, 253, -263, 176, 413,
	-271, -272, 66, -157, -36, 475, -36, 97, 95, -39,
	-40, 96, -21, 69, 226, -296, -324, 414, -272, 66,
	-271, 66, 10, 9, 475, 97, 475, 147, -36, 97,
	95, -40, -85, -44, -122, 172, -270, 160, 155, 158,
	30, -270, 97, 92, 475, 147, -36, 94, -325, -325,
	154, 29, 83, 97, 475, -36, 147, 97, 475, 147,
}
var yyDef = [...]int{

	36, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, -2, 673, 673, 673,
	673, 673, 673, 748, -2, 523, 524, 0, 0, 0,
	0, -2, 642, 643, 644, 648, 649, 664, -2, 1530,
	1530, 1530, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 0, 0, 57, 58, 1054, 0,
	667, 656, 657, 0, 0, 1528, 2, 994, 0, 682,
	675, 0, 1054, 1054, 0, 0, 88, 0, 0, 0,
	749, 0, 0, 0, 1052, 1052, 0, 1052, 1052, 0,
	1075, 0, 1049, 1071, 1072, 1073, 0, 0, 1050, 0,
	1050, 1050, 1050, 1050, 1050, 1050, 1050, 0, 587, 766,
	1084, 1085, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 0,
	0, 0, 635, 0, 1531, 1531, 602, 0, 604, 0,
	0, 0, 0, 0, 614, 617, 621, 0, 994, 994,
	1531, 469, 470, 471, 639, 640, 629, 641, 0, 0,
	0, 0, 0, 668, 669, 670, 671, 672, 280, 282,
	0, 302, 0, 305, 308, 1090, 650, 0, 0, 1115,
	1116, 0, 0, 0, 0, 0, 1419, 155, 219, 157,
	157, 157, 157, 218, 207, 208, 209, 210, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 0, 0,
	0, 1419, 673, 0, 677, 0, 0, 1055, 645, 46,
	47, 0, 750, 751, 752, 0, 1000, 0, 0, 685,
	683, 684, 674, 0, 696, 705, 0, 775, 0, 780,
	782, -2, -2, 0, 823, 824, 825, 826, 827, 828,
	0, 0, 0, 0, 0, 0, 0, 0, 852, 853,
	854, 855, 856, 857, 967, 968, 969, 970, 971, 972,
	973, 974, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527,
	784, 785, 964, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 955, 0, 926,
	926, 926, 926, 926, 926, 926, 926, 926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	70, 766, 74, 1476, 0, 1026, -2, -2, 1028, 0,
	0, 0, -2, -2, -2, -2, 1289, -2, 964, 0,
	89, 986, 673, 90, 0, 344, 345, 0, 1301, 493,
	1082, 1083, 1291, 1078, 1079, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1052, 0, 568,
	0, 569, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 588, 1531, 635, 591,
	0, 0, 1052, 1052, 1531, 1531, 1531, 0, 0, 0,
	600, 1532, 1533, 601, 0, 495, 496, 635, 635, 1531,
	635, 632, 0, 632, 611, 632, 630, 631, 0, 616,
	0, 0, 0, 624, 625, 626, 651, 0, 0, 658,
	660, 661, 662, 663, 659, 0, 0, 0, 284, 0,
	0, 304, 286, 0, 289, 290, 291, 292, 293, 294,
	295, 296, 297, 298, 299, 300, 0, 307, 0, 1088,
	1091, 655, 1106, 1107, 0, 1117, 1118, 161, 161, 0,
	0, 0, 0, 151, 0, 152, 153, 154, 217, 161,
	0, 0, 161, 0, 0, 682, 43, 53, 0, 678,
	679, 0, 1531, 0, 0, 0, 0, 52, 1529, 38,
	0, 0, 995, 998, 999, 987, 988, 991, 0, 0,
	680, 686, 687, 676, 0, 697, 0, 0, 0, 706,
	0, 708, 709, 710, 711, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 803, 804, 805,
	806, 807, 808, 781, 0, 795, 0, 0, 0, 844,
	845, 846, 847, 848, 849, 850, 0, 685, 0, 0,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 0, 0, 685, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 956, 0, 909, 918, 0, 910, 919,
	911, 920, 912, 0, 913, 921, 914, 922, 915, 916,
	923, 917, 0, 0, 0, 817, 0, 0, 72, 0,
	765, 0, 712, 714, 715, 716, -2, 0, 769, 815,
	-2, 0, 0, 0, 64, 65, 0, 0, 0, 0,
	75, 77, 0, 0, 1476, 1029, 1030, 443, 1043, 1044,
	1045, 0, 1041, 0, 994, 682, 510, 0, 346, 0,
	0, 355, 433, 364, 365, 366, 426, 368, 426, 426,
	0, 426, 426, 426, 426, 426, 440, 440, 440, 440,
	440, 409, 410, 411, 412, 413, 0, 0, 386, 426,
	426, 426, 390, 416, 417, 418, 419, 420, 421, 422,
	423, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	428, 428, 430, 430, 430, 430, 430, 0, 0, 492,
	0, 1076, 86, 0, 1531, 0, 1531, 0, 0, 100,
	235, 221, 99, 0, 206, 0, 0, 0, 0, 212,
	583, 1051, 0, 576, 66, 577, 578, 579, 580, 581,
	214, 582, 767, 1086, 1087, 589, 590, 636, 637, 0,
	0, 594, 595, 596, 597, 598, 599, 497, 605, 606,
	607, 613, 635, 0, 0, 0, 730, 635, 615, 809,
	618, 926, 0, 653, 652, 0, 665, 281, 283, 285,
	303, 0, 0, 306, 309, 0, 0, 0, 0, 1109,
	0, 1111, 1113, 0, 0, 162, 163, 164, 0, 156,
	179, 220, 0, 0, 159, 216, 0, 0, 0, 0,
	149, 0, 685, 0, 0, 558, 646, 647, 48, 49,
	0, 0, 1010, 1001, 0, 0, 0, 0, 990, 992,
	993, 0, 0, 975, 0, 0, 688, 681, 40, 776,
	777, 779, 796, 0, 798, 800, 707, 698, 0, 965,
	-2, 786, 787, 811, 812, 813, 0, 0, 0, 0,
	809, 791, 0, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 843, 940, 941, 0, 841,
	842, 851, 0, 0, 819, 692, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 817, 814, 0, 1020, 0, 0,
	0, 0, 891, 0, 0, 826, 967, 0, 826, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 959,
	0, 0, 927, 0, 0, 0, 0, 0, 818, 0,
	0, 0, 0, 764, 0, 0, 0, 0, 0, 0,
	753, 0, 0, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 1405, 725, 0, 769, 0, 0, 0,
	773, 0, 773, 69, 773, 71, 0, 768, 1027, 0,
	0, 0, 80, 81, 76, 1031, 0, 1037, 1038, 1039,
	965, 0, 1000, 685, 343, 511, 513, 516, 517, 518,
	347, 349, 350, 351, 0, 1301, 484, 1415, 1455, -2,
	476, 1332, -2, -2, 354, 435, 434, 367, 0, 440,
	440, 426, 426, 426, 426, 395, 440, 398, 401, 402,
	443, 0, 443, 443, 443, 443, 440, 0, 0, 387,
	388, 389, 378, 0, 379, 428, 381, 0, 382, 383,
	384, 385, 490, 491, 0, 0, 0, 0, 0, 94,
	1053, 95, 0, 237, 238, 182, 102, 0, 0, 222,
	0, 342, 0, 570, 0, 572, 211, 574, 584, 585,
	1531, 0, 0, 1531, 1531, 773, 0, 0, 608, 633,
	634, 632, 635, 0, 612, 627, 0, 0, 619, 0,
	654, 287, 288, 310, 72, 0, 1089, 1108, 0, 1112,
	1114, 0, 165, 167, 0, 143, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 680, 54, 525, 526, 1530,
	-2, 559, 1068, 559, 559, 546, 460, 559, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 0, 0, 0, 0,
	0, 996, 997, 989, 0, 1046, 1047, 976, 977, 87,
	689, 797, 799, 801, 0, 817, 788, 809, 792, 0,
	789, 0, 783, 0, 0, 703, 0, 703, 703, 0,
	877, 0, 878, 0, 703, 703, 0, 0, 0, 0,
	0, 0, 884, 885, 886, 887, 703, 703, 703, 703,
	0, 703, 703, 703, 0, 822, -2, 888, 889, 890,
	0, 0, 0, 0, 0, 933, 0, 0, 934, 899,
	0, 0, 0, 0, 0, 905, 986, 0, 960, 0,
	0, 908, 928, 0, 0, 929, 930, 931, 932, 1014,
	0, 0, 0, 1005, 0, 773, 1022, 0, 0, 713,
	744, 746, 0, 741, 754, 755, 757, 0, 759, 0,
	761, 762, 732, 719, 816, 720, 0, 0, 0, 769,
	729, 0, 0, 0, 986, 0, 773, 62, 63, 0,
	78, 79, 0, 0, 85, 444, 445, 0, 181, 0,
	514, 0, 348, 0, 0, 0, 0, 462, 476, 472,
	473, 476, 467, 477, 468, 0, 356, 0, 358, 359,
	360, 361, 362, 0, 0, 439, 0, 447, 449, 0,
	363, 436, 0, 443, 443, 440, 393, 394, 426, 399,
	443, 403, 0, 404, 405, 406, 407, 443, 0, 424,
	0, 0, 380, 0, 507, 0, 1077, 86, 86, 0,
	239, 240, 241, 0, 183, 184, 0, 0, 0, 0,
	112, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	575, 67, 215, 592, 593, 603, 498, 499, 635, 610,
	0, 810, 620, 622, 623, 440, 0, 1110, 0, 0,
	0, 0, 0, 177, 160, 0, 0, 0, 0, 150,
	688, 0, 528, 0, 1530, 476, 0, 547, 548, 0,
	560, 561, 562, 0, 0, 1530, 0, 0, 0, 561,
	0, 0, 0, 0, 1069, 1070, 0, 0, 0, 461,
	0, 0, 0, 1012, 1011, 1002, 39, 773, 0, 699,
	966, 0, 790, 0, 793, 703, 820, 862, 704, 694,
	0, 863, 864, 703, 700, 986, 879, 866, 867, 880,
	881, 882, 703, 703, 883, 871, 870, 869, 872, 703,
	875, 874, 876, 858, 0, 426, 426, 945, 426, 430,
	948, 426, 950, 426, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 907, 963, 0,
	0, 0, 55, 0, 1014, 1003, 1016, 1018, 0, 0,
	0, 0, -2, 1269, 0, 736, 986, 0, 0, 0,
	738, 745, 0, 0, 739, 0, 740, 758, 760, 717,
	0, 0, 721, 0, 0, -2, 728, 0, 0, 0,
	994, 774, 61, 82, 83, 84, 512, 515, 0, 478,
	426, 426, 0, 482, 0, 476, 483, 464, 466, 0,
	357, 437, 0, 446, 448, 450, 427, 391, 392, 443,
	400, 396, 441, 442, 408, 440, 0, 440, 0, 431,
	0, 494, 508, 0, 0, 92, 0, 0, 190, 0,
	186, 0, 0, 0, 120, 0, 103, 104, 105, 107,
	108, 0, 0, 0, 101, 0, 224, 0, 227, 228,
	571, 573, 609, 731, 1100, 763, 177, 166, 168, 169,
	177, 180, 144, 0, 145, 147, 0, 146, 87, 527,
	0, 555, 0, 0, 531, 1076, 474, 0, -2, 532,
	533, 538, 539, 540, 541, 542, 0, 553, 0, 535,
	0, 555, 0, 550, 0, 0, 50, 0, 978, 0,
	87, 87, 859, 794, 861, 0, 865, 0, 0, 860,
	868, 873, 892, 942, 440, 946, 947, 949, 951, 952,
	954, 894, 893, 0, 0, 0, 0, 900, 0, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 56, 0,
	1019, -2, 0, 0, 73, 0, 994, 1023, 1024, 1025,
	742, 0, 747, 0, 734, 0, 769, 726, 0, 0,
	0, 0, 60, 452, 0, 991, 991, 463, 465, 0,
	438, 397, 443, 425, 443, 0, 0, 509, 0, 86,
	0, 86, 191, 192, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 185, 187, 188, 189, 138, 121, 122,
	0, 0, 0, 0, 113, 114, 0, 0, 0, 0,
	0, 109, 110, 111, 223, 0, 0, 226, 0, 0,
	1102, 1096, 170, 170, 0, 148, 0, 0, 530, 556,
	0, 355, 355, 0, 476, 475, 0, 549, 0, 1066,
	1067, 0, 544, 555, 0, 0, 0, 1013, 983, 0,
	773, 0, 690, 695, 701, 0, 943, 944, 0, 0,
	0, 0, 901, 902, 903, 935, 906, 958, 0, 0,
	0, 1017, 1004, 0, 1008, 0, 737, 59, 0, 733,
	0, 722, 724, 769, 770, 771, 772, 451, 455, 0,
	460, 0, 479, 480, 481, 0, 414, 415, 429, 432,
	0, 93, 0, 0, 193, 194, 195, 196, 198, 199,
	0, 0, 0, 98, 0, 0, 123, 0, 0, 0,
	0, 133, 134, 135, 136, 137, 115, 116, 117, 118,
	119, 106, 0, 0, 225, 0, 230, 231, 1056, 1104,
	-2, 0, 141, 0, 142, 178, 0, 529, 557, 352,
	353, 0, 1076, 0, 534, 543, 545, 0, 552, 0,
	44, 0, 0, 978, 87, 986, 895, 897, 896, 898,
	0, 0, 0, 924, 925, 0, 1007, 0, 743, 735,
	727, 456, 457, 0, 459, 0, 453, 0, 86, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 0, 0,
	0, 0, 200, 201, 202, 203, 139, 140, 124, 125,
	0, 127, 128, 0, 0, 0, 233, 0, 229, 732,
	0, 1096, 0, 1098, 0, 1095, 0, 171, 773, 0,
	0, 0, 551, 0, 564, 0, 984, 985, 979, 980,
	982, 983, 691, 0, 904, 0, 0, 0, 1015, -2,
	458, 0, 91, 454, 242, 97, 0, 0, 1078, 0,
	0, 269, 270, 271, 1080, 0, 311, 0, 129, 0,
	131, 132, 232, 0, 37, 0, 1103, 0, 1101, 0,
	0, 1097, 0, 978, 453, 0, 453, 563, 0, 0,
	0, 45, 702, 936, 0, 939, 0, 86, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 267, 0, 0,
	126, 130, 234, 1057, 1105, 0, 0, 0, 983, 536,
	0, 554, 565, 0, 981, 937, 0, 0, 243, 244,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 1081,
	204, 312, 1099, 1093, 172, 173, 174, 176, 42, 453,
	0, 0, 485, 86, 245, 246, 247, 248, 249, 0,
	251, 0, 0, 0, 263, 264, 265, 0, 272, 274,
	275, 276, 0, 278, 279, 268, 0, 537, 0, 0,
	486, 487, 0, 96, 0, 0, 0, 0, 0, 0,
	260, 0, 266, 0, 277, 175, 0, 938, 488, 0,
	489, 0, 0, 0, 0, 0, 255, 256, 0, 0,
	0, 261, 0, 273, 0, 0, 500, 502, 503, 0,
	0, 501, 250, 252, 0, 258, 0, 0, 566, 567,
	504, 505, 506, 0, 0, 0, 257, 0, 262, 259,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 475,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:472
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:476
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, nil)
		}
	case 37:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:531
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:544
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:584
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:630
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:642
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = InsertStr
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.str = ReplaceStr
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:721
		{
			yyVAL.partitions = nil
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:725
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:735
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:792
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:797
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:834
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:842
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 96:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:854
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:858
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:909
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:940
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:977
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1005
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1069
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1074
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1078
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1082
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1088
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1093
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1097
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1142
		{
			yyVAL.strs = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1161
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantAssumption = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1238
		{
			yyVAL.boolean = false
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.boolean = true
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1249
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.procedureParams = nil
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.characteristics = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1356
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1371
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1461
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 225:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1469
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1479
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1487
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1491
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1495
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1501
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1509
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = BeforeStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = AfterStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = InsertStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = UpdateStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = DeleteStr
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.triggerOrder = nil
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1552
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1556
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1572
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 252:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1598
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1604
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1609
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 258:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1614
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 259:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1620
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1638
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1644
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1652
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1656
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1664
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1725
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1743
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1759
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.statement = &Resignal{}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1846
		{
			yyVAL.exprs = nil
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.exprs = nil
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1904
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1921
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1944
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1948
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2337
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.sqlVal = nil
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2355
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2373
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2381
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2390
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = ""
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.colKeyOpt = colKey
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2468
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.indexOptions = nil
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2501
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2526
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 485:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2628
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 486:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2632
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 487:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2636
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2640
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 489:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2644
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2668
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.boolean = true
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.boolean = true
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.boolean = false
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = yyDollar[1].str
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string("")
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2809
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2836
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2843
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2871
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 537:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2875
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2894
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2907
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2914
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2936
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2945
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2949
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2957
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2964
		{
			yyVAL.columnOrder = nil
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2978
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2984
		{
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
		}
	case 563:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2994
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3004
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3010
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3014
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3030
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3034
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3046
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3052
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3060
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3064
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3072
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3080
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3112
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3121
		{

		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3155
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3159
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3163
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3167
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3172
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3176
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3180
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3188
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3192
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3196
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3204
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3208
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3216
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3220
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3224
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3232
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3237
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3246
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3258
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3276
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3281
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3285
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3290
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3294
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3298
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3316
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3328
		{
			yyVAL.boolean = false
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.boolean = true
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = ""
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3362
		{
			yyVAL.showFilter = nil
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = SessionStr
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = GlobalStr
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.statement = &Begin{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3404
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3410
		{
			yyVAL.statement = &Begin{}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3414
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3418
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.statement = &Commit{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.statement = &Rollback{}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3446
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3450
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3454
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = ""
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.statement = &OtherRead{}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3527
		{
			setAllowComments(yylex, true)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3537
		{
			yyVAL.bytes2 = nil
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = UnionStr
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = UnionAllStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = UnionDistinctStr
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3560
		{
			yyVAL.byt = 0
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3564
		{
			yyVAL.byt = 1
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3573
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.str = SQLCacheStr
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3582
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.str = DistinctStr
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = ""
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = StraightJoinHint
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3605
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3613
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3636
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3654
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3665
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3669
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3674
		{
			yyVAL.over = nil
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.over = yyDollar[1].over
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3743
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3749
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3765
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 724:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3776
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3791
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 727:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3795
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = nil
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.columns = nil
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3860
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3864
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3868
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3872
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3890
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3895
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.empty = struct{}{}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = JoinStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = JoinStr
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = JoinStr
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = StraightJoinStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = LeftJoinStr
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = LeftJoinStr
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = RightJoinStr
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = RightJoinStr
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = NaturalJoinStr
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3954
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.indexHints = nil
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3999
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4003
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4007
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = nil
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4030
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4038
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4080
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4084
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4088
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4096
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4104
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.str = IsNullStr
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4118
		{
			yyVAL.str = IsNotNullStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.str = IsTrueStr
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4126
		{
			yyVAL.str = IsNotTrueStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.str = IsFalseStr
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			yyVAL.str = IsNotFalseStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = EqualStr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = LessThanStr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = GreaterThanStr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = LessEqualStr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = GreaterEqualStr
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = NotEqualStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.expr = nil
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4209
		{
			yyVAL.selectExprs = nil
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4230
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4382
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4386
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4400
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4404
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4408
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4412
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4416
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4420
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4469
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4489
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4520
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4524
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4536
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4540
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4544
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4548
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4552
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 898:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 903:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 904:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4653
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4661
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 924:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4680
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 925:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4684
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = BooleanModeStr
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4739
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4743
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.str = QueryExpansionStr
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = nil
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = string("")
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4847
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = nil
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4870
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4892
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &NullVal{}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4923
		{
			yyVAL.exprs = nil
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = nil
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4963
		{
			yyVAL.orderBy = nil
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4983
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4988
		{
			yyVAL.str = AscScr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.str = AscScr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.str = DescScr
		}
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5001
		{
			yyVAL.limit = nil
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5005
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5009
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5013
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = ""
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5032
		{
			yyVAL.str = ForUpdateStr
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = ShareModeStr
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5053
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5066
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5070
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5074
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5089
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5093
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5098
		{
			yyVAL.assignExprs = nil
		}
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5102
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5128
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5197
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5210
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5234
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5244
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5255
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5266
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5270
		{
			yyVAL.expr = &Default{}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5279
		{
			yyVAL.byt = 0
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.byt = 1
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5284
		{
			yyVAL.byt = 0
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5286
		{
			yyVAL.byt = 1
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5289
		{
			yyVAL.byt = 0
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5291
		{
			yyVAL.byt = 1
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = IgnoreStr
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5299
		{
			yyVAL.sqlVal = nil
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.empty = struct{}{}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.empty = struct{}{}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.empty = struct{}{}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.empty = struct{}{}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5313
		{
			yyVAL.empty = struct{}{}
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.empty = struct{}{}
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			yyVAL.empty = struct{}{}
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.empty = struct{}{}
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.empty = struct{}{}
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.empty = struct{}{}
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5328
		{
			yyVAL.empty = struct{}{}
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.empty = struct{}{}
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
			yyVAL.empty = struct{}{}
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = UniqueStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = FulltextStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = SpatialStr
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5348
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5350
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = string("")
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5402
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5407
		{
			yyVAL.EnclosedBy = nil
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5411
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5416
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5425
		{
			yyVAL.sqlVal = nil
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5434
		{
			yyVAL.sqlVal = nil
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5443
		{
			yyVAL.Fields = nil
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5447
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5452
		{
			yyVAL.Lines = nil
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5461
		{
			yyVAL.sqlVal = nil
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5465
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5481
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5487
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5491
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.lockType = LockRead
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.lockType = LockWrite
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5509
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5515
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5525
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5529
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			decNesting(yylex)
		}
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5982
		{
			skipToEnd(yylex)
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5987
		{
			skipToEnd(yylex)
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			skipToEnd(yylex)
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5995
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
