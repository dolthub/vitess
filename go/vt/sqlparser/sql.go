// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DATA = 57377
const LOAD = 57378
const LINES = 57379
const TERMINATED = 57380
const ESCAPED = 57381
const ENCLOSED = 57382
const OPTIONALLY = 57383
const STARTING = 57384
const UNIQUE = 57385
const KEY = 57386
const SYSTEM_TIME = 57387
const VALUES = 57388
const LAST_INSERT_ID = 57389
const SQL_CALC_FOUND_ROWS = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const INTO = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_ARMSCII8 = 57457
const UNDERSCORE_ASCII = 57458
const UNDERSCORE_BIG5 = 57459
const UNDERSCORE_BINARY = 57460
const UNDERSCORE_CP1250 = 57461
const UNDERSCORE_CP1251 = 57462
const UNDERSCORE_CP1256 = 57463
const UNDERSCORE_CP1257 = 57464
const UNDERSCORE_CP850 = 57465
const UNDERSCORE_CP852 = 57466
const UNDERSCORE_CP866 = 57467
const UNDERSCORE_CP932 = 57468
const UNDERSCORE_DEC8 = 57469
const UNDERSCORE_EUCJPMS = 57470
const UNDERSCORE_EUCKR = 57471
const UNDERSCORE_GB18030 = 57472
const UNDERSCORE_GB2312 = 57473
const UNDERSCORE_GBK = 57474
const UNDERSCORE_GEOSTD8 = 57475
const UNDERSCORE_GREEK = 57476
const UNDERSCORE_HEBREW = 57477
const UNDERSCORE_HP8 = 57478
const UNDERSCORE_KEYBCS2 = 57479
const UNDERSCORE_KOI8R = 57480
const UNDERSCORE_KOI8U = 57481
const UNDERSCORE_LATIN1 = 57482
const UNDERSCORE_LATIN2 = 57483
const UNDERSCORE_LATIN5 = 57484
const UNDERSCORE_LATIN7 = 57485
const UNDERSCORE_MACCE = 57486
const UNDERSCORE_MACROMAN = 57487
const UNDERSCORE_SJIS = 57488
const UNDERSCORE_SWE7 = 57489
const UNDERSCORE_TIS620 = 57490
const UNDERSCORE_UCS2 = 57491
const UNDERSCORE_UJIS = 57492
const UNDERSCORE_UTF16 = 57493
const UNDERSCORE_UTF16LE = 57494
const UNDERSCORE_UTF32 = 57495
const UNDERSCORE_UTF8 = 57496
const UNDERSCORE_UTF8MB3 = 57497
const UNDERSCORE_UTF8MB4 = 57498
const INTERVAL = 57499
const JSON_EXTRACT_OP = 57500
const JSON_UNQUOTE_EXTRACT_OP = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const MODIFY = 57508
const CHANGE = 57509
const SCHEMA = 57510
const TABLE = 57511
const INDEX = 57512
const INDEXES = 57513
const VIEW = 57514
const TO = 57515
const IGNORE = 57516
const IF = 57517
const PRIMARY = 57518
const COLUMN = 57519
const SPATIAL = 57520
const FULLTEXT = 57521
const KEY_BLOCK_SIZE = 57522
const CHECK = 57523
const ACTION = 57524
const CASCADE = 57525
const CONSTRAINT = 57526
const FOREIGN = 57527
const NO = 57528
const REFERENCES = 57529
const RESTRICT = 57530
const FIRST = 57531
const AFTER = 57532
const SHOW = 57533
const DESCRIBE = 57534
const EXPLAIN = 57535
const DATE = 57536
const ESCAPE = 57537
const REPAIR = 57538
const OPTIMIZE = 57539
const TRUNCATE = 57540
const FORMAT = 57541
const MAXVALUE = 57542
const REORGANIZE = 57543
const LESS = 57544
const THAN = 57545
const PROCEDURE = 57546
const TRIGGER = 57547
const TRIGGERS = 57548
const FUNCTION = 57549
const STATUS = 57550
const VARIABLES = 57551
const WARNINGS = 57552
const ERRORS = 57553
const KILL = 57554
const CONNECTION = 57555
const SEQUENCE = 57556
const ENABLE = 57557
const DISABLE = 57558
const EACH = 57559
const ROW = 57560
const BEFORE = 57561
const FOLLOWS = 57562
const PRECEDES = 57563
const DEFINER = 57564
const INVOKER = 57565
const INOUT = 57566
const OUT = 57567
const DETERMINISTIC = 57568
const CONTAINS = 57569
const READS = 57570
const MODIFIES = 57571
const SQL = 57572
const SECURITY = 57573
const TEMPORARY = 57574
const ALGORITHM = 57575
const MERGE = 57576
const TEMPTABLE = 57577
const UNDEFINED = 57578
const CLASS_ORIGIN = 57579
const SUBCLASS_ORIGIN = 57580
const MESSAGE_TEXT = 57581
const MYSQL_ERRNO = 57582
const CONSTRAINT_CATALOG = 57583
const CONSTRAINT_SCHEMA = 57584
const CONSTRAINT_NAME = 57585
const CATALOG_NAME = 57586
const SCHEMA_NAME = 57587
const TABLE_NAME = 57588
const COLUMN_NAME = 57589
const CURSOR_NAME = 57590
const SIGNAL = 57591
const RESIGNAL = 57592
const SQLSTATE = 57593
const DECLARE = 57594
const CONDITION = 57595
const CURSOR = 57596
const CONTINUE = 57597
const EXIT = 57598
const UNDO = 57599
const HANDLER = 57600
const FOUND = 57601
const SQLWARNING = 57602
const SQLEXCEPTION = 57603
const USER = 57604
const IDENTIFIED = 57605
const ROLE = 57606
const REUSE = 57607
const GRANT = 57608
const GRANTS = 57609
const REVOKE = 57610
const NONE = 57611
const ATTRIBUTE = 57612
const RANDOM = 57613
const PASSWORD = 57614
const INITIAL = 57615
const AUTHENTICATION = 57616
const SSL = 57617
const X509 = 57618
const CIPHER = 57619
const ISSUER = 57620
const SUBJECT = 57621
const ACCOUNT = 57622
const EXPIRE = 57623
const NEVER = 57624
const DAY = 57625
const OPTION = 57626
const OPTIONAL = 57627
const EXCEPT = 57628
const ADMIN = 57629
const PRIVILEGES = 57630
const MAX_QUERIES_PER_HOUR = 57631
const MAX_UPDATES_PER_HOUR = 57632
const MAX_CONNECTIONS_PER_HOUR = 57633
const MAX_USER_CONNECTIONS = 57634
const FLUSH = 57635
const FAILED_LOGIN_ATTEMPTS = 57636
const PASSWORD_LOCK_TIME = 57637
const REQUIRE = 57638
const PROXY = 57639
const ROUTINE = 57640
const TABLESPACE = 57641
const CLIENT = 57642
const SLAVE = 57643
const EVENT = 57644
const EXECUTE = 57645
const FILE = 57646
const RELOAD = 57647
const REPLICATION = 57648
const SHUTDOWN = 57649
const SUPER = 57650
const USAGE = 57651
const LOGS = 57652
const ENGINE = 57653
const ERROR = 57654
const GENERAL = 57655
const HOSTS = 57656
const OPTIMIZER_COSTS = 57657
const RELAY = 57658
const SLOW = 57659
const USER_RESOURCES = 57660
const NO_WRITE_TO_BINLOG = 57661
const CHANNEL = 57662
const BEGIN = 57663
const START = 57664
const TRANSACTION = 57665
const COMMIT = 57666
const ROLLBACK = 57667
const SAVEPOINT = 57668
const WORK = 57669
const RELEASE = 57670
const BIT = 57671
const TINYINT = 57672
const SMALLINT = 57673
const MEDIUMINT = 57674
const INT = 57675
const INTEGER = 57676
const BIGINT = 57677
const INTNUM = 57678
const SERIAL = 57679
const REAL = 57680
const DOUBLE = 57681
const FLOAT_TYPE = 57682
const DECIMAL = 57683
const NUMERIC = 57684
const DEC = 57685
const FIXED = 57686
const PRECISION = 57687
const TIME = 57688
const TIMESTAMP = 57689
const DATETIME = 57690
const YEAR = 57691
const CHAR = 57692
const VARCHAR = 57693
const BOOL = 57694
const CHARACTER = 57695
const VARBINARY = 57696
const NCHAR = 57697
const NVARCHAR = 57698
const NATIONAL = 57699
const VARYING = 57700
const TEXT = 57701
const TINYTEXT = 57702
const MEDIUMTEXT = 57703
const LONGTEXT = 57704
const LONG = 57705
const BLOB = 57706
const TINYBLOB = 57707
const MEDIUMBLOB = 57708
const LONGBLOB = 57709
const JSON = 57710
const ENUM = 57711
const GEOMETRY = 57712
const POINT = 57713
const LINESTRING = 57714
const POLYGON = 57715
const GEOMETRYCOLLECTION = 57716
const MULTIPOINT = 57717
const MULTILINESTRING = 57718
const MULTIPOLYGON = 57719
const LOCAL = 57720
const LOW_PRIORITY = 57721
const NULLX = 57722
const AUTO_INCREMENT = 57723
const APPROXNUM = 57724
const SIGNED = 57725
const UNSIGNED = 57726
const ZEROFILL = 57727
const COLLATION = 57728
const DATABASES = 57729
const SCHEMAS = 57730
const TABLES = 57731
const FULL = 57732
const PROCESSLIST = 57733
const COLUMNS = 57734
const FIELDS = 57735
const ENGINES = 57736
const PLUGINS = 57737
const NAMES = 57738
const CHARSET = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const ENCRYPTION = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_TIME = 57756
const LOCALTIME = 57757
const LOCALTIMESTAMP = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const TRIM = 57767
const LEADING = 57768
const TRAILING = 57769
const BOTH = 57770
const GROUP_CONCAT = 57771
const SEPARATOR = 57772
const TIMESTAMPADD = 57773
const TIMESTAMPDIFF = 57774
const OVER = 57775
const WINDOW = 57776
const GROUPING = 57777
const CURRENT = 57778
const AVG = 57779
const BIT_AND = 57780
const BIT_OR = 57781
const BIT_XOR = 57782
const COUNT = 57783
const JSON_ARRAYAGG = 57784
const JSON_OBJECTAGG = 57785
const MAX = 57786
const MIN = 57787
const STDDEV_POP = 57788
const STDDEV = 57789
const STD = 57790
const STDDEV_SAMP = 57791
const SUM = 57792
const VAR_POP = 57793
const VARIANCE = 57794
const VAR_SAMP = 57795
const CUME_DIST = 57796
const DENSE_RANK = 57797
const FIRST_VALUE = 57798
const LAG = 57799
const LAST_VALUE = 57800
const LEAD = 57801
const NTH_VALUE = 57802
const NTILE = 57803
const ROW_NUMBER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const MATCH = 57807
const AGAINST = 57808
const BOOLEAN = 57809
const LANGUAGE = 57810
const WITH = 57811
const QUERY = 57812
const EXPANSION = 57813
const UNUSED = 57814
const ARRAY = 57815
const DESCRIPTION = 57816
const EMPTY = 57817
const JSON_TABLE = 57818
const LATERAL = 57819
const MEMBER = 57820
const RECURSIVE = 57821
const ACTIVE = 57822
const BUCKETS = 57823
const CLONE = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const EXCLUDE = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const ORDINALITY = 57846
const ORGANIZATION = 57847
const OTHERS = 57848
const PATH = 57849
const PERSIST = 57850
const PERSIST_ONLY = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const REFERENCE = 57854
const REQUIRE_ROW_FORMAT = 57855
const RESOURCE = 57856
const RESPECT = 57857
const RESTART = 57858
const RETAIN = 57859
const SECONDARY = 57860
const SECONDARY_ENGINE = 57861
const SECONDARY_LOAD = 57862
const SECONDARY_UNLOAD = 57863
const SKIP = 57864
const SRID = 57865
const THREAD_PRIORITY = 57866
const TIES = 57867
const VCPU = 57868
const VISIBLE = 57869
const SYSTEM = 57870
const INFILE = 57871
const GENERATED = 57872
const ALWAYS = 57873
const STORED = 57874
const VIRTUAL = 57875
const NVAR = 57876
const PASSWORD_LOCK = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 55,
	-2, 1127,
	-1, 43,
	187, 1191,
	188, 1209,
	-2, 242,
	-1, 49,
	226, 715,
	227, 715,
	-2, 704,
	-1, 557,
	175, 1219,
	-2, 1213,
	-1, 558,
	175, 1220,
	-2, 1214,
	-1, 703,
	98, 1506,
	175, 1506,
	-2, 1175,
	-1, 704,
	98, 1625,
	175, 1625,
	-2, 1176,
	-1, 709,
	98, 1530,
	175, 1530,
	-2, 1177,
	-1, 710,
	98, 1578,
	175, 1578,
	-2, 1178,
	-1, 711,
	98, 1579,
	175, 1579,
	-2, 1179,
	-1, 712,
	98, 1452,
	175, 1452,
	-2, 1183,
	-1, 714,
	98, 1555,
	175, 1555,
	-2, 1185,
	-1, 1235,
	1, 812,
	5, 812,
	12, 812,
	13, 812,
	14, 812,
	15, 812,
	17, 812,
	19, 812,
	29, 812,
	30, 812,
	55, 812,
	56, 812,
	57, 812,
	58, 812,
	59, 812,
	61, 812,
	62, 812,
	65, 812,
	66, 812,
	68, 812,
	69, 812,
	86, 812,
	452, 812,
	554, 812,
	-2, 844,
	-1, 1241,
	66, 72,
	68, 72,
	-2, 76,
	-1, 1337,
	1, 494,
	554, 494,
	-2, 492,
	-1, 1339,
	1, 494,
	554, 494,
	-2, 492,
	-1, 1499,
	175, 1222,
	-2, 1218,
	-1, 1665,
	43, 560,
	-2, 1464,
	-1, 1669,
	67, 558,
	71, 558,
	-2, 1500,
	-1, 1670,
	67, 560,
	-2, 1410,
	-1, 1673,
	67, 556,
	71, 556,
	-2, 1327,
	-1, 1674,
	67, 557,
	71, 557,
	-2, 1337,
	-1, 1721,
	1, 495,
	554, 495,
	-2, 492,
	-1, 1805,
	43, 603,
	194, 605,
	196, 603,
	197, 603,
	-2, 640,
	-1, 1881,
	5, 56,
	-2, 914,
	-1, 2193,
	68, 1384,
	69, 1384,
	175, 1384,
	-2, 746,
	-1, 2216,
	1, 869,
	5, 869,
	12, 869,
	13, 869,
	14, 869,
	15, 869,
	17, 869,
	19, 869,
	29, 869,
	30, 869,
	55, 869,
	56, 869,
	57, 869,
	58, 869,
	59, 869,
	61, 869,
	62, 869,
	65, 869,
	66, 869,
	68, 869,
	69, 869,
	86, 869,
	452, 869,
	554, 869,
	-2, 844,
	-1, 2326,
	194, 606,
	-2, 604,
	-1, 2387,
	5, 56,
	-2, 1147,
	-1, 2604,
	40, 1229,
	-2, 1227,
	-1, 2705,
	5, 56,
	-2, 1150,
}

const yyPrivate = 57344

const yyLast = 38315

var yyAct = [...]int{
	623, 80, 2931, 2905, 928, 2938, 2887, 429, 2135, 2907,
	2888, 2024, 2802, 2803, 2777, 2818, 2823, 2709, 2838, 2270,
	2858, 2717, 7, 2716, 6, 2715, 5, 2718, 8, 2344,
	2771, 2692, 560, 2399, 2690, 1272, 2546, 2650, 1946, 2775,
	2604, 2210, 1190, 2230, 1916, 1716, 728, 2118, 1657, 2107,
	549, 563, 2486, 2186, 1967, 2606, 1740, 2287, 1675, 2462,
	1623, 2456, 2231, 1621, 1477, 83, 1617, 412, 415, 2440,
	2710, 454, 454, 1973, 1666, 460, 475, 2320, 2117, 555,
	575, 80, 1372, 2040, 961, 2187, 2183, 1830, 106, 542,
	1655, 984, 726, 1917, 1371, 1470, 1804, 2195, 2310, 1707,
	2202, 1656, 93, 2157, 1533, 1524, 723, 1767, 1485, 622,
	1645, 1600, 1596, 1374, 2085, 1420, 1348, 1703, 1724, 1662,
	2128, 1392, 1974, 2015, 1232, 1723, 1089, 1722, 1607, 705,
	1252, 1231, 1590, 1096, 1501, 1013, 1092, 1784, 1238, 2714,
	3, 1206, 1720, 708, 724, 722, 1235, 992, 697, 701,
	545, 1109, 1251, 432, 944, 474, 431, 565, 702, 1425,
	567, 991, 1343, 916, 1691, 1340, 694, 102, 85, 98,
	1243, 1207, 911, 2970, 2966, 2961, 2946, 2944, 2926, 1987,
	2900, 2846, 82, 2244, 1989, 1418, 126, 2652, 2651, 2427,
	2917, 2786, 2886, 2703, 2596, 411, 36, 2583, 927, 1994,
	1993, 2863, 2763, 2284, 1753, 2785, 87, 88, 89, 90,
	91, 2268, 424, 2581, 2441, 1753, 2702, 2178, 36, 2670,
	541, 1990, 447, 2443, 441, 452, 435, 2052, 2584, 696,
	2819, 1852, 69, 720, 2381, 910, 1996, 472, 1980, 1783,
	36, 1911, 36, 2225, 1955, 1981, 442, 1954, 2781, 2031,
	1956, 2226, 2227, 925, 1642, 1643, 1421, 81, 1912, 1100,
	1253, 1424, 1254, 36, 939, 72, 39, 40, 120, 116,
	117, 1082, 118, 1641, 913, 921, 918, 919, 2637, 81,
	2531, 1441, 1619, 2778, 1422, 1423, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1466, 1467,
	1135, 81, 1041, 81, 122, 121, 678, 423, 684, 686,
	685, 682, 683, 681, 680, 679, 2781, 110, 965, 966,
	422, 1998, 1677, 964, 81, 464, 718, 2419, 2420, 1049,
	948, 949, 1782, 2776, 952, 1010, 1679, 2517, 2446, 1683,
	1685, 1697, 1684, 1692, 1692, 1704, 1679, 2368, 2782, 2366,
	1992, 2778, 421, 1995, 1404, 471, 1535, 1023, 406, 974,
	2082, 99, 123, 1462, 124, 1461, 950, 951, 1460, 426,
	72, 39, 40, 1459, 1458, 1457, 1045, 1046, 2444, 2445,
	2447, 2448, 2449, 2047, 465, 2457, 2074, 1025, 2878, 558,
	2609, 41, 2309, 2460, 434, 433, 436, 971, 2463, 2464,
	2465, 2466, 1056, 2079, 440, 1057, 1795, 2458, 2459, 80,
	80, 2805, 2804, 2294, 2753, 2674, 2782, 561, 2051, 2751,
	2474, 444, 2582, 2578, 2672, 448, 2482, 1796, 2600, 1452,
	979, 2811, 981, 2049, 980, 2935, 114, 129, 2664, 451,
	129, 1025, 2285, 2297, 551, 1741, 129, 2472, 2288, 2289,
	2290, 2291, 2292, 2843, 2841, 2842, 457, 457, 2576, 1346,
	101, 2288, 2289, 2290, 2291, 2292, 413, 2902, 1078, 129,
	112, 111, 108, 2571, 416, 2575, 1086, 1355, 1356, 1354,
	129, 2828, 2881, 113, 129, 731, 2574, 972, 973, 2573,
	2029, 2572, 915, 914, 2570, 917, 108, 477, 2660, 2661,
	1735, 1736, 2790, 2791, 129, 457, 962, 731, 963, 965,
	966, 119, 407, 2712, 108, 129, 417, 941, 917, 960,
	2401, 1731, 1937, 957, 109, 113, 1812, 1806, 1807, 115,
	1805, 1808, 1809, 2656, 2030, 956, 437, 438, 439, 445,
	1431, 449, 450, 453, 1048, 2855, 2032, 409, 978, 982,
	1730, 2065, 2066, 2649, 103, 1991, 104, 1144, 958, 959,
	1146, 1014, 1271, 2487, 2488, 1270, 1815, 2911, 1271, 2234,
	2906, 2956, 2093, 947, 1271, 1271, 2091, 2942, 2093, 110,
	1814, 1813, 410, 2325, 2666, 2909, 1626, 1628, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	2442, 2050, 1188, 2311, 1192, 2267, 425, 1405, 2779, 2971,
	1424, 2579, 975, 2968, 1789, 1075, 1024, 1692, 1244, 2701,
	2671, 1706, 1063, 1058, 2599, 2005, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1422, 1423, 1682, 1035, 2638, 2962, 2296,
	2947, 2158, 414, 912, 414, 2597, 930, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 79, 1205, 1208,
	1208, 1208, 1214, 1208, 1208, 1214, 1208, 1214, 1223, 1224,
	1225, 1226, 2676, 1236, 2752, 73, 2779, 2497, 2053, 79,
	1077, 2896, 2547, 100, 1988, 36, 37, 72, 39, 40,
	2665, 1084, 1426, 470, 414, 1627, 2549, 1145, 2498, 59,
	2073, 79, 2070, 79, 2055, 78, 1021, 2104, 41, 63,
	64, 2054, 112, 111, 1790, 60, 1360, 1073, 1358, 1025,
	976, 1593, 2160, 1719, 79, 443, 1811, 1428, 1972, 2940,
	1427, 909, 2941, 708, 2939, 1944, 1972, 1943, 708, 1230,
	1972, 1942, 50, 1189, 908, 414, 81, 2068, 129, 1081,
	920, 1750, 378, 2351, 2908, 2910, 1749, 2501, 2343, 1972,
	1147, 1148, 2072, 1977, 1265, 1890, 2071, 1959, 1951, 1972,
	1887, 1847, 1026, 1033, 1034, 1036, 1037, 1038, 1039, 1040,
	73, 1042, 1043, 1044, 1835, 1047, 1820, 1050, 1051, 1052,
	1053, 1054, 129, 1734, 1732, 1480, 1264, 1069, 1331, 1249,
	1115, 1209, 1211, 1213, 1215, 1217, 1219, 1220, 1222, 1269,
	1229, 1256, 1241, 2669, 2548, 940, 1257, 2564, 1646, 1068,
	1064, 1065, 1066, 1067, 1070, 1071, 1072, 1074, 1135, 1020,
	1239, 1210, 1212, 2434, 1216, 1218, 1393, 1221, 2432, 2257,
	1242, 1125, 1032, 129, 1135, 2496, 1247, 2691, 1128, 1129,
	1130, 1131, 1132, 1125, 2305, 1637, 1135, 43, 74, 46,
	45, 48, 1402, 2829, 2830, 2826, 2827, 2513, 1266, 2162,
	2586, 477, 1971, 2127, 2166, 2103, 2161, 2565, 2159, 2100,
	1971, 1097, 2112, 2164, 1971, 2698, 2697, 1601, 49, 77,
	76, 1116, 1759, 2435, 1473, 47, 2163, 1108, 2433, 2258,
	2108, 2200, 1030, 1971, 454, 2587, 2199, 1350, 2502, 65,
	2091, 2165, 2167, 1971, 1271, 954, 2180, 2092, 2093, 2099,
	2091, 1112, 929, 454, 2096, 1413, 1373, 2095, 2098, 1262,
	1147, 1148, 1031, 1394, 1027, 1147, 1148, 983, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 57, 58, 1135, 1113,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	1191, 923, 1135, 66, 922, 67, 1591, 1376, 1028, 1029,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 1349, 1591, 1135, 1902, 1353, 946, 2960, 1508, 1760,
	68, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1506, 1507, 1505, 454, 1106, 2897, 96,
	1338, 2861, 955, 1204, 1885, 2473, 1884, 2467, 51, 75,
	2346, 53, 54, 61, 1108, 62, 2503, 1778, 1334, 1399,
	2957, 1416, 1886, 1400, 2345, 1107, 1106, 1107, 1106, 96,
	1450, 932, 933, 934, 935, 936, 937, 938, 696, 1626,
	1628, 1366, 2346, 1108, 2242, 1108, 1478, 1479, 1336, 80,
	1335, 129, 129, 129, 1396, 1352, 1397, 1103, 1383, 1384,
	1385, 1386, 1387, 1351, 2756, 967, 1362, 731, 1377, 1370,
	945, 1369, 469, 95, 2958, 1434, 1379, 2950, 2932, 2949,
	2848, 1388, 1389, 1390, 1391, 1432, 1107, 1106, 2748, 2706,
	1381, 1382, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 1108, 1471, 1135, 73, 1107, 1106,
	1107, 1106, 94, 1330, 1456, 2594, 2839, 80, 1408, 1409,
	2593, 2021, 1411, 1107, 1106, 1455, 1108, 2839, 1108, 2867,
	2964, 2866, 1499, 81, 1498, 1107, 1106, 2592, 1414, 1107,
	1106, 1108, 2899, 2591, 1504, 1433, 1430, 2749, 1429, 1093,
	1528, 1529, 1094, 1108, 2667, 2585, 79, 1108, 2426, 969,
	2425, 691, 692, 1192, 1832, 1833, 1834, 1500, 1627, 2020,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1525, 1451, 1526, 1464, 1454,
	1465, 2018, 1999, 2750, 1107, 1106, 1463, 1016, 1502, 1497,
	2668, 2840, 1482, 1491, 1493, 1494, 1957, 1620, 1958, 1468,
	1492, 1629, 1108, 1487, 1236, 1107, 1106, 1015, 1236, 989,
	1577, 1580, 2182, 2847, 2808, 2836, 1483, 1592, 2806, 1484,
	2762, 2663, 1495, 1108, 2662, 2648, 2601, 2569, 2527, 1543,
	2470, 2469, 988, 2468, 1548, 2436, 1503, 2423, 2316, 2250,
	1583, 2016, 1779, 1087, 1754, 1410, 1189, 2835, 1594, 2673,
	2646, 2618, 1977, 2612, 2494, 2354, 1376, 2339, 731, 129,
	2335, 2327, 708, 1380, 2298, 2060, 2059, 1772, 457, 457,
	1632, 1499, 457, 1650, 1634, 1625, 1756, 724, 1755, 129,
	1527, 1406, 129, 1403, 1398, 1368, 1367, 457, 457, 1339,
	129, 1337, 1571, 1011, 942, 420, 418, 1361, 1616, 129,
	129, 129, 129, 129, 2538, 2864, 1088, 580, 579, 582,
	583, 584, 585, 1630, 1055, 1652, 581, 586, 2410, 2854,
	457, 2769, 1088, 1331, 2611, 1191, 1747, 1602, 2410, 2767,
	2410, 2765, 2410, 2654, 2560, 1663, 1189, 2559, 1651, 2538,
	2642, 2184, 1435, 1633, 2198, 1438, 1439, 1440, 2277, 1442,
	1443, 1671, 1245, 1444, 1239, 2538, 2554, 1635, 2251, 1445,
	1639, 1239, 1214, 1446, 1447, 1239, 1448, 1449, 1644, 1638,
	457, 457, 457, 1678, 1660, 731, 1531, 1653, 2538, 1088,
	1539, 1739, 1713, 1714, 2610, 1709, 1710, 1711, 1712, 2538,
	2537, 1550, 1551, 2410, 2409, 2391, 1088, 1819, 1088, 2265,
	2264, 1705, 1745, 1746, 1563, 457, 1775, 1246, 1567, 1248,
	457, 457, 84, 1693, 1694, 1695, 1696, 2261, 2262, 2261,
	2260, 1738, 1588, 1488, 1489, 1845, 1088, 1604, 1088, 1245,
	1817, 129, 1475, 129, 1947, 1757, 731, 1792, 1791, 1569,
	1776, 2345, 1728, 1569, 1088, 1268, 1267, 1773, 1765, 1631,
	1742, 1244, 1947, 1603, 129, 1021, 1743, 1744, 1781, 1836,
	1112, 477, 1060, 1751, 2882, 1845, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1059, 2860,
	1135, 1019, 1474, 2198, 1246, 1569, 1244, 1499, 1113, 1498,
	1604, 2385, 1604, 1018, 1764, 1604, 1019, 2627, 1753, 2278,
	2263, 2212, 2084, 1770, 1961, 731, 1640, 1761, 2198, 1191,
	1845, 1874, 1766, 1575, 1576, 1780, 1873, 1412, 1014, 1021,
	1774, 1752, 1609, 1612, 1613, 1614, 1610, 1787, 1611, 1615,
	1476, 1083, 731, 731, 1609, 1612, 1613, 1614, 1610, 1453,
	1611, 1615, 1419, 1359, 2203, 2204, 1838, 1839, 1840, 1794,
	1357, 1250, 1797, 719, 1651, 81, 2787, 2766, 2211, 428,
	2617, 1913, 1915, 1768, 2615, 1236, 1236, 1236, 1236, 1236,
	1824, 1822, 1823, 2428, 1679, 1502, 1816, 1841, 129, 1649,
	2397, 1620, 1708, 1938, 2241, 1704, 129, 1239, 129, 2203,
	2204, 1717, 1236, 129, 129, 1965, 1025, 129, 129, 129,
	1837, 1733, 1699, 1698, 1332, 1008, 1769, 2921, 2919, 2889,
	1919, 2276, 1831, 2206, 81, 1918, 477, 731, 731, 1088,
	2184, 1851, 1853, 1503, 1895, 1896, 1897, 459, 2022, 1364,
	1061, 1949, 1022, 1950, 1865, 1866, 1867, 1868, 1017, 1929,
	1879, 2209, 1927, 2208, 1930, 1926, 1941, 1928, 1330, 1715,
	1925, 708, 1931, 1933, 1613, 1614, 546, 547, 1948, 2832,
	2784, 1940, 2115, 1821, 1101, 1102, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1486, 2817,
	1135, 2388, 1901, 1801, 1829, 1976, 1978, 1828, 2528, 2493,
	1921, 1922, 1099, 1924, 2413, 2334, 1920, 2333, 1979, 1923,
	1914, 129, 1945, 2249, 1932, 2248, 2247, 129, 129, 457,
	457, 457, 1969, 2236, 129, 2678, 2681, 1962, 1331, 2761,
	1571, 2760, 1239, 1239, 1239, 1239, 1239, 1964, 2605, 1256,
	2807, 1952, 2603, 2659, 454, 2658, 419, 2064, 1239, 1960,
	1407, 2588, 2589, 129, 129, 129, 2111, 2110, 2272, 1239,
	1090, 1970, 2009, 1975, 1263, 1006, 990, 2058, 987, 1793,
	2874, 1091, 2008, 986, 2010, 2011, 2012, 2013, 943, 129,
	2622, 129, 2621, 1726, 2383, 731, 1478, 1479, 80, 731,
	2475, 1349, 1727, 2017, 2019, 1363, 2883, 2476, 2754, 2607,
	2417, 985, 2271, 1097, 1101, 1102, 2057, 1718, 96, 477,
	2028, 731, 1469, 2873, 731, 2000, 2001, 2026, 2063, 2027,
	1079, 1080, 2007, 2136, 2872, 2048, 1827, 2871, 2025, 2566,
	1800, 970, 2014, 543, 1826, 2810, 2809, 2773, 2113, 2114,
	2758, 2682, 2629, 544, 84, 2772, 2693, 1947, 2034, 2035,
	2036, 2923, 2922, 1597, 2120, 2075, 2061, 2506, 2314, 2067,
	2080, 2056, 2078, 2081, 1499, 2077, 1498, 2069, 1891, 1888,
	1798, 1395, 1104, 1540, 1541, 2922, 2923, 2639, 2246, 1472,
	2083, 719, 2089, 2189, 80, 466, 1553, 1554, 1555, 1556,
	2062, 2094, 2124, 2105, 2106, 2088, 1880, 2109, 2086, 2097,
	2102, 1568, 1570, 468, 2728, 52, 86, 1574, 2214, 2730,
	19, 2729, 18, 2218, 2219, 2220, 2122, 55, 1903, 2121,
	2126, 2731, 20, 2150, 2151, 2197, 2185, 1189, 1919, 2732,
	21, 2130, 1471, 1918, 2116, 2179, 1, 2170, 2171, 1788,
	2172, 2173, 2727, 15, 2174, 1436, 2137, 2726, 14, 2455,
	2140, 2141, 2142, 2720, 10, 2145, 2454, 2224, 2243, 2461,
	2169, 2168, 2743, 34, 129, 129, 129, 129, 129, 2741,
	33, 2217, 2740, 32, 2739, 28, 129, 2283, 2120, 2192,
	129, 2286, 2222, 2046, 129, 2738, 27, 2737, 26, 2216,
	2471, 129, 2188, 1347, 2207, 2238, 2735, 23, 2239, 2577,
	2240, 2734, 22, 926, 477, 1737, 2215, 2736, 24, 2725,
	13, 2235, 477, 2237, 1012, 731, 2759, 2213, 2722, 12,
	2721, 11, 2228, 2190, 454, 2719, 9, 2293, 2677, 1713,
	2679, 1714, 2602, 2478, 2439, 2229, 2438, 2039, 2038, 2245,
	1007, 1417, 2087, 2090, 1748, 1810, 2689, 2279, 1799, 1062,
	2273, 2274, 2275, 1968, 1664, 1654, 721, 92, 1758, 953,
	386, 1661, 1985, 2680, 1009, 621, 1984, 1997, 1676, 1721,
	1725, 1983, 1982, 2675, 1986, 1276, 1274, 731, 2295, 129,
	1275, 2252, 2253, 1273, 1278, 1277, 390, 1258, 2256, 2797,
	2353, 1105, 731, 731, 731, 2259, 107, 56, 457, 2495,
	2101, 462, 463, 97, 105, 392, 1143, 1825, 2300, 1953,
	706, 2323, 129, 457, 1771, 707, 699, 2508, 1085, 2696,
	2857, 2789, 1095, 2301, 2820, 1900, 1203, 1589, 564, 457,
	1936, 2269, 2512, 2822, 1490, 2304, 578, 2254, 2308, 2347,
	577, 2317, 2312, 2313, 576, 2315, 2324, 573, 574, 2379,
	457, 2318, 731, 2338, 2780, 1331, 1481, 715, 457, 1910,
	1117, 727, 2266, 2299, 562, 553, 1234, 1227, 1777, 1608,
	1606, 1605, 1365, 2349, 695, 2205, 1802, 2303, 2201, 731,
	731, 1618, 1818, 931, 1233, 129, 1237, 70, 2505, 968,
	408, 2380, 2636, 38, 467, 731, 548, 25, 17, 977,
	16, 1803, 2302, 924, 42, 44, 2033, 1729, 2796, 2904,
	2336, 993, 731, 2930, 2837, 1919, 31, 30, 29, 2733,
	1918, 2742, 2405, 2406, 2407, 2376, 2377, 2378, 2724, 2181,
	2723, 2891, 2364, 2392, 2890, 4, 1076, 71, 35, 1843,
	717, 80, 2384, 2374, 1846, 2415, 2, 2403, 0, 1848,
	1849, 0, 0, 2430, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 2393, 0, 1864, 0, 0, 0, 0, 1869,
	1870, 1871, 1872, 731, 2223, 731, 1876, 1877, 1878, 0,
	2414, 0, 2408, 1881, 1882, 1883, 2451, 2452, 2453, 2404,
	0, 1889, 2431, 2416, 1892, 1893, 0, 2418, 731, 1898,
	1962, 0, 0, 0, 1904, 0, 1905, 1906, 1907, 0,
	1908, 1909, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 731, 0, 731, 0, 731, 0, 2489, 2490, 1934,
	1935, 0, 2450, 0, 0, 2421, 0, 0, 0, 2491,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 2233, 1135, 0, 2189, 2479, 0, 2189,
	2533, 2499, 2504, 2507, 0, 2510, 2484, 2485, 2492, 0,
	2120, 2235, 2214, 2480, 0, 0, 0, 2481, 0, 2483,
	2429, 0, 129, 0, 0, 2437, 0, 2500, 2556, 1713,
	1182, 1183, 0, 0, 0, 2422, 0, 2424, 0, 0,
	0, 2536, 731, 731, 731, 0, 0, 2514, 2515, 457,
	0, 2562, 2530, 0, 129, 457, 0, 0, 0, 0,
	2563, 2518, 2519, 2520, 2521, 0, 2477, 0, 129, 2525,
	457, 0, 731, 457, 2340, 0, 2540, 457, 457, 2553,
	457, 2529, 2561, 2550, 0, 551, 2551, 2552, 0, 1625,
	2545, 2541, 2535, 0, 0, 0, 2567, 731, 0, 0,
	0, 129, 731, 0, 0, 2188, 0, 0, 2188, 731,
	0, 0, 731, 2322, 2623, 0, 0, 1236, 0, 2568,
	1968, 2539, 0, 2329, 2331, 0, 0, 2580, 0, 0,
	0, 2590, 0, 2322, 0, 2595, 0, 2516, 0, 2532,
	2598, 0, 2189, 2557, 80, 2558, 0, 2608, 1894, 2382,
	0, 0, 0, 0, 2624, 0, 1191, 2616, 2613, 2614,
	0, 0, 0, 2620, 0, 0, 2394, 2395, 2626, 0,
	2396, 0, 0, 2398, 80, 0, 0, 0, 0, 0,
	0, 1191, 0, 2625, 0, 0, 0, 0, 2628, 0,
	0, 0, 2645, 0, 129, 2640, 2125, 2657, 0, 0,
	0, 0, 2133, 0, 0, 0, 1088, 0, 2647, 0,
	0, 731, 2644, 0, 2143, 2144, 0, 0, 731, 731,
	731, 1236, 477, 0, 0, 0, 0, 2152, 731, 0,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 2653, 0, 0, 0,
	0, 2188, 0, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 2191, 0, 1135, 80, 2685,
	0, 2687, 2686, 0, 1239, 0, 129, 2711, 731, 0,
	0, 2713, 2699, 2641, 2694, 0, 0, 2684, 0, 0,
	0, 0, 0, 0, 2704, 0, 1919, 2221, 0, 0,
	2683, 1918, 0, 1680, 1681, 0, 1686, 1687, 1688, 1689,
	1690, 2688, 0, 2655, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 1701, 1702, 2755, 2757, 0,
	0, 0, 0, 2764, 0, 2792, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 731, 2322, 2783, 0,
	0, 731, 2131, 2132, 0, 0, 2788, 2645, 80, 0,
	0, 2138, 2139, 0, 0, 0, 0, 2322, 0, 0,
	0, 0, 0, 2146, 2147, 2148, 2149, 0, 1239, 0,
	2153, 2154, 2155, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 2813, 0, 2815, 0, 731, 2707, 0,
	0, 2825, 129, 0, 129, 2801, 2812, 715, 0, 0,
	731, 2834, 715, 1259, 2816, 0, 0, 0, 0, 0,
	2814, 0, 0, 0, 0, 2831, 454, 0, 731, 2852,
	477, 2833, 477, 0, 0, 0, 0, 0, 2233, 0,
	0, 0, 0, 2844, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 2853, 0, 0, 2233, 80, 2856, 0,
	0, 0, 0, 2870, 2865, 0, 2868, 0, 0, 0,
	2877, 0, 0, 2348, 551, 0, 0, 0, 80, 2879,
	0, 0, 2880, 80, 0, 0, 2885, 2884, 0, 0,
	2898, 2901, 2914, 454, 2136, 0, 2913, 2895, 731, 2894,
	0, 2893, 2916, 2892, 2875, 2920, 129, 80, 2918, 2360,
	80, 80, 2924, 2915, 0, 80, 0, 0, 0, 2925,
	2369, 2370, 2927, 0, 2877, 0, 2375, 0, 2933, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 731, 2943,
	80, 2386, 2387, 2951, 2389, 0, 0, 2390, 2953, 0,
	2877, 0, 2948, 0, 0, 80, 0, 80, 0, 0,
	0, 80, 0, 0, 2912, 0, 0, 2402, 2877, 0,
	2877, 0, 80, 2963, 0, 80, 0, 80, 0, 0,
	0, 80, 0, 0, 0, 2877, 0, 2967, 0, 0,
	2877, 0, 0, 0, 2877, 0, 1191, 0, 0, 0,
	0, 0, 0, 0, 2936, 0, 0, 457, 0, 0,
	129, 0, 0, 0, 1333, 731, 0, 731, 0, 0,
	1341, 1344, 2903, 0, 0, 0, 0, 731, 0, 2350,
	0, 0, 0, 0, 0, 0, 0, 2352, 0, 0,
	0, 1341, 1344, 2233, 0, 2233, 0, 2355, 2356, 129,
	0, 1532, 1537, 1538, 0, 0, 2359, 1542, 0, 1544,
	1545, 1546, 1547, 0, 1549, 0, 0, 1552, 0, 0,
	0, 0, 1557, 1558, 1559, 1560, 0, 2373, 0, 1564,
	1565, 1566, 0, 0, 0, 0, 0, 1572, 1573, 0,
	0, 731, 1579, 1582, 0, 1587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2003, 2004, 2006,
	0, 2793, 2794, 0, 0, 0, 0, 1595, 0, 1598,
	1599, 0, 0, 0, 0, 0, 0, 0, 2522, 2523,
	2524, 1437, 2526, 0, 0, 0, 0, 0, 0, 2821,
	2824, 0, 0, 0, 0, 401, 731, 0, 0, 2372,
	0, 0, 0, 0, 0, 0, 0, 2542, 2543, 2544,
	0, 0, 0, 0, 0, 0, 731, 0, 2555, 0,
	0, 0, 0, 0, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 0, 731, 1135, 0,
	0, 0, 727, 0, 2233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2869, 0, 0, 0,
	0, 457, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 727, 0, 0, 0, 0, 0, 2824, 0, 0,
	0, 731, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 0, 379, 731, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0,
	1135, 1530, 0, 0, 0, 0, 2630, 2631, 0, 0,
	2632, 2633, 2634, 2635, 0, 0, 0, 0, 457, 0,
	0, 0, 731, 0, 127, 0, 0, 405, 1561, 1562,
	0, 382, 0, 127, 0, 0, 0, 0, 0, 2952,
	391, 399, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 698, 716, 0,
	0, 127, 0, 0, 0, 388, 0, 0, 389, 0,
	0, 397, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 127, 0, 0, 535, 0, 0, 0, 0,
	727, 0, 0, 727, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2326, 0, 2700, 0,
	0, 0, 0, 2705, 0, 540, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 2708, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 2255,
	499, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 2768, 0, 0, 1862, 1863, 0, 0, 2774, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 1119, 0,
	1122, 0, 0, 0, 0, 0, 0, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 0, 1120, 1121, 1118, 0, 0,
	0, 0, 1899, 0, 380, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 393, 383, 384,
	0, 404, 497, 480, 0, 385, 387, 0, 381, 403,
	402, 1786, 501, 0, 0, 1786, 0, 0, 0, 0,
	0, 526, 0, 0, 492, 0, 487, 2371, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 1786, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2361, 2362, 0, 2363, 727, 0, 2365, 0,
	2367, 504, 502, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 513, 481, 0, 517, 0, 0, 0, 0,
	0, 0, 2358, 479, 0, 127, 0, 0, 0, 2177,
	0, 0, 0, 0, 0, 0, 0, 495, 519, 0,
	0, 0, 0, 0, 0, 493, 494, 496, 523, 0,
	525, 531, 2357, 2176, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 2411, 2412, 1135, 127,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2954, 2955,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 2175, 0, 1135, 0, 0, 0, 0, 715,
	476, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 1124, 1123,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	0, 727, 1135, 0, 532, 533, 0, 0, 0, 0,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 0, 2023, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 2041,
	2045, 0, 0, 2319, 521, 0, 2123, 2321, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 518, 0,
	0, 1842, 0, 491, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0,
	0, 499, 0, 0, 0, 0, 0, 0, 2076, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 727, 0, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 727, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 2134, 0,
	0, 0, 0, 0, 0, 0, 539, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 0, 497, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 492, 0, 487, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 715, 0, 727,
	0, 2196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2196, 1378, 0, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 513, 481, 727, 517, 727, 0, 727,
	0, 2232, 0, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 519,
	0, 0, 0, 0, 0, 0, 493, 494, 496, 523,
	0, 525, 531, 0, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 127, 0, 2280, 2281,
	2282, 1342, 1345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 127,
	0, 0, 1342, 1345, 0, 482, 0, 1375, 2307, 0,
	0, 0, 0, 0, 503, 0, 127, 127, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2332, 0, 0, 0, 0, 2337, 1298,
	0, 0, 0, 0, 0, 2341, 0, 0, 2342, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	0, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 521, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 2400, 127, 0,
	476, 0, 0, 0, 2400, 2400, 2400, 0, 516, 518,
	0, 0, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 2400, 0, 0,
	0, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 1299, 0, 1536, 1536, 1536, 0, 0, 0,
	1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 0, 0,
	1536, 0, 0, 0, 0, 1536, 1536, 1536, 1536, 0,
	0, 0, 1536, 1536, 1536, 0, 0, 0, 0, 0,
	1536, 1536, 0, 0, 0, 1536, 1536, 0, 1536, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 2509, 0, 0, 0, 0, 727, 0, 0,
	1536, 1536, 1536, 1536, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 476, 0, 0, 0, 0,
	127, 127, 0, 0, 127, 1636, 1375, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2534, 0, 0,
	0, 1375, 0, 2400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 1315, 1316,
	1317, 1318, 1319, 1320, 2232, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 0, 1300, 1301, 1302, 1303, 1279, 1283,
	1313, 1280, 1286, 1282, 1284, 1281, 0, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 127, 127, 0, 0, 0, 0,
	0, 127, 0, 0, 2619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 1763, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 476, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 0,
	0, 2232, 0, 2232, 0, 0, 0, 0, 1966, 0,
	0, 0, 0, 2695, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	0, 0, 499, 0, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 2770, 0, 0,
	1536, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 127, 127, 127, 127, 127, 0, 539, 0, 0,
	0, 0, 727, 476, 0, 0, 1271, 127, 0, 0,
	0, 476, 0, 0, 497, 480, 1536, 0, 127, 0,
	0, 0, 2232, 0, 501, 0, 716, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 492, 0, 487, 0,
	0, 0, 0, 2400, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2859, 0, 0, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 2862, 505, 0,
	0, 0, 0, 0, 513, 481, 0, 517, 0, 0,
	0, 727, 0, 0, 0, 479, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	519, 0, 0, 0, 0, 0, 0, 493, 494, 496,
	523, 0, 525, 531, 0, 0, 0, 0, 2859, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 1329,
	0, 0, 127, 0, 0, 503, 0, 0, 540, 0,
	0, 0, 0, 1536, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 1375, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 0, 0, 532, 533, 0, 0,
	0, 0, 483, 484, 485, 486, 488, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 489,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 521, 1271, 0, 0,
	0, 0, 0, 0, 0, 497, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 516,
	518, 0, 0, 0, 526, 0, 0, 492, 0, 487,
	0, 0, 0, 0, 1298, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 2845, 504, 502, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 513, 481, 0, 517, 0,
	0, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 519, 0, 0, 0, 127, 0, 0, 493, 494,
	496, 523, 0, 525, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 0, 716, 0, 532, 533, 0,
	0, 0, 0, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 518, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 0,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 0, 1300,
	1301, 1302, 1303, 1279, 1283, 1313, 1280, 1286, 1282, 1284,
	1281, 0, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	862, 339, 807, 890, 764, 790, 905, 795, 799, 842,
	748, 820, 265, 786, 749, 0, 768, 738, 778, 739,
	765, 182, 763, 864, 823, 889, 221, 837, 0, 171,
	229, 227, 0, 127, 552, 272, 338, 888, 815, 0,
	897, 224, 0, 832, 898, 326, 249, 0, 0, 811,
	874, 818, 860, 806, 844, 757, 831, 892, 787, 839,
	893, 0, 0, 0, 0, 2795, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 835, 886, 781, 838,
	809, 841, 736, 834, 0, 743, 750, 904, 881, 771,
	772, 773, 0, 0, 0, 0, 0, 0, 0, 810,
	819, 854, 803, 359, 276, 293, 314, 797, 284, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	829, 0, 0, 0, 751, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 808, 0,
	0, 0, 756, 735, 770, 856, 127, 733, 250, 148,
	861, 880, 805, 212, 902, 884, 802, 801, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 853,
	308, 783, 734, 865, 766, 779, 172, 775, 300, 269,
	358, 788, 826, 299, 225, 348, 849, 885, 357, 792,
	868, 367, 372, 774, 816, 754, 323, 184, 180, 183,
	0, 137, 785, 283, 177, 217, 804, 843, 767, 168,
	851, 830, 867, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 2798, 2799, 2800,
	798, 789, 0, 0, 363, 800, 311, 310, 794, 207,
	859, 833, 740, 292, 846, 213, 136, 336, 375, 154,
	219, 341, 732, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 780, 848, 858, 290,
	313, 343, 156, 330, 776, 777, 782, 855, 302, 866,
	878, 891, 232, 187, 190, 201, 208, 840, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 741, 0, 328, 361, 377, 158, 762,
	316, 342, 791, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 760, 761, 758, 0, 759, 821, 822, 894,
	895, 896, 857, 753, 0, 875, 876, 0, 0, 0,
	0, 0, 863, 882, 883, 845, 906, 796, 169, 742,
	745, 746, 747, 755, 812, 813, 825, 828, 871, 870,
	869, 872, 877, 900, 899, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 133, 144,
	223, 907, 291, 193, 362, 737, 179, 0, 814, 817,
	827, 852, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 850, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	879, 0, 793, 135, 873, 903, 836, 847, 887, 862,
	339, 807, 890, 764, 790, 905, 795, 799, 842, 748,
	820, 265, 786, 749, 0, 768, 738, 778, 739, 765,
	182, 763, 864, 823, 889, 221, 837, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 888, 815, 0, 897,
	224, 0, 832, 898, 326, 249, 0, 0, 811, 874,
	818, 860, 806, 844, 757, 831, 892, 787, 839, 893,
	0, 0, 0, 0, 730, 0, 1658, 1659, 0, 0,
	0, 0, 0, 752, 0, 835, 886, 781, 838, 809,
	841, 736, 834, 0, 743, 750, 904, 881, 771, 772,
	773, 1963, 0, 0, 0, 0, 0, 0, 810, 819,
	854, 803, 359, 276, 293, 314, 797, 284, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 829,
	0, 0, 0, 751, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	0, 756, 735, 770, 856, 0, 733, 250, 148, 861,
	880, 805, 212, 902, 884, 802, 801, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 853, 308,
	783, 734, 865, 766, 779, 172, 775, 300, 269, 358,
	788, 826, 299, 225, 348, 849, 885, 357, 792, 868,
	367, 372, 774, 816, 754, 323, 184, 180, 183, 0,
	137, 785, 283, 177, 217, 804, 843, 767, 168, 851,
	830, 867, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 798,
	789, 0, 0, 363, 800, 311, 310, 794, 207, 859,
	833, 740, 292, 846, 213, 136, 336, 375, 154, 219,
	341, 732, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 780, 848, 858, 290, 313,
	343, 156, 330, 776, 777, 782, 855, 302, 866, 878,
	891, 232, 187, 190, 201, 208, 840, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 741, 0, 328, 361, 377, 158, 762, 316,
	342, 791, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 760, 761, 758, 0, 759, 821, 822, 894, 895,
	896, 857, 753, 0, 875, 876, 0, 0, 0, 0,
	0, 863, 882, 883, 845, 906, 796, 169, 742, 745,
	746, 747, 755, 812, 813, 825, 828, 871, 870, 869,
	872, 877, 900, 899, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 133, 144, 223,
	907, 291, 193, 362, 737, 179, 0, 814, 817, 827,
	852, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 850, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 879,
	0, 793, 135, 873, 903, 836, 847, 887, 862, 339,
	807, 890, 764, 790, 905, 795, 799, 842, 748, 820,
	265, 786, 749, 0, 768, 738, 778, 739, 765, 182,
	763, 864, 823, 889, 221, 837, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 888, 815, 0, 897, 224,
	0, 832, 898, 326, 249, 0, 0, 811, 874, 818,
	860, 806, 844, 757, 831, 892, 787, 839, 893, 0,
	0, 0, 0, 730, 0, 1658, 1659, 0, 0, 0,
	0, 0, 752, 0, 835, 886, 781, 838, 809, 841,
	736, 834, 0, 743, 750, 904, 881, 771, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 810, 819, 854,
	803, 359, 276, 293, 314, 797, 284, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 0, 829, 0,
	0, 0, 751, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	756, 735, 770, 856, 0, 733, 250, 148, 861, 880,
	805, 212, 902, 884, 802, 801, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 853, 308, 783,
	734, 865, 766, 779, 172, 775, 300, 269, 358, 788,
	826, 299, 225, 348, 849, 885, 357, 792, 868, 367,
	372, 774, 816, 754, 323, 184, 180, 183, 0, 137,
	785, 283, 177, 217, 804, 843, 767, 168, 851, 830,
	867, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 798, 789,
	0, 0, 363, 800, 311, 310, 794, 207, 859, 833,
	740, 292, 846, 213, 136, 336, 375, 154, 219, 341,
	732, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 780, 848, 858, 290, 313, 343,
	156, 330, 776, 777, 782, 855, 302, 866, 878, 891,
	232, 187, 190, 201, 208, 840, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 741, 0, 328, 361, 377, 158, 762, 316, 342,
	791, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	760, 761, 758, 0, 759, 821, 822, 894, 895, 896,
	857, 753, 0, 875, 876, 0, 0, 0, 0, 0,
	863, 882, 883, 845, 906, 796, 169, 742, 745, 746,
	747, 755, 812, 813, 825, 828, 871, 870, 869, 872,
	877, 900, 899, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 133, 144, 223, 907,
	291, 193, 362, 737, 179, 0, 814, 817, 827, 852,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 850, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 879, 0,
	793, 135, 873, 903, 836, 847, 887, 2193, 339, 807,
	890, 764, 790, 905, 795, 799, 842, 748, 820, 265,
	786, 749, 0, 768, 738, 778, 739, 765, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 0, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 81, 0,
	1088, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 809, 841, 736,
	834, 0, 743, 750, 904, 881, 771, 772, 773, 0,
	0, 0, 0, 0, 0, 0, 810, 819, 854, 803,
	359, 276, 293, 314, 797, 284, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 829, 0, 0,
	0, 751, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 756,
	735, 770, 856, 0, 733, 250, 148, 861, 880, 805,
	212, 902, 884, 802, 801, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 853, 308, 783, 734,
	865, 766, 779, 172, 775, 300, 269, 358, 788, 826,
	299, 225, 348, 849, 885, 357, 792, 868, 367, 372,
	774, 816, 754, 323, 184, 180, 183, 0, 137, 785,
	283, 177, 217, 804, 843, 767, 168, 851, 830, 867,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 798, 789, 0,
	0, 363, 800, 311, 310, 794, 207, 859, 833, 740,
	292, 846, 213, 136, 336, 375, 154, 219, 341, 732,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 780, 848, 858, 290, 313, 343, 156,
	330, 776, 777, 782, 855, 302, 866, 878, 891, 232,
	187, 190, 201, 208, 840, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	741, 0, 328, 361, 377, 158, 762, 316, 342, 791,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 760,
	761, 758, 0, 759, 821, 822, 894, 895, 896, 857,
	753, 0, 875, 876, 0, 0, 0, 0, 0, 863,
	882, 883, 845, 906, 796, 169, 742, 745, 746, 747,
	755, 812, 813, 825, 828, 871, 870, 869, 872, 877,
	900, 899, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 133, 144, 223, 2194, 291,
	193, 362, 737, 179, 0, 814, 817, 827, 852, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	850, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 879, 0, 793,
	135, 873, 903, 836, 847, 887, 862, 339, 807, 890,
	764, 790, 905, 795, 799, 842, 748, 820, 265, 786,
	749, 0, 768, 738, 778, 739, 765, 182, 763, 864,
	823, 889, 221, 837, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 888, 815, 0, 897, 224, 0, 832,
	898, 326, 249, 0, 0, 811, 874, 818, 860, 806,
	844, 757, 831, 892, 787, 839, 893, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 0, 835, 886, 781, 838, 809, 841, 736, 834,
	0, 743, 750, 904, 881, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 810, 819, 854, 803, 359,
	276, 293, 314, 797, 284, 784, 0, 0, 0, 0,
	0, 0, 2511, 0, 769, 0, 829, 0, 0, 0,
	751, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 756, 735,
	770, 856, 0, 733, 250, 148, 861, 880, 805, 212,
	902, 884, 802, 801, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 853, 308, 783, 734, 865,
	766, 779, 172, 775, 300, 269, 358, 788, 826, 299,
	225, 348, 849, 885, 357, 792, 868, 367, 372, 774,
	816, 754, 323, 184, 180, 183, 0, 137, 785, 283,
	177, 217, 804, 843, 767, 168, 851, 830, 867, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 798, 789, 0, 0,
	363, 800, 311, 310, 794, 207, 859, 833, 740, 292,
	846, 213, 136, 336, 375, 154, 219, 341, 732, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 780, 848, 858, 290, 313, 343, 156, 330,
	776, 777, 782, 855, 302, 866, 878, 891, 232, 187,
	190, 201, 208, 840, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 741,
	0, 328, 361, 377, 158, 762, 316, 342, 791, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 760, 761,
	758, 0, 759, 821, 822, 894, 895, 896, 857, 753,
	0, 875, 876, 0, 0, 0, 0, 0, 863, 882,
	883, 845, 906, 796, 169, 742, 745, 746, 747, 755,
	812, 813, 825, 828, 871, 870, 869, 872, 877, 900,
	899, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 133, 144, 223, 907, 291, 193,
	362, 737, 179, 0, 814, 817, 827, 852, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 850,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 879, 0, 793, 135,
	873, 903, 836, 847, 887, 862, 339, 807, 890, 764,
	790, 905, 795, 799, 842, 748, 820, 265, 786, 749,
	0, 768, 738, 778, 739, 765, 182, 763, 864, 823,
	889, 221, 837, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 888, 815, 0, 897, 224, 0, 832, 898,
	326, 249, 0, 0, 811, 874, 818, 860, 806, 844,
	757, 831, 892, 787, 839, 893, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 835, 886, 781, 838, 809, 841, 736, 834, 0,
	743, 750, 904, 881, 771, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 810, 819, 854, 803, 359, 276,
	293, 314, 797, 284, 784, 0, 0, 0, 0, 0,
	0, 2129, 0, 769, 0, 829, 0, 0, 0, 751,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 756, 735, 770,
	856, 0, 733, 250, 148, 861, 880, 805, 212, 902,
	884, 802, 801, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 853, 308, 783, 734, 865, 766,
	779, 172, 775, 300, 269, 358, 788, 826, 299, 225,
	348, 849, 885, 357, 792, 868, 367, 372, 774, 816,
	754, 323, 184, 180, 183, 0, 137, 785, 283, 177,
	217, 804, 843, 767, 168, 851, 830, 867, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 798, 789, 0, 0, 363,
	800, 311, 310, 794, 207, 859, 833, 740, 292, 846,
	213, 136, 336, 375, 154, 219, 341, 732, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 780, 848, 858, 290, 313, 343, 156, 330, 776,
	777, 782, 855, 302, 866, 878, 891, 232, 187, 190,
	201, 208, 840, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 741, 0,
	328, 361, 377, 158, 762, 316, 342, 791, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 760, 761, 758,
	0, 759, 821, 822, 894, 895, 896, 857, 753, 0,
	875, 876, 0, 0, 0, 0, 0, 863, 882, 883,
	845, 906, 796, 169, 742, 745, 746, 747, 755, 812,
	813, 825, 828, 871, 870, 869, 872, 877, 900, 899,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 133, 144, 223, 907, 291, 193, 362,
	737, 179, 0, 814, 817, 827, 852, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 850, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 879, 0, 793, 135, 873,
	903, 836, 847, 887, 862, 339, 807, 890, 764, 790,
	905, 795, 799, 842, 748, 820, 265, 786, 749, 0,
	768, 738, 778, 739, 765, 182, 763, 864, 823, 889,
	221, 837, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 888, 815, 0, 897, 224, 0, 832, 898, 326,
	249, 0, 0, 811, 874, 818, 860, 806, 844, 757,
	831, 892, 787, 839, 893, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 0,
	835, 886, 781, 838, 809, 841, 736, 834, 0, 743,
	750, 904, 881, 771, 772, 773, 0, 0, 0, 0,
	0, 0, 0, 810, 819, 854, 803, 359, 276, 293,
	314, 797, 284, 784, 0, 0, 0, 0, 0, 0,
	2119, 0, 769, 0, 829, 0, 0, 0, 751, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 756, 735, 770, 856,
	0, 733, 250, 148, 861, 880, 805, 212, 902, 884,
	802, 801, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 853, 308, 783, 734, 865, 766, 779,
	172, 775, 300, 269, 358, 788, 826, 299, 225, 348,
	849, 885, 357, 792, 868, 367, 372, 774, 816, 754,
	323, 184, 180, 183, 0, 137, 785, 283, 177, 217,
	804, 843, 767, 168, 851, 830, 867, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 798, 789, 0, 0, 363, 800,
	311, 310, 794, 207, 859, 833, 740, 292, 846, 213,
	136, 336, 375, 154, 219, 341, 732, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	780, 848, 858, 290, 313, 343, 156, 330, 776, 777,
	782, 855, 302, 866, 878, 891, 232, 187, 190, 201,
	208, 840, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 741, 0, 328,
	361, 377, 158, 762, 316, 342, 791, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 760, 761, 758, 0,
	759, 821, 822, 894, 895, 896, 857, 753, 0, 875,
	876, 0, 0, 0, 0, 0, 863, 882, 883, 845,
	906, 796, 169, 742, 745, 746, 747, 755, 812, 813,
	825, 828, 871, 870, 869, 872, 877, 900, 899, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 133, 144, 223, 907, 291, 193, 362, 737,
	179, 0, 814, 817, 827, 852, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 850, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 879, 0, 793, 135, 873, 903,
	836, 847, 887, 862, 339, 807, 890, 764, 790, 905,
	795, 799, 842, 748, 820, 265, 786, 749, 0, 768,
	738, 778, 739, 765, 182, 763, 864, 823, 889, 221,
	837, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	888, 815, 0, 897, 224, 0, 832, 898, 326, 249,
	0, 0, 811, 874, 818, 860, 806, 844, 757, 831,
	892, 787, 839, 893, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 0, 835,
	886, 781, 838, 809, 841, 736, 834, 0, 743, 750,
	904, 881, 771, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 810, 819, 854, 803, 359, 276, 293, 314,
	797, 284, 784, 0, 0, 0, 0, 0, 0, 1637,
	0, 769, 0, 829, 0, 0, 0, 751, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 756, 735, 770, 856, 0,
	733, 250, 148, 861, 880, 805, 212, 902, 884, 802,
	801, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 853, 308, 783, 734, 865, 766, 779, 172,
	775, 300, 269, 358, 788, 826, 299, 225, 348, 849,
	885, 357, 792, 868, 367, 372, 774, 816, 754, 323,
	184, 180, 183, 0, 137, 785, 283, 177, 217, 804,
	843, 767, 168, 851, 830, 867, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 798, 789, 0, 0, 363, 800, 311,
	310, 794, 207, 859, 833, 740, 292, 846, 213, 136,
	336, 375, 154, 219, 341, 732, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 780,
	848, 858, 290, 313, 343, 156, 330, 776, 777, 782,
	855, 302, 866, 878, 891, 232, 187, 190, 201, 208,
	840, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 741, 0, 328, 361,
	377, 158, 762, 316, 342, 791, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 760, 761, 758, 0, 759,
	821, 822, 894, 895, 896, 857, 753, 0, 875, 876,
	0, 0, 0, 0, 0, 863, 882, 883, 845, 906,
	796, 169, 742, 745, 746, 747, 755, 812, 813, 825,
	828, 871, 870, 869, 872, 877, 900, 899, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	824, 133, 144, 223, 907, 291, 193, 362, 737, 179,
	0, 814, 817, 827, 852, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 850, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 879, 0, 793, 135, 873, 903, 836,
	847, 887, 862, 339, 807, 890, 764, 790, 905, 795,
	799, 842, 748, 820, 265, 786, 749, 0, 768, 738,
	778, 739, 765, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 809, 841, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 1496, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 182, 763, 864, 823, 889, 221, 837, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 888, 815,
	0, 897, 224, 0, 832, 898, 326, 249, 0, 0,
	811, 874, 818, 860, 806, 844, 757, 831, 892, 787,
	839, 893, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 835, 886, 781,
	838, 809, 841, 736, 834, 0, 743, 750, 904, 881,
	771, 772, 773, 0, 0, 0, 0, 0, 0, 0,
	810, 819, 854, 803, 359, 276, 293, 314, 797, 284,
	784, 0, 0, 0, 0, 0, 0, 0, 0, 769,
	0, 829, 0, 0, 0, 751, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 756, 735, 770, 856, 0, 733, 250,
	148, 861, 880, 805, 212, 902, 884, 802, 801, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	853, 308, 783, 734, 865, 766, 779, 172, 775, 300,
	269, 358, 788, 826, 299, 225, 348, 849, 885, 357,
	792, 868, 367, 372, 774, 816, 754, 323, 184, 180,
	183, 0, 137, 785, 283, 177, 217, 804, 843, 767,
	168, 851, 830, 867, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 798, 789, 0, 0, 363, 800, 311, 310, 794,
	207, 859, 833, 740, 292, 846, 213, 136, 336, 375,
	154, 219, 341, 732, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 780, 848, 858,
	290, 313, 343, 156, 330, 776, 777, 782, 855, 302,
	866, 878, 891, 232, 187, 190, 201, 208, 840, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 741, 0, 328, 361, 377, 158,
	762, 316, 342, 791, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 760, 761, 758, 0, 759, 821, 822,
	894, 895, 896, 857, 753, 0, 875, 876, 0, 0,
	0, 0, 0, 863, 882, 883, 845, 906, 796, 169,
	742, 745, 746, 747, 755, 812, 813, 825, 828, 871,
	870, 869, 872, 877, 900, 899, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 133,
	144, 223, 907, 291, 193, 362, 737, 179, 0, 814,
	817, 827, 852, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 850, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 879, 0, 793, 135, 873, 903, 836, 847, 887,
	862, 339, 807, 890, 764, 790, 905, 795, 799, 842,
	748, 820, 265, 786, 749, 0, 768, 738, 778, 739,
	765, 182, 763, 864, 823, 889, 221, 837, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 888, 815, 0,
	897, 224, 0, 832, 898, 326, 249, 0, 0, 811,
	874, 818, 860, 806, 844, 757, 831, 892, 787, 839,
	893, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 835, 886, 781, 838,
	809, 841, 736, 834, 0, 743, 750, 904, 881, 771,
	772, 773, 0, 0, 0, 0, 0, 0, 0, 810,
	819, 854, 803, 359, 276, 293, 314, 797, 284, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	829, 0, 0, 0, 751, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 756, 735, 770, 856, 0, 733, 250, 148,
	861, 880, 805, 212, 902, 884, 802, 801, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 853,
	308, 783, 734, 865, 766, 779, 172, 775, 300, 269,
	358, 788, 826, 299, 225, 348, 849, 885, 357, 792,
	868, 367, 372, 774, 816, 754, 323, 184, 180, 183,
	0, 137, 785, 283, 177, 217, 804, 843, 767, 168,
	851, 830, 867, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	798, 789, 0, 0, 363, 800, 311, 310, 794, 207,
	859, 833, 740, 292, 846, 213, 136, 336, 375, 154,
	219, 341, 732, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 780, 848, 858, 290,
	313, 343, 156, 330, 776, 777, 782, 855, 302, 866,
	878, 891, 232, 187, 190, 201, 208, 840, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 741, 0, 328, 361, 377, 158, 762,
	316, 342, 791, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 760, 761, 758, 0, 759, 821, 822, 894,
	895, 896, 857, 753, 0, 875, 876, 0, 0, 0,
	0, 0, 863, 882, 883, 845, 906, 796, 169, 742,
	745, 746, 747, 755, 812, 813, 825, 828, 871, 870,
	869, 872, 877, 900, 899, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 133, 144,
	223, 907, 291, 193, 362, 737, 179, 0, 814, 817,
	827, 852, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 850, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	879, 0, 793, 135, 873, 903, 836, 847, 887, 862,
	339, 807, 890, 764, 790, 905, 795, 799, 842, 748,
	820, 265, 786, 749, 0, 768, 738, 778, 739, 765,
	182, 763, 864, 823, 889, 221, 837, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 1670, 1674, 0, 897,
	224, 0, 832, 898, 326, 249, 0, 0, 811, 874,
	818, 860, 806, 844, 757, 831, 892, 787, 839, 893,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 835, 886, 781, 838, 809,
	841, 736, 834, 0, 743, 750, 904, 881, 771, 772,
	773, 0, 0, 0, 0, 0, 0, 0, 810, 819,
	854, 803, 359, 276, 293, 314, 797, 284, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 829,
	0, 0, 0, 751, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	0, 756, 735, 770, 856, 0, 733, 250, 148, 861,
	880, 1673, 212, 902, 884, 802, 801, 1667, 0, 1668,
	1669, 222, 729, 130, 146, 1665, 1672, 261, 853, 308,
	783, 734, 865, 766, 779, 172, 775, 300, 269, 358,
	788, 826, 299, 225, 348, 849, 885, 357, 792, 868,
	367, 372, 774, 816, 754, 323, 184, 180, 183, 0,
	137, 785, 283, 177, 217, 804, 843, 767, 168, 851,
	830, 867, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 798,
	789, 0, 0, 363, 800, 311, 310, 794, 207, 859,
	833, 740, 292, 846, 213, 136, 336, 375, 154, 219,
	341, 732, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 780, 848, 858, 290, 313,
	343, 156, 330, 776, 777, 782, 855, 302, 866, 878,
	891, 232, 187, 190, 201, 208, 840, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 741, 0, 328, 361, 377, 158, 762, 316,
	342, 791, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 760, 761, 758, 0, 759, 821, 822, 894, 895,
	896, 857, 753, 0, 875, 876, 0, 0, 0, 0,
	0, 863, 882, 883, 845, 906, 796, 169, 742, 745,
	746, 747, 755, 812, 813, 825, 828, 871, 870, 869,
	872, 877, 900, 899, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 133, 144, 223,
	907, 291, 193, 362, 737, 179, 0, 814, 817, 827,
	852, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 850, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 879,
	0, 793, 135, 873, 903, 836, 847, 887, 862, 339,
	807, 890, 764, 790, 905, 795, 799, 842, 748, 820,
	265, 786, 749, 0, 768, 738, 778, 739, 765, 182,
	763, 864, 823, 889, 221, 837, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 888, 815, 0, 897, 224,
	0, 832, 898, 326, 249, 0, 0, 811, 874, 818,
	860, 806, 844, 757, 831, 892, 787, 839, 893, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 835, 886, 781, 838, 809, 841,
	736, 834, 0, 743, 750, 904, 881, 771, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 810, 819, 854,
	803, 359, 276, 293, 314, 797, 284, 784, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 0, 829, 0,
	0, 0, 751, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	756, 735, 770, 856, 0, 733, 250, 148, 861, 880,
	805, 212, 902, 884, 802, 801, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 853, 308, 783,
	734, 865, 766, 779, 172, 775, 300, 269, 358, 788,
	826, 299, 225, 348, 849, 885, 357, 792, 868, 367,
	372, 774, 816, 754, 323, 184, 180, 183, 0, 137,
	785, 283, 177, 217, 804, 843, 767, 168, 851, 830,
	867, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 798, 789,
	0, 0, 363, 800, 311, 310, 794, 207, 859, 833,
	740, 292, 846, 213, 136, 336, 375, 154, 219, 341,
	732, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 780, 848, 858, 290, 313, 343,
	156, 330, 776, 777, 782, 855, 302, 866, 878, 891,
	232, 187, 190, 201, 208, 840, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 741, 0, 328, 361, 377, 158, 762, 316, 342,
	791, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	760, 761, 758, 0, 759, 821, 822, 894, 895, 896,
	857, 753, 0, 875, 876, 0, 0, 0, 0, 0,
	863, 882, 883, 845, 906, 796, 169, 742, 745, 746,
	747, 755, 812, 813, 825, 828, 871, 870, 869, 872,
	877, 900, 899, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 133, 144, 223, 907,
	291, 193, 362, 737, 179, 0, 814, 817, 827, 852,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 850, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 879, 0,
	793, 135, 873, 903, 836, 847, 887, 862, 339, 807,
	890, 764, 790, 905, 795, 799, 842, 748, 820, 265,
	786, 749, 0, 768, 738, 778, 739, 765, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 0, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 809, 841, 736,
	834, 0, 743, 750, 904, 881, 771, 772, 773, 0,
	0, 0, 0, 0, 0, 0, 810, 819, 854, 803,
	359, 276, 293, 314, 797, 284, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 829, 0, 0,
	0, 751, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 756,
	735, 770, 856, 0, 733, 250, 148, 861, 880, 805,
	212, 902, 884, 802, 801, 286, 0, 333, 200, 222,
	729, 130, 146, 725, 199, 261, 853, 308, 783, 734,
	865, 766, 779, 172, 775, 300, 269, 358, 788, 826,
	299, 225, 348, 849, 885, 357, 792, 868, 367, 372,
	774, 816, 754, 323, 184, 180, 183, 0, 137, 785,
	283, 177, 217, 804, 843, 767, 168, 851, 830, 867,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 798, 789, 0,
	0, 363, 800, 311, 310, 794, 207, 859, 833, 740,
	292, 846, 213, 136, 336, 375, 154, 219, 341, 732,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 780, 848, 858, 290, 313, 343, 156,
	330, 776, 777, 782, 855, 302, 866, 878, 891, 232,
	187, 190, 201, 208, 840, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	741, 0, 328, 361, 377, 158, 762, 316, 342, 791,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 760,
	761, 758, 0, 759, 821, 822, 894, 895, 896, 857,
	753, 0, 875, 876, 0, 0, 0, 0, 0, 863,
	882, 883, 845, 906, 796, 169, 742, 745, 746, 747,
	755, 812, 813, 825, 828, 871, 870, 869, 872, 877,
	900, 899, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 133, 144, 223, 907, 291,
	193, 362, 737, 179, 0, 814, 817, 827, 852, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	850, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 879, 339, 793,
	135, 873, 903, 836, 847, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 559, 0, 0, 182, 556,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 1647, 0, 81, 0,
	0, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 1648, 0, 0, 0,
	554, 571, 0, 676, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 689, 0, 570,
	0, 0, 566, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 668, 0, 0,
	212, 539, 0, 0, 687, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 594, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 596, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 678,
	688, 684, 686, 685, 682, 683, 681, 680, 679, 690,
	669, 670, 671, 672, 673, 0, 0, 0, 675, 0,
	613, 614, 0, 0, 0, 169, 587, 588, 589, 590,
	591, 597, 598, 602, 603, 611, 610, 609, 612, 615,
	617, 616, 618, 592, 593, 595, 599, 600, 601, 604,
	605, 608, 606, 607, 674, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 36, 339, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 559, 0, 0, 182, 556,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 0, 0, 0, 0,
	554, 571, 0, 676, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 689, 0, 570,
	0, 0, 566, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 668, 0, 0,
	212, 539, 0, 0, 687, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 594, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 596, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 678,
	688, 684, 686, 685, 682, 683, 681, 680, 679, 690,
	669, 670, 671, 672, 673, 0, 0, 0, 675, 0,
	613, 614, 0, 0, 0, 169, 587, 588, 589, 590,
	591, 597, 598, 602, 603, 611, 610, 609, 612, 615,
	617, 616, 618, 592, 593, 595, 599, 600, 601, 604,
	605, 608, 606, 607, 674, 133, 144, 223, 79, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 559, 0, 0, 182, 556, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 677, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 580, 579, 582, 583, 584, 585, 0, 0,
	540, 581, 586, 619, 620, 0, 0, 0, 0, 554,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 550, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 559, 0, 0, 182, 556, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 677, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1088, 0,
	557, 580, 579, 582, 583, 584, 585, 0, 0, 540,
	581, 586, 619, 620, 0, 0, 0, 0, 554, 571,
	0, 676, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 689, 0, 570, 0, 0,
	566, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 668, 0, 0, 212, 539,
	0, 0, 687, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 594, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 596, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 678, 688, 684,
	686, 685, 682, 683, 681, 680, 679, 690, 669, 670,
	671, 672, 673, 0, 0, 0, 675, 0, 613, 614,
	0, 0, 0, 169, 587, 588, 589, 590, 591, 597,
	598, 602, 603, 611, 610, 609, 612, 615, 617, 616,
	618, 592, 593, 595, 599, 600, 601, 604, 605, 608,
	606, 607, 674, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 559, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 554, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	1534, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 182, 556, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 677, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 557, 580,
	1581, 582, 583, 584, 585, 0, 0, 540, 581, 586,
	619, 620, 0, 0, 0, 0, 554, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 1534,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	559, 0, 0, 182, 556, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 677, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 666, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 557, 580, 1578,
	582, 583, 584, 585, 0, 0, 540, 581, 586, 619,
	620, 0, 0, 0, 0, 554, 571, 0, 676, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 568, 569, 1534, 0,
	0, 0, 689, 0, 570, 0, 0, 566, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 668, 0, 0, 212, 539, 0, 0, 687,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 594, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 596, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 678, 688, 684, 686, 685, 682,
	683, 681, 680, 679, 690, 669, 670, 671, 672, 673,
	0, 0, 0, 675, 0, 613, 614, 0, 0, 0,
	169, 587, 588, 589, 590, 591, 597, 598, 602, 603,
	611, 610, 609, 612, 615, 617, 616, 618, 592, 593,
	595, 599, 600, 601, 604, 605, 608, 606, 607, 674,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 559,
	0, 0, 182, 556, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 677, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 1415, 0, 557, 580, 579, 582,
	583, 584, 585, 0, 0, 540, 581, 586, 619, 620,
	0, 0, 0, 0, 554, 571, 0, 676, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 689, 0, 570, 0, 0, 566, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 668, 0, 0, 212, 539, 0, 0, 687, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 594, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 596, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 678, 688, 684, 686, 685, 682, 683,
	681, 680, 679, 690, 669, 670, 671, 672, 673, 0,
	0, 0, 675, 0, 613, 614, 0, 0, 0, 169,
	587, 588, 589, 590, 591, 597, 598, 602, 603, 611,
	610, 609, 612, 615, 617, 616, 618, 592, 593, 595,
	599, 600, 601, 604, 605, 608, 606, 607, 674, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 559, 0,
	0, 182, 556, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	677, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 666, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 557, 580, 579, 582, 583,
	584, 585, 0, 0, 540, 581, 586, 619, 620, 0,
	0, 0, 0, 554, 571, 0, 676, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	689, 0, 570, 0, 0, 566, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	668, 0, 0, 212, 539, 0, 0, 687, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 594, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 596, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 678, 688, 684, 686, 685, 682, 683, 681,
	680, 679, 690, 669, 670, 671, 672, 673, 0, 0,
	0, 675, 0, 613, 614, 0, 0, 0, 169, 587,
	588, 589, 590, 591, 597, 598, 602, 603, 611, 610,
	609, 612, 615, 617, 616, 618, 592, 593, 595, 599,
	600, 601, 604, 605, 608, 606, 607, 674, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 677,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 557, 580, 579, 582, 583, 584,
	585, 0, 0, 540, 581, 586, 619, 620, 0, 0,
	0, 0, 0, 571, 0, 676, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 689,
	0, 570, 0, 0, 566, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 668,
	0, 0, 212, 539, 0, 0, 687, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	594, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	596, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 678, 688, 684, 686, 685, 682, 683, 681, 680,
	679, 690, 669, 670, 671, 672, 673, 1584, 1585, 1586,
	675, 0, 613, 614, 0, 0, 0, 169, 587, 588,
	589, 590, 591, 597, 598, 602, 603, 611, 610, 609,
	612, 615, 617, 616, 618, 592, 593, 595, 599, 600,
	601, 604, 605, 608, 606, 607, 674, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 677, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 666,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 557, 580, 579, 582, 583, 584, 585,
	0, 0, 540, 581, 586, 619, 620, 0, 0, 0,
	0, 0, 571, 0, 676, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 689, 0,
	570, 0, 0, 566, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 668, 0,
	0, 212, 539, 0, 0, 687, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 594,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 596,
	2937, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	678, 688, 684, 686, 685, 682, 683, 681, 680, 679,
	690, 669, 670, 671, 672, 673, 0, 0, 0, 675,
	0, 613, 614, 0, 0, 0, 169, 587, 588, 589,
	590, 591, 597, 598, 602, 603, 611, 610, 609, 612,
	615, 617, 616, 618, 592, 593, 595, 599, 600, 601,
	604, 605, 608, 606, 607, 674, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1088, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 0, 0, 0, 0,
	0, 571, 0, 676, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 689, 0, 570,
	0, 0, 566, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 668, 0, 0,
	212, 539, 0, 0, 687, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 594, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 596, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 678,
	688, 684, 686, 685, 682, 683, 681, 680, 679, 690,
	669, 670, 671, 672, 673, 0, 0, 0, 675, 0,
	613, 614, 0, 0, 0, 169, 587, 588, 589, 590,
	591, 597, 598, 602, 603, 611, 610, 609, 612, 615,
	617, 616, 618, 592, 593, 595, 599, 600, 601, 604,
	605, 608, 606, 607, 674, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 677, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 580, 579, 582, 583, 584, 585, 0, 0,
	540, 581, 586, 619, 620, 0, 0, 0, 0, 0,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 1624, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1626, 1628, 0, 0, 0, 0, 0, 0,
	128, 0, 478, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 539,
	0, 1627, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 497, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 501, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 533,
	0, 0, 0, 169, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 1624, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 1628, 0, 0, 0, 0, 0, 0, 128,
	0, 478, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 1622, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	1627, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	1110, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1111, 0,
	1114, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 1107, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 539, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 497, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 501, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 0, 0,
	0, 169, 483, 484, 485, 486, 488, 506, 507, 511,
	512, 529, 528, 527, 530, 534, 537, 536, 538, 489,
	490, 498, 508, 509, 510, 514, 515, 524, 520, 522,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 478,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 539, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 497, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 501, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	169, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 473, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 1939, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 478, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 539, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 497, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 501, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 169,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 478, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 539, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 497, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 501, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 533, 0, 0, 0, 169, 483,
	484, 485, 486, 488, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 489, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 1114, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 539, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	497, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	501, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 169, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 539, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 497,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 501,
	0, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 169, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 0, 0,
	0, 135, 0, 0, 516, 518, 447, 339, 441, 452,
	435, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 458, 0, 0, 0, 0, 0, 182, 0, 0,
	442, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 433,
	436, 0, 0, 0, 250, 148, 0, 0, 440, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 444, 308, 0, 0, 448,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 451, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 461, 313, 343, 156, 330,
	437, 438, 439, 445, 446, 449, 450, 453, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 443,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 0, 0, 0, 135,
	447, 339, 441, 452, 435, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 427, 0, 0, 0, 0,
	0, 182, 0, 0, 442, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 433, 436, 0, 0, 0, 250, 148,
	0, 0, 440, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 444,
	308, 0, 0, 448, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 451, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 430,
	313, 343, 156, 330, 437, 438, 439, 445, 446, 449,
	450, 453, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 443, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 2851, 0, 0, 0, 0, 0, 182,
	2849, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 2850,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 36, 339,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 1619, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 79,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2042,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 2043, 2044, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 0, 0, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 0, 0, 0,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 0, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 290, 313, 343, 156, 330,
	0, 0, 0, 0, 302, 0, 0, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 0,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 1261, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 2306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 0, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 0, 0, 0, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 0, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 290,
	313, 343, 156, 330, 0, 0, 0, 0, 302, 0,
	0, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 0, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 693, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 125, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 0, 0, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 0, 0, 0,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 0, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 290, 313, 343, 156, 330,
	0, 0, 0, 0, 302, 0, 0, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 0,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 713, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 709, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 714, 712, 703, 704, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 710, 711, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 1255, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 700, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 713, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 709, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 535, 289, 159, 195, 188, 280, 714,
	712, 703, 704, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 2321, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 710, 711, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 0, 0, 539, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 492, 0, 487, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 0, 505, 0, 0, 2330, 0, 0,
	513, 481, 0, 517, 0, 0, 540, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 495, 519, 0, 0, 0,
	0, 0, 0, 493, 494, 496, 523, 0, 525, 531,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2328, 0, 0, 0, 0, 0,
	0, 0, 482, 540, 0, 0, 539, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 497, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 499, 0,
	0, 0, 526, 0, 0, 492, 0, 487, 0, 0,
	0, 0, 532, 533, 500, 0, 0, 0, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 513, 481, 0, 517, 0, 0, 0,
	0, 0, 0, 539, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 519,
	497, 480, 521, 0, 0, 0, 493, 494, 496, 523,
	501, 525, 531, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 492, 0, 487, 516, 518, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	513, 481, 0, 517, 0, 482, 0, 0, 0, 0,
	0, 479, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 519, 0, 36, 0,
	72, 39, 40, 493, 494, 496, 523, 0, 525, 531,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 41, 0, 0, 0, 532, 533, 0, 0, 0,
	0, 483, 484, 485, 486, 488, 506, 507, 511, 512,
	529, 528, 527, 530, 534, 537, 536, 538, 489, 490,
	498, 508, 509, 510, 514, 515, 524, 520, 522, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 2744, 0, 0, 2929, 2932, 2928,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 516, 518,
	41, 0, 532, 533, 0, 0, 0, 0, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 0, 81, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2745, 0, 0, 0, 0,
	0, 0, 0, 2744, 0, 0, 0, 0, 2969, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 516, 518, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 43,
	74, 46, 45, 48, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2745, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 2744,
	49, 77, 76, 0, 2965, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2747, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 57, 58,
	0, 2746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	2745, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 2744,
	73, 0, 0, 47, 2959, 0, 0, 0, 0, 0,
	2747, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 79,
	0, 0, 0, 78, 57, 58, 41, 2746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 81, 0, 0, 0, 68, 0,
	2745, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 2744,
	0, 0, 0, 47, 2945, 0, 2747, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 41, 0, 57, 58, 0, 2746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	81, 2934, 0, 0, 0, 0, 0, 0, 68, 0,
	2745, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2744, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 2747, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 79, 0, 0, 0, 78, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 81,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2745, 0, 68, 0,
	0, 0, 0, 0, 2744, 73, 0, 0, 0, 2876,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 2747, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 41, 0, 0, 0,
	57, 58, 0, 2746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 2745, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 73, 0, 0, 47, 2744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2747, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 57,
	58, 0, 2746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	2745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 2747, 75, 47, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2747, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	699, -1000, -372, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1859, -1000, -1000, -1000, -1000,
	-1000, -1000, 1036, 274, -1000, 249, 82, 32791, 585, 3103,
	33869, -1000, -1000, -1000, 167, 365, 33869, 395, 445, 1265,
	1741, 1264, 8, -87, -100, 138, 25244, 24700, -12, -1000,
	1909, 1928, -1000, -1000, 521, 14, -1000, -1000, -1000, 21996,
	190, -1000, -1000, 1846, 1857, 1643, -1000, 14450, 521, 521,
	32252, 36025, -1000, 1905, 33869, 12831, -1000, 576, 561, -203,
	470, 470, 270, 470, 470, 583, -1000, 256, 886, -1000,
	-1000, -1000, -1000, 883, 33869, 29018, 473, 33330, 473, 473,
	473, 473, 473, 473, 473, 33869, -1000, 660, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33869, 1263,
	1779, 994, 144, -1000, -1000, -1000, 924, -1000, 309, 297,
	332, 293, 99, 1083, 1842, -1000, 1528, 1846, 1846, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 288, 549, 257, 190,
	859, 1808, 1774, 1769, 1199, 1767, 756, 1766, 1578, -61,
	-1000, 1262, 33869, -1000, -1000, 1173, 1153, 1613, 1468, 658,
	1607, -1000, -1000, 320, 672, 1569, 374, 1569, 1569, 1569,
	1569, 1569, -105, 1569, 1569, 1569, 58, 1569, 139, 1569,
	1569, 1569, 1569, 1569, 1284, -1000, -1000, -1000, 337, 1453,
	1491, 1605, 511, -1000, -1000, -1000, -1000, 1587, 1829, 582,
	-1000, -149, 1503, 23074, -1000, 1528, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1277, 1771, 1105, 17684, 1683, -1000, -1000, 1008, 1891,
	-1000, 21457, 645, -1000, 17684, 3359, 1528, -1000, -1000, 1528,
	-1000, -1000, -1000, 604, -1000, -1000, 19840, 19840, 19840, 19840,
	19840, 19840, 19840, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, -1000,
	-1000, 1528, -1000, 13911, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 17684, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 31713, 29557, 33869, 1458, 1381, -1000, -1000, 644, 1523,
	-158, 35486, -1000, -1000, -1000, -1000, 34408, 28479, 851, -1000,
	-1000, -1000, -1000, 1765, -1000, -1000, 641, -1000, 1859, -1000,
	-1000, 1417, 363, -1000, 4170, 4978, -1000, -1000, -1000, 1577,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33330, 33869,
	232, 1260, 941, 1258, 34408, 34408, -1000, 210, 29018, 29018,
	470, 247, 29018, 225, 1522, 547, 1515, 545, 1267, 33869,
	1801, 1604, 33869, 1255, 1254, 34408, 34408, 29018, 29018, -1000,
	12282, -1000, -1000, 994, -1000, 3962, 17684, 470, 470, 33869,
	33869, 33869, 33869, 33869, -1000, -1000, 994, 994, 994, 994,
	845, 1890, 845, -1000, 845, -1000, -1000, 17684, -1000, 19840,
	27940, 760, -1000, -1000, -1000, 1252, 283, -1000, -1000, -1000,
	-1000, -1000, -1000, 1250, -1000, 1747, 756, 756, -1000, 1212,
	756, 1489, -1000, 847, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 756, -1000, 17145, -362,
	-1000, -1000, 1514, -1000, 233, -1000, -1000, 525, 525, 216,
	29018, 29018, 29018, -1000, 1569, 33330, -1000, 1569, 1569, 1569,
	-126, 1569, 1569, -1000, -1000, 1569, -1000, -1000, -1000, -1000,
	-1000, 1569, -1000, -1000, -1000, 1569, 1569, -1000, 1569, 1569,
	-1000, -1000, -1000, -1000, -1000, 29018, 525, 145, 1511, 525,
	29018, 29018, -1000, 47, 46, 45, 40, -1000, -1000, -1000,
	-1000, 37, 35, -1000, -1000, 1643, -1000, -1000, 190, -1000,
	-1000, 33869, -123, 23074, 1503, 1819, 10635, -1000, -1000, -1000,
	1900, 806, 1454, -1000, -1000, 1502, -1000, 1051, 640, 1182,
	1670, -1000, -1000, -1000, 33869, -1000, 17684, 17684, 1151, -1000,
	23613, -1000, -1000, -1000, -1000, 10086, 812, 19840, 1096, 917,
	19840, 19840, 19840, 19840, 19840, 19840, 19840, 19840, 19840, 19840,
	19840, 19840, 19840, 19840, 19840, 1144, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1249, -1000, 190, 1275, 1275, 718,
	718, 718, 718, 718, 718, 25783, 1813, 15528, 15528, 15528,
	1813, 1277, 1277, 15528, 15528, 15528, 15528, 15528, 15528, 15528,
	15528, 1813, 1813, 15528, 1277, 1277, 1277, 1277, 15528, 15528,
	15528, 15528, 33330, 33330, 1813, 15528, 15528, 15528, 1813, 1277,
	1415, 970, 13911, 15528, 15528, 1277, 17684, 17684, 16606, 16067,
	18223, 15528, 1813, 893, 970, 34408, -1000, -1000, 19301, -1000,
	-1000, -1000, -1000, -1000, 1277, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15528, 15528, 15528, 15528, 797, 33869, -1000,
	1464, 1507, -1000, -1000, -1000, 1815, 26862, -1000, 20918, -1000,
	1528, 797, 1423, 29557, 33869, -1000, -1000, 29557, 33869, 9537,
	34947, 1478, -1000, -146, -167, -158, -1000, -1000, 708, -1000,
	-1000, -1000, 13371, -1000, 11184, 1846, 1643, 6792, 11733, -1000,
	4978, 1577, -1000, -80, -1000, -1000, -1000, 1547, -1000, 1547,
	279, -29, 1547, 1547, 1547, 1547, 1547, -27, -27, -27,
	-27, -28, -1000, -1000, -1000, -1000, -1000, 1576, 1575, -1000,
	1547, 1547, 1547, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1558, 278, 1555, 1555, 1555, 1555, 1555, 376,
	376, -1000, 17684, 1565, 1814, 553, 247, 1785, 1798, 1785,
	313, -1000, 639, 1574, -1000, 638, 260, 1393, -1000, 164,
	1427, 33869, -1000, -1000, -1000, -1000, -1000, 33869, 33869, 29018,
	29018, 29018, 570, -1000, 33869, 1493, -1000, -1000, -1000, -1000,
	-1000, 1470, -1000, 1427, -1000, -1000, -1000, -1000, -1000, 1211,
	970, 1247, 1245, 1808, -1000, -1000, -1000, 901, -1000, -1000,
	-1000, -1000, 994, 33869, 33869, 33869, 1808, 994, 970, 1390,
	1580, 1528, 1277, -1000, -1000, 1236, -1000, 19840, 1489, 1489,
	-1000, 1489, 756, 1275, 1489, -1000, 1411, 961, 1209, 33869,
	-1000, 23074, -64, -1000, -182, 31174, -1000, -1000, -1000, 31174,
	-1000, 58, 147, -1000, 543, -1000, 1409, -1000, -1000, -1000,
	-1000, 1569, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31174, 104, 143, 31174, 1470, 1889, -1000, -1000, -1000,
	-1000, 1841, -1000, 1813, 1277, 347, -1000, -1000, -1000, 1528,
	1369, 631, -1000, 1652, 1105, 1105, 17684, -1000, -1000, -1000,
	11184, 1845, -1000, 1681, 1678, 1596, -1000, -1000, 812, 939,
	-1000, -1000, 1112, -1000, -1000, -1000, -1000, 629, 1528, -1000,
	3841, -1000, -1000, -1000, -1000, 1096, 19840, 19840, 19840, 1390,
	3841, 3773, 852, 873, 718, 746, 746, 734, 734, 734,
	734, 734, 838, 838, -1000, -1000, -1000, 1277, -1000, -1000,
	-1000, 15528, 1397, -1000, -1000, 970, 616, 1397, 1397, 15528,
	-220, -220, 1397, 1277, 1397, 1397, 1397, 1397, 1277, 1397,
	15528, 15528, 1397, -220, -220, -220, -220, 1397, 1397, 1397,
	1397, 1488, 1483, 15528, 1397, 1397, 1397, 15528, -1000, 17684,
	-1000, 1277, 1397, 1397, -1000, 968, 1029, 779, 1888, 1397,
	774, 1887, 1397, 2527, 19840, 19840, 19840, 1397, 15528, 909,
	-1000, 17684, 1277, -1000, 1590, 1397, 1277, 1482, 1397, 1397,
	212, 1528, -1000, 11184, 29557, 29557, 29557, 29557, 29557, -1000,
	1635, 1630, -1000, 1627, 1624, 1637, 23074, 1399, 1277, 286,
	26862, -1000, 1528, -1000, 22535, 523, 573, 569, 567, 15528,
	1865, 29557, 1462, -1000, 1462, -1000, 613, -1000, -1000, 34408,
	-158, -176, -1000, -1000, 1478, -1000, 1165, -1000, -1000, 970,
	-1000, 612, 1771, 1813, 1476, 6243, -1000, -1000, -1000, -1000,
	363, -1000, -1000, -1000, 1568, 4647, -1000, 1708, 716, 716,
	712, 1221, 1694, -1000, -1000, 156, -82, -1000, -1000, 1148,
	-27, -27, 1547, 1547, 269, 1547, -1000, -27, -1000, -1000,
	-1000, 708, 1763, 708, 708, 708, 708, -27, 1208, 1208,
	-1000, -1000, -1000, -1000, 1147, -1000, 1558, -1000, 1125, -1000,
	-1000, -1000, -1000, -1000, -1000, 1082, 1603, 33330, -1000, 33869,
	-1000, 1785, -1000, -1000, -1000, 119, -1000, -1000, -1000, 1870,
	-1000, -1000, 33330, 27401, 33330, -1000, -1000, 69, 29018, 151,
	330, 211, -1000, 540, -1000, 533, -1000, -1000, -1000, -1000,
	-1000, -1000, 33869, 29018, -1000, -1000, -1000, -1000, 1865, 1235,
	1234, -1000, -1000, -1000, 845, 994, -1000, -1000, 19840, 29018,
	-1000, 323, -1000, 3841, -1000, -1000, -1000, 797, 580, -1000,
	-1000, -136, -1000, -1000, 531, 611, 607, 529, -1000, 81,
	29018, -1000, 33330, -1000, 1884, 1881, 101, 1879, 29018, -1000,
	22, 1670, -1000, 1474, -1000, 735, 745, 704, 381, 381,
	-1000, 822, 381, 1755, 1754, 792, -1000, 236, -1000, 10635,
	10635, 1650, -1000, -1000, -1000, 33869, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8988, 15528, -1000, 1390, 3841,
	3748, -1000, 19840, -1000, 1397, 15528, -220, 8439, -220, -220,
	1397, -1000, 30635, -1000, -1000, -220, -1000, -220, -220, -220,
	-220, -220, 1397, 1397, -220, -1000, -1000, -1000, -1000, -220,
	-220, -220, -220, 19840, 19840, 1397, -220, -220, -220, 1277,
	970, -1000, -1000, -1000, 530, 1144, 530, 19840, 19840, -1000,
	19840, 19840, -1000, -1000, 19840, 3681, 3622, 3598, -267, 1437,
	839, -1000, 17684, 1158, -1000, -1000, -1000, -1000, -1000, -1000,
	1595, 11184, 1528, 7341, -1000, 33330, 1480, -1000, 828, 823,
	1507, 1564, 1588, 1519, -1000, -1000, -1000, -1000, 1628, -1000,
	1626, -1000, -1000, 1531, -1000, -1000, 1473, 1528, 33330, 19840,
	523, -1000, 1528, 1528, 1528, 1277, 1859, 17684, 1462, -1000,
	-1000, 753, -1000, -1000, -177, -173, -1000, -1000, -1000, 10635,
	-1000, 6792, -1000, 6792, -1000, 24152, 375, 1710, 369, -1000,
	1221, -1000, -1000, 1221, -1000, 1221, -1000, -1000, -1000, 1557,
	-1000, 992, -1000, -1000, -1000, -1000, -1000, 1528, -366, 19840,
	1899, -1000, 1702, -1000, 1701, 1699, 1206, -1000, -1000, 1329,
	708, 708, -27, -1000, -1000, 1547, -1000, 708, -1000, 788,
	-1000, -1000, -1000, -1000, 708, 1391, -1000, 1389, 1472, -1000,
	1371, 122, 33869, -1000, -1000, 1809, -1000, -1000, -1000, 1759,
	822, 822, 822, 1586, -1000, -1000, -1000, -1000, 1319, 1471,
	-1000, 4170, 33330, 33330, 33330, -1000, -284, 155, -1000, 29018,
	121, 164, 370, 1233, 33869, 29018, -1000, -1000, -1000, -1000,
	-1000, 1808, -1000, 3841, 1427, -1000, -1000, -27, 33869, -1000,
	29018, 752, 30096, 29018, 90, 136, -1000, 29018, 29018, 1877,
	29018, 1470, 1205, 1596, 347, 3766, 1221, 536, -1000, -1000,
	389, -1000, 3305, 1694, 1230, 36703, 36596, 33330, 1693, 1691,
	1229, 33869, 33330, -1000, -1000, 36383, 1226, 17684, -1000, 33330,
	-1000, -1000, 33330, 603, -1000, -1000, -1000, 986, 14450, -1000,
	-1000, 1277, -1000, 19840, 3841, -220, -1000, -1000, -1000, -1000,
	598, -1000, -1000, -220, -1000, -1000, 1224, -1000, -1000, -1000,
	-1000, -1000, -1000, -220, -220, -1000, -1000, -1000, -1000, -1000,
	3564, 3534, -220, -1000, -1000, -1000, -1000, 1277, 1547, 1547,
	-1000, 1547, 1555, -1000, 1547, -3, 1547, -5, 1277, 1277,
	3518, 3120, 3048, 2254, 1590, 19840, 19840, 19840, 1528, -214,
	-1000, 970, 17684, -1000, 1787, 1316, 1463, -1000, -1000, 14989,
	1277, 1675, 1369, -1000, 21996, 1367, -1000, 1859, 11184, 17684,
	17684, -1000, -1000, 17684, 1553, -1000, 17684, -1000, -1000, -1000,
	-1000, 33330, 284, -1000, 17684, 1367, 1006, -1000, 33330, 33330,
	33330, -1000, 1846, 970, -1000, -1000, -1000, -1000, 6243, -1000,
	1365, -1000, 1547, 1547, 1690, -1000, 716, -1000, -1000, -1000,
	-1000, 33330, -1000, 19840, 1807, 3841, -122, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 708, -1000, -1000, -1000, -1000, -1000,
	-27, 1204, -27, 1116, -1000, 1114, -1000, -1000, -314, 1546,
	190, -1000, 822, 787, 782, 1202, 33869, 134, 27401, -1000,
	4170, 4170, 4170, 95, 91, -1000, 949, -1000, -1000, -1000,
	1200, 1198, 1197, 1427, 166, 947, 130, -1000, 1804, -1000,
	-1000, 994, -92, -1000, 136, -1000, -1000, -1000, 136, -1000,
	-1000, 142, 1470, 1470, 29018, 1470, -1000, -1000, -1000, 36383,
	356, 4170, 4170, 1565, 716, 1685, 369, -1000, -1000, -1000,
	-1000, -1000, -1000, 1223, -1000, 674, -1000, 527, 356, 36383,
	970, 748, 960, 10635, 1876, -1000, 33330, -1000, -1000, 3841,
	-1000, 7890, -1000, 777, -1000, -1000, -1000, 19840, 19840, -1000,
	-1000, -1000, 266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19840, 19840, 19840, 19840, -1000, 1590, 1590, 1590, 19840,
	1277, 1195, 970, 1684, -1000, 1528, -1000, -1000, 1528, 234,
	-1000, 33330, 1846, -1000, 970, 970, 970, 33330, 970, 1361,
	-1000, 1528, 20379, -1000, 23074, 1350, 1350, 1350, -1000, 636,
	24152, 1791, 1791, -1000, 1221, 1327, 1590, 1528, -1000, 1528,
	1528, -1000, 708, -1000, 708, 1308, 1305, -1000, 24152, -1000,
	-1000, 766, -1000, -1000, -1000, -1000, -1000, 1840, -1000, 134,
	-1000, 1194, 246, 229, -1000, 243, 241, 238, 227, 209,
	-1000, -1000, -1000, -1000, 343, 95, -1000, -86, 1111, 816,
	1751, 91, -1000, 1099, 1093, 1076, 1071, 168, -1000, -1000,
	-1000, -1000, 178, 164, -1000, 355, 1193, -1000, 1735, 1730,
	1806, 1806, 88, 1470, 1413, 1295, -1000, -1000, 1222, -1000,
	-1000, 1537, 1221, 1533, -1000, 1220, -1000, -1000, 33330, -1000,
	356, 1784, 1782, 1528, -1000, 1865, 29557, 14450, 1469, -1000,
	-1000, -1000, 1859, 1856, 1590, 1590, -1000, -1000, 1590, 1590,
	1590, 1590, -1000, -1000, -1000, 170, -1000, -1000, 1898, -1000,
	1463, 1528, -1000, 190, -1000, -1000, 1311, -1000, 33330, -1000,
	-1000, 523, -1000, -1000, -1000, 636, -1000, 1219, 822, 1192,
	-1000, -1000, -1000, -1000, 348, -363, 19840, -1000, -1000, -1000,
	-1000, 1304, -1000, 190, -1000, -1000, 298, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1740, 1738, 258, -1000, 1191, 1188,
	-1000, 410, 1156, 659, -235, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 351, 1218, -1000, 125,
	-1000, -1000, 500, 1713, 1715, 1855, -1000, 29018, -1000, -1000,
	29557, -1000, -1000, 156, 156, 24152, 1565, 24152, -1000, -1000,
	-1000, 19840, -1000, 757, 1863, 1467, -1000, 33330, 794, 17684,
	-1000, -1000, -1000, -1000, -1000, -1000, 1277, 154, -295, 11184,
	1463, 1277, -1000, -1000, -1000, -1000, -1000, 1045, -1000, 33869,
	-1000, -1000, -1000, 1590, 636, -1000, 277, 37827, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1044, -1000, -1000, 1149,
	391, 124, -1000, 1805, -1000, 1531, 1020, 1730, 1854, 1722,
	1719, -1000, 1187, -285, 1462, 1302, 1530, 1300, 3841, 1293,
	-1000, 33330, 1861, 1851, -1000, -1000, 1277, 242, 242, 1457,
	-1000, 1648, -281, -298, 1455, -1000, -1000, 1529, -363, -1000,
	636, -1000, 264, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17684, 17684, 5694, 37827, 111, -1000,
	110, -1000, -1000, -1000, 1185, -1000, 1733, -1000, 1181, -1000,
	1850, 1849, -1000, 149, 1863, 636, 24152, 636, -1000, 757,
	1673, -222, 17684, 17684, -1000, -1000, 174, -1000, 771, 245,
	769, -1000, 1275, -1000, -1000, 1647, -1000, 33330, -1000, -1000,
	1216, 1184, -1000, 1053, 1137, 183, 177, 5185, -1000, -1000,
	-1000, -1000, -373, -1000, -1000, -1000, -1000, -1000, -1000, 1180,
	1037, 26322, 1861, -1000, 1290, -1000, -1000, 325, 954, 33330,
	-1000, 970, 1451, -1000, 970, 943, -1000, -1000, -1000, -1000,
	-1000, 33330, -286, 1276, -1000, -1000, -1000, 1064, -1000, 17684,
	37827, 1838, 1835, 1824, 1772, 10635, 37702, -1000, -1000, -1000,
	-1000, 84, 1427, -222, 636, 261, -1000, 1436, -1000, 1803,
	17684, 174, -1000, -296, 1584, 362, 936, 37827, -1000, 1078,
	-374, 393, 190, 496, 19840, -1000, -1000, -1000, 29018, -1000,
	-1000, 1528, 33330, 1528, -1000, -1000, -299, 1583, 1582, 1872,
	-1000, -1000, -1000, -1000, -1000, -1000, 37827, -1000, -376, 37827,
	37012, -1000, -1000, -1000, 37593, -1000, -1000, -1000, -1000, 158,
	-1000, -1000, 3841, 1427, 18762, -1000, -1000, -1000, -1000, 1897,
	-1000, 1895, 548, 548, -1000, -377, 37477, -378, 467, 37827,
	1012, -1000, 17684, -1000, 496, -1000, 1590, 1277, -1000, -1000,
	-1000, 371, 1022, -1000, 37357, 915, 37827, -1000, -379, 465,
	37827, -1000, 1066, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37237, -1000, -380, 37827, 440, 37121, -381, -1000, 436,
	37827, -1000,
}

var yyPgo = [...]int{
	0, 2276, 2270, 139, 2268, 232, 2267, 2266, 2265, 25,
	23, 21, 27, 2264, 2055, 2050, 2048, 2039, 2037, 2261,
	13, 2260, 2258, 2031, 2251, 2249, 2026, 2017, 2015, 2004,
	2248, 2247, 2246, 2002, 1999, 1992, 12, 2244, 18, 2243,
	2, 147, 161, 2241, 3, 2239, 2238, 9, 2237, 2236,
	1983, 2235, 2234, 2233, 96, 2231, 1977, 1972, 2230, 1959,
	1951, 2229, 2228, 1941, 1939, 1934, 2227, 168, 2226, 2224,
	2223, 259, 87, 150, 2222, 2221, 2220, 107, 78, 1883,
	112, 50, 104, 356, 2219, 16, 66, 237, 2218, 2217,
	131, 2216, 124, 2214, 155, 2211, 146, 157, 100, 2208,
	2205, 166, 2204, 2202, 2201, 128, 2200, 2199, 165, 138,
	2198, 2197, 148, 2196, 63, 162, 60, 38, 2195, 2194,
	2192, 2190, 2189, 32, 79, 2186, 91, 136, 2184, 2178,
	80, 2177, 2174, 171, 2170, 2166, 2164, 134, 42, 2163,
	2162, 53, 2160, 109, 85, 2158, 51, 2157, 132, 2156,
	2155, 31, 30, 2154, 65, 2152, 52, 2151, 133, 120,
	893, 2150, 15, 20, 8, 2149, 39, 14, 11, 47,
	19, 64, 89, 126, 95, 2148, 33, 41, 111, 97,
	2147, 29, 86, 44, 2146, 152, 2145, 93, 158, 129,
	130, 149, 2140, 2139, 2137, 1102, 2136, 121, 84, 2135,
	154, 942, 172, 108, 2134, 88, 2133, 2132, 2131, 2130,
	2129, 102, 114, 2127, 2126, 167, 163, 169, 46, 389,
	417, 2095, 48, 151, 2121, 45, 2120, 2119, 2117, 3226,
	113, 76, 105, 160, 2116, 103, 35, 58, 2115, 2114,
	2113, 2110, 2106, 2105, 1413, 2104, 2103, 2102, 2101, 164,
	110, 2100, 127, 125, 118, 2099, 142, 37, 2098, 2097,
	117, 99, 2096, 2094, 2093, 2092, 123, 77, 145, 2091,
	119, 106, 122, 2090, 73, 2089, 2088, 54, 49, 2087,
	2086, 2085, 90, 101, 2084, 62, 43, 36, 70, 17,
	2079, 2078, 74, 92, 2076, 34, 2075, 5, 6, 10,
	2074, 2073, 2072, 2071, 2070, 2068, 2067, 83, 2066, 2064,
	69, 2063, 2062, 2060, 40, 2058, 2046, 2044, 135, 115,
	82, 153, 94, 7, 2035, 2033, 4, 2029, 116, 2023,
	56, 2020, 57, 2013, 2011, 59, 2007, 1989, 61, 1986,
	1979, 156, 1599, 357, 1975, 159, 137, 55, 98, 1969,
	1966, 0, 741, 170, 141, 1947, 1936,
}

var yyR1 = [...]int{
	0, 350, 350, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 88, 88, 181, 181, 180, 180,
	89, 89, 87, 87, 94, 6, 6, 7, 7, 9,
	9, 70, 70, 10, 11, 11, 11, 11, 353, 353,
	103, 103, 101, 101, 102, 102, 178, 178, 12, 12,
	12, 185, 185, 190, 190, 190, 193, 193, 193, 193,
	168, 169, 170, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 324, 324, 333, 333, 333,
	334, 334, 332, 332, 332, 332, 332, 336, 336, 337,
	337, 335, 335, 335, 335, 339, 339, 340, 340, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 327, 327, 327, 33, 33, 33, 33,
	34, 34, 34, 34, 34, 34, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 342, 342, 343,
	343, 344, 344, 345, 345, 345, 345, 346, 346, 346,
	346, 346, 347, 347, 347, 347, 347, 347, 347, 348,
	348, 349, 349, 2, 305, 305, 306, 306, 307, 307,
	307, 307, 308, 308, 309, 309, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 24, 217, 217, 214,
	214, 214, 215, 215, 216, 216, 216, 326, 326, 326,
	320, 320, 320, 322, 322, 321, 321, 321, 323, 323,
	328, 328, 328, 328, 328, 330, 330, 330, 330, 330,
	330, 331, 331, 331, 329, 329, 48, 48, 49, 49,
	49, 157, 157, 157, 13, 13, 13, 13, 13, 19,
	21, 21, 37, 37, 38, 22, 22, 22, 22, 39,
	39, 40, 25, 25, 25, 25, 25, 25, 46, 46,
	46, 45, 45, 44, 44, 44, 44, 44, 44, 23,
	23, 23, 23, 47, 47, 42, 42, 41, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	26, 26, 26, 26, 26, 26, 18, 304, 304, 304,
	36, 36, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 52, 279, 280, 280, 280, 280, 280, 280,
	280, 280, 267, 267, 268, 257, 257, 257, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 236, 236,
	236, 236, 240, 240, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 239, 239, 239, 239, 239, 239,
	239, 239, 241, 241, 241, 241, 241, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 243, 243, 243, 243, 243, 243, 243, 243,
	266, 266, 244, 244, 260, 260, 261, 261, 261, 258,
	258, 259, 259, 247, 248, 262, 249, 249, 249, 250,
	250, 250, 251, 251, 256, 256, 255, 255, 255, 255,
	255, 255, 252, 252, 252, 252, 253, 253, 254, 265,
	265, 265, 265, 265, 245, 35, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 291, 291,
	207, 207, 208, 208, 269, 269, 289, 289, 288, 288,
	287, 287, 287, 278, 278, 284, 284, 284, 284, 284,
	284, 284, 284, 273, 273, 273, 272, 272, 274, 274,
	277, 277, 286, 286, 285, 285, 270, 270, 270, 292,
	292, 292, 292, 292, 271, 271, 271, 271, 293, 275,
	275, 276, 276, 276, 298, 299, 297, 297, 297, 297,
	297, 120, 120, 120, 281, 281, 281, 282, 282, 282,
	283, 283, 283, 302, 302, 301, 301, 50, 51, 55,
	55, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 156, 156, 156,
	212, 212, 296, 294, 294, 295, 295, 15, 15, 53,
	53, 325, 325, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 300, 300, 300, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 84, 199, 199, 198, 198, 197, 197,
	197, 200, 200, 200, 200, 234, 234, 234, 58, 58,
	62, 62, 65, 65, 65, 63, 64, 27, 28, 28,
	28, 28, 29, 213, 213, 60, 60, 61, 61, 61,
	61, 76, 76, 355, 355, 59, 356, 67, 68, 68,
	69, 69, 69, 203, 203, 73, 73, 73, 71, 71,
	71, 72, 72, 78, 78, 82, 82, 82, 82, 81,
	81, 81, 81, 159, 159, 164, 226, 226, 140, 140,
	160, 160, 165, 165, 165, 166, 166, 167, 167, 167,
	167, 167, 162, 162, 161, 161, 163, 128, 128, 224,
	224, 224, 223, 223, 223, 223, 86, 86, 90, 90,
	92, 92, 92, 92, 92, 95, 142, 142, 113, 113,
	114, 114, 114, 114, 114, 126, 126, 177, 177, 176,
	176, 179, 179, 91, 93, 93, 93, 93, 98, 98,
	99, 99, 100, 100, 211, 211, 231, 231, 231, 104,
	104, 104, 106, 105, 105, 105, 105, 107, 107, 108,
	108, 110, 111, 111, 109, 109, 115, 115, 112, 116,
	116, 116, 116, 117, 117, 83, 83, 83, 83, 83,
	83, 83, 196, 196, 119, 119, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 136, 136, 136, 136,
	136, 136, 121, 121, 121, 121, 121, 121, 121, 77,
	77, 137, 137, 137, 97, 96, 96, 80, 80, 79,
	79, 138, 138, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 131, 131, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 354, 354, 133, 132, 132,
	132, 132, 132, 132, 74, 74, 74, 74, 74, 232,
	232, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 149, 149, 75, 75,
	147, 147, 148, 150, 150, 146, 146, 146, 123, 123,
	123, 123, 123, 123, 123, 123, 125, 125, 125, 151,
	151, 139, 139, 85, 152, 152, 153, 154, 154, 155,
	155, 158, 171, 171, 171, 172, 172, 172, 172, 127,
	127, 173, 173, 173, 122, 122, 122, 122, 122, 122,
	122, 175, 175, 174, 174, 174, 174, 182, 182, 141,
	141, 144, 144, 143, 145, 183, 183, 187, 187, 184,
	184, 188, 188, 188, 188, 191, 191, 192, 192, 192,
	189, 189, 189, 186, 186, 186, 228, 228, 228, 194,
	194, 204, 204, 201, 201, 202, 202, 195, 195, 246,
	246, 210, 210, 209, 209, 209, 205, 205, 205, 206,
	206, 225, 225, 221, 221, 227, 227, 222, 222, 229,
	229, 230, 230, 303, 303, 263, 263, 313, 313, 264,
	264, 314, 314, 316, 316, 311, 311, 312, 312, 315,
	315, 30, 317, 317, 318, 318, 319, 319, 319, 319,
	31, 32, 32, 32, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	351, 352,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 14, 0, 2, 0, 2, 1, 3,
	2, 3, 1, 3, 4, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	0, 0, 0, 2, 3, 3, 11, 9, 11, 5,
	5, 16, 12, 9, 4, 0, 3, 0, 2, 2,
	1, 3, 1, 1, 2, 2, 2, 0, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 3,
	3, 5, 3, 3, 4, 5, 4, 4, 2, 2,
	2, 2, 2, 0, 2, 2, 9, 9, 5, 7,
	7, 7, 7, 8, 4, 6, 2, 3, 2, 3,
	3, 3, 4, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 2, 2, 2, 3, 3, 2,
	3, 3, 2, 2, 2, 2, 2, 1, 3, 0,
	3, 1, 3, 0, 1, 1, 1, 1, 3, 1,
	3, 3, 0, 2, 5, 5, 5, 7, 5, 0,
	3, 0, 3, 4, 0, 1, 1, 3, 2, 3,
	3, 3, 0, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 3, 3, 3, 3, 4, 2, 3, 3,
	3, 3, 0, 3, 0, 3, 3, 1, 1, 1,
	3, 2, 1, 1, 3, 3, 2, 1, 1, 3,
	1, 2, 5, 4, 6, 4, 3, 3, 6, 5,
	5, 4, 3, 5, 1, 3, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 4,
	5, 8, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 3, 5, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 4, 3, 2, 4, 3, 0, 2, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 4, 1, 1, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 0, 1, 1, 0, 2,
	3, 2, 2, 2, 2, 2, 6, 8, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 2, 4, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 8, 2, 2, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 5, 4, 4, 4, 2, 2, 2,
	6, 2, 4, 4, 4, 5, 8, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 3, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 1,
	3, 3, 2, 1, 1, 3, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 6, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 0, 2, 4, 2, 4, 1, 3, 5, 4,
	6, 0, 3, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -350, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 29, -52, 178, -51, 181, 180, 216, 182, 209,
	63, 339, -65, 342, 343, -355, -213, 267, 268, 20,
	36, 344, 346, 30, 31, 230, 284, 286, 311, -5,
	-89, -6, 8, 438, 179, 340, 211, 210, 26, 487,
	-351, 67, 554, -154, 15, -67, -356, -67, -67, -67,
	-67, -67, -279, -211, 106, 67, 23, -206, -217, 87,
	429, 186, -215, 280, 282, -204, -205, -214, 240, 250,
	43, 197, 196, 251, 187, 280, 187, 188, 190, 429,
	186, 223, 222, 280, 282, 187, -109, -229, 71, -219,
	200, 498, 305, 484, 251, 549, 292, 237, 339, 353,
	355, 347, 382, 370, 485, 499, 201, 262, 185, 338,
	368, 371, 415, 199, 295, 255, 318, 500, 404, 410,
	265, 342, 424, 501, 202, 259, 261, 260, 245, 454,
	266, 35, 212, 366, 301, 359, 270, 240, 502, 492,
	234, 357, 27, 235, 233, 427, 503, 329, 412, 387,
	330, 304, 504, 489, 299, 411, 362, 358, 311, 203,
	197, 331, 505, 388, 392, 506, 416, 285, 332, 507,
	508, 509, 189, 291, 351, 352, 510, 241, 418, 296,
	386, 32, 198, 486, 47, 220, 419, 37, 390, 36,
	396, 511, 328, 385, 380, 397, 512, 513, 514, 515,
	309, 307, 308, 310, 384, 350, 379, 252, 257, 52,
	184, 394, 393, 395, 258, 414, 375, 373, 516, 517,
	300, 204, 518, 519, 360, 18, 520, 521, 422, 215,
	302, 303, 41, 522, 523, 524, 110, 525, 526, 527,
	413, 389, 391, 239, 114, 363, 194, 528, 306, 409,
	315, 488, 289, 111, 420, 356, 530, 334, 346, 219,
	214, 423, 324, 531, 268, 532, 533, 534, 206, 535,
	283, 282, 343, 316, 112, 344, 406, 263, 536, 537,
	538, 539, 249, 232, 426, 417, 51, 267, 401, 540,
	319, 335, 349, 196, 269, 541, 293, 340, 42, 7,
	256, 297, 407, 317, 264, 250, 253, 377, 221, 542,
	543, 364, 365, 383, 348, 378, 341, 224, 216, 109,
	425, 402, 490, 280, 336, 372, 369, 227, 376, 544,
	545, 254, 228, 345, 421, 294, 367, 403, 187, 131,
	371, 415, 178, 405, 406, 412, -273, 413, 222, 225,
	-234, 187, -199, 404, 285, 306, 459, 228, 229, 188,
	189, 32, 417, 416, 408, -229, 191, 345, -76, 182,
	217, -109, -47, 71, 269, -47, 29, 71, 71, 35,
	71, 344, 407, 407, 74, 488, 231, 21, -342, -323,
	315, -341, -321, 179, 178, 10, 180, 320, 321, 322,
	188, 8, 30, 529, 205, 323, 324, 6, 209, 325,
	326, 223, 9, 327, -326, 73, 71, -219, 21, -342,
	-323, 315, -208, -207, 337, 396, 6, -69, 5, -195,
	192, 341, -87, 497, -94, -231, -229, -220, 73, 298,
	208, 288, 399, 455, 456, 457, 458, 231, 459, 472,
	473, 97, 229, 320, 321, 312, 322, 207, 474, 115,
	238, 217, 277, 408, 276, 281, 460, 461, 475, 476,
	477, 462, 463, 287, 478, 479, 552, 290, 553, 313,
	481, 529, 482, 323, 480, 325, 226, 466, 465, 464,
	467, 326, 449, 450, 468, 50, 470, 469, 471, 190,
	80, -3, -172, 17, 16, -73, 53, 54, -68, -81,
	122, -83, -229, -118, 89, -124, 28, 71, -219, 24,
	-123, -220, -119, -146, -145, -97, 131, -233, 120, 121,
	128, 90, 174, -131, -129, -130, -132, -134, -135, 73,
	72, 81, 74, 75, 76, 77, 82, 455, 456, 457,
	458, 459, 472, 473, 207, 474, 217, 460, 461, 475,
	476, 477, 462, 463, 478, 479, 481, 482, 480, 466,
	465, 464, 467, 449, 450, 468, 470, 469, 471, 83,
	84, -221, -143, -351, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 57, 58, 186, 439,
	440, 441, 442, 443, 483, 447, 92, 46, 428, 437,
	436, 435, 433, 434, 430, 432, 431, 193, 429, 126,
	438, -195, -195, 11, -101, -102, -109, -112, -229, -184,
	341, -191, -188, 416, 417, -189, -192, -186, -146, 396,
	526, 527, 415, 371, 414, -221, -229, -2, -5, 6,
	-109, -280, -268, -271, -222, 202, -293, -221, -218, 199,
	71, -219, 298, 183, 208, 179, 88, 491, 23, 25,
	288, 399, 455, 91, 131, 456, 457, 458, 16, 20,
	92, 130, 80, 439, 231, 459, 178, 61, 430, 432,
	428, 429, 405, 28, 10, 26, 210, 244, 22, 124,
	180, 95, 96, 97, 229, 213, 320, 321, 24, 211,
	312, 84, 322, 207, 115, 238, 19, 64, 217, 277,
	11, 408, 225, 548, 284, 13, 453, 113, 276, 14,
	281, 193, 192, 108, 242, 188, 59, 8, 174, 86,
	105, 55, 460, 461, 494, 44, 230, 495, 57, 106,
	17, 433, 434, 30, 483, 462, 218, 496, 463, 126,
	247, 62, 49, 287, 89, 82, 552, 33, 85, 65,
	333, 87, 15, 243, 60, 451, 290, 553, 313, 222,
	529, 246, 497, 205, 107, 323, 181, 438, 314, 286,
	58, 186, 6, 448, 29, 209, 325, 248, 226, 466,
	465, 464, 467, 550, 56, 441, 442, 468, 326, 546,
	187, 94, 449, 450, 191, 223, 83, 5, 43, 31,
	9, 327, 63, 66, 435, 436, 437, 46, 50, 470,
	469, 471, 190, 551, 93, 12, 452, 487, 188, 190,
	438, -202, 193, -202, 223, 222, -216, 248, -202, -202,
	187, -215, 98, 98, -53, -109, -325, -320, -326, -201,
	193, -221, -201, -201, -201, -201, -201, -201, -201, -109,
	175, -109, 71, 29, -200, 106, 12, 429, 186, 187,
	222, 223, 190, -275, 11, 108, 226, 226, 226, 227,
	226, -198, 407, 409, 224, 410, 411, 12, -84, 106,
	19, -351, -172, -172, 71, 344, 191, -61, -3, -11,
	-9, -10, -3, 98, -126, 23, 29, 29, 73, 50,
	29, -42, -41, -43, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 29, -304, 67, -263,
	396, 71, -317, -318, -109, 74, 74, 65, 65, 68,
	191, 68, 65, -343, 316, 67, -343, 282, 316, 317,
	250, 280, 190, -343, -343, 282, -343, -343, -343, -343,
	-343, 407, -343, -343, -343, 318, 319, -343, 405, 190,
	-343, -343, -343, -343, -343, 70, 65, 68, 306, 65,
	11, 65, -290, 131, 329, 330, 331, 332, 328, 306,
	333, 334, 335, 226, 336, -67, -7, -5, -351, 21,
	22, 187, 420, 68, -87, -175, -351, -352, 69, -173,
	19, 30, -127, 74, 77, -155, -158, -83, -229, 49,
	-71, 21, 22, 79, 11, -224, 88, 87, 105, -223,
	23, 71, -219, -220, 73, 175, -83, -121, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -196, -351, -97, -351, 176, 177, -124,
	-124, -124, -124, -124, -124, -124, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -3,
	-138, -83, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -149, -83, -351, -354, -133, -351, -354,
	-133, -354, -133, -354, -351, -354, -133, -354, -133, -354,
	-354, -133, -354, -351, -351, -351, -351, -111, 86, -109,
	-86, -90, -92, -93, -113, -96, -351, -91, -109, -97,
	71, -109, -101, -353, 68, 11, 66, -353, 68, 175,
	68, -185, -190, 418, 420, 341, -189, -189, -228, -221,
	73, 28, 98, 29, 175, -154, -67, 69, 68, -271,
	202, 199, -236, -240, -242, -241, -243, -238, -239, 368,
	371, 375, 373, 369, 374, 131, 372, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 29, 212,
	364, 365, 366, 367, 388, 389, 390, 391, 392, 393,
	394, 395, 347, 370, 485, 348, 349, 350, 351, 352,
	353, 355, 356, 357, 358, 359, 360, 361, 362, 71,
	-220, -293, 67, -221, -109, -217, -215, 71, 89, 71,
	-108, -221, -229, -115, -221, -229, 249, -329, -328, -320,
	-323, -202, -216, -320, 254, 252, 253, 68, 191, 68,
	191, 70, -101, 24, 65, -103, -109, 71, 71, -108,
	-115, -322, -320, -323, -230, -229, -218, -200, 73, -233,
	-83, -202, -202, -109, -109, -109, -109, -109, -200, -200,
	-200, -200, -197, 11, 108, 11, -197, -197, -83, -124,
	-320, 431, 122, 71, 71, 344, 71, 33, -42, -42,
	73, -42, 68, 98, -42, 69, -138, -303, 547, 68,
	-319, 23, 420, 421, 397, -345, 187, 225, 222, -345,
	-341, 324, -322, -321, -320, -343, -344, -221, -343, -343,
	-343, 407, -343, -343, -343, -343, -343, -343, -343, -343,
	-326, -345, 284, 68, -345, -322, -320, 328, 328, 328,
	328, 328, 328, -73, -3, -109, 421, 422, -94, 23,
	-174, -222, 9, 108, 68, 18, 68, -171, 25, 26,
	175, -125, 50, 74, 77, -203, 48, -109, -83, -83,
	-136, 82, 89, 83, 84, -223, 122, -230, -222, -218,
	-124, -137, -143, -97, 78, 108, 106, 107, 91, -124,
	-124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -124, -124, -232, 71, 73, 71, -123, -123,
	-221, -71, -79, -82, 122, -83, -229, -79, -79, -71,
	-352, -352, -79, -82, -79, -79, -79, -79, -82, -79,
	-71, -71, -79, -352, -352, -352, -352, -79, -79, -79,
	-79, -221, -221, -71, -79, -79, -79, -71, -352, 68,
	-352, -3, -79, -79, -352, -83, -83, -146, 73, -79,
	-146, 73, -79, -124, 444, 445, 446, -79, -71, -147,
	-148, 93, -146, -352, -124, -79, -80, -79, -79, -79,
	-178, 110, -109, 29, 68, -104, -106, -105, -107, 55,
	59, 61, 56, 57, 58, 62, -211, -86, -95, 46,
	-351, -114, 110, -116, 23, -231, 63, 192, 64, -351,
	-178, 66, -86, -109, -86, -112, -229, 122, -188, -191,
	68, 419, 421, 422, -185, -250, 130, 65, 85, -83,
	-222, -230, -172, -73, -281, -282, -283, -222, 73, 74,
	-268, -269, -270, -271, -284, 202, -292, 194, 196, 197,
	43, -272, 203, 188, 44, -237, -258, 402, -244, 67,
	-244, -244, 376, 368, 371, 369, -244, -244, -244, -244,
	-244, -249, 371, -249, -249, -249, -249, 369, 67, 67,
	-244, -244, -244, -260, 67, -260, 363, -261, 67, -261,
	-261, -261, -261, -293, -293, -83, -225, 66, 23, 190,
	-256, -255, -252, -253, -254, -251, 28, 24, -256, -48,
	237, 208, 175, 67, 175, 240, 241, -324, 68, 28,
	-330, 281, -109, -109, -109, -320, -320, -326, -300, 206,
	201, -109, 68, 68, 73, 71, 71, -126, -276, 11,
	108, -200, -229, -229, -109, -126, -200, -77, 213, 66,
	-354, -352, 71, -124, -41, -123, 69, -110, 86, 73,
	-318, -231, 396, 421, -346, 122, -221, -346, -349, 487,
	191, 69, 68, -343, -346, 302, 284, -346, 11, -291,
	19, -71, -352, -55, -54, 183, 180, 181, 184, 185,
	-296, 399, 179, 234, 233, 219, -96, -351, -352, 68,
	175, 51, -127, -127, -158, -194, 19, 11, 46, 46,
	-72, 56, 82, 83, 84, 175, -351, -137, -124, -124,
	-124, -77, 88, -352, -79, 68, -352, 175, -352, -352,
	-79, -159, 451, -159, -352, -352, -352, -352, -352, -352,
	-352, -352, -79, -79, -352, -159, -159, -159, -159, -352,
	-352, -352, -352, 68, 68, -79, -352, -352, -352, -80,
	-83, -352, -352, -352, 68, 66, 23, 11, 11, -352,
	11, 11, -352, -352, 11, -124, -124, -124, -352, -79,
	-150, -148, 95, -83, -352, -352, -352, -352, -352, -352,
	-122, 29, 46, -351, -3, -351, -183, -187, -146, -218,
	-90, -92, -92, -90, -92, 55, 55, 55, 60, 55,
	60, 55, -105, -231, -352, -352, -142, 236, -351, 33,
	-231, -116, 188, 188, 188, -80, -117, 12, -86, -117,
	-117, 175, -190, -193, 423, 420, 426, 71, 73, 175,
	-173, 68, -283, 98, -271, 67, 71, -277, -220, 44,
	-272, 188, 44, -274, -272, -272, -277, 71, -277, 44,
	82, 89, -247, -248, -262, -265, -245, 23, 548, 28,
	65, 399, 194, 44, 43, 197, 80, -259, 403, 74,
	-249, -249, -244, -244, -244, 376, -244, -249, -250, 29,
	-250, -250, -250, -250, -249, -266, 73, -266, 74, -260,
	74, 69, 65, -221, -168, -109, -253, -252, -254, 371,
	415, 130, 427, -49, 8, 9, 10, -221, -305, -306,
	-307, -221, 108, 242, 243, -221, -333, 314, -328, 282,
	291, 88, 16, 487, 191, 191, -109, -320, -117, 71,
	71, -197, -200, -124, -323, 228, 229, -178, 187, -319,
	191, 175, 175, 191, 305, -322, -221, 11, 11, 302,
	11, -322, 338, -203, 68, -212, -272, -302, -270, -271,
	-301, 195, 202, 203, -212, 202, 199, -272, 203, 194,
	195, -209, -272, 191, 23, -212, -212, -278, 98, -212,
	32, 32, 110, -222, -222, 52, -109, -78, -169, 122,
	-222, -80, -77, 88, -124, -352, -82, -160, -159, 122,
	-230, -160, -160, -352, -221, -164, -351, -159, -160, -160,
	-159, -159, -159, -352, -352, -159, -160, -160, -160, -160,
	-124, -124, -352, -160, -160, -160, -352, -235, 131, 368,
	212, 366, 359, 386, 373, 401, 364, 402, -232, -235,
	-124, -124, -124, -124, -124, 11, 11, 11, 484, -154,
	97, -83, 94, -182, 65, -183, -141, -144, -143, -351,
	-3, -352, -174, 6, 487, -179, -221, -117, 68, 98,
	98, -99, -98, 65, 66, -100, 65, -98, 55, 55,
	-177, 67, 68, -143, -351, -179, -124, -116, -351, -351,
	-351, -352, -154, -83, -117, 420, 424, 425, -282, -283,
	-286, -285, -221, -220, 194, -292, 43, -292, -277, -277,
	-277, 67, 82, -351, 549, -124, 9, 44, 44, 44,
	73, 69, -250, -250, -249, -244, -250, 71, 131, -250,
	69, 68, 69, 68, 69, 68, -120, 503, 89, -109,
	-170, 23, 29, -278, -278, -278, 65, 69, 68, -236,
	-221, -221, -221, -336, 487, 287, -334, -332, 293, 294,
	295, 296, 297, -323, 292, -330, 289, 73, 71, -109,
	-320, -126, -249, -109, -322, 122, 122, -221, -322, 302,
	-348, 487, -322, -322, 11, -322, 73, -72, -54, 67,
	-267, 71, -220, -277, -205, 194, 71, 71, 71, -220,
	71, -220, -221, 44, 44, 71, -109, -221, -267, 71,
	-83, -221, -221, 175, -181, 68, 86, -81, -352, -124,
	-160, 175, -160, -226, 71, -160, -160, 68, 68, -160,
	-352, -244, -244, -244, -261, -244, 352, -244, 352, -352,
	-352, 19, 19, 19, 19, -352, -124, -124, -124, -351,
	-75, 448, -83, 27, -182, 68, -352, -352, 46, -352,
	-352, 68, -154, -187, -83, -83, -83, 67, -83, -176,
	-221, 236, -352, -116, -211, -176, -176, -176, -172, 69,
	68, -244, -244, 44, -274, -176, -124, 23, -130, 449,
	450, -250, -249, 73, -249, 74, 74, 503, 67, -3,
	-168, -278, 71, 131, 71, 131, 73, -109, -308, -309,
	-310, 80, 486, 89, 244, 245, 204, 246, 247, 248,
	-307, -236, -236, -236, -339, -340, -338, 290, 312, 313,
	298, -337, -335, 307, 308, 309, 310, 88, 73, 73,
	73, -331, 281, 88, 290, 16, 23, -200, -311, -198,
	-348, -348, 284, -322, -78, -267, -156, 207, 208, -236,
	-236, -225, -274, 44, 71, -210, 191, 23, 191, -156,
	-267, 29, 180, 86, -222, -88, 11, -169, -180, -221,
	-169, 122, -140, 110, -124, -124, -249, 71, -124, -124,
	-124, -124, -352, -352, -352, -124, -352, 73, 44, -144,
	-141, 46, -3, -351, -221, -172, -176, 69, 68, -143,
	-114, -231, -352, -352, -352, -288, -287, 66, 198, 80,
	-285, -171, -171, -277, 69, -352, -351, -250, -250, 69,
	69, -286, -168, -170, 71, 131, 19, -169, -310, 73,
	248, 244, 248, 248, 248, 248, 249, -327, 80, 288,
	-338, 299, 508, 283, 314, 74, 74, 109, 30, 31,
	-335, 74, 74, 74, 74, -332, 16, 487, -330, 289,
	73, 73, -312, 37, -314, 38, -347, 23, -347, 302,
	11, 69, 71, -237, -237, 67, -277, 67, 71, -221,
	-156, 28, 28, -351, -117, -86, -81, 68, -154, 16,
	-352, -352, -352, -352, -352, -352, -74, 108, 487, 9,
	-141, -3, 69, -221, -116, -287, 71, -278, 73, 205,
	-257, 551, 550, -124, 69, -3, 235, -170, 35, 35,
	240, 241, 73, 73, 28, 300, 174, 28, 74, 174,
	454, 289, 73, 71, 290, -246, 192, -315, 42, -313,
	-264, 41, 16, -320, -86, -286, -225, -286, -124, -294,
	-295, 110, -151, 13, -169, -221, -165, 112, 111, -138,
	-352, 485, 62, 488, -183, -352, 74, -109, -352, -289,
	-288, -168, 236, -20, -3, -9, -10, -11, -12, -14,
	-50, -15, -16, -21, -22, -17, -56, -57, -65, -63,
	-64, -60, -59, -25, -23, -26, -18, -27, -28, -29,
	-33, -34, -24, -35, 92, 193, 270, 339, 74, 28,
	74, 28, 303, 290, 23, -177, 74, -314, 16, -316,
	39, 40, 73, 487, -117, 69, 67, 69, -352, 68,
	-221, -152, 14, 16, -352, -166, 91, -167, 109, 454,
	-128, 74, 174, -166, 52, 486, 489, 67, -257, -157,
	238, 239, -168, -83, -83, 71, -46, -227, 273, 274,
	275, -222, -36, -20, 301, 301, 73, 37, 73, 16,
	16, 282, -151, -289, -286, -289, -295, 46, -162, 452,
	-153, -83, -139, -85, -83, -167, 114, 115, 236, 114,
	115, -123, 52, -176, -168, 71, 71, -37, -38, 93,
	94, 271, 272, 276, -236, 68, 554, 73, 73, 28,
	287, 21, -323, -152, 69, 220, -181, -161, -163, -221,
	68, 88, -221, 487, 69, -170, 97, 95, -38, -83,
	-36, 19, 19, 19, 28, -222, 97, -20, 304, -162,
	-289, 221, 68, 23, -85, -167, 488, -298, -299, 65,
	-13, -19, -12, -9, -10, -11, 339, 92, -36, 94,
	554, -47, 74, -3, -45, -44, 74, -47, 278, 89,
	279, 71, -124, -323, -351, -163, -164, 489, -299, 65,
	-298, 65, 10, 9, -168, -36, 554, -36, 97, 95,
	-39, -40, 96, -20, 68, 277, -124, 218, -297, 206,
	201, 204, 29, -297, 554, 97, 554, 193, -36, 97,
	95, -40, -83, -44, -352, -352, 200, 28, 82, 97,
	92, 554, 193, -36, 94, 97, 554, -36, 193, 97,
	554, 193,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 746, 746, 746, 746,
	746, 746, 844, -2, 607, 0, 0, 0, 0, -2,
	719, 720, 721, 725, 726, 741, 743, 0, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 40,
	0, 0, 61, 62, 1197, 0, 744, 733, 734, 0,
	0, 1740, 2, 1135, 0, 755, 748, 0, 1197, 1197,
	0, 0, 93, 0, 0, 0, 845, 0, 0, 0,
	1195, 1195, 244, 1195, 1195, 0, 1210, 242, 0, 1192,
	1206, 1207, 1208, 0, 0, 0, 1193, 0, 1193, 1193,
	1193, 1193, 1193, 1193, 1193, 0, 666, 864, 1219, 1220,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 0, 0,
	0, 711, 0, 677, 678, 679, 0, 681, 0, 0,
	0, 0, 0, 691, 694, 698, 0, 1135, 1135, 553,
	554, 555, 716, 717, 705, 718, 0, 0, 0, 0,
	0, 825, 319, 321, 0, 341, 0, 344, 347, 1225,
	727, 0, 0, 1250, 1251, 0, 0, 0, 0, 0,
	1590, 187, 258, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 0, 189, 189, 189, 1602, 189, 0, 189,
	189, 189, 189, 189, 257, 247, 248, 249, 0, 0,
	0, 1590, 0, 533, 530, 531, 746, 0, 750, 0,
	1198, 722, 50, 0, 52, 1151, 846, 847, 848, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 0, 1141, 0, 0, 758, 756, 757, 747, 0,
	769, 799, 0, 875, 0, 880, 882, -2, -2, 0,
	923, 924, 925, 926, 927, 928, 0, 0, 0, 0,
	0, 0, 0, 951, 952, 953, 954, 955, 956, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1682, 1683, 1684,
	1685, 1687, 1688, 1689, 1696, 1697, 1700, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1713, 1714, 1719, 1721, 1723, 1726,
	1727, 1728, 1729, 1731, 1732, 1733, 1735, 1736, 1737, 884,
	885, 1105, 1164, 0, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 1025, 1025,
	1025, 1025, 1025, 1025, 1025, 1025, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 74, 864, 78,
	1656, 0, 1169, -2, -2, 1171, 0, 0, 0, -2,
	-2, -2, -2, 1451, -2, 1105, 0, 94, 1127, 746,
	95, 0, 384, 385, 0, 1464, 577, 1217, 1218, 1453,
	1213, 1214, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 0, 0,
	242, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	1195, 244, 0, 0, 647, 0, 648, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 667, 668, 711, 670, 0, 0, 1195, 1195, 0,
	0, 0, 0, 0, 579, 580, 711, 711, 711, 711,
	708, 0, 708, 688, 708, 706, 707, 0, 693, 0,
	0, 0, 701, 702, 728, 0, 0, 735, 737, 738,
	739, 740, 736, 0, 745, 0, 0, 0, 323, 0,
	0, 343, 325, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 0, 346, 0, 1223,
	1226, 732, 1241, 1242, 0, 1252, 1253, 193, 193, 0,
	0, 0, 0, 156, 189, 0, 158, 189, 189, 189,
	0, 189, 189, 165, 166, 189, 168, 169, 170, 171,
	172, 189, 174, 175, 176, 189, 189, 179, 189, 189,
	182, 183, 184, 185, 186, 256, 193, 0, 0, 193,
	0, 0, 515, 0, 0, 0, 0, 520, 521, 522,
	523, 0, 0, 526, 527, 755, 42, 57, 0, 751,
	752, 0, 0, 0, 51, 0, 0, 56, 1741, 37,
	0, 0, 1136, 1139, 1140, 1128, 1129, 1132, 0, 0,
	753, 759, 760, 749, 0, 770, 0, 0, 0, 800,
	0, 802, 803, 804, 805, 0, 878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 903, 904, 905,
	906, 907, 908, 881, 0, 895, 0, 0, 0, 944,
	945, 946, 947, 948, 949, 0, 758, 0, 0, 0,
	758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 758, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 758, 0, 0, 0, 758, 0,
	0, 921, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 1097, 0, 1008, 1017, 0, 1009,
	1018, 1010, 1019, 1011, 0, 1012, 1020, 1013, 1021, 1014,
	1015, 1022, 1016, 0, 917, 0, 0, 76, 0, 863,
	0, 806, 808, 809, 810, -2, 0, 814, 869, 915,
	1219, -2, 0, 0, 0, 68, 69, 0, 0, 0,
	0, 79, 81, 0, 0, 1656, 1172, 1173, 489, 1186,
	1187, 1188, 0, 1184, 0, 1135, 755, 594, 0, 386,
	0, 0, 398, 479, 409, 410, 411, 472, 413, 472,
	472, 0, 472, 472, 472, 472, 472, 486, 486, 486,
	486, 486, 455, 456, 457, 458, 459, 0, 0, 432,
	472, 472, 472, 436, 462, 463, 464, 465, 466, 467,
	468, 469, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 474, 474, 476, 476, 476, 476, 476, 0,
	0, 576, 0, 1211, 0, 0, 244, -2, 0, -2,
	0, 859, 0, 0, 866, 0, 0, 105, 274, 260,
	104, 0, 238, 243, 239, 240, 241, 0, 0, 0,
	0, 251, 662, 1194, 0, 655, 70, 656, 657, 658,
	659, 660, 253, 661, 865, 1221, 1222, 669, 712, 0,
	714, 0, 0, 825, 674, 675, 676, 581, 682, 683,
	684, 690, 711, 0, 0, 0, 825, 711, 692, 909,
	695, 1025, 0, 730, 729, 0, 742, 0, 320, 322,
	324, 342, 0, 0, 345, 348, 0, 0, 0, 0,
	1244, 0, 1246, 1248, 0, 0, 194, 195, 196, 0,
	188, 0, 211, 259, 0, 157, 0, 191, 159, 160,
	161, 189, 163, 164, 167, 173, 177, 178, 180, 181,
	255, 0, 0, 0, 0, 154, 0, 516, 517, 518,
	519, 528, 525, 758, 0, 0, 723, 724, 53, 0,
	0, 1153, 1142, 0, 0, 0, 0, 1131, 1133, 1134,
	0, 0, 1116, 0, 0, 761, 754, 39, 876, 877,
	879, 896, 0, 898, 900, 801, 771, 0, 1106, -2,
	886, 887, 911, 912, 913, 0, 0, 0, 0, 909,
	891, 0, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 943, 1039, 1040, 0, 941, 942,
	950, 0, 0, 919, 765, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 914, 0,
	1163, 0, 0, 0, 990, 0, 0, 926, 1108, 0,
	926, 1108, 0, 0, 0, 0, 0, 0, 0, 1103,
	1100, 0, 0, 1026, 0, 0, 0, 918, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 818, 1576, 820, 0, 869, 0, 0, 0, 917,
	873, 0, 873, 73, 873, 75, 0, 868, 1170, 0,
	0, 0, 84, 85, 80, 1174, 0, 1180, 1181, 1182,
	1106, 0, 1141, 758, 383, 595, 597, 600, 601, 602,
	387, 389, 390, 391, 0, -2, 568, 1586, 1633, -2,
	-2, 560, 1499, -2, -2, 394, 481, 480, 412, 0,
	486, 486, 472, 472, 472, 472, 441, 486, 444, 447,
	448, 489, 0, 489, 489, 489, 489, 486, 0, 0,
	433, 434, 435, 424, 0, 425, 474, 427, 0, 428,
	429, 430, 431, 574, 575, 0, 0, 0, 90, 0,
	99, -2, 496, 497, 498, 0, 493, 1196, 100, 0,
	276, 277, 0, 214, 0, 245, 246, 107, 0, 0,
	261, 0, 382, 0, 649, 0, 651, 250, 653, 663,
	664, 654, 0, 0, 713, 671, 672, 673, 873, 0,
	0, 685, 709, 710, 708, 711, 689, 703, 0, 0,
	696, 0, 731, 826, 326, 327, 349, 76, 0, 1224,
	1243, 0, 1247, 1249, 0, 197, 199, 0, 148, 0,
	0, 190, 0, 162, 0, 0, 0, 0, 0, 524,
	0, 753, 58, 608, 609, -2, 640, 1203, 640, 640,
	626, 543, 640, 0, 0, 0, 54, 0, 1152, 0,
	0, 0, 1137, 1138, 1130, 0, 1189, 1190, 1117, 1118,
	91, 762, 897, 899, 901, 0, 917, 888, 909, 892,
	0, 889, 0, 883, 0, 0, 780, 0, 780, 780,
	0, 976, 0, 977, 1004, 0, 989, 780, 780, 0,
	0, 0, 0, 0, 0, 983, 984, 985, 986, 780,
	780, 780, 780, 0, 0, 0, 780, 780, 780, 0,
	922, -2, 987, 988, 0, 0, 0, 0, 0, 1032,
	0, 0, 1033, 998, 0, 0, 0, 0, 0, 1127,
	0, 1101, 0, 0, 1007, 1027, 1028, 1029, 1030, 1031,
	1157, 0, 0, 0, 1146, 0, 873, 1165, 0, 0,
	807, 840, 842, 0, 837, 850, 851, 853, 0, 855,
	0, 857, 858, 827, 813, 916, 815, 0, 0, 0,
	869, 824, 0, 0, 0, 0, 1127, 0, 873, 66,
	67, 0, 82, 83, 0, 0, 89, 490, 491, 0,
	213, 0, 598, 0, 388, 0, 561, 0, 0, 545,
	560, 556, 557, 560, 559, 560, 551, 561, 552, 0,
	399, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 485, 0, 510, 512, 0, 0, 408, 482, 0,
	489, 489, 486, 439, 440, 472, 445, 489, 449, 0,
	450, 451, 452, 453, 489, 0, 470, 0, 0, 426,
	0, 591, 0, 1212, 92, 0, 499, 500, 501, 0,
	543, 543, 543, 0, 278, 279, 280, 860, 0, 215,
	216, 0, 0, 0, 0, 867, 117, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 71, 254, 680, 582,
	583, 825, 687, 910, 697, 699, 700, 486, 0, 1245,
	0, 0, 0, 0, 0, 209, 192, 0, 0, 0,
	0, 155, 0, 761, 0, 0, 560, 0, 627, 628,
	0, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 1205, 0, 0, 0, 544, 0,
	635, 636, 0, 1155, 1154, 1143, 38, 46, 0, 772,
	1107, 0, 890, 0, 893, 780, 920, 961, 781, 767,
	0, 962, 963, 780, 773, 774, 776, 978, 965, 966,
	979, 980, 981, 780, 780, 982, 970, 969, 968, 971,
	0, 0, 780, 974, 973, 975, 957, 0, 472, 472,
	1086, 472, 476, 1089, 472, 1091, 472, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1098,
	1006, 1104, 0, 59, 0, 1157, 1144, 1159, 1161, 0,
	0, 0, 0, -2, 1429, 0, 831, 1127, 0, 0,
	0, 834, 841, 0, 0, 835, 0, 836, 854, 856,
	811, 0, 0, 816, 0, 0, -2, 823, 0, 0,
	0, 833, 1135, 874, 65, 86, 87, 88, 596, 599,
	0, 562, 472, 472, 0, 566, 558, 567, 547, 548,
	550, 0, 400, 0, 0, 483, 0, 509, 511, 513,
	514, 473, 437, 438, 489, 446, 442, 487, 488, 454,
	486, 0, 486, 0, 477, 0, 578, 592, 0, 0,
	0, 90, 543, 0, 0, 0, 0, 222, 0, 218,
	0, 0, 0, 125, 0, 108, 109, 110, 112, 113,
	0, 0, 0, 106, 0, 263, 0, 266, 267, 650,
	652, 711, 1235, 861, 209, 198, 200, 201, 209, 212,
	149, 0, 150, 152, 0, 151, 529, 91, 610, 0,
	637, 0, 0, 1211, 558, 0, -2, 613, 618, 619,
	620, 621, 622, 0, 633, 0, 615, 0, 637, 0,
	630, 0, 0, 0, 44, 91, 0, 91, 958, 894,
	960, 0, 964, 778, 777, 959, 967, 0, 0, 972,
	991, 1083, 486, 1087, 1088, 1090, 1092, 1093, 1095, 993,
	992, 0, 0, 0, 0, 999, 0, 0, 0, 0,
	0, 0, 1102, 0, 60, 0, 1162, -2, 0, 0,
	77, 0, 1135, 1166, 1167, 1168, 838, 0, 843, 0,
	829, 0, 869, 821, 0, 0, 0, 0, 64, 535,
	0, 1132, 1132, 546, 560, 0, 0, 0, 484, 0,
	0, 443, 489, 471, 489, 0, 0, 593, 0, 90,
	92, 0, 504, 505, 506, 507, 508, 0, 91, 223,
	224, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	217, 219, 220, 221, 143, 126, 127, 0, 0, 0,
	0, 118, 119, 0, 0, 0, 0, 0, 114, 115,
	116, 262, 0, 0, 265, 0, 0, 686, 1237, 1231,
	202, 202, 0, 153, 0, 0, 612, 638, 0, 398,
	398, 0, 560, 0, 629, 0, 1201, 1202, 0, 624,
	637, 0, 0, 0, 1156, 873, 0, 0, 47, 48,
	763, 768, 1127, 0, 0, 0, 1084, 1085, 0, 0,
	0, 0, 1000, 1001, 1002, 1034, 1005, 1099, 0, 1160,
	1145, 0, 1149, 0, 832, 63, 0, 828, 0, 817,
	819, 869, 870, 871, 872, 534, 538, 0, 543, 0,
	563, 564, 565, 549, 0, 395, 0, 460, 461, 475,
	478, 0, 97, 0, 502, 503, 0, 92, 225, 226,
	227, 228, 230, 231, 0, 0, 0, 103, 0, 0,
	128, 0, 0, 0, 0, 138, 139, 140, 141, 142,
	120, 121, 122, 123, 124, 111, 0, 0, 264, 0,
	269, 270, 1199, 1239, -2, 0, 146, 0, 147, 210,
	0, 611, 639, 392, 393, 0, 1211, 0, 614, 623,
	625, 0, 632, 0, 1119, 45, 91, 0, 782, 0,
	1023, 1024, 994, 996, 995, 997, 0, 0, 0, 0,
	1148, 0, 839, 830, 822, 539, 540, 0, 542, 0,
	406, 396, 397, 0, 536, 90, 0, 0, 232, 233,
	234, 235, 144, 145, 129, 130, 0, 132, 133, 0,
	0, 0, 272, 0, 268, 827, 0, 1231, 0, 1233,
	0, 1230, 0, 203, 873, 0, 0, 0, 631, 0,
	643, 0, 1124, 0, 764, 49, 0, 0, 0, 779,
	1003, 0, 0, 0, 1158, -2, 541, 0, 395, 96,
	537, 98, 281, 90, 352, 353, 354, 355, 356, 357,
	358, 359, 360, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 0, 0, 134,
	0, 136, 137, 271, 0, 36, 0, 1238, 0, 1236,
	0, 0, 1232, 0, 1119, 536, 0, 536, 642, 0,
	0, 792, 0, 0, 775, 783, 0, 786, 0, 0,
	0, 797, 0, 784, 1035, 0, 1038, 0, 407, 90,
	0, 0, 102, 0, 0, 1213, 0, 0, 308, 309,
	310, 1215, 0, 350, 131, 135, 273, 1200, 1240, 0,
	0, 0, 1124, 616, 0, 634, 644, 0, 46, 0,
	1125, 1126, 1120, 1121, 1123, 0, 787, 788, 789, 790,
	791, 0, 1036, 0, 92, 282, 283, 0, 292, 0,
	0, 0, 0, 0, 306, 0, 0, 1234, 1228, 204,
	205, 206, 208, 792, 536, 0, 43, 793, 794, 0,
	0, 0, 798, 0, 569, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 0, 1216, 236, 351, 0, 41,
	617, 0, 0, 0, 1122, 785, 0, 570, 571, 0,
	90, 284, 285, 286, 287, 288, 0, 290, 0, 0,
	0, 302, 303, 304, 0, 311, 313, 314, 315, 0,
	317, 318, 307, 207, 0, 795, 796, 1037, 572, 0,
	573, 0, 0, 0, 101, 0, 0, 0, 0, 0,
	0, 299, 0, 305, 0, 316, 0, 0, 584, 586,
	587, 0, 0, 585, 0, 0, 294, 295, 0, 0,
	0, 300, 0, 312, 645, 646, 588, 589, 590, 289,
	291, 0, 297, 0, 0, 0, 0, 0, 296, 0,
	301, 298,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	67, 69, 122, 120, 68, 121, 175, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 554,
	99, 98, 100, 3, 70, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:518
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:566
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:572
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:579
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:585
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:596
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:603
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:609
		{
			if yyDollar[8].variables == nil {
				yyDollar[8].variables = yyDollar[14].variables
			} else if yyDollar[14].variables != nil {
				yylex.Error(fmt.Errorf("Multiple INTO clauses in one query block.").Error())
				return 1
			}

			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].variables}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
			yyVAL.variables = nil
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.variables = yyDollar[2].variables
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:668
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:674
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:700
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:712
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			yyVAL.str = InsertStr
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:728
		{
			yyVAL.str = ReplaceStr
		}
	case 63:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:734
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:740
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:748
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:752
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:758
		{
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:766
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:772
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:786
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:791
		{
			yyVAL.partitions = nil
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:795
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:805
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:812
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:839
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:849
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:862
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:867
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:872
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:878
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:897
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:901
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:907
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:913
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:921
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 101:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:929
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 102:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:933
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:937
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:956
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.accountNames = nil
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:974
		{
			yyVAL.tlsOptionItems = nil
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:978
		{
			yyVAL.tlsOptionItems = nil
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1002
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1006
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1014
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1019
		{
			yyVAL.accountLimitItems = nil
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItems = nil
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1084
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1100
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1104
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1133
		{
			yyVAL.str = ""
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 146:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1148
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 147:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1153
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1157
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1161
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1167
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1172
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1176
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1180
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1184
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1188
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.strs = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1378
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantAssumption = nil
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1395
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1403
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1407
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1411
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1416
		{
			yyVAL.boolean = false
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.boolean = true
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1425
		{
			yyVAL.boolean = false
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.boolean = true
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1436
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1444
		{
			yyVAL.procedureParams = nil
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.characteristics = nil
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1495
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1501
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1505
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1537
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1677
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1681
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1689
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1695
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1707
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1721
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1729
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = BeforeStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = AfterStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = InsertStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = UpdateStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = DeleteStr
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1768
		{
			yyVAL.triggerOrder = nil
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1792
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 291:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1802
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 295:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1824
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 296:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1829
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1834
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 298:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1840
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1858
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1876
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1884
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &Resignal{}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2043
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.exprs = nil
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.exprs = nil
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2125
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2141
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2168
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2214
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = ColumnType{}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2303
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.sqlVal = nil
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2610
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2618
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2622
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2628
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.boolean = false
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.boolean = true
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2707
		{
			yyVAL.charsetCollates = nil
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2743
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2747
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2751
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2755
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2761
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2765
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2771
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2777
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.colKeyOpt = colKey
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2793
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2819
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2843
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2847
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].str
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2877
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2881
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.indexOptions = nil
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2906
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2935
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2939
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 569:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3046
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3050
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 571:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3054
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 572:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3058
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 573:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3062
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3086
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3101
		{
			yyVAL.str = ""
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3148
		{
			yyVAL.boolean = true
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.boolean = true
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.boolean = false
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = ""
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3204
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string("")
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3217
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3226
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3256
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3267
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3276
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 617:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3280
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3308
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3312
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3319
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 631:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3350
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3354
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 634:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3362
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3377
		{
			yyVAL.columnOrder = nil
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3390
		{
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
		}
	case 642:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3396
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 645:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3412
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 646:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3416
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3448
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3454
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3462
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3466
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3474
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3482
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3490
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3498
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3506
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3514
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3523
		{

		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3557
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3565
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3569
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3573
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3578
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3610
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3614
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3618
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3622
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 686:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3626
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3631
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3640
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3644
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3652
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3670
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3675
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3679
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3688
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3692
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3706
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3712
		{
			yyVAL.boolean = false
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.boolean = true
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.showFilter = nil
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = SessionStr
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = GlobalStr
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.statement = &Begin{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = &Begin{}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3802
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3806
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.statement = &Commit{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.statement = &Rollback{}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3858
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3862
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			setAllowComments(yylex, true)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3907
		{
			yyVAL.bytes2 = nil
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = UnionStr
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = UnionAllStr
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3925
		{
			yyVAL.str = UnionDistinctStr
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3930
		{
			yyVAL.byt = 0
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.byt = 1
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = ""
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = SQLCacheStr
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = DistinctStr
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = StraightJoinHint
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3983
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4006
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4024
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4040
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4045
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.exprs = nil
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.over = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.over = yyDollar[1].over
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.frame = nil
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4079
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4086
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4124
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4151
		{
			yyVAL.window = nil
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.window = yyDollar[2].window
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4237
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 819:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4281
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4300
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.expr = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4328
		{
			yyVAL.columns = nil
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4358
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4371
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4375
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4379
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4391
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4406
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = JoinStr
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4427
		{
			yyVAL.str = JoinStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.str = JoinStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = StraightJoinStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = LeftJoinStr
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = LeftJoinStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = RightJoinStr
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = RightJoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = NaturalJoinStr
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4491
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4526
		{
			yyVAL.indexHints = nil
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4530
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4534
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4538
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4543
		{
			yyVAL.expr = nil
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4547
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4607
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4611
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4615
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4619
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4635
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = IsNullStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = IsNotNullStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = IsTrueStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = IsNotTrueStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = IsFalseStr
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = IsNotFalseStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = EqualStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = LessThanStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = GreaterThanStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = LessEqualStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = GreaterEqualStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = NotEqualStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = nil
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4740
		{
			yyVAL.selectExprs = nil
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4747
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4757
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4795
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4803
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4851
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4855
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4881
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4996
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5000
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5008
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5047
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 994:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1000:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1001:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1002:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1003:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5188
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5222
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5232
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5236
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5244
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5248
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = ""
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = BooleanModeStr
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5266
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1037:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5270
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = Armscii8Str
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = AsciiStr
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = Big5Str
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.str = UBinaryStr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = Cp1250Str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = Cp1251Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = Cp1256Str
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = Cp1257Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.str = Cp850Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.str = Cp852Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.str = Cp866Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.str = Cp932Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = Dec8Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = EucjpmsStr
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = EuckrStr
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.str = Gb18030Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.str = Gb2312Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = GbkStr
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = Geostd8Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
			yyVAL.str = GreekStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			yyVAL.str = HebrewStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = Hp8Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = Keybcs2Str
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = Koi8rStr
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = Koi8uStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = Latin1Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = Latin2Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = Latin5Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = Latin7Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = MacceStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = MacromanStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = SjisStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = Swe7Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = Tis620Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = Ucs2Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = UjisStr
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = Utf16Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = Utf16leStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = Utf32Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5460
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5464
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5472
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5476
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5480
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5490
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5502
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5510
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5515
		{
			yyVAL.expr = nil
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5524
		{
			yyVAL.str = string("")
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5528
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5534
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5538
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5544
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5549
		{
			yyVAL.expr = nil
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5553
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5559
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5567
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5581
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.expr = &NullVal{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5611
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5615
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
			yyVAL.exprs = nil
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5624
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5634
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5640
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5645
		{
			yyVAL.expr = nil
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5649
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5660
		{
			yyVAL.orderBy = nil
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5664
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5674
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = AscScr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = AscScr
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = DescScr
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5698
		{
			yyVAL.limit = nil
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5702
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5706
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5710
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5716
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = ""
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = ForUpdateStr
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = ShareModeStr
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5746
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5750
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5758
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5763
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5767
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5771
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.columns = nil
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5781
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5787
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5795
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5799
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5804
		{
			yyVAL.assignExprs = nil
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5808
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5824
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5828
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5834
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5840
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5850
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5854
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5860
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5869
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5873
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5879
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5903
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5916
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5922
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5926
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5932
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5936
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5940
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5950
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5961
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5972
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			yyVAL.expr = &Default{}
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5985
		{
			yyVAL.byt = 0
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.byt = 1
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5990
		{
			yyVAL.byt = 0
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5992
		{
			yyVAL.byt = 1
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5995
		{
			yyVAL.byt = 0
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5997
		{
			yyVAL.byt = 1
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6000
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = IgnoreStr
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6005
		{
			yyVAL.sqlVal = nil
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.empty = struct{}{}
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.empty = struct{}{}
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6016
		{
			yyVAL.empty = struct{}{}
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6018
		{
			yyVAL.empty = struct{}{}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6020
		{
			yyVAL.empty = struct{}{}
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = UniqueStr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.str = FulltextStr
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = SpatialStr
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6036
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6038
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6056
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6063
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6073
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6080
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6085
		{
			yyVAL.str = string("")
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6090
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6092
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6095
		{
			yyVAL.EnclosedBy = nil
		}
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6099
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6104
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6108
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.sqlVal = nil
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.sqlVal = nil
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6131
		{
			yyVAL.Fields = nil
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6135
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6140
		{
			yyVAL.Lines = nil
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6144
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6149
		{
			yyVAL.sqlVal = nil
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6153
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6175
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6179
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6185
		{
			yyVAL.lockType = LockRead
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6189
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.lockType = LockWrite
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6197
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6203
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6209
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6213
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6740
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6749
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
