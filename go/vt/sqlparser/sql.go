// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 858,
	-2, 106,
	-1, 44,
	181, 459,
	182, 459,
	-2, 447,
	-1, 51,
	1, 1261,
	424, 1261,
	-2, 479,
	-1, 388,
	126, 866,
	-2, 862,
	-1, 389,
	126, 867,
	-2, 863,
	-1, 490,
	96, 1181,
	126, 1181,
	-2, 71,
	-1, 491,
	96, 1083,
	126, 1083,
	-2, 72,
	-1, 496,
	96, 1039,
	126, 1039,
	-2, 825,
	-1, 498,
	96, 1121,
	126, 1121,
	-2, 827,
	-1, 701,
	5, 35,
	-2, 473,
	-1, 705,
	5, 35,
	-2, 472,
	-1, 927,
	1, 531,
	5, 531,
	12, 531,
	13, 531,
	14, 531,
	15, 531,
	17, 531,
	19, 531,
	30, 531,
	31, 531,
	55, 531,
	56, 531,
	57, 531,
	58, 531,
	59, 531,
	61, 531,
	62, 531,
	65, 531,
	66, 531,
	68, 531,
	69, 531,
	424, 531,
	-2, 558,
	-1, 930,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1122,
	126, 869,
	-2, 865,
	-1, 1281,
	67, 317,
	-2, 1006,
	-1, 1284,
	67, 313,
	70, 313,
	-2, 941,
	-1, 1285,
	67, 314,
	70, 314,
	-2, 951,
	-1, 1363,
	67, 386,
	70, 386,
	-2, 350,
	-1, 1412,
	5, 36,
	-2, 624,
	-1, 1472,
	5, 35,
	-2, 802,
	-1, 1567,
	5, 35,
	-2, 73,
	-1, 1712,
	1, 579,
	5, 579,
	12, 579,
	13, 579,
	14, 579,
	15, 579,
	17, 579,
	19, 579,
	30, 579,
	31, 579,
	55, 579,
	56, 579,
	57, 579,
	58, 579,
	59, 579,
	61, 579,
	62, 579,
	65, 579,
	66, 579,
	68, 579,
	69, 579,
	424, 579,
	-2, 558,
	-1, 1831,
	5, 36,
	-2, 803,
	-1, 1861,
	5, 35,
	-2, 73,
	-1, 1920,
	5, 35,
	-2, 805,
	-1, 1960,
	41, 876,
	-2, 874,
	-1, 2005,
	5, 35,
	-2, 159,
	-1, 2065,
	5, 36,
	-2, 806,
}

const yyPrivate = 57344

const yyLast = 22526

var yyAct = [...]int{

	422, 60, 2181, 1326, 2160, 2150, 2069, 2076, 2102, 2075,
	2151, 2008, 7, 2047, 2007, 6, 2006, 5, 2009, 8,
	1788, 1725, 1844, 1244, 2056, 1934, 1960, 71, 393, 1269,
	486, 1623, 1324, 1898, 351, 1620, 667, 1237, 1882, 1286,
	1692, 421, 1865, 1097, 2070, 1726, 1239, 1522, 852, 1235,
	367, 1693, 686, 1575, 406, 1770, 1278, 1689, 1231, 1318,
	1498, 60, 92, 1268, 1233, 1699, 1703, 1640, 1352, 1559,
	1674, 1147, 955, 1183, 372, 1598, 1597, 1053, 1160, 1215,
	923, 1282, 1046, 1314, 1263, 1222, 1275, 352, 353, 943,
	1124, 356, 724, 391, 1175, 1032, 730, 1064, 501, 386,
	489, 484, 774, 942, 376, 643, 1302, 932, 765, 868,
	492, 481, 2203, 2199, 2189, 2172, 2170, 869, 2155, 504,
	2146, 502, 2105, 70, 1082, 1866, 2163, 2095, 2149, 2062,
	2134, 1289, 75, 1868, 1789, 2094, 1657, 924, 1441, 1374,
	1816, 642, 1178, 1720, 2005, 3, 1257, 102, 98, 99,
	698, 100, 1507, 1373, 355, 1506, 380, 354, 1508, 1721,
	1722, 1258, 1259, 77, 78, 79, 80, 81, 1985, 817,
	816, 826, 827, 819, 820, 821, 822, 823, 824, 825,
	818, 688, 715, 828, 104, 103, 1542, 665, 29, 2061,
	61, 32, 33, 1288, 1378, 645, 944, 648, 945, 689,
	690, 1625, 1871, 1372, 1303, 361, 61, 32, 33, 1308,
	1905, 1303, 435, 395, 441, 443, 442, 439, 440, 438,
	437, 436, 1290, 363, 1290, 365, 1807, 1805, 34, 444,
	445, 366, 1294, 1296, 94, 1295, 1315, 358, 1957, 1956,
	1869, 1870, 1872, 1873, 1874, 1955, 1954, 697, 1534, 68,
	1953, 1951, 1952, 1333, 1370, 1364, 1365, 2071, 1363, 1641,
	1366, 1367, 2003, 1539, 1538, 2032, 2033, 2099, 2100, 683,
	684, 696, 682, 681, 1627, 87, 1085, 1088, 670, 2148,
	1332, 691, 2133, 1087, 1535, 692, 689, 690, 647, 646,
	1626, 2048, 1622, 1216, 1729, 1376, 1379, 1576, 1540, 348,
	1532, 1643, 1883, 1884, 2001, 2195, 1533, 1602, 2204, 101,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1089, 1086, 666, 2201, 666, 666, 89, 91,
	72, 1935, 86, 1577, 666, 349, 1240, 1242, 96, 95,
	666, 2190, 2173, 2035, 1937, 644, 669, 673, 60, 60,
	675, 653, 1013, 365, 1893, 1580, 1022, 1497, 1496, 702,
	364, 1495, 704, 640, 703, 1537, 1371, 1645, 1595, 1892,
	718, 320, 1649, 60, 1644, 97, 1642, 1993, 94, 1834,
	93, 1647, 1303, 671, 674, 1511, 672, 1503, 837, 707,
	708, 839, 1369, 732, 1646, 1401, 2185, 1095, 761, 1867,
	1520, 951, 1549, 1317, 1293, 1264, 778, 1648, 1650, 1422,
	1386, 938, 2142, 1385, 808, 1936, 1986, 1241, 661, 1578,
	1579, 850, 828, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 1375, 867, 870, 870, 870, 876,
	870, 870, 876, 870, 876, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 2060,
	928, 1377, 96, 95, 1520, 1253, 1821, 1536, 1617, 1891,
	88, 62, 701, 705, 1054, 1519, 842, 843, 844, 845,
	846, 847, 848, 849, 716, 1520, 763, 62, 668, 1523,
	1520, 1745, 723, 676, 677, 1520, 492, 762, 940, 2183,
	1419, 685, 2184, 1092, 2182, 840, 841, 699, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	840, 841, 828, 1342, 922, 679, 871, 873, 875, 877,
	879, 881, 882, 884, 872, 874, 818, 878, 880, 828,
	883, 1048, 342, 1746, 1417, 693, 1416, 851, 1060, 1673,
	773, 29, 30, 61, 32, 33, 720, 771, 721, 1519,
	1621, 722, 1974, 772, 771, 58, 1353, 652, 1357, 1055,
	936, 67, 931, 84, 773, 34, 54, 55, 946, 339,
	1519, 773, 59, 1131, 838, 1519, 1606, 1602, 1616, 706,
	1519, 1603, 1613, 649, 1610, 1612, 1606, 1602, 1129, 1130,
	1128, 1603, 1659, 382, 1604, 1605, 1176, 1176, 45, 1430,
	83, 1607, 68, 2176, 2161, 2175, 840, 841, 1343, 1015,
	680, 1607, 819, 820, 821, 822, 823, 824, 825, 818,
	2188, 321, 828, 1047, 2143, 1733, 27, 695, 324, 1398,
	1399, 1400, 772, 771, 666, 666, 2196, 768, 333, 340,
	341, 666, 666, 666, 821, 822, 823, 824, 825, 818,
	773, 2079, 828, 2067, 666, 666, 1859, 1858, 655, 656,
	657, 658, 659, 927, 36, 63, 41, 40, 43, 68,
	56, 772, 771, 1564, 330, 772, 771, 331, 2192, 1127,
	2131, 2103, 338, 2103, 1148, 2123, 1149, 2122, 2197, 773,
	666, 1562, 1543, 773, 2130, 2108, 44, 66, 65, 2085,
	371, 52, 53, 42, 903, 904, 905, 906, 907, 891,
	892, 893, 908, 909, 894, 895, 896, 902, 910, 897,
	898, 899, 900, 901, 913, 912, 911, 914, 915, 917,
	916, 918, 1080, 362, 1023, 1049, 1056, 1114, 1116, 1117,
	1509, 322, 1510, 1115, 1037, 1038, 1100, 57, 711, 46,
	64, 1034, 48, 49, 717, 826, 827, 819, 820, 821,
	822, 823, 824, 825, 818, 1058, 1094, 828, 2000, 778,
	710, 1098, 1099, 335, 325, 326, 1950, 336, 337, 345,
	1912, 1105, 1101, 327, 329, 1856, 323, 344, 343, 1738,
	1418, 1560, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 1106, 1361, 828, 1107, 1354, 1344,
	60, 1078, 478, 479, 1769, 1121, 1093, 1771, 717, 772,
	771, 1035, 1036, 1125, 1232, 854, 2145, 2121, 1039, 1040,
	1041, 772, 771, 772, 771, 2120, 1998, 773, 1103, 772,
	771, 1050, 1051, 1968, 62, 1523, 2104, 1964, 1118, 773,
	1771, 773, 772, 771, 772, 771, 1889, 773, 1791, 1165,
	1168, 1661, 1929, 2135, 1240, 1242, 1177, 1850, 2132, 1962,
	773, 1944, 773, 1785, 1120, 1102, 1781, 1084, 1929, 2129,
	1123, 2089, 717, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1122, 1234,
	1850, 2086, 1943, 928, 1151, 1152, 1778, 928, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	1776, 1775, 828, 411, 410, 413, 414, 415, 416, 1154,
	1929, 2051, 412, 417, 1850, 2002, 1929, 1994, 492, 1763,
	1179, 1762, 1189, 1173, 1191, 1241, 1224, 1227, 1228, 1229,
	1225, 1761, 1226, 1230, 851, 1587, 1704, 1705, 1265, 1586,
	1270, 502, 727, 731, 1155, 1157, 1516, 1248, 1340, 1158,
	1162, 1250, 1929, 1940, 1929, 717, 1850, 1849, 1758, 809,
	1246, 1198, 1199, 1836, 717, 666, 1203, 666, 1339, 1206,
	1833, 717, 1753, 1752, 1211, 1126, 1749, 1750, 1749, 1748,
	1413, 717, 1219, 717, 1187, 1188, 1156, 1358, 1739, 1251,
	1254, 1194, 1195, 1196, 1197, 1255, 853, 1266, 1156, 717,
	29, 1150, 1062, 1273, 1031, 1030, 1029, 866, 1034, 1028,
	1020, 1018, 1017, 1016, 1014, 954, 953, 1320, 1321, 1322,
	1323, 1122, 934, 851, 1470, 663, 934, 359, 1304, 1305,
	1306, 1307, 29, 72, 1690, 1499, 1218, 939, 1631, 1316,
	939, 1471, 1499, 2092, 1291, 1292, 72, 1297, 1298, 1299,
	1300, 1301, 1247, 1829, 933, 1973, 1219, 1759, 1751, 1512,
	1256, 68, 2167, 1413, 1435, 1311, 1312, 1313, 1434, 1356,
	732, 1338, 1402, 1919, 1219, 29, 933, 935, 1096, 937,
	1021, 935, 1121, 933, 373, 1624, 1156, 68, 2097, 1351,
	1325, 1219, 927, 68, 1901, 1413, 927, 2165, 939, 1413,
	927, 2087, 2078, 1966, 812, 1900, 815, 1860, 1290, 1839,
	1319, 1732, 1315, 829, 830, 831, 832, 833, 834, 835,
	1125, 813, 814, 811, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 68, 1515, 828, 1704,
	1705, 1266, 1334, 1390, 1391, 68, 1310, 1309, 713, 2152,
	1757, 1407, 1328, 1707, 1330, 1224, 1227, 1228, 1229, 1225,
	1690, 1226, 1230, 1565, 1061, 1122, 1473, 1474, 1025, 1403,
	928, 928, 928, 928, 928, 1109, 1710, 1485, 1410, 1404,
	1405, 1406, 1486, 1483, 1709, 1234, 1482, 1491, 1484, 1487,
	1481, 1228, 1229, 377, 378, 2117, 2093, 492, 928, 1475,
	1628, 1387, 766, 767, 2114, 1396, 1395, 1917, 1440, 1442,
	1525, 1780, 1737, 1736, 1517, 1448, 1449, 1450, 1451, 1429,
	2037, 2040, 1961, 2084, 2083, 2107, 1813, 1494, 1489, 1959,
	764, 2031, 2030, 360, 1590, 1493, 1553, 725, 952, 709,
	664, 1827, 1896, 1409, 1098, 1099, 1329, 1360, 1513, 726,
	1476, 1412, 1414, 1479, 1415, 1270, 1024, 1568, 1348, 1501,
	1421, 1502, 1500, 1424, 1425, 1426, 1488, 1057, 766, 767,
	1432, 1232, 1433, 1012, 1947, 1436, 1437, 60, 1438, 1439,
	1524, 1394, 1443, 1444, 1445, 1446, 1447, 853, 666, 1393,
	666, 666, 1126, 1454, 1455, 1456, 1504, 1458, 1459, 368,
	1461, 1462, 1463, 1464, 2110, 1466, 1467, 1468, 1477, 1478,
	1472, 1480, 1518, 1521, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 1490, 2109, 828, 1158,
	1561, 374, 375, 2081, 2041, 1979, 1916, 1552, 369, 1554,
	1555, 1556, 1557, 72, 1978, 1111, 1112, 1596, 1544, 1545,
	1903, 1563, 1585, 1499, 1423, 1551, 389, 1570, 1571, 1572,
	2169, 2168, 76, 1420, 1052, 1558, 769, 2168, 2169, 1990,
	1735, 1091, 74, 50, 1588, 1546, 1547, 1548, 1550, 69,
	1589, 2019, 47, 927, 927, 927, 927, 927, 1633, 1594,
	1609, 1608, 1665, 1618, 1619, 1599, 1611, 1615, 927, 109,
	1601, 1593, 109, 1591, 1592, 1658, 2021, 19, 109, 2020,
	18, 927, 2022, 20, 2023, 21, 2018, 15, 2017, 14,
	1, 1567, 1695, 1635, 60, 2082, 1634, 2036, 853, 2011,
	10, 2038, 1163, 1164, 2024, 24, 1652, 109, 1958, 1651,
	109, 506, 1639, 109, 1879, 1184, 1714, 1715, 1716, 492,
	1864, 1691, 2025, 25, 109, 1863, 506, 1574, 1637, 2016,
	13, 1573, 109, 1694, 1666, 1667, 1668, 1669, 1670, 1653,
	1654, 712, 1655, 1656, 1081, 1581, 1717, 1583, 1584, 2013,
	12, 1713, 2012, 11, 1662, 1663, 1701, 1600, 1819, 2010,
	9, 1790, 1897, 1368, 1724, 2046, 1708, 1276, 1633, 1270,
	1267, 1270, 500, 1638, 82, 1341, 678, 1711, 1887, 328,
	1274, 1719, 1530, 2039, 714, 1529, 1730, 1526, 1541, 1731,
	1262, 1755, 1756, 1728, 1287, 1528, 1723, 817, 816, 826,
	827, 819, 820, 821, 822, 823, 824, 825, 818, 1527,
	2034, 828, 1712, 1531, 959, 1671, 1672, 957, 958, 956,
	1677, 961, 960, 1680, 332, 487, 947, 770, 1685, 90,
	51, 1890, 1614, 1362, 85, 1059, 687, 334, 1696, 836,
	1392, 1505, 493, 2077, 1697, 2098, 729, 2052, 1977, 1740,
	1741, 1902, 928, 1772, 1734, 1428, 1744, 865, 1174, 394,
	2055, 1113, 409, 1747, 1777, 408, 407, 1773, 404, 1760,
	405, 1347, 1104, 1742, 1469, 810, 392, 384, 1814, 926,
	919, 1359, 1223, 1774, 1221, 1220, 1026, 482, 1706, 1702,
	925, 1765, 1345, 1630, 1784, 694, 347, 1815, 1984, 1108,
	31, 1743, 73, 379, 26, 17, 700, 22, 16, 650,
	1766, 1795, 35, 1820, 39, 38, 1796, 37, 1569, 1331,
	357, 1767, 1065, 1063, 2159, 1803, 816, 826, 827, 819,
	820, 821, 822, 823, 824, 825, 818, 1388, 1389, 828,
	731, 2101, 2026, 2015, 2014, 2137, 23, 109, 2136, 1837,
	506, 4, 506, 506, 370, 28, 1798, 2, 1846, 1847,
	506, 0, 0, 0, 0, 0, 506, 0, 0, 1828,
	1842, 0, 0, 1513, 0, 1852, 0, 60, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	109, 1843, 0, 1800, 1801, 0, 1802, 1797, 0, 1804,
	1411, 1806, 0, 1799, 0, 0, 0, 0, 0, 777,
	1853, 0, 0, 0, 1808, 1809, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 1886, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 1894, 0, 1881, 1899, 1854, 0, 0,
	1695, 0, 1728, 1921, 1876, 1877, 1878, 0, 1830, 1831,
	1832, 1895, 1835, 0, 1885, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1855, 1888, 1857, 0, 1851,
	0, 0, 1926, 0, 0, 1946, 0, 1948, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1918, 1945, 0, 0, 109, 109, 109, 1925, 0,
	1928, 1927, 0, 0, 1933, 1939, 1938, 1972, 0, 0,
	506, 1861, 0, 0, 0, 0, 0, 1949, 1904, 0,
	1906, 1907, 1908, 1909, 1910, 0, 0, 1963, 1913, 1914,
	1695, 0, 60, 1975, 0, 1965, 0, 0, 0, 1970,
	0, 0, 0, 0, 1971, 1967, 0, 0, 0, 0,
	1941, 0, 1942, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 2004, 0, 1911, 1997,
	1991, 1694, 0, 1915, 0, 1989, 1995, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 1920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 2043, 1931,
	1932, 0, 0, 0, 0, 0, 0, 2042, 0, 0,
	2044, 0, 2054, 2058, 2050, 0, 2045, 2049, 2072, 0,
	1899, 1270, 0, 0, 0, 0, 0, 2063, 0, 492,
	0, 2064, 0, 0, 0, 1675, 1676, 0, 1678, 1679,
	60, 1681, 1682, 1683, 1684, 0, 1686, 1687, 1688, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 1980,
	1981, 1982, 1983, 0, 1660, 109, 1987, 1988, 0, 109,
	0, 0, 109, 2080, 0, 0, 1992, 0, 109, 0,
	506, 506, 0, 0, 0, 0, 0, 506, 506, 506,
	109, 109, 109, 2091, 0, 109, 0, 0, 0, 0,
	506, 506, 0, 2111, 0, 0, 1997, 0, 0, 0,
	0, 2106, 2119, 2113, 0, 60, 60, 0, 0, 2112,
	2124, 0, 2115, 2128, 2126, 0, 2058, 2116, 0, 0,
	2118, 0, 0, 1718, 60, 109, 506, 2059, 0, 0,
	109, 2141, 0, 2144, 2140, 2065, 2139, 0, 2138, 2147,
	2153, 1812, 0, 60, 0, 0, 60, 60, 0, 2162,
	0, 0, 2154, 0, 2128, 2156, 60, 2166, 0, 60,
	0, 2164, 0, 2128, 2177, 0, 0, 0, 2174, 0,
	0, 60, 2186, 60, 1818, 0, 109, 60, 2128, 0,
	2128, 0, 777, 0, 0, 0, 2191, 0, 0, 2088,
	60, 420, 0, 60, 0, 0, 0, 2128, 0, 0,
	60, 0, 2200, 0, 60, 0, 2096, 2128, 1811, 0,
	0, 2128, 0, 817, 816, 826, 827, 819, 820, 821,
	822, 823, 824, 825, 818, 0, 0, 828, 0, 817,
	816, 826, 827, 819, 820, 821, 822, 823, 824, 825,
	818, 1822, 1823, 828, 1786, 0, 0, 1824, 0, 0,
	1825, 0, 0, 0, 0, 1826, 506, 0, 0, 0,
	0, 0, 2179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 654, 506, 506, 0, 0, 817, 816, 826, 827,
	819, 820, 821, 822, 823, 824, 825, 818, 0, 0,
	828, 0, 0, 0, 0, 0, 0, 0, 0, 853,
	0, 0, 2193, 2194, 0, 0, 0, 109, 1838, 0,
	0, 1840, 0, 0, 0, 109, 109, 0, 0, 109,
	109, 0, 0, 109, 109, 109, 0, 1810, 0, 0,
	0, 1159, 1161, 0, 0, 0, 1167, 1170, 1171, 1172,
	506, 506, 0, 0, 29, 0, 61, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 0, 1182, 67, 1185, 1186, 0, 34, 0,
	1190, 0, 1192, 1193, 0, 0, 0, 0, 0, 0,
	1200, 1201, 1202, 0, 1204, 1205, 0, 1207, 1208, 1209,
	1210, 0, 1212, 1213, 1214, 0, 0, 0, 0, 0,
	109, 506, 0, 506, 0, 68, 0, 0, 109, 109,
	0, 0, 109, 0, 0, 817, 816, 826, 827, 819,
	820, 821, 822, 823, 824, 825, 818, 0, 2027, 828,
	1636, 2158, 2161, 2157, 0, 0, 0, 0, 0, 109,
	0, 109, 109, 0, 0, 0, 0, 0, 109, 0,
	0, 817, 816, 826, 827, 819, 820, 821, 822, 823,
	824, 825, 818, 0, 0, 828, 0, 36, 63, 41,
	40, 43, 109, 109, 109, 109, 109, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 503, 503, 44,
	66, 65, 1408, 0, 0, 503, 42, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 929, 0, 0, 0,
	853, 0, 0, 817, 816, 826, 827, 819, 820, 821,
	822, 823, 824, 825, 818, 0, 0, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 0, 2029, 64, 0, 48, 49, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 29, 0, 61, 32, 33, 0,
	0, 0, 2053, 2057, 1397, 0, 0, 0, 58, 0,
	0, 0, 0, 0, 67, 0, 0, 483, 34, 0,
	499, 0, 0, 641, 0, 0, 109, 109, 109, 109,
	109, 0, 0, 0, 651, 0, 0, 0, 109, 0,
	0, 109, 660, 0, 0, 109, 0, 0, 0, 0,
	0, 2073, 2074, 0, 109, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 1427,
	0, 0, 0, 0, 0, 506, 0, 0, 2027, 494,
	0, 0, 0, 2202, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 1453, 0, 0, 0, 1457,
	0, 0, 1460, 0, 0, 0, 0, 1465, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 36, 63, 41,
	40, 43, 0, 0, 0, 0, 0, 2125, 0, 0,
	0, 0, 506, 2028, 981, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 506, 109, 506, 506, 0, 44,
	66, 65, 0, 0, 0, 0, 42, 817, 816, 826,
	827, 819, 820, 821, 822, 823, 824, 825, 818, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 2178, 346, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 109,
	57, 0, 2029, 64, 0, 48, 49, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 485, 495, 0, 107, 0, 968, 107, 0, 0,
	0, 0, 1011, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 506, 0,
	0, 0, 0, 0, 0, 503, 503, 662, 0, 0,
	0, 0, 503, 503, 503, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 503, 503, 0, 0, 0,
	506, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 506, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 506, 506,
	0, 506, 506, 995, 998, 999, 1000, 1001, 1002, 1003,
	0, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 0, 983,
	984, 985, 986, 962, 966, 996, 963, 969, 965, 967,
	964, 0, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 987, 988, 989, 990, 991, 992, 993,
	994, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 930, 506, 0,
	0, 109, 506, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 506, 506, 506, 0, 0, 0, 109, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 0, 494,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 506, 506, 0, 0, 0, 0, 0, 0,
	506, 494, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 503, 0, 503, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 29, 0, 61, 32, 33,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 58,
	0, 0, 0, 0, 0, 67, 0, 0, 0, 34,
	0, 0, 0, 0, 0, 1019, 0, 0, 0, 483,
	0, 0, 1027, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 503, 0,
	1042, 1043, 1044, 0, 0, 1045, 68, 0, 0, 107,
	107, 107, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	506, 506, 0, 506, 2198, 0, 506, 0, 109, 0,
	109, 0, 0, 0, 0, 1083, 0, 506, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 63,
	41, 40, 43, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 1110, 506, 109, 0,
	44, 66, 65, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 2029, 64, 0, 48, 49, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	506, 506, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 107, 0, 0, 107, 0, 0, 0,
	506, 0, 1033, 0, 0, 0, 0, 0, 109, 0,
	494, 0, 0, 0, 107, 107, 107, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 1217, 62, 107,
	503, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 503, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1033,
	1327, 0, 0, 0, 0, 0, 0, 0, 1335, 1336,
	0, 0, 1337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 503, 0, 0, 383, 383, 1355, 0,
	0, 383, 383, 383, 383, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1380, 1381, 1382, 1383, 1384, 0, 383, 383,
	383, 383, 0, 1664, 383, 383, 383, 383, 383, 0,
	0, 0, 0, 0, 0, 383, 383, 383, 0, 383,
	383, 0, 383, 383, 383, 383, 0, 383, 383, 383,
	0, 107, 494, 0, 0, 1698, 1700, 0, 0, 107,
	1243, 0, 0, 107, 107, 0, 0, 107, 1252, 1033,
	495, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 503, 0, 503, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 107, 107, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 1349, 1350, 0, 0, 0,
	0, 0, 107, 1779, 0, 0, 0, 1783, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 1792, 1793, 1794,
	0, 0, 0, 0, 0, 0, 107, 107, 107, 107,
	107, 0, 0, 0, 0, 0, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 29,
	0, 61, 32, 33, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 1582, 0, 0, 0, 67,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1845, 1845, 0,
	0, 0, 0, 0, 383, 503, 0, 0, 0, 0,
	68, 0, 0, 0, 1845, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	383, 0, 0, 2027, 383, 0, 0, 383, 2187, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 495,
	107, 107, 107, 107, 107, 0, 0, 0, 0, 0,
	0, 0, 1243, 0, 0, 107, 0, 0, 0, 1243,
	0, 503, 36, 63, 41, 40, 43, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 66, 65, 0, 0, 0,
	0, 42, 0, 0, 0, 1922, 1923, 0, 1924, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 2029, 64, 0,
	48, 49, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 1969, 0, 0, 0, 0,
	0, 29, 1845, 61, 32, 33, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 58, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 34, 0, 1764, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 107, 0, 0, 29, 0, 61, 32,
	33, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	58, 1782, 68, 0, 383, 0, 67, 0, 1727, 0,
	34, 0, 62, 0, 0, 503, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	2171, 0, 494, 0, 29, 2066, 61, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 58, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 34, 0,
	0, 495, 0, 0, 36, 63, 41, 40, 43, 0,
	2027, 0, 0, 0, 0, 2127, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2090, 0, 0, 0, 0, 68, 44, 66, 65, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 36,
	63, 41, 40, 43, 0, 0, 0, 0, 2027, 0,
	1845, 0, 0, 0, 0, 2028, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 44, 66, 65, 1862, 0, 0, 57, 42, 2029,
	64, 0, 48, 49, 0, 0, 107, 36, 63, 41,
	40, 43, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 44,
	66, 65, 57, 0, 2029, 64, 42, 48, 49, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 0, 2029, 64, 62, 48, 49, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1976, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1243, 0, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 624, 604,
	282, 562, 627, 534, 551, 638, 552, 555, 593, 520,
	574, 219, 549, 521, 0, 538, 511, 545, 512, 535,
	564, 153, 533, 606, 577, 626, 183, 589, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 625, 570, 0,
	633, 186, 586, 303, 271, 204, 0, 0, 566, 613,
	572, 602, 561, 595, 527, 585, 628, 550, 591, 629,
	0, 0, 0, 505, 0, 1271, 1272, 0, 0, 0,
	0, 0, 135, 0, 588, 623, 547, 590, 592, 509,
	587, 495, 515, 522, 637, 619, 541, 542, 543, 1514,
	0, 0, 107, 0, 0, 0, 565, 573, 599, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	583, 0, 0, 0, 523, 516, 0, 0, 563, 0,
	0, 0, 526, 114, 540, 600, 0, 507, 163, 205,
	125, 603, 618, 560, 176, 309, 622, 557, 556, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 548, 508, 607, 536, 546, 146, 544, 250,
	223, 298, 0, 580, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 559, 594, 537, 143, 597,
	584, 612, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 513, 0, 273, 301, 319, 192, 132, 532, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 530, 531, 528, 0, 529, 575, 576, 630,
	631, 632, 601, 524, 0, 614, 615, 0, 605, 620,
	621, 596, 639, 553, 554, 514, 517, 518, 519, 525,
	567, 568, 579, 582, 610, 609, 608, 611, 616, 635,
	634, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 110, 121, 185, 316, 243, 159,
	302, 510, 151, 0, 0, 569, 571, 581, 598, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 617, 624, 604, 282, 562,
	627, 534, 551, 638, 552, 555, 593, 520, 574, 219,
	549, 521, 0, 538, 511, 545, 512, 535, 564, 153,
	533, 606, 577, 626, 183, 589, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 625, 570, 0, 633, 186,
	586, 303, 271, 204, 0, 0, 566, 613, 572, 602,
	561, 595, 527, 585, 628, 550, 591, 629, 0, 0,
	0, 505, 0, 1271, 1272, 0, 0, 0, 0, 0,
	135, 0, 588, 623, 547, 590, 592, 509, 587, 0,
	515, 522, 637, 619, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 565, 573, 599, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 583, 0,
	0, 0, 523, 516, 0, 0, 563, 0, 0, 0,
	526, 114, 540, 600, 0, 507, 163, 205, 125, 603,
	618, 560, 176, 309, 622, 557, 556, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	548, 508, 607, 536, 546, 146, 544, 250, 223, 298,
	0, 580, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 559, 594, 537, 143, 597, 584, 612,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 513,
	0, 273, 301, 319, 192, 132, 532, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	530, 531, 528, 0, 529, 575, 576, 630, 631, 632,
	601, 524, 0, 614, 615, 0, 605, 620, 621, 596,
	639, 553, 554, 514, 517, 518, 519, 525, 567, 568,
	579, 582, 610, 609, 608, 611, 616, 635, 634, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 110, 121, 185, 316, 243, 159, 302, 510,
	151, 0, 0, 569, 571, 581, 598, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 617, 624, 604, 282, 562, 627, 534,
	551, 638, 552, 555, 593, 520, 574, 219, 549, 521,
	0, 538, 511, 545, 512, 535, 564, 153, 533, 606,
	577, 626, 183, 589, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 625, 570, 0, 633, 186, 586, 303,
	271, 204, 0, 0, 566, 613, 572, 602, 561, 595,
	527, 585, 628, 550, 591, 629, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	588, 623, 547, 590, 592, 509, 587, 0, 515, 522,
	637, 619, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 565, 573, 599, 558, 0, 0, 0, 0,
	0, 0, 1632, 0, 539, 0, 583, 0, 0, 0,
	523, 516, 0, 0, 563, 0, 0, 0, 526, 114,
	540, 600, 0, 507, 163, 205, 125, 603, 618, 560,
	176, 309, 622, 557, 556, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 548, 508,
	607, 536, 546, 146, 544, 250, 223, 298, 0, 580,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 559, 594, 537, 143, 597, 584, 612, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 513, 0, 273,
	301, 319, 192, 132, 532, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 530, 531,
	528, 0, 529, 575, 576, 630, 631, 632, 601, 524,
	0, 614, 615, 0, 605, 620, 621, 596, 639, 553,
	554, 514, 517, 518, 519, 525, 567, 568, 579, 582,
	610, 609, 608, 611, 616, 635, 634, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	110, 121, 185, 316, 243, 159, 302, 510, 151, 0,
	0, 569, 571, 581, 598, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 617, 624, 604, 282, 562, 627, 534, 551, 638,
	552, 555, 593, 520, 574, 219, 549, 521, 0, 538,
	511, 545, 512, 535, 564, 153, 533, 606, 577, 626,
	183, 589, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 625, 570, 0, 633, 186, 586, 303, 271, 204,
	0, 0, 566, 613, 572, 602, 561, 595, 527, 585,
	628, 550, 591, 629, 68, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 588, 623,
	547, 590, 592, 509, 587, 0, 515, 522, 637, 619,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	565, 573, 599, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 583, 0, 0, 0, 523, 516,
	0, 0, 563, 0, 0, 0, 526, 114, 540, 600,
	0, 507, 163, 205, 125, 603, 618, 560, 176, 309,
	622, 557, 556, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 548, 508, 607, 536,
	546, 146, 544, 250, 223, 298, 0, 580, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 559,
	594, 537, 143, 597, 584, 612, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 513, 0, 273, 301, 319,
	192, 132, 532, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 530, 531, 528, 0,
	529, 575, 576, 630, 631, 632, 601, 524, 0, 614,
	615, 0, 605, 620, 621, 596, 639, 553, 554, 514,
	517, 518, 519, 525, 567, 568, 579, 582, 610, 609,
	608, 611, 616, 635, 634, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 110, 121,
	185, 316, 243, 159, 302, 510, 151, 0, 0, 569,
	571, 581, 598, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 617,
	624, 604, 282, 562, 627, 534, 551, 638, 552, 555,
	593, 520, 574, 219, 549, 521, 0, 538, 511, 545,
	512, 535, 564, 153, 533, 606, 577, 626, 183, 589,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 625,
	570, 0, 633, 186, 586, 303, 271, 204, 0, 0,
	566, 613, 572, 602, 561, 595, 527, 585, 628, 550,
	591, 629, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 588, 623, 547, 590,
	592, 509, 587, 0, 515, 522, 637, 619, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 565, 573,
	599, 558, 0, 0, 0, 0, 0, 0, 1253, 0,
	539, 0, 583, 0, 0, 0, 523, 516, 0, 0,
	563, 0, 0, 0, 526, 114, 540, 600, 0, 507,
	163, 205, 125, 603, 618, 560, 176, 309, 622, 557,
	556, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 548, 508, 607, 536, 546, 146,
	544, 250, 223, 298, 0, 580, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 559, 594, 537,
	143, 597, 584, 612, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 513, 0, 273, 301, 319, 192, 132,
	532, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 530, 531, 528, 0, 529, 575,
	576, 630, 631, 632, 601, 524, 0, 614, 615, 0,
	605, 620, 621, 596, 639, 553, 554, 514, 517, 518,
	519, 525, 567, 568, 579, 582, 610, 609, 608, 611,
	616, 635, 634, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 110, 121, 185, 316,
	243, 159, 302, 510, 151, 0, 0, 569, 571, 581,
	598, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 617, 624, 604,
	282, 562, 627, 534, 551, 638, 552, 555, 593, 520,
	574, 219, 549, 521, 0, 538, 511, 545, 512, 535,
	564, 153, 533, 606, 577, 626, 183, 589, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 625, 570, 0,
	633, 186, 586, 303, 271, 204, 0, 0, 566, 613,
	572, 602, 561, 595, 527, 585, 628, 550, 591, 629,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 588, 623, 547, 590, 592, 509,
	587, 0, 515, 522, 637, 619, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 565, 573, 599, 558,
	0, 0, 0, 0, 0, 0, 1119, 0, 539, 0,
	583, 0, 0, 0, 523, 516, 0, 0, 563, 0,
	0, 0, 526, 114, 540, 600, 0, 507, 163, 205,
	125, 603, 618, 560, 176, 309, 622, 557, 556, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 548, 508, 607, 536, 546, 146, 544, 250,
	223, 298, 0, 580, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 559, 594, 537, 143, 597,
	584, 612, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 513, 0, 273, 301, 319, 192, 132, 532, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 530, 531, 528, 0, 529, 575, 576, 630,
	631, 632, 601, 524, 0, 614, 615, 0, 605, 620,
	621, 596, 639, 553, 554, 514, 517, 518, 519, 525,
	567, 568, 579, 582, 610, 609, 608, 611, 616, 635,
	634, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 110, 121, 185, 316, 243, 159,
	302, 510, 151, 0, 0, 569, 571, 581, 598, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 617, 624, 604, 282, 562,
	627, 534, 551, 638, 552, 555, 593, 520, 574, 219,
	549, 521, 0, 538, 511, 545, 512, 535, 564, 153,
	533, 606, 577, 626, 183, 589, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 625, 570, 0, 633, 186,
	586, 303, 271, 204, 0, 0, 566, 613, 572, 602,
	561, 595, 527, 585, 628, 550, 591, 629, 0, 0,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 588, 623, 547, 590, 592, 509, 587, 0,
	515, 522, 637, 619, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 565, 573, 599, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 583, 0,
	0, 0, 523, 516, 0, 0, 563, 0, 0, 0,
	526, 114, 540, 600, 0, 507, 163, 205, 125, 603,
	618, 560, 176, 309, 622, 557, 556, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	548, 508, 607, 536, 546, 146, 544, 250, 223, 298,
	0, 580, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 559, 594, 537, 143, 597, 584, 612,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 513,
	0, 273, 301, 319, 192, 132, 532, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	530, 531, 528, 0, 529, 575, 576, 630, 631, 632,
	601, 524, 0, 614, 615, 0, 605, 620, 621, 596,
	639, 553, 554, 514, 517, 518, 519, 525, 567, 568,
	579, 582, 610, 609, 608, 611, 616, 635, 634, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 110, 121, 185, 316, 243, 159, 302, 510,
	151, 0, 0, 569, 571, 581, 598, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 617, 624, 604, 282, 562, 627, 534,
	551, 638, 552, 555, 593, 520, 574, 219, 549, 521,
	0, 538, 511, 545, 512, 535, 564, 153, 533, 606,
	577, 626, 183, 589, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 625, 570, 0, 633, 186, 586, 303,
	271, 204, 0, 0, 566, 613, 572, 602, 561, 595,
	527, 585, 628, 550, 591, 629, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	588, 623, 547, 590, 592, 509, 587, 0, 515, 522,
	637, 619, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 565, 573, 599, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 583, 0, 0, 0,
	523, 516, 0, 0, 563, 0, 0, 0, 526, 114,
	540, 600, 0, 507, 163, 205, 125, 603, 618, 560,
	176, 309, 622, 557, 556, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 548, 508,
	607, 536, 546, 146, 544, 250, 223, 298, 0, 580,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 559, 594, 537, 143, 597, 584, 612, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 513, 0, 273,
	301, 319, 192, 132, 532, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 530, 531,
	528, 0, 529, 575, 576, 630, 631, 632, 601, 524,
	0, 614, 615, 0, 605, 620, 621, 596, 639, 553,
	554, 514, 517, 518, 519, 525, 567, 568, 579, 582,
	610, 609, 608, 611, 616, 635, 634, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	110, 121, 185, 316, 243, 159, 302, 510, 151, 0,
	0, 569, 571, 581, 598, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 617, 624, 604, 282, 562, 627, 534, 551, 638,
	552, 555, 593, 520, 574, 219, 549, 521, 0, 538,
	511, 545, 512, 535, 564, 153, 533, 606, 577, 626,
	183, 589, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 1281, 1285, 0, 633, 186, 586, 303, 271, 204,
	0, 0, 566, 613, 572, 602, 561, 595, 527, 585,
	628, 550, 591, 629, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 588, 623,
	547, 590, 592, 509, 587, 0, 515, 522, 637, 619,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	565, 573, 599, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 583, 0, 0, 0, 523, 516,
	0, 0, 563, 0, 0, 0, 526, 114, 540, 600,
	0, 507, 163, 205, 125, 603, 618, 1284, 176, 309,
	622, 557, 556, 1279, 0, 1280, 166, 184, 129, 111,
	123, 1277, 1283, 215, 248, 256, 548, 508, 607, 536,
	546, 146, 544, 250, 223, 298, 0, 580, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 559,
	594, 537, 143, 597, 584, 612, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 513, 0, 273, 301, 319,
	192, 132, 532, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 530, 531, 528, 0,
	529, 575, 576, 630, 631, 632, 601, 524, 0, 614,
	615, 0, 605, 620, 621, 596, 639, 553, 554, 514,
	517, 518, 519, 525, 567, 568, 579, 582, 610, 609,
	608, 611, 616, 635, 634, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 110, 121,
	185, 316, 243, 159, 302, 510, 151, 0, 0, 569,
	571, 581, 598, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 617,
	624, 604, 282, 562, 627, 534, 551, 638, 552, 555,
	593, 520, 574, 219, 549, 521, 0, 538, 511, 545,
	512, 535, 564, 153, 533, 606, 577, 626, 183, 589,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 625,
	570, 0, 633, 186, 586, 303, 271, 204, 0, 0,
	566, 613, 572, 602, 561, 595, 527, 585, 628, 550,
	591, 629, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 588, 623, 547, 590,
	592, 509, 587, 0, 515, 522, 637, 619, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 565, 573,
	599, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 583, 0, 0, 0, 523, 516, 0, 0,
	563, 0, 0, 0, 526, 114, 540, 600, 0, 507,
	163, 205, 125, 603, 618, 560, 176, 309, 622, 557,
	556, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 548, 508, 607, 536, 546, 146,
	544, 250, 223, 298, 0, 580, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 559, 594, 537,
	143, 597, 584, 612, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 513, 0, 273, 301, 319, 192, 132,
	532, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 530, 531, 528, 0, 529, 575,
	576, 630, 631, 632, 601, 524, 0, 614, 615, 0,
	605, 620, 621, 596, 639, 553, 554, 514, 517, 518,
	519, 525, 567, 568, 579, 582, 610, 609, 608, 611,
	616, 635, 634, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 110, 121, 185, 316,
	243, 159, 302, 510, 151, 0, 0, 569, 571, 581,
	598, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 617, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 1260, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 1261, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 153, 387, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 717, 388, 411, 410, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 385, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 462, 463,
	464, 465, 466, 467, 468, 461, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 458, 459, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 381, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 153, 387, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 388, 411, 1169, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 385, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 381,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 462, 463,
	464, 465, 466, 467, 468, 461, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 458, 459, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 1166, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 381, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 29, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 153, 387, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 388, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 1079, 388, 411, 410, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 0, 0, 0, 385,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 0, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 462, 463, 464, 465, 466, 467,
	468, 461, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	458, 459, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 153, 387, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 388, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 388, 411, 410, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 0, 0, 0, 385,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 0, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 733, 734, 735, 736, 737, 741,
	742, 746, 747, 755, 754, 753, 756, 757, 759, 758,
	760, 738, 739, 740, 743, 744, 745, 748, 749, 752,
	750, 751, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 388, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 0, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 2180, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 717, 388, 411, 410, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 0, 0, 0, 0,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 0, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 462, 463, 464, 465, 466, 467,
	468, 461, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	458, 459, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 388, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 0, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1240, 1242, 0, 0, 0,
	0, 0, 108, 0, 1245, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 1241, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 781, 782, 783, 784, 788,
	789, 793, 794, 802, 801, 800, 803, 804, 806, 805,
	807, 785, 786, 787, 790, 791, 792, 795, 796, 799,
	797, 798, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 1242, 0, 0, 0, 0, 0, 108, 0, 1245,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 1241, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 1236, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 780,
	781, 782, 783, 784, 788, 789, 793, 794, 802, 801,
	800, 803, 804, 806, 805, 807, 785, 786, 787, 790,
	791, 792, 795, 796, 799, 797, 798, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 775, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 779, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 772, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 781, 782, 783, 784, 788,
	789, 793, 794, 802, 801, 800, 803, 804, 806, 805,
	807, 785, 786, 787, 790, 791, 792, 795, 796, 799,
	797, 798, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 1492, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 1245,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 780,
	781, 782, 783, 784, 788, 789, 793, 794, 802, 801,
	800, 803, 804, 806, 805, 807, 785, 786, 787, 790,
	791, 792, 795, 796, 799, 797, 798, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 1245, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780, 781, 782, 783, 784, 788,
	789, 793, 794, 802, 801, 800, 803, 804, 806, 805,
	807, 785, 786, 787, 790, 791, 792, 795, 796, 799,
	797, 798, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 0, 779,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 780,
	781, 782, 783, 784, 788, 789, 793, 794, 802, 801,
	800, 803, 804, 806, 805, 807, 785, 786, 787, 790,
	791, 792, 795, 796, 799, 797, 798, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 817,
	816, 826, 827, 819, 820, 821, 822, 823, 824, 825,
	818, 0, 0, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 29, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	29, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 950, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 949, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 105, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 497, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 498, 496, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 941, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 497, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 498, 496, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	488, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 497, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	498, 496, 491, 490, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312,
}
var yyPact = [...]int{

	565, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1378, 1417, -1000,
	-1000, -1000, -1000, -1000, -1000, 526, 190, -1000, -1000, -1000,
	236, 9, 19614, 232, 529, 20444, -1000, -1000, -1000, -1000,
	166, 20444, -1000, -1000, -120, -123, -1000, 24, 1007, 1247,
	1119, -1000, -1000, 81, 15, -1000, -1000, -1000, -1000, -1000,
	-1000, 1332, 1372, 1128, 1360, 1190, -1000, 9651, 209, 209,
	19199, 22104, -1000, 20444, 7151, 223, 20444, -168, 200, 200,
	113, 200, -1000, 517, -1000, -1000, -1000, 20444, 206, 20029,
	206, 206, 206, 206, 206, 20444, -1000, 292, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20444, 1005, 1260, 5897, 208, 5897, 5897, -1000, 534, -1000,
	92, 91, 88, 5897, 4, 553, 89, -30, -1000, 5897,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 182, 1119, 513,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1259, 728, 1131,
	-91, 779, 231, 20444, 447, -1000, -1000, 1268, 11727, 12142,
	1378, -1000, 1119, -1000, -1000, -1000, 1231, -1000, -1000, 589,
	1405, -1000, 14632, 288, -1000, 11727, 1067, 1070, -1000, -1000,
	1070, -1000, -1000, 413, -1000, -1000, 13387, 13387, 13387, 13387,
	13387, 13387, 13387, 13387, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1070, -1000, 10897, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 11727, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 18784, 17954,
	20444, 1065, 1061, -1000, -1000, 285, 1022, 21689, -94, -1000,
	-1000, -1000, 502, 17539, -1000, 275, -1000, 1258, -1000, -1000,
	997, -1000, 2704, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20029, 1300, 210, 994, 552, 993, 992, 991, 20444, 990,
	1062, 213, 20444, 1282, 1153, 20444, 989, 986, 985, 984,
	-1000, 8405, -1000, 5897, 5897, -1000, -1000, -1000, 200, 200,
	5897, 5897, 5897, 20444, 20444, 20444, -1000, -1000, 20444, -1000,
	-1000, 549, 549, 5897, 5897, -1000, 1403, 483, 483, -1000,
	-1000, -1000, -1000, 11727, -1000, 13387, 464, -1000, 1149, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 982, -1000, -1000, 110,
	-1000, 769, -1000, 11312, -299, -1000, -1000, -1000, 20444, 5897,
	97, 144, 138, 20444, -1000, 1412, 417, 778, 271, 1060,
	-1000, 776, 1269, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
	1070, 1332, 779, 1190, 761, 1169, -1000, -1000, -1000, 20444,
	-1000, 11727, 11727, 686, -1000, 15877, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6733, 467,
	13387, 632, 514, 13387, 13387, 13387, 13387, 13387, 13387, 13387,
	13387, 13387, 13387, 13387, 13387, 13387, 13387, 13387, 644, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 981, -1000, 1119,
	882, 882, 301, 301, 301, 301, 301, 301, 301, 16292,
	1297, 779, 980, 577, 10897, 9651, 9651, 779, 11727, 11727,
	10481, 10066, 9651, 9651, 1297, 535, 577, 21274, -1000, -1000,
	12972, -1000, -1000, -1000, -1000, -1000, 779, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20029, 20029, 9651, 9651, 9651,
	9651, 779, 779, 9651, 9651, 9651, 9651, 9651, 779, 779,
	779, 779, 1297, 1297, 9651, 9651, 9651, 1297, 9651, 9651,
	1297, 9651, 9651, 9651, 9651, 1297, 9651, 9651, 9651, 122,
	20444, -1000, 1056, 1150, -1000, -1000, -1000, 1298, 17124, 14217,
	122, 1036, 17954, 20444, -1000, -1000, 17954, 20444, 6315, 20859,
	1022, -94, 1042, -1000, -145, -132, 8821, 284, -1000, -1000,
	-1000, 7569, -1000, 5061, 7987, -1000, -78, -1000, -1000, -1000,
	1091, -1000, 1091, 157, -7, 1091, 1091, 1091, 1091, 1091,
	-38, -38, -38, -38, -31, -1000, -1000, -1000, -1000, -1000,
	1130, 1129, -1000, 1091, 1091, 1091, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1095, 169, 1093, 1093, 1093, 1093,
	1093, 1074, -1000, 20444, 5897, 1272, 5897, 93, 1125, -1000,
	-1000, 20444, 20444, 1058, -1000, 20444, 1053, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 948, 928, -1000,
	-1000, -1000, -1000, -1000, -1000, 532, -1000, 767, 11727, -1000,
	-1000, -1000, 20444, 1285, 20444, 20444, 549, 577, 421, -1000,
	766, 20444, -1000, 1051, -1000, 492, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	968, 1270, 763, 124, -1000, 20444, 20444, 20444, 20444, 20444,
	279, -1000, 1200, 11727, 11727, 7569, 12142, -1000, -1000, -1000,
	-1000, 1268, -1000, 1297, 1320, -1000, 1209, 1208, 9651, -1000,
	-1000, 467, 491, -1000, -1000, 578, -1000, -1000, -1000, -1000,
	269, 1070, -1000, 2650, -1000, -1000, -1000, -1000, 632, 13387,
	13387, 13387, 421, 2650, 2436, 676, 1598, 301, 561, 561,
	438, 438, 438, 438, 438, 531, 531, -1000, -1000, -1000,
	779, -1000, -1000, -1000, 9651, -1000, 11727, -1000, 779, 962,
	-1000, 962, -1000, 498, 797, 509, 1402, 962, 398, 1393,
	962, 962, 962, 9651, 536, -1000, 11727, 779, -1000, 715,
	1050, 1046, 962, 779, 1045, 962, 962, -180, -180, 779,
	962, 779, 962, 962, -180, -180, -180, -180, 9651, 9651,
	962, 962, 962, 9651, 962, 962, 9651, 962, 962, 962,
	962, 9651, 962, 962, 962, 1044, 1070, -1000, 20859, 17954,
	17954, 17954, 17954, 17954, -1000, 1185, 1181, -1000, 1178, 1172,
	1184, 15462, -1000, 964, 17124, -1000, 1070, -1000, 15047, 273,
	221, 218, 217, -1000, -1000, -1000, 1391, 17954, 1073, -1000,
	1073, -1000, 261, -1000, -1000, 1042, -94, -140, -1000, -1000,
	-1000, -1000, 577, -1000, 700, -1000, 259, 1041, 4643, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1120, 926, -1000, 1219,
	355, 439, 805, 1215, -1000, -1000, 219, -86, -1000, -1000,
	649, -38, -38, 1091, 1091, 155, 1091, -1000, -38, -1000,
	-1000, -1000, 284, 1256, 284, 284, 284, 284, -38, 749,
	749, -1000, -1000, -1000, -1000, 648, -1000, 1095, -1000, 630,
	-1000, -1000, -1000, -1000, 1148, 20029, 1119, 1284, -1000, -1000,
	-1000, 1399, -1000, -1000, 227, 212, -1000, 5897, 20444, 5897,
	5897, 1391, 919, 915, -1000, 577, 483, 549, 1250, -1000,
	-1000, -1000, -1000, 13387, -1000, -1000, 110, 882, -1000, 122,
	229, -1000, -1000, 470, 460, 465, 160, 160, -1000, 484,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 121,
	1069, -1000, -1000, -1000, -1000, 22, 95, 1198, 577, 577,
	-1000, -1000, 20444, -1000, -1000, -1000, -1000, 1077, -1000, -1000,
	-1000, 5479, 9651, -1000, 421, 2650, 2364, -1000, 13387, -1000,
	779, 577, -1000, 9651, -1000, -1000, 137, 644, 137, 13387,
	13387, -1000, 13387, 13387, -1000, -215, -1000, 1081, 527, -1000,
	11727, 799, -1000, -1000, 13387, 13387, -1000, -1000, -1000, -1000,
	-1000, 18369, -1000, -180, -180, -180, -180, -180, -1000, -1000,
	-1000, -1000, 962, 962, -180, -180, -180, 962, -180, -180,
	962, -180, -180, -180, -180, 962, -180, -180, -180, 1145,
	20859, 1070, -1000, 16708, 20029, 1080, 1150, 1124, 1138, 921,
	-1000, -1000, -1000, -1000, 1179, -1000, 1171, -1000, -1000, -1000,
	-1000, 20029, 13387, 273, -1000, 1070, 1070, 1070, 1378, 11727,
	1073, -1000, -1000, 372, -1000, -1000, -149, -137, -1000, -1000,
	-1000, 7151, 5061, -1000, 5061, 20029, 139, -1000, 805, -1000,
	-1000, 805, -1000, -1000, -1000, 1094, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 574, 13387, 1411, -1000, 1218, -1000, 1217,
	747, -1000, -1000, 969, 284, 284, -38, -1000, -1000, 1091,
	-1000, 284, -1000, 441, -1000, -1000, -1000, -1000, 284, 960,
	-1000, 958, 1040, -1000, 954, 20444, -1000, -1000, -1000, 1135,
	-1000, -1000, -1000, 939, 1039, -1000, 2704, 911, 901, 899,
	20444, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 549, -1000,
	13387, 2650, -1000, -1000, -38, 20444, -1000, 777, -1000, 805,
	334, -1000, -1000, -1000, 881, 1215, -1000, -1000, 880, -1000,
	866, 20029, 1216, 836, 20444, 20029, -1000, -1000, 810, 833,
	11727, -1000, 20029, -220, 818, 20029, 20029, 20029, -1000, -1000,
	1391, 17954, -1000, -1000, 779, -1000, 13387, 2650, -1000, -1000,
	779, 1091, 1091, -1000, 1091, 1093, -1000, 1091, 3, 1091,
	2, 779, 779, 2328, 2189, 2122, 1257, 1070, -175, -1000,
	577, 11727, 2106, 1470, -1000, 315, -1000, -1000, -1000, -1000,
	-1000, -180, -180, -1000, -1000, -1000, -1000, -180, -1000, -1000,
	-180, -1000, -1000, -1000, -1000, -180, -1000, -1000, -1000, -1000,
	1263, 1019, 1035, -1000, -1000, 9236, 779, 952, 253, 945,
	-1000, 1378, -1000, -1000, 11727, 1092, -1000, 11727, -1000, -1000,
	-1000, 945, 831, -1000, 20029, 20029, 20029, 1332, 577, -1000,
	-1000, -1000, -1000, 4643, -1000, 938, -1000, 1091, -1000, 1215,
	-1000, -1000, 20029, -1000, 2650, -87, -1000, -1000, -1000, -1000,
	-1000, -1000, 284, -1000, -1000, -1000, -1000, -1000, -38, 743,
	-38, 614, -1000, 613, 1090, -1000, 1119, 20444, 46, 227,
	-1000, 2704, 2704, 2704, -1000, -1000, 2650, -83, -1000, 810,
	143, 2704, -1000, 1074, 355, 139, -1000, -1000, -1000, -1000,
	816, 346, -1000, 211, 143, 810, 577, 1265, -1000, 7151,
	-1000, -1000, 1088, 1078, -1000, 1387, 1038, -1000, 2650, -1000,
	-1000, 140, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13387, 13387, 13387, 13387, 13387, 779, 738, 577, 13387, 13387,
	779, 1370, -1000, -1000, -1000, -1000, -1000, 1212, -1000, 1070,
	-1000, -1000, 1076, 20029, 20029, -1000, 20029, 1332, 577, 20029,
	577, 13802, -1000, 15462, 936, -1000, 936, 936, -1000, 265,
	20029, 1269, 934, -1000, -1000, 284, -1000, 284, 863, 832,
	20029, -1000, 1305, -1000, 46, -1000, 734, 53, 58, -1000,
	52, 48, 47, 41, 39, -1000, -1000, -1000, -1000, 1241,
	1233, 830, -1000, -1000, 807, -1000, 1086, 805, -1000, -1000,
	803, -1000, -1000, 20029, -1000, 143, 1070, 1037, -1000, 486,
	20029, 20444, 1380, 1369, -1000, -1000, 715, 715, 715, 715,
	62, -1000, -1000, 715, 715, -1000, 11727, 1410, -1000, 1070,
	-1000, 1119, 251, -1000, -1000, -1000, 898, -1000, 273, 20029,
	-1000, -1000, -1000, 265, -1000, 796, 484, 726, -1000, -1000,
	147, -1000, -1000, -1000, -1000, 896, -1000, 77, 4178, -1000,
	-1000, -1000, -1000, -1000, -1000, 1246, 1245, 75, 199, 1227,
	1229, 1368, -1000, -1000, -1000, 219, 20029, 1074, -1000, -1000,
	-1000, -1000, 120, 7151, 5061, 892, -1000, -1000, 12142, 12142,
	-1000, -1000, -1000, -1000, 779, 127, -226, -1000, -1000, 1068,
	20859, 1035, 779, 20029, -1000, -1000, -1000, -1000, -1000, 610,
	-1000, 20444, 265, 71, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11727, 11727, 4178,
	-1000, -1000, -1000, -1000, 1085, 608, 1233, 1367, 1234, 1232,
	-1000, 657, -1000, 862, 1084, -1000, 843, -1000, 20029, -1000,
	-1000, 1069, -1000, 577, -1000, 1025, -1000, 577, -1000, -1000,
	1194, -218, -229, 779, 1022, -1000, -1000, -1000, 1071, -1000,
	265, 79, -1000, 620, 784, -302, -1000, -1000, 20029, 1237,
	-1000, 653, -1000, 1361, 1338, -1000, 265, 20029, -1000, 120,
	1207, -220, 12142, -1000, 1193, -1000, -1000, 20029, -1000, 795,
	787, 622, -1000, 11727, 4178, 4130, 840, -1000, -1000, 652,
	638, -1000, 829, -1000, 109, -1000, -1000, -224, 824, 198,
	-1000, -1000, 564, 4178, -1000, 764, -304, -1000, -1000, -1000,
	-1000, -1000, 265, 105, -227, 1134, -1000, -1000, -1000, -1000,
	-1000, -1000, 4178, -1000, -306, 4178, 2358, -1000, 1070, -230,
	1082, 1047, 1401, -1000, -308, 4085, -309, 197, 4178, 540,
	-1000, 11727, 12557, -1000, -1000, 1409, -1000, 1407, 366, 366,
	3853, 560, 4178, -1000, -310, 196, 4178, -1000, 616, 715,
	779, -1000, -1000, -1000, 153, 637, -1000, -1000, -1000, 3149,
	-1000, -311, 4178, -1000, -1000, -1000, -1000, -1000, 180, 2588,
	-312, -1000, 163, 4178, -1000,
}
var yyPgo = [...]int{

	0, 1737, 144, 656, 1735, 1734, 1731, 16, 14, 11,
	18, 1728, 1539, 1532, 1529, 1509, 1726, 1502, 1725, 7,
	1724, 1723, 1484, 1722, 9, 1721, 8, 1704, 4, 97,
	1703, 1702, 1700, 1699, 1698, 1479, 1697, 1695, 1694, 1692,
	1689, 1468, 1466, 1688, 1687, 1464, 1462, 1686, 1685, 1459,
	1456, 1431, 1684, 132, 1683, 1682, 1680, 108, 1679, 104,
	1678, 1677, 1676, 68, 1495, 73, 78, 623, 1675, 24,
	1673, 64, 80, 137, 1670, 66, 1669, 1668, 111, 1667,
	1666, 1665, 85, 1664, 1662, 2536, 1661, 1660, 101, 1659,
	49, 37, 60, 1657, 1656, 1655, 1654, 93, 99, 1652,
	1651, 1650, 54, 1648, 1646, 117, 1645, 1642, 1641, 90,
	48, 1640, 40, 41, 51, 1639, 213, 28, 1638, 94,
	1637, 1635, 1631, 1628, 1627, 27, 1626, 38, 1625, 96,
	70, 569, 3, 43, 50, 92, 1624, 22, 1623, 79,
	65, 57, 30, 103, 1622, 100, 89, 1621, 1620, 763,
	1619, 1617, 77, 1616, 52, 82, 1615, 587, 105, 62,
	1614, 1613, 1612, 1611, 58, 76, 1610, 1609, 34, 187,
	119, 1406, 23, 2191, 36, 102, 1607, 32, 1606, 2740,
	95, 46, 71, 1605, 1604, 67, 72, 39, 1602, 1601,
	1599, 1598, 1597, 1594, 131, 1593, 1590, 1589, 1575, 106,
	84, 1574, 1568, 83, 59, 1567, 1565, 1564, 1563, 1562,
	69, 55, 98, 1560, 86, 81, 1559, 1558, 1556, 1555,
	47, 35, 1554, 1552, 1550, 63, 29, 1547, 45, 21,
	25, 44, 6, 56, 1545, 13, 1543, 33, 1542, 20,
	1541, 31, 75, 2, 5, 10, 1537, 1524, 1521, 1511,
	1507, 53, 1505, 1500, 42, 1494, 1488, 1481, 26, 1477,
	1475, 1470, 1429, 0, 142, 107, 1423, 1412, 109,
}
var yyR1 = [...]int{

	0, 261, 262, 262, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 52,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 56, 56, 8, 9, 9, 9, 9, 265, 265,
	80, 80, 78, 78, 79, 79, 139, 139, 10, 10,
	10, 10, 143, 143, 146, 146, 146, 147, 147, 147,
	147, 183, 183, 132, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 249, 249, 250, 250, 251, 251, 251,
	251, 252, 252, 253, 253, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 23, 167, 167, 33, 33,
	34, 34, 34, 128, 128, 128, 11, 11, 11, 11,
	11, 18, 20, 20, 25, 25, 26, 21, 21, 21,
	21, 27, 27, 28, 22, 22, 32, 32, 30, 30,
	29, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 17, 248, 248, 248, 24, 24, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 241, 241, 240, 239, 239, 238, 238, 237, 39,
	222, 223, 223, 223, 223, 211, 212, 187, 187, 187,
	187, 187, 187, 187, 186, 186, 186, 186, 190, 190,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 189,
	189, 189, 189, 189, 189, 189, 189, 191, 191, 191,
	191, 191, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 193, 193, 193,
	193, 193, 193, 193, 193, 210, 210, 194, 194, 203,
	203, 204, 204, 204, 201, 201, 202, 202, 205, 205,
	197, 198, 206, 199, 199, 199, 200, 200, 200, 209,
	209, 209, 209, 195, 213, 213, 232, 232, 231, 231,
	230, 230, 230, 221, 221, 227, 227, 227, 227, 227,
	216, 216, 216, 215, 215, 217, 217, 220, 220, 229,
	229, 228, 214, 214, 233, 233, 233, 233, 233, 218,
	218, 219, 219, 219, 244, 245, 243, 243, 243, 243,
	243, 224, 224, 224, 225, 225, 225, 226, 226, 226,
	246, 246, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 127, 127, 127, 37, 38, 38,
	38, 38, 38, 38, 38, 38, 165, 165, 242, 242,
	242, 242, 242, 236, 234, 234, 235, 235, 13, 40,
	40, 14, 14, 14, 14, 14, 14, 14, 15, 15,
	41, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 68, 153, 153, 151, 151, 154,
	154, 152, 152, 152, 155, 155, 155, 156, 156, 184,
	184, 184, 43, 43, 48, 48, 51, 49, 50, 166,
	166, 46, 46, 47, 47, 47, 47, 62, 62, 266,
	266, 45, 45, 44, 44, 44, 44, 16, 267, 53,
	54, 54, 55, 55, 55, 59, 59, 59, 57, 57,
	57, 58, 58, 65, 65, 64, 64, 66, 66, 66,
	66, 130, 130, 130, 131, 131, 176, 176, 176, 175,
	175, 175, 175, 70, 70, 71, 71, 72, 72, 73,
	73, 73, 73, 89, 89, 90, 90, 90, 90, 90,
	100, 100, 138, 138, 137, 137, 140, 140, 74, 74,
	74, 74, 75, 75, 76, 76, 77, 77, 164, 164,
	181, 181, 181, 81, 81, 81, 83, 82, 82, 82,
	82, 84, 84, 86, 87, 87, 85, 85, 88, 91,
	91, 91, 91, 92, 92, 67, 67, 67, 67, 67,
	67, 67, 150, 150, 94, 94, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 108, 108, 108, 108,
	108, 108, 95, 95, 95, 95, 95, 95, 95, 63,
	63, 109, 109, 109, 116, 110, 110, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 103, 103, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 268, 268, 105, 104, 104, 104, 104,
	104, 104, 60, 60, 60, 60, 60, 182, 182, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 120, 120, 61, 61, 118, 118, 119, 121,
	121, 117, 117, 117, 97, 97, 97, 97, 97, 97,
	97, 97, 99, 99, 99, 122, 122, 111, 111, 69,
	69, 123, 123, 124, 124, 125, 125, 126, 126, 129,
	129, 133, 133, 133, 134, 134, 134, 134, 135, 135,
	135, 96, 96, 96, 96, 96, 96, 136, 136, 136,
	136, 141, 141, 112, 112, 114, 114, 113, 115, 142,
	142, 145, 145, 145, 145, 144, 144, 144, 178, 178,
	178, 148, 148, 157, 157, 158, 158, 149, 149, 196,
	196, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	163, 163, 162, 162, 162, 159, 159, 159, 160, 160,
	177, 177, 173, 173, 174, 174, 179, 179, 180, 180,
	247, 247, 207, 207, 257, 257, 208, 208, 258, 258,
	260, 260, 255, 255, 256, 256, 259, 259, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 263,
	264, 168, 169, 169, 169,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 4, 0, 3, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 4, 5, 8, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 0, 2, 1, 3, 3, 4,
	4, 1, 3, 3, 3, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 1, 2,
	2, 3, 1, 0, 3, 3, 0, 2, 2, 2,
	1, 2, 1, 2, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 2, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 1, 1, 1, 6, 10, 9, 7, 7,
	7, 9, 7, 12, 14, 7, 7, 9, 9, 10,
	5, 6, 8, 7, 0, 1, 2, 4, 7, 5,
	5, 5, 12, 7, 5, 9, 0, 1, 1, 1,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	5, 4, 6, 4, 4, 4, 4, 4, 3, 2,
	3, 4, 4, 3, 6, 6, 4, 4, 4, 4,
	4, 4, 3, 3, 2, 6, 2, 4, 4, 4,
	3, 7, 6, 5, 4, 2, 4, 3, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 2, 2, 2, 2, 3, 3, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 2, 4, 7, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 1, 3, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 3, 2, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -261, -1, -2, -6, -7, -8, -9, -10, -12,
	-35, -13, -14, -15, -41, -42, -43, -48, -49, -50,
	-46, -45, -44, -16, -22, -17, -52, -3, -4, 6,
	7, -56, 9, 10, 30, -39, 129, -36, -37, -38,
	132, 131, 168, 133, 161, 63, 214, -51, 217, 218,
	-266, -166, 166, 167, 31, 32, 135, 212, 20, 37,
	-263, 8, 309, 130, 215, 163, 162, 26, 67, -262,
	424, -125, 15, -55, 5, -53, -267, -53, -53, -53,
	-53, -53, -222, 104, 67, -160, 142, 85, 300, 138,
	-167, 139, -159, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -85, -179, 70, -171,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -216, 285,
	175, 178, -184, 139, -151, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -179, -62, 133, 169,
	-85, -168, -168, -168, 277, 277, -168, -32, 213, 70,
	36, -2, -149, 142, 279, 144, 216, -134, 17, 16,
	-5, -3, -263, 6, 21, 22, -59, 53, 54, -54,
	-66, 113, -67, -179, -93, 87, -98, 29, 70, -171,
	24, -97, -94, -117, -115, -116, 122, 123, 124, 111,
	112, 119, 88, 125, -103, -101, -102, -104, -106, -107,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-173, -113, -263, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -149, -149,
	11, -78, -79, -85, -88, -179, -142, -183, 216, -145,
	289, 288, -117, -144, -173, -179, 287, 242, 286, -85,
	-223, -212, -174, -173, -170, 70, -171, 134, 160, 86,
	358, 23, 25, 268, 322, 89, 122, 323, 324, 325,
	16, 20, 90, 121, 310, 326, 129, 61, 301, 303,
	299, 300, 275, 29, 10, 26, 162, 194, 22, 115,
	131, 93, 94, 95, 165, 24, 163, 83, 159, 19,
	64, 11, 13, 320, 321, 14, 145, 144, 106, 192,
	140, 59, 8, 125, 27, 103, 55, 327, 328, 362,
	45, 363, 57, 104, 17, 304, 305, 31, 350, 329,
	170, 364, 330, 117, 197, 62, 49, 87, 81, 34,
	84, 65, 85, 15, 193, 60, 318, 196, 365, 105,
	132, 309, 58, 138, 6, 315, 30, 161, 333, 332,
	331, 334, 198, 56, 312, 313, 335, 422, 139, 92,
	316, 317, 143, 82, 5, 44, 32, 9, 63, 66,
	306, 307, 308, 47, 337, 336, 338, 91, 12, 319,
	140, -85, 309, -158, 145, -158, 176, 175, -158, 96,
	-40, -85, -157, 145, -173, -157, -157, -157, -157, -157,
	-85, 126, -85, 70, 30, -169, -263, -174, 300, 138,
	70, 175, 178, 139, 176, 142, -169, -169, -218, 11,
	106, 181, 181, 181, 182, -169, -154, -153, 177, 282,
	283, 277, 281, 12, -68, 104, 182, 277, 180, -169,
	-47, -2, -9, -7, -8, -2, 96, -168, -168, 30,
	72, 50, -248, 67, -207, 273, -264, 69, 139, -85,
	129, 131, 134, 65, -135, 19, 31, -67, -179, -126,
	-129, -67, -172, 322, 323, 324, 325, 326, 339, 340,
	341, 327, 328, 342, 343, 344, 329, 330, 345, 346,
	348, 349, 347, 333, 332, 331, 334, 335, 337, 336,
	338, -125, -2, -53, 49, -57, 21, 22, 78, 11,
	-176, 86, 85, 103, -175, 23, 70, -171, -172, 72,
	322, 323, 324, 325, 326, 339, 340, 341, 327, 328,
	342, 343, 344, 329, 330, 345, 346, 348, 349, 347,
	333, 332, 331, 334, 335, 337, 336, 338, 126, -67,
	-95, 106, 87, 104, 105, 89, 108, 107, 118, 111,
	112, 113, 114, 115, 116, 117, 109, 110, 121, 96,
	97, 98, 99, 100, 101, 102, -150, -263, -116, -263,
	127, 128, -98, -98, -98, -98, -98, -98, -98, -98,
	-263, -2, -110, -67, -263, -263, -263, -263, -263, -263,
	-263, -263, -263, -263, -263, -120, -67, -263, -268, -105,
	-263, -268, -105, -268, -105, -268, -263, -268, -105, -268,
	-105, -268, -268, -105, -268, -263, -263, -263, -263, -263,
	-263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
	-263, -263, -263, -263, -263, -263, -263, -263, -263, -263,
	-263, -263, -263, -263, -263, -263, -263, -263, -263, -87,
	27, -85, -71, -72, -73, -74, -89, -116, -263, -85,
	-85, -78, -265, 68, 11, 66, -265, 68, 126, 68,
	-142, 216, -143, -146, 290, 292, 96, -178, -173, 72,
	29, 126, 30, 69, 68, -186, -190, -192, -191, -193,
	-188, -189, 239, 242, 246, 244, 240, 245, 122, 243,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 30, 164, 235, 236, 237, 238, 259, 260, 261,
	262, 263, 264, 265, 266, 219, 241, 352, 220, 221,
	222, 223, 224, 225, 227, 228, 229, 230, 231, 232,
	233, -173, 23, 142, 70, 87, 70, 70, 70, -85,
	70, 68, 143, -78, 24, 65, -80, -85, 70, 70,
	70, 70, -180, -179, -170, -169, -169, -158, -158, -169,
	-169, -169, -85, -85, -85, -85, -155, 104, 12, -155,
	-169, -169, 11, -152, 11, 106, -152, -67, -98, -156,
	104, 65, 70, -30, -29, -31, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 72, 69,
	-110, -247, 423, -85, -169, 179, 179, 139, 139, 184,
	-85, 9, 106, 68, 18, 126, 68, -133, 25, 26,
	-133, -134, -264, -59, -99, 50, 73, 76, -58, 56,
	-85, -67, -67, -108, 81, 87, 82, 83, -175, 113,
	-180, -174, -170, -98, -109, -113, -116, 77, 106, 104,
	105, 89, -98, -98, -98, -98, -98, -98, -98, -98,
	-98, -98, -98, -98, -98, -98, -98, -182, 70, 72,
	70, -97, -97, -173, -57, -264, 68, -264, -2, -64,
	-66, -64, -264, -67, -67, -117, 72, -64, -117, 72,
	-64, -64, -64, -57, -118, -119, 91, -117, -264, -98,
	-173, -173, -64, -65, -64, -64, -64, -264, -264, -66,
	-64, -66, -64, -64, -264, -264, -264, -264, -57, -57,
	-64, -64, -64, -57, -64, -64, -57, -64, -64, -64,
	-64, -57, -64, -64, -64, -139, 171, -85, 30, 68,
	-81, -83, -82, -84, 55, 59, 61, 56, 57, 58,
	62, -164, 23, -71, -263, -90, 171, -91, 23, -181,
	63, 144, 64, -179, -172, 72, -139, 66, -71, -85,
	-71, -88, -179, 113, -145, -143, 68, 291, 293, 294,
	65, 84, -67, -200, 121, -174, -180, -224, -225, -226,
	-174, 72, 73, -212, -213, -214, -227, 154, -233, 146,
	148, 44, -215, 155, 140, 45, -187, -201, 271, -194,
	67, -194, -194, 247, 239, 242, 240, -194, -194, -194,
	-194, -194, -199, 242, -199, -199, -199, -199, 240, 67,
	67, -194, -194, -194, -203, 67, -203, 234, -204, 67,
	-204, -204, -204, -204, -177, 66, -132, -85, -169, 24,
	-169, -33, 187, 160, 67, -85, -85, -85, 68, 70,
	70, -219, 11, 106, 72, -67, -85, -100, 23, -179,
	-179, -155, -63, 165, 72, -85, 68, 96, 69, -86,
	27, 72, -161, 134, 131, 132, 136, 137, -236, 268,
	130, 242, 79, 29, 15, 310, 171, 357, 70, 172,
	-85, -85, -85, -85, -85, 134, 131, 51, -67, -67,
	-129, -135, -148, 19, 11, 47, 47, -64, 81, 82,
	83, 126, -263, -109, -98, -98, -98, -63, 86, -264,
	-65, -67, -264, 68, -264, -264, 68, 66, 23, 11,
	11, -264, 11, 11, -264, -264, -264, -64, -121, -119,
	93, -67, -264, -264, 68, 68, -264, -264, -264, -264,
	-130, 318, -130, -264, -264, -264, -264, -264, -130, -130,
	-130, -130, -64, -64, -264, -264, -264, -64, -264, -264,
	-64, -264, -264, -264, -264, -64, -264, -264, -264, -96,
	30, 47, -2, -263, -263, -142, -72, -73, -73, -72,
	-73, 55, 55, 55, 60, 55, 60, 55, -82, -181,
	-264, -263, 34, -181, -91, 140, 140, 140, -92, 12,
	-71, -92, -92, 126, -146, -147, 295, 292, 298, 70,
	72, 126, 68, -226, 96, 67, 70, 45, -215, 140,
	45, -215, -220, 70, -220, 45, -205, -197, -198, -206,
	-209, -195, 81, 87, 29, 65, 268, 146, 45, 44,
	79, -202, 272, 73, -199, -199, -194, -194, -194, 247,
	-194, -199, -200, 30, -200, -200, -200, -200, -199, -210,
	72, -210, 73, -203, 73, 65, -173, -2, 23, -34,
	8, 9, 10, -249, -250, -251, 70, 106, 192, 193,
	143, -169, -85, -169, -169, -92, 70, 70, -152, -155,
	34, -98, -29, -97, -139, 139, -168, -165, -242, -215,
	-246, -214, 147, 151, 154, 155, 146, 171, -165, -242,
	154, -215, 155, 147, -162, -215, 143, 23, -165, -165,
	-221, 96, 171, -241, 66, 179, 268, 179, 52, -85,
	-70, 11, 113, -174, -65, -63, 86, -98, -264, -66,
	-185, 122, 239, 164, 237, 230, 257, 244, 270, 235,
	271, -182, -185, -98, -98, -98, -98, 351, -125, 95,
	-67, 92, -98, -98, -173, -263, -130, -130, -130, -130,
	-130, -264, -264, -131, -130, -131, -131, -264, -131, -131,
	-264, -131, -131, -131, -131, -264, -131, -131, -131, -141,
	65, -142, -112, -114, -113, -263, -2, -136, -173, -140,
	-173, -92, -76, -75, 65, 66, -77, 65, -75, 55,
	55, -140, -98, -91, -263, -263, -263, -125, -67, -92,
	292, 296, 297, -225, -226, -229, -228, -173, -233, 155,
	-220, -220, 67, 81, -98, 9, 45, 45, 72, 69,
	-200, -200, -199, -194, -200, 70, 122, -200, 69, 68,
	69, 68, 69, 68, -85, -132, -132, 65, 69, 68,
	-186, 70, 70, 70, -85, -155, -98, -199, -85, 67,
	-211, 70, -168, -220, -159, 70, 70, -168, 70, -173,
	45, 70, -85, -173, -211, 70, -67, -173, -239, 354,
	-240, 70, -173, -173, -173, -92, -71, -264, -98, -264,
	-194, -194, -194, -204, -194, 224, -194, 224, -264, -264,
	19, 19, 19, 19, -263, -61, 315, -67, 68, 68,
	-125, 171, -131, -131, -131, -131, -131, 28, -141, 68,
	-264, -264, -264, 68, 126, -264, 68, -125, -67, 67,
	-67, -264, -91, -164, -137, -173, -137, -137, -134, 69,
	68, -194, -137, -102, -200, -199, 72, -199, 73, 73,
	67, -2, -85, -252, -253, -254, 79, 353, 87, 194,
	195, 156, 196, 197, 198, -251, -186, -186, -186, -255,
	-154, -211, -127, 159, 160, -186, -177, -217, -215, 70,
	-163, 143, 23, 143, -127, -211, 27, -238, -237, -174,
	67, 66, -122, 13, -199, 70, -98, -98, -98, -98,
	-98, -264, 72, -98, -98, -264, 16, 45, -114, 47,
	-2, -263, -173, -173, -173, -134, -137, -90, -181, 68,
	-264, -264, -264, -231, -230, 66, 150, 79, -228, -133,
	69, -200, -200, 69, 69, -229, -132, 19, -132, -254,
	72, 198, 194, 198, 198, 198, 198, 199, -256, 38,
	-258, 39, 69, -168, 70, -187, 67, -220, 70, -173,
	-168, -127, -263, 68, 96, -137, -85, -123, 14, 16,
	-264, -264, -264, -264, -60, 106, 354, -264, -264, -110,
	9, -112, -2, 126, 69, -91, -173, -230, 70, -221,
	72, 157, 69, 185, -19, -2, -7, -8, -9, -10,
	-12, -35, -13, -14, -20, -21, -15, -41, -42, -51,
	-49, -50, -46, -45, -22, -17, -23, 90, 145, 214,
	36, 36, 190, 191, -196, 144, -259, 43, -257, -208,
	42, 16, -168, -229, -177, -168, -234, -235, 171, -237,
	-226, 69, -124, -67, -172, -111, -69, -67, -172, -264,
	352, 62, 355, -125, -142, -264, -173, 73, -85, -232,
	-231, 186, -132, -67, -67, -24, -19, -138, 67, 73,
	-258, 16, -260, 40, 41, 72, 69, 67, -264, 68,
	-173, -241, 68, 52, 353, 356, -264, 67, -128, 188,
	189, -25, -26, 91, 92, 424, -137, 38, 72, 16,
	16, -232, -229, -235, 47, -239, -69, 52, -137, -132,
	70, 70, 95, 93, -26, -67, -24, 95, -19, 69,
	72, 72, 69, 173, 354, 69, -11, -18, -10, -7,
	-8, -9, 214, 90, -24, 92, 424, -232, 174, 355,
	-244, -245, 65, -132, -24, 424, -24, 95, 93, -27,
	-28, 94, -263, 356, -245, 65, -244, 65, 10, 9,
	424, 95, 424, 145, -24, 95, 93, -28, -67, -98,
	170, -243, 158, 153, 156, 30, -243, 95, 90, 424,
	145, -24, 92, -264, -264, 152, 29, 81, 95, 424,
	-24, 145, 95, 424, 145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 785, 0, 488,
	488, 488, 488, 488, 488, 0, -2, 352, 353, 354,
	0, 0, 0, 0, -2, 463, 464, 465, 467, 468,
	477, -2, 1261, 1261, 0, 0, 1261, 0, 0, 0,
	0, 41, 42, 837, 0, 480, 469, 470, 1259, 1,
	3, 794, 0, 0, 492, 495, 490, 0, 837, 837,
	0, 0, 74, 0, 0, 0, 0, 0, 835, 835,
	0, 835, 859, 0, 855, 856, 857, 0, 833, 0,
	833, 833, 833, 833, 833, 0, 409, 576, 866, 867,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	0, 0, 0, 1262, 0, 1262, 1262, 424, 0, 426,
	0, 0, 0, 1262, 0, 435, 0, 0, 442, 1262,
	310, 311, 312, 460, 461, 448, 462, 0, 0, 0,
	481, 482, 483, 484, 1261, 1261, 487, 134, 0, 154,
	872, 35, 0, 0, 0, 838, 466, 798, 0, 0,
	785, 37, 0, 488, 493, 494, 498, 496, 497, 489,
	0, 507, 516, 0, 585, 0, 590, 592, -2, -2,
	0, 627, 628, 629, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 656, 657, 658, 659, 660,
	764, 765, 766, 767, 768, 769, 770, 771, 594, 595,
	761, 818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 723, 723, 723, 723, 723,
	723, 723, 723, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 576, 58, 0, 1206, 819,
	-2, -2, 0, 0, 761, 0, -2, 1038, -2, 75,
	0, 191, 0, 864, 865, 862, 863, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 410, 1262, 1262, 413, 1263, 1264, 835, 835,
	1262, 1262, 1262, 0, 0, 0, 422, 423, 0, 329,
	330, 454, 454, 1262, 1262, 430, 0, 451, 451, 449,
	450, 445, 446, 0, 437, 0, 457, 439, 440, 443,
	471, -2, 474, 475, 476, -2, 0, 485, 486, 0,
	136, 0, 153, 0, 870, 873, 36, 1260, 0, 1262,
	0, 0, 0, 0, 30, 0, 0, 795, 0, 786,
	787, 791, 791, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 794, 35, 495, 0, 501, 499, 500, 491, 0,
	508, 0, 0, 0, 517, 0, 519, 520, 521, 522,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 612,
	613, 614, 615, 616, 617, 618, 591, 0, 605, 0,
	0, 0, 647, 648, 649, 650, 651, 652, 653, 0,
	498, 35, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 753, 0, 706, 715,
	0, 707, 716, 708, 717, 709, 0, 710, 718, 711,
	719, 712, 713, 720, 714, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 498, 0, 0, 0, 498, 0, 0,
	498, 0, 0, 0, 0, 498, 0, 0, 0, 56,
	0, 575, 0, 525, 527, 528, 529, -2, 0, 579,
	-2, 0, 0, 0, 48, 49, 0, 0, 0, 0,
	59, 1206, 61, 62, 0, 0, 0, 286, 828, 829,
	830, 0, 826, 341, 0, 197, 274, 205, 206, 207,
	267, 209, 267, 267, 0, 267, 267, 267, 267, 267,
	283, 283, 283, 283, 283, 250, 251, 252, 253, 254,
	0, 0, 227, 267, 267, 267, 231, 257, 258, 259,
	260, 261, 262, 263, 264, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 269, 269, 271, 271, 271, 271,
	271, 860, 73, 0, 1262, 0, 1262, 0, 0, 189,
	107, 0, 0, 401, 834, 0, 403, 50, 404, 405,
	406, 407, 577, 868, 869, 411, 412, 0, 0, 416,
	417, 418, 419, 420, 421, 331, 427, 0, 0, 428,
	429, 434, 0, 540, 0, 0, 454, 436, 619, 438,
	0, 0, 478, 135, 138, 0, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 137, 155,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 789, 792, 793,
	790, 798, 38, 498, 0, 772, 0, 0, 0, 502,
	33, 586, 587, 589, 606, 0, 608, 610, 518, 509,
	0, 762, -2, 596, 597, 621, 622, 623, 0, 0,
	0, 0, 619, 601, 0, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 646, 737, 738,
	0, 644, 645, 654, 503, 624, 0, 817, 35, 0,
	505, 0, 693, 0, 0, 629, 764, 0, 629, 764,
	0, 0, 0, 0, 759, 756, 0, 0, 724, 0,
	0, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 574, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 566, 0, 0,
	0, 0, 559, 0, 0, 533, 1140, 535, 0, 579,
	0, 0, 0, 560, 561, 562, 583, 0, 583, 53,
	583, 55, 0, 578, 820, 60, 0, 0, 65, 66,
	821, 822, 823, 824, 0, 762, 0, 190, 342, 344,
	347, 348, 349, 192, 193, 194, 0, 1050, 323, 1150,
	1187, -2, 317, 1076, -2, -2, 196, 276, 275, 208,
	0, 283, 283, 267, 267, 267, 267, 236, 283, 239,
	242, 243, 286, 0, 286, 286, 286, 286, 283, 0,
	0, 228, 229, 230, 219, 0, 220, 269, 222, 0,
	223, 224, 225, 226, 0, 0, 0, 0, 79, 836,
	80, 0, 108, 109, 83, 0, 399, 1262, 0, 1262,
	1262, 583, 0, 0, 455, 456, 451, 454, 0, 452,
	453, 433, 444, 0, 458, 441, 0, 0, 156, 56,
	0, 871, 1261, -2, 386, 852, 386, 386, 370, 303,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 0,
	181, 379, 381, 380, 384, 0, 0, 0, 796, 797,
	788, 31, 0, 831, 832, 773, 774, 523, 607, 609,
	611, 0, 503, 598, 619, 602, 0, 599, 0, 593,
	0, 626, -2, 0, 691, 692, 0, 0, 0, 0,
	0, 730, 0, 0, 731, 0, 702, 785, 0, 757,
	0, 0, 705, 725, 0, 0, 726, 727, 728, 729,
	680, 0, 681, 0, 0, 0, 0, 0, 687, 688,
	689, 690, 0, 0, 514, 514, 514, 0, 514, 514,
	0, 514, 514, 514, 514, 0, 514, 514, 514, 811,
	0, 0, -2, 0, 0, 583, 526, 554, 556, 0,
	551, 564, 565, 567, 0, 569, 0, 571, 572, 530,
	532, 0, 0, 579, 539, 0, 0, 0, 785, 0,
	583, 46, 47, 0, 63, 64, 0, 0, 70, 287,
	288, 0, 0, 345, 0, 0, 0, 305, 317, 313,
	314, 317, 308, 318, 309, 0, 198, 199, 200, 201,
	202, 203, 278, 0, 0, 0, 282, 0, 290, 292,
	0, 204, 277, 0, 286, 286, 283, 234, 235, 267,
	240, 286, 244, 0, 245, 246, 247, 248, 286, 0,
	265, 0, 0, 221, 0, 0, 861, -2, 73, 0,
	110, 111, 112, 0, 84, 85, 0, 0, 0, 0,
	0, 402, 51, 414, 415, 425, 332, 333, 454, 432,
	0, 620, 139, 140, 283, 0, 355, 0, 1261, 317,
	0, 371, 387, 388, 389, 390, 391, 392, 0, 1261,
	389, 0, 390, 0, 0, 0, 853, 854, 0, 0,
	0, 304, 0, 184, 0, 0, 0, 0, 800, 32,
	583, 0, 510, 763, 0, 600, 0, 603, 661, 506,
	0, 267, 267, 742, 267, 271, 745, 267, 747, 267,
	750, 0, 0, 0, 0, 0, 0, 0, 754, 704,
	760, 0, 0, 0, 511, 785, 682, 683, 684, 685,
	686, 514, 514, 665, 515, 666, 667, 514, 669, 670,
	514, 672, 673, 674, 675, 514, 677, 678, 679, 39,
	0, 811, 801, 813, 815, 0, 35, 0, 807, 0,
	546, 785, 548, 555, 0, 0, 549, 0, 550, 568,
	570, 0, -2, 538, 0, 0, 0, 794, 584, 45,
	67, 68, 69, 343, 346, 0, 319, 267, 322, 0,
	306, 307, 0, 279, 280, 0, 289, 291, 293, 268,
	232, 233, 286, 241, 237, 284, 285, 249, 283, 0,
	283, 0, 272, 0, 0, 77, 0, 0, 91, 0,
	87, 0, 0, 0, 400, 431, 541, 882, 573, 0,
	374, 0, 358, 860, 315, 351, 359, 360, 365, 366,
	0, 0, 362, 0, 374, 0, 373, 0, 378, 0,
	182, 183, 0, 0, 383, 775, 524, 662, 604, 694,
	739, 283, 743, 744, 746, 748, 749, 751, 696, 695,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 0,
	0, 0, 663, 664, 668, 671, 676, 0, 40, 0,
	816, -2, 0, 0, 0, 57, 0, 794, 552, 0,
	557, 579, 536, 0, 0, 544, 0, 0, 44, 295,
	0, 791, 0, 281, 238, 286, 266, 286, 0, 0,
	0, -2, 0, 73, 92, 93, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 86, 88, 89, 90, 884,
	878, 0, 1261, 375, 0, 197, 0, 317, 316, 372,
	0, 850, 851, 0, 1261, 374, 0, 185, 186, 0,
	0, 0, 781, 0, 740, 741, 0, 0, 0, 0,
	732, 703, 755, 0, 0, 512, 0, 0, 814, 0,
	-2, 0, 809, 808, 547, 43, 0, 534, 579, 0,
	580, 581, 582, 294, 298, 0, 303, 0, 320, 321,
	0, 255, 256, 270, 273, 0, 78, 0, 0, 94,
	95, 96, 97, 99, 100, 0, 0, 0, 839, 886,
	-2, 0, 1261, 357, 376, 195, 0, 860, 361, 367,
	368, 1261, 0, 0, 0, 0, 385, 34, 0, 0,
	697, 699, 698, 700, 0, 0, 0, 721, 722, 785,
	0, 804, 35, 0, 553, 537, 545, 299, 300, 0,
	302, 0, 296, 0, 73, -2, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 0, 0, 0,
	101, 102, 103, 104, 542, 0, 878, 0, 880, 0,
	877, 0, 356, 0, 0, 369, 0, 394, 0, 187,
	188, 181, 782, 783, 784, 776, 777, 779, 780, 701,
	0, 0, 0, 0, 812, -2, 810, 301, 0, 76,
	297, 113, 82, 0, 0, 0, 157, 29, 0, 0,
	885, 0, 883, 0, 0, 879, 296, 0, 393, 0,
	0, 184, 0, 733, 0, 736, 513, 0, 73, 0,
	0, 0, 124, 0, 0, 0, 0, 840, 887, 0,
	0, 363, 0, 395, 0, 382, 778, 734, 0, 0,
	114, 115, 0, 0, 125, 0, 0, 105, 158, 543,
	881, 875, 296, 0, 0, 324, 73, 116, 117, 118,
	119, 120, 0, 122, 0, 0, 0, 364, 0, 0,
	325, 326, 0, 81, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 735, 327, 0, 328, 0, 0, 0,
	0, 0, 126, 127, 0, 0, 0, 132, 0, 0,
	0, 334, 336, 337, 0, 0, 335, 121, 123, 0,
	129, 0, 0, 396, 397, 338, 339, 340, 0, 0,
	0, 128, 0, 133, 130,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:386
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:391
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:392
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:396
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:423
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:429
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:435
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:443
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:447
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:453
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:460
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:470
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:480
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:487
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:499
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:515
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:521
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:527
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:563
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:573
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:578
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:582
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:588
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:592
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:610
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:616
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:620
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:624
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:630
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:634
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:680
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:688
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:696
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:704
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:713
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:733
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:741
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:750
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:754
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:764
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:770
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:790
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:794
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:798
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:806
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = ""
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
			yyVAL.str = BeforeStr
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
			yyVAL.str = AfterStr
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.str = InsertStr
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.str = UpdateStr
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.str = DeleteStr
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.triggerOrder = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:858
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:874
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:880
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 123:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:884
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:900
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 127:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:906
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 128:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:911
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:916
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 130:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:922
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:940
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:946
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:950
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:970
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1004
		{
			yyVAL.exprs = nil
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1008
		{
			yyVAL.exprs = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1069
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1080
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1097
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1153
		{
			yyVAL.columnType = ColumnType{}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1229
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1345
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 256:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1487
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1492
		{
			yyVAL.sqlVal = nil
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1501
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1513
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1523
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1531
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1540
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1555
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1561
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = ""
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ""
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.colKeyOpt = colKey
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1629
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1633
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1638
		{
			yyVAL.indexOptions = nil
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1683
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = ""
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = yyDollar[1].str
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = ""
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1751
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 324:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1774
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 325:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1778
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 326:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1782
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 327:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1786
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 328:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1790
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1819
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = yyDollar[1].str
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1910
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 356:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1914
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 357:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1921
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 361:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1944
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 363:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 364:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 366:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 367:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 368:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1970
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 369:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1977
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1983
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1987
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1993
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1998
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnOrder = nil
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2049
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 382:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2066
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 385:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2093
		{
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
		}
	case 393:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2106
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2122
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2126
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2142
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2150
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 402:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2158
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2162
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2170
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2178
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2194
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2219
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2224
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2236
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2245
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2249
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2257
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2261
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2269
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2277
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2285
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2289
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2293
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2301
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2306
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2328
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2342
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = "full "
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2429
		{
			yyVAL.showFilter = nil
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2437
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2443
		{
			yyVAL.showFilter = nil
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = SessionStr
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = GlobalStr
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2467
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.statement = &Begin{}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.statement = &Begin{}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.statement = &Commit{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.statement = &Rollback{}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.statement = &OtherRead{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2574
		{
			setAllowComments(yylex, true)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.bytes2 = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.str = UnionStr
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.str = UnionAllStr
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.str = UnionDistinctStr
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2607
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = SQLCacheStr
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = DistinctStr
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2633
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = StraightJoinHint
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2642
		{
			yyVAL.selectExprs = nil
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2666
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2674
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2685
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 513:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2689
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2694
		{
			yyVAL.over = nil
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.over = yyDollar[1].over
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2783
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2798
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2802
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = nil
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2830
		{
			yyVAL.columns = nil
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2867
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2871
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2875
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2887
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.empty = struct{}{}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.empty = struct{}{}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = JoinStr
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = JoinStr
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = JoinStr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = StraightJoinStr
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = LeftJoinStr
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.str = LeftJoinStr
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = RightJoinStr
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = RightJoinStr
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = NaturalJoinStr
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3002
		{
			yyVAL.indexHints = nil
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3006
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3010
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3014
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = nil
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3059
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.str = IsNullStr
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = IsNotNullStr
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = IsTrueStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.str = IsNotTrueStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3137
		{
			yyVAL.str = IsFalseStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.str = IsNotFalseStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = EqualStr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = LessThanStr
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = GreaterThanStr
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = LessEqualStr
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = GreaterEqualStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = NotEqualStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = nil
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3244
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3248
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3256
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3272
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3276
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3338
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3362
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 664:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3384
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3388
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3400
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3404
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3408
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3412
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3420
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3424
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3428
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3445
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3453
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3457
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3461
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3465
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3469
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 697:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 698:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 699:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 701:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3631
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = BooleanModeStr
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = QueryExpansionStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3717
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3739
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3751
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = nil
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = string("")
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3797
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = nil
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3820
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.expr = &NullVal{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3873
		{
			yyVAL.exprs = nil
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3877
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3902
		{
			yyVAL.expr = nil
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.orderBy = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3945
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = AscScr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = AscScr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = DescScr
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3963
		{
			yyVAL.limit = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3975
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = ForUpdateStr
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = ShareModeStr
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4001
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4009
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4014
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4022
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4033
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4037
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4041
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			yyVAL.setExprs = nil
		}
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4050
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4121
		{
			yyVAL.bytes = []byte("charset")
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.expr = &Default{}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4145
		{
			yyVAL.byt = 0
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.byt = 1
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			yyVAL.byt = 0
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.byt = 1
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4155
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = IgnoreStr
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4160
		{
			yyVAL.sqlVal = nil
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = UniqueStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = FulltextStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = SpatialStr
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = yyDollar[1].str
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = string("")
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4255
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.EnclosedBy = nil
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4264
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.sqlVal = nil
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.sqlVal = nil
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4296
		{
			yyVAL.Fields = nil
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4300
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.Lines = nil
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4309
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.sqlVal = nil
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			decNesting(yylex)
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			skipToEnd(yylex)
		}
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			skipToEnd(yylex)
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			skipToEnd(yylex)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
