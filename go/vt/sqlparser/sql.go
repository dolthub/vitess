// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1810,
	201, 1831,
	-2, 335,
	-1, 62,
	243, 1184,
	244, 1184,
	-2, 1173,
	-1, 90,
	272, 335,
	-2, 1816,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 546,
	1, 2512,
	6, 2512,
	7, 2512,
	29, 2512,
	188, 2512,
	764, 2512,
	-2, 1219,
	-1, 559,
	188, 1841,
	-2, 1835,
	-1, 560,
	188, 1842,
	-2, 1836,
	-1, 664,
	1, 685,
	764, 685,
	-2, 683,
	-1, 673,
	1, 1325,
	8, 1325,
	9, 1325,
	10, 1325,
	17, 1325,
	18, 1325,
	19, 1325,
	20, 1325,
	22, 1325,
	24, 1325,
	35, 1325,
	36, 1325,
	65, 1325,
	66, 1325,
	67, 1325,
	68, 1325,
	69, 1325,
	71, 1325,
	72, 1325,
	75, 1325,
	76, 1325,
	78, 1325,
	79, 1325,
	97, 1325,
	527, 1325,
	575, 1325,
	653, 1325,
	764, 1325,
	-2, 1825,
	-1, 678,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 706,
	188, 2209,
	-2, 1447,
	-1, 739,
	188, 2317,
	-2, 1717,
	-1, 740,
	188, 2398,
	-2, 1449,
	-1, 741,
	188, 2229,
	-2, 1450,
	-1, 810,
	188, 2180,
	-2, 1681,
	-1, 813,
	188, 2195,
	-2, 1599,
	-1, 814,
	188, 2198,
	-2, 1599,
	-1, 815,
	188, 2408,
	-2, 1599,
	-1, 817,
	188, 2196,
	-2, 1599,
	-1, 818,
	188, 2409,
	-2, 1599,
	-1, 819,
	188, 2410,
	-2, 1599,
	-1, 878,
	188, 2197,
	-2, 1599,
	-1, 961,
	188, 2297,
	-2, 1599,
	-1, 962,
	188, 2298,
	-2, 1599,
	-1, 1074,
	110, 2525,
	121, 2525,
	188, 2525,
	-2, 1792,
	-1, 1075,
	110, 2656,
	121, 2656,
	188, 2656,
	-2, 1793,
	-1, 1080,
	110, 2553,
	121, 2553,
	188, 2553,
	-2, 1794,
	-1, 1081,
	110, 2604,
	121, 2604,
	188, 2604,
	-2, 1795,
	-1, 1082,
	110, 2605,
	121, 2605,
	188, 2605,
	-2, 1796,
	-1, 1083,
	110, 2452,
	121, 2452,
	188, 2452,
	-2, 1801,
	-1, 1085,
	110, 2581,
	121, 2581,
	188, 2581,
	-2, 1803,
	-1, 1257,
	454, 1198,
	-2, 1202,
	-1, 1259,
	454, 1198,
	-2, 1202,
	-1, 1384,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1386,
	1, 686,
	764, 686,
	-2, 683,
	-1, 1409,
	1, 1326,
	8, 1326,
	9, 1326,
	10, 1326,
	17, 1326,
	18, 1326,
	19, 1326,
	20, 1326,
	22, 1326,
	24, 1326,
	35, 1326,
	36, 1326,
	65, 1326,
	66, 1326,
	67, 1326,
	68, 1326,
	69, 1326,
	71, 1326,
	72, 1326,
	75, 1326,
	76, 1326,
	78, 1326,
	79, 1326,
	97, 1326,
	527, 1326,
	575, 1326,
	653, 1326,
	764, 1326,
	-2, 1825,
	-1, 1420,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 1714,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1716,
	1, 685,
	764, 685,
	-2, 683,
	-1, 2274,
	188, 1845,
	-2, 1693,
	-1, 2277,
	188, 2745,
	-2, 1696,
	-1, 2278,
	188, 2746,
	-2, 1697,
	-1, 2279,
	188, 1844,
	-2, 1840,
	-1, 2429,
	76, 98,
	78, 98,
	-2, 102,
	-1, 2447,
	188, 2321,
	-2, 1797,
	-1, 2454,
	1, 906,
	764, 906,
	-2, 683,
	-1, 2643,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 2725,
	8, 59,
	9, 59,
	10, 59,
	-2, 1479,
	-1, 2742,
	1, 1371,
	8, 1371,
	9, 1371,
	10, 1371,
	17, 1371,
	18, 1371,
	19, 1371,
	20, 1371,
	22, 1371,
	24, 1371,
	35, 1371,
	36, 1371,
	65, 1371,
	66, 1371,
	67, 1371,
	68, 1371,
	69, 1371,
	71, 1371,
	72, 1371,
	75, 1371,
	76, 1371,
	78, 1371,
	79, 1371,
	97, 1371,
	527, 1371,
	575, 1371,
	653, 1371,
	764, 1371,
	-2, 1825,
	-1, 2919,
	213, 1038,
	217, 1038,
	-2, 794,
	-1, 2920,
	213, 1108,
	217, 1108,
	-2, 795,
	-1, 3190,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 3294,
	1, 1748,
	26, 1748,
	75, 1748,
	764, 1748,
	-2, 1825,
	-1, 3496,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 3516,
	207, 931,
	213, 1038,
	217, 1038,
	-2, 929,
	-1, 3707,
	78, 2092,
	79, 2092,
	188, 2092,
	-2, 1227,
	-1, 3708,
	77, 1759,
	253, 1759,
	-2, 2141,
	-1, 3709,
	77, 1760,
	253, 1760,
	-2, 2710,
	-1, 3953,
	8, 59,
	9, 59,
	10, 59,
	-2, 1755,
	-1, 4099,
	47, 1856,
	-2, 1854,
	-1, 4362,
	8, 59,
	9, 59,
	10, 59,
	-2, 1756,
	-1, 4381,
	316, 432,
	-2, 1912,
	-1, 4382,
	316, 433,
	-2, 1953,
	-1, 4383,
	316, 434,
	-2, 2129,
	-1, 4615,
	105, 418,
	107, 418,
	109, 418,
	-2, 79,
	-1, 4696,
	107, 425,
	108, 425,
	109, 425,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83662

var yyAct = [...]int{
	752, 44, 4669, 4632, 4619, 4570, 4607, 4606, 698, 1190,
	571, 2444, 4489, 4572, 4239, 3, 1412, 2936, 3422, 4354,
	4093, 4488, 4095, 4388, 4232, 4242, 8, 2367, 4241, 7,
	4240, 6, 494, 708, 657, 4387, 4273, 28, 4243, 9,
	3302, 712, 4234, 3270, 4088, 44, 4375, 1634, 4058, 3458,
	4374, 4214, 2368, 3789, 1419, 2721, 3980, 3914, 2935, 108,
	3652, 107, 1705, 4138, 725, 3359, 4106, 4094, 4352, 3907,
	3866, 2304, 3503, 1537, 1748, 2658, 3867, 3622, 3901, 4043,
	3043, 2516, 3713, 550, 553, 4097, 2182, 3705, 598, 1460,
	3858, 2917, 3180, 3925, 689, 3948, 653, 675, 101, 2471,
	3003, 3471, 2916, 3812, 2535, 3436, 2709, 1467, 3795, 3360,
	3900, 751, 3303, 2249, 3617, 678, 1414, 4233, 3697, 1150,
	1750, 3116, 491, 2989, 2947, 3508, 2924, 2923, 3079, 3628,
	1747, 3584, 2634, 816, 1218, 134, 3596, 2173, 2475, 3016,
	2502, 3163, 105, 1162, 1390, 1416, 2461, 1565, 2641, 2872,
	2640, 3178, 2726, 1207, 1158, 2607, 2850, 717, 1079, 1379,
	3456, 2239, 1566, 3575, 711, 2873, 1411, 3232, 2235, 2565,
	3279, 2237, 699, 156, 2638, 1268, 1753, 2174, 2152, 2111,
	715, 1418, 1267, 1244, 548, 2589, 1724, 2498, 1448, 1615,
	2970, 1611, 1076, 2357, 1456, 2046, 2281, 1451, 2712, 673,
	694, 2875, 1301, 1279, 2086, 2164, 1641, 3083, 1475, 2116,
	2242, 1153, 1397, 669, 1614, 682, 670, 1202, 1189, 1389,
	574, 1166, 2431, 1388, 1072, 1073, 1385, 1387, 1263, 656,
	556, 573, 2078, 2045, 2320, 3714, 1151, 2079, 1171, 641,
	1717, 129, 1177, 125, 1278, 665, 1154, 4696, 4690, 692,
	4677, 4661, 4647, 4615, 4613, 4585, 4582, 4581, 1187, 4580,
	2477, 4565, 4563, 4469, 2943, 4465, 4460, 100, 3375, 2950,
	3877, 1203, 701, 4140, 4139, 3630, 2109, 679, 2520, 1181,
	3449, 2552, 4336, 4021, 2551, 2955, 2954, 3872, 3873, 3870,
	3871, 3419, 3420, 3504, 3506, 86, 94, 1439, 4640, 4019,
	3876, 99, 4602, 97, 4600, 4685, 4639, 3452, 4601, 3358,
	2951, 3129, 4022, 2981, 3450, 688, 1727, 4402, 4401, 42,
	4605, 4350, 3981, 71, 662, 655, 2957, 566, 2933, 4549,
	3796, 705, 667, 47, 4220, 3451, 2934, 3983, 2670, 2236,
	3798, 2549, 4029, 3293, 2038, 122, 2549, 1353, 4500, 4235,
	4308, 1312, 3278, 3895, 3179, 4349, 3260, 42, 42, 3001,
	3577, 505, 4219, 3767, 3299, 3564, 4633, 1173, 3300, 1179,
	1180, 570, 4053, 3764, 3613, 3852, 3329, 1183, 2446, 2937,
	4409, 42, 3856, 3328, 3139, 89, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 2369, 2381, 2379, 2378, 2377, 2380,
	2376, 2375, 2374, 2370, 2371, 2388, 2372, 2387, 2386, 2373,
	2385, 2384, 2383, 2382, 1149, 2381, 2379, 2378, 2377, 2380,
	2376, 2375, 2374, 89, 89, 2388, 88, 2387, 2386, 3976,
	2385, 2384, 2383, 2382, 3138, 3898, 4335, 4424, 4206, 42,
	4161, 3597, 2953, 3977, 4102, 2826, 2956, 89, 1165, 3899,
	3689, 1161, 1170, 2961, 2946, 545, 2588, 3801, 3982, 4113,
	1257, 1354, 114, 112, 113, 3314, 3315, 2115, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	3313, 4358, 1500, 2623, 3299, 3400, 1066, 1616, 3300, 1617,
	568, 3401, 3402, 2113, 2114, 2441, 2442, 2155, 2156, 4353,
	3799, 3800, 3802, 3803, 3804, 89, 4358, 2440, 96, 148,
	2582, 145, 2948, 146, 668, 1222, 1223, 2864, 4355, 1226,
	2863, 2112, 4426, 2865, 2190, 1242, 1243, 1251, 4337, 2133,
	3650, 1331, 3322, 565, 1399, 1402, 1403, 1404, 1400, 564,
	1401, 1406, 3233, 4355, 2713, 2714, 96, 96, 1339, 150,
	149, 3926, 2959, 3933, 89, 1224, 1225, 3931, 3213, 1240,
	2949, 1241, 1242, 1243, 2473, 2474, 136, 2750, 1213, 650,
	96, 2587, 1399, 1402, 1403, 1404, 1400, 137, 1401, 1406,
	1298, 2488, 153, 4359, 2207, 2487, 1403, 1404, 1227, 3535,
	4365, 2481, 2480, 2492, 2482, 2499, 3670, 2478, 3674, 3672,
	3102, 2619, 2478, 4639, 2157, 1206, 2571, 4601, 4359, 4599,
	2570, 540, 563, 543, 4462, 644, 645, 4463, 1214, 4464,
	3347, 1351, 1252, 1253, 1352, 3236, 1356, 1357, 96, 2153,
	2154, 647, 2084, 646, 3477, 3058, 4684, 645, 4640, 2392,
	666, 151, 4638, 152, 643, 1228, 1260, 4637, 4602, 2163,
	2162, 598, 1348, 2161, 1150, 2160, 2159, 4366, 1380, 2158,
	1375, 1335, 1336, 1383, 4086, 3109, 4020, 2608, 2611, 2609,
	2610, 2612, 2613, 2614, 2615, 1410, 1415, 3107, 3893, 3885,
	1302, 1433, 1434, 1150, 3883, 1150, 1150, 3191, 3108, 1150,
	108, 3106, 4505, 2996, 3813, 4492, 651, 3036, 3443, 1150,
	4504, 4442, 3816, 4324, 4047, 4303, 4301, 1509, 1511, 3475,
	3470, 1513, 4163, 1254, 3814, 3815, 3618, 3619, 3620, 3621,
	4166, 2948, 3842, 3040, 3191, 1328, 4165, 3000, 1407, 3191,
	4155, 732, 1454, 733, 735, 736, 737, 738, 4461, 1314,
	3824, 734, 2316, 1528, 3847, 4559, 3041, 1532, 1533, 1534,
	1535, 1536, 2952, 1540, 4491, 2601, 3629, 2945, 2144, 4406,
	2998, 2145, 1305, 4038, 1479, 2536, 3822, 108, 142, 2949,
	4036, 4033, 3446, 4418, 1382, 4400, 1266, 3434, 4692, 4084,
	1314, 1314, 4693, 3437, 3438, 3439, 3440, 3441, 3576, 4663,
	4662, 3540, 4623, 3505, 4659, 4578, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 4457, 1559, 1560, 1562, 1562, 1562, 4567, 1567, 1567,
	1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 4016, 1457, 1425, 679, 679, 551, 664, 147,
	3506, 138, 544, 2583, 3984, 1221, 1481, 2188, 3128, 1338,
	3240, 3239, 3241, 3238, 1409, 3321, 2313, 4416, 3245, 1567,
	3237, 3234, 3985, 4157, 3235, 3599, 3243, 3119, 1510, 4367,
	3528, 3797, 2394, 2395, 2393, 3911, 567, 4455, 4456, 143,
	3242, 3437, 3438, 3439, 3440, 3441, 1393, 1321, 3108, 126,
	554, 1216, 3182, 4329, 1538, 2189, 3472, 3244, 3246, 2166,
	3106, 2595, 3183, 3320, 3627, 1394, 3182, 2191, 1315, 1322,
	1323, 1325, 1326, 1327, 4198, 1329, 1330, 3432, 1332, 1333,
	1334, 4218, 1337, 3101, 1340, 1341, 1342, 1343, 1344, 1376,
	4408, 4560, 3855, 2962, 2932, 4008, 2948, 154, 555, 4059,
	2948, 109, 1567, 1567, 4207, 3987, 1568, 1569, 1215, 2999,
	4162, 1319, 1558, 4356, 4030, 3892, 1561, 1563, 1564, 1436,
	1377, 1436, 1436, 1442, 1435, 1436, 1440, 1440, 1441, 1441,
	1447, 3002, 4114, 2944, 1376, 3986, 1405, 2501, 4356, 109,
	87, 2085, 1265, 1259, 2949, 2115, 3854, 115, 2949, 2484,
	128, 2964, 3884, 1347, 4334, 1261, 2485, 3882, 3602, 3600,
	132, 140, 139, 109, 3598, 4302, 1601, 1313, 4035, 4032,
	3445, 2113, 2114, 4013, 1405, 1320, 1324, 1316, 2146, 4490,
	3601, 552, 1306, 3542, 3543, 1722, 1405, 4156, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 3074, 3165, 2664, 3073, 3173,
	3175, 3174, 3247, 1712, 1361, 3167, 4012, 1604, 136, 1317,
	1318, 4011, 4010, 1239, 4009, 1472, 1473, 1471, 137, 141,
	4007, 109, 1178, 552, 136, 1472, 1473, 1471, 1732, 1733,
	1731, 2667, 2665, 2660, 1474, 3541, 2526, 4576, 2662, 4571,
	4017, 4146, 3626, 4437, 1474, 4150, 4151, 1175, 1174, 1602,
	1603, 136, 2530, 2531, 1079, 4574, 4370, 4371, 4237, 1079,
	1373, 2048, 141, 663, 3024, 3025, 3623, 3624, 2525, 2314,
	2315, 2169, 1255, 1178, 1236, 1237, 1238, 3529, 3530, 3531,
	1176, 2117, 130, 1235, 131, 1234, 3075, 3076, 1233, 1232,
	4414, 1150, 2661, 2663, 2666, 2668, 4318, 1264, 549, 3859,
	3860, 3585, 2080, 1371, 3586, 108, 3587, 107, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	2119, 2170, 4230, 2118, 552, 1610, 4686, 3364, 1165, 2038,
	598, 1726, 2468, 4673, 4444, 4443, 1165, 2470, 3086, 2470,
	3514, 2537, 1421, 1423, 1697, 1698, 1699, 1700, 1701, 598,
	1749, 4699, 1626, 4694, 4678, 4650, 1172, 642, 2470, 2549,
	4307, 668, 1310, 1608, 4189, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 1757, 4078, 1500,
	3098, 138, 3891, 1408, 3888, 3118, 3168, 3086, 1631, 3625,
	3468, 3103, 3096, 1702, 1725, 3095, 3035, 3031, 3006, 1730,
	3005, 1707, 2596, 2150, 1150, 1619, 1737, 1150, 1735, 3094,
	1620, 2042, 2042, 2042, 2042, 1367, 1262, 2519, 2087, 1169,
	2222, 108, 2221, 2092, 2470, 1710, 2470, 1421, 1423, 2088,
	2220, 1755, 2090, 1168, 2089, 3118, 1366, 1362, 1363, 1364,
	1365, 1368, 1369, 1370, 1372, 1703, 4583, 4081, 3463, 1742,
	1392, 3181, 1191, 1605, 1606, 3169, 4466, 2470, 1182, 489,
	598, 123, 2538, 552, 2566, 2073, 3009, 3874, 2036, 1515,
	1516, 3008, 4573, 4575, 1422, 696, 652, 3649, 89, 2055,
	2056, 2057, 2058, 2059, 3363, 2060, 3044, 2469, 1309, 2469,
	2797, 3312, 2049, 3092, 3086, 2143, 3086, 3033, 3085, 3089,
	127, 1165, 3088, 3093, 3087, 2468, 3032, 2061, 2469, 2106,
	2062, 2063, 2064, 4671, 3092, 3086, 4672, 2051, 4670, 2068,
	3089, 1627, 2052, 3088, 3093, 2794, 2126, 89, 2870, 2076,
	1514, 1512, 1628, 2767, 2744, 2630, 675, 675, 675, 675,
	3513, 140, 139, 2175, 2040, 2044, 1720, 2550, 2527, 2071,
	2436, 1150, 1713, 2179, 1711, 1721, 1415, 1708, 2216, 1422,
	3117, 1728, 2065, 4327, 2067, 108, 1729, 2252, 1746, 123,
	108, 1739, 2215, 1517, 2469, 1630, 2469, 1745, 1531, 1530,
	2124, 1529, 2209, 3086, 1517, 2047, 1374, 118, 1165, 1514,
	1480, 3087, 2468, 1296, 2217, 1204, 4160, 1538, 2446, 1517,
	2053, 2054, 1490, 4188, 2210, 1500, 4187, 2469, 2193, 1500,
	3117, 2306, 2305, 1256, 3112, 2219, 2860, 2104, 3465, 2075,
	4196, 4473, 3115, 4438, 4439, 3875, 3780, 3778, 3868, 1610,
	1610, 3947, 2082, 3109, 2091, 121, 2081, 1493, 1494, 1495,
	1496, 1497, 1490, 2273, 3107, 1500, 3094, 2037, 2192, 3085,
	96, 2642, 1150, 1757, 2197, 2194, 4024, 2121, 2097, 2098,
	2851, 1661, 2100, 1515, 1516, 3127, 108, 2165, 2168, 3492,
	3491, 2125, 3126, 2307, 3125, 2309, 120, 2311, 2103, 1479,
	2122, 1540, 675, 3381, 3379, 1538, 4435, 4436, 3779, 2312,
	2317, 3124, 2323, 4025, 2326, 108, 3123, 2215, 1515, 1516,
	4223, 4222, 4474, 3122, 4459, 3121, 3120, 2279, 2741, 2738,
	1245, 2288, 2735, 1627, 3067, 3066, 679, 679, 679, 679,
	2167, 2072, 2560, 3166, 1628, 2260, 2286, 2287, 2285, 2245,
	1474, 3493, 2361, 2343, 2346, 2282, 679, 3064, 3063, 2389,
	2390, 2359, 2218, 1471, 4180, 3380, 2187, 675, 2171, 3054,
	2185, 2184, 2195, 2196, 2186, 2198, 1230, 2183, 96, 2208,
	1474, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 701,
	1648, 1500, 3053, 2261, 2262, 2263, 3068, 3052, 3051, 2445,
	2259, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 3050, 2451, 1500, 1079, 688, 2272, 669, 3065,
	3049, 1430, 1431, 1757, 2283, 2127, 1158, 3048, 2130, 2131,
	2132, 2257, 2134, 2135, 1246, 3047, 2136, 2618, 1220, 1247,
	2137, 2867, 2866, 2138, 1424, 2269, 2561, 2139, 2140, 2617,
	2141, 2142, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 1538, 2102, 1500, 1472, 1473, 1471, 2338, 2339,
	1432, 1380, 3262, 1662, 1272, 1185, 4682, 2279, 1184, 2358,
	1231, 2427, 679, 2429, 1474, 2358, 2453, 2810, 1421, 1423,
	4676, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 2868, 2397, 1500, 3004, 4649, 2545, 4653,
	4620, 4652, 2402, 2788, 2404, 2787, 4561, 2407, 2458, 1715,
	2467, 2430, 103, 1472, 1473, 1471, 2241, 2327, 2328, 2329,
	2330, 2331, 4509, 2428, 4629, 1472, 1473, 1471, 1417, 1219,
	1249, 4376, 1474, 4508, 4501, 4507, 3823, 679, 2450, 3817,
	1258, 2355, 4527, 4687, 1474, 1473, 1471, 2508, 2509, 2510,
	2511, 2512, 2495, 2496, 2497, 3029, 3203, 2452, 110, 2243,
	116, 2543, 2544, 1474, 2280, 3373, 3908, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2434, 2443, 2504, 2505, 2506, 2507, 2438, 2437,
	1468, 2457, 2529, 4665, 2539, 2455, 2513, 3191, 2258, 2479,
	2541, 2542, 4688, 2310, 4698, 1610, 2547, 2265, 2267, 2268,
	1422, 1472, 1473, 1471, 4405, 2266, 3894, 2243, 2514, 4680,
	2518, 2764, 2765, 2766, 1067, 1068, 1069, 89, 4314, 2500,
	1474, 2341, 2334, 2335, 2336, 2349, 1167, 4305, 2340, 2284,
	2342, 2345, 2348, 2546, 2353, 2354, 2515, 3071, 4298, 4227,
	2364, 1472, 1473, 1471, 2483, 2486, 4543, 4054, 2489, 2490,
	2491, 4376, 4023, 4451, 2396, 4450, 2398, 2399, 4540, 3906,
	1474, 2403, 696, 2405, 2406, 3173, 3175, 3174, 2424, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2521, 3905, 2523, 1675, 1678, 1679, 1680, 1681, 1682,
	1683, 3904, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 4542, 1663, 1664, 1665, 1645,
	1644, 1676, 1646, 1649, 1643, 1647, 1642, 4539, 3903, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 3833, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 2254, 3074, 1500, 2664, 3073, 3787, 3786, 1430, 1431,
	3553, 42, 45, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 71, 2255, 1500, 3487, 2256,
	4299, 1424, 93, 3756, 3754, 47, 75, 76, 2667, 2665,
	2660, 696, 3486, 72, 3755, 2662, 3485, 2366, 3605, 3603,
	1472, 1473, 1471, 1472, 1473, 1471, 88, 1432, 4511, 3604,
	2789, 4454, 4158, 3922, 3200, 1562, 2250, 2251, 3484, 1474,
	4697, 3483, 1474, 63, 3424, 1421, 1423, 89, 1472, 1473,
	1471, 4300, 1150, 3376, 2975, 4376, 2973, 1391, 3197, 2960,
	1472, 1473, 1471, 3075, 3076, 1304, 2087, 1474, 3264, 2661,
	2663, 2666, 2668, 1303, 3448, 3447, 4681, 2088, 4664, 1474,
	2090, 4499, 2089, 4159, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 2578, 1677, 1500, 1472,
	1473, 1471, 4658, 1472, 1473, 1471, 1384, 2586, 4587, 4579,
	1666, 4467, 4448, 4447, 2553, 4393, 4392, 1484, 1474, 1487,
	2976, 4386, 1474, 4385, 4389, 4164, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1410, 1485, 1486, 1483, 4061, 3696, 1472,
	1473, 1471, 2563, 3532, 1383, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 3019, 1474, 1500,
	2562, 49, 90, 56, 55, 58, 3018, 2228, 80, 3761,
	96, 2572, 675, 3759, 2224, 2557, 3610, 1422, 2230, 2232,
	2095, 2730, 2731, 2732, 2605, 2226, 1302, 2094, 2556, 3608,
	2234, 2308, 2096, 2083, 62, 92, 91, 2568, 2558, 1744,
	1743, 57, 1716, 1714, 2229, 2723, 1299, 562, 1276, 4498,
	2564, 2225, 4497, 4496, 2729, 4493, 2233, 77, 4423, 4403,
	3173, 3175, 3174, 560, 3173, 3175, 3174, 3173, 3175, 3174,
	1275, 4344, 4338, 1738, 2768, 2273, 4229, 1345, 4228, 2604,
	3173, 3175, 3174, 4154, 4153, 1757, 4134, 4085, 1454, 1454,
	4037, 4034, 4006, 3975, 2227, 2631, 2573, 3974, 2708, 3943,
	3897, 2223, 3896, 3832, 3831, 2577, 2231, 2593, 3830, 3829,
	3820, 3819, 3818, 2585, 3785, 3782, 3757, 69, 70, 3752,
	3743, 163, 3739, 492, 504, 3734, 3733, 163, 2724, 3732,
	2592, 3606, 163, 3595, 3583, 3579, 3572, 2648, 3571, 2279,
	3570, 3490, 640, 3482, 3481, 78, 3480, 79, 3407, 3212,
	3211, 163, 3209, 679, 2600, 3069, 2971, 2603, 2869, 1527,
	163, 1526, 1525, 2625, 2584, 2555, 2762, 2763, 2099, 696,
	84, 2622, 2627, 163, 2624, 2791, 4060, 2743, 696, 60,
	4203, 696, 3633, 4551, 163, 1164, 3769, 4481, 3769, 4413,
	2801, 3999, 679, 3998, 2639, 3698, 2717, 2282, 3717, 2728,
	3633, 696, 4068, 696, 3769, 4315, 163, 640, 3426, 1164,
	1457, 3769, 4143, 3633, 4142, 3633, 4137, 2432, 492, 163,
	4082, 696, 3633, 4041, 2432, 2574, 3191, 696, 3410, 2452,
	2629, 696, 675, 3633, 3918, 675, 2038, 3850, 2038, 3849,
	82, 83, 3409, 2754, 2752, 2753, 3769, 3768, 3633, 3632,
	3417, 3416, 3408, 696, 3413, 3414, 2534, 64, 81, 2773,
	66, 67, 73, 102, 74, 1310, 2283, 3413, 3412, 1757,
	2743, 696, 2598, 2597, 696, 2332, 2580, 2433, 3017, 2435,
	1079, 2247, 2769, 3017, 2433, 2599, 2038, 2332, 696, 2777,
	2211, 696, 1633, 1632, 2783, 3299, 2855, 2853, 2038, 3300,
	2533, 4631, 2626, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 2147, 89, 1500, 1308, 3717,
	2811, 2743, 2148, 1755, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 2246, 2332, 1500, 2211,
	2211, 4345, 2852, 1307, 3717, 2258, 1308, 4216, 3958, 3191,
	2809, 3633, 2211, 3427, 3415, 2733, 2734, 3210, 3046, 2736,
	2737, 2439, 2820, 2739, 2740, 2818, 2817, 2743, 2616, 2927,
	2930, 2825, 2827, 2602, 2101, 2554, 2549, 598, 3023, 2834,
	2835, 2836, 2548, 2248, 1310, 1378, 2854, 2110, 2038, 1736,
	2922, 1734, 2925, 2926, 1613, 1381, 89, 4441, 2856, 2879,
	2722, 2857, 4316, 4183, 1703, 4064, 3788, 2918, 1725, 3777,
	3774, 2476, 679, 2503, 2478, 679, 3185, 2042, 2770, 2771,
	2772, 3057, 3056, 2499, 3011, 2915, 1314, 2858, 2528, 2861,
	2494, 1619, 2713, 2714, 2517, 2980, 2493, 1706, 1295, 3834,
	2567, 1211, 2871, 1210, 4668, 4667, 4644, 4642, 4636, 4635,
	4608, 4603, 2175, 3061, 4597, 4595, 3921, 59, 61, 4545,
	4544, 3913, 2179, 87, 3010, 3909, 3698, 2778, 2779, 2780,
	2781, 2782, 3425, 3014, 3013, 2994, 2977, 2716, 2710, 2149,
	2120, 1740, 2802, 2803, 2804, 2972, 1311, 539, 2720, 2974,
	2719, 2206, 1461, 1462, 2718, 2807, 2205, 2203, 2201, 3021,
	2200, 2199, 2204, 2202, 4433, 85, 4348, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3214,
	2997, 1500, 2751, 1464, 1459, 4185, 2759, 3037, 1466, 1465,
	2758, 1463, 4395, 4120, 3889, 133, 3198, 4211, 3865, 3201,
	2963, 2965, 3204, 3772, 3522, 2966, 2967, 3020, 2968, 2969,
	3015, 3521, 3406, 163, 541, 542, 3405, 3404, 2931, 2921,
	4343, 4342, 675, 4100, 3920, 4098, 3030, 2273, 3084, 492,
	3080, 3091, 3187, 3090, 3097, 4396, 3100, 1757, 3034, 3189,
	3193, 3194, 3195, 3164, 3113, 3111, 3039, 3077, 3692, 3042,
	3221, 3172, 144, 4149, 4340, 3055, 4148, 3205, 4339, 1461,
	1462, 4040, 561, 2576, 2575, 2093, 3105, 3060, 3104, 1413,
	43, 3059, 3072, 4, 4472, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 3271, 163, 1500,
	1464, 2279, 4026, 4027, 3881, 1466, 1465, 3728, 1463, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 3296, 3301, 1500, 43, 3533, 675, 1449, 106, 3378,
	3248, 2632, 1629, 3250, 1293, 108, 1277, 3295, 4624, 1450,
	1274, 3215, 1273, 1217, 4071, 3184, 4070, 1391, 3186, 2250,
	2251, 3827, 3950, 3825, 3453, 2522, 3306, 1270, 1271, 3828,
	1408, 3826, 4346, 3221, 1350, 3304, 4304, 4044, 3022, 3790,
	3216, 3776, 2979, 2321, 2322, 640, 3261, 3026, 3027, 2172,
	1269, 3192, 2095, 2094, 1359, 3206, 1445, 1446, 163, 1443,
	1444, 3208, 1437, 1438, 701, 3949, 2757, 4515, 3218, 4514,
	4513, 4003, 2621, 1250, 2756, 3219, 3682, 3222, 3297, 163,
	3223, 690, 679, 4430, 3374, 4429, 4428, 4427, 4212, 4175,
	4167, 3387, 4118, 3929, 3078, 691, 3928, 3249, 102, 3655,
	3017, 2983, 2984, 2985, 4645, 492, 4646, 4645, 3298, 4468,
	3845, 3476, 3263, 3474, 3473, 3045, 2819, 2798, 3362, 2795,
	2761, 1380, 2066, 1469, 3382, 1209, 1208, 4646, 4225, 3403,
	3355, 2244, 683, 4531, 3308, 104, 3310, 3311, 3172, 3272,
	3273, 3274, 3275, 3276, 3277, 687, 686, 68, 598, 3442,
	4256, 65, 4258, 23, 3691, 3386, 4257, 22, 4394, 2879,
	4259, 24, 3309, 3372, 3366, 3367, 3368, 1, 3369, 3370,
	4260, 25, 4254, 18, 4253, 17, 679, 4333, 3428, 677,
	3316, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 3354, 50, 1500, 4252, 16, 4255, 19,
	2594, 2513, 3377, 2128, 3365, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 4251, 15, 1500,
	597, 3455, 4245, 11, 4280, 39, 3515, 4278, 37, 4277,
	36, 4281, 40, 3421, 4276, 32, 4275, 31, 4274, 30,
	4271, 27, 4270, 26, 3811, 3444, 3225, 3810, 3384, 4250,
	14, 4247, 13, 4246, 12, 3385, 4244, 10, 3616, 3435,
	2995, 3454, 4328, 4197, 3251, 3821, 3252, 3253, 2707, 3254,
	3255, 1723, 4015, 3256, 1188, 2532, 1300, 4341, 4099, 4209,
	3423, 4208, 3510, 3794, 3793, 2988, 2987, 3433, 1294, 3265,
	3266, 3267, 3268, 2581, 2108, 3081, 3082, 3007, 3070, 4173,
	2620, 2151, 3464, 2606, 1360, 2454, 3469, 2459, 3851, 3502,
	4052, 3501, 1610, 1610, 3510, 3459, 3478, 3500, 3615, 3460,
	3517, 3518, 3519, 3511, 1152, 3462, 117, 3524, 3525, 2559,
	3527, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288,
	3289, 3290, 3479, 3461, 3545, 1229, 513, 3550, 2456, 2941,
	3488, 3489, 4210, 1297, 2940, 2958, 2648, 3512, 2472, 1386,
	3494, 3077, 3495, 3971, 3582, 3411, 2939, 2938, 4306, 2942,
	3547, 1703, 3172, 1638, 2918, 3631, 1636, 3544, 1637, 1635,
	3648, 1640, 1639, 519, 1621, 4380, 3695, 3523, 1470, 745,
	135, 3114, 648, 649, 124, 521, 1508, 2755, 2862, 1077,
	3536, 3687, 3538, 1078, 1070, 4471, 2746, 4221, 4101, 4213,
	4369, 3653, 3565, 3551, 3567, 3554, 1455, 3556, 3558, 3560,
	3562, 4103, 3927, 3654, 2808, 1557, 2356, 714, 661, 3712,
	3588, 3589, 3590, 3566, 3946, 4105, 2264, 3706, 728, 727,
	726, 723, 724, 2391, 3612, 4357, 2253, 3580, 3292, 3291,
	3294, 108, 1482, 3702, 3418, 1358, 703, 1429, 1428, 2175,
	1427, 1426, 1420, 672, 2425, 3028, 3306, 3656, 1398, 2179,
	1396, 1395, 1741, 163, 3700, 3304, 3634, 1609, 2715, 2711,
	671, 676, 1164, 46, 2760, 1248, 3688, 4112, 111, 3701,
	685, 684, 693, 3371, 29, 21, 20, 1205, 3766, 2637,
	2659, 1186, 48, 54, 53, 51, 1425, 52, 2982, 2524,
	4379, 4569, 3665, 3666, 3667, 1280, 3668, 4586, 4618, 3669,
	1355, 38, 3671, 35, 3673, 34, 33, 4272, 4266, 4265,
	4268, 1562, 1562, 1562, 1567, 1567, 1567, 1570, 1571, 1572,
	1573, 1567, 1567, 1567, 4267, 4264, 4269, 3722, 4263, 4262,
	4261, 3699, 4279, 4249, 3742, 4248, 4553, 3781, 4552, 5,
	98, 95, 3172, 41, 119, 492, 3690, 1148, 2, 0,
	0, 0, 1164, 163, 3704, 0, 0, 3718, 3719, 3720,
	3721, 0, 3716, 640, 640, 0, 0, 0, 640, 3723,
	0, 0, 0, 0, 3715, 0, 0, 163, 0, 3724,
	3725, 3726, 640, 640, 0, 0, 0, 0, 163, 3744,
	0, 0, 492, 492, 492, 492, 0, 3806, 3807, 3808,
	3745, 3746, 3747, 3753, 0, 0, 0, 163, 163, 163,
	163, 163, 3773, 163, 3737, 3763, 0, 3740, 0, 0,
	3770, 3771, 0, 3853, 0, 0, 0, 3835, 0, 163,
	163, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	163, 3653, 0, 3837, 0, 3791, 0, 0, 3639, 3640,
	3641, 3642, 3643, 3644, 3645, 3646, 3647, 3784, 0, 0,
	0, 3792, 1568, 1569, 0, 0, 0, 0, 1601, 1602,
	1603, 3805, 0, 1561, 1563, 1564, 3658, 3861, 3862, 3848,
	1164, 0, 3809, 0, 0, 0, 3839, 0, 0, 0,
	3510, 3841, 0, 640, 640, 640, 0, 0, 1164, 3838,
	3659, 3660, 3661, 3662, 3663, 0, 0, 0, 0, 3684,
	3685, 3686, 0, 3863, 0, 3510, 3836, 0, 0, 3840,
	0, 0, 0, 0, 3843, 3844, 3880, 3846, 0, 640,
	0, 0, 0, 0, 3869, 0, 0, 0, 0, 0,
	0, 3084, 0, 3080, 3091, 0, 3090, 0, 0, 0,
	0, 0, 0, 3857, 0, 3886, 0, 163, 163, 0,
	3864, 3890, 163, 0, 1164, 0, 0, 0, 0, 0,
	0, 3924, 0, 0, 0, 3681, 163, 640, 3878, 163,
	163, 163, 163, 3915, 3917, 0, 0, 3887, 0, 0,
	0, 163, 3221, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3916, 0, 0, 0, 0, 0,
	0, 0, 3172, 0, 3955, 0, 3775, 3706, 0, 0,
	0, 0, 675, 0, 0, 3960, 0, 0, 0, 3783,
	0, 108, 0, 107, 0, 3653, 3653, 3930, 3932, 3680,
	0, 3902, 0, 163, 0, 3912, 3952, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 3910, 0, 0, 0,
	3306, 0, 0, 0, 0, 0, 0, 0, 0, 3304,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 0, 0, 1500, 0, 1164, 3995, 1164, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 1164, 0,
	1150, 3954, 0, 1164, 1164, 1164, 0, 0, 0, 3969,
	0, 0, 0, 163, 108, 163, 4001, 0, 3972, 4002,
	0, 0, 0, 0, 0, 3962, 3172, 3968, 0, 3951,
	0, 0, 0, 0, 3993, 0, 3959, 3996, 669, 0,
	3963, 0, 3362, 0, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 0, 0, 1500, 0,
	0, 3362, 0, 3172, 4000, 4056, 4057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	163, 163, 0, 0, 0, 3991, 3992, 3978, 0, 3988,
	3964, 3965, 3966, 3967, 3989, 3990, 3979, 0, 0, 0,
	0, 0, 679, 0, 0, 4080, 0, 1164, 0, 0,
	0, 4004, 0, 4005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4018, 4014, 0, 0, 0,
	0, 4046, 0, 4028, 4048, 4049, 0, 4051, 4031, 0,
	0, 4042, 0, 0, 4039, 0, 0, 0, 0, 0,
	0, 0, 4045, 0, 0, 0, 0, 0, 0, 0,
	0, 4073, 0, 4074, 0, 0, 3955, 4125, 0, 0,
	0, 4062, 4063, 0, 3679, 0, 0, 4065, 4066, 4072,
	4089, 108, 0, 4124, 0, 0, 4050, 0, 0, 4075,
	0, 4077, 0, 4079, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 3259, 0, 0, 0, 163, 163,
	640, 640, 640, 163, 163, 4087, 0, 0, 4122, 0,
	0, 3934, 3935, 3936, 3937, 0, 0, 0, 0, 3941,
	4144, 0, 0, 3944, 3945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4131, 0, 0, 4119,
	0, 4126, 4129, 0, 4123, 4117, 0, 4121, 0, 0,
	0, 0, 0, 4174, 0, 0, 4145, 4128, 4147, 4179,
	4132, 0, 0, 0, 0, 0, 0, 0, 3172, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 0, 3258, 0, 0, 0, 0,
	4104, 4107, 4152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4194, 0, 0, 4177, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 4170,
	3257, 1500, 1538, 0, 0, 4171, 3706, 3362, 4169, 0,
	4181, 4172, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 4226, 4204, 3224, 4184, 1150, 4182, 1150, 0,
	0, 4191, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 4193, 4236, 0, 0, 4195, 0, 0, 0, 3172,
	4190, 4238, 0, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 4055, 0, 1500, 0, 0,
	0, 0, 4224, 0, 0, 1150, 0, 4192, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	0, 0, 1500, 0, 0, 0, 0, 0, 4325, 0,
	0, 0, 4297, 0, 0, 0, 0, 0, 0, 4313,
	0, 0, 3915, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 4309, 3362, 1500, 4310, 4317,
	0, 0, 4090, 4091, 4092, 4368, 4330, 4372, 3306, 0,
	4320, 0, 0, 3916, 0, 4326, 4361, 3304, 4323, 0,
	0, 4332, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 4321, 3202, 4347, 0, 0, 0, 0, 0, 1150,
	4131, 1150, 4360, 0, 0, 4364, 2365, 1150, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 4384, 0,
	0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 0, 0, 1500, 4390, 4141, 0, 0,
	163, 0, 4399, 0, 0, 0, 0, 0, 4425, 0,
	4411, 0, 0, 0, 4417, 0, 4363, 3271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4419, 4404, 3915, 0, 0, 1164, 0, 0, 0,
	0, 0, 4168, 4434, 163, 4421, 163, 0, 4107, 3362,
	1164, 0, 4412, 0, 0, 1164, 4422, 4420, 4446, 4178,
	4432, 4415, 0, 4440, 3916, 0, 0, 4431, 0, 0,
	0, 0, 4186, 695, 697, 0, 0, 0, 0, 4479,
	0, 4445, 640, 640, 0, 4483, 598, 4478, 0, 4470,
	0, 4452, 0, 0, 4449, 0, 0, 4495, 4458, 0,
	0, 0, 0, 0, 0, 0, 0, 4484, 4482, 0,
	0, 0, 0, 0, 4373, 4377, 4494, 0, 0, 0,
	0, 0, 1150, 4391, 0, 1150, 0, 4487, 4480, 0,
	0, 1150, 1150, 1150, 1150, 4486, 1150, 1150, 4502, 0,
	1150, 1150, 4485, 0, 163, 163, 0, 0, 0, 0,
	1164, 4533, 4517, 163, 4519, 1150, 0, 4510, 0, 4519,
	4512, 4503, 0, 4519, 4529, 0, 4452, 4521, 4522, 4523,
	4506, 4538, 4526, 0, 0, 3306, 4534, 1164, 4537, 1150,
	0, 4541, 1150, 4530, 3304, 1150, 4548, 3653, 0, 4516,
	0, 4550, 0, 0, 0, 0, 4546, 4566, 4577, 108,
	0, 4568, 4558, 0, 2445, 4557, 0, 4556, 4453, 0,
	0, 598, 4589, 4555, 4562, 4554, 0, 4564, 4588, 0,
	0, 0, 0, 0, 0, 0, 4594, 0, 0, 0,
	1150, 0, 0, 0, 1150, 0, 1150, 0, 0, 4612,
	1150, 4609, 0, 0, 4596, 0, 0, 4598, 0, 0,
	0, 1150, 1150, 1150, 1150, 0, 1150, 4519, 0, 4519,
	0, 0, 0, 4621, 0, 4610, 0, 0, 0, 0,
	0, 0, 0, 0, 4519, 4519, 4519, 0, 0, 4519,
	0, 0, 0, 4641, 1150, 4643, 1150, 0, 1150, 4628,
	0, 0, 0, 4654, 0, 0, 4524, 4397, 4656, 0,
	0, 0, 0, 0, 0, 0, 0, 4519, 4666, 4519,
	0, 0, 0, 0, 0, 0, 0, 0, 1150, 4674,
	0, 0, 0, 4651, 1150, 0, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 4519, 0, 0, 534, 0, 0, 0, 1150, 0,
	0, 1150, 0, 0, 0, 4519, 0, 4584, 0, 4679,
	163, 1150, 0, 0, 0, 163, 0, 1150, 163, 163,
	163, 4519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4519, 0, 4691, 3568, 3569, 3199,
	4519, 0, 0, 0, 2920, 3578, 0, 0, 3581, 0,
	2929, 2929, 0, 0, 3196, 3591, 3592, 3593, 3594, 0,
	0, 0, 0, 3607, 3609, 3611, 0, 0, 1489, 1488,
	1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490,
	3614, 0, 1500, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 0, 0, 1500, 0, 0,
	506, 1164, 4655, 163, 0, 0, 0, 0, 0, 4660,
	0, 1164, 1164, 0, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4532, 163, 640, 1164, 4535, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 0, 0,
	2792, 640, 0, 0, 1458, 0, 520, 532, 533, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 0, 0, 1164, 0, 0, 0,
	640, 0, 1164, 0, 1164, 4591, 0, 1164, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 522, 518, 0,
	0, 527, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 1164, 1164, 0, 0, 0, 538, 0,
	0, 0, 0, 157, 0, 0, 558, 3730, 3731, 529,
	0, 0, 0, 0, 0, 3738, 0, 0, 3741, 0,
	0, 0, 658, 0, 0, 3748, 3749, 3750, 3751, 0,
	0, 157, 0, 0, 3758, 3760, 3762, 0, 0, 0,
	3765, 0, 0, 0, 658, 702, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 157, 4657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3171, 0,
	0, 0, 524, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	157, 525, 0, 0, 1164, 1164, 1164, 0, 0, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 0, 0,
	0, 0, 732, 2913, 733, 735, 736, 737, 738, 163,
	0, 0, 734, 2316, 0, 163, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 2885, 0, 0, 0,
	0, 2706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 530, 0, 0, 2774, 0, 0,
	531, 0, 0, 0, 0, 0, 1391, 0, 2655, 0,
	0, 0, 2874, 0, 2679, 2745, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 2882, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 0,
	1500, 0, 0, 0, 0, 0, 2654, 0, 0, 163,
	0, 0, 507, 0, 0, 0, 0, 2642, 0, 0,
	0, 0, 0, 2676, 1164, 0, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 2313, 0, 523,
	510, 511, 0, 537, 0, 0, 0, 512, 514, 0,
	508, 536, 535, 0, 0, 3171, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 2929, 2929, 2929, 0, 2929,
	2929, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2886, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 2895, 0, 526, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 2645, 3497, 2657, 0, 3496, 2656,
	2647, 163, 0, 2680, 0, 0, 0, 0, 0, 0,
	0, 0, 2884, 2907, 2689, 1164, 1164, 1164, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 163,
	640, 0, 0, 0, 0, 0, 0, 1164, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2678, 2700, 2651, 2650, 0, 640, 0, 1164, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	2646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 163, 0, 0, 157, 0, 3498, 3499, 0, 0,
	2670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 2929, 2902, 0, 0, 0, 0,
	0, 492, 492, 492, 492, 1164, 0, 0, 1164, 492,
	492, 1164, 492, 0, 0, 0, 0, 0, 0, 0,
	2911, 1164, 0, 1164, 0, 492, 492, 1164, 163, 492,
	0, 2892, 0, 2696, 1164, 0, 1164, 1164, 1164, 1164,
	1164, 1164, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 2704, 3171,
	2314, 2315, 0, 0, 0, 0, 0, 0, 0, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 2904, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 1164, 0, 0, 3400, 1066, 0,
	3390, 3391, 3393, 3401, 3402, 3392, 3394, 3395, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3396, 3397, 3398, 3399, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2877, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2889, 0, 0, 0, 0, 0, 0, 0, 0, 2672,
	1164, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3171,
	0, 2649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2878, 2880, 0, 0, 2883, 0, 0,
	2888, 0, 2893, 2890, 2891, 0, 2894, 2887, 0, 2897,
	2896, 2898, 0, 2899, 2900, 2901, 0, 0, 2903, 2905,
	2906, 2908, 2909, 2910, 0, 0, 0, 2881, 2912, 0,
	0, 2673, 2674, 0, 0, 2677, 0, 2914, 2682, 0,
	2687, 2684, 2685, 0, 2688, 2681, 0, 2691, 2690, 2692,
	0, 2693, 2694, 2695, 0, 0, 2697, 2698, 2699, 2701,
	2702, 2703, 0, 0, 0, 2675, 2705, 0, 0, 163,
	0, 1164, 0, 0, 0, 2669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2212, 2213,
	2214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 640, 640, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 2671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2333, 0, 0, 0, 0, 0,
	0, 0, 2337, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2400, 2401, 0, 0, 3171,
	0, 0, 0, 2408, 2409, 2410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 2423, 0, 0, 1612, 0, 0, 1087, 0, 0,
	0, 0, 1087, 1164, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 1719,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	3171, 1719, 558, 492, 0, 1752, 2929, 2929, 1164, 1754,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 157, 157,
	157, 157, 157, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2929, 2929,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 1164, 492, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 157,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 1752,
	157, 157, 157, 157, 0, 2633, 0, 713, 0, 0,
	0, 0, 658, 0, 0, 3171, 0, 0, 0, 0,
	157, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 495, 0, 0,
	0, 0, 702, 0, 157, 0, 158, 0, 640, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 659, 0, 0, 492, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 163, 3171, 659, 2240, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 158, 1156,
	0, 0, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 2569, 0, 658, 0, 157, 2240, 2240, 2240,
	158, 0, 0, 2240, 0, 2240, 2240, 2240, 0, 2240,
	2240, 0, 495, 158, 1087, 2240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2240,
	2240, 2240, 2240, 0, 0, 2240, 2240, 2240, 2240, 2240,
	2240, 0, 0, 0, 2240, 2240, 2240, 2240, 2240, 2240,
	2240, 2240, 2240, 2240, 2240, 2240, 0, 0, 0, 0,
	157, 157, 157, 1164, 0, 0, 0, 492, 1087, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 1164, 0, 0,
	2628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 1752, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 157,
	157, 0, 0, 0, 157, 157, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2775, 0, 2776, 0, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2784, 2785, 2786, 0, 0, 0, 2790, 0, 2793,
	0, 0, 2796, 0, 0, 2799, 2800, 0, 0, 0,
	2805, 2806, 0, 0, 0, 0, 2812, 2813, 2814, 0,
	0, 2815, 0, 2816, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 1164,
	0, 0, 0, 2821, 2822, 2823, 2824, 0, 0, 2828,
	2829, 2830, 2831, 2832, 2833, 1164, 0, 0, 2837, 2838,
	2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848,
	0, 2849, 0, 1164, 0, 0, 0, 158, 0, 0,
	0, 2706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 2655, 1164,
	0, 0, 0, 0, 2679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 2654, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 2645, 2644, 2657, 2664, 2643, 2656,
	2647, 0, 0, 2680, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 2689, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 157, 0, 658, 0, 0,
	0, 2667, 2665, 2660, 0, 0, 0, 0, 2662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2678, 2700, 2651, 2650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2652, 2653, 0, 0,
	2670, 0, 2661, 2663, 2666, 2668, 0, 0, 0, 0,
	0, 0, 0, 3190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 157, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 2696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3226, 3227, 3228, 3229, 3230, 3231,
	0, 1087, 1087, 0, 0, 0, 0, 1754, 2704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2240, 0, 0, 0, 0,
	0, 0, 2240, 2240, 2240, 2240, 2240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 0, 0, 160, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 2672,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 1160, 0, 0,
	0, 157, 0, 0, 0, 0, 157, 0, 2683, 157,
	2859, 1754, 0, 1087, 0, 0, 0, 0, 160, 0,
	0, 2649, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 160, 0, 0, 2913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	1088, 0, 0, 0, 0, 1088, 0, 0, 0, 1391,
	0, 0, 0, 0, 0, 0, 0, 2885, 0, 0,
	0, 2673, 2674, 0, 0, 2677, 0, 0, 2682, 0,
	2687, 2684, 2685, 0, 2688, 2681, 0, 2691, 2690, 2692,
	0, 2693, 2694, 2695, 157, 0, 2697, 2698, 2699, 2701,
	2702, 2703, 0, 0, 0, 2675, 2705, 0, 0, 0,
	0, 0, 0, 0, 0, 2669, 2882, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 495, 495, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 158, 158, 158, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2671,
	0, 0, 0, 0, 0, 0, 2886, 0, 0, 0,
	3636, 3637, 3638, 0, 0, 0, 0, 2895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3657,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3664,
	0, 0, 0, 2884, 2907, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3675, 3676, 3677, 3678, 0,
	0, 0, 0, 3683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3693, 3694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2240, 1754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 3703, 0, 0, 157, 702, 0, 0,
	0, 0, 0, 2240, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 0, 0, 0, 659, 0, 2176, 0,
	0, 0, 0, 0, 0, 160, 2902, 0, 0, 0,
	158, 0, 0, 158, 158, 158, 158, 0, 0, 0,
	0, 496, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 2911, 0, 158, 0, 0, 0, 659, 0, 0,
	0, 0, 2892, 0, 0, 0, 89, 0, 0, 0,
	0, 732, 0, 733, 735, 736, 737, 738, 0, 0,
	0, 734, 2316, 3388, 3389, 0, 0, 0, 1087, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 2275, 0,
	0, 0, 0, 3383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2904, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 0, 659, 0, 158,
	42, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 0, 71, 0, 0, 2360, 0, 0,
	0, 93, 2877, 0, 47, 0, 0, 0, 0, 0,
	0, 160, 157, 0, 0, 0, 2313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2889, 0, 0, 0, 0, 0, 496, 0, 0,
	157, 0, 0, 158, 158, 158, 89, 0, 0, 0,
	0, 1088, 4289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2275, 0,
	0, 1156, 0, 4282, 0, 0, 4617, 4620, 4616, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 0, 0,
	0, 157, 157, 0, 2878, 2880, 0, 0, 2883, 0,
	0, 2888, 0, 2893, 2890, 2891, 0, 2894, 2887, 0,
	2897, 2896, 2898, 0, 2899, 2900, 2901, 0, 0, 2903,
	2905, 2906, 2908, 2909, 2910, 0, 0, 0, 2881, 2912,
	0, 0, 0, 0, 0, 0, 0, 0, 2914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	49, 90, 56, 55, 58, 0, 158, 0, 0, 96,
	0, 0, 158, 158, 0, 4283, 0, 158, 158, 0,
	0, 3938, 3939, 3940, 0, 3942, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 3953,
	57, 3956, 3957, 1086, 0, 0, 0, 0, 1155, 0,
	0, 0, 3961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1192, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 2876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2314,
	2315, 0, 3994, 0, 0, 0, 69, 70, 0, 4285,
	3997, 0, 0, 0, 0, 0, 0, 0, 0, 4294,
	4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0, 4295,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 84,
	0, 0, 0, 0, 0, 0, 3400, 1066, 60, 3390,
	3391, 3393, 3401, 3402, 3392, 3394, 3395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3396,
	3397, 3398, 3399, 4067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4083, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4296, 4284, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 4108, 4109, 4110, 4111, 0, 0, 0, 0, 0,
	0, 4115, 4116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4127, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4130, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 157, 0,
	0, 0, 0, 0, 158, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 496, 496, 496, 158, 0,
	659, 0, 4176, 0, 0, 0, 0, 0, 0, 160,
	160, 160, 160, 160, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4199, 4200, 4201,
	4202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4217,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 2635, 2636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 158,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	1752, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4311, 4312, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 1088, 0, 0, 4322, 0,
	2275, 0, 0, 0, 0, 0, 0, 0, 0, 4331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	160, 0, 0, 0, 660, 0, 2177, 0, 4351, 0,
	0, 0, 0, 4362, 0, 0, 0, 0, 160, 0,
	0, 160, 160, 160, 160, 0, 658, 0, 0, 0,
	0, 0, 0, 660, 0, 658, 157, 0, 0, 0,
	0, 160, 1087, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 4407, 0, 0, 0,
	4410, 0, 496, 0, 0, 0, 2276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 584, 595,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 158,
	0, 0, 158, 0, 0, 660, 1088, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 160, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 4547, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 575, 578, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4590,
	0, 0, 4592, 4593, 587, 0, 0, 0, 0, 591,
	0, 0, 0, 0, 0, 4604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 2176, 3062, 0,
	160, 160, 0, 0, 0, 160, 160, 0, 0, 0,
	0, 0, 3099, 0, 0, 0, 0, 579, 4634, 0,
	0, 3110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3130, 3131, 3132,
	3133, 3134, 3135, 3136, 3137, 0, 157, 3140, 3141, 3142,
	3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152,
	3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162,
	0, 3176, 3177, 0, 0, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 1086, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2275, 0, 580, 581, 588, 2123, 592, 593,
	596, 0, 0, 158, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	1087, 1718, 557, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 557, 0, 0, 1751, 0, 0,
	0, 3305, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3317, 3318, 3319, 0, 3323, 3324, 3325, 3326,
	3327, 0, 0, 3330, 3331, 3332, 3333, 3334, 3335, 3336,
	3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346,
	0, 3348, 3349, 3350, 3351, 3352, 3353, 0, 3356, 3357,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2129, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 160, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 495, 495, 495, 495, 0,
	0, 0, 0, 495, 495, 0, 495, 0, 3534, 0,
	0, 0, 0, 0, 0, 0, 660, 160, 0, 495,
	495, 586, 158, 495, 0, 660, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 2181, 0, 0,
	0, 0, 0, 0, 3573, 3574, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 2276, 0,
	0, 0, 0, 0, 0, 658, 0, 0, 0, 2181,
	0, 2181, 0, 0, 2318, 0, 0, 0, 0, 0,
	0, 2319, 0, 0, 0, 0, 2181, 2325, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4289, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 4282, 0, 0, 0, 0,
	4695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	1155, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 3305, 0, 0, 2176, 0, 0, 0, 0, 0,
	71, 0, 49, 90, 56, 55, 58, 93, 0, 0,
	47, 96, 159, 0, 493, 0, 3727, 4283, 3729, 0,
	0, 0, 160, 159, 3735, 3736, 0, 160, 0, 0,
	160, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 89, 0, 0, 0, 496, 0, 4289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 159, 1157, 0, 0, 4282,
	0, 0, 0, 0, 4689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	159, 0, 0, 0, 0, 160, 0, 0, 69, 70,
	0, 4285, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291,
	0, 4295, 0, 0, 160, 0, 78, 0, 79, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 84, 0, 0, 0, 96, 0, 0, 0, 0,
	60, 4283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 495, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 42, 0, 0, 0, 2177, 0, 0, 0, 3879,
	495, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4296, 4284,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4285, 0, 89, 0, 0,
	0, 0, 0, 4289, 0, 4294, 4286, 4287, 4288, 4292,
	4293, 4290, 0, 4291, 0, 4295, 0, 0, 0, 0,
	78, 0, 79, 0, 4282, 0, 0, 0, 0, 4683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	2276, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 49, 90, 56, 55, 58, 0, 0, 659, 158,
	96, 0, 0, 0, 0, 3305, 4283, 0, 0, 0,
	0, 0, 4296, 4284, 3970, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 159, 0, 0, 0, 0, 2579,
	0, 160, 0, 0, 0, 0, 0, 0, 59, 61,
	493, 0, 0, 2591, 87, 0, 0, 495, 2591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 1648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 69, 70, 159,
	4285, 0, 0, 0, 0, 0, 0, 496, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 160, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2727, 0, 0, 0, 0, 0, 0,
	84, 1662, 0, 160, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 495, 0, 495, 0, 495,
	2749, 0, 0, 1086, 1086, 0, 0, 0, 0, 2181,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 160, 0, 0, 493, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 496, 0, 0, 4133, 0,
	4135, 4136, 0, 496, 496, 496, 496, 0, 0, 0,
	0, 496, 496, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 496, 0,
	160, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 158,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 0,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 0, 1663, 1664, 1665, 1645, 1644, 1676,
	1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 0, 59, 61, 0,
	0, 0, 0, 87, 2978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2986, 2990, 0, 0, 0, 0,
	0, 495, 0, 4319, 0, 0, 0, 495, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 3012, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3305, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2591,
	0, 0, 0, 0, 0, 3038, 0, 2591, 0, 0,
	2591, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 93, 2181, 2181, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	89, 160, 0, 0, 159, 0, 4289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4282, 0, 0,
	0, 0, 4675, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3188,
	0, 0, 0, 0, 0, 0, 0, 3188, 3188, 3188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2181, 0, 493, 0, 496, 0,
	659, 0, 0, 0, 159, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 496, 0, 0, 159, 4283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 493, 493, 493, 493, 62, 92, 91,
	3305, 0, 0, 3269, 57, 0, 0, 0, 159, 159,
	159, 159, 159, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4285, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293, 4290,
	0, 4291, 0, 4295, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 0, 84, 0, 0, 660, 160, 0, 0,
	42, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 159, 159,
	0, 93, 0, 0, 47, 2178, 0, 0, 3429, 3430,
	3431, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	159, 159, 159, 159, 0, 0, 0, 0, 0, 0,
	3188, 3188, 0, 0, 0, 496, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	3467, 0, 4289, 0, 496, 0, 0, 0, 0, 0,
	4296, 4284, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 4282, 0, 0, 0, 0, 4648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 2274, 0, 0, 3520, 0,
	0, 2727, 0, 0, 3526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2727, 0, 2727, 0, 0, 0,
	3546, 0, 0, 0, 0, 0, 0, 2727, 0, 2727,
	3555, 2727, 2727, 2727, 2727, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 0, 496, 0, 496, 0, 0,
	49, 90, 56, 55, 58, 0, 159, 0, 0, 96,
	0, 0, 0, 0, 0, 4283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 3188, 0, 0, 0, 0, 0, 3635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3651, 0, 0,
	159, 159, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2274, 0, 0, 1157, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4294,
	4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0, 4295,
	0, 0, 0, 0, 78, 0, 79, 0, 85, 0,
	1086, 0, 0, 2181, 0, 0, 0, 0, 2727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	496, 0, 0, 0, 42, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 496, 0, 0, 160, 71, 0,
	0, 0, 0, 159, 0, 93, 0, 0, 47, 159,
	159, 0, 0, 0, 159, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 71, 0, 0, 0, 4289, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 4296, 4284, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 4282, 0, 0,
	0, 0, 4630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2990, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 89, 496, 0, 0, 0, 0,
	4289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3188, 0, 0, 0, 0, 0,
	0, 4282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 71, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 496, 4283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 89, 57, 0,
	0, 0, 0, 4289, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4285, 4282, 0, 0, 0, 0, 4626,
	0, 0, 1751, 4294, 4286, 4287, 4288, 4292, 4293, 4290,
	3919, 4291, 0, 4295, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 159, 85, 0, 2181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 69, 70, 0, 4285, 660, 0,
	0, 159, 60, 0, 0, 0, 0, 4294, 4286, 4287,
	4288, 4292, 4293, 4290, 4627, 4291, 0, 4295, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 1086, 159, 4283, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	4296, 4284, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3188, 0, 0, 3188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4296, 4284, 660, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 159, 69, 70, 0,
	4285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291, 0,
	4295, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2274, 0, 0,
	0, 0, 0, 0, 0, 4069, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 42, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 4076, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4289, 0, 0,
	59, 61, 0, 0, 0, 42, 87, 4296, 4284, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 4282, 71,
	0, 0, 0, 4625, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 4622, 0, 0, 0, 0, 4289, 0, 0,
	0, 159, 0, 0, 0, 0, 159, 0, 0, 159,
	0, 1756, 0, 0, 0, 0, 0, 0, 4282, 0,
	0, 0, 85, 3188, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 493, 0, 0, 0, 0,
	4283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 4215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4283, 0, 0, 159, 0, 0, 0, 59, 61, 493,
	0, 0, 0, 87, 0, 0, 0, 0, 62, 92,
	91, 69, 70, 0, 4285, 57, 3188, 0, 0, 0,
	0, 0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 0, 78,
	2181, 79, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 84, 0, 0, 0, 0, 42,
	0, 0, 0, 60, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	93, 69, 70, 47, 4285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 0, 78,
	0, 79, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4289, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 4296, 4284, 60, 66, 67, 73, 0, 74, 0,
	0, 0, 4282, 0, 0, 0, 0, 4614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4215, 0, 0, 0, 0, 0, 0, 2274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 1661, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4296, 4284, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 2181, 0, 4283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 3188, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 71, 0, 0, 0, 0, 2181, 0, 93, 0,
	159, 47, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4289,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	493, 0, 0, 0, 0, 69, 70, 0, 4285, 0,
	4282, 0, 0, 0, 0, 4611, 493, 0, 4294, 4286,
	4287, 4288, 4292, 4293, 4290, 0, 4291, 0, 4295, 0,
	0, 159, 0, 78, 0, 79, 0, 1662, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 159, 0, 0, 0, 0, 60, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4283, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 159, 159, 0, 0, 4296, 4284, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 493, 493, 493, 493, 0, 0, 0, 0,
	493, 493, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 493, 0, 159,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4294, 4286, 4287, 4288,
	4292, 4293, 4290, 0, 4291, 0, 4295, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 1675, 1678,
	1679, 1680, 1681, 1682, 1683, 60, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 0,
	1663, 1664, 1665, 1645, 1644, 1676, 1646, 1649, 1643, 1647,
	1642, 0, 0, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 4296, 4284, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 42, 449, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 88, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 1677, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 96, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 493, 354, 0, 0, 177, 199, 314, 0,
	0, 85, 246, 0, 393, 0, 468, 493, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 493, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 493, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 161, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 493, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 493, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 493, 0, 493, 0, 493, 0, 0, 0,
	0, 0, 681, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 109, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 674,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 0, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 902, 1044, 0, 493, 449, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 358, 909, 865, 186,
	0, 0, 856, 707, 857, 890, 260, 706, 1018, 963,
	1046, 946, 978, 988, 259, 245, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 159, 172, 479, 191, 811,
	315, 0, 0, 477, 424, 340, 0, 0, 944, 0,
	795, 796, 929, 987, 876, 974, 1050, 910, 979, 1051,
	89, 0, 0, 0, 0, 732, 559, 733, 735, 736,
	737, 738, 0, 0, 171, 734, 739, 740, 741, 0,
	939, 984, 1063, 855, 704, 721, 860, 810, 4376, 1036,
	897, 898, 264, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 469, 990, 999, 1013, 919,
	377, 284, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 493, 826, 0, 720, 0, 870, 716, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	722, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	341, 867, 798, 1034, 927, 302, 192, 1040, 925, 824,
	993, 871, 1022, 1056, 913, 312, 869, 196, 866, 872,
	911, 354, 1002, 1008, 808, 199, 314, 1019, 891, 904,
	729, 0, 393, 980, 468, 710, 279, 0, 966, 392,
	316, 461, 994, 1042, 467, 914, 443, 478, 483, 272,
	947, 235, 421, 262, 255, 896, 1012, 859, 285, 376,
	250, 307, 930, 986, 892, 242, 997, 973, 1024, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 294,
	286, 1027, 1025, 905, 362, 225, 957, 950, 943, 812,
	472, 1059, 258, 1009, 474, 180, 407, 406, 917, 293,
	1010, 181, 170, 386, 182, 303, 205, 1030, 487, 221,
	310, 451, 709, 278, 353, 982, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1006, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 1049, 323,
	267, 271, 287, 298, 981, 390, 428, 475, 975, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1004, 217, 238,
	429, 211, 1038, 1021, 968, 932, 938, 861, 0, 210,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 282, 992, 730, 731, 247, 801, 1053, 212, 868,
	1052, 350, 357, 349, 1055, 1054, 460, 1039, 969, 956,
	954, 862, 1037, 967, 955, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 958, 426, 321, 0,
	207, 0, 425, 1047, 1065, 440, 227, 880, 1014, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 996, 1062, 361, 394, 234, 470, 422, 263,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	243, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 807, 200, 213, 313, 1061, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 347,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 928, 197, 0, 0, 203, 0, 204,
	206, 915, 202, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 449, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 358, 909, 865, 186, 0, 0, 856, 707,
	857, 890, 260, 706, 1018, 963, 1046, 946, 978, 988,
	259, 245, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 479, 191, 811, 315, 0, 0, 477,
	424, 340, 0, 0, 944, 0, 795, 796, 929, 987,
	876, 974, 1050, 910, 979, 1051, 89, 0, 696, 0,
	0, 732, 559, 733, 735, 736, 737, 738, 0, 0,
	171, 734, 739, 740, 741, 0, 939, 984, 1063, 855,
	704, 721, 860, 810, 0, 1036, 897, 898, 264, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 469, 990, 999, 1013, 919, 377, 284, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 826, 0,
	720, 0, 870, 716, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 722, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 341, 867, 798, 1034,
	927, 302, 192, 1040, 925, 824, 993, 871, 1022, 1056,
	913, 312, 869, 196, 866, 872, 911, 354, 1002, 1008,
	808, 199, 314, 1019, 891, 904, 729, 0, 393, 980,
	468, 710, 279, 0, 966, 392, 316, 461, 994, 1042,
	467, 914, 443, 478, 483, 272, 947, 235, 421, 262,
	255, 896, 1012, 859, 285, 376, 250, 307, 930, 986,
	892, 242, 997, 973, 1024, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 294, 286, 1027, 1025, 905,
	362, 225, 957, 950, 943, 812, 472, 1059, 258, 1009,
	474, 180, 407, 406, 917, 293, 1010, 181, 170, 386,
	182, 303, 205, 1030, 487, 221, 310, 451, 709, 278,
	353, 982, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1006, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 1049, 323, 267, 271, 287, 298,
	981, 390, 428, 475, 975, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1004, 217, 238, 429, 211, 1038, 1021,
	968, 932, 938, 861, 0, 210, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 282, 992, 730,
	731, 247, 801, 1053, 212, 868, 1052, 350, 357, 349,
	1055, 1054, 460, 1039, 969, 956, 954, 862, 1037, 967,
	955, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 958, 426, 321, 0, 207, 0, 425, 1047,
	1065, 440, 227, 880, 1014, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 996, 1062,
	361, 394, 234, 470, 422, 263, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 243, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 807, 200,
	213, 313, 1061, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 347, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 473, 253, 948, 970, 1001, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 928,
	197, 0, 0, 203, 0, 204, 206, 915, 202, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 449, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 358, 909,
	865, 186, 0, 0, 856, 707, 857, 890, 260, 706,
	1018, 963, 1046, 946, 978, 988, 259, 245, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 479,
	191, 811, 315, 0, 0, 477, 424, 340, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 559, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 704, 721, 860, 810,
	0, 1036, 897, 898, 264, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 469, 990, 999,
	1013, 919, 377, 284, 0, 0, 0, 0, 718, 719,
	2238, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 341, 867, 798, 1034, 927, 302, 192, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 312, 869, 196,
	866, 872, 911, 354, 1002, 1008, 808, 199, 314, 1019,
	891, 904, 729, 0, 393, 980, 468, 710, 279, 0,
	966, 392, 316, 461, 994, 1042, 467, 914, 443, 478,
	483, 272, 947, 235, 421, 262, 255, 896, 1012, 859,
	285, 376, 250, 307, 930, 986, 892, 242, 997, 973,
	1024, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 294, 286, 1027, 1025, 905, 362, 225, 957, 950,
	943, 812, 472, 1059, 258, 1009, 474, 180, 407, 406,
	917, 293, 1010, 181, 170, 386, 182, 303, 205, 1030,
	487, 221, 310, 451, 709, 278, 353, 982, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 1006, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	1049, 323, 267, 271, 287, 298, 981, 390, 428, 475,
	975, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1004,
	217, 238, 429, 211, 1038, 1021, 968, 932, 938, 861,
	0, 210, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 282, 992, 730, 731, 247, 801, 1053,
	212, 868, 1052, 350, 357, 349, 1055, 1054, 460, 1039,
	969, 956, 954, 862, 1037, 967, 955, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 958, 426,
	321, 0, 207, 0, 425, 1047, 1065, 440, 227, 880,
	1014, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 996, 1062, 361, 394, 234, 470,
	422, 263, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 243, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 807, 200, 213, 313, 1061, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 347, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948,
	970, 1001, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 928, 197, 0, 0, 203,
	0, 204, 206, 915, 202, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 449, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 358, 909, 865, 186, 0, 0,
	856, 707, 857, 890, 260, 706, 1018, 963, 1046, 946,
	978, 988, 259, 245, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 479, 191, 811, 315, 0,
	0, 477, 424, 340, 0, 0, 944, 0, 795, 796,
	929, 987, 876, 974, 1050, 910, 979, 1051, 89, 0,
	0, 0, 0, 732, 559, 733, 735, 736, 737, 738,
	0, 0, 171, 734, 739, 740, 741, 0, 939, 984,
	1063, 855, 704, 721, 860, 810, 0, 1036, 897, 898,
	264, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 469, 990, 999, 1013, 919, 377, 284,
	0, 0, 0, 0, 718, 719, 700, 0, 0, 0,
	826, 0, 720, 0, 870, 716, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 722, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 341, 867,
	798, 1034, 927, 302, 192, 1040, 925, 824, 993, 871,
	1022, 1056, 913, 312, 869, 196, 866, 872, 911, 354,
	1002, 1008, 808, 199, 314, 1019, 891, 904, 729, 0,
	393, 980, 468, 710, 279, 0, 966, 392, 316, 461,
	994, 1042, 467, 914, 443, 478, 483, 272, 947, 235,
	421, 262, 255, 896, 1012, 859, 285, 376, 250, 307,
	930, 986, 892, 242, 997, 973, 1024, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 294, 286, 1027,
	1025, 905, 362, 225, 957, 950, 943, 812, 472, 1059,
	258, 1009, 474, 180, 407, 406, 917, 293, 1010, 181,
	170, 386, 182, 303, 205, 1030, 487, 221, 310, 451,
	709, 278, 353, 982, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 1006, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 1049, 323, 267, 271,
	287, 298, 981, 390, 428, 475, 975, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1004, 217, 238, 429, 211,
	1038, 1021, 968, 932, 938, 861, 0, 210, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 282,
	992, 730, 731, 247, 801, 1053, 212, 868, 1052, 350,
	357, 349, 1055, 1054, 460, 1039, 969, 956, 954, 862,
	1037, 967, 955, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 958, 426, 321, 0, 207, 0,
	425, 1047, 1065, 440, 227, 880, 1014, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	996, 1062, 361, 394, 234, 470, 422, 263, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 243, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	807, 200, 213, 313, 1061, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 347, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 473, 253, 948, 970, 1001, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 928, 197, 0, 0, 203, 0, 204, 206, 915,
	202, 1032, 1057, 977, 991, 902, 1044, 0, 0, 449,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	358, 909, 865, 186, 0, 0, 856, 707, 857, 890,
	260, 706, 1018, 963, 1046, 946, 978, 988, 259, 245,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 479, 191, 811, 315, 0, 0, 477, 424, 340,
	0, 0, 944, 0, 795, 796, 929, 987, 876, 974,
	1050, 910, 2447, 1051, 89, 0, 0, 0, 0, 2449,
	559, 733, 735, 736, 737, 738, 0, 0, 171, 734,
	739, 740, 741, 2448, 939, 984, 1063, 855, 704, 721,
	860, 810, 0, 1036, 897, 898, 264, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 469,
	990, 999, 1013, 919, 377, 284, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 826, 0, 720, 0,
	870, 716, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 722, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 341, 867, 798, 1034, 927, 302,
	192, 1040, 925, 824, 993, 871, 1022, 1056, 913, 312,
	869, 196, 866, 872, 911, 354, 1002, 1008, 808, 199,
	314, 1019, 891, 904, 729, 0, 393, 980, 468, 710,
	279, 0, 966, 392, 316, 461, 994, 1042, 467, 914,
	443, 478, 483, 272, 947, 235, 421, 262, 255, 896,
	1012, 859, 285, 376, 250, 307, 930, 986, 892, 242,
	997, 973, 1024, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 294, 286, 1027, 1025, 905, 362, 225,
	957, 950, 943, 812, 472, 1059, 258, 1009, 474, 180,
	407, 406, 917, 293, 1010, 181, 170, 386, 182, 303,
	205, 1030, 487, 221, 310, 451, 709, 278, 353, 982,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	1006, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 1049, 323, 267, 271, 287, 298, 981, 390,
	428, 475, 975, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1004, 217, 238, 429, 211, 1038, 1021, 968, 932,
	938, 861, 0, 210, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 282, 992, 730, 731, 247,
	801, 1053, 212, 868, 1052, 350, 357, 349, 1055, 1054,
	460, 1039, 969, 956, 954, 862, 1037, 967, 955, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	958, 426, 321, 0, 207, 0, 425, 1047, 1065, 440,
	227, 880, 1014, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 996, 1062, 361, 394,
	234, 470, 422, 263, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 243, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 807, 200, 213, 313,
	1061, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 347, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473,
	253, 948, 970, 1001, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 928, 197, 0,
	0, 203, 0, 204, 206, 915, 202, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 449, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 358, 909, 865, 186,
	0, 0, 856, 707, 857, 890, 260, 706, 1018, 963,
	1046, 946, 978, 988, 259, 245, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 479, 191, 811,
	315, 0, 0, 477, 424, 340, 0, 0, 944, 0,
	795, 796, 929, 987, 876, 974, 1050, 910, 979, 1051,
	89, 0, 0, 0, 0, 2347, 559, 733, 735, 736,
	737, 738, 0, 0, 171, 734, 739, 740, 741, 0,
	939, 984, 1063, 855, 704, 721, 860, 810, 0, 1036,
	897, 898, 264, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 469, 990, 999, 1013, 919,
	377, 284, 0, 0, 0, 0, 718, 719, 2238, 0,
	0, 0, 826, 0, 720, 0, 870, 716, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	722, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	341, 867, 798, 1034, 927, 302, 192, 1040, 925, 824,
	993, 871, 1022, 1056, 913, 312, 869, 196, 866, 872,
	911, 354, 1002, 1008, 808, 199, 314, 1019, 891, 904,
	729, 0, 393, 980, 468, 710, 279, 0, 966, 392,
	316, 461, 994, 1042, 467, 914, 443, 478, 483, 272,
	947, 235, 421, 262, 255, 896, 1012, 859, 285, 376,
	250, 307, 930, 986, 892, 242, 997, 973, 1024, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 294,
	286, 1027, 1025, 905, 362, 225, 957, 950, 943, 812,
	472, 1059, 258, 1009, 474, 180, 407, 406, 917, 293,
	1010, 181, 170, 386, 182, 303, 205, 1030, 487, 221,
	310, 451, 709, 278, 353, 982, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1006, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 1049, 323,
	267, 271, 287, 298, 981, 390, 428, 475, 975, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1004, 217, 238,
	429, 211, 1038, 1021, 968, 932, 938, 861, 0, 210,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 282, 992, 730, 731, 247, 801, 1053, 212, 868,
	1052, 350, 357, 349, 1055, 1054, 460, 1039, 969, 956,
	954, 862, 1037, 967, 955, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 958, 426, 321, 0,
	207, 0, 425, 1047, 1065, 440, 227, 880, 1014, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 996, 1062, 361, 394, 234, 470, 422, 263,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	243, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 807, 200, 213, 313, 1061, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 347,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 928, 197, 0, 0, 203, 0, 204,
	206, 915, 202, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 449, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 358, 909, 865, 186, 0, 0, 856, 707,
	857, 890, 260, 706, 1018, 963, 1046, 946, 978, 988,
	259, 245, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 479, 191, 811, 315, 0, 0, 477,
	424, 340, 0, 0, 944, 0, 795, 796, 929, 987,
	876, 974, 1050, 910, 979, 1051, 89, 0, 0, 0,
	0, 2344, 559, 733, 735, 736, 737, 738, 0, 0,
	171, 734, 739, 740, 741, 0, 939, 984, 1063, 855,
	704, 721, 860, 810, 0, 1036, 897, 898, 264, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 469, 990, 999, 1013, 919, 377, 284, 0, 0,
	0, 0, 718, 719, 2238, 0, 0, 0, 826, 0,
	720, 0, 870, 716, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 722, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 341, 867, 798, 1034,
	927, 302, 192, 1040, 925, 824, 993, 871, 1022, 1056,
	913, 312, 869, 196, 866, 872, 911, 354, 1002, 1008,
	808, 199, 314, 1019, 891, 904, 729, 0, 393, 980,
	468, 710, 279, 0, 966, 392, 316, 461, 994, 1042,
	467, 914, 443, 478, 483, 272, 947, 235, 421, 262,
	255, 896, 1012, 859, 285, 376, 250, 307, 930, 986,
	892, 242, 997, 973, 1024, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 294, 286, 1027, 1025, 905,
	362, 225, 957, 950, 943, 812, 472, 1059, 258, 1009,
	474, 180, 407, 406, 917, 293, 1010, 181, 170, 386,
	182, 303, 205, 1030, 487, 221, 310, 451, 709, 278,
	353, 982, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1006, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 1049, 323, 267, 271, 287, 298,
	981, 390, 428, 475, 975, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1004, 217, 238, 429, 211, 1038, 1021,
	968, 932, 938, 861, 0, 210, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 282, 992, 730,
	731, 247, 801, 1053, 212, 868, 1052, 350, 357, 349,
	1055, 1054, 460, 1039, 969, 956, 954, 862, 1037, 967,
	955, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 958, 426, 321, 0, 207, 0, 425, 1047,
	1065, 440, 227, 880, 1014, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 996, 1062,
	361, 394, 234, 470, 422, 263, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 243, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 807, 200,
	213, 313, 1061, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 347, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 473, 253, 948, 970, 1001, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 928,
	197, 0, 0, 203, 0, 204, 206, 915, 202, 1032,
	1057, 977, 991, 902, 1044, 0, 42, 449, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 358, 909,
	865, 186, 0, 0, 856, 707, 857, 890, 260, 706,
	1018, 963, 1046, 946, 978, 988, 259, 245, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 479,
	191, 811, 315, 0, 0, 477, 424, 340, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 559, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 704, 721, 860, 810,
	0, 1036, 897, 898, 264, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 469, 990, 999,
	1013, 919, 377, 284, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 341, 867, 798, 1541, 927, 302, 192, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 312, 869, 196,
	866, 872, 911, 354, 1002, 1008, 808, 199, 314, 1019,
	891, 904, 729, 0, 393, 980, 468, 710, 279, 0,
	966, 392, 316, 461, 994, 1042, 467, 914, 443, 478,
	483, 272, 947, 235, 421, 262, 255, 896, 1012, 859,
	285, 376, 250, 307, 930, 986, 892, 242, 997, 973,
	1024, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 294, 286, 1027, 1025, 905, 362, 225, 957, 950,
	943, 812, 472, 1059, 258, 1009, 474, 180, 407, 406,
	917, 293, 1010, 181, 170, 386, 182, 303, 205, 1030,
	487, 221, 310, 451, 709, 278, 353, 982, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 1006, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	1049, 323, 267, 271, 287, 298, 981, 390, 428, 475,
	975, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1004,
	217, 238, 429, 211, 1038, 1021, 968, 932, 938, 861,
	0, 210, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 282, 992, 730, 731, 247, 801, 1053,
	212, 868, 1052, 350, 357, 349, 1055, 1054, 460, 1039,
	969, 956, 954, 862, 1037, 967, 955, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 958, 426,
	321, 0, 207, 0, 425, 1047, 1065, 440, 227, 880,
	1014, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 996, 1062, 361, 394, 234, 470,
	422, 263, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	949, 1041, 863, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 243, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 807, 200, 213, 313, 1539, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 347, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948,
	970, 1001, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 928, 197, 0, 0, 203,
	0, 204, 206, 915, 202, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 449, 803, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 358, 909, 865, 186, 0, 0,
	856, 707, 857, 890, 260, 706, 1018, 963, 1046, 946,
	978, 988, 259, 245, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 479, 191, 811, 315, 0,
	0, 477, 424, 340, 0, 0, 944, 0, 795, 796,
	929, 987, 876, 974, 1050, 910, 979, 1051, 89, 0,
	2105, 0, 0, 732, 559, 733, 735, 736, 737, 738,
	0, 0, 171, 734, 739, 740, 741, 0, 939, 984,
	1063, 855, 704, 721, 860, 810, 0, 1036, 897, 898,
	264, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 469, 990, 999, 1013, 919, 377, 284,
	0, 0, 0, 0, 718, 719, 0, 0, 0, 0,
	826, 0, 720, 0, 870, 716, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 722, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 341, 867,
	798, 1034, 927, 302, 192, 1040, 925, 824, 993, 871,
	1022, 1056, 913, 312, 869, 196, 866, 872, 911, 354,
	1002, 1008, 808, 199, 314, 1019, 891, 904, 729, 0,
	393, 980, 468, 710, 279, 0, 966, 392, 316, 461,
	994, 1042, 467, 914, 443, 478, 483, 272, 947, 235,
	421, 262, 255, 896, 1012, 859, 285, 376, 250, 307,
	930, 986, 892, 242, 997, 973, 1024, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 294, 286, 1027,
	1025, 905, 362, 225, 957, 950, 943, 812, 472, 1059,
	258, 1009, 474, 180, 407, 406, 917, 293, 1010, 181,
	170, 386, 182, 303, 205, 1030, 487, 221, 310, 451,
	709, 278, 353, 982, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 1006, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 1049, 323, 267, 271,
	287, 298, 981, 390, 428, 475, 975, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1004, 217, 238, 429, 211,
	1038, 1021, 968, 932, 938, 861, 0, 210, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 282,
	992, 730, 731, 247, 801, 1053, 212, 868, 1052, 350,
	357, 349, 1055, 1054, 460, 1039, 969, 956, 954, 862,
	1037, 967, 955, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 958, 426, 321, 0, 207, 0,
	425, 1047, 1065, 440, 227, 880, 1014, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	996, 1062, 361, 394, 234, 470, 422, 263, 878, 1066,
	825, 813, 814, 817, 961, 962, 815, 818, 819, 827,
	799, 800, 802, 804, 805, 806, 949, 1041, 863, 809,
	1017, 820, 821, 822, 823, 989, 1060, 797, 243, 746,
	839, 840, 841, 747, 842, 843, 748, 749, 844, 845,
	846, 847, 750, 848, 849, 850, 828, 829, 830, 831,
	832, 833, 834, 835, 838, 836, 837, 0, 945, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	807, 200, 213, 313, 1061, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 347, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 473, 253, 948, 970, 1001, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 928, 197, 0, 0, 203, 0, 204, 206, 915,
	202, 1032, 1057, 977, 991, 902, 1044, 0, 0, 449,
	803, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	358, 909, 865, 186, 0, 0, 856, 707, 857, 890,
	260, 706, 1018, 963, 1046, 946, 978, 988, 259, 245,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 479, 191, 811, 315, 0, 0, 477, 424, 340,
	0, 0, 944, 0, 795, 796, 929, 987, 876, 974,
	1050, 910, 979, 1051, 89, 0, 0, 0, 0, 732,
	559, 733, 735, 736, 737, 738, 0, 0, 171, 734,
	739, 740, 741, 0, 939, 984, 1063, 855, 704, 721,
	860, 810, 0, 1036, 897, 898, 264, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 469,
	990, 999, 1013, 919, 377, 284, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 826, 0, 720, 0,
	870, 716, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 722, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 341, 867, 798, 1034, 927, 302,
	192, 1040, 925, 824, 993, 871, 1022, 1056, 913, 312,
	869, 196, 866, 872, 911, 354, 1002, 1008, 808, 199,
	314, 1019, 891, 904, 729, 0, 393, 980, 468, 710,
	279, 0, 966, 392, 316, 461, 994, 1042, 467, 914,
	443, 478, 483, 272, 947, 235, 421, 262, 255, 896,
	1012, 859, 285, 376, 250, 307, 930, 986, 892, 242,
	997, 973, 1024, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 294, 286, 1027, 1025, 905, 362, 225,
	957, 950, 943, 812, 472, 1059, 258, 1009, 474, 180,
	407, 406, 917, 293, 1010, 181, 170, 386, 182, 303,
	205, 1030, 487, 221, 310, 451, 709, 278, 353, 982,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	1006, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 1049, 323, 267, 271, 287, 298, 981, 390,
	428, 475, 975, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1004, 217, 238, 429, 211, 1038, 1021, 968, 932,
	938, 861, 0, 210, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 282, 992, 730, 731, 247,
	801, 1053, 212, 868, 1052, 350, 357, 349, 1055, 1054,
	460, 1039, 969, 956, 954, 862, 1037, 967, 955, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	958, 426, 321, 0, 207, 0, 425, 1047, 1065, 440,
	227, 880, 1014, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 996, 1062, 361, 394,
	234, 470, 422, 263, 878, 1066, 825, 813, 814, 817,
	961, 962, 815, 818, 819, 827, 799, 800, 802, 804,
	805, 806, 949, 1041, 863, 809, 1017, 820, 821, 822,
	823, 989, 1060, 797, 243, 746, 839, 840, 841, 747,
	842, 843, 748, 749, 844, 845, 846, 847, 750, 848,
	849, 850, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 836, 837, 0, 945, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 807, 200, 213, 313,
	1061, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 347, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473,
	253, 948, 970, 1001, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 928, 197, 0,
	0, 203, 0, 204, 206, 915, 202, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 449, 803, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 358, 909, 865, 186,
	0, 0, 856, 1106, 857, 890, 260, 1104, 1018, 963,
	1046, 946, 978, 988, 259, 245, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 479, 191, 811,
	315, 0, 0, 477, 424, 340, 0, 0, 944, 0,
	795, 796, 929, 987, 876, 974, 1050, 910, 979, 1051,
	89, 0, 0, 0, 0, 732, 559, 733, 735, 736,
	737, 738, 0, 0, 171, 734, 739, 740, 741, 0,
	939, 984, 1063, 855, 1123, 721, 860, 810, 0, 1036,
	897, 898, 264, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 469, 990, 999, 1013, 919,
	377, 284, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 826, 0, 720, 0, 870, 716, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	722, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	341, 867, 798, 1034, 927, 302, 192, 1040, 925, 824,
	993, 871, 1022, 1056, 913, 312, 869, 196, 866, 872,
	911, 354, 1002, 1008, 808, 199, 314, 1019, 891, 904,
	729, 0, 393, 980, 468, 710, 279, 0, 966, 392,
	316, 461, 994, 1042, 467, 914, 443, 478, 483, 272,
	947, 235, 421, 262, 255, 896, 1012, 859, 285, 376,
	250, 307, 930, 986, 892, 242, 997, 973, 1024, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 294,
	286, 1027, 1025, 905, 362, 225, 957, 950, 943, 812,
	472, 1059, 258, 1009, 474, 180, 407, 406, 917, 293,
	1010, 181, 170, 386, 182, 303, 205, 1030, 487, 221,
	310, 451, 709, 278, 353, 982, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1006, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 1049, 323,
	267, 271, 287, 298, 981, 390, 428, 475, 975, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1004, 217, 238,
	429, 211, 1038, 1021, 968, 932, 938, 861, 0, 210,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 282, 992, 730, 731, 247, 801, 1053, 212, 868,
	1052, 350, 357, 349, 1055, 1054, 460, 1039, 969, 956,
	954, 862, 1037, 967, 955, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 958, 426, 321, 0,
	207, 0, 425, 1047, 1065, 440, 227, 880, 1014, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 996, 1062, 361, 394, 234, 470, 422, 263,
	878, 1066, 825, 813, 814, 817, 961, 962, 815, 818,
	819, 827, 799, 800, 802, 804, 805, 806, 949, 1041,
	863, 809, 1017, 820, 821, 822, 823, 989, 1060, 797,
	243, 746, 839, 840, 841, 747, 842, 843, 748, 749,
	844, 845, 846, 847, 750, 848, 849, 850, 828, 829,
	830, 831, 832, 833, 834, 835, 838, 836, 837, 0,
	945, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 807, 200, 213, 313, 1061, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 347,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 928, 197, 0, 0, 203, 0, 204,
	206, 915, 202, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 449, 803, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 358, 909, 865, 186, 0, 0, 856, 1106,
	857, 890, 260, 1104, 1018, 963, 1046, 946, 978, 988,
	259, 245, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 479, 191, 811, 315, 0, 0, 477,
	424, 340, 0, 0, 944, 0, 795, 796, 929, 987,
	876, 974, 1050, 910, 979, 1051, 89, 0, 0, 0,
	0, 732, 559, 733, 735, 736, 737, 738, 0, 0,
	171, 734, 739, 740, 741, 0, 939, 984, 1063, 855,
	1123, 721, 860, 810, 0, 1036, 897, 898, 264, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 469, 990, 999, 1013, 919, 377, 284, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 826, 0,
	720, 0, 870, 716, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 722, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 341, 867, 798, 1034,
	927, 302, 192, 1040, 925, 824, 993, 871, 1022, 1056,
	913, 312, 869, 196, 866, 872, 911, 354, 1002, 1008,
	808, 199, 314, 1019, 891, 904, 729, 0, 393, 980,
	468, 710, 279, 0, 4536, 392, 316, 461, 994, 1042,
	467, 914, 443, 478, 483, 272, 947, 235, 421, 262,
	255, 896, 1012, 859, 285, 376, 250, 307, 930, 986,
	892, 242, 997, 973, 1024, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 294, 286, 1027, 1025, 905,
	362, 225, 957, 950, 943, 812, 472, 1059, 258, 1009,
	474, 180, 407, 406, 917, 293, 1010, 181, 170, 386,
	182, 303, 205, 1030, 487, 221, 310, 451, 709, 278,
	353, 982, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1006, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 1049, 323, 267, 271, 287, 298,
	981, 390, 428, 475, 975, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1004, 217, 238, 429, 211, 1038, 1021,
	968, 932, 938, 861, 0, 210, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 282, 992, 730,
	731, 247, 801, 1053, 212, 868, 1052, 350, 357, 349,
	1055, 1054, 460, 1039, 969, 956, 954, 862, 1037, 967,
	955, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 958, 426, 321, 0, 207, 0, 425, 1047,
	1065, 440, 227, 880, 1014, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 996, 1062,
	361, 394, 234, 470, 422, 263, 878, 1066, 825, 813,
	814, 817, 961, 962, 815, 818, 819, 827, 799, 800,
	802, 804, 805, 806, 949, 1041, 863, 809, 1017, 820,
	821, 822, 823, 989, 1060, 797, 243, 746, 839, 840,
	841, 747, 842, 843, 748, 749, 844, 845, 846, 847,
	750, 848, 849, 850, 828, 829, 830, 831, 832, 833,
	834, 835, 838, 836, 837, 0, 945, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 807, 200,
	213, 313, 1061, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 347, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 473, 253, 948, 970, 1001, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 928,
	197, 0, 0, 203, 0, 204, 206, 915, 202, 1032,
	1057, 977, 991, 902, 1044, 0, 0, 449, 803, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 358, 909,
	865, 186, 0, 0, 856, 1106, 857, 890, 260, 1104,
	1018, 963, 1046, 946, 978, 988, 259, 245, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 479,
	191, 811, 315, 0, 0, 477, 424, 340, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 559, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 1123, 721, 860, 810,
	0, 1036, 897, 898, 264, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 469, 990, 999,
	1013, 919, 377, 284, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 341, 867, 798, 1034, 927, 302, 192, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 312, 869, 196,
	866, 872, 911, 354, 1002, 1008, 808, 199, 314, 1019,
	891, 904, 729, 0, 393, 980, 468, 710, 279, 0,
	966, 392, 316, 461, 994, 1042, 467, 914, 443, 478,
	483, 272, 947, 235, 421, 262, 255, 896, 1012, 859,
	285, 376, 250, 307, 930, 986, 892, 242, 997, 973,
	1024, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 294, 286, 1027, 1025, 905, 362, 225, 957, 950,
	943, 812, 472, 1059, 258, 1009, 474, 180, 407, 406,
	917, 293, 1010, 181, 170, 386, 182, 303, 205, 1030,
	487, 221, 310, 451, 709, 278, 353, 982, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 1006, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	1049, 323, 267, 271, 287, 298, 981, 390, 428, 475,
	975, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1004,
	217, 238, 429, 211, 1038, 1021, 968, 932, 938, 861,
	0, 210, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 282, 992, 730, 731, 247, 801, 1053,
	212, 868, 1052, 350, 357, 349, 1055, 1054, 460, 1039,
	969, 956, 954, 862, 1037, 967, 955, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 958, 426,
	321, 0, 207, 0, 425, 1047, 1065, 440, 227, 880,
	1014, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 996, 1062, 361, 394, 234, 470,
	422, 263, 878, 1066, 825, 813, 814, 817, 961, 962,
	815, 818, 819, 827, 799, 800, 802, 804, 805, 806,
	2350, 2351, 2352, 809, 1017, 820, 821, 822, 823, 989,
	1060, 797, 243, 746, 839, 840, 841, 747, 842, 843,
	748, 749, 844, 845, 846, 847, 750, 848, 849, 850,
	828, 829, 830, 831, 832, 833, 834, 835, 838, 836,
	837, 0, 945, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 807, 200, 213, 313, 1061, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 347, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948,
	970, 1001, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 928, 197, 0, 0, 203,
	0, 204, 206, 915, 202, 1032, 1057, 977, 991, 1827,
	2006, 0, 3707, 449, 1861, 2010, 1810, 1840, 2028, 1846,
	1849, 1930, 1776, 1899, 358, 1837, 1777, 186, 1760, 1815,
	1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881,
	1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928,
	1985, 2007, 1880, 0, 172, 479, 191, 3708, 315, 1982,
	499, 3709, 424, 340, 502, 501, 1876, 1991, 1897, 1960,
	1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 89, 0,
	696, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1920, 2004, 1831, 500, 1871, 1929,
	2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823,
	264, 0, 0, 0, 0, 0, 0, 0, 1874, 1898,
	1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	1913, 0, 0, 0, 1784, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780,
	1965, 3711, 1857, 302, 192, 2001, 1855, 1854, 1939, 1785,
	1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354,
	1949, 1957, 177, 199, 314, 1972, 1813, 1830, 246, 2180,
	393, 1925, 468, 498, 279, 0, 1906, 392, 316, 461,
	1940, 2003, 467, 1842, 443, 478, 483, 272, 1882, 235,
	421, 262, 255, 1821, 1962, 1767, 285, 376, 250, 307,
	1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1973, 1956,
	1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980,
	1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029,
	258, 1958, 474, 180, 407, 406, 1845, 293, 1959, 181,
	170, 386, 182, 303, 205, 1984, 487, 221, 310, 451,
	497, 278, 353, 1927, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 1955, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 2011, 323, 267, 271,
	287, 298, 1926, 390, 428, 475, 1917, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1951, 217, 238, 429, 211,
	1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865,
	1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282,
	1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018, 350,
	357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774,
	1998, 1907, 1893, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 1896, 426, 321, 0, 207, 0,
	425, 2009, 2035, 440, 227, 1800, 1966, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	1942, 2032, 361, 394, 234, 470, 422, 263, 1796, 0,
	1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954,
	1789, 193, 194, 1992, 1993, 195, 1887, 2002, 1775, 0,
	1970, 189, 190, 174, 179, 1934, 2030, 1847, 243, 164,
	1771, 1772, 1773, 165, 1877, 1878, 167, 168, 1988, 1987,
	1986, 1989, 169, 2023, 2021, 2024, 1790, 1811, 1833, 1883,
	1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	1905, 200, 213, 313, 3710, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1967, 1912, 0, 1851,
	1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758,
	1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862,
	1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969,
	1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 1858, 197, 0, 0, 203, 0, 204, 206, 1843,
	202, 1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449,
	1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899,
	358, 1837, 1777, 186, 1760, 1815, 1764, 1828, 1765, 1812,
	260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245,
	1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0,
	172, 479, 191, 2017, 315, 1982, 499, 477, 424, 340,
	502, 501, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915,
	2012, 1838, 1924, 2013, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1920, 2004, 1831, 500, 1871, 1929, 2033, 1763, 1916, 0,
	1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0,
	0, 0, 0, 0, 1874, 1898, 1950, 1856, 0, 469,
	1935, 1945, 1963, 1848, 377, 284, 0, 0, 0, 0,
	0, 0, 3207, 0, 1817, 0, 1913, 0, 0, 0,
	1784, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1791, 1761,
	1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302,
	192, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312,
	1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 177, 199,
	314, 1972, 1813, 1830, 246, 0, 393, 1925, 468, 2278,
	279, 0, 1906, 392, 316, 461, 1940, 2003, 467, 1842,
	443, 478, 483, 272, 1882, 235, 421, 262, 255, 1821,
	1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814, 242,
	1943, 1914, 1977, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798,
	1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225,
	1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474, 180,
	407, 406, 1845, 293, 1959, 181, 170, 386, 182, 303,
	205, 1984, 487, 221, 310, 451, 2277, 278, 353, 1927,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	1955, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 2011, 323, 267, 271, 287, 298, 1926, 390,
	428, 475, 1917, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863,
	1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947,
	1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247,
	1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020,
	460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	1896, 426, 321, 0, 207, 0, 425, 2009, 2035, 440,
	227, 1800, 1966, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 1942, 2032, 361, 394,
	234, 470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795,
	1900, 1901, 2014, 2015, 2016, 1954, 1789, 193, 194, 1992,
	1993, 195, 1887, 2002, 1775, 0, 1970, 189, 190, 174,
	179, 1934, 2030, 1847, 243, 164, 1771, 1772, 1773, 165,
	1877, 1878, 167, 168, 1988, 1987, 1986, 1989, 169, 2023,
	2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919,
	1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 1905, 200, 213, 313,
	2031, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804,
	1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816,
	1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903,
	1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473,
	253, 1885, 1910, 1948, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 1858, 197, 0,
	0, 203, 0, 204, 206, 1843, 202, 1990, 2026, 1922,
	1936, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840,
	2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 186,
	1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902,
	2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826,
	1825, 1928, 1985, 2007, 1880, 0, 172, 479, 191, 2017,
	315, 1982, 499, 477, 424, 340, 502, 501, 1876, 1991,
	1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1920, 2004, 1831, 500,
	1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997,
	1822, 1823, 264, 0, 0, 0, 0, 0, 0, 0,
	1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 1913, 0, 0, 0, 1784, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759,
	341, 1780, 1965, 1995, 1857, 302, 192, 2001, 1855, 1854,
	1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786,
	1839, 354, 1949, 1957, 177, 199, 314, 1972, 1813, 1830,
	246, 2180, 393, 1925, 468, 498, 279, 0, 1906, 392,
	316, 461, 1940, 2003, 467, 1842, 443, 478, 483, 272,
	1882, 235, 421, 262, 255, 1821, 1962, 1767, 285, 376,
	250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294,
	286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953,
	472, 2029, 258, 1958, 474, 180, 407, 406, 1845, 293,
	1959, 181, 170, 386, 182, 303, 205, 1984, 487, 221,
	310, 451, 497, 278, 353, 1927, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1955, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 2011, 323,
	267, 271, 287, 298, 1926, 390, 428, 475, 1917, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1951, 217, 238,
	429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210,
	1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921,
	1805, 282, 1938, 464, 465, 247, 1781, 2019, 212, 1782,
	2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894,
	1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 1896, 426, 321, 0,
	207, 0, 425, 2009, 2035, 440, 227, 1800, 1966, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 1942, 2032, 361, 394, 234, 470, 422, 263,
	1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015,
	2016, 1954, 1789, 193, 194, 1992, 1993, 195, 1887, 2002,
	1775, 0, 1970, 189, 190, 174, 179, 1934, 2030, 1847,
	243, 164, 1771, 1772, 1773, 165, 1877, 1878, 167, 168,
	1988, 1987, 1986, 1989, 169, 2023, 2021, 2024, 1790, 1811,
	1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820,
	1879, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 1905, 200, 213, 313, 2031, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1967, 1912,
	0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347,
	1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844,
	1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944,
	1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 1858, 197, 0, 0, 203, 0, 204,
	206, 1843, 202, 1990, 2026, 1922, 1936, 1827, 2006, 0,
	1968, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930,
	1776, 1899, 358, 1837, 1777, 186, 1760, 1815, 1764, 1828,
	1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933,
	259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007,
	1880, 0, 172, 479, 191, 2017, 315, 1982, 499, 477,
	424, 340, 502, 501, 1876, 1991, 1897, 1960, 1859, 1932,
	1792, 1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1920, 2004, 1831, 500, 1871, 1929, 2033, 1763,
	1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0,
	0, 0, 0, 0, 0, 0, 1874, 1898, 1950, 1856,
	0, 469, 1935, 1945, 1963, 1848, 377, 284, 0, 0,
	0, 0, 0, 0, 2271, 0, 1817, 0, 1913, 0,
	0, 0, 1784, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995,
	1857, 302, 192, 2001, 1855, 1854, 1939, 1785, 1975, 2025,
	1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957,
	177, 199, 314, 1972, 1813, 1830, 246, 0, 393, 1925,
	468, 2278, 279, 0, 1906, 392, 316, 461, 1940, 2003,
	467, 1842, 443, 478, 483, 272, 1882, 235, 421, 262,
	255, 1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931,
	1814, 242, 1943, 1914, 1977, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1973, 1956, 1979, 1807,
	1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832,
	362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958,
	474, 180, 407, 406, 1845, 293, 1959, 181, 170, 386,
	182, 303, 205, 1984, 487, 221, 310, 451, 2277, 278,
	353, 1927, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1955, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 2011, 323, 267, 271, 287, 298,
	1926, 390, 428, 475, 1917, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1951, 217, 238, 429, 211, 1999, 1974,
	1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867,
	1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464,
	465, 247, 1781, 2019, 212, 1782, 2018, 350, 357, 349,
	2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907,
	1893, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 1896, 426, 321, 0, 207, 0, 425, 2009,
	2035, 440, 227, 1800, 1966, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 1942, 2032,
	361, 394, 234, 470, 422, 263, 1796, 0, 1799, 1794,
	1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 193,
	194, 1992, 1993, 195, 1887, 2002, 1775, 0, 1970, 189,
	190, 174, 179, 1934, 2030, 1847, 243, 164, 1771, 1772,
	1773, 165, 1877, 1878, 167, 168, 1988, 1987, 1986, 1989,
	169, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886,
	1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 1905, 200,
	213, 313, 2031, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852,
	1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793,
	1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873,
	1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981,
	1983, 473, 253, 1885, 1910, 1948, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 1858,
	197, 0, 0, 203, 0, 204, 206, 1843, 202, 1990,
	2026, 1922, 1936, 1827, 2006, 0, 1968, 449, 1861, 2010,
	1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837,
	1777, 186, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808,
	1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890,
	1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 172, 479,
	191, 2017, 315, 1982, 499, 477, 424, 340, 502, 501,
	1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838,
	1924, 2013, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1920, 2004,
	1831, 500, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779,
	2027, 1997, 1822, 1823, 264, 0, 0, 0, 0, 0,
	0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945,
	1963, 1848, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 1913, 0, 0, 0, 1784, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952,
	1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 192, 2001,
	1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196,
	1778, 1786, 1839, 354, 1949, 1957, 177, 199, 314, 1972,
	1813, 1830, 246, 0, 393, 1925, 468, 2278, 279, 0,
	1906, 392, 316, 461, 1940, 2003, 467, 1842, 443, 478,
	483, 272, 1882, 235, 421, 262, 255, 1821, 1962, 1767,
	285, 376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914,
	1977, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829,
	2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888,
	1875, 1953, 472, 2029, 258, 1958, 474, 180, 407, 406,
	1845, 293, 1959, 181, 170, 386, 182, 303, 205, 1984,
	487, 221, 310, 451, 2277, 278, 353, 1927, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 1955, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	2011, 323, 267, 271, 287, 298, 1926, 390, 428, 475,
	1917, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1951,
	217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769,
	0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834,
	1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019,
	212, 1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000,
	1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 1896, 426,
	321, 0, 207, 0, 425, 2009, 2035, 440, 227, 1800,
	1966, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 1942, 2032, 361, 394, 234, 470,
	422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901,
	2014, 2015, 2016, 1954, 1789, 193, 194, 1992, 1993, 195,
	1887, 2002, 1775, 0, 1970, 189, 190, 174, 179, 1934,
	2030, 1847, 243, 164, 1771, 1772, 1773, 165, 1877, 1878,
	167, 168, 1988, 1987, 1986, 1989, 169, 2023, 2021, 2024,
	1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937,
	1946, 1820, 1879, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 1905, 200, 213, 313, 2031, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801,
	2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835,
	1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911,
	1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885,
	1910, 1948, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 1858, 197, 0, 0, 203,
	0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936, 902,
	1044, 0, 0, 449, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 358, 909, 865, 186, 0, 0,
	856, 1106, 857, 890, 260, 1104, 1018, 963, 1046, 946,
	978, 988, 259, 245, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 479, 191, 1144, 315, 0,
	499, 477, 424, 340, 502, 501, 944, 0, 1118, 1131,
	929, 987, 876, 974, 1050, 910, 979, 1051, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1126, 1140, 1107, 500, 939, 984,
	1063, 855, 1123, 0, 860, 1095, 0, 1036, 897, 898,
	264, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 469, 990, 999, 1013, 919, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 870, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 341, 867,
	1133, 1034, 927, 302, 192, 1040, 925, 1110, 993, 871,
	1022, 1056, 913, 312, 869, 196, 866, 872, 911, 354,
	1002, 1008, 177, 199, 314, 1019, 891, 904, 246, 3307,
	393, 980, 468, 2363, 279, 0, 966, 392, 316, 461,
	994, 1042, 467, 914, 443, 478, 483, 272, 947, 235,
	421, 262, 255, 896, 1012, 859, 285, 376, 250, 307,
	930, 986, 892, 242, 997, 973, 1024, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 294, 286, 1027,
	1025, 905, 362, 225, 957, 950, 943, 1129, 472, 1059,
	258, 1009, 474, 180, 407, 406, 917, 293, 1010, 181,
	170, 386, 182, 303, 205, 1030, 487, 221, 310, 451,
	2362, 278, 353, 982, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 1006, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 1049, 323, 267, 271,
	287, 298, 981, 390, 428, 475, 975, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1004, 217, 238, 429, 211,
	1038, 1021, 968, 932, 938, 861, 0, 210, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 282,
	992, 464, 465, 247, 1096, 1053, 212, 868, 1052, 350,
	357, 349, 1055, 1054, 460, 1039, 969, 956, 954, 862,
	1037, 967, 955, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 958, 426, 321, 0, 207, 0,
	425, 1047, 1065, 440, 227, 880, 1014, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	996, 1062, 361, 394, 234, 470, 422, 263, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 193, 194, 1138, 1139, 195, 949, 1041, 863, 0,
	1017, 189, 190, 174, 179, 989, 1060, 1109, 243, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	1121, 200, 213, 313, 1061, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 347, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 473, 253, 948, 970, 1001, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 928, 197, 0, 0, 203, 0, 204, 206, 915,
	202, 1032, 1057, 977, 991, 1827, 2006, 0, 1968, 449,
	1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899,
	358, 1837, 1777, 186, 1760, 1815, 1764, 1828, 1765, 1812,
	260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245,
	1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0,
	172, 479, 191, 2017, 315, 1982, 499, 477, 424, 340,
	502, 501, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915,
	2012, 1838, 1924, 2013, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1920, 2004, 1831, 500, 1871, 1929, 2033, 1763, 1916, 0,
	1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0,
	0, 0, 0, 0, 1874, 1898, 1950, 1856, 0, 469,
	1935, 1945, 1963, 1848, 377, 284, 0, 0, 0, 0,
	0, 0, 2860, 0, 1817, 0, 1913, 0, 0, 0,
	1784, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1791, 1761,
	1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302,
	192, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312,
	1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 177, 199,
	314, 1972, 1813, 1830, 246, 0, 393, 1925, 468, 498,
	279, 0, 1906, 392, 316, 461, 1940, 2003, 467, 1842,
	443, 478, 483, 272, 1882, 235, 421, 262, 255, 1821,
	1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814, 242,
	1943, 1914, 1977, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798,
	1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225,
	1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474, 180,
	407, 406, 1845, 293, 1959, 181, 170, 386, 182, 303,
	205, 1984, 487, 221, 310, 451, 497, 278, 353, 1927,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	1955, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 2011, 323, 267, 271, 287, 298, 1926, 390,
	428, 475, 1917, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863,
	1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947,
	1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247,
	1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020,
	460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	1896, 426, 321, 0, 207, 0, 425, 2009, 2035, 440,
	227, 1800, 1966, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 1942, 2032, 361, 394,
	234, 470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795,
	1900, 1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992,
	1993, 0, 1887, 2002, 1775, 0, 1970, 189, 190, 174,
	179, 1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0,
	1877, 1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023,
	2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919,
	1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 1905, 200, 213, 313,
	2031, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804,
	1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816,
	1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903,
	1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473,
	253, 1885, 1910, 1948, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 1858, 197, 0,
	0, 203, 0, 204, 206, 1843, 202, 1990, 2026, 1922,
	1936, 902, 1044, 0, 0, 449, 1111, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 358, 909, 865, 186,
	0, 0, 856, 1106, 857, 890, 260, 1104, 1018, 963,
	1046, 946, 978, 988, 259, 245, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 479, 191, 1144,
	315, 0, 499, 477, 424, 340, 502, 501, 944, 0,
	1118, 1131, 929, 987, 876, 974, 1050, 910, 979, 1051,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1126, 1140, 1107, 500,
	939, 984, 1063, 855, 1123, 0, 860, 1095, 0, 1036,
	897, 898, 264, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 469, 990, 999, 1013, 919,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 870, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	341, 867, 1133, 1034, 927, 302, 192, 1040, 925, 1110,
	993, 871, 1022, 1056, 913, 312, 869, 196, 866, 872,
	911, 354, 1002, 1008, 177, 199, 314, 1019, 891, 904,
	246, 0, 393, 980, 468, 2363, 279, 0, 966, 392,
	316, 461, 994, 1042, 467, 914, 443, 478, 483, 272,
	947, 235, 421, 262, 255, 896, 1012, 859, 285, 376,
	250, 307, 930, 986, 892, 242, 997, 973, 1024, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 294,
	286, 1027, 1025, 905, 362, 225, 957, 950, 943, 1129,
	472, 1059, 258, 1009, 474, 180, 407, 406, 917, 293,
	1010, 181, 170, 386, 182, 303, 205, 1030, 487, 221,
	310, 451, 2362, 278, 353, 982, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1006, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 1049, 323,
	267, 271, 287, 298, 981, 390, 428, 475, 975, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1004, 217, 238,
	429, 211, 1038, 1021, 968, 932, 938, 861, 0, 210,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 282, 992, 464, 465, 247, 1096, 1053, 212, 868,
	1052, 350, 357, 349, 1055, 1054, 460, 1039, 969, 956,
	954, 862, 1037, 967, 955, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 958, 426, 321, 0,
	207, 0, 425, 1047, 1065, 440, 227, 880, 1014, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 996, 1062, 361, 394, 234, 470, 422, 263,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 193, 194, 1138, 1139, 195, 949, 1041,
	863, 0, 1017, 189, 190, 174, 179, 989, 1060, 1109,
	243, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	945, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 1121, 200, 213, 313, 1061, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 347,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 928, 197, 0, 0, 203, 0, 204,
	206, 915, 202, 1032, 1057, 977, 991, 1827, 2006, 0,
	1968, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930,
	1776, 1899, 358, 1837, 1777, 186, 1760, 1815, 1764, 1828,
	1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933,
	259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007,
	1880, 0, 172, 479, 191, 2017, 315, 1982, 499, 477,
	424, 340, 502, 501, 1876, 1991, 1897, 1960, 1859, 1932,
	1792, 1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1920, 2004, 1831, 500, 1871, 1929, 2033, 1763,
	1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0,
	0, 0, 0, 0, 0, 0, 1874, 1898, 1950, 1856,
	0, 469, 1935, 1945, 1963, 1848, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 1913, 0,
	0, 0, 1784, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995,
	1857, 302, 192, 2001, 1855, 1854, 1939, 1785, 1975, 2025,
	1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957,
	177, 199, 314, 1972, 1813, 1830, 246, 0, 393, 1925,
	468, 498, 279, 0, 1906, 392, 316, 461, 1940, 2003,
	467, 1842, 443, 478, 483, 272, 1882, 235, 421, 262,
	255, 1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931,
	1814, 242, 1943, 1914, 1977, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1973, 1956, 1979, 1807,
	1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832,
	362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958,
	474, 180, 407, 406, 1845, 293, 1959, 181, 170, 386,
	182, 303, 205, 1984, 487, 221, 310, 451, 497, 278,
	353, 1927, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1955, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 2011, 323, 267, 271, 287, 298,
	1926, 390, 428, 475, 1917, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1951, 217, 238, 429, 211, 1999, 1974,
	1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867,
	1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464,
	465, 247, 1781, 2019, 212, 1782, 2018, 350, 357, 349,
	2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907,
	1893, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 1896, 426, 321, 0, 207, 0, 425, 2009,
	2035, 440, 227, 1800, 1966, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 1942, 2032,
	361, 394, 234, 470, 422, 263, 1796, 0, 1799, 1794,
	1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 0,
	0, 1992, 1993, 0, 1887, 2002, 1775, 0, 1970, 189,
	190, 174, 179, 1934, 2030, 1847, 243, 0, 1771, 1772,
	1773, 0, 1877, 1878, 0, 0, 1988, 1987, 1986, 1989,
	0, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886,
	1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 1905, 200,
	213, 313, 2031, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852,
	1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793,
	1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873,
	1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981,
	1983, 473, 253, 1885, 1910, 1948, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 1858,
	197, 0, 0, 203, 0, 204, 206, 1843, 202, 1990,
	2026, 1922, 1936, 902, 1044, 0, 0, 449, 1111, 1048,
	889, 912, 1058, 918, 920, 985, 864, 960, 358, 909,
	865, 186, 0, 0, 856, 1106, 857, 890, 260, 1104,
	1018, 963, 1046, 946, 978, 988, 259, 245, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 479,
	191, 1144, 315, 0, 0, 477, 424, 340, 0, 0,
	944, 0, 1118, 1131, 929, 987, 876, 974, 1050, 910,
	979, 1051, 0, 0, 0, 0, 0, 0, 559, 0,
	1452, 0, 0, 1453, 0, 0, 171, 0, 1126, 1140,
	1107, 0, 939, 984, 1063, 855, 1123, 0, 860, 1095,
	0, 1036, 897, 898, 264, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 469, 990, 999,
	1013, 919, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1122, 0, 0, 0, 870, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 341, 867, 1133, 1034, 927, 302, 192, 1040,
	925, 1110, 993, 871, 1022, 1056, 913, 312, 869, 196,
	866, 872, 911, 354, 1002, 1008, 177, 199, 314, 1019,
	891, 904, 246, 0, 393, 980, 468, 1090, 279, 0,
	966, 392, 316, 461, 994, 1042, 467, 914, 443, 478,
	483, 272, 947, 235, 421, 262, 255, 896, 1012, 859,
	285, 376, 250, 307, 930, 986, 892, 242, 997, 973,
	1024, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 294, 286, 1027, 1025, 905, 362, 225, 957, 950,
	943, 1129, 472, 1059, 258, 1009, 474, 180, 407, 406,
	917, 293, 1010, 181, 170, 386, 182, 303, 205, 1030,
	487, 221, 310, 451, 1089, 278, 353, 982, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 1006, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	1049, 323, 267, 271, 287, 298, 981, 390, 428, 475,
	975, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1004,
	217, 238, 429, 211, 1038, 1021, 968, 932, 938, 861,
	0, 210, 933, 934, 935, 936, 937, 1000, 894, 906,
	886, 976, 885, 282, 992, 464, 465, 247, 1096, 1053,
	212, 868, 1052, 350, 357, 349, 1055, 1054, 460, 1039,
	969, 956, 954, 862, 1037, 967, 955, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 958, 426,
	321, 0, 207, 0, 425, 1047, 1065, 440, 227, 880,
	1014, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 996, 1062, 361, 394, 234, 470,
	422, 263, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120,
	1141, 1142, 1143, 1130, 1097, 193, 194, 1138, 1139, 195,
	949, 1041, 863, 0, 1017, 189, 190, 174, 179, 989,
	1060, 1109, 243, 164, 1092, 1093, 1094, 165, 1113, 1114,
	167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147,
	1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127,
	1128, 0, 945, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 1121, 200, 213, 313, 1061, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1015, 972, 0, 922, 924, 923, 882, 884, 883, 881,
	1064, 347, 1033, 851, 858, 877, 888, 893, 899, 907,
	908, 916, 921, 931, 940, 941, 951, 964, 965, 971,
	995, 998, 1011, 1016, 1023, 1028, 1029, 473, 253, 948,
	970, 1001, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 928, 197, 0, 0, 203,
	0, 204, 206, 915, 202, 1032, 1057, 977, 991, 902,
	1044, 0, 0, 449, 1111, 1048, 889, 912, 1058, 918,
	920, 985, 864, 960, 358, 909, 865, 186, 0, 0,
	856, 1106, 857, 890, 260, 1104, 1018, 963, 1046, 946,
	978, 988, 259, 245, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 479, 191, 1144, 315, 0,
	0, 477, 424, 340, 0, 0, 944, 0, 1118, 1131,
	929, 987, 876, 974, 1050, 910, 979, 1051, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1126, 1140, 1107, 0, 939, 984,
	1063, 855, 1123, 0, 860, 1095, 0, 1036, 897, 898,
	264, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 469, 990, 999, 1013, 919, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 870, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 341, 867,
	1133, 1034, 927, 302, 192, 1040, 925, 1110, 993, 871,
	1022, 1056, 913, 312, 869, 196, 866, 872, 911, 354,
	1002, 1008, 177, 199, 314, 1019, 891, 904, 246, 0,
	393, 980, 468, 1090, 279, 0, 966, 392, 316, 461,
	994, 1042, 467, 914, 443, 478, 483, 272, 947, 235,
	421, 262, 255, 896, 1012, 859, 285, 376, 250, 307,
	930, 986, 892, 242, 997, 973, 1024, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 294, 286, 1027,
	1025, 905, 362, 225, 957, 950, 943, 1129, 472, 1059,
	258, 1009, 474, 180, 407, 406, 917, 293, 1010, 181,
	170, 386, 182, 303, 205, 1030, 487, 221, 310, 451,
	1089, 278, 353, 982, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 1006, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 1049, 323, 267, 271,
	287, 298, 981, 390, 428, 475, 975, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1004, 217, 238, 429, 211,
	1038, 1021, 968, 932, 938, 861, 0, 210, 933, 934,
	935, 936, 937, 1000, 894, 906, 886, 976, 885, 282,
	992, 464, 465, 247, 1096, 1053, 212, 868, 1052, 350,
	357, 349, 1055, 1054, 460, 1039, 969, 956, 954, 862,
	1037, 967, 955, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 958, 426, 321, 0, 207, 0,
	425, 1047, 1065, 440, 227, 880, 1014, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	996, 1062, 361, 394, 234, 470, 422, 263, 1101, 0,
	1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130,
	1097, 193, 194, 1138, 1139, 195, 949, 1041, 863, 0,
	1017, 189, 190, 174, 179, 989, 1060, 1109, 243, 164,
	1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135,
	1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115,
	1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	1121, 200, 213, 313, 1061, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1015, 972, 0, 922,
	924, 923, 882, 884, 883, 881, 1064, 347, 1033, 851,
	858, 877, 888, 893, 899, 907, 908, 916, 921, 931,
	940, 941, 951, 964, 965, 971, 995, 998, 1011, 1016,
	1023, 1028, 1029, 473, 253, 948, 970, 1001, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 928, 197, 0, 0, 203, 0, 204, 206, 915,
	202, 1032, 1057, 977, 991, 902, 1044, 0, 0, 449,
	1111, 1048, 889, 912, 1058, 918, 920, 985, 864, 960,
	358, 909, 865, 186, 0, 0, 856, 1106, 857, 890,
	260, 1104, 1018, 963, 1046, 946, 978, 988, 259, 245,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 479, 191, 1144, 315, 0, 0, 477, 424, 340,
	0, 0, 944, 0, 1118, 1131, 929, 987, 876, 974,
	1050, 910, 979, 1051, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1126, 1140, 1107, 0, 939, 984, 1063, 855, 1123, 0,
	860, 1095, 0, 1036, 897, 898, 264, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 469,
	990, 999, 1013, 919, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	870, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 341, 867, 1133, 1034, 927, 302,
	192, 1040, 925, 1110, 993, 871, 1022, 1056, 913, 312,
	869, 196, 866, 872, 911, 354, 1002, 1008, 177, 199,
	314, 1019, 891, 904, 246, 0, 393, 980, 468, 1090,
	279, 0, 966, 392, 316, 461, 994, 1042, 467, 914,
	443, 478, 483, 272, 947, 235, 421, 262, 255, 896,
	1012, 859, 285, 376, 250, 307, 930, 986, 892, 242,
	997, 973, 1024, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 294, 286, 1027, 1025, 905, 362, 225,
	957, 950, 943, 1129, 472, 1059, 258, 1009, 474, 180,
	407, 406, 917, 293, 1010, 181, 170, 386, 182, 303,
	205, 1030, 487, 221, 310, 451, 1089, 278, 353, 982,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	1006, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 1049, 323, 267, 271, 287, 298, 981, 390,
	428, 475, 975, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1004, 217, 238, 429, 211, 1038, 1021, 968, 932,
	938, 861, 0, 210, 933, 934, 935, 936, 937, 1000,
	894, 906, 886, 976, 885, 282, 992, 464, 465, 247,
	1096, 1053, 212, 1084, 1052, 350, 357, 349, 1055, 1054,
	460, 1039, 969, 956, 954, 862, 1037, 967, 955, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 1080,
	958, 426, 321, 0, 207, 0, 425, 1047, 1065, 440,
	227, 880, 1014, 455, 178, 382, 228, 280, 268, 373,
	1085, 1083, 1074, 1075, 309, 317, 996, 1062, 361, 394,
	234, 470, 422, 263, 1101, 0, 1103, 1099, 1102, 1100,
	1119, 1120, 1141, 1142, 1143, 1130, 1097, 193, 194, 1138,
	1139, 195, 949, 1041, 863, 0, 1017, 189, 190, 174,
	179, 989, 1060, 1109, 243, 164, 1092, 1093, 1094, 165,
	1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146,
	1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125,
	1132, 1127, 1128, 0, 945, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 1121, 200, 213, 313,
	1061, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1015, 972, 0, 922, 924, 923, 882, 884,
	883, 881, 1064, 347, 1033, 851, 858, 877, 888, 893,
	899, 907, 908, 916, 921, 931, 940, 941, 951, 964,
	965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029, 473,
	253, 948, 970, 1001, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	1081, 1082, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 928, 197, 0,
	0, 203, 0, 204, 206, 915, 202, 1032, 1057, 977,
	991, 902, 1044, 0, 0, 449, 1111, 1048, 889, 912,
	1058, 918, 920, 985, 864, 960, 358, 909, 865, 186,
	0, 0, 856, 1106, 857, 890, 260, 1104, 1018, 963,
	1046, 946, 978, 988, 259, 245, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 479, 191, 1144,
	315, 0, 0, 477, 424, 340, 0, 0, 944, 0,
	1118, 1131, 929, 987, 876, 974, 1050, 910, 979, 1051,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1126, 1140, 1107, 0,
	939, 984, 1063, 855, 1123, 0, 860, 1095, 0, 1036,
	897, 898, 264, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 469, 990, 999, 1013, 919,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 870, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	341, 867, 1133, 1034, 927, 302, 192, 1040, 925, 1110,
	993, 871, 1022, 1056, 913, 312, 869, 196, 866, 872,
	911, 354, 1002, 1008, 177, 199, 314, 1019, 891, 904,
	246, 0, 393, 980, 468, 1090, 279, 0, 966, 392,
	316, 461, 994, 1042, 467, 914, 443, 478, 483, 272,
	947, 235, 421, 262, 255, 896, 1012, 859, 285, 376,
	250, 307, 930, 986, 892, 242, 997, 973, 1024, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 294,
	286, 1027, 1025, 905, 362, 225, 957, 950, 943, 1129,
	472, 1059, 258, 1009, 474, 180, 407, 406, 917, 293,
	1010, 181, 170, 386, 182, 303, 205, 1030, 487, 221,
	310, 451, 1089, 278, 353, 982, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 1006, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 1049, 323,
	267, 271, 287, 298, 981, 390, 428, 475, 975, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 1618, 230, 408, 411, 486, 1004, 217, 238,
	429, 211, 1038, 1021, 968, 932, 938, 861, 0, 210,
	933, 934, 935, 936, 937, 1000, 894, 906, 886, 976,
	885, 282, 992, 464, 465, 247, 1096, 1053, 212, 868,
	1052, 350, 357, 349, 1055, 1054, 460, 1039, 969, 956,
	954, 862, 1037, 967, 955, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 958, 426, 321, 0,
	207, 0, 425, 1047, 1065, 440, 227, 880, 1014, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 996, 1062, 361, 394, 234, 470, 422, 263,
	1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142,
	1143, 1130, 1097, 193, 194, 1138, 1139, 195, 949, 1041,
	863, 0, 1017, 189, 190, 174, 179, 989, 1060, 1109,
	243, 164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168,
	1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105,
	1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0,
	945, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 1121, 200, 213, 313, 1061, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1015, 972,
	0, 922, 924, 923, 882, 884, 883, 881, 1064, 347,
	1033, 851, 858, 877, 888, 893, 899, 907, 908, 916,
	921, 931, 940, 941, 951, 964, 965, 971, 995, 998,
	1011, 1016, 1023, 1028, 1029, 473, 253, 948, 970, 1001,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 928, 197, 0, 0, 203, 0, 204,
	206, 915, 202, 1032, 1057, 977, 991, 902, 1044, 0,
	0, 449, 1111, 1048, 889, 912, 1058, 918, 920, 985,
	864, 960, 358, 909, 865, 186, 0, 0, 856, 1106,
	857, 890, 260, 1104, 1018, 963, 1046, 946, 978, 988,
	259, 245, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 479, 191, 1144, 315, 0, 0, 477,
	424, 340, 0, 0, 944, 0, 1118, 1131, 929, 987,
	876, 974, 1050, 910, 979, 1051, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 0, 939, 984, 1063, 855,
	1123, 0, 860, 1095, 0, 1036, 897, 898, 264, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 469, 990, 999, 1013, 919, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 870, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 341, 867, 1133, 1034,
	927, 302, 192, 1040, 925, 1110, 993, 871, 1022, 1056,
	913, 312, 869, 196, 866, 872, 911, 354, 1002, 1008,
	177, 199, 314, 1019, 891, 904, 246, 0, 393, 980,
	468, 1090, 279, 0, 966, 392, 316, 461, 994, 1042,
	467, 914, 443, 478, 483, 272, 947, 235, 421, 262,
	255, 896, 1012, 859, 285, 376, 250, 307, 930, 986,
	892, 242, 997, 973, 1024, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 294, 286, 1027, 1025, 905,
	362, 225, 957, 950, 943, 1129, 472, 1059, 258, 1009,
	474, 180, 407, 406, 917, 293, 1010, 181, 170, 386,
	182, 303, 205, 1030, 487, 221, 310, 451, 1089, 278,
	353, 982, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 1006, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 1049, 323, 267, 271, 287, 298,
	981, 390, 428, 475, 975, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 1071, 230,
	408, 411, 486, 1004, 217, 238, 429, 211, 1038, 1021,
	968, 932, 938, 861, 0, 210, 933, 934, 935, 936,
	937, 1000, 894, 906, 886, 976, 885, 282, 992, 464,
	465, 247, 1096, 1053, 212, 1084, 1052, 350, 357, 349,
	1055, 1054, 460, 1039, 969, 956, 954, 862, 1037, 967,
	955, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 1080, 958, 426, 321, 0, 207, 0, 425, 1047,
	1065, 440, 227, 880, 1014, 455, 178, 382, 228, 280,
	268, 373, 1085, 1083, 1074, 1075, 309, 317, 996, 1062,
	361, 394, 234, 470, 422, 263, 1101, 0, 1103, 1099,
	1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 193,
	194, 1138, 1139, 195, 949, 1041, 863, 0, 1017, 189,
	190, 174, 179, 989, 1060, 1109, 243, 164, 1092, 1093,
	1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137,
	169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117,
	1124, 1125, 1132, 1127, 1128, 0, 945, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 1121, 200,
	213, 313, 1061, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1015, 972, 0, 922, 924, 923,
	882, 884, 883, 881, 1064, 347, 1033, 851, 858, 877,
	888, 893, 899, 907, 908, 916, 921, 931, 940, 941,
	951, 964, 965, 971, 995, 998, 1011, 1016, 1023, 1028,
	1029, 473, 253, 948, 970, 1001, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 1081, 1082, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 928,
	197, 0, 0, 203, 0, 204, 206, 915, 202, 1032,
	1057, 977, 991, 1827, 2006, 0, 1968, 449, 1861, 2010,
	1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837,
	1777, 0, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808,
	1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890,
	1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 0, 479,
	0, 2017, 315, 1982, 0, 477, 424, 340, 0, 0,
	1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838,
	1924, 2013, 0, 0, 0, 0, 0, 3165, 3170, 0,
	3173, 3175, 3174, 0, 0, 0, 3167, 0, 1920, 2004,
	1831, 0, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779,
	2027, 1997, 1822, 1823, 264, 0, 0, 0, 0, 0,
	0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945,
	1963, 1848, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 1913, 0, 0, 0, 1784, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952,
	1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 0, 2001,
	1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196,
	1778, 1786, 1839, 354, 1949, 1957, 0, 199, 314, 1972,
	1813, 1830, 246, 0, 393, 1925, 468, 0, 279, 0,
	1906, 392, 316, 461, 1940, 2003, 467, 1842, 443, 478,
	483, 272, 1882, 235, 421, 262, 255, 1821, 1962, 1767,
	285, 376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914,
	1977, 420, 458, 201, 335, 459, 482, 3168, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829,
	2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888,
	1875, 1953, 472, 2029, 258, 1958, 474, 0, 407, 406,
	1845, 293, 1959, 0, 0, 386, 3169, 303, 205, 1984,
	487, 221, 310, 451, 0, 278, 353, 1927, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 1955, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	2011, 323, 267, 271, 287, 298, 1926, 390, 428, 475,
	1917, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1951,
	217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769,
	0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834,
	1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019,
	212, 1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000,
	1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 1896, 426,
	321, 0, 207, 0, 425, 2009, 2035, 440, 227, 1800,
	1966, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 1942, 2032, 361, 394, 234, 470,
	422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901,
	2014, 2015, 2016, 1954, 1789, 0, 0, 1992, 1993, 0,
	1887, 2002, 1775, 0, 1970, 0, 0, 0, 0, 1934,
	2030, 1847, 243, 0, 1771, 1772, 1773, 0, 1877, 1878,
	0, 0, 1988, 1987, 1986, 1989, 0, 2023, 2021, 2024,
	1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937,
	1946, 1820, 1879, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 1905, 200, 213, 313, 2031, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801,
	2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835,
	1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911,
	1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885,
	1910, 1948, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 1858, 197, 0, 0, 203,
	0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936, 1827,
	2006, 0, 1968, 449, 1861, 2010, 1810, 1840, 2028, 1846,
	1849, 1930, 1776, 1899, 358, 1837, 1777, 0, 1760, 1815,
	1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881,
	1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928,
	1985, 2007, 1880, 0, 0, 479, 0, 2017, 315, 1982,
	0, 477, 424, 340, 0, 0, 1876, 1991, 1897, 1960,
	1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 0, 0,
	0, 0, 0, 3973, 3170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 2004, 1831, 0, 1871, 1929,
	2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823,
	264, 0, 0, 0, 0, 0, 0, 0, 1874, 1898,
	1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	1913, 0, 0, 0, 1784, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780,
	1965, 1995, 1857, 302, 0, 2001, 1855, 1854, 1939, 1785,
	1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354,
	1949, 1957, 0, 199, 314, 1972, 1813, 1830, 246, 0,
	393, 1925, 468, 0, 279, 0, 1906, 392, 316, 461,
	1940, 2003, 467, 1842, 443, 478, 483, 272, 1882, 235,
	421, 262, 255, 1821, 1962, 1767, 285, 376, 250, 307,
	1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1973, 1956,
	1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980,
	1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029,
	258, 1958, 474, 0, 407, 406, 1845, 293, 1959, 0,
	0, 386, 0, 303, 205, 1984, 487, 221, 310, 451,
	0, 278, 353, 1927, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 1955, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 2011, 323, 267, 271,
	287, 298, 1926, 390, 428, 475, 1917, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1951, 217, 238, 429, 211,
	1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865,
	1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282,
	1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018, 350,
	357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774,
	1998, 1907, 1893, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 1896, 426, 321, 0, 207, 0,
	425, 2009, 2035, 440, 227, 1800, 1966, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	1942, 2032, 361, 394, 234, 470, 422, 263, 1796, 0,
	1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954,
	1789, 0, 0, 1992, 1993, 0, 1887, 2002, 1775, 0,
	1970, 0, 0, 0, 0, 1934, 2030, 1847, 243, 0,
	1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1988, 1987,
	1986, 1989, 0, 2023, 2021, 2024, 1790, 1811, 1833, 1883,
	1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	1905, 200, 213, 313, 2031, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1967, 1912, 0, 1851,
	1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758,
	1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862,
	1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969,
	1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 1858, 197, 0, 0, 203, 0, 204, 206, 1843,
	202, 1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449,
	1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899,
	358, 1837, 1777, 0, 1760, 1815, 1764, 1828, 1765, 1812,
	260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245,
	1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0,
	0, 479, 0, 2017, 315, 1982, 0, 477, 424, 340,
	0, 0, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915,
	2012, 1838, 1924, 2013, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 2004, 1831, 0, 1871, 1929, 2033, 1763, 1916, 0,
	1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0,
	0, 0, 0, 0, 1874, 1898, 1950, 1856, 0, 469,
	1935, 1945, 1963, 1848, 377, 284, 0, 0, 0, 0,
	0, 0, 3923, 0, 1817, 0, 1913, 0, 0, 0,
	1784, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1791, 1761,
	1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302,
	0, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312,
	1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 0, 199,
	314, 1972, 1813, 1830, 246, 0, 393, 1925, 468, 0,
	279, 0, 1906, 392, 316, 461, 1940, 2003, 467, 1842,
	443, 478, 483, 272, 1882, 235, 421, 262, 255, 1821,
	1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814, 242,
	1943, 1914, 1977, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798,
	1788, 1829, 2005, 294, 286, 1980, 1978, 1832, 362, 225,
	1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474, 0,
	407, 406, 1845, 293, 1959, 0, 0, 386, 0, 303,
	205, 1984, 487, 221, 310, 451, 0, 278, 353, 1927,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	1955, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 2011, 323, 267, 271, 287, 298, 1926, 390,
	428, 475, 1917, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863,
	1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947,
	1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247,
	1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020,
	460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	1896, 426, 321, 0, 207, 0, 425, 2009, 2035, 440,
	227, 1800, 1966, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 1942, 2032, 361, 394,
	234, 470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795,
	1900, 1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992,
	1993, 0, 1887, 2002, 1775, 0, 1970, 0, 0, 0,
	0, 1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0,
	1877, 1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023,
	2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919,
	1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 1905, 200, 213, 313,
	2031, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804,
	1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816,
	1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903,
	1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473,
	253, 1885, 1910, 1948, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 1858, 197, 0,
	0, 203, 0, 204, 206, 1843, 202, 1990, 2026, 1922,
	1936, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840,
	2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 0,
	1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902,
	2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826,
	1825, 1928, 1985, 2007, 1880, 0, 0, 479, 0, 2017,
	315, 1982, 0, 477, 424, 340, 0, 0, 1876, 1991,
	1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1920, 2004, 1831, 0,
	1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997,
	1822, 1823, 264, 0, 0, 0, 0, 0, 0, 0,
	1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848,
	377, 284, 0, 0, 0, 0, 0, 0, 3220, 0,
	1817, 0, 1913, 0, 0, 0, 1784, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759,
	341, 1780, 1965, 1995, 1857, 302, 0, 2001, 1855, 1854,
	1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786,
	1839, 354, 1949, 1957, 0, 199, 314, 1972, 1813, 1830,
	246, 0, 393, 1925, 468, 0, 279, 0, 1906, 392,
	316, 461, 1940, 2003, 467, 1842, 443, 478, 483, 272,
	1882, 235, 421, 262, 255, 1821, 1962, 1767, 285, 376,
	250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294,
	286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953,
	472, 2029, 258, 1958, 474, 0, 407, 406, 1845, 293,
	1959, 0, 0, 386, 0, 303, 205, 1984, 487, 221,
	310, 451, 0, 278, 353, 1927, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 1955, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 2011, 323,
	267, 271, 287, 298, 1926, 390, 428, 475, 1917, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1951, 217, 238,
	429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210,
	1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921,
	1805, 282, 1938, 464, 465, 247, 1781, 2019, 212, 1782,
	2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894,
	1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 1896, 426, 321, 0,
	207, 0, 425, 2009, 2035, 440, 227, 1800, 1966, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 1942, 2032, 361, 394, 234, 470, 422, 263,
	1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015,
	2016, 1954, 1789, 0, 0, 1992, 1993, 0, 1887, 2002,
	1775, 0, 1970, 0, 0, 0, 0, 1934, 2030, 1847,
	243, 0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0,
	1988, 1987, 1986, 1989, 0, 2023, 2021, 2024, 1790, 1811,
	1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820,
	1879, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 1905, 200, 213, 313, 2031, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1967, 1912,
	0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347,
	1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844,
	1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944,
	1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 1858, 197, 0, 0, 203, 0, 204,
	206, 1843, 202, 1990, 2026, 1922, 1936, 1827, 2006, 0,
	1968, 449, 1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930,
	1776, 1899, 358, 1837, 1777, 0, 1760, 1815, 1764, 1828,
	1765, 1812, 260, 1808, 1971, 1902, 2008, 1881, 1923, 1933,
	259, 245, 1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007,
	1880, 0, 0, 479, 0, 2017, 315, 1982, 0, 477,
	424, 340, 0, 0, 1876, 1991, 1897, 1960, 1859, 1932,
	1792, 1915, 2012, 1838, 1924, 2013, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 2004, 1831, 0, 1871, 1929, 2033, 1763,
	1916, 0, 1768, 1779, 2027, 1997, 1822, 1823, 264, 0,
	0, 0, 0, 0, 0, 0, 1874, 1898, 1950, 1856,
	0, 469, 1935, 1945, 1963, 1848, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 1913, 0,
	0, 0, 1784, 1770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	1791, 1761, 1819, 1952, 1762, 1759, 341, 1780, 1965, 1995,
	1857, 302, 0, 2001, 1855, 1854, 1939, 1785, 1975, 2025,
	1841, 312, 1783, 196, 1778, 1786, 1839, 354, 1949, 1957,
	0, 199, 314, 1972, 1813, 1830, 246, 0, 393, 1925,
	468, 0, 279, 0, 1906, 392, 316, 461, 1940, 2003,
	467, 1842, 443, 478, 483, 272, 1882, 235, 421, 262,
	255, 1821, 1962, 1767, 285, 376, 250, 307, 1860, 1931,
	1814, 242, 1943, 1914, 1977, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 1973, 1956, 1979, 1807,
	1787, 1798, 1788, 1829, 2005, 294, 286, 1980, 1978, 1832,
	362, 225, 1895, 1888, 1875, 1953, 472, 2029, 258, 1958,
	474, 0, 407, 406, 1845, 293, 1959, 0, 0, 386,
	0, 303, 205, 1984, 487, 221, 310, 451, 0, 278,
	353, 1927, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 1955, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 2011, 323, 267, 271, 287, 298,
	1926, 390, 428, 475, 1917, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 1951, 217, 238, 429, 211, 1999, 1974,
	1908, 1863, 1869, 1769, 0, 210, 1864, 1865, 1866, 1867,
	1868, 1947, 1818, 1834, 1806, 1921, 1805, 282, 1938, 464,
	465, 247, 1781, 2019, 212, 1782, 2018, 350, 357, 349,
	2022, 2020, 460, 2000, 1909, 1894, 1892, 1774, 1998, 1907,
	1893, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 1896, 426, 321, 0, 207, 0, 425, 2009,
	2035, 440, 227, 1800, 1966, 455, 2324, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 1942, 2032,
	361, 394, 234, 470, 422, 263, 1796, 0, 1799, 1794,
	1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954, 1789, 0,
	0, 1992, 1993, 0, 1887, 2002, 1775, 0, 1970, 0,
	0, 0, 0, 1934, 2030, 1847, 243, 0, 1771, 1772,
	1773, 0, 1877, 1878, 0, 0, 1988, 1987, 1986, 1989,
	0, 2023, 2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886,
	1918, 1919, 1964, 1937, 1946, 1820, 1879, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 1905, 200,
	213, 313, 2031, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 1967, 1912, 0, 1851, 1853, 1852,
	1802, 1804, 1803, 1801, 2034, 347, 1994, 1758, 1766, 1793,
	1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873,
	1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981,
	1983, 473, 253, 1885, 1910, 1948, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 1858,
	197, 0, 0, 203, 0, 204, 206, 1843, 202, 1990,
	2026, 1922, 1936, 1827, 2006, 0, 1968, 449, 1861, 2010,
	1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899, 358, 1837,
	1777, 0, 1760, 1815, 1764, 1828, 1765, 1812, 260, 1808,
	1971, 1902, 2008, 1881, 1923, 1933, 259, 245, 1891, 1890,
	1996, 1826, 1825, 1928, 1985, 2007, 1880, 0, 0, 479,
	0, 2017, 315, 1982, 0, 477, 424, 340, 0, 0,
	1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838,
	1924, 2013, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1920, 2004,
	1831, 0, 1871, 1929, 2033, 1763, 1916, 0, 1768, 1779,
	2027, 1997, 1822, 1823, 264, 0, 0, 0, 0, 0,
	0, 0, 1874, 1898, 1950, 1856, 0, 469, 1935, 1945,
	1963, 1848, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 1913, 0, 0, 0, 1784, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952,
	1762, 1759, 341, 1780, 1965, 1995, 1857, 302, 0, 2001,
	1855, 1854, 1939, 1785, 1975, 2025, 1841, 312, 1783, 196,
	1778, 1786, 1839, 354, 1949, 1957, 0, 199, 314, 1972,
	1813, 1830, 246, 0, 393, 1925, 468, 0, 279, 0,
	1906, 392, 316, 461, 1940, 2003, 467, 1842, 443, 478,
	483, 272, 1882, 235, 421, 262, 255, 1821, 1962, 1767,
	285, 376, 250, 307, 1860, 1931, 1814, 242, 1943, 1914,
	1977, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829,
	2005, 294, 286, 1980, 1978, 1832, 362, 225, 1895, 1888,
	1875, 1953, 472, 2029, 258, 1958, 474, 0, 407, 406,
	1845, 293, 1959, 0, 0, 386, 0, 303, 205, 1984,
	487, 221, 310, 451, 0, 278, 353, 1927, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 1955, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	2011, 323, 267, 271, 287, 298, 1926, 390, 428, 475,
	1917, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 1951,
	217, 238, 429, 211, 1999, 1974, 1908, 1863, 1869, 1769,
	0, 210, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834,
	1806, 1921, 1805, 282, 1938, 464, 465, 247, 1781, 2019,
	212, 1782, 2018, 350, 357, 349, 2022, 2020, 460, 2000,
	1909, 1894, 1892, 1774, 1998, 1907, 1893, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 1896, 426,
	321, 0, 207, 0, 425, 2009, 2035, 440, 227, 1800,
	1966, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 1942, 2032, 361, 394, 234, 470,
	422, 263, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901,
	2014, 2015, 2016, 1954, 1789, 0, 0, 1992, 1993, 0,
	1887, 2002, 1775, 0, 1970, 0, 0, 0, 0, 1934,
	2030, 1847, 243, 0, 1771, 1772, 1773, 0, 1877, 1878,
	0, 0, 1988, 1987, 1986, 1989, 0, 2023, 2021, 2024,
	1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937,
	1946, 1820, 1879, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 1905, 200, 213, 313, 2031, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	1967, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801,
	2034, 347, 1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835,
	1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911,
	1941, 1944, 1961, 1969, 1976, 1981, 1983, 473, 253, 1885,
	1910, 1948, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 4096,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 1858, 197, 0, 0, 203,
	0, 204, 206, 1843, 202, 1990, 2026, 1922, 1936, 1827,
	2006, 0, 1968, 449, 1861, 2010, 1810, 1840, 2028, 1846,
	1849, 1930, 1776, 1899, 358, 1837, 1777, 0, 1760, 1815,
	1764, 1828, 1765, 1812, 260, 1808, 1971, 1902, 2008, 1881,
	1923, 1933, 259, 245, 1891, 1890, 1996, 1826, 1825, 1928,
	1985, 2007, 1880, 0, 0, 479, 0, 2017, 315, 1982,
	0, 477, 424, 340, 0, 0, 1876, 1991, 1897, 1960,
	1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 2004, 1831, 0, 1871, 1929,
	2033, 1763, 1916, 0, 1768, 1779, 2027, 1997, 1822, 1823,
	264, 0, 0, 0, 0, 0, 0, 0, 1874, 1898,
	1950, 1856, 0, 469, 1935, 1945, 1963, 1848, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	1913, 0, 0, 0, 1784, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 341, 1780,
	1965, 1995, 1857, 302, 0, 2001, 1855, 1854, 1939, 1785,
	1975, 2025, 1841, 312, 1783, 196, 1778, 1786, 1839, 354,
	1949, 1957, 0, 199, 314, 1972, 1813, 1830, 246, 0,
	393, 1925, 468, 0, 279, 0, 1906, 392, 316, 461,
	1940, 2003, 467, 1842, 443, 478, 483, 272, 1882, 235,
	421, 262, 255, 1821, 1962, 1767, 285, 376, 250, 307,
	1860, 1931, 1814, 242, 1943, 1914, 1977, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 1973, 1956,
	1979, 1807, 1787, 1798, 1788, 1829, 2005, 294, 286, 1980,
	1978, 1832, 362, 225, 1895, 1888, 1875, 1953, 472, 2029,
	258, 1958, 474, 0, 407, 406, 1845, 293, 1959, 0,
	0, 386, 0, 303, 205, 1984, 487, 221, 310, 451,
	0, 278, 353, 1927, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 1955, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 2011, 323, 267, 271,
	287, 298, 1926, 390, 428, 475, 1917, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 1951, 217, 238, 429, 211,
	1999, 1974, 1908, 1863, 1869, 1769, 0, 210, 1864, 1865,
	1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 282,
	1938, 464, 465, 247, 1781, 2019, 212, 1782, 2018, 350,
	357, 349, 2022, 2020, 460, 2000, 1909, 1894, 1892, 1774,
	1998, 1907, 1893, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 1896, 426, 321, 0, 207, 0,
	425, 2009, 2035, 440, 227, 1800, 1966, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	1942, 2032, 361, 394, 234, 470, 422, 263, 1796, 0,
	1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015, 2016, 1954,
	1789, 0, 0, 1992, 1993, 0, 1887, 2002, 1775, 0,
	1970, 0, 0, 0, 0, 1934, 2030, 1847, 243, 0,
	1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1988, 1987,
	1986, 1989, 0, 2023, 2021, 2024, 1790, 1811, 1833, 1883,
	1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820, 1879, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	1905, 200, 213, 313, 2031, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 1967, 1912, 0, 1851,
	1853, 1852, 1802, 1804, 1803, 1801, 2034, 347, 1994, 1758,
	1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862,
	1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1961, 1969,
	1976, 1981, 1983, 473, 253, 1885, 1910, 1948, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 1858, 197, 0, 0, 203, 0, 204, 206, 1843,
	202, 1990, 2026, 1922, 1936, 1827, 2006, 0, 1968, 449,
	1861, 2010, 1810, 1840, 2028, 1846, 1849, 1930, 1776, 1899,
	358, 1837, 1777, 0, 1760, 1815, 1764, 1828, 1765, 1812,
	260, 1808, 1971, 1902, 2008, 1881, 1923, 1933, 259, 245,
	1891, 1890, 1996, 1826, 1825, 1928, 1985, 2007, 1880, 0,
	0, 479, 0, 2017, 315, 1982, 0, 477, 424, 340,
	0, 0, 1876, 1991, 1897, 1960, 1859, 1932, 1792, 1915,
	2012, 1838, 1924, 2013, 0, 0, 0, 0, 0, 0,
	4378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1920, 2004, 1831, 0, 1871, 1929, 2033, 1763, 1916, 0,
	1768, 1779, 2027, 1997, 1822, 1823, 264, 0, 0, 0,
	0, 0, 0, 0, 1874, 1898, 1950, 1856, 0, 469,
	1935, 1945, 1963, 1848, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 1913, 0, 0, 0,
	1784, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1791, 1761,
	1819, 1952, 1762, 1759, 341, 1780, 1965, 1995, 1857, 302,
	0, 2001, 1855, 1854, 1939, 1785, 1975, 2025, 1841, 312,
	1783, 196, 1778, 1786, 1839, 354, 1949, 1957, 0, 199,
	314, 1972, 1813, 1830, 246, 0, 393, 1925, 468, 0,
	279, 0, 1906, 392, 316, 461, 1940, 2003, 467, 1842,
	443, 478, 483, 272, 1882, 235, 421, 262, 255, 1821,
	1962, 1767, 285, 376, 250, 307, 1860, 1931, 1814, 242,
	1943, 1914, 1977, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 1973, 1956, 1979, 1807, 1787, 1798,
	4381, 4382, 4383, 294, 286, 1980, 1978, 1832, 362, 225,
	1895, 1888, 1875, 1953, 472, 2029, 258, 1958, 474, 0,
	407, 406, 1845, 293, 1959, 0, 0, 386, 0, 303,
	205, 1984, 487, 221, 310, 451, 0, 278, 353, 1927,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	1955, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 2011, 323, 267, 271, 287, 298, 1926, 390,
	428, 475, 1917, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 1951, 217, 238, 429, 211, 1999, 1974, 1908, 1863,
	1869, 1769, 0, 210, 1864, 1865, 1866, 1867, 1868, 1947,
	1818, 1834, 1806, 1921, 1805, 282, 1938, 464, 465, 247,
	1781, 2019, 212, 1782, 2018, 350, 357, 349, 2022, 2020,
	460, 2000, 1909, 1894, 1892, 1774, 1998, 1907, 1893, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	1896, 426, 321, 0, 207, 0, 425, 2009, 2035, 440,
	227, 1800, 1966, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 1942, 2032, 361, 394,
	234, 470, 422, 263, 1796, 0, 1799, 1794, 1797, 1795,
	1900, 1901, 2014, 2015, 2016, 1954, 1789, 0, 0, 1992,
	1993, 0, 1887, 2002, 1775, 0, 1970, 0, 0, 0,
	0, 1934, 2030, 1847, 243, 0, 1771, 1772, 1773, 0,
	1877, 1878, 0, 0, 1988, 1987, 1986, 1989, 0, 2023,
	2021, 2024, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919,
	1964, 1937, 1946, 1820, 1879, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 1905, 200, 213, 313,
	2031, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 1967, 1912, 0, 1851, 1853, 1852, 1802, 1804,
	1803, 1801, 2034, 347, 1994, 1758, 1766, 1793, 1809, 1816,
	1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903,
	1904, 1911, 1941, 1944, 1961, 1969, 1976, 1981, 1983, 473,
	253, 1885, 1910, 1948, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 1858, 197, 0,
	0, 203, 0, 204, 206, 1843, 202, 1990, 2026, 1922,
	1936, 1827, 2006, 0, 1968, 449, 1861, 2010, 1810, 1840,
	2028, 1846, 1849, 1930, 1776, 1899, 358, 1837, 1777, 0,
	1760, 1815, 1764, 1828, 1765, 1812, 260, 1808, 1971, 1902,
	2008, 1881, 1923, 1933, 259, 245, 1891, 1890, 1996, 1826,
	1825, 1928, 1985, 2007, 1880, 0, 0, 479, 0, 2017,
	315, 1982, 0, 477, 424, 340, 0, 0, 1876, 1991,
	1897, 1960, 1859, 1932, 1792, 1915, 2012, 1838, 1924, 2013,
	0, 0, 0, 0, 0, 0, 3170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1920, 2004, 1831, 0,
	1871, 1929, 2033, 1763, 1916, 0, 1768, 1779, 2027, 1997,
	1822, 1823, 264, 0, 0, 0, 0, 0, 0, 0,
	1874, 1898, 1950, 1856, 0, 469, 1935, 1945, 1963, 1848,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 1913, 0, 0, 0, 1784, 1770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759,
	341, 1780, 1965, 1995, 1857, 302, 0, 2001, 1855, 1854,
	1939, 1785, 1975, 2025, 1841, 312, 1783, 196, 1778, 1786,
	1839, 354, 1949, 1957, 0, 199, 314, 1972, 1813, 1830,
	246, 0, 393, 1925, 468, 0, 279, 0, 1906, 392,
	316, 461, 1940, 2003, 467, 1842, 443, 478, 483, 272,
	1882, 235, 421, 262, 255, 1821, 1962, 1767, 285, 376,
	250, 307, 1860, 1931, 1814, 242, 1943, 1914, 1977, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	1973, 1956, 1979, 1807, 1787, 1798, 1788, 1829, 2005, 294,
	286, 1980, 1978, 1832, 362, 225, 1895, 1888, 1875, 1953,
	472, 2029, 258, 1958, 474, 0, 407, 406, 1845, 293,
	1959, 0, 0, 386, 0, 303, 205, 1984, 487, 221,
	310, 451, 0, 278, 353, 1927, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 1955, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 2011, 323,
	267, 271, 287, 298, 1926, 390, 428, 475, 1917, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 1951, 217, 238,
	429, 211, 1999, 1974, 1908, 1863, 1869, 1769, 0, 210,
	1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921,
	1805, 282, 1938, 464, 465, 247, 1781, 2019, 212, 1782,
	2018, 350, 357, 349, 2022, 2020, 460, 2000, 1909, 1894,
	1892, 1774, 1998, 1907, 1893, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 1896, 426, 321, 0,
	207, 0, 425, 2009, 2035, 440, 227, 1800, 1966, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 1942, 2032, 361, 394, 234, 470, 422, 263,
	1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2014, 2015,
	2016, 1954, 1789, 0, 0, 1992, 1993, 0, 1887, 2002,
	1775, 0, 1970, 0, 0, 0, 0, 1934, 2030, 1847,
	243, 0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0,
	1988, 1987, 1986, 1989, 0, 2023, 2021, 2024, 1790, 1811,
	1833, 1883, 1884, 1886, 1918, 1919, 1964, 1937, 1946, 1820,
	1879, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 1905, 200, 213, 313, 2031, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 1967, 1912,
	0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2034, 347,
	1994, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844,
	1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944,
	1961, 1969, 1976, 1981, 1983, 473, 253, 1885, 1910, 1948,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 1858, 197, 0, 0, 203, 0, 204,
	206, 1843, 202, 1990, 2026, 1922, 1936, 590, 449, 584,
	595, 577, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 260,
	0, 0, 585, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 315, 0, 0, 477, 424, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 575, 578,
	0, 0, 0, 341, 0, 0, 0, 583, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	196, 0, 0, 0, 354, 587, 0, 0, 199, 314,
	591, 0, 0, 246, 0, 393, 0, 468, 0, 279,
	0, 0, 392, 316, 461, 0, 594, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 579, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 0, 407,
	406, 582, 293, 0, 0, 0, 386, 0, 303, 205,
	0, 487, 221, 310, 451, 0, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 0,
	1349, 409, 456, 223, 427, 580, 581, 588, 589, 592,
	593, 596, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 0, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 586, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 0, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 590, 449, 584, 595,
	577, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 260, 0,
	0, 585, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 575, 578, 0,
	0, 0, 341, 0, 0, 0, 583, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 587, 0, 0, 199, 314, 591,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 594, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 579, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	582, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 572,
	409, 456, 223, 427, 580, 581, 588, 589, 592, 593,
	596, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 586, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 2466, 2470, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 2469, 302, 192, 0, 0, 0,
	2462, 0, 2463, 2465, 2464, 312, 1165, 196, 0, 2460,
	2468, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 1159, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	1476, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1478, 1477, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 1472,
	1473, 1471, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 1165, 196, 0, 1161, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 1159, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	3549, 196, 0, 0, 3548, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3516, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 1165, 196,
	0, 0, 2468, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2919, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 1165, 196, 0, 0,
	2468, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1478, 1477, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 2270,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3507, 0, 0, 0,
	0, 0, 3509, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	2041, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 2041, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 1165, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3361, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3509, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 161, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3217, 681, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 674, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 177, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 180, 407, 406,
	0, 293, 0, 181, 170, 386, 182, 303, 205, 0,
	487, 221, 310, 451, 161, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 175, 183, 0, 383,
	409, 456, 223, 427, 173, 176, 185, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 178, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 174, 179, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 674,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 184, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 549, 546, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 161, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 2540, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	161, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 2426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 161, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 177, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 166,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 180,
	407, 406, 0, 293, 0, 181, 170, 386, 182, 303,
	205, 0, 487, 221, 310, 451, 161, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 175, 183,
	0, 383, 409, 456, 223, 427, 173, 176, 185, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 178, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 174,
	179, 0, 0, 0, 243, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	2166, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 184, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 0, 197, 0,
	0, 203, 0, 204, 206, 449, 202, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 177, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 180, 407, 406, 0, 293,
	0, 181, 170, 386, 182, 303, 205, 0, 487, 221,
	310, 451, 161, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 175, 183, 0, 383, 409, 456,
	223, 427, 173, 176, 185, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	178, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 174, 179, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 184,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 155, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 177, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 166, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 180, 407, 406, 0, 293, 0, 181,
	170, 386, 182, 303, 205, 0, 487, 221, 310, 451,
	161, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 175, 183, 0, 383, 409, 456, 223, 427,
	173, 176, 185, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 178, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 174, 179, 0, 0, 0, 243, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 184, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	177, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 166, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 180, 407, 406, 0, 293, 0, 181, 170, 386,
	182, 303, 205, 0, 487, 221, 310, 451, 161, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	175, 183, 0, 383, 409, 456, 223, 427, 173, 176,
	185, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 178, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 174, 179, 0, 0, 0, 243, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 184, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 166, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 654, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 166, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 1163, 733, 735, 736, 737, 738,
	0, 0, 0, 734, 2316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 729, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 730, 731, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 4477, 0, 0, 0,
	0, 0, 260, 4475, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 4476, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2991, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 2992, 2993, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 1624,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 2470, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 2469, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3563, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3561, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3559, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3557, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3552, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3539, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3537, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 3466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3457, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 2590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 2748, 2747, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 42, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 71, 0, 0, 0, 4289, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4282, 0,
	0, 0, 0, 4528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 62, 92, 91, 0, 0, 0, 89, 57,
	0, 0, 0, 71, 4289, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4285, 4282, 0, 0, 0, 0,
	4520, 0, 0, 0, 4294, 4286, 4287, 4288, 4292, 4293,
	4290, 0, 4291, 0, 4295, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 69, 70, 0, 4285, 0,
	0, 0, 4282, 60, 0, 0, 0, 4518, 4294, 4286,
	4287, 4288, 4292, 4293, 4290, 4525, 4291, 0, 4295, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4283, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 4296, 4284, 0, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 4296, 4284, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 69, 70,
	0, 4285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4294, 4286, 4287, 4288, 4292, 4293, 4290, 0, 4291,
	0, 4295, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 69, 70, 0, 4285, 0,
	60, 0, 0, 42, 0, 0, 0, 0, 4294, 4286,
	4287, 4288, 4292, 4293, 4290, 0, 4291, 71, 4295, 0,
	0, 0, 0, 78, 93, 79, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 59, 61, 0, 0, 4289, 0, 87, 4296, 4284,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4282, 0, 0, 0,
	0, 4398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 4296, 4284, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 49, 90, 56, 55, 58, 93, 0,
	0, 47, 96, 0, 0, 0, 0, 0, 4283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4294, 4286, 4287, 4288, 4292, 4293, 4290, 0,
	4291, 0, 4295, 0, 0, 0, 85, 78, 0, 79,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 84, 0, 0, 0, 96, 0, 0, 0,
	0, 60, 4283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 85, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4296,
	4284, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4294, 4286, 4287, 4288,
	4292, 4293, 4290, 0, 4291, 0, 4295, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4296, 4284, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85,
}

var yyPact = [...]int{
	2010, -1000, -497, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2938, -1000, 2938, 370, -1000, 449, -1000, 1418, 811,
	-1000, -1000, -1000, -1000, -1000, 568, 310, 60831, 1119, 54919,
	81495, -286, 4636, 80757, 158, -1000, 158, 409, 57133, 774,
	875, 80019, 2760, 2164, 160, 13, 7, 242, 41635, 1011,
	272, 188, 206, 204, 184, 1192, -1000, 63045, 870, -1000,
	309, -1000, -1000, -1000, -1000, -1000, 56395, 2982, 2997, 2982,
	-1000, 2919, 2934, -1000, -1000, 2919, 2290, 2290, -1000, 63045,
	15941, -1000, -1000, -1000, -1000, -1000, 33329, -1000, 1310, -1000,
	61569, 43849, 2938, -1000, 1092, 1076, -106, 1010, 1010, 868,
	1010, 1010, -458, 1118, -1000, 827, 1608, -1000, -1000, -1000,
	-1000, 1605, 61569, 68949, 1112, 78543, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 54181, 61569, -1000, 1267, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61569,
	2970, 2969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2567, 2565, 53443, 535, 2838, 1661, 316,
	1661, -1000, -1000, 1600, -1000, 906, 905, 902, 900, 891,
	893, 33, 1554, 1662, 2909, -1000, 2519, 2919, 2919, 1554,
	-1000, 889, -1000, -1000, -1000, -1000, -1000, -1000, 1337, -1000,
	-1000, 1690, 1690, 563, 1072, 923, 926, 923, 2881, 1604,
	2837, 2835, 2188, 2831, 873, 2829, 2561, -1000, 1265, -1000,
	-1000, 68, -1000, 2163, 61569, -1000, -1000, 2028, 2020, 687,
	2468, 1144, 2611, -1000, -1000, 662, 704, 2549, 703, 2549,
	2549, 2549, 373, 2549, 2549, 5, 2549, 2549, 2549, 294,
	2549, 345, 2549, 2549, 2549, 2549, 2549, -1000, 2197, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 40886, 2864, 192, -1000, -192, 181, 2887, 920, -1000,
	-1000, -1000, 284, 1310, 63783, 2507, -1000, 2519, -1000, -1000,
	-1000, 2517, 2519, -1000, 2063, 1110, 1011, 653, -1000, 507,
	-1000, -1000, -1000, 2861, 2519, 12785, -1000, -1000, 1655, -1000,
	2519, 2519, 1310, 2895, 1310, 1310, 2892, 2889, 1310, 2833,
	30305, 20477, 2665, 1750, -1000, -1000, -1000, -1000, 1310, 2967,
	-1000, 43111, 1262, -1000, 20477, 2056, 2519, 2519, -1000, 1203,
	1261, -1000, 1140, 1245, -1000, -1000, 21233, 21233, 21233, 21233,
	21233, 21233, 21233, -1000, -1000, -1000, -1000, -1000, -1000, 2280,
	2279, 2277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2519, 1253, 1251, 1250, 2519, 2519, 2519, 2519,
	2519, -1000, 18965, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2519, 2519, 2519, 2519, 2519,
	2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519,
	20477, 2519, 2519, 2519, 2519, 2519, -1000, 2519, 2519, 2519,
	2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519,
	2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519,
	2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519,
	2519, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2519, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2519, 2519, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2519, 1016, 1016, 60093,
	2516, -50, 32573, -1000, -1000, -1000, -1000, 31061, 66735, 1463,
	-1000, -1000, -1000, -1000, 2827, -1000, -1000, 1247, 1245, 1203,
	1202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2938,
	346, -1000, 2414, -1000, -1000, 12220, 12220, 12220, 12220, 12220,
	12220, 49753, -1000, -1000, -1000, 2560, 2919, -1000, 78543, 61569,
	854, 2160, 1658, 2159, 80019, 80019, 1010, -1000, 779, 68949,
	68949, -361, 1010, 817, 68949, 819, 2513, 1064, 2511, 1062,
	2193, 1011, 2606, 61569, 2157, 2156, 80019, 80019, 68949, 68949,
	80019, -1000, -1000, -1000, 29549, -1000, 1314, 2510, 49015, 48277,
	52705, 52705, -1000, -1000, -1000, 878, -1000, 1661, -1000, 5769,
	20477, 1010, 1010, 61569, 61569, 61569, 61569, 61569, -1000, 61569,
	-1000, -1000, 1661, -1000, -1000, 1661, 1661, 1661, 1554, 2966,
	1554, -1000, -1000, -1000, 1661, 80757, 80757, 20477, -1000, 21233,
	68211, 1344, -1000, -1000, 1661, -1000, 80757, 944, 944, 944,
	-1000, 2150, 549, 347, -1000, 923, 346, -1000, -1000, 2766,
	2884, 2883, 2149, 873, 873, -1000, 2286, 873, 2496, -1000,
	1593, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 873, 2881, 19721, 78543, -474, -1000, -1000,
	2509, -1000, 492, -1000, -1000, 941, 2605, 941, 8615, 68949,
	68949, 68949, -1000, 2549, 78543, -1000, 2549, 2549, 2549, 3,
	2549, 2549, -1000, -1000, 2549, -1000, -1000, -1000, 2549, -1000,
	-1000, 2549, -1000, -1000, -1000, 2549, 2549, -1000, 2549, 2549,
	-1000, -1000, -1000, -1000, -1000, 68949, 683, 2440, 2506, 2604,
	-1000, 1059, 186, -43, 148, -1000, -1000, -1000, -1000, -1000,
	-1000, 283, 280, 279, 277, -1000, -1000, -1000, -1000, 274,
	273, -1000, -1000, 59347, 59347, 927, -1000, 2507, 63783, 2880,
	25013, 870, -1000, 20477, 2843, -1000, 2843, -1000, -1000, -1000,
	381, -1000, 61569, 68949, 80019, 56395, 56395, 56395, 56395, -1000,
	2636, 2635, -1000, 2633, 2632, 2626, 519, 63783, -1000, 2861,
	370, 2412, 2290, 2290, 507, 12785, -1000, 2519, -1000, 63783,
	1214, 1089, 1081, 1079, 2766, -1000, -1000, -1000, -1000, -1000,
	2198, 2191, 2203, 15185, 21233, -1000, -1000, -1000, -1000, -1000,
	2982, 2982, -1000, -1000, -1000, -1000, -1000, -1000, 1712, 2977,
	1469, 2458, -1000, -1000, -1000, 2505, -1000, 2045, 1239, 1951,
	1770, -1000, -1000, -1000, -1000, -1000, -1000, 15941, -1000, 61569,
	-1000, 20477, 20477, 20477, 1764, -1000, 46801, -1000, -1000, -1000,
	25769, 1473, 21233, 1800, 1468, 21233, 21233, 21233, 21233, 21233,
	21233, 21233, 21233, 21233, 21233, 21233, 21233, 21233, 21233, 21233,
	1389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2148,
	-1000, 346, 38621, 15185, 38621, 649, 649, 78543, 1326, 1326,
	1326, 1326, 1326, 1326, 62307, -1000, -1000, -1000, 2876, 37109,
	78543, 38621, 2876, 2876, 2876, 2876, 2876, 2409, 1803, 63045,
	18965, 56395, 15185, 15185, 15185, 2290, 20477, 20477, 15185, 21233,
	15185, 18209, 17453, 22745, 15185, 15185, 2876, 1614, 1803, 28793,
	15185, -1000, 2290, -1000, -1000, -1000, -1000, 1972, -1000, -1000,
	-262, -262, -262, 412, 15185, 15185, 15185, 15185, 2290, 2290,
	15185, 15185, 15185, 15185, 15185, 15185, 2290, 2290, 2290, 15185,
	15185, 15185, 15185, 15185, 15185, 15185, 15185, 15185, 15185, 15185,
	15185, -1000, -1000, -1000, 1843, 58609, 56395, 61569, 2408, 2401,
	-1000, -1000, 1222, 31817, 2483, -1000, -31, -45, -50, -1000,
	-1000, 1315, -1000, -1000, -1000, -1000, 16697, -1000, -1000, -1000,
	26525, 2919, -1000, 42373, -1000, 45, -1000, -1000, -1000, 2534,
	-1000, 2537, 108, 525, 2537, 94, 90, 2537, 2537, 2537,
	-1000, -1000, -1000, -1000, 109, -1000, -1000, -1000, -1000, -1000,
	2559, 2553, -1000, 2534, 2534, 2534, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2546, 518, 2536, 2536, 2536, 2536, 2536, -1000, -1000, -1000,
	-1000, -1000, 983, -1000, -1000, -1000, 20477, 2833, 2772, 2558,
	2519, 1074, -459, 817, 2843, 2855, 2843, 874, -1000, 1220,
	2551, 80019, 855, 2422, -1000, 433, 2387, 1116, 57871, -1000,
	-1000, -1000, -1000, -1000, 61569, 61569, 68949, 68949, 68949, 61569,
	61569, 2504, -1000, -1000, -1000, -1000, -1000, 2498, -1000, 2387,
	-1000, -1000, 1219, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -432, -435, 61569, -1000,
	-1000, -1000, -1000, -1000, -1000, 2497, -1000, 2497, -1000, -1000,
	-1000, 2283, 1803, 2145, 2132, 2881, -1000, -1000, -1000, -1000,
	1566, -1000, -1000, -1000, -1000, 1661, 61569, 2881, -1000, -1000,
	-1000, 1803, 1096, 2564, 2519, 2290, -1000, -1000, -1000, 156,
	-1000, 151, -1000, -1000, -1000, 2128, -1000, -1000, -1000, -1000,
	-1000, 347, -1000, 21233, 2765, 2764, -1000, 2496, 2496, -1000,
	2496, 873, 64521, 2496, -1000, -1000, 2397, -1000, 305, 2282,
	61569, -1000, 63783, 59, -1000, -84, 77067, -1000, -1000, -1000,
	941, 77067, -1000, 294, 268, -1000, 1058, -1000, 2394, -1000,
	-1000, -1000, -1000, 2549, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 941, 420, 2495, 941, 68949, 68949,
	232, 2490, -1000, 1579, 1567, -1000, -1000, 144, -1000, -1000,
	-1000, -1000, 2908, -1000, -1000, 266, -56, -1000, 266, 2281,
	21233, -1000, 2519, 2352, -1000, 1207, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2519, -1000, -1000, -1000, -1000, 2826, 1463,
	1463, 1463, 6722, 433, 2603, 2557, 2602, 469, -1000, -1000,
	-1000, -1000, 2629, -1000, 2625, 2623, -1000, -1000, -1000, 2523,
	63783, 56395, -1000, -1000, -1000, 2290, 78543, 1129, -1000, 63783,
	2519, 2519, 2519, 21233, 21233, 1452, -1000, 21233, 21233, 1449,
	-1000, 21233, 21233, 1448, -1000, 2290, 2489, -1000, -1000, 1803,
	1206, 5007, -1000, 77805, 53, 2661, 30305, 30305, 20477, -1000,
	-1000, -1000, 26525, 2910, -1000, 2674, 2670, 2964, -1000, -1000,
	-1000, 1473, 1696, 1503, -1000, -1000, 1778, -1000, -1000, -1000,
	-1000, -1000, 1205, 2519, -1000, -1000, -1000, -1000, -1000, -1000,
	5090, -1000, -1000, -1000, -1000, 1800, 21233, 21233, 21233, 1096,
	5090, 4967, 1561, 1511, 1326, 1362, 1362, 1322, 1322, 1322,
	1322, 1322, 1488, 1488, -1000, -1000, -1000, -1000, 2290, -1000,
	2392, -1000, -1000, 2280, 2279, 2277, -1000, -1000, -1000, -1000,
	15185, -1000, -1000, -1000, -1000, -1000, -1000, 15185, 15185, 15185,
	15185, 15185, 20477, -1000, 2392, 2392, 2392, -1000, 1677, 2041,
	2299, 4710, 2392, 1369, 2963, 2392, 1334, 2961, 2392, 2374,
	21233, 21233, 21233, 2392, 2392, 15185, 1620, -1000, 20477, 2290,
	1256, 2290, 1203, 1202, 2392, -1000, 2290, 2488, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2487,
	2960, 2484, -1000, -1000, -1000, -1000, 2392, 2290, 2392, 2392,
	-129, -129, 2290, 2392, 2290, 2392, 2392, 2290, -129, -129,
	-129, 2392, 2392, 2392, 2392, 2392, 2392, 2392, 2392, 2392,
	2392, 2392, 2392, -1000, 2290, 1397, 61569, -1000, 2462, 1397,
	2420, 56395, -1000, -1000, 56395, 80757, 28037, -1000, 31061, -50,
	-22, -1000, -1000, 2483, -1000, -1000, 1599, -1000, -1000, 2276,
	1803, -1000, 1200, 2833, 5004, -1000, -1000, -1000, -1000, 2548,
	46063, -1000, 2708, 1233, 1233, 1233, 67473, 79281, 2707, -1000,
	-1000, 235, 31, -1000, -1000, -1000, 2014, -1000, 368, 520,
	2537, -1000, -1000, -1000, 2537, 2537, -1000, 2537, 2537, -1000,
	-1000, -1000, -1000, 2274, 2274, -1000, -1000, -1000, -1000, 2011,
	-1000, 2546, -1000, 2009, -1000, -1000, -1000, -1000, 235, 235,
	235, 235, 235, -1000, 2081, -1000, 2601, 78543, 2873, 61569,
	-364, -1000, -1000, -1000, 2948, -1000, -1000, 78543, 65997, 2600,
	-1000, -1000, 330, 68949, 427, 627, 338, -1000, 1645, -1000,
	-1000, 1056, -1000, 1054, -1000, -1000, 1111, -1000, 61569, 68949,
	78543, 2599, 2598, -1000, 52705, -1000, -1000, -1000, -1000, 2943,
	2123, 2114, -1000, 1554, 1661, -1000, 21233, 68949, -1000, 879,
	-1000, -1000, -1000, -1000, 5090, 21233, 21233, -1000, -1000, -1000,
	-1000, 1708, -1000, -1000, -1000, -1000, -46, -1000, -1000, 1053,
	1178, 1169, 77067, 1052, -1000, 343, 68949, -1000, 78543, -1000,
	77067, 371, 411, 77067, 1141, 2959, 2480, -1000, 1565, 1557,
	1550, 1542, 1528, 1527, 1522, 1499, 186, 2545, 2544, -1000,
	-1000, 249, -1000, 2775, -1000, -1000, 5090, -1000, -1000, 25013,
	38621, -1000, 1463, 1515, -1000, 1492, 2273, 1819, 862, -1000,
	-1000, -1000, 2933, 1235, 1146, 1039, 1463, 990, 457, 1047,
	2770, 2768, 554, 542, -1000, 1463, 990, 1266, 598, -1000,
	1443, 1442, 1440, 1433, 1428, 1411, 1409, 1402, 574, -366,
	-1000, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, -181,
	-231, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 34085, 1463, 1463, -299, -1000, 1117,
	648, -1000, -1000, 20477, 2539, -1000, 20477, -1000, -1000, -1000,
	-1000, -1000, 78543, 2523, 507, -1000, 2348, -1000, -1000, 1129,
	78543, 78543, 78543, 4634, 1894, 2519, 4619, 1870, 2519, 4182,
	1602, 2519, 2861, 15185, 24257, 2270, 2479, 2268, 2267, -1000,
	43, 2657, -1000, -1000, -1000, 61569, -1000, -1000, -1000, -1000,
	2943, 55657, 15941, -1000, -1000, -1000, -1000, 36353, 15185, -1000,
	1096, 5090, 4044, -1000, 21233, -1000, -1000, 2290, 2392, 2392,
	2392, 2392, 2392, 1803, -1000, -1000, -1000, 398, 1389, 398,
	-1000, 1389, 21233, -1000, 21233, 21233, -1000, 21233, 21233, -1000,
	-1000, 21233, 4104, 4069, 3978, -294, -1000, 2443, 1603, -1000,
	20477, 2002, -1000, -1000, -1000, -1000, -1000, 21233, 21233, 21233,
	21233, -1000, -1000, -1000, -1000, -1000, 76329, -1000, -129, -129,
	-129, -129, -129, -129, -1000, -1000, -1000, -129, -129, -129,
	-129, -129, -129, -129, -129, -129, -129, -129, -129, -1000,
	308, 2519, -1000, 27281, 2943, 56395, 2461, 2461, -1000, 1163,
	-1000, -1000, -1000, -59, -78, -1000, -1000, -1000, -1000, -1000,
	38621, -1000, -1000, -1000, 7285, -1000, 1463, 1463, 1463, 389,
	1463, 1463, 1463, 1463, 1463, -232, -239, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 171, 1463, 1463, 1463, 1463, 1463,
	1463, 34085, 1463, 1463, -368, 50491, 1137, 975, -1000, -1000,
	-1000, 79281, 79281, 79281, -1000, 79281, 79281, -1000, -1000, -1000,
	-1000, 51229, -1000, -1000, 1722, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2519, -491, 2008, 61569, -1000, 2824, 1461,
	7589, 2975, -1000, 2706, -1000, 2705, 2701, 2266, -1000, -1000,
	2373, 2363, 2349, -1000, 2537, -1000, -1000, -1000, -1000, -1000,
	2389, -1000, 2376, 2476, -1000, 2372, -420, 61569, -1000, -1000,
	2519, 1999, 2597, -1000, -1000, -1000, -1000, 2329, 2475, -1000,
	12220, 78543, 78543, 78543, 663, -299, 439, -1000, 68949, 355,
	433, 690, 2032, -396, 2854, 61569, 68949, -1000, -1000, -1000,
	-1000, -1000, -1000, 75591, 75591, -1000, -1000, 20477, -1000, -1000,
	2881, -1000, 5090, 2387, -1000, -1000, 5090, 5090, 1397, 1108,
	-1000, 68949, 1343, 74853, 1046, 68949, 358, 263, -1000, 2958,
	2957, 357, 2955, -1000, 247, 68949, 232, 2264, 2262, 2261,
	1996, 1993, 1971, 1967, 1953, -1000, 61569, 61569, 2259, -1000,
	-1000, -1000, 1447, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1388, 5042, 862, 1386, 1383, 1381, 1370, -1000, 169, 47539,
	79281, 1191, 993, -1000, -1000, 2519, -1000, 45325, 51229, 51229,
	51229, 78543, 2700, 2693, 78543, 51229, 51229, 78543, 51229, 856,
	2100, 2820, 1463, 103, -1000, -1000, -1000, 74115, -1000, 73377,
	757, 51967, 51229, 78543, 61569, 44587, -1000, -1000, -1000, -1000,
	72639, 1935, 78543, 78543, 71901, 71163, 70425, 69687, -1000, -280,
	974, 20477, 974, 1840, 1840, 2258, 2256, 2254, 1463, 1463,
	142, 1840, 2253, 142, 1840, 40133, 2252, 943, 974, 974,
	974, 1840, 1840, 1840, 1840, 2251, 407, 1976, 2249, 1840,
	2195, 2182, 974, -1000, -266, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1840, 2519, -1000, 360,
	876, 1045, 823, 0, 1803, 78543, 1803, 2370, -1000, -1000,
	2012, 78543, -1000, 2322, 2322, 2322, 21233, 21233, 21233, 21233,
	21233, 21233, 21233, 21233, 21233, 63783, -1000, -1000, 1149, 1,
	78543, -1000, 26, -1000, -1000, -1000, 2941, -1000, 2474, -1000,
	-1000, -1000, 2290, -1000, 21233, 5090, -1000, -129, -129, -129,
	-129, -129, 2290, 2534, 2534, 2534, -1000, 2534, 2536, 117,
	-1000, -1000, -1000, 2534, 136, 2534, 135, -1000, 2290, 2290,
	2290, 2395, 3940, 3705, 3631, 2912, 2395, 21233, 21233, 21233,
	2519, -119, -1000, 1803, 20477, 2936, 2710, 2395, 2395, -1000,
	-1000, 2095, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2591, 2591, 27281, 2861, -1000, 23501, -1000, 870, -1000,
	-1000, 78543, 2466, -1000, 1463, 1271, 1463, 1463, 2938, 2461,
	-1000, -1000, 1341, -1000, -1000, -1000, -1000, 974, 974, 974,
	1463, 2802, 1463, 1840, 1840, 2247, 2244, 2243, 1463, 1463,
	142, 1840, 2240, 142, 1840, 40133, 2238, 943, 974, 974,
	974, 1840, 1840, 1840, 1840, 2237, 407, -1000, 1961, 2234,
	1840, 2179, 2175, 974, -1000, -267, 1840, 2519, -282, 2368,
	-1000, 2534, 2534, 2692, 1233, -1000, -1000, -1000, -1000, -1000,
	-1000, 2533, -1000, -1000, 21233, 2872, -1000, 2532, 1404, -1000,
	-1000, -1000, -1000, 649, 2233, -1000, -1000, 21233, -1000, -1000,
	2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519, 2519,
	2519, 2519, 2519, -62, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2232, -1000, 1932, -1000, 1931, -1000, -1000,
	-1000, 2529, -1000, 2870, -1000, 61569, 239, 65997, -1000, 12220,
	12220, 12220, 0, 353, -1000, 1689, -1000, -1000, -1000, 2230,
	2229, 2228, 2387, 434, 1686, 399, -1000, 2862, 2860, 2227,
	2226, 2222, 2221, 1913, -1000, -1000, 2563, 78543, 2473, -1000,
	1803, 1661, 26, 61569, 263, -1000, -1000, -1000, 68949, 263,
	-1000, -1000, 387, 68949, 68949, 2954, 68949, 413, 1141, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2360, 2358,
	-1000, -1000, -1000, -1000, -1000, -1000, 1148, 1167, 325, 322,
	-257, -1000, 477, 331, -1000, -1000, -1000, 51967, 938, 12220,
	12220, 2558, 1233, -1000, 2687, 1365, -1000, -1000, -1000, -1000,
	-1000, -1000, 51229, 2471, -422, -424, 1292, -449, -1000, -1000,
	-1000, -1000, 51967, 1463, 1389, 2799, 651, 318, 646, 313,
	-1000, -1000, -1000, -1000, 938, 1216, 1040, -1000, 2683, 51229,
	1038, 609, 312, -1000, 1769, -300, 2471, -1000, 2471, -1000,
	2471, -1000, 2471, -1000, -1000, -1000, 1803, -1000, -1000, -1000,
	-1000, -1000, -1000, 2220, 2218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -179, -1000, 40133, 360, -1000, 1893, 1866,
	1857, 1834, 1725, -1000, 2590, 80019, -1000, 616, 2586, 4930,
	649, 2355, -1000, 78543, -1000, -1000, -1000, -1000, -1000, 5090,
	5090, 2686, 5090, 5090, 2578, 5090, 5090, 1995, -1000, 35597,
	2519, -1000, -4, -1000, 2937, 2932, -1000, -1000, 5090, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 474, 470, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21233,
	21233, 21233, 21233, -1000, 2395, 2395, 2395, 21233, 2290, 2217,
	1803, 21233, 21233, -1000, -1000, 1368, -1000, 2899, 2849, -1000,
	2320, 63783, 2290, 2439, 2352, 2290, 428, -1000, -1000, -1000,
	63045, 56395, 2470, -1000, 2519, 2348, 2938, 27281, 20477, 20477,
	20477, 20477, 2919, -1000, -1000, -1000, -1000, 1389, 1463, 34841,
	-1000, -1000, -1000, -1000, -1000, 2215, 2211, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -185, -1000, 40133, -1000, 246, 50491,
	2848, 2848, 79281, 79281, 78543, 2395, 2519, 78543, -1000, -1000,
	-1000, -1000, -1000, 2395, -1000, -1000, 2314, 2312, 50491, 346,
	-1000, -396, 2907, -1000, 239, -1000, 2210, 815, 694, -1000,
	809, 807, 806, 801, 767, -1000, -1000, -1000, -1000, 2586,
	761, 353, -1000, -51, 1827, 1431, 2796, 557, -1000, -1000,
	-1000, -1000, 321, 433, -1000, 689, 2209, 688, 2208, -1000,
	-1000, 431, -1000, -1000, 2759, 2344, -1000, -4, -1000, 2868,
	263, 2868, 352, 1141, 1141, 68949, 1141, -1000, -1000, -1000,
	-1000, -269, 1822, 21233, 2519, 2519, 691, 2297, -1000, -1000,
	2094, -1000, -1000, 2528, 79281, 79281, 2324, -1000, 78543, -1000,
	-1000, -1000, -1000, -1000, 2842, 2840, -1000, -1000, 938, 1389,
	-1000, 1389, -1000, -1000, -1000, -1000, -1000, 51229, 78543, 51229,
	1034, 51229, -1000, -1000, 2519, 1107, -1000, -1000, -1000, -1000,
	2342, -1000, -1000, -1000, -1000, -1000, -1000, 450, 2205, 296,
	-1000, -1000, 1117, 634, -1000, -1000, -1000, -242, -1000, -1000,
	21233, 21233, 21233, -1000, 37865, 2721, 2718, -131, 20477, 20477,
	-1000, -1000, -1000, -1000, 2395, 2395, 2395, 2395, -1000, -1000,
	-1000, 339, -1000, -1000, 2395, 2395, 2938, 2931, -1000, -1000,
	2682, 2899, 2523, -1000, -1000, 2439, 428, -1000, 870, -1000,
	14429, -1000, 2919, -1000, 1803, 1803, 1803, 1803, -1000, -1000,
	1389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2342, 246,
	-1000, 40133, 1463, 2204, 1463, 1463, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2337, -487, 21233, 2335, -1000, -1000, -1000,
	2333, -1000, -1000, 849, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2754, 2751, 848, 876, -1000, 2202, 2201, -1000, 696,
	2038, 1269, -137, -1000, -1000, -1000, -1000, -1000, -1000, 630,
	2082, -1000, 385, -1000, -1000, 379, -1000, -1000, 2929, -396,
	21233, -1000, 2721, -1000, 68949, 2868, -1000, -1000, -1000, -1000,
	1141, -1000, 2519, 2928, -1000, 2395, 78543, 21233, 2519, 1494,
	-1000, -1000, 235, 235, 50491, 2558, 2526, -1000, 1365, 2669,
	21233, -1000, -1000, 1323, 1320, -1000, -1000, 1020, 51229, -1000,
	1365, 61569, 40133, -1000, -1000, -1000, -1000, 876, 1347, 658,
	2395, 2395, 2395, 2302, -1000, 9884, 356, -1000, -1000, 2689,
	2927, -1000, 78543, -1000, 1803, 2469, -1000, 1803, -1000, -1000,
	-1000, -1000, 2290, 290, -320, -1000, -1000, 1436, 20477, 2467,
	2974, -1000, -1000, -1000, -1000, 428, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1814, -1000, 2196, 2194, 963, -1000, -1000,
	-1000, 2395, -1000, 246, -304, 346, 865, 82966, -1000, -1000,
	-1000, -1000, 1725, -1000, -1000, -1000, -1000, 1813, -1000, -1000,
	2006, 672, 364, -1000, 2867, -1000, -1000, 1802, 5090, 1015,
	-303, -1000, -1000, -1000, 1365, -397, -1000, 2322, 2395, 78543,
	1793, 2326, 2525, 50491, -1000, 919, 5090, 1463, 1389, 51229,
	-1000, 2324, 50, -1000, 82966, 1725, 1236, 636, 4930, -1000,
	-1000, -1000, 2290, 37865, 406, -448, -1, 2190, 2749, 2715,
	2713, -1000, 2189, 2463, -1000, 2863, 20477, -1000, 2644, -297,
	-334, 2290, 396, 396, 2459, 27281, 2290, -1000, -1000, -1000,
	61569, -487, -1000, 246, -1000, 377, -1000, 861, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13673, 20477, 167, 39377, 2080, 2078, 82966, 2083,
	82966, 20477, 2073, 2072, 2716, 21233, 82802, 446, -342, -1000,
	-343, -1000, -1000, -1000, 2177, -1000, 2523, 1779, 426, 2324,
	329, -1000, -1000, 2322, -1000, 246, 50491, 2310, 912, 1389,
	-1000, -1000, -1000, 588, -1000, -1000, 444, 649, -1000, 4930,
	-1000, 2861, -1000, -1000, 2176, -171, -1000, 2519, -7, 2926,
	2925, -1000, 2924, 2922, -1000, 78543, 2519, -1000, -1000, 2642,
	-1000, -1000, -1000, 421, -1000, 1419, 850, 1356, -1000, 649,
	-1000, 2441, -1000, 2520, -1000, 349, 982, 981, -304, -1000,
	2070, 2069, -1000, 1990, 1806, -1000, 20477, 1965, 586, 495,
	1486, -1000, -1000, -1000, -1000, -1000, -1000, -498, -1000, 291,
	-499, 987, -1000, -1000, 2068, -1000, 2953, 5090, -1000, -501,
	-1000, -1000, -1000, -1000, 2779, 1437, 65259, -1000, 2519, 691,
	-1000, -1000, 2308, 246, 2519, -1000, -1000, -1000, -1000, -242,
	-1000, 1347, 63783, 661, 2173, 37865, 2519, 2171, 2170, 2167,
	2039, -1000, -1000, -305, 1684, -1000, -1000, -1000, -1000, -1000,
	-262, 78543, -1000, 348, 340, -1000, -1000, -1000, -1000, 1676,
	1668, 82966, -1000, 1962, 82966, 2906, 2905, 2903, 26, 38621,
	82498, 82441, 82966, 82966, 20477, 82288, 82966, 1695, -1000, 82234,
	82966, -1000, 27281, -1000, -1000, -1000, -1000, 2985, 2387, 21233,
	2519, 246, -1000, 21989, 82966, -1000, 1347, -1000, 1884, 1872,
	2585, 2584, 649, -1000, 2302, 37865, -1000, -1000, -1000, -1000,
	-325, 421, -1000, 2304, -1000, -1000, 298, 1652, 82966, -1000,
	-502, 82966, -503, 732, 346, 1014, 1315, -1000, 472, -1000,
	2066, -505, -507, -508, 977, 20477, -509, 2065, -1000, -1000,
	2441, 68949, 2395, 21233, -1000, 2395, 2290, -1000, -1000, 2580,
	649, -1000, 2579, 649, -74, -76, 2576, -1000, 2302, -335,
	-1000, 2575, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12316,
	63045, -1000, -510, 12108, -511, 7769, -1000, -1000, -1000, 11834,
	-1000, -1000, -1000, -1000, 475, -1000, -1000, 2834, -1000, -1000,
	11754, 11400, 11247, 82966, 1665, 11193, 2423, -1000, -1000, 2387,
	-276, 2395, -1000, -1000, -1000, 270, 2574, -375, 2573, 269,
	264, -1000, -1000, -80, -1000, -1000, 2572, 2571, 2952, -1000,
	-512, -1000, -1000, 10839, 1643, 82966, 1009, 82966, 1642, -1000,
	20477, -1000, 1014, -1000, 21233, 2059, 471, 20477, -513, 464,
	461, 2035, -1000, 1758, -276, 260, -377, 2570, 2569, -1000,
	-1000, -1000, 2973, -1000, 2949, 1158, 1158, 10483, 1626, -1000,
	-1000, -514, 1008, 82966, -1000, 1763, -1000, 5090, -1000, 2033,
	1607, 9750, -1000, -1000, -1000, -1000, -1000, 258, -378, -1000,
	-1000, -1000, 972, 1759, -1000, -1000, -1000, 9515, -1000, -516,
	82966, -1000, 452, 454, -1000, -1000, -1000, -1000, -1000, 1007,
	9351, -517, 1997, 1771, -1000, 1005, 82966, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3428, 3427, 3424, 14, 3423, 295, 301, 296, 16,
	2813, 3421, 303, 3420, 297, 3419, 30, 28, 25, 38,
	3418, 3116, 3113, 3111, 3109, 36, 3416, 23, 3415, 3413,
	3102, 3412, 3410, 3100, 3409, 3408, 3406, 3405, 3404, 3390,
	3389, 3388, 3387, 3098, 3096, 3094, 3091, 3386, 3385, 3383,
	3089, 3087, 3084, 3381, 80, 3380, 35, 50, 46, 3378,
	4, 3377, 203, 244, 3375, 5, 3371, 3370, 13, 206,
	3369, 3368, 75, 3082, 3367, 3365, 3364, 3363, 3362, 3361,
	150, 3360, 3359, 3077, 3357, 3058, 3356, 3056, 3034, 3032,
	3030, 3020, 204, 3355, 3016, 3012, 3010, 3354, 2687, 237,
	460, 232, 3353, 131, 163, 1762, 3352, 234, 3351, 215,
	3350, 3348, 3347, 455, 228, 3346, 169, 89, 339, 168,
	172, 171, 161, 3345, 66, 166, 325, 3344, 8, 3343,
	116, 3341, 216, 3340, 229, 2809, 199, 180, 198, 3339,
	3338, 153, 3337, 3332, 3331, 212, 3330, 3328, 240, 115,
	3325, 3324, 191, 3323, 145, 3322, 175, 3321, 3320, 3318,
	3317, 230, 120, 92, 181, 139, 3316, 164, 3315, 3314,
	3312, 3310, 3309, 3308, 87, 33, 331, 3306, 182, 197,
	3305, 57, 27, 52, 3303, 3302, 64, 3301, 3300, 147,
	3299, 3298, 133, 3296, 196, 73, 3295, 3294, 3289, 3288,
	111, 82, 3287, 41, 3286, 193, 3285, 3284, 3283, 3282,
	3281, 98, 3276, 90, 3270, 194, 170, 352, 3269, 3268,
	51, 43, 3267, 68, 19, 18, 107, 53, 113, 94,
	188, 177, 137, 159, 49, 160, 55, 156, 152, 95,
	3266, 233, 195, 210, 118, 40, 3265, 3264, 214, 3263,
	112, 225, 192, 189, 224, 3259, 3258, 3257, 245, 3256,
	183, 551, 3255, 134, 239, 238, 2735, 249, 135, 3254,
	3253, 3252, 3251, 121, 54, 128, 3250, 48, 241, 242,
	243, 42, 86, 3249, 2263, 6237, 7135, 9494, 32, 62,
	91, 7886, 22, 208, 3248, 81, 3246, 3245, 3244, 4834,
	176, 34, 71, 157, 3243, 167, 47, 99, 3242, 3241,
	3239, 3238, 3236, 3233, 260, 138, 3229, 3228, 69, 3227,
	3226, 60, 58, 11, 17, 3223, 144, 227, 223, 219,
	3219, 226, 63, 3218, 3215, 187, 140, 3214, 3213, 3212,
	3209, 190, 125, 211, 3208, 207, 124, 126, 3206, 127,
	3205, 3189, 102, 6235, 132, 3186, 3184, 141, 136, 149,
	201, 3177, 3171, 3170, 72, 3169, 3168, 3, 3167, 109,
	65, 56, 117, 24, 165, 3165, 3164, 205, 3163, 3161,
	155, 178, 3160, 146, 143, 70, 3159, 76, 148, 3158,
	174, 2, 7, 6, 3157, 3156, 3155, 3154, 3153, 3148,
	3146, 3145, 123, 3144, 3143, 108, 93, 85, 3141, 3139,
	3138, 3137, 3136, 202, 179, 74, 220, 130, 10, 3135,
	3134, 9, 3132, 186, 3131, 104, 3128, 3125, 129, 3123,
	3122, 77, 106, 44, 105, 3120, 3119, 114, 151, 3118,
	103, 3107, 3104, 231, 371, 3080, 351, 3063, 209, 185,
	79, 101, 3060, 78, 110, 3054, 100, 3039, 20, 67,
	3037, 21, 12, 1583, 3027, 0, 4296, 222, 3018, 162,
	3007, 2995, 235, 2968,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 243, 243, 243, 243, 240, 240, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 467, 467, 143, 143, 141, 141,
	142, 142, 237, 237, 239, 239, 19, 19, 19, 248,
	248, 253, 253, 253, 256, 256, 256, 256, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 455, 455, 455, 456,
	456, 456, 456, 456, 281, 281, 281, 281, 419, 419,
	435, 435, 435, 436, 436, 434, 434, 434, 434, 434,
	438, 438, 439, 439, 437, 437, 437, 437, 441, 441,
	442, 442, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 422, 422, 422, 50,
	50, 50, 50, 50, 54, 54, 51, 51, 51, 51,
	51, 51, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 444, 444, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 446, 446, 447, 447,
	448, 448, 448, 448, 449, 449, 449, 449, 449, 450,
	450, 450, 450, 450, 450, 450, 451, 451, 452, 452,
	3, 2, 400, 400, 401, 401, 402, 402, 402, 402,
	403, 403, 404, 404, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 31, 31, 31, 31, 31, 31,
	280, 280, 276, 276, 276, 278, 278, 279, 279, 279,
	421, 421, 421, 415, 415, 415, 417, 417, 416, 416,
	416, 418, 418, 423, 423, 423, 423, 423, 426, 426,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	427, 427, 427, 424, 424, 162, 162, 428, 428, 433,
	433, 429, 429, 430, 430, 432, 432, 432, 431, 431,
	431, 431, 318, 318, 181, 181, 70, 70, 71, 71,
	71, 214, 214, 214, 20, 20, 20, 20, 20, 20,
	26, 26, 28, 28, 28, 28, 57, 57, 58, 29,
	29, 29, 29, 59, 59, 60, 32, 32, 32, 32,
	32, 32, 67, 67, 67, 66, 66, 65, 65, 65,
	65, 65, 65, 34, 35, 36, 468, 468, 468, 61,
	61, 37, 37, 37, 40, 40, 40, 41, 41, 41,
	38, 39, 42, 30, 30, 30, 30, 68, 68, 63,
	63, 62, 62, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 33, 33, 33, 33, 33,
	33, 25, 399, 399, 399, 56, 56, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	78, 78, 355, 356, 356, 356, 356, 356, 356, 342,
	342, 343, 343, 343, 343, 343, 343, 332, 332, 332,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 306, 306, 306,
	306, 310, 310, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	313, 313, 313, 313, 313, 341, 341, 315, 315, 314,
	314, 314, 335, 335, 336, 336, 336, 333, 333, 333,
	334, 334, 319, 319, 319, 319, 319, 319, 320, 337,
	321, 321, 322, 322, 322, 322, 322, 322, 323, 323,
	324, 324, 324, 326, 326, 331, 331, 330, 330, 330,
	330, 330, 330, 327, 327, 327, 327, 327, 327, 328,
	328, 328, 329, 340, 340, 340, 340, 340, 316, 46,
	46, 52, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 377, 377,
	382, 382, 270, 270, 271, 271, 53, 53, 53, 53,
	53, 168, 168, 55, 55, 55, 378, 378, 380, 380,
	380, 380, 380, 380, 380, 380, 379, 379, 381, 381,
	344, 344, 373, 373, 372, 372, 371, 371, 371, 371,
	371, 371, 371, 353, 353, 354, 354, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 348, 348, 348, 347,
	347, 349, 349, 352, 352, 352, 370, 370, 369, 369,
	345, 345, 345, 383, 383, 383, 383, 383, 102, 102,
	346, 346, 346, 384, 350, 350, 351, 351, 351, 392,
	393, 391, 391, 391, 391, 391, 169, 169, 169, 375,
	375, 375, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	103, 103, 103, 104, 104, 325, 325, 357, 357, 357,
	357, 357, 463, 463, 463, 358, 358, 358, 358, 358,
	358, 454, 454, 453, 453, 453, 359, 359, 360, 361,
	361, 361, 362, 362, 364, 364, 277, 277, 365, 365,
	366, 366, 363, 363, 363, 367, 367, 396, 396, 396,
	395, 395, 73, 73, 73, 73, 75, 75, 74, 74,
	74, 82, 82, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 72, 72, 290, 290,
	77, 213, 213, 213, 275, 275, 389, 389, 390, 390,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 386, 386, 385, 385, 387, 387, 76, 76, 76,
	76, 163, 163, 22, 22, 79, 79, 420, 420, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 394,
	394, 394, 24, 24, 83, 84, 84, 84, 289, 289,
	289, 289, 289, 87, 87, 87, 87, 241, 241, 242,
	242, 88, 88, 88, 88, 89, 89, 89, 89, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 123, 262, 262, 261, 261, 260, 260, 260,
	263, 263, 263, 263, 304, 304, 304, 86, 86, 86,
	98, 98, 93, 93, 96, 96, 96, 96, 99, 99,
	100, 100, 101, 101, 94, 95, 43, 44, 44, 44,
	44, 45, 91, 91, 91, 92, 92, 92, 92, 113,
	113, 114, 114, 470, 470, 470, 90, 471, 105, 106,
	106, 108, 108, 108, 109, 109, 109, 110, 110, 110,
	267, 267, 267, 267, 267, 267, 267, 107, 107, 107,
	117, 117, 121, 121, 121, 121, 120, 120, 120, 120,
	216, 216, 221, 296, 296, 197, 197, 217, 217, 222,
	222, 222, 223, 223, 224, 224, 224, 224, 224, 219,
	219, 218, 218, 220, 184, 184, 184, 184, 182, 182,
	182, 182, 182, 182, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 180,
	180, 294, 294, 294, 294, 293, 293, 293, 125, 125,
	130, 130, 132, 132, 132, 132, 132, 132, 132, 132,
	135, 199, 199, 472, 472, 153, 153, 154, 154, 154,
	154, 155, 155, 155, 155, 155, 157, 157, 157, 158,
	158, 158, 158, 158, 158, 159, 160, 160, 156, 156,
	156, 178, 178, 235, 235, 236, 236, 234, 234, 238,
	238, 131, 131, 133, 133, 133, 133, 138, 138, 139,
	139, 140, 140, 301, 301, 301, 144, 144, 144, 146,
	145, 145, 145, 145, 145, 145, 147, 147, 457, 458,
	458, 459, 459, 459, 459, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 461, 461, 462, 462, 148,
	148, 150, 151, 151, 149, 149, 149, 149, 149, 149,
	161, 161, 152, 164, 164, 164, 164, 165, 165, 122,
	122, 122, 122, 122, 122, 122, 122, 259, 259, 167,
	167, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 193, 193, 193, 193, 193, 193, 170, 170, 170,
	170, 170, 170, 170, 116, 116, 194, 194, 194, 137,
	136, 136, 119, 119, 118, 118, 195, 195, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 187, 187, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 192, 192, 192, 192, 192, 469,
	469, 189, 189, 188, 188, 188, 188, 188, 188, 112,
	112, 112, 112, 112, 302, 302, 302, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 69,
	69, 206, 206, 115, 115, 204, 204, 205, 207, 207,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 177, 177,
	177, 208, 208, 196, 196, 124, 209, 209, 210, 211,
	211, 212, 212, 215, 228, 228, 228, 229, 229, 229,
	229, 179, 179, 179, 230, 230, 230, 230, 172, 172,
	171, 171, 171, 173, 173, 173, 173, 174, 174, 473,
	473, 233, 233, 232, 232, 231, 231, 231, 231, 231,
	231, 231, 244, 244, 198, 198, 201, 201, 200, 202,
	245, 245, 250, 250, 250, 250, 247, 247, 251, 251,
	251, 251, 254, 254, 255, 255, 255, 252, 252, 252,
	252, 249, 249, 249, 298, 298, 298, 298, 257, 257,
	266, 266, 264, 264, 265, 265, 258, 258, 317, 317,
	317, 272, 272, 273, 273, 274, 274, 268, 268, 268,
	268, 269, 269, 295, 295, 291, 291, 297, 297, 292,
	292, 299, 299, 300, 300, 300, 300, 397, 397, 398,
	398, 398, 338, 338, 409, 409, 339, 339, 410, 410,
	411, 411, 406, 406, 407, 407, 408, 408, 408, 47,
	412, 412, 413, 413, 414, 414, 414, 414, 48, 49,
	49, 49, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 288, 288, 288, 288, 288,
	288, 285, 285, 285, 285, 285, 285, 286, 286, 286,
	465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 9, 8, 10, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 0, 2, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 11, 11, 13, 5, 5,
	16, 12, 9, 4, 15, 1, 6, 9, 8, 0,
	3, 3, 6, 3, 0, 3, 4, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	10, 9, 5, 7, 0, 3, 9, 9, 9, 10,
	6, 8, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 3, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 2, 4, 5, 4, 6, 7,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 0, 1,
	4, 3, 3, 3, 6, 6, 5, 5, 5, 5,
	4, 3, 5, 1, 3, 1, 3, 3, 5, 0,
	5, 0, 3, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 8, 4, 7, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	5, 7, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 2, 5, 0, 1, 2, 1,
	3, 5, 7, 8, 7, 9, 10, 7, 9, 10,
	2, 2, 2, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 4, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 5, 5, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 3, 6, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 3, 3, 2,
	3, 4, 2, 2, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 3, 2, 2, 4, 3, 1,
	0, 1, 3, 3, 3, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 1, 0, 1, 1, 1, 1,
	2, 2, 2, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 5,
	5, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 2, 2, 3, 3, 0, 3,
	0, 3, 1, 1, 0, 1, 5, 4, 2, 3,
	3, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 3, 5, 5,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 5, 3,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 2, 1, 11, 12, 12, 13, 13, 0, 1,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	2, 3, 3, 3, 3, 4, 5, 3, 3, 4,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 6, 1,
	4, 5, 5, 6, 0, 1, 0, 3, 1, 1,
	0, 2, 0, 8, 9, 0, 2, 0, 1, 2,
	0, 2, 1, 1, 1, 1, 4, 3, 7, 5,
	5, 1, 3, 5, 4, 8, 10, 9, 2, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 3, 3,
	6, 5, 4, 4, 5, 5, 8, 4, 5, 7,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	3, 3, 3, 4, 5, 5, 3, 7, 6, 5,
	2, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 4, 4, 3, 5, 3, 1, 1, 1, 1,
	6, 0, 1, 2, 0, 1, 0, 1, 1, 2,
	5, 3, 4, 4, 4, 4, 4, 4, 3, 7,
	6, 8, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 3, 1, 3, 8, 8, 8, 11, 12,
	15, 0, 3, 3, 3, 3, 5, 3, 5, 6,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 8, 5, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 4, 1, 3, 1,
	1, 2, 2, 4, 4, 3, 3, 3, 3, 3,
	4, 3, 5, 5, 5, 4, 4, 4, 4, 3,
	2, 2, 6, 2, 4, 3, 3, 4, 4, 5,
	8, 6, 3, 4, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 4, 2, 4,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 4, 1,
	0, 1, 2, 1, 2, 4, 4, 5, 0, 1,
	0, 3, 0, 2, 4, 4, 2, 3, 4, 4,
	5, 3, 4, 5, 4, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	0, 2, 2, 2, 2, 2, 2, 0, 1, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 2, 2, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 5, 1, 2, 3, 1, 1,
	2, 2, 4, 0, 1, 2, 6, 1, 3, 2,
	4, 1, 1, 1, 1, 1, 5, 5, 8, 5,
	5, 8, 5, 5, 8, 2, 2, 2, 3, 4,
	4, 0, 1, 3, 1, 0, 3, 1, 3, 1,
	3, 4, 6, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 2, 2, 2, 12, 1,
	3, 3, 3, 6, 7, 2, 3, 3, 4, 4,
	5, 5, 8, 8, 3, 3, 4, 3, 4, 1,
	3, 3, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 4, 6, 6, 6, 4, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	4, 4, 4, 2, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 6, 3, 4, 2, 2, 2, 0,
	2, 1, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 1, 0, 2, 4, 4, 1, 4,
	1, 3, 4, 1, 4, 3, 6, 2, 3, 1,
	1, 0, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 0, 5, 1, 3, 2, 3, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 4,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 0, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 2, 0, 4, 4, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 191,
	-455, -75, -74, -76, -77, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -96, 450, 451, -470, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -11, 200, -12, -13, -7,
	764, -211, 20, -105, -471, -211, -10, -9, -4, 653,
	-105, -111, 14, 15, 13, 558, -105, -355, 29, -3,
	118, 77, -8, 11, -269, -280, 98, 549, 199, -278,
	331, 333, 209, -266, -268, -276, 257, 267, 50, 211,
	210, 268, 200, 331, -266, 201, 203, 549, 199, 240,
	239, 331, 333, 272, 647, 200, -149, -299, -285, -287,
	-286, 349, 83, -284, 578, 582, 272, 585, 586, 591,
	339, 91, 53, 369, 572, 361, 370, 221, 527, 573,
	332, 338, 341, 362, 736, 371, 26, 373, 374, 570,
	571, 55, 203, 560, 561, 564, 214, 751, 354, 222,
	650, 268, 759, 754, 756, 343, 757, 517, 609, 447,
	466, 458, 485, 651, 707, 280, 302, 455, 386, 534,
	610, 346, 295, 367, 708, 322, 290, 523, 529, 305,
	450, 611, 612, 613, 543, 248, 278, 709, 456, 299,
	301, 300, 262, 577, 306, 42, 227, 482, 660, 648,
	257, 710, 616, 703, 615, 251, 284, 614, 329, 41,
	33, 617, 250, 546, 109, 277, 711, 377, 531, 618,
	503, 378, 246, 273, 275, 291, 713, 655, 350, 233,
	530, 432, 478, 360, 128, 255, 317, 379, 714, 504,
	508, 715, 535, 336, 316, 621, 716, 717, 380, 659,
	285, 718, 202, 342, 622, 281, 719, 258, 445, 537,
	347, 502, 212, 652, 223, 57, 237, 538, 506, 624,
	512, 515, 433, 376, 434, 720, 721, 722, 723, 358,
	356, 626, 357, 359, 628, 269, 297, 656, 625, 658,
	62, 197, 662, 510, 509, 511, 298, 676, 533, 490,
	488, 724, 725, 351, 218, 726, 727, 489, 23, 728,
	729, 541, 321, 353, 730, 731, 732, 627, 294, 632,
	608, 733, 734, 532, 505, 507, 256, 127, 647, 279,
	735, 355, 528, 364, 663, 654, 340, 292, 633, 737,
	382, 293, 236, 229, 542, 427, 428, 443, 444, 372,
	738, 431, 739, 740, 741, 742, 334, 333, 451, 365,
	634, 452, 274, 303, 657, 743, 635, 636, 744, 745,
	266, 249, 545, 536, 61, 519, 514, 368, 383, 457,
	429, 440, 435, 436, 438, 439, 442, 441, 437, 446,
	522, 448, 276, 243, 637, 638, 639, 430, 640, 12,
	296, 348, 641, 642, 643, 526, 366, 304, 267, 270,
	493, 238, 746, 747, 480, 481, 449, 241, 231, 122,
	544, 387, 327, 702, 331, 384, 289, 60, 244, 54,
	748, 749, 271, 245, 661, 288, 453, 345, 664, 200,
	83, -289, -284, -287, -288, -285, -286, 349, 232, 59,
	96, 64, 63, 83, -284, 647, 144, 486, 534, 191,
	524, 525, 531, -348, 532, 239, 427, 368, 242, -304,
	200, -262, 241, 523, 336, 355, 582, 245, 246, 273,
	428, 434, 201, 202, 38, 536, 535, 527, -299, -98,
	453, -98, -98, 204, 453, -113, 233, 195, -149, 232,
	-68, 83, 309, -68, 35, 83, -161, -291, -299, 83,
	-284, 42, 83, 452, 526, 526, 85, 654, 248, 27,
	-444, -418, 364, -443, -416, 192, 191, 15, 193, 272,
	369, 370, 335, 201, 13, 36, 736, 219, 371, 372,
	11, 224, 373, 374, 240, 14, 375, -445, -421, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 82, 83,
	-284, -264, 206, 372, 427, 449, 427, 427, -271, -270,
	385, 512, 144, -128, 706, -126, -134, -301, -299, -285,
	-286, -199, -472, 253, 549, -258, 331, -278, 205, -130,
	-132, -133, -153, -136, 704, -465, -131, -457, -149, -137,
	83, 607, -109, 10, -108, -110, 9, 8, -109, -229,
	22, 21, -267, -106, -229, -466, 79, -466, -128, -120,
	135, -122, -299, -166, 101, -176, 34, 30, -175, 349,
	232, -167, -203, -285, -202, -137, 144, -303, 133, 134,
	141, 102, 187, -187, -185, -186, -188, -190, -191, 227,
	480, 481, 82, 84, 92, 85, 86, 87, 88, 93,
	94, 95, -291, -287, -286, -283, 578, 582, 585, 586,
	591, -200, -465, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 67, 68, 576, 199, 559,
	560, 483, 561, 13, 562, 563, 564, 649, 221, 568,
	104, 56, 326, 550, 551, 555, -192, 552, 556, 557,
	570, 571, 572, 573, 206, 549, 139, 558, 595, 596,
	597, 598, 599, 600, 601, 602, 604, 605, 603, 579,
	580, 581, 583, 584, 587, 588, 589, 590, 592, 593,
	594, 678, 196, 192, 195, 100, 29, 31, 679, 254,
	103, 464, 498, 567, 21, 25, 215, 198, 486, 213,
	143, 208, 216, 311, 313, 191, 71, 680, 547, 312,
	524, 674, 671, 673, 672, 477, 475, 310, 681, 15,
	32, 225, 261, 682, 473, 193, 252, 107, 108, 683,
	47, 46, 8, 314, 226, 320, 474, 684, 685, 24,
	74, 217, 16, 211, 242, 758, 686, 335, 18, 126,
	19, 687, 668, 670, 669, 205, 120, 201, 750, 69,
	259, 688, 462, 467, 468, 469, 470, 471, 463, 97,
	689, 690, 117, 325, 65, 607, 38, 247, 704, 565,
	324, 691, 44, 43, 497, 501, 496, 323, 513, 118,
	22, 553, 554, 36, 692, 693, 235, 500, 461, 495,
	705, 694, 666, 264, 72, 385, 476, 762, 39, 75,
	230, 381, 352, 48, 98, 20, 260, 70, 40, 574,
	123, 763, 479, 207, 239, 695, 539, 263, 696, 124,
	472, 706, 219, 119, 454, 194, 363, 308, 220, 330,
	337, 697, 253, 125, 525, 665, 698, 569, 35, 224,
	307, 460, 209, 699, 265, 319, 309, 318, 700, 701,
	344, 49, 760, 677, 200, 45, 106, 499, 459, 494,
	204, 566, 240, 315, 9, 50, 37, 520, 14, 375,
	73, 76, 487, 484, 492, 491, 210, 761, 17, 328,
	575, 653, 540, 99, 675, 521, 548, -105, -105, -105,
	-247, 449, -254, -251, 535, 536, -252, -255, -249, -203,
	512, 733, 734, 534, 486, 533, -291, -299, -285, 349,
	232, 144, 579, 580, 581, 104, 483, 559, 595, 550,
	552, 547, 551, 549, 34, 596, 30, 95, 597, 576,
	206, 13, 187, 583, 584, 598, 599, 600, 67, 553,
	554, 649, 139, 101, 601, 602, 93, 604, 605, 326,
	558, 68, 603, 199, 589, 588, 587, 590, 562, 563,
	94, 555, 556, 557, 56, 593, 592, 594, -2, -6,
	-465, -149, -356, -343, -346, -291, -285, -287, -288, 228,
	-286, 216, -384, 83, -284, 213, -211, -105, 201, 203,
	558, -265, 206, -265, 240, 239, 272, -279, 265, -265,
	-265, 737, 200, -278, 110, 110, -79, -149, -420, -415,
	-421, 200, -291, -264, -264, -264, -264, -264, -264, -264,
	-264, 83, -289, -149, 188, -84, -149, -141, 16, 16,
	76, 76, 83, -289, 83, 433, 376, 35, -263, 118,
	17, 549, 199, 200, 239, 240, 203, 272, -263, -350,
	16, 120, 243, 243, 243, 243, 243, 244, 243, -261,
	526, 528, 529, 530, -260, 16, 120, 17, -123, 118,
	24, -465, -229, -229, -260, 243, 136, -100, 100, -100,
	83, 452, 204, -114, 234, -113, -114, -178, -156, 29,
	6, 7, 110, 35, 35, 82, 60, 35, -63, -62,
	-64, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 35, -399, 77, 188, -338, 512, 83,
	-412, -413, -149, 85, 85, 75, 355, 75, 78, 204,
	78, 75, -446, 365, 77, -446, 333, 365, 366, 267,
	331, 203, -446, -446, 333, -446, -446, -446, 352, -446,
	-446, 526, -446, -446, -446, 367, 368, -446, 524, 203,
	-446, -446, -446, -446, -446, 80, 27, -444, -418, 364,
	30, 429, 432, 539, 653, -55, 445, 446, -168, 27,
	-376, 144, 377, 378, 379, 380, 376, 355, 381, 382,
	383, 243, 384, 200, 526, 376, -6, -126, 78, -233,
	-465, 78, -200, -465, 83, -331, -330, -327, -328, -329,
	-326, 34, 200, -264, 272, -144, -146, -145, -147, 65,
	69, 71, 66, 67, 68, 527, 72, -274, 29, -136,
	-465, -125, -9, -135, -130, -465, -154, 123, -164, -274,
	-155, 73, 205, 74, 29, -156, -157, -158, -159, -160,
	6, 7, 55, -465, -465, -7, -8, 27, 28, -14,
	-7, -12, -14, 27, 28, 27, 28, -7, -230, 24,
	36, -179, 85, 88, -203, -212, -215, -122, -299, 59,
	-117, 27, 28, 66, 58, 64, 63, -226, 90, 16,
	-294, 100, 98, 99, 117, -293, 29, 83, 82, -289,
	188, -122, -170, 120, 101, 118, 119, 103, 130, 129,
	140, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	143, 110, 111, 112, 113, 114, 115, 116, -259, -465,
	-137, -465, 188, -465, 188, 189, 190, 188, -176, -176,
	-176, -176, -176, -176, -176, 82, 82, 82, -465, 188,
	188, 188, -465, -465, -465, -465, -465, -195, -122, 653,
	-465, 200, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -206, -122, -465,
	-465, -469, -465, -469, -469, -189, -469, -465, -189, -189,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -189, -189, -189, -465, -258, -258, 16, -141, -142,
	-149, -152, -299, 78, -248, -253, 537, 539, 449, -252,
	-252, -298, -291, 82, 34, 144, -354, 110, 121, 35,
	188, -211, 79, 78, -306, -310, -312, -311, -313, -308,
	-309, -69, 490, 488, 484, 483, 486, 489, 144, 487,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 35, 227, 480, 481, 482, 664, 504, 505, 506,
	507, 508, 509, 510, 511, 458, 485, 651, 459, 460,
	461, 462, 463, 464, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, -306, -306, -306,
	-306, -306, -290, -384, 83, -289, 77, -229, -267, -291,
	-149, -280, 209, -278, 83, 101, 83, -148, -291, -299,
	-161, -265, 266, -424, -423, -415, -418, 677, -265, -279,
	-415, 271, 269, 270, 78, 204, 78, 204, 80, -264,
	75, -143, -149, 83, 83, -148, -161, -417, -415, -418,
	-162, -291, -299, -300, -299, -282, -287, -288, 678, 196,
	27, 192, 195, 100, 29, 31, 679, 254, 103, 464,
	144, 579, 580, 581, 498, 567, 21, 25, 215, 104,
	198, 483, 486, 213, 143, 208, 216, 311, 313, 559,
	595, 191, 71, 680, 550, 552, 547, 551, 312, 549,
	524, 674, 671, 673, 672, 477, 475, 310, 34, 681,
	15, 596, 32, 225, 261, 28, 682, 137, 473, 193,
	606, 252, 107, 108, 683, 47, 46, 8, 30, 314,
	226, 95, 320, 597, 474, 684, 685, 24, 74, 217,
	16, 211, 242, 758, 686, 335, 18, 576, 126, 19,
	687, 668, 670, 669, 206, 205, 120, 201, 750, 69,
	259, 13, 688, 462, 467, 468, 469, 470, 471, 463,
	187, 97, 689, 690, 117, 325, 65, 583, 584, 607,
	51, 38, 247, 598, 599, 704, 600, 565, 324, 691,
	44, 43, 497, 501, 496, 323, 513, 67, 118, 22,
	553, 554, 36, 692, 693, 649, 235, 500, 461, 495,
	705, 694, 666, 139, 264, 72, 101, 385, 601, 602,
	93, 476, 762, 39, 75, 230, 381, 352, 48, 98,
	20, 260, 70, 40, 574, 123, 763, 604, 479, 207,
	239, 695, 539, 263, 696, 124, 605, 472, 706, 219,
	119, 454, 194, 326, 558, 363, 308, 220, 330, 337,
	68, 697, 253, 125, 603, 199, 525, 665, 11, 698,
	569, 35, 224, 307, 460, 209, 699, 265, 319, 309,
	318, 700, 58, 701, 344, 49, 589, 588, 587, 590,
	760, 66, 562, 563, 677, 200, 45, 106, 499, 459,
	494, 204, 566, 240, 94, 315, 9, 50, 37, 520,
	14, 375, 73, 76, 555, 556, 557, 56, 487, 484,
	492, 593, 491, 592, 594, 210, 761, 105, 17, 328,
	575, 653, 540, 99, 675, 521, 14, 193, 78, 82,
	-242, 83, -289, 82, -242, -241, -242, -241, 243, -263,
	82, -303, -122, -265, -265, -149, -149, -149, -149, -149,
	-149, -263, -263, -263, -263, -260, 16, -260, -263, -299,
	-299, -122, -176, -415, 551, 135, -263, -299, -101, -99,
	218, -99, -101, 83, 83, 452, -92, -4, -18, -16,
	-17, -114, -9, 39, 29, 29, 83, -63, -63, 82,
	-63, 78, 110, -63, -178, 79, -195, -291, -397, 750,
	78, -414, 29, 539, 540, 513, -448, 200, 242, 239,
	75, -448, -443, 372, -417, -416, -415, -446, -447, -291,
	-446, -446, -446, 526, -446, -446, -446, -446, -446, -446,
	-446, -446, -446, -421, 75, 78, 355, 75, 16, 75,
	204, -379, -381, 443, 444, 540, 541, 456, 376, 376,
	376, 376, 376, 376, -377, -141, 653, -377, -141, 204,
	254, -134, 29, -232, -231, -292, -285, -286, -287, -288,
	228, -291, -282, -472, -331, -328, -327, -329, 486, 534,
	143, 546, -149, -415, -162, -132, -132, -130, -132, 65,
	65, 65, 70, 65, 70, 70, 65, 65, -145, -301,
	-274, 78, -466, -466, -466, -9, -465, -301, -164, -274,
	201, 201, 201, 103, 16, 53, 27, 103, 16, 53,
	27, 103, 16, 53, 27, -119, -118, -121, 135, -122,
	-299, -176, -243, 97, 14, 120, 78, 23, 78, -228,
	31, 32, 188, -177, 60, 85, 88, -243, 78, -120,
	-149, -122, -122, -122, -193, 93, 101, 94, 95, -293,
	228, 135, -300, -292, -287, -285, -286, 349, 232, -282,
	-176, -194, -200, -137, 89, 120, 118, 119, 103, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -302, 83, 82, 144, 83, -292,
	-118, -292, -175, 227, 480, 481, 93, -175, -291, -291,
	-107, 27, 28, -292, 527, -291, -292, -107, -107, -107,
	-107, -107, 78, -466, -118, -118, -118, -466, -122, -122,
	-118, -176, -118, -203, 82, -118, -203, 82, -118, -176,
	565, 566, 567, -118, -118, -107, -204, -205, 105, -203,
	-285, -288, 349, 232, -118, -466, 85, -182, -183, 656,
	665, 666, 668, 671, 664, 663, 662, 660, 659, 658,
	661, 657, 675, 674, 673, 672, 670, 669, 667, -182,
	-182, -184, 227, 482, 480, 481, -118, -119, -118, -118,
	-466, -466, -121, -118, -121, -118, -118, -121, -466, -466,
	-466, -118, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -466, 85, -151, 97, -149, -125, -149,
	-141, -467, 16, 76, -467, 78, 188, -251, -254, 78,
	538, 540, 541, -248, -323, -324, 143, 75, 96, 82,
	-122, -292, -300, -229, -375, -343, -344, -345, -346, -368,
	216, -383, 207, 209, 211, 210, 50, -347, 217, 201,
	51, -307, -333, 519, 520, -315, 77, -314, 77, -69,
	484, 483, 486, -314, 484, 491, -314, 491, 491, -314,
	-314, -314, 484, 77, 77, -315, -315, -315, -335, 77,
	-335, 479, -336, 77, -336, -336, -336, -336, -307, -307,
	-307, -307, -307, -384, -122, -230, -295, 76, -233, 203,
	737, -331, 30, -331, -70, 254, 222, 188, 77, -162,
	257, 258, -419, 78, 34, -425, 332, 85, 206, -149,
	232, -149, -149, -415, -415, -421, -141, -149, 78, 78,
	188, 716, 716, -149, 78, 82, 83, 83, -178, -351,
	16, 120, -263, -149, -178, -116, 228, 76, -469, -466,
	454, 455, 83, -92, -176, 39, 39, -62, -175, -291,
	79, -398, 205, 558, 82, -413, -301, 512, 540, -449,
	135, -291, -448, -449, -452, 653, 204, 79, 78, -446,
	-448, 335, 78, -448, -417, -415, -378, -380, 435, 437,
	438, 436, 439, 440, 441, 442, 78, 110, 110, 457,
	-382, 24, -377, 539, -377, 82, -176, -136, -466, 78,
	188, -200, 35, -353, -354, -353, -353, -82, -390, -360,
	-80, -388, 123, 196, 193, 192, 268, 198, -326, 559,
	251, 250, 284, 285, 74, 36, 197, 194, -72, -81,
	231, 290, 236, 291, 195, 230, 292, 229, 293, 653,
	288, 757, 517, 609, 610, 643, 91, 613, 248, 42,
	201, 623, 616, 546, 619, 620, 377, 618, 622, 212,
	626, 625, 627, 629, 630, 631, 341, 634, 635, 636,
	249, 637, 638, 639, 366, 644, 9, -426, -425, -432,
	75, -139, -138, 75, 76, -140, 75, -138, 65, 65,
	65, -236, 77, -301, -130, -466, -238, -291, -164, -301,
	-465, -465, -465, -176, -176, 120, -176, -176, 120, -176,
	-176, 120, -466, 78, 188, 78, -240, 41, 40, -291,
	514, 61, -179, -179, -215, -257, 24, 16, 56, 56,
	-127, 16, -226, -226, 93, 94, 95, 188, -465, -194,
	-176, -176, -176, -116, 100, -466, -466, -119, -118, -118,
	-118, -118, -118, -122, -466, -466, -466, 78, 76, 29,
	-466, 76, 120, -466, 16, 16, -466, 16, 16, -466,
	-466, 16, -176, -176, -176, -466, -466, -118, -207, -205,
	107, -122, -466, -466, -466, -466, -466, 78, 78, 16,
	78, -466, -466, -466, -466, -216, 574, -216, -466, -466,
	-466, -466, -466, -466, -216, -216, -216, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-237, 123, -149, 35, -237, 76, -125, -125, -152, -299,
	135, -253, -256, 542, 539, 545, 83, 82, 144, 82,
	188, -230, -359, -374, 78, -360, 757, 517, 609, -326,
	610, 643, 91, 613, 248, 42, 201, 623, 616, 546,
	619, 620, 377, 618, 622, 212, 626, 625, 627, 629,
	630, 631, 341, 634, 448, 635, 636, 249, 637, 638,
	639, 366, 644, 9, 653, 77, -352, -290, -383, 83,
	-284, 51, -347, -349, -347, -347, -347, -352, 83, -284,
	-352, 51, 719, 93, 101, -322, -324, 144, -319, -320,
	-337, -340, -316, 29, 758, 522, 219, -346, 486, 534,
	34, 75, 517, 207, 51, 50, 211, 91, -334, 521,
	85, 85, 585, -314, 491, -314, -314, -314, -314, -314,
	-341, 82, -341, 85, -335, 85, 79, 75, -291, 29,
	-149, 677, -71, 13, 14, 15, -291, -400, -401, -402,
	-291, 120, 259, 260, 75, -435, 363, -423, 333, 342,
	100, 21, 653, -456, 101, 204, 204, -394, 220, 215,
	-149, -415, -291, 75, 75, -242, -165, 17, 83, 83,
	-260, -263, -176, -418, 245, 246, -176, -176, -150, 97,
	-414, 204, 188, 188, -449, 204, 354, -417, -291, -449,
	352, 335, -449, -54, 205, 16, 78, 110, 110, 110,
	110, 110, 110, 110, 110, -381, 77, 77, 386, 36,
	-231, -292, -353, 83, 82, 144, 83, 82, 144, 82,
	-389, 78, -390, 196, 193, 284, 285, -388, 21, -275,
	-347, -396, -395, -345, -346, 123, 208, 216, 216, 213,
	-275, -347, 207, 217, 123, 216, 213, -275, 201, -353,
	-275, 486, 143, 204, 38, 38, 366, 123, 366, 123,
	-353, -275, 208, -347, -272, 216, -273, 204, 29, 289,
	123, 123, 123, 123, 123, 123, 123, 123, 294, 677,
	-353, -353, -353, -353, -353, -353, -353, -353, 615, 615,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -357, -453, 82, -463, 91, 272, 341,
	83, -284, -282, 85, 87, 86, -353, -353, -438, 653,
	-163, 194, 278, 274, -122, 77, -122, -234, -291, -236,
	-466, 78, -164, -234, -234, -234, 100, 204, -465, 100,
	204, -465, 100, 204, -465, -274, -121, 135, -300, 82,
	78, 82, 82, 515, 62, -149, -165, 606, -125, -120,
	135, -292, -119, -116, 100, -176, -466, -466, -466, -466,
	-466, -466, -305, 144, 483, 486, 227, 482, 475, 473,
	472, 474, 502, 488, 519, 480, 520, 664, -302, -305,
	-302, -176, -176, -176, -176, -176, -176, 16, 16, 16,
	650, -211, 109, -122, 106, -176, -176, -176, -176, -291,
	-221, -465, -216, -216, -216, -216, -216, -216, -217, -216,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
	-217, -172, -173, 35, -171, -9, -465, -174, -473, 56,
	60, -465, -245, -250, -203, -285, -288, 228, -165, -125,
	-165, -165, 188, 539, 543, 544, -374, -353, -353, -353,
	534, 486, 143, -353, -353, -353, -353, -353, 615, 615,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, 449, -353, -353,
	-353, -353, -353, -353, -357, -453, -353, -353, 677, -370,
	-369, 83, -289, 207, 50, -383, -352, -352, -352, -352,
	-352, -102, -290, 93, -465, 759, 85, -149, 35, 83,
	144, 82, -175, 134, -303, -167, -186, -465, 94, 95,
	550, 551, 555, 552, 556, 557, 570, 571, 572, 573,
	547, 553, 554, 14, 51, 51, 51, 82, 79, 79,
	79, -314, 79, 78, 79, 78, 79, 78, -169, 711,
	712, -149, -225, -233, 85, 75, 79, 78, -306, -291,
	-291, -291, 274, -438, 338, -436, -434, 344, 345, 346,
	347, 348, -418, 343, -425, 340, 82, 83, 82, 676,
	710, 731, 703, 30, -149, -415, -235, 77, -234, -235,
	-122, -178, -237, 200, -417, 135, 135, -291, 204, -417,
	352, -451, 653, 16, 16, 352, 16, 387, -417, -380,
	82, 82, 82, 85, 85, 85, 85, 85, -141, -141,
	82, 83, 82, 144, -359, -80, 196, 193, 284, 285,
	-361, -362, -365, -364, 124, 624, 691, 77, -342, 83,
	-289, -352, -268, 209, 207, -465, 83, -290, -290, -290,
	-291, 51, 51, -238, -290, -290, -291, -290, 34, 281,
	282, 283, 83, 35, -353, 486, -238, 27, -238, 27,
	34, 338, 286, 287, -342, -290, -291, -149, 217, 213,
	-290, -238, 27, 85, -238, -291, -238, 27, -238, 27,
	-238, 27, -238, 27, 645, -357, -122, -357, -463, -463,
	82, 82, 82, -353, -353, -104, 646, 218, -463, 82,
	-104, -463, -453, 82, -103, 218, 221, 223, -357, -357,
	-357, -463, -463, -463, -463, 82, -358, 34, 617, 478,
	612, 633, 611, 83, 93, 82, 82, -463, 34, -463,
	34, -463, -357, 640, -463, -465, -439, -437, 356, 357,
	358, 359, -431, 250, 251, 204, 279, 101, -428, 756,
	275, -234, 79, 78, -154, -291, -466, -466, -466, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -301, 188,
	529, -291, -321, -322, -208, 18, -226, -466, -176, -217,
	-217, -217, -217, -217, -466, -315, -315, -315, -315, -336,
	479, -315, 463, -315, 463, -466, -466, -466, -466, 24,
	24, 24, 24, -466, -176, -176, -176, -465, -115, 569,
	-122, 78, 78, -466, -466, -296, 83, -244, 75, -244,
	-245, -274, -9, -466, -232, -174, -465, 11, 56, 60,
	653, 200, -198, -201, -472, -238, -165, 78, -354, -354,
	-354, -354, -211, -165, -357, -357, -357, -353, 35, -353,
	-463, -463, 82, 82, 82, -353, -353, -104, -463, 82,
	-104, -463, -453, 82, -103, -357, -357, -357, -463, -463,
	-463, -463, 82, -358, 83, 93, 82, 82, -463, 34,
	-463, 34, -463, -357, 640, -463, -465, 645, 79, 78,
	-315, -315, 51, -349, 77, -176, 29, 77, 83, 144,
	82, -175, 82, -176, -192, 82, 85, 85, 77, -227,
	29, -456, -149, -403, -404, -405, 91, 652, 101, 261,
	262, 218, 263, 264, 265, -402, -306, -306, -306, -428,
	-441, -442, -440, 341, 361, 362, 349, 100, 82, 82,
	82, -427, 332, 100, 341, 21, 29, 21, 29, 82,
	82, 82, 82, 85, 76, -234, -263, -321, -149, -451,
	-417, -451, 335, -417, -417, 16, -417, 331, -54, 79,
	79, -366, 632, -465, 529, 621, 51, -342, -213, 221,
	222, -306, -306, -295, -349, 51, -385, -387, 123, -290,
	711, 712, 711, 712, 35, 193, 749, 719, -342, -353,
	-302, 35, 366, 366, 366, 366, -213, -273, 204, 51,
	-290, 204, 366, 366, 97, 653, 82, 82, 614, 628,
	-454, -453, -437, 85, 85, 85, 85, -318, 91, 75,
	-162, 279, -432, 75, -181, -175, -186, -175, 79, -291,
	78, 78, 78, 135, -465, -406, -261, -209, 19, 21,
	-321, 83, -321, 83, -176, -176, -176, -176, -466, -466,
	-466, -176, -466, 82, -176, -176, -197, 123, -239, 26,
	33, -244, -301, -466, -174, -465, -466, -466, 78, -200,
	-465, -466, -211, -250, -122, -122, -122, -122, -229, -302,
	-353, -325, -453, 82, 82, 82, 614, 628, -454, -372,
	-371, 76, 212, 91, 618, 636, 749, 719, -369, -228,
	-228, -352, -352, -234, -466, -465, -234, -466, 79, 79,
	-370, -9, -225, 24, -226, -405, 82, 265, 261, 265,
	265, 265, 265, 266, -432, -422, 91, 339, -440, 350,
	717, 334, 363, 85, 85, 122, 36, 37, -434, 21,
	653, -425, 340, 82, 82, 340, 82, 82, 332, -456,
	42, 79, -406, -450, 29, -451, -450, 352, -54, -54,
	-417, -54, -363, 641, 85, -176, -465, -465, -277, 268,
	79, 83, -307, -307, 77, -352, -352, -466, 78, -291,
	34, 34, -213, -302, -302, -290, -291, -290, 204, -290,
	-465, 200, 78, -466, 329, 82, 368, -163, -433, -183,
	-176, -176, -176, -458, -459, -292, 724, -407, 44, -410,
	45, -219, 575, -210, -122, -196, -124, -122, -466, -466,
	-466, -466, -112, 120, 653, -466, -466, -211, 21, -117,
	51, -239, -236, -174, -9, -465, -201, -466, -229, -302,
	-466, -371, -453, -353, 82, -353, -353, 79, -332, 761,
	760, -176, 79, 79, -225, -227, 252, -227, 42, 42,
	257, 258, -431, 82, 82, 34, 351, 187, 34, 85,
	187, 577, 340, 82, 83, 341, 341, 21, -176, -407,
	-415, -450, -54, -386, -465, 21, -466, -234, -176, -465,
	110, -370, -295, 77, -387, 56, -176, 143, 143, 204,
	-290, -385, -149, -453, -225, -431, 133, -429, 276, -466,
	-466, -466, -466, 78, -306, 24, 82, 608, -408, -409,
	-339, 48, 21, -218, -220, -291, 78, -466, 651, 72,
	654, -222, 125, 124, -195, 14, -9, 85, 82, 82,
	219, -466, -373, -372, -281, 653, -9, 253, -27, -4,
	-16, -17, -18, -19, -21, -73, -22, -23, -28, -29,
	-24, -83, -87, -88, -89, -85, -96, -94, -95, -91,
	-90, -32, -34, -35, -37, -40, -41, -38, -39, -36,
	-30, -33, -42, -25, -43, -44, -45, -50, -51, -31,
	-52, -46, 104, 206, 448, 310, 321, 322, 323, 83,
	326, 328, 324, 325, 320, 330, 447, -318, 85, 34,
	85, 34, 353, 341, 29, 85, -317, 205, 653, -385,
	-364, -466, -466, -234, 85, 79, 77, -370, 237, -353,
	-302, -290, -466, -72, 653, -27, -318, 187, -430, 277,
	-181, -466, -459, -460, 608, 30, 730, 529, 82, 49,
	45, -411, 46, 47, 82, 78, 29, -124, 62, 652,
	655, -466, -223, 103, -224, 122, 577, -180, 85, 187,
	-223, -245, -466, -149, -332, 213, 280, 512, -225, -214,
	255, 256, -225, -122, -57, -58, 105, -122, 83, -67,
	-297, 313, 314, 315, -292, 83, 83, -56, -27, 81,
	-56, -122, 83, 83, -468, 16, 59, -176, 109, -56,
	329, 660, 660, 82, -236, 85, 333, -466, 621, 51,
	-466, -373, -370, 79, 238, -302, 289, -225, 329, -175,
	-181, -433, -274, 82, 608, -465, 529, 21, 21, 21,
	21, -220, -221, 62, -224, 127, 128, 253, 127, 128,
	-175, 77, 352, 213, 213, -281, -225, 83, 83, -57,
	109, 107, -58, -122, 106, 311, 312, 316, -306, 78,
	764, 447, 323, 326, 328, 764, 329, 83, 16, 764,
	-225, -246, 35, 44, 125, 34, 338, 27, -418, -465,
	-277, 79, -373, -465, -225, -183, -433, -301, -461, -462,
	378, 93, 34, 82, -458, -465, 82, 82, 82, 82,
	653, 100, -182, -234, 352, 352, -227, 109, 107, 104,
	-56, 106, -56, 24, 24, 24, -321, -292, 109, -27,
	109, -56, -56, -56, -122, 327, -56, 97, 109, -27,
	-245, 8, -176, -465, -373, -176, 235, -27, -462, 93,
	34, -461, 93, 34, 75, 75, -175, -466, -458, 654,
	-224, 79, -20, -26, -19, -25, -16, -17, -18, 447,
	653, 104, -56, 764, -56, 764, -68, 85, -9, -66,
	-65, 85, -68, 318, 101, 319, 83, -323, 323, 83,
	764, 764, 764, 329, -122, 764, -61, 83, -225, -418,
	-466, -176, -466, -466, -225, 75, -175, 75, -175, 683,
	378, 683, 378, 75, -466, 655, -392, -393, 75, -225,
	-56, 109, -128, 764, 109, 764, 109, 107, -59, -60,
	108, -27, 78, 317, 34, 109, 109, 327, -56, 109,
	109, 78, -367, 642, -466, 75, 75, 378, 378, 683,
	378, -393, 75, -392, 75, 15, 14, 764, 109, 104,
	206, -56, 109, 107, -60, -122, -65, -176, 83, 323,
	-122, 764, 326, 328, 83, 85, -367, 75, 75, -391,
	220, 215, 218, 35, -391, 109, 104, 764, 206, -56,
	106, 83, 109, 109, 378, 683, 214, 34, 93, 109,
	764, -56, 326, 328, 206, 109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1729, 1227, 1729, 0, 1227, 0, 1227, 0, -2,
	135, 932, 933, 934, 935, 0, 1810, 0, 0, 0,
	0, 0, -2, 1189, 1190, 1193, 1190, 1190, 1219, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 734, 0, 64, 0, 1333, 2760,
	-2, 1223, 1224, 1225, -2, -2, 0, 53, 0, 60,
	2, 1737, 0, 1240, 1229, 1737, 0, 0, 49, 0,
	0, 1227, 1227, 1227, 87, 88, 0, 121, 0, 123,
	0, 0, 1729, 1227, 0, 0, 0, 1814, 1814, 337,
	1814, 1814, 1829, 0, 1832, 335, 0, 1811, 1827, 1828,
	1830, 0, 0, 0, 0, 0, 1812, 1812, 1812, 1812,
	1812, 1812, 1812, 1812, 0, 0, 1103, 1424, 1426, 1427,
	1428, 1429, 1841, 1842, 2751, 2752, 2753, 2754, 2755, 2756,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2757, 2758, 2759, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 0,
	0, 0, 1108, 1109, 1110, 1111, 1112, 2745, 2746, 2747,
	2748, 2749, 2750, 1121, 1122, 0, 0, 0, 1180, 0,
	1180, 1140, 1141, 0, 1143, 0, 0, 0, 0, 0,
	0, 0, 1177, 1155, 1158, 1162, 0, 1737, 1737, 1177,
	1168, 0, 786, 787, 788, 1185, 1186, 1174, 1187, 1192,
	1191, 1200, 1200, 0, 1191, 1221, -2, 1221, 1361, 0,
	463, 465, 0, 486, 0, 489, 492, 1430, 0, -2,
	-2, 1852, 1206, 0, 0, 1878, 1879, 0, 0, 0,
	0, 0, 2616, 235, 351, 276, 276, 276, 276, 276,
	276, 276, 0, 276, 276, 0, 276, 276, 276, 2632,
	276, 0, 276, 276, 276, 276, 276, 234, 350, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 340, 341,
	342, 0, 0, 0, 738, 1194, 743, 741, 0, 735,
	732, 733, 0, 80, 0, 67, 81, 1761, 1383, 1384,
	1385, 1330, 0, 1334, -2, 0, 1812, 0, 1817, 69,
	1320, 1321, 1322, -2, 0, 0, 1328, 1329, -2, 1480,
	1841, 0, 0, 1234, 0, 0, 1231, 1237, 0, 1744,
	0, 0, 119, 1228, 47, 48, 2761, 59, 0, 0,
	1256, 1311, 0, 1439, 2313, 1445, -2, 2226, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 2171, 0, 0, 0,
	0, 0, 2268, 1518, 1519, 1520, 1521, 1522, 1523, 2479,
	2697, 2698, 1707, 1711, 1712, 1713, 1714, 1715, 1716, -2,
	-2, -2, 1690, 1691, 1705, 0, 2751, 2752, 2754, 2755,
	2756, 1779, 0, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 2294, 2357, 2245, 2362, 2190,
	2757, 2182, 2758, 2259, 2386, 2387, 2759, 2302, 2729, 0,
	-2, 2411, 2350, -2, -2, -2, 1586, -2, -2, -2,
	2741, 2742, 2726, 2731, 2252, 2200, 2310, 2351, 2191, 2212,
	2231, 2280, 2281, 2283, 2315, 2316, 2334, 2343, 2361, 2172,
	2173, 2174, 2275, 2276, 2383, 2382, 2381, 2384, 2417, 2415,
	2418, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2175, 2176, 2177, 2178, 2179, 2181, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2192, 2193, 2194, -2, 2199,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2210, 2211,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2227, 2228, 2230, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2246,
	2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257,
	2258, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2269,
	2270, 2271, 2272, 2273, 2274, 2277, 2278, 2279, 2282, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2295,
	2296, -2, -2, 2299, 2300, 2301, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2311, 2312, 2314, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2344, 2345, 2346, 2347, 2348, 2349, 2352, 2353, 2354, 2355,
	2356, 2358, 2359, 2360, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2385, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2412, 2413, 2414, 2416, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 0, 1816, 1816, 0,
	106, 2699, 0, 1786, -2, -2, 1788, 0, 0, 0,
	-2, -2, -2, -2, 2183, -2, 1690, 0, 0, 0,
	0, 2171, 2172, 2173, 2174, 2180, 2182, 2190, 2191, 2195,
	2196, 2197, 2198, 2200, 2209, 2212, 2226, 2229, 2231, 2245,
	2252, 2259, 2268, 2275, 2276, 2280, 2281, 2283, 2294, 2297,
	2298, 2302, 2310, 2313, 2315, 2316, 2317, 2334, 2343, 2350,
	2351, 2357, 2361, 2362, 2381, 2382, 2383, 2384, 2386, 2387,
	2398, 2408, 2409, 2410, 2411, 2415, 2417, 2418, 122, 1729,
	0, 124, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 812, 1835, 1836, 0, 1737, 1240, 0, 0,
	335, 0, 0, 0, 0, 0, 1814, 330, 0, 0,
	0, 0, 1814, 337, 0, 0, 1083, 0, 1084, 0,
	345, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 1128, 1102, 0, 1104, 98, 1107, 0, 0,
	0, 0, 1125, 1126, 1129, 0, 1171, 1180, 1131, 0,
	0, 1814, 1814, 0, 0, 0, 0, 0, 1139, 0,
	814, 815, 1180, 1145, 1146, 1180, 1180, 1180, 1177, 0,
	1177, 1152, 1175, 1176, 1180, 0, 0, 0, 1157, 0,
	0, 0, 1165, 1166, 1180, 1170, 0, -2, 1198, -2,
	1207, 0, 0, 79, 1222, 1221, 0, 1226, 1362, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 488, 469,
	0, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 1361, 0, 0, 1847, 1853, 1211,
	1869, 1870, 0, 1880, 1881, 280, 0, 280, 0, 0,
	0, 0, 202, 276, 0, 204, 276, 276, 276, 0,
	276, 276, 211, 212, 276, 214, 215, 216, 276, 218,
	219, 276, 221, 222, 223, 276, 276, 226, 276, 276,
	229, 230, 231, 232, 233, 349, 0, 0, 0, 2616,
	1813, 0, 0, 0, 0, 739, 744, 745, 740, 742,
	711, 0, 0, 0, 0, 716, 717, 718, 719, 0,
	0, 722, 723, 728, 728, 0, 65, 66, 0, 0,
	0, 1333, 1331, 0, -2, 937, -2, 687, 688, 689,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 1389, 0, 0, 0, 0, 0, 1826, -2,
	0, 0, 0, 0, 1318, 0, 1335, 0, 1337, 0,
	-2, 0, 0, 0, 1826, 1341, 1342, 1343, 1344, 1345,
	0, 0, 0, 1482, 0, 57, 58, 1235, 1236, 54,
	62, 63, 55, 1232, 1233, 1238, 1239, 56, 73, 0,
	0, 1738, 1741, 1742, 1743, 1730, 1731, 1734, 0, 0,
	73, 1241, 1242, 1243, 1244, 1245, 1246, 0, 1230, 0,
	1257, 0, 0, 0, 0, 1312, 0, 1315, 1316, 1317,
	0, 1443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1446, 0,
	1460, 0, 0, 0, 0, 0, 0, 0, 1511, 1512,
	1513, 1514, 1515, 1516, 0, 1708, 1709, 1710, 1247, 0,
	0, 0, 1247, 1247, 1247, 1247, 1247, 0, 1486, 2424,
	0, 2389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 1682, 0,
	0, 1583, 0, 1584, 1585, 1587, 1601, 0, 1588, 1589,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 1597, 1598, 0, 0, 0, 0, 0, 0,
	98, 100, 1424, 0, 107, 109, 0, 0, 2699, 1789,
	1790, 678, 1804, 1805, 1806, 1807, 0, 775, 776, 1802,
	0, 1737, 829, 0, 560, 657, 578, 579, 580, 647,
	582, 649, 0, 649, 649, 1679, 1680, 649, 649, 649,
	624, 625, 626, 627, 628, 630, 631, 632, 633, 634,
	0, 0, 606, 647, 647, 647, 610, 637, 638, 639,
	640, 641, 642, 643, 644, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	652, 652, 654, 654, 654, 654, 654, 560, 560, 560,
	560, 560, 0, 811, 1038, 1039, 0, 1744, 119, 1833,
	1761, 0, 0, 337, -2, 0, -2, 0, 1419, 0,
	0, 0, 0, 148, 373, 353, 133, 0, 0, 331,
	336, 332, 333, 334, 0, 0, 0, 0, 344, 0,
	0, 1091, 96, 1092, 1093, 1094, 1095, 1096, 346, 1097,
	1098, 375, 0, 1425, 1843, 1844, 1845, 1846, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 0, 0, 0, 1113,
	1115, 1119, 1120, 1114, 1116, 1123, 1117, 1124, 1169, 1130,
	1181, 0, 1183, 0, 0, 1361, 1135, 1136, 1137, 1138,
	816, 1144, 1147, 1148, 1154, 1180, 0, 1361, 1153, 1178,
	1179, 1156, 1474, 1159, 1599, 0, 1167, 1188, 1204, 0,
	1199, 0, 1205, 1209, 1208, 0, 1212, 1215, 1216, 1217,
	1218, 79, 1214, 0, 0, 0, 1220, 464, 466, 468,
	487, 0, 0, 490, 491, 493, 0, 1431, 1849, 0,
	0, 1872, 0, 1874, 1876, 0, 0, 281, 282, 283,
	280, 0, 236, 0, 298, 352, 0, 203, 0, 278,
	205, 206, 207, 276, 209, 210, 213, 217, 220, 224,
	225, 227, 228, 348, 280, 0, 0, 280, 0, 0,
	0, 737, 756, 0, 0, 1195, 1196, 0, 712, 713,
	714, 715, 730, 721, 724, 728, 0, 725, 728, 0,
	0, 82, 0, 0, 1763, 1766, 1767, 1768, 1769, 1770,
	1771, 1839, 1840, 0, 936, 690, 691, 692, 0, 773,
	773, 773, 683, 358, 385, 1379, 1381, 0, 1376, 1387,
	1388, 1390, 0, 1392, 0, 0, 1395, 1396, 1397, 1365,
	0, 0, 1327, 1479, 1481, 0, 0, 1433, 1339, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 0, 0,
	1356, 0, 0, 0, 1357, 0, 1483, 1484, 1252, 1253,
	0, 0, 45, 0, 1745, 0, 0, 0, 0, 1733,
	1735, 1736, 0, 0, 1718, 0, 0, 70, 119, 119,
	50, 1440, 1441, 1442, 1444, 1461, 0, 1463, 1465, 1313,
	1314, 1258, 0, 1692, -2, 1694, 1695, -2, -2, -2,
	1451, 1452, 1476, 1477, 1478, 0, 0, 0, 0, 1474,
	1456, 0, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1510, 1614, 1615, 1616, 0, 1703,
	0, 1704, 1508, 0, 0, 0, 1717, 1509, 1698, 1517,
	1482, 1248, 1249, 1701, 1702, 1699, 1700, 0, 0, 0,
	0, 0, 0, 1778, 0, 0, 0, 1558, 0, 0,
	0, 0, 0, 1492, 1707, 0, 1492, 1707, 0, 0,
	2284, 2396, 2176, 0, 0, 0, 1688, 1685, 0, 0,
	0, 0, 2745, 2746, 0, 1600, 0, 0, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 0,
	0, 0, 1284, 1285, 1286, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 102, 0, 1423, 0, -2,
	0, 0, 94, 95, 0, 0, 0, 1787, 0, 0,
	0, 112, 113, 108, 1791, 679, 0, -2, 1798, 1707,
	1800, 1692, 0, 1744, -2, 545, 546, 547, 548, 0,
	793, 802, 0, 0, 791, 0, 793, 793, 0, 789,
	790, 551, 660, 658, 659, 581, 0, 611, 0, 649,
	649, 1679, 1680, 613, 649, 649, 616, 649, 649, 619,
	622, 623, 629, 0, 0, 607, 608, 609, 598, 0,
	599, 652, 601, 0, 602, 603, 604, 605, 552, 553,
	554, 555, 556, 810, 0, 300, 0, 0, 0, 0,
	0, 128, 1815, 129, 0, 396, 397, 0, 302, 0,
	338, 339, 150, 0, 0, 354, 0, 139, 0, 540,
	541, 0, 1085, 0, 1087, 343, 1099, 1090, 0, 0,
	0, 0, 0, 99, 0, 1182, 1132, 1133, 1134, 1437,
	0, 0, 1149, 1177, 1180, 1172, 0, 0, 1160, 0,
	1203, 1201, 1210, 1213, 1358, 0, 0, 470, 471, 472,
	494, 0, 1850, 1851, 1848, 1871, 0, 1875, 1877, 0,
	284, 286, 0, 0, 192, 0, 0, 277, 0, 208,
	0, 0, 0, 0, 194, 0, 736, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	720, 0, 726, 0, 727, 709, 710, 83, 1762, 0,
	0, 1332, 773, 0, 774, 0, 0, 1046, 939, 940,
	941, 1048, 0, -2, 1044, 1044, 773, 1044, 0, 0,
	0, 0, 0, 0, 978, 773, 1044, 1821, 0, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	1037, 773, 773, 773, 773, 773, 773, 773, 773, 0,
	0, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 0, 773, 773, 160, 359, 1081,
	0, 1373, 1380, 0, 0, 1374, 0, 1375, 1391, 1393,
	1394, 1323, 0, 1365, 1319, -2, 0, 1369, 1338, 1433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 74, 2492, 0, 77,
	0, 0, 1739, 1740, 1732, 0, 1808, 1809, 1719, 1720,
	1437, 0, 0, 1250, 1462, 1464, 1466, 0, 1482, 1453,
	1474, 1457, 0, 1454, 0, 1448, 1556, 0, 0, 0,
	0, 0, 0, 1487, 1554, 1555, 1557, 0, 0, 0,
	1561, 0, 0, 1565, 0, 0, 1607, 0, 0, 1608,
	1570, 0, 0, 0, 0, 0, 1576, 1729, 0, 1686,
	0, 0, 1579, 1580, 1581, 1582, 1602, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 1543, 0, 1544, 0, 0,
	0, 0, 0, 0, 1551, 1552, 1553, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1595,
	0, 0, 1422, 0, 1437, 0, 1437, 1437, 101, 0,
	1432, 110, 111, 0, 0, 117, 680, 681, 682, 1799,
	0, 301, 542, 830, 683, 907, 773, 773, 773, 0,
	773, 773, 773, 773, 773, 0, 0, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 0, 773, 773, 773, 773, 773,
	773, 0, 773, 773, 0, 0, 0, 0, 801, -2,
	-2, 793, 793, 793, 792, 793, 793, 784, 794, 795,
	785, 808, 561, 562, 0, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 669, 0, 704, 706, 0, 0, 577, 661,
	0, 0, 0, 612, 649, 620, 614, 615, 617, 618,
	0, 645, 0, 0, 600, 0, 826, 0, 1834, 118,
	1761, 0, 0, 398, 399, 400, 1420, 0, 303, 304,
	0, 0, 0, 0, 0, 160, 0, 374, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 1089, 1100, 1101,
	97, 347, 376, 0, 0, 1118, 1142, 0, 817, 818,
	1361, 1151, 1475, 1161, 1163, 1164, 1359, 1360, 102, 0,
	1873, 0, 0, 0, 0, 0, 0, 296, 279, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 0, 0, 729,
	1764, 1765, 0, 696, 697, 698, 699, 700, 701, 702,
	906, 683, 1047, 0, 0, 0, 0, 1049, 914, 0,
	793, 0, 0, 948, 949, 0, 1045, 928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 970, 971, 972, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 1822, 1823, 1824, 990,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 1030, 887, 888, 889, 890, 891,
	903, 904, 905, 892, 893, 894, 0, 0, 1040, 0,
	388, 0, 0, 0, 1377, 0, 1382, 0, 1367, 1324,
	-2, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 1254, 0, 0,
	0, 75, 670, 1746, 1747, 46, 1721, 71, 72, 119,
	1259, 1706, 0, 1455, 0, 1458, 1524, 1267, 1267, 1267,
	1267, 1267, 0, 647, 647, 647, 1664, 647, 654, 1667,
	1669, 1670, 1671, 647, 1673, 647, 1676, 1678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 1578, 1689, 0, 0, 0, 0, 0, 1260,
	1261, 1263, 1545, 1546, 1547, 1548, 1549, 1550, 1528, 1268,
	1529, 1530, 1532, 1533, 1535, 1536, 1537, 1538, 1540, 1541,
	1542, 1772, 1772, 0, -2, 1753, 0, 1750, 1333, 1759,
	1760, 0, 1437, 1780, 0, 0, 0, 0, 1729, 1437,
	92, 93, 0, 114, 115, 116, 831, 0, 0, 0,
	773, 0, 773, 0, 0, 0, 0, 0, 773, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	796, 647, 647, 0, 791, 800, 777, 779, 780, 781,
	783, 0, 809, 563, 0, 0, 574, 0, 0, 675,
	676, 677, 662, 0, 0, 665, 666, 0, 1449, 1450,
	1599, 1599, 1599, 1599, 1599, 1599, 0, 0, 0, 0,
	1599, 1599, 1599, 0, 703, 705, 707, 708, 648, 650,
	651, 621, 635, 0, 636, 0, 655, 0, 813, 827,
	828, 0, 120, 0, 139, 0, 310, 0, 306, 0,
	0, 0, 0, 168, 151, 152, 153, 155, 156, 0,
	0, 0, 149, 0, 356, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 1086, 1088, 0, 0, 1364, 1106,
	1438, 1180, 670, 0, 296, 285, 287, 288, 0, 296,
	299, 193, 0, 0, 0, 0, 0, 0, 194, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 0,
	731, 693, 694, 695, 938, 942, -2, 1044, 0, 0,
	920, 909, 0, 0, 918, 919, 915, 0, 1041, 0,
	0, 1833, 791, 1829, 0, 0, -2, 950, 951, 974,
	975, 976, 0, 1051, 0, 0, 0, 0, 956, 957,
	958, 959, 0, 773, 0, 0, 0, 0, 0, 0,
	979, 980, 981, 982, 1041, 0, 0, 986, 0, 0,
	0, 0, 0, 1058, 0, 0, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1035, 992, 993, 994, 995, 996,
	997, 998, 999, 0, 0, 1002, 883, 884, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 880, 881, 882, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 895, 896, 897,
	898, 899, 900, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 0, 1033, 0, 161, 162, 0, 0,
	0, 0, 392, 389, 390, 0, 386, 0, 385, 0,
	0, 0, 1366, 0, 1336, 1370, 1434, 1435, 1436, 1346,
	1347, 0, 1349, 1350, 0, 1352, 1353, 0, 1372, 0,
	0, 78, 1862, 671, 1726, 0, 1251, 1525, 1459, 1527,
	1531, 1526, 1534, 1539, 1559, 1659, 670, 670, 1665, 1666,
	1668, 1672, 1674, 1675, 1677, 1563, 1560, 1562, 1564, 0,
	0, 0, 0, 1571, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 1592, 1593, 1265, 1264, 104, 0, 85,
	1772, 0, 0, 0, 0, 0, 0, -2, -2, -2,
	2155, 2119, 1757, 1774, 0, 0, 1729, 0, 0, 0,
	0, 0, 1737, 91, 832, 833, 834, 0, 773, 0,
	837, 838, 840, 841, 842, 0, 0, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 0, 877, 0, 879, 761, 0,
	1734, 1734, 793, 793, 0, 0, 0, 0, 672, 673,
	674, 663, 664, 0, 668, 646, 0, 0, 0, 0,
	118, 138, 0, 119, 311, 312, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 305, 307, 308, 309, 385,
	186, 169, 170, 0, 0, 0, 0, 0, 157, 158,
	159, 355, 0, 0, 360, 0, 0, 0, 0, 140,
	141, 0, 143, 139, 0, 0, 1150, 1862, 1421, 289,
	296, 289, 0, 194, 194, 0, 194, 195, 201, 758,
	759, 922, 0, 0, 0, 0, 916, 0, 944, 1042,
	0, 560, 560, 0, 793, 793, 0, 1073, 0, 977,
	952, 954, 953, 955, 0, 0, 962, 963, 1041, 0,
	967, 0, 1052, 1053, 1054, 1055, 983, 0, 0, 0,
	0, 0, 1056, 1057, 0, 0, 1000, 1001, 1031, 1032,
	0, 901, 163, 164, 165, 166, 167, 1077, 0, 0,
	1082, 387, 1081, 0, 379, 394, 395, 0, 1378, 1368,
	0, 0, 0, 1255, 0, 1864, 1858, 1279, 0, 0,
	1660, 1661, 1662, 1663, 0, 0, 0, 0, 1572, 1573,
	1574, 1609, 1577, 1684, 0, 0, 1729, 0, 84, 119,
	0, 104, 1365, -2, 1751, 0, 0, 1758, 1333, 1776,
	0, 103, 1737, 1781, 1782, 1783, 1784, 1785, 90, 835,
	0, 839, 885, 886, 843, 844, 875, 876, 0, 760,
	764, 0, 773, 0, 773, 773, 771, 772, 797, 798,
	799, 778, 782, 0, 557, 0, 0, 667, 653, 656,
	0, 118, 120, 0, 120, 313, 314, 315, 316, 318,
	319, 0, 0, 0, 388, 132, 0, 0, 171, 0,
	0, 0, 0, 181, 182, 183, 184, 185, 154, 0,
	0, 357, 0, 366, 368, 0, 367, 369, 0, 137,
	0, 1363, 1864, 189, 0, 289, 191, 297, 196, 198,
	194, 197, 1071, 0, 921, 0, 0, 0, 0, 0,
	943, 1043, 549, 550, 0, 1833, 0, 1050, 0, 0,
	0, 961, 964, 965, 968, 984, 985, 0, 0, 989,
	0, 0, 0, 1034, 118, 393, 391, 388, 377, 381,
	0, 0, 0, 0, 1399, 0, 2584, 76, 1866, -2,
	0, 68, 0, 1727, 1728, 1722, 1723, 1725, 1566, 1568,
	1567, 1569, 0, 0, 0, 1590, 1591, 1269, 0, 105,
	0, 86, 1749, 1752, 1754, 0, 1775, 1777, 89, 836,
	878, 765, 766, 0, 768, 0, 0, 0, 572, 558,
	559, 0, 575, 762, 144, 0, 0, 79, 320, 321,
	322, 323, 392, 187, 188, 172, 173, 0, 175, 176,
	0, 0, 0, 371, 0, 364, 365, 0, 1105, 1818,
	290, 190, 199, 908, 0, 914, 910, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 960, 773, 0, 0,
	988, 0, 1060, 902, 79, 392, 0, 383, 0, 1348,
	1351, 1354, 0, 0, 0, 0, 0, 0, 1865, 1860,
	0, 1857, 0, 1280, 1281, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 1266, 0, 0, 767, 769, 770,
	0, 557, 125, 763, 126, 0, 118, 401, 118, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 0, 0, 0, 0, 0, 0, 79, 0,
	79, 0, 0, 0, 446, 0, 79, 0, 0, 177,
	0, 179, 180, 370, 0, 142, 1365, 0, 0, 0,
	0, 911, 912, 0, 917, 762, 0, 0, 0, 0,
	969, 987, 1059, 0, 1036, 118, 1078, 0, 378, 0,
	379, 1825, 1400, 1401, 0, 0, 1402, 0, 0, 0,
	0, 1863, 0, 0, 1859, 0, 0, 1724, 1610, 0,
	1613, 1262, 1270, 0, 1273, 0, 0, 0, 1309, 0,
	1271, 1773, -2, 0, 573, 0, 0, 0, 144, 118,
	0, 0, 131, 0, 0, 416, 0, 0, 1835, 0,
	0, -2, -2, -2, 1837, 443, 444, 0, 495, 0,
	0, 0, 460, 461, 0, 447, 0, 462, 324, 0,
	118, 174, 178, 372, 42, 0, 0, 1072, 0, 916,
	913, 945, 0, 762, 0, 966, 1061, 1079, 118, 0,
	379, 382, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 1282, 1283, 1611, 0, 1274, 1275, 1276, 1277, 1278,
	0, 0, 145, 0, 0, 127, 120, 402, 403, 0,
	0, 79, 417, 0, 79, 0, 0, 0, 670, 0,
	79, 79, 79, 79, 0, 79, 79, 0, 448, 79,
	79, 44, 0, 1819, 1820, 291, 292, 293, 295, 0,
	0, 762, 947, 0, 79, 380, 384, 1398, 1406, 1407,
	0, 0, 0, 1414, 0, 0, 1867, 1868, 1861, 1855,
	0, 0, 1310, 0, 146, 147, 79, 0, 79, 414,
	0, 79, 0, 0, 0, 0, 678, 1838, 0, 496,
	325, 0, 0, 0, 0, 0, 0, 0, 327, 118,
	43, 0, 0, 0, 946, 0, 2303, 118, 1408, 0,
	0, 1409, 0, 0, 0, 0, 0, 1403, 0, 0,
	1272, 803, 118, 404, 405, 406, 407, 408, 409, 79,
	0, 412, 0, 79, 0, 79, 426, 427, 428, 79,
	435, 437, 438, 439, 0, 441, 442, 430, 451, 326,
	79, 79, 79, 79, 0, 79, 445, 449, 134, 294,
	925, 0, 1075, 1076, 1080, 0, 0, 0, 0, 1410,
	1411, 1415, 1417, 0, 1404, 1612, 804, 805, 0, 130,
	0, 411, 80, 79, 0, -2, 0, 79, 0, 423,
	0, 429, 0, 440, 0, 328, 0, 0, 0, 0,
	0, 0, 923, 0, 925, 0, 0, 0, 0, 1416,
	1418, 806, 0, 807, 0, 0, 0, 79, 0, 415,
	419, 0, 0, 79, 424, 0, 436, 431, 329, 452,
	0, 79, 454, 457, 450, 926, 924, 0, 0, 819,
	821, 822, 0, 0, 820, 410, 413, 79, 421, 0,
	79, 453, 0, 0, 1412, 1413, 823, 824, 825, 0,
	79, 0, 455, 458, 420, 0, -2, 456, 459, 422,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:785
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:814
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:938
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			// ins.Returning = $9.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:964
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1010
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1028
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1051
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1064
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1077
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1131
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1140
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1161
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1211
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1255
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1282
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1302
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1323
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1341
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1359
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1383
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1405
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1437
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1452
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1486
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1498
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1511
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1525
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1547
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1568
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1585
		{
			yyVAL.val = []AccountName(nil)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1594
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1639
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1643
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1676
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1704
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1716
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1720
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1728
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1753
		{
			yyVAL.val = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1768
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1784
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1815
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1827
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1840
		{
			yyVAL.val = false
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1844
		{
			yyVAL.val = true
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1850
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1866
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1881
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1897
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1926
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2041
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2125
		{
			yyVAL.val = []string(nil)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2144
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2191
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2195
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2199
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2203
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2207
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2221
		{
			yyVAL.val = false
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.val = true
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2232
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2245
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2257
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2364
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2377
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2381
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2410
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2415
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2424
		{
			yyVAL.val = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2528
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2532
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.val = &Authentication{}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.val = yyDollar[1].val
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2547
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2551
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2555
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2567
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2571
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2575
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2589
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2607
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2627
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2632
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2641
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2667
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.val = EventStatus_Enable
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.val = EventStatus_Disable
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2684
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2689
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.val = BeforeStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.val = AfterStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.val = InsertStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.val = UpdateStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.val = DeleteStr
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2732
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2757
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2767
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2771
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2775
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2779
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2795
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2801
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2806
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2811
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 422:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2817
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2835
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2841
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2853
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2857
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2864
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2936
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2944
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2962
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2966
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2977
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2981
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 456:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2985
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2996
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3000
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3004
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3037
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3041
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3045
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3055
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.val = &Resignal{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3139
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3151
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3173
		{
			yyVAL.val = Exprs(nil)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.val = Exprs(nil)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3181
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3245
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3272
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3302
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3431
		{
			yyVAL.val = BoolVal(false)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.val = BoolVal(false)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.val = BoolVal(true)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3444
		{
			yyVAL.val = ColumnType{}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3452
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3474
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3539
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3561
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3572
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3595
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3631
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3767
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3801
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3881
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3886
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3931
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3940
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3949
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3962
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3988
		{
			yyVAL.val = BoolVal(false)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.val = BoolVal(true)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4001
		{
			yyVAL.val = BoolVal(false)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = BoolVal(true)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4037
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4041
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4047
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.val = BoolVal(true)
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4058
		{
			yyVAL.val = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4088
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4094
		{
			yyVAL.val = ""
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4117
		{
			yyVAL.val = false
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.val = true
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4126
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4156
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4162
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4166
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4170
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4174
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4178
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4182
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4188
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4192
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4196
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4208
		{
			yyVAL.val = colKeyPrimary
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.val = colKey
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.val = colKeyUnique
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4240
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4325
		{
			yyVAL.val = false
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.val = true
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = ""
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.val = ""
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4347
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4357
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4367
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.val = false
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.val = true
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.bytes = nil
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4463
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4469
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4473
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4479
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4483
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4488
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4508
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.val = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.val = ":="
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4565
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4581
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4590
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4594
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4598
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4627
		{
			yyVAL.val = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4640
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4684
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4688
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4692
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4696
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4700
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.bytes = []byte(nil)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4719
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4729
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.val = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4748
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4752
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.val = Restrict
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.val = Cascade
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.val = NoAction
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{
			yyVAL.val = SetDefault
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			yyVAL.val = SetNull
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4791
		{
			yyVAL.val = true
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.val = true
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.val = false
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4804
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4812
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4822
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4830
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4834
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4962
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4966
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4982
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5077
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5134
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5147
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5154
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5163
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5171
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5181
		{
			yyVAL.val = false
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			yyVAL.val = true
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.val = ""
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5218
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5222
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 924:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5231
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5242
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5246
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5251
		{
			yyVAL.val = ""
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.val = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5264
		{
			yyVAL.val = string("")
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5280
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5294
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5309
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5329
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5342
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5366
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5384
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5403
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5420
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5444
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5480
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5494
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5531
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5541
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5551
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5561
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5571
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5581
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5601
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5611
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5626
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5642
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5652
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5662
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5678
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5692
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5706
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5720
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5734
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5748
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5761
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5774
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5784
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5794
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5806
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5820
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5834
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5851
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5861
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5871
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5881
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5901
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5918
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5931
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5960
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5981
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6002
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6021
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6215
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6221
		{
			yyVAL.val = true
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.val = false
		}
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6235
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6261
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6265
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6269
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6274
		{
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6276
		{
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6279
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6283
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6293
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6299
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6303
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6307
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6311
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6343
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6351
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6368
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6372
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6376
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6393
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6397
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6403
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6407
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6413
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6417
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6423
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6453
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6479
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6507
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6537
		{
			yyVAL.val = EventName{}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6541
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6547
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6551
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6563
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6587
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6603
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6607
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6613
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6638
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6658
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6676
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6693
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6710
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6730
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6750
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6765
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6780
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6799
		{

		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6803
		{
			yyVAL.val = Restrict
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6807
		{
			yyVAL.val = Cascade
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6813
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6826
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6841
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6847
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6851
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6868
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6872
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6876
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6880
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6890
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6897
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6901
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6911
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6915
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6919
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6925
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6929
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6933
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6937
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6943
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6965
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6976
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6988
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7000
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7013
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7026
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7037
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7048
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7059
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7070
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7080
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7090
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7103
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7113
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7124
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7134
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7144
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7155
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7167
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7179
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7193
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7206
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7217
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7231
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7243
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7253
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7264
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7277
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7287
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7299
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7310
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7323
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7332
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7343
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7354
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7365
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7376
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7390
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7400
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7410
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7420
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7432
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7438
		{
			yyVAL.val = false
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7442
		{
			yyVAL.val = true
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7448
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7452
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7458
		{
			yyVAL.val = ""
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7462
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7466
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7472
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7476
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7480
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7484
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7490
		{
			yyVAL.val = ""
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7494
		{
			yyVAL.val = SessionStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7498
		{
			yyVAL.val = GlobalStr
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7504
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7516
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7541
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7545
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7551
		{
			yyVAL.val = &Begin{}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7555
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7561
		{
			yyVAL.val = &Begin{}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7565
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7569
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7573
		{
			yyVAL.val = &Begin{}
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7578
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7582
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7587
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7591
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7596
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7600
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7606
		{
			yyVAL.val = &Commit{}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7612
		{
			yyVAL.val = &Rollback{}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7618
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7624
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7628
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7632
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7636
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7642
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7648
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7652
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7656
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7662
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7670
		{
			yyVAL.val = ""
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7679
		{
			yyVAL.val = false
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7683
		{
			yyVAL.val = true
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7695
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7715
		{
			setAllowComments(yylex, true)
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7719
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7727
		{
			yyVAL.val = Comments(nil)
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7731
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7737
		{
			yyVAL.val = UnionStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7741
		{
			yyVAL.val = UnionAllStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7745
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7751
		{
			yyVAL.val = IntersectStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7755
		{
			yyVAL.val = IntersectAllStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7765
		{
			yyVAL.val = ExceptStr
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7769
		{
			yyVAL.val = ExceptAllStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7773
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7778
		{
			yyVAL.val = QueryOpts{}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7782
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7793
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7804
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7815
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7826
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7837
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7849
		{
			yyVAL.val = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7853
		{
			yyVAL.val = AllStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7857
		{
			yyVAL.val = DistinctStr
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7863
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7871
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7882
		{
			yyVAL.val = &StarExpr{}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7886
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7890
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7894
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7900
		{
			yyVAL.val = &StarExpr{}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7904
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7908
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7912
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7918
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7922
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7928
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = ColIdent{}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7936
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7941
		{
			yyVAL.val = Exprs(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7945
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7950
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7954
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7959
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7963
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7967
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7974
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7997
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8012
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8016
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8020
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8024
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8031
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8039
		{
			yyVAL.val = Window(nil)
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8042
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8051
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8057
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8097
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8101
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8106
		{
			yyVAL.val = ColIdent{}
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8110
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8114
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8118
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8124
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8128
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8132
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8138
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8142
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8152
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8156
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8171
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8186
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8192
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8198
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8212
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8216
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8221
		{
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8223
		{
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8227
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8237
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8252
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8256
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8260
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8264
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8270
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8274
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8278
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8282
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8286
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8292
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8296
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8300
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8306
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8310
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8314
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8318
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8322
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8326
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8332
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8338
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8342
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8348
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8352
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8356
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = Expr(nil)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8375
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8380
		{
			yyVAL.val = Columns(nil)
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8384
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8390
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8394
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8404
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8410
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8414
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8428
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8432
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8436
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8440
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8446
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8448
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8452
		{
			yyVAL.val = JoinCondition{}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8454
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8458
		{
			yyVAL.val = JoinCondition{}
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8460
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8469
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = JoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = JoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8483
		{
			yyVAL.val = JoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val = StraightJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8495
		{
			yyVAL.val = LeftJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8499
		{
			yyVAL.val = LeftJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = RightJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8507
		{
			yyVAL.val = RightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8511
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8515
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8521
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8525
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1398:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8535
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8542
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8553
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8561
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1404:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8566
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8573
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8585
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8593
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8597
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8601
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8605
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8609
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = &NullVal{}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8625
		{
			yyVAL.val = &NullVal{}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8629
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8635
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8639
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8651
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8655
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8661
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8665
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8673
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8677
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8681
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8687
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8691
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8697
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8702
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8706
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8714
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = Expr(nil)
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8733
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8737
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8741
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8753
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8757
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8763
		{
			yyVAL.val = ""
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8767
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8773
		{
			yyVAL.val = BoolVal(true)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8777
		{
			yyVAL.val = BoolVal(false)
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8783
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8791
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8795
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8799
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8803
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8807
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8811
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8815
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8819
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8825
		{
			yyVAL.val = IsNullStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8829
		{
			yyVAL.val = IsNotNullStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8833
		{
			yyVAL.val = IsTrueStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8837
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8841
		{
			yyVAL.val = IsFalseStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8845
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8851
		{
			yyVAL.val = EqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8855
		{
			yyVAL.val = LessThanStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8859
		{
			yyVAL.val = GreaterThanStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = LessEqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8867
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8871
		{
			yyVAL.val = NotEqualStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8875
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = Expr(nil)
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8890
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8894
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8898
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8910
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8914
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8926
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8930
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8940
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8946
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8950
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8954
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8958
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8962
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8966
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8970
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8974
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8982
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8986
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8990
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8994
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8998
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9002
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9006
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9010
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9018
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9022
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9026
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9030
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9034
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9038
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9042
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9046
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9054
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9076
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9096
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9100
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9110
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9114
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9118
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9122
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9126
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9130
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9142
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9146
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9150
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9154
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9158
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9162
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9166
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9170
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9174
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9199
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9203
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9207
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9211
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9215
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9219
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9223
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9234
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9238
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9266
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9270
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9274
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9278
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9282
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9286
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9290
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9302
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9371
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9375
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9391
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9395
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9399
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9407
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9411
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9415
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9419
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9423
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9454
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9458
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9462
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9466
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9470
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9476
		{
			yyVAL.val = ""
		}
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9480
		{
			yyVAL.val = BooleanModeStr
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9484
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1612:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9488
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9492
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9498
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9502
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9506
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9512
		{
			yyVAL.val = Armscii8Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9516
		{
			yyVAL.val = AsciiStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9520
		{
			yyVAL.val = Big5Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9524
		{
			yyVAL.val = UBinaryStr
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9528
		{
			yyVAL.val = Cp1250Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9532
		{
			yyVAL.val = Cp1251Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9536
		{
			yyVAL.val = Cp1256Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9540
		{
			yyVAL.val = Cp1257Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9544
		{
			yyVAL.val = Cp850Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9548
		{
			yyVAL.val = Cp852Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = Cp866Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = Cp932Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = Dec8Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = EucjpmsStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9568
		{
			yyVAL.val = EuckrStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9572
		{
			yyVAL.val = Gb18030Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9576
		{
			yyVAL.val = Gb2312Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9580
		{
			yyVAL.val = GbkStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = Geostd8Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9588
		{
			yyVAL.val = GreekStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9592
		{
			yyVAL.val = HebrewStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9596
		{
			yyVAL.val = Hp8Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9600
		{
			yyVAL.val = Keybcs2Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9604
		{
			yyVAL.val = Koi8rStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9608
		{
			yyVAL.val = Koi8uStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9612
		{
			yyVAL.val = Latin1Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9616
		{
			yyVAL.val = Latin2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9620
		{
			yyVAL.val = Latin5Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9624
		{
			yyVAL.val = Latin7Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9628
		{
			yyVAL.val = MacceStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9632
		{
			yyVAL.val = MacromanStr
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9636
		{
			yyVAL.val = SjisStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9640
		{
			yyVAL.val = Swe7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9644
		{
			yyVAL.val = Tis620Str
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9648
		{
			yyVAL.val = Ucs2Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9652
		{
			yyVAL.val = UjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9656
		{
			yyVAL.val = Utf16Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = Utf16leStr
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = Utf32Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9668
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9672
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9682
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9686
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9690
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9698
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9710
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9717
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9721
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9733
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9737
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9741
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9745
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9749
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9753
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9757
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9767
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9771
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9776
		{
			yyVAL.val = Expr(nil)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9785
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9789
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9795
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9799
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9810
		{
			yyVAL.val = Expr(nil)
		}
	case 1689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9814
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9840
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9856
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9860
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9864
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9868
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9872
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9876
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9880
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9884
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9906
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9910
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9914
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9918
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9922
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9926
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9930
		{
			yyVAL.val = &NullVal{}
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9940
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9944
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9949
		{
			yyVAL.val = Exprs(nil)
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9953
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9959
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9963
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9974
		{
			yyVAL.val = Expr(nil)
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9984
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9989
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9993
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9999
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10003
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10009
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10014
		{
			yyVAL.val = AscScr
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10018
		{
			yyVAL.val = AscScr
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = DescScr
		}
	case 1737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10045
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10049
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10053
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10058
		{
			yyVAL.val = ""
		}
	case 1745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10062
		{
			yyVAL.val = ForUpdateStr
		}
	case 1746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = ShareModeStr
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10076
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10080
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10104
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10109
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10116
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10120
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10124
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1756:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10129
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10136
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10140
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10149
		{
			yyVAL.val = Columns(nil)
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10159
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10163
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10169
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10173
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10177
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10181
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10185
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10189
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10193
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10202
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10208
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10212
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10218
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10222
		{
			yyVAL.val = ValTuple{}
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10228
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10234
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10244
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10248
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10254
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10257
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10265
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10271
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10275
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10281
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10292
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10305
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10318
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10324
		{
			yyVAL.val = SetScope_Global
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10328
		{
			yyVAL.val = SetScope_Session
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10334
		{
			yyVAL.val = SetScope_Session
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10338
		{
			yyVAL.val = SetScope_Persist
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10342
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10348
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10356
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10366
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10373
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10380
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10384
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10388
		{
			yyVAL.val = &Default{}
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10392
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10401
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10403
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10406
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = 0
		}
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = 1
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = ""
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = IgnoreStr
		}
	case 1818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10423
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10434
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10439
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10441
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = UniqueStr
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = FulltextStr
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = SpatialStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10451
		{
			yyVAL.val = VectorStr
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10454
		{
			yyVAL.val = ""
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10459
		{
			yyVAL.val = ColIdent{}
		}
	case 1834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10461
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10465
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10469
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10486
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10492
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10496
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10507
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10511
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10516
		{
			yyVAL.val = string("")
		}
	case 1848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10518
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10521
		{
			yyVAL.val = string("")
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = IgnoreStr
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10525
		{
			yyVAL.val = ReplaceStr
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10528
		{
			yyVAL.val = BoolVal(false)
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10530
		{
			yyVAL.val = BoolVal(true)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10533
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10537
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10542
		{
			yyVAL.val = BoolVal(false)
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10546
		{
			yyVAL.val = BoolVal(true)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10551
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10555
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10560
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10564
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10572
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10576
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10581
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10585
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10590
		{
			yyVAL.val = &Lines{}
		}
	case 1867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10594
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10603
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10614
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10620
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10624
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10630
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10645
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10663
		{
			yyVAL.val = LockRead
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10667
		{
			yyVAL.val = LockReadLocal
		}
	case 1876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10671
		{
			yyVAL.val = LockWrite
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10675
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10681
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10687
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10698
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10708
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11638
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11647
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
