// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const APPLICATION_PASSWORD_ADMIN = 57709
const AUDIT_ABORT_EXEMPT = 57710
const AUDIT_ADMIN = 57711
const AUTHENTICATION_POLICY_ADMIN = 57712
const BACKUP_ADMIN = 57713
const BINLOG_ADMIN = 57714
const BINLOG_ENCRYPTION_ADMIN = 57715
const CLONE_ADMIN = 57716
const CONNECTION_ADMIN = 57717
const ENCRYPTION_KEY_ADMIN = 57718
const FIREWALL_ADMIN = 57719
const FIREWALL_EXEMPT = 57720
const FIREWALL_USER = 57721
const FLUSH_OPTIMIZER_COSTS = 57722
const FLUSH_STATUS = 57723
const FLUSH_TABLES = 57724
const FLUSH_USER_RESOURCES = 57725
const GROUP_REPLICATION_ADMIN = 57726
const GROUP_REPLICATION_STREAM = 57727
const INNODB_REDO_LOG_ARCHIVE = 57728
const INNODB_REDO_LOG_ENABLE = 57729
const NDB_STORED_USER = 57730
const PASSWORDLESS_USER_ADMIN = 57731
const PERSIST_RO_VARIABLES_ADMIN = 57732
const REPLICATION_APPLIER = 57733
const REPLICATION_SLAVE_ADMIN = 57734
const RESOURCE_GROUP_ADMIN = 57735
const RESOURCE_GROUP_USER = 57736
const ROLE_ADMIN = 57737
const SENSITIVE_VARIABLES_OBSERVER = 57738
const SESSION_VARIABLES_ADMIN = 57739
const SET_USER_ID = 57740
const SHOW_ROUTINE = 57741
const SKIP_QUERY_REWRITE = 57742
const SYSTEM_VARIABLES_ADMIN = 57743
const TABLE_ENCRYPTION_ADMIN = 57744
const TP_CONNECTION_ADMIN = 57745
const VERSION_TOKEN_ADMIN = 57746
const XA_RECOVER_ADMIN = 57747
const REPLICA = 57748
const REPLICAS = 57749
const SOURCE = 57750
const STOP = 57751
const RESET = 57752
const FILTER = 57753
const LOG = 57754
const MASTER = 57755
const SOURCE_HOST = 57756
const SOURCE_SSL = 57757
const SOURCE_USER = 57758
const SOURCE_PASSWORD = 57759
const SOURCE_PORT = 57760
const SOURCE_CONNECT_RETRY = 57761
const SOURCE_RETRY_COUNT = 57762
const SOURCE_AUTO_POSITION = 57763
const REPLICATE_DO_TABLE = 57764
const REPLICATE_IGNORE_TABLE = 57765
const IO_THREAD = 57766
const SQL_THREAD = 57767
const BEGIN = 57768
const START = 57769
const TRANSACTION = 57770
const COMMIT = 57771
const ROLLBACK = 57772
const SAVEPOINT = 57773
const WORK = 57774
const RELEASE = 57775
const CHAIN = 57776
const CONSISTENT = 57777
const SNAPSHOT = 57778
const BIT = 57779
const TINYINT = 57780
const SMALLINT = 57781
const MEDIUMINT = 57782
const INT = 57783
const INTEGER = 57784
const BIGINT = 57785
const INTNUM = 57786
const SERIAL = 57787
const INT1 = 57788
const INT2 = 57789
const INT3 = 57790
const INT4 = 57791
const INT8 = 57792
const REAL = 57793
const DOUBLE = 57794
const FLOAT_TYPE = 57795
const DECIMAL = 57796
const NUMERIC = 57797
const DEC = 57798
const FIXED = 57799
const PRECISION = 57800
const TIME = 57801
const TIMESTAMP = 57802
const DATETIME = 57803
const CHAR = 57804
const VARCHAR = 57805
const BOOL = 57806
const CHARACTER = 57807
const VARBINARY = 57808
const NCHAR = 57809
const NVARCHAR = 57810
const NATIONAL = 57811
const VARYING = 57812
const VARCHARACTER = 57813
const TEXT = 57814
const TINYTEXT = 57815
const MEDIUMTEXT = 57816
const LONGTEXT = 57817
const LONG = 57818
const BLOB = 57819
const TINYBLOB = 57820
const MEDIUMBLOB = 57821
const LONGBLOB = 57822
const JSON = 57823
const ENUM = 57824
const GEOMETRY = 57825
const POINT = 57826
const LINESTRING = 57827
const POLYGON = 57828
const GEOMETRYCOLLECTION = 57829
const MULTIPOINT = 57830
const MULTILINESTRING = 57831
const MULTIPOLYGON = 57832
const LOCAL = 57833
const LOW_PRIORITY = 57834
const SKIP = 57835
const LOCKED = 57836
const NULLX = 57837
const AUTO_INCREMENT = 57838
const APPROXNUM = 57839
const SIGNED = 57840
const UNSIGNED = 57841
const ZEROFILL = 57842
const SRID = 57843
const COLLATION = 57844
const DATABASES = 57845
const SCHEMAS = 57846
const TABLES = 57847
const FULL = 57848
const PROCESSLIST = 57849
const COLUMNS = 57850
const FIELDS = 57851
const ENGINES = 57852
const PLUGINS = 57853
const NAMES = 57854
const CHARSET = 57855
const GLOBAL = 57856
const SESSION = 57857
const ISOLATION = 57858
const LEVEL = 57859
const READ = 57860
const WRITE = 57861
const ONLY = 57862
const REPEATABLE = 57863
const COMMITTED = 57864
const UNCOMMITTED = 57865
const SERIALIZABLE = 57866
const ENCRYPTION = 57867
const CURRENT_TIMESTAMP = 57868
const NOW = 57869
const DATABASE = 57870
const CURRENT_DATE = 57871
const CURRENT_USER = 57872
const CURRENT_TIME = 57873
const LOCALTIME = 57874
const LOCALTIMESTAMP = 57875
const UTC_DATE = 57876
const UTC_TIME = 57877
const UTC_TIMESTAMP = 57878
const REPLACE = 57879
const CONVERT = 57880
const CAST = 57881
const POSITION = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const TRIM = 57885
const LEADING = 57886
const TRAILING = 57887
const BOTH = 57888
const GROUP_CONCAT = 57889
const SEPARATOR = 57890
const TIMESTAMPADD = 57891
const TIMESTAMPDIFF = 57892
const EXTRACT = 57893
const GET_FORMAT = 57894
const OVER = 57895
const WINDOW = 57896
const GROUPING = 57897
const CURRENT = 57898
const AVG = 57899
const BIT_AND = 57900
const BIT_OR = 57901
const BIT_XOR = 57902
const COUNT = 57903
const JSON_ARRAYAGG = 57904
const JSON_OBJECTAGG = 57905
const MAX = 57906
const MIN = 57907
const STDDEV_POP = 57908
const STDDEV = 57909
const STD = 57910
const STDDEV_SAMP = 57911
const SUM = 57912
const VAR_POP = 57913
const VARIANCE = 57914
const VAR_SAMP = 57915
const CUME_DIST = 57916
const DENSE_RANK = 57917
const FIRST_VALUE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LEAD = 57921
const NTH_VALUE = 57922
const NTILE = 57923
const ROW_NUMBER = 57924
const PERCENT_RANK = 57925
const RANK = 57926
const DUAL = 57927
const JSON_TABLE = 57928
const PATH = 57929
const AVG_ROW_LENGTH = 57930
const CHECKSUM = 57931
const COMPACT = 57932
const COMPRESSED = 57933
const COMPRESSION = 57934
const DISK = 57935
const DIRECTORY = 57936
const DELAY_KEY_WRITE = 57937
const DYNAMIC = 57938
const ENGINE_ATTRIBUTE = 57939
const ENCRYPTED = 57940
const ENCRYPTION_KEY_ID = 57941
const HASH = 57942
const INSERT_METHOD = 57943
const ITEF_QUOTES = 57944
const LIST = 57945
const MIN_ROWS = 57946
const MAX_ROWS = 57947
const PACK_KEYS = 57948
const MEMORY = 57949
const PAGE_CHECKSUM = 57950
const PAGE_COMPRESSED = 57951
const PAGE_COMPRESSION_LEVEL = 57952
const PARTITIONS = 57953
const REDUNDANT = 57954
const ROW_FORMAT = 57955
const SECONDARY_ENGINE = 57956
const SECONDARY_ENGINE_ATTRIBUTE = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const SUBPARTITION = 57962
const SUBPARTITIONS = 57963
const TABLE_CHECKSUM = 57964
const TRANSACTIONAL = 57965
const VERSIONING = 57966
const YES = 57967
const PREPARE = 57968
const DEALLOCATE = 57969
const MATCH = 57970
const AGAINST = 57971
const BOOLEAN = 57972
const LANGUAGE = 57973
const WITH = 57974
const QUERY = 57975
const EXPANSION = 57976
const MICROSECOND = 57977
const SECOND = 57978
const MINUTE = 57979
const HOUR = 57980
const DAY = 57981
const WEEK = 57982
const MONTH = 57983
const QUARTER = 57984
const YEAR = 57985
const SECOND_MICROSECOND = 57986
const MINUTE_MICROSECOND = 57987
const MINUTE_SECOND = 57988
const HOUR_MICROSECOND = 57989
const HOUR_SECOND = 57990
const HOUR_MINUTE = 57991
const DAY_MICROSECOND = 57992
const DAY_SECOND = 57993
const DAY_MINUTE = 57994
const DAY_HOUR = 57995
const YEAR_MONTH = 57996
const NAME = 57997
const SYSTEM = 57998
const ACCESSIBLE = 57999
const ASENSITIVE = 58000
const CUBE = 58001
const DELAYED = 58002
const DISTINCTROW = 58003
const EMPTY = 58004
const FLOAT4 = 58005
const FLOAT8 = 58006
const GET = 58007
const HIGH_PRIORITY = 58008
const INSENSITIVE = 58009
const IO_AFTER_GTIDS = 58010
const IO_BEFORE_GTIDS = 58011
const LINEAR = 58012
const MASTER_BIND = 58013
const MASTER_SSL_VERIFY_SERVER_CERT = 58014
const MIDDLEINT = 58015
const PURGE = 58016
const READ_WRITE = 58017
const RLIKE = 58018
const SENSITIVE = 58019
const SPECIFIC = 58020
const SQL_BIG_RESULT = 58021
const SQL_SMALL_RESULT = 58022
const UNUSED = 58023
const DESCRIPTION = 58024
const LATERAL = 58025
const MEMBER = 58026
const RECURSIVE = 58027
const BUCKETS = 58028
const CLONE = 58029
const COMPONENT = 58030
const DEFINITION = 58031
const ENFORCED = 58032
const NOT_ENFORCED = 58033
const EXCLUDE = 58034
const GEOMCOLLECTION = 58035
const GET_MASTER_PUBLIC_KEY = 58036
const HISTOGRAM = 58037
const HISTORY = 58038
const INACTIVE = 58039
const INVISIBLE = 58040
const MASTER_COMPRESSION_ALGORITHMS = 58041
const MASTER_PUBLIC_KEY_PATH = 58042
const MASTER_TLS_CIPHERSUITES = 58043
const MASTER_ZSTD_COMPRESSION_LEVEL = 58044
const NESTED = 58045
const NETWORK_NAMESPACE = 58046
const NOWAIT = 58047
const NULLS = 58048
const OJ = 58049
const OLD = 58050
const ORDINALITY = 58051
const ORGANIZATION = 58052
const OTHERS = 58053
const PERSIST = 58054
const PERSIST_ONLY = 58055
const PRIVILEGE_CHECKS_USER = 58056
const PROCESS = 58057
const REFERENCE = 58058
const REQUIRE_ROW_FORMAT = 58059
const RESOURCE = 58060
const RESPECT = 58061
const RESTART = 58062
const RETAIN = 58063
const SECONDARY = 58064
const SECONDARY_LOAD = 58065
const SECONDARY_UNLOAD = 58066
const THREAD_PRIORITY = 58067
const TIES = 58068
const VCPU = 58069
const VISIBLE = 58070
const INFILE = 58071
const ACTIVE = 58072
const AGGREGATE = 58073
const ANY = 58074
const ARRAY = 58075
const ASCII = 58076
const AT = 58077
const AUTOEXTEND_SIZE = 58078
const GENERATED = 58079
const ALWAYS = 58080
const STORED = 58081
const VIRTUAL = 58082
const NVAR = 58083
const PASSWORD_LOCK = 58084

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	762, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1802,
	200, 1823,
	-2, 331,
	-1, 62,
	242, 1176,
	243, 1176,
	-2, 1165,
	-1, 90,
	271, 331,
	-2, 1808,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 544,
	1, 2504,
	6, 2504,
	7, 2504,
	28, 2504,
	187, 2504,
	762, 2504,
	-2, 1211,
	-1, 557,
	187, 1833,
	-2, 1827,
	-1, 558,
	187, 1834,
	-2, 1828,
	-1, 664,
	1, 679,
	762, 679,
	-2, 677,
	-1, 673,
	1, 1317,
	8, 1317,
	9, 1317,
	10, 1317,
	17, 1317,
	18, 1317,
	19, 1317,
	20, 1317,
	22, 1317,
	24, 1317,
	34, 1317,
	35, 1317,
	64, 1317,
	65, 1317,
	66, 1317,
	67, 1317,
	68, 1317,
	70, 1317,
	71, 1317,
	74, 1317,
	75, 1317,
	77, 1317,
	78, 1317,
	96, 1317,
	525, 1317,
	573, 1317,
	651, 1317,
	762, 1317,
	-2, 1817,
	-1, 678,
	1, 1425,
	8, 1425,
	9, 1425,
	10, 1425,
	17, 1425,
	18, 1425,
	19, 1425,
	20, 1425,
	22, 1425,
	24, 1425,
	34, 1425,
	35, 1425,
	64, 1425,
	65, 1425,
	66, 1425,
	67, 1425,
	68, 1425,
	70, 1425,
	71, 1425,
	74, 1425,
	75, 1425,
	77, 1425,
	78, 1425,
	96, 1425,
	525, 1425,
	573, 1425,
	651, 1425,
	762, 1425,
	-2, 1817,
	-1, 706,
	187, 2201,
	-2, 1439,
	-1, 739,
	187, 2309,
	-2, 1709,
	-1, 740,
	187, 2390,
	-2, 1441,
	-1, 741,
	187, 2221,
	-2, 1442,
	-1, 810,
	187, 2172,
	-2, 1673,
	-1, 813,
	187, 2187,
	-2, 1591,
	-1, 814,
	187, 2190,
	-2, 1591,
	-1, 815,
	187, 2400,
	-2, 1591,
	-1, 817,
	187, 2188,
	-2, 1591,
	-1, 818,
	187, 2401,
	-2, 1591,
	-1, 819,
	187, 2402,
	-2, 1591,
	-1, 878,
	187, 2189,
	-2, 1591,
	-1, 961,
	187, 2289,
	-2, 1591,
	-1, 962,
	187, 2290,
	-2, 1591,
	-1, 1074,
	109, 2517,
	120, 2517,
	187, 2517,
	-2, 1784,
	-1, 1075,
	109, 2648,
	120, 2648,
	187, 2648,
	-2, 1785,
	-1, 1080,
	109, 2545,
	120, 2545,
	187, 2545,
	-2, 1786,
	-1, 1081,
	109, 2596,
	120, 2596,
	187, 2596,
	-2, 1787,
	-1, 1082,
	109, 2597,
	120, 2597,
	187, 2597,
	-2, 1788,
	-1, 1083,
	109, 2444,
	120, 2444,
	187, 2444,
	-2, 1793,
	-1, 1085,
	109, 2573,
	120, 2573,
	187, 2573,
	-2, 1795,
	-1, 1258,
	452, 1190,
	-2, 1194,
	-1, 1260,
	452, 1190,
	-2, 1194,
	-1, 1386,
	1, 679,
	762, 679,
	-2, 677,
	-1, 1388,
	1, 680,
	762, 680,
	-2, 677,
	-1, 1411,
	1, 1318,
	8, 1318,
	9, 1318,
	10, 1318,
	17, 1318,
	18, 1318,
	19, 1318,
	20, 1318,
	22, 1318,
	24, 1318,
	34, 1318,
	35, 1318,
	64, 1318,
	65, 1318,
	66, 1318,
	67, 1318,
	68, 1318,
	70, 1318,
	71, 1318,
	74, 1318,
	75, 1318,
	77, 1318,
	78, 1318,
	96, 1318,
	525, 1318,
	573, 1318,
	651, 1318,
	762, 1318,
	-2, 1817,
	-1, 1422,
	1, 1425,
	8, 1425,
	9, 1425,
	10, 1425,
	17, 1425,
	18, 1425,
	19, 1425,
	20, 1425,
	22, 1425,
	24, 1425,
	34, 1425,
	35, 1425,
	64, 1425,
	65, 1425,
	66, 1425,
	67, 1425,
	68, 1425,
	70, 1425,
	71, 1425,
	74, 1425,
	75, 1425,
	77, 1425,
	78, 1425,
	96, 1425,
	525, 1425,
	573, 1425,
	651, 1425,
	762, 1425,
	-2, 1817,
	-1, 1716,
	1, 679,
	762, 679,
	-2, 677,
	-1, 1718,
	1, 679,
	762, 679,
	-2, 677,
	-1, 2274,
	187, 1837,
	-2, 1685,
	-1, 2277,
	187, 2735,
	-2, 1688,
	-1, 2278,
	187, 2736,
	-2, 1689,
	-1, 2279,
	187, 1836,
	-2, 1832,
	-1, 2429,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2447,
	187, 2313,
	-2, 1789,
	-1, 2454,
	1, 898,
	762, 898,
	-2, 677,
	-1, 2642,
	49, 919,
	206, 922,
	208, 919,
	209, 919,
	210, 919,
	-2, 1036,
	-1, 2723,
	8, 59,
	9, 59,
	10, 59,
	-2, 1471,
	-1, 2740,
	1, 1363,
	8, 1363,
	9, 1363,
	10, 1363,
	17, 1363,
	18, 1363,
	19, 1363,
	20, 1363,
	22, 1363,
	24, 1363,
	34, 1363,
	35, 1363,
	64, 1363,
	65, 1363,
	66, 1363,
	67, 1363,
	68, 1363,
	70, 1363,
	71, 1363,
	74, 1363,
	75, 1363,
	77, 1363,
	78, 1363,
	96, 1363,
	525, 1363,
	573, 1363,
	651, 1363,
	762, 1363,
	-2, 1817,
	-1, 2917,
	212, 1030,
	216, 1030,
	-2, 786,
	-1, 2918,
	212, 1100,
	216, 1100,
	-2, 787,
	-1, 3184,
	1, 1425,
	8, 1425,
	9, 1425,
	10, 1425,
	17, 1425,
	18, 1425,
	19, 1425,
	20, 1425,
	22, 1425,
	24, 1425,
	34, 1425,
	35, 1425,
	64, 1425,
	65, 1425,
	66, 1425,
	67, 1425,
	68, 1425,
	70, 1425,
	71, 1425,
	74, 1425,
	75, 1425,
	77, 1425,
	78, 1425,
	96, 1425,
	525, 1425,
	573, 1425,
	651, 1425,
	762, 1425,
	-2, 1817,
	-1, 3288,
	1, 1740,
	74, 1740,
	762, 1740,
	-2, 1817,
	-1, 3490,
	49, 919,
	206, 922,
	208, 919,
	209, 919,
	210, 919,
	-2, 1036,
	-1, 3510,
	206, 923,
	212, 1030,
	216, 1030,
	-2, 921,
	-1, 3695,
	77, 2084,
	78, 2084,
	187, 2084,
	-2, 1219,
	-1, 3696,
	76, 1751,
	252, 1751,
	-2, 2133,
	-1, 3697,
	76, 1752,
	252, 1752,
	-2, 2701,
	-1, 3935,
	8, 59,
	9, 59,
	10, 59,
	-2, 1747,
	-1, 4082,
	46, 1848,
	-2, 1846,
	-1, 4342,
	8, 59,
	9, 59,
	10, 59,
	-2, 1748,
	-1, 4361,
	315, 426,
	-2, 1904,
	-1, 4362,
	315, 427,
	-2, 1945,
	-1, 4363,
	315, 428,
	-2, 2121,
	-1, 4595,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4676,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 81921

var yyAct = [...]int{
	752, 44, 4649, 4612, 4550, 4599, 4587, 4586, 698, 1190,
	569, 2444, 4552, 4468, 4219, 3, 2934, 4076, 4469, 1414,
	4078, 4368, 4041, 4222, 8, 4221, 7, 3416, 4220, 6,
	3777, 708, 4253, 28, 4212, 4334, 4223, 9, 4367, 2368,
	4354, 3296, 2367, 4214, 4194, 44, 3264, 3453, 4355, 1460,
	3353, 2933, 657, 4332, 4119, 1636, 3962, 4089, 2719, 108,
	1421, 3640, 2657, 3891, 107, 3497, 725, 4077, 3855, 3898,
	3856, 1539, 3610, 4030, 2516, 4080, 4071, 689, 3847, 3701,
	2304, 3890, 548, 551, 3693, 3174, 2182, 3466, 596, 596,
	641, 3909, 3001, 2471, 2915, 2535, 653, 675, 3431, 3806,
	3800, 2707, 3783, 101, 2249, 1469, 2914, 157, 3354, 2921,
	3297, 751, 4213, 536, 3685, 1753, 492, 3889, 157, 1150,
	1416, 556, 3112, 2945, 3502, 1219, 712, 2922, 3616, 2987,
	3590, 1567, 816, 3578, 1750, 3569, 2173, 658, 1568, 2502,
	1418, 134, 2639, 2640, 1751, 3014, 157, 105, 1392, 3075,
	2461, 2633, 1162, 2870, 2606, 2848, 3451, 717, 711, 658,
	702, 2235, 2871, 1381, 3226, 1268, 1087, 2565, 2237, 1413,
	157, 2637, 2155, 1269, 2589, 2174, 2724, 1756, 1420, 2968,
	715, 2049, 2114, 694, 1726, 1450, 699, 2498, 1613, 1245,
	1208, 1076, 157, 2475, 1617, 2357, 1458, 2281, 2873, 673,
	2710, 1453, 2621, 1302, 1280, 157, 2089, 2119, 1643, 3079,
	1153, 1616, 1072, 1073, 2431, 1477, 2242, 669, 3273, 682,
	670, 1387, 1399, 571, 1391, 1390, 1166, 2477, 2081, 2320,
	572, 1389, 1279, 1264, 656, 2082, 1193, 1719, 1158, 3702,
	1171, 129, 1707, 1079, 125, 1154, 692, 2048, 665, 4676,
	1177, 4670, 4657, 4641, 4627, 4595, 4593, 554, 4565, 4562,
	4561, 4560, 4545, 4543, 4449, 4445, 4440, 100, 4121, 4120,
	3369, 3866, 3618, 2112, 2520, 1181, 4316, 679, 3444, 4003,
	2552, 2551, 3861, 3862, 3859, 3860, 3413, 3414, 1189, 3500,
	97, 4620, 3272, 86, 4582, 4001, 3498, 4580, 4665, 1441,
	4619, 3865, 489, 4581, 3352, 3447, 3125, 2979, 4004, 1729,
	4382, 3159, 3445, 4381, 655, 71, 3963, 42, 4585, 688,
	4330, 4529, 4200, 148, 47, 145, 564, 146, 662, 94,
	42, 3965, 667, 3446, 2369, 2381, 2379, 2378, 2377, 2380,
	2376, 2375, 2374, 2370, 2371, 2388, 2372, 2387, 2386, 2373,
	2385, 2384, 2383, 2382, 2669, 2549, 2041, 42, 3784, 2549,
	4480, 3293, 4215, 150, 149, 3294, 4288, 3884, 3786, 1173,
	2236, 1179, 1180, 3428, 88, 2705, 42, 1183, 122, 4016,
	99, 2999, 89, 4329, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 137, 1355, 4199, 3254, 89, 153, 1203, 2941, 1393,
	503, 2654, 3755, 2948, 3558, 4613, 4036, 2678, 3752, 3607,
	3841, 3958, 1149, 3887, 4186, 3323, 3322, 3135, 3134, 2953,
	2952, 4404, 89, 2959, 4338, 3959, 2911, 3888, 4315, 4142,
	2381, 2379, 2378, 2377, 2380, 2376, 2375, 2374, 3571, 2653,
	2388, 89, 2387, 2386, 2949, 2385, 2384, 2383, 2382, 42,
	1393, 4389, 3964, 3845, 4085, 151, 2675, 152, 2883, 2824,
	2955, 4335, 2931, 3677, 4096, 1170, 3308, 3309, 668, 1618,
	2932, 1619, 3287, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 3789, 1258, 1502, 2588, 566,
	4338, 543, 2862, 3293, 2872, 2861, 3307, 3294, 2863, 3591,
	114, 112, 113, 3055, 2440, 96, 1356, 2880, 4333, 2582,
	3394, 1066, 2446, 2935, 89, 2118, 3395, 3396, 96, 2946,
	136, 89, 2190, 2441, 2442, 1252, 4339, 4335, 3787, 3788,
	3790, 3791, 3792, 4406, 1223, 1224, 3316, 157, 1227, 2641,
	4317, 2116, 2117, 2158, 2159, 96, 2115, 1241, 3638, 1242,
	1243, 1244, 1243, 1244, 2136, 1332, 563, 2644, 3491, 2656,
	562, 3490, 2655, 2646, 96, 3910, 2679, 2947, 2957, 2207,
	3207, 1405, 1406, 1340, 1225, 1226, 2951, 2688, 2473, 2474,
	2954, 2748, 1165, 650, 4345, 1161, 2587, 1299, 2944, 2488,
	2487, 2478, 4339, 3098, 666, 4619, 2481, 2480, 4581, 2482,
	3529, 4579, 2492, 1253, 1254, 3658, 3662, 1228, 3660, 2618,
	2160, 3917, 157, 2677, 2699, 2650, 2649, 2884, 2392, 2571,
	2570, 3915, 538, 1401, 1404, 1405, 1406, 1402, 2893, 1403,
	1408, 2499, 541, 2645, 1229, 561, 4442, 96, 2087, 4443,
	644, 4444, 645, 3341, 1358, 1359, 2156, 2157, 647, 3492,
	3493, 4346, 1353, 2669, 1150, 1354, 646, 3054, 1382, 2166,
	4664, 4002, 645, 1385, 2882, 2905, 2478, 1401, 1404, 1405,
	1406, 1402, 147, 1403, 1408, 1412, 1417, 2711, 2712, 1261,
	4620, 1435, 1436, 1150, 4618, 1150, 1150, 4617, 4582, 1150,
	108, 2607, 2610, 2608, 2609, 2611, 2612, 2613, 2614, 1150,
	2165, 2164, 2163, 2162, 658, 2161, 2695, 1511, 1513, 651,
	1377, 1515, 643, 4472, 1336, 1337, 4069, 1255, 4304, 3882,
	3874, 3105, 3103, 4283, 3872, 157, 3104, 3102, 3034, 2994,
	4485, 2703, 4484, 1215, 1409, 4539, 4422, 4034, 138, 3465,
	1087, 3039, 2685, 1530, 2601, 3836, 1214, 1534, 1535, 1536,
	1537, 1538, 3617, 1542, 3438, 4281, 1329, 2900, 4147, 4441,
	3185, 4136, 4146, 3801, 3818, 2602, 2148, 108, 4386, 2996,
	154, 3804, 4471, 4025, 1384, 3227, 3185, 2536, 3816, 1267,
	1306, 4144, 2909, 3802, 3803, 3185, 126, 4398, 142, 1315,
	4380, 4067, 4673, 2890, 4643, 3499, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 664, 1561, 1562, 1564, 1564, 1564, 1456, 1569, 1569,
	1569, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1427, 2998, 2946, 679, 679, 3966, 3230, 4023,
	3998, 2583, 3500, 2902, 2188, 3570, 3807, 3808, 3809, 3810,
	2394, 2395, 2393, 1347, 1411, 3967, 1348, 1315, 3315, 1569,
	542, 2671, 4347, 1222, 4020, 2950, 4639, 128, 1512, 3441,
	2943, 3534, 4672, 1339, 565, 4642, 4558, 132, 140, 139,
	4603, 4437, 2947, 1395, 3432, 3433, 3434, 3435, 3436, 3124,
	2682, 4396, 2189, 3115, 4138, 4336, 4435, 4436, 3785, 143,
	552, 4547, 2960, 2648, 2191, 3895, 3314, 3177, 3615, 3467,
	2622, 3176, 2875, 2595, 549, 3097, 3176, 4309, 4178, 4187,
	3426, 4540, 3593, 1396, 1481, 136, 4042, 1378, 3990, 3995,
	1570, 1571, 1563, 1565, 1566, 137, 141, 109, 3969, 3522,
	1724, 2887, 1569, 1569, 3104, 3102, 3994, 3993, 553, 1379,
	109, 4198, 3843, 2672, 2673, 1443, 1443, 2676, 3992, 3991,
	2681, 4336, 2686, 2683, 2684, 1444, 2687, 2680, 3968, 2690,
	2689, 2691, 1378, 2692, 2693, 2694, 4097, 109, 2696, 2697,
	2698, 2700, 2701, 2702, 2962, 4314, 2088, 2674, 2704, 4017,
	1603, 3000, 1438, 2946, 1438, 1438, 87, 2668, 1438, 130,
	4388, 131, 3844, 2946, 2876, 2878, 1217, 1260, 2881, 2118,
	1407, 2886, 2501, 2891, 2888, 2889, 1266, 2892, 2885, 4143,
	2895, 2894, 2896, 115, 2897, 2898, 2899, 1262, 3881, 2901,
	2903, 2904, 2906, 2907, 2908, 2116, 2117, 4470, 2879, 2910,
	1307, 2947, 3989, 1437, 3873, 1442, 1442, 1606, 2912, 1449,
	1178, 2947, 2484, 3871, 4282, 3596, 3594, 1314, 4137, 2485,
	136, 3592, 1216, 4127, 1407, 1240, 4417, 2930, 4217, 109,
	2169, 1315, 663, 1604, 1605, 2997, 2051, 3595, 1363, 1734,
	1735, 1733, 3234, 3233, 3235, 3232, 3614, 1256, 3999, 2526,
	3239, 1239, 3231, 3228, 4350, 4351, 3229, 4022, 3237, 1614,
	1236, 2670, 1087, 4131, 4132, 1235, 2942, 1087, 1407, 3429,
	2530, 2531, 3236, 1325, 1234, 3432, 3433, 3434, 3435, 3436,
	2170, 2525, 4019, 3536, 3537, 550, 1233, 3440, 4394, 3238,
	3240, 1150, 3161, 1349, 1375, 3169, 3171, 3170, 3611, 3612,
	550, 3163, 1474, 1475, 1473, 108, 1474, 1475, 1473, 4556,
	107, 4551, 2874, 732, 4298, 733, 735, 736, 737, 738,
	1714, 1476, 1265, 734, 2316, 1476, 2041, 4554, 3022, 3023,
	596, 1728, 1237, 1238, 550, 3535, 2120, 1373, 547, 1079,
	1175, 1174, 4653, 4210, 1079, 1165, 3523, 3524, 3525, 2468,
	596, 1752, 1699, 1700, 1701, 1702, 1703, 1322, 3579, 157,
	2083, 3580, 4424, 3581, 1721, 556, 1178, 4666, 136, 3848,
	3849, 1628, 4423, 1176, 3094, 2122, 127, 1165, 2121, 141,
	3082, 3082, 3508, 157, 1709, 3358, 3092, 1721, 556, 3091,
	4679, 1755, 4674, 1633, 2537, 1757, 1704, 1423, 1425, 4658,
	1610, 4630, 1172, 1194, 1621, 1150, 1410, 4287, 1150, 1622,
	668, 4169, 2470, 4061, 157, 157, 157, 157, 157, 2090,
	157, 1320, 108, 3114, 1311, 3880, 3877, 2095, 2091, 3613,
	2093, 3463, 1758, 2092, 3241, 2519, 2072, 2073, 3099, 3033,
	3029, 3004, 3003, 2596, 2153, 3114, 1739, 2080, 1737, 1369,
	1423, 1425, 2222, 1263, 1705, 1169, 1607, 1608, 2313, 2221,
	2220, 596, 1760, 3007, 1727, 2470, 1168, 2470, 3006, 1732,
	1368, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1374, 4064,
	3458, 1394, 3164, 1191, 2052, 1321, 1182, 1317, 487, 3175,
	3637, 123, 1517, 1518, 89, 4307, 2146, 4141, 2039, 2064,
	2470, 1629, 2065, 2066, 2067, 3863, 3306, 696, 2109, 3031,
	138, 2071, 1630, 2795, 3030, 2538, 2868, 1516, 2054, 1318,
	1319, 2079, 4651, 652, 1514, 4652, 2765, 4650, 2742, 1424,
	2629, 2043, 2047, 4563, 1257, 550, 2076, 4446, 675, 675,
	675, 675, 3357, 2175, 4553, 4555, 2550, 2527, 2436, 2446,
	1310, 3165, 1715, 1150, 1710, 1713, 89, 1723, 1417, 2252,
	2216, 1519, 2469, 1730, 1632, 157, 157, 108, 1741, 2068,
	658, 2070, 108, 1722, 1731, 1748, 1533, 2215, 1532, 1519,
	1531, 1482, 1424, 1297, 157, 2127, 1755, 157, 157, 157,
	157, 1205, 2045, 2045, 2045, 2045, 1749, 2129, 3113, 658,
	2050, 2107, 2209, 2056, 2057, 1516, 2792, 157, 4168, 4167,
	1502, 658, 2210, 2858, 2217, 2469, 1519, 2469, 4176, 1376,
	3113, 3088, 3082, 2219, 3108, 2240, 2151, 3085, 3460, 2085,
	3084, 3089, 3111, 1432, 1433, 2084, 2078, 2152, 1492, 2179,
	2094, 1502, 3857, 2273, 4418, 4419, 3931, 2100, 2101, 3105,
	2469, 2103, 2194, 3103, 1150, 1426, 2124, 3082, 3090, 702,
	2197, 157, 1165, 3864, 4453, 3083, 2468, 2106, 108, 3507,
	140, 139, 1757, 2125, 3081, 2309, 2040, 2311, 4006, 96,
	2193, 1434, 2128, 1542, 675, 1517, 1518, 4415, 4416, 2312,
	2317, 2641, 2323, 3162, 2326, 2147, 2849, 108, 2150, 1423,
	1425, 3123, 2215, 1663, 3122, 2240, 2167, 2168, 3121, 2279,
	2314, 2315, 4203, 4202, 3120, 4007, 2739, 3119, 679, 679,
	679, 679, 1495, 1496, 1497, 1498, 1499, 1492, 3118, 3117,
	1502, 658, 3116, 157, 2240, 2240, 2240, 2282, 679, 1760,
	2240, 2218, 2240, 2240, 2240, 4454, 2240, 2240, 2184, 675,
	2736, 1087, 2240, 2187, 2185, 2171, 2389, 2390, 2195, 2196,
	2186, 2198, 1246, 2183, 2306, 2305, 2240, 2240, 2240, 2240,
	2733, 2208, 2240, 2240, 2240, 2240, 2240, 2240, 1517, 1518,
	2445, 2240, 2240, 2240, 2240, 2240, 2240, 2240, 2240, 2240,
	2240, 2240, 2240, 2451, 3768, 3766, 2259, 157, 157, 157,
	2272, 2245, 688, 1629, 669, 1087, 2283, 1476, 1474, 1475,
	1473, 2560, 1650, 4160, 1630, 4356, 123, 1221, 2361, 2257,
	2343, 2346, 1757, 1248, 3486, 3485, 2307, 1476, 2359, 1475,
	1473, 1424, 3050, 118, 2269, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1476, 3375, 3373,
	3049, 2453, 3256, 1382, 3063, 3062, 3767, 3060, 3059, 2279,
	1231, 1481, 2865, 2864, 679, 1247, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 3048, 2397,
	1502, 121, 1079, 1473, 3047, 558, 3487, 3046, 3045, 1760,
	2545, 2402, 1158, 2404, 3044, 1664, 2407, 3043, 2617, 2458,
	1476, 2616, 2105, 2467, 2327, 2328, 2329, 2330, 2331, 2470,
	3374, 1273, 1185, 1755, 2561, 2358, 3064, 1220, 2428, 3061,
	157, 1184, 120, 1250, 2866, 4656, 157, 157, 2355, 679,
	4629, 157, 157, 2508, 2509, 2510, 2511, 2512, 4541, 2787,
	2430, 3197, 2288, 163, 4489, 490, 502, 3002, 1717, 163,
	2452, 4481, 3817, 3070, 163, 2663, 3069, 2286, 2287, 2285,
	4633, 4600, 4632, 1232, 638, 638, 2434, 3811, 2438, 2437,
	1259, 4507, 2443, 163, 3027, 2504, 2505, 2506, 2507, 2529,
	2243, 3081, 163, 4667, 3185, 2457, 2455, 3744, 3742, 2666,
	2664, 2659, 2358, 2479, 2808, 163, 2661, 2513, 3743, 2495,
	2496, 2497, 2232, 3883, 96, 3367, 163, 1164, 1474, 1475,
	1473, 4523, 2234, 2483, 2486, 3892, 2518, 2489, 2490, 2491,
	2258, 2500, 1470, 2543, 2544, 89, 2310, 1476, 163, 638,
	4356, 1164, 4488, 4678, 4487, 2515, 4520, 2284, 2233, 2243,
	490, 163, 4668, 696, 3071, 3072, 2265, 2267, 2268, 2424,
	2660, 2662, 2665, 2667, 2266, 2334, 2335, 2336, 4645, 2469,
	2786, 2340, 2785, 2342, 2345, 2348, 3082, 2353, 2354, 3067,
	4522, 1165, 2546, 2364, 3083, 2468, 4677, 4356, 2521, 4431,
	2523, 4430, 1474, 1475, 1473, 4385, 2470, 2396, 2231, 2398,
	2399, 2762, 2763, 2764, 2403, 4519, 2405, 2406, 3169, 3171,
	3170, 1476, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 4294, 4285, 1502, 1677, 1680, 1681, 1682, 1683,
	1684, 1685, 4279, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 4278, 1665, 1666, 1667,
	1647, 1646, 1678, 1648, 1651, 1645, 1649, 1644, 3090, 2239,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 4139,
	4207, 3749, 4037, 4280, 3070, 4014, 2663, 3069, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	2250, 2251, 1502, 4013, 1474, 1475, 1473, 1663, 103, 1474,
	1475, 1473, 4012, 3599, 3597, 4662, 2254, 4660, 1564, 4011,
	2666, 2664, 2659, 1476, 3598, 4661, 4005, 2661, 1476, 3827,
	4140, 157, 3169, 3171, 3170, 1150, 2469, 3775, 1474, 1475,
	1473, 2255, 3088, 3082, 2256, 3774, 4491, 696, 3085, 2090,
	4439, 3084, 3089, 2366, 110, 3547, 116, 1476, 2091, 157,
	2093, 3480, 3479, 2092, 3478, 3477, 3476, 1474, 1475, 1473,
	701, 3418, 3370, 2973, 2971, 3071, 3072, 2578, 2958, 1305,
	1304, 2660, 2662, 2665, 2667, 4644, 1476, 2566, 1432, 1433,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 1393, 157, 1502, 658, 3747, 4638, 2586, 4567,
	1426, 3443, 3442, 1412, 4559, 4447, 1650, 3604, 1679, 4428,
	1067, 1068, 1069, 4427, 1385, 4373, 1474, 1475, 1473, 4372,
	4366, 1668, 1167, 4365, 2562, 4145, 1434, 4609, 732, 4479,
	733, 735, 736, 737, 738, 1476, 4044, 3684, 734, 2316,
	3526, 1386, 675, 3017, 1423, 1425, 2568, 3169, 3171, 3170,
	3016, 2728, 2729, 2730, 2558, 3194, 696, 2572, 3169, 3171,
	3170, 2557, 2556, 163, 2308, 2099, 2564, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 490,
	2086, 1502, 1474, 1475, 1473, 1747, 2228, 1746, 1718, 1664,
	658, 157, 1716, 2721, 1419, 1300, 2230, 560, 2098, 658,
	4478, 1476, 2727, 2273, 2766, 4477, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1277, 2706,
	1502, 4476, 2229, 4473, 2799, 2630, 1087, 1087, 3602, 2593,
	4403, 2573, 1757, 4383, 4324, 1474, 1475, 1473, 163, 2577,
	1276, 4318, 3191, 4434, 2974, 4209, 4208, 2585, 1474, 1475,
	1473, 4369, 2600, 4135, 1476, 2603, 3258, 4134, 4115, 4068,
	4024, 2592, 2722, 1474, 1475, 1473, 4021, 1476, 3988, 2279,
	3957, 2647, 2227, 2313, 3956, 3927, 1424, 2224, 3886, 3169,
	3171, 3170, 1476, 679, 3885, 3826, 696, 2226, 3825, 2097,
	3824, 3823, 3814, 3813, 2760, 2761, 3812, 3773, 3770, 1760,
	2240, 2623, 2626, 1456, 1456, 3745, 3740, 2240, 2240, 2240,
	2240, 2240, 3731, 2225, 3727, 3722, 3721, 3720, 3600, 3589,
	3577, 2638, 679, 3573, 3566, 3565, 2726, 2282, 2715, 3564,
	163, 3483, 3475, 3474, 3473, 2240, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 3401, 3206,
	1502, 163, 3205, 3203, 3065, 2969, 2867, 1529, 1528, 1527,
	2452, 2624, 675, 2223, 2584, 675, 2555, 2102, 2789, 1740,
	2741, 696, 568, 4183, 696, 2752, 1346, 490, 2750, 2751,
	3621, 4531, 3757, 4461, 3757, 4393, 696, 2771, 3621, 696,
	4051, 696, 3757, 4295, 3757, 4124, 2283, 3621, 4123, 3621,
	4118, 4065, 696, 3621, 4028, 4043, 157, 3185, 696, 2628,
	696, 157, 2775, 2767, 157, 2857, 1757, 3981, 1087, 1677,
	1680, 1681, 1682, 1683, 1684, 1685, 3980, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	3420, 1665, 1666, 1667, 1647, 1646, 1678, 1648, 1651, 1645,
	1649, 1644, 640, 1758, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 3621, 3902, 2041, 3839, 2041, 3838, 3757,
	3756, 3404, 2807, 1760, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 1079, 3015, 1502, 3403, 157,
	3621, 3620, 2365, 2925, 2928, 3411, 3410, 596, 3021, 3407,
	3408, 3407, 3406, 2741, 696, 2852, 2598, 2597, 2332, 2580,
	3402, 2920, 2534, 2923, 2924, 2314, 2315, 3686, 157, 2851,
	3705, 2854, 1311, 2877, 2855, 2332, 696, 2211, 696, 1635,
	1634, 2916, 679, 1705, 2432, 679, 3015, 3293, 4611, 2823,
	2825, 3294, 2432, 2853, 2856, 2041, 2211, 2832, 2833, 2834,
	1621, 3705, 1351, 2332, 2859, 102, 2533, 2247, 89, 2869,
	1350, 1308, 2211, 1309, 1309, 4325, 4196, 2549, 3940, 2175,
	3057, 3185, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 3394, 1066, 1502, 3384, 3385, 3387, 3395, 3396,
	3386, 3388, 3389, 2433, 2970, 2435, 3705, 3621, 1727, 695,
	697, 2433, 1679, 2041, 2211, 3390, 3391, 3392, 3393, 2972,
	3019, 2246, 2741, 1311, 3009, 1668, 3421, 3409, 2776, 2777,
	2778, 2779, 2780, 3204, 3042, 2439, 2818, 2961, 2963, 2816,
	2815, 1459, 2964, 2965, 2741, 2966, 2967, 2615, 2995, 2104,
	2554, 2548, 2248, 1380, 1483, 2149, 2805, 2113, 2041, 1738,
	1736, 3035, 1615, 1383, 3192, 89, 3013, 3195, 4421, 3041,
	3198, 2720, 4296, 4163, 4047, 2179, 3776, 3765, 3762, 2476,
	2503, 2478, 3179, 3018, 3053, 3052, 2499, 2913, 2711, 2712,
	675, 1315, 2528, 2273, 2494, 2493, 3080, 3032, 3181, 3028,
	3076, 3087, 1540, 1708, 1296, 2517, 3187, 3188, 3189, 3828,
	3183, 3073, 3906, 2567, 3109, 3160, 3215, 1212, 3051, 1211,
	3168, 2240, 1757, 3086, 3093, 4648, 3096, 2045, 4647, 4624,
	4622, 3199, 4616, 157, 3056, 3107, 4615, 4588, 3068, 157,
	702, 4583, 4577, 4575, 4525, 163, 2240, 4413, 4524, 3897,
	3905, 3893, 3686, 3419, 1164, 3265, 3012, 3011, 2992, 2279,
	1560, 2975, 2714, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 2708, 2123, 1502, 1742, 3290,
	3295, 1352, 1312, 2206, 675, 1463, 1464, 2203, 2205, 1760,
	2201, 2718, 2204, 108, 537, 2202, 705, 3242, 3289, 2717,
	3244, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1492, 2716, 2200, 1502, 1466, 1461, 2199, 3215,
	2749, 1468, 1467, 4328, 1465, 3208, 4375, 4165, 2757, 2756,
	4102, 1087, 3878, 157, 3210, 3854, 3186, 490, 133, 3255,
	3200, 3760, 3516, 3515, 1164, 163, 3400, 3399, 3398, 2929,
	3202, 2919, 4191, 1463, 1464, 638, 638, 4323, 3216, 3212,
	638, 539, 540, 3291, 4322, 4083, 3217, 4320, 4376, 163,
	679, 4319, 3368, 1415, 43, 638, 638, 3213, 4081, 3381,
	4, 163, 3243, 4130, 1466, 490, 490, 490, 490, 1468,
	1467, 4129, 1465, 4027, 559, 144, 2576, 2575, 3300, 2096,
	163, 163, 163, 163, 163, 3101, 163, 3100, 3298, 1382,
	3376, 4008, 4009, 3484, 4452, 3870, 3716, 3527, 43, 3372,
	2631, 3349, 163, 163, 157, 106, 3168, 638, 3302, 1451,
	3304, 3305, 1631, 163, 1294, 3670, 596, 3437, 1278, 4604,
	1452, 1275, 1274, 1218, 3932, 3380, 4054, 4053, 3904, 1393,
	3448, 2877, 3821, 3303, 3366, 157, 3360, 3361, 3362, 3822,
	3363, 3364, 2250, 2251, 679, 3310, 2522, 1271, 1272, 1745,
	1410, 4326, 4284, 1164, 3422, 3266, 3267, 3268, 3269, 3270,
	3271, 4031, 3778, 157, 3764, 3819, 638, 638, 638, 1270,
	2977, 1164, 3820, 2321, 2322, 4495, 3359, 2172, 2513, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 2098, 3509, 1502, 2097, 1447, 1448, 1445, 1446, 1439,
	1440, 1361, 638, 2755, 3439, 4494, 4493, 638, 638, 3985,
	2620, 2754, 157, 157, 1251, 690, 3378, 3379, 4410, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 163, 163, 1502, 4409, 4408, 163, 4407, 1164, 3274,
	3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284,
	163, 638, 3417, 163, 163, 163, 163, 4192, 4155, 3450,
	4148, 4101, 3913, 3074, 691, 163, 3356, 102, 3912, 3643,
	157, 3015, 4448, 163, 3459, 4626, 4625, 163, 3464, 3454,
	3470, 3040, 3468, 3469, 3609, 3471, 2981, 2982, 2983, 3511,
	3512, 3513, 3457, 3505, 3456, 3038, 3518, 3519, 3037, 3521,
	3405, 2817, 2796, 2793, 2759, 2604, 2069, 3472, 1471, 1210,
	1209, 4625, 4626, 3539, 4205, 3397, 3544, 2244, 683, 4511,
	3489, 3292, 3073, 687, 686, 104, 2647, 163, 68, 3506,
	3488, 3348, 4374, 3576, 490, 4236, 65, 3619, 3168, 4238,
	23, 1, 3538, 4313, 2916, 677, 1705, 4237, 22, 4239,
	24, 2055, 50, 3481, 3482, 4240, 25, 4234, 18, 658,
	4233, 17, 3636, 4232, 16, 3675, 4235, 19, 3641, 2594,
	1164, 2131, 1164, 4231, 15, 1164, 595, 3517, 2074, 4225,
	11, 3799, 1164, 4260, 39, 3574, 3798, 1164, 1164, 1164,
	3530, 3805, 3532, 4258, 37, 4257, 36, 163, 3427, 163,
	3430, 3694, 2993, 3545, 4308, 3548, 4177, 3550, 3552, 3554,
	3556, 4261, 40, 4256, 32, 108, 4255, 31, 3680, 3815,
	3690, 2175, 4254, 30, 4251, 27, 1540, 1725, 3504, 3644,
	4250, 26, 4230, 14, 3997, 3622, 4227, 13, 1188, 3688,
	4226, 12, 4224, 10, 2532, 1301, 4321, 1087, 4082, 4189,
	4188, 3782, 3781, 2986, 2985, 1295, 2581, 2111, 3077, 3689,
	3504, 3078, 3754, 163, 163, 163, 3005, 3066, 1427, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 4153, 3657, 1502, 2619, 2154, 2605, 1362, 2454, 2459,
	3840, 1164, 3496, 4035, 3495, 1564, 1564, 1564, 1569, 1569,
	1569, 1572, 1573, 1574, 1575, 1569, 1569, 1569, 3494, 1152,
	117, 3687, 2559, 1230, 3300, 1540, 3710, 2179, 511, 3769,
	2456, 3730, 2939, 4190, 3298, 1298, 3168, 2938, 2956, 2472,
	1388, 3653, 3654, 3655, 3953, 3656, 2937, 3692, 3669, 2936,
	4286, 3659, 2940, 3661, 1640, 1638, 1639, 1637, 3559, 1642,
	3561, 1641, 3704, 517, 1623, 4360, 3683, 1472, 745, 3711,
	3706, 3707, 3708, 3709, 135, 3110, 3582, 3583, 3584, 648,
	3725, 649, 124, 3728, 519, 3732, 1510, 2753, 3761, 157,
	3606, 3741, 3703, 2860, 1077, 1078, 163, 1070, 4451, 3794,
	3795, 3796, 163, 163, 638, 638, 638, 163, 163, 701,
	2744, 4201, 4084, 2261, 2262, 2263, 4193, 3842, 4349, 1457,
	3829, 4086, 3911, 3642, 2806, 1559, 2356, 714, 157, 3641,
	661, 3779, 3700, 3930, 3647, 3648, 3649, 3650, 3651, 3831,
	1570, 1571, 4088, 1563, 1565, 1566, 1603, 1604, 1605, 2264,
	3772, 728, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 727, 726, 1502, 3833, 723, 3758,
	3759, 3793, 3835, 724, 2391, 3797, 4337, 2253, 3286, 3850,
	3851, 3285, 1540, 3288, 1484, 3412, 1360, 703, 2338, 2339,
	1431, 1430, 1429, 1428, 1422, 672, 2425, 3026, 1400, 1398,
	3852, 1397, 3830, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1743, 1611, 2713, 2709, 671, 676, 46, 2758, 3834, 1249,
	1462, 3676, 4095, 111, 685, 3837, 684, 693, 3365, 3869,
	29, 3858, 21, 3679, 3080, 20, 3853, 3875, 3076, 3087,
	1206, 2636, 2658, 3712, 3713, 3714, 3846, 1186, 48, 54,
	53, 51, 52, 2980, 2524, 4359, 4549, 1281, 3879, 3908,
	4566, 3086, 4598, 1357, 3733, 3734, 3735, 38, 2450, 3899,
	3901, 3867, 35, 34, 33, 4252, 4246, 4245, 3215, 3751,
	4248, 4247, 3876, 1755, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 4244, 4249, 1502, 4243,
	4242, 4241, 4259, 4229, 3900, 4228, 4533, 4532, 5, 98,
	95, 41, 3937, 119, 1148, 3694, 3168, 2, 0, 0,
	675, 0, 0, 3942, 0, 0, 3641, 3641, 0, 108,
	0, 0, 0, 0, 107, 0, 3914, 3916, 3896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2514, 3894,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 0, 3934, 0, 3504, 0, 0, 0, 658, 157,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3977, 0, 0, 0, 3504,
	0, 0, 0, 0, 0, 0, 3936, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 3950, 0,
	0, 0, 108, 0, 0, 0, 3951, 3983, 0, 3954,
	0, 0, 0, 3933, 3168, 0, 3984, 0, 3944, 0,
	3975, 0, 0, 3978, 3941, 163, 3945, 0, 0, 0,
	669, 0, 3300, 0, 0, 0, 0, 3982, 0, 0,
	0, 0, 3298, 0, 0, 0, 0, 0, 0, 0,
	0, 3168, 0, 0, 4039, 4040, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 163, 0, 3971, 3972, 1164, 3970, 3973, 3974, 3961,
	1164, 0, 3960, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 4063, 3987, 0, 3986, 0, 0,
	0, 0, 0, 1164, 0, 0, 1164, 3218, 0, 3996,
	4000, 0, 0, 0, 0, 4010, 0, 0, 0, 4033,
	4015, 0, 0, 4018, 0, 0, 0, 0, 0, 0,
	4026, 0, 4032, 4029, 0, 0, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 3937, 4106,
	1502, 4072, 0, 0, 4045, 4046, 4055, 0, 0, 4056,
	0, 4057, 0, 108, 0, 0, 163, 163, 4105, 0,
	4048, 4049, 1164, 0, 0, 163, 0, 0, 678, 0,
	0, 4058, 0, 4060, 0, 4062, 0, 0, 0, 0,
	0, 0, 4070, 0, 0, 0, 2212, 2213, 2214, 1164,
	0, 0, 0, 4103, 0, 0, 0, 0, 0, 0,
	3356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4125, 0, 0, 0, 4126, 0, 4128, 4112, 3356,
	4107, 0, 4109, 4104, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 4110, 4100, 0, 4154, 546, 0, 0,
	0, 0, 4159, 0, 1486, 4113, 1489, 0, 0, 0,
	3168, 0, 0, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	0, 1487, 1488, 1485, 0, 0, 0, 0, 0, 4133,
	0, 0, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 0, 0, 1502, 4157, 0, 1151,
	0, 0, 0, 0, 0, 4174, 0, 0, 4161, 0,
	0, 0, 0, 0, 0, 4150, 4152, 3694, 0, 0,
	0, 1187, 2333, 0, 157, 0, 0, 2075, 0, 0,
	2337, 108, 4164, 4162, 1204, 0, 4206, 1150, 0, 1150,
	0, 0, 4171, 0, 4184, 0, 0, 0, 0, 0,
	0, 108, 0, 4175, 0, 0, 4216, 4173, 0, 0,
	4218, 0, 3168, 2400, 2401, 3196, 4170, 0, 0, 0,
	0, 2408, 2409, 2410, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 4204, 0, 1150, 4151, 163, 0, 2423,
	163, 163, 163, 0, 1491, 1490, 1500, 1501, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1492, 4305, 4277, 1502, 0,
	0, 0, 0, 0, 0, 0, 2918, 4293, 0, 0,
	3899, 0, 2927, 2927, 4297, 0, 0, 0, 0, 0,
	0, 4290, 0, 4289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4303, 0, 0, 0, 4306,
	0, 0, 0, 0, 4348, 3900, 4352, 4341, 4310, 4300,
	0, 4312, 0, 0, 4327, 1087, 0, 4340, 0, 0,
	157, 0, 0, 1164, 4301, 163, 4344, 0, 1459, 1150,
	4112, 1150, 0, 1164, 1164, 0, 0, 1150, 0, 638,
	0, 0, 0, 0, 0, 0, 4364, 0, 0, 0,
	3356, 0, 0, 0, 163, 638, 1164, 0, 0, 0,
	490, 0, 0, 2241, 0, 0, 0, 0, 0, 4370,
	0, 0, 0, 638, 0, 4379, 0, 0, 4405, 0,
	0, 0, 3300, 0, 0, 0, 0, 3265, 0, 0,
	4391, 0, 3298, 4397, 0, 0, 0, 0, 1164, 4399,
	0, 3899, 638, 0, 1164, 4384, 0, 4392, 0, 0,
	638, 2280, 2781, 0, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 4414,
	4411, 4420, 4402, 4412, 1164, 1164, 3900, 4426, 2809, 4400,
	4395, 0, 0, 0, 0, 0, 0, 4401, 0, 4459,
	0, 0, 4425, 0, 4429, 4463, 596, 4458, 0, 0,
	0, 0, 0, 4432, 0, 0, 3356, 4475, 4450, 0,
	0, 0, 4460, 0, 0, 0, 4438, 0, 2341, 0,
	0, 0, 2349, 4474, 0, 0, 4464, 0, 4462, 0,
	0, 0, 1150, 1313, 0, 1150, 0, 0, 0, 4465,
	0, 1150, 1150, 1150, 1150, 0, 1150, 1150, 0, 3167,
	1150, 1150, 658, 0, 0, 4467, 1207, 4486, 0, 0,
	4497, 4513, 4499, 4482, 0, 1150, 1164, 4499, 0, 4483,
	4490, 4499, 4509, 4492, 1164, 1164, 1164, 4466, 4432, 0,
	4501, 4502, 4503, 4521, 0, 4506, 4517, 4518, 0, 1150,
	3641, 0, 1150, 4528, 4510, 1150, 4514, 0, 0, 163,
	4496, 0, 1087, 0, 4526, 163, 4546, 0, 4557, 108,
	4538, 1164, 4537, 2445, 4548, 4536, 0, 4530, 0, 4535,
	0, 596, 4569, 4534, 0, 0, 0, 4542, 0, 0,
	4544, 1303, 0, 0, 0, 0, 0, 4568, 0, 3356,
	1150, 0, 0, 0, 1150, 4574, 1150, 0, 0, 4592,
	1150, 0, 4576, 0, 0, 4578, 0, 0, 0, 0,
	4589, 1150, 1150, 1150, 1150, 4499, 1150, 4499, 0, 3300,
	1164, 4601, 0, 0, 0, 0, 0, 0, 4590, 3298,
	0, 0, 4499, 4499, 4499, 0, 0, 4499, 0, 0,
	658, 0, 0, 4621, 1150, 4623, 1150, 0, 1150, 163,
	0, 0, 4608, 0, 4634, 0, 0, 4636, 0, 0,
	0, 0, 0, 0, 1164, 4499, 0, 4499, 4646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1150, 4654,
	0, 0, 0, 0, 1150, 0, 4631, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 4499,
	0, 2569, 0, 0, 0, 3167, 3668, 0, 1150, 490,
	0, 1150, 0, 4499, 0, 2927, 2927, 2927, 0, 2927,
	2927, 1150, 4659, 0, 0, 490, 0, 1150, 0, 4499,
	0, 0, 0, 3562, 3563, 0, 0, 0, 0, 0,
	163, 3572, 4499, 0, 3575, 0, 0, 0, 4499, 4671,
	0, 3585, 3586, 3587, 3588, 3667, 0, 0, 0, 3601,
	3603, 3605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 3608, 0, 0, 0,
	0, 3178, 0, 0, 3180, 1164, 1164, 1164, 0, 0,
	0, 0, 638, 0, 0, 0, 2627, 0, 0, 163,
	638, 0, 0, 0, 0, 0, 0, 1164, 1164, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 0, 1502, 638, 0, 1164, 0, 638,
	701, 0, 0, 638, 638, 0, 638, 0, 2723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 2740, 1491,
	1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1492, 490, 2927, 1502, 0, 0, 0, 0, 3257, 490,
	490, 490, 490, 1164, 0, 0, 1164, 490, 490, 1164,
	490, 0, 0, 532, 0, 0, 0, 0, 0, 1164,
	0, 1164, 0, 490, 490, 1164, 163, 490, 0, 0,
	0, 0, 1164, 0, 1164, 1164, 1164, 1164, 1164, 1164,
	0, 3718, 3719, 0, 0, 0, 0, 0, 0, 3726,
	0, 2773, 3729, 2774, 0, 0, 0, 3167, 0, 3736,
	3737, 3738, 3739, 0, 0, 0, 0, 0, 3746, 3748,
	3750, 0, 0, 0, 3753, 0, 0, 2782, 2783, 2784,
	0, 0, 0, 2788, 0, 2791, 0, 0, 2794, 2911,
	0, 2797, 2798, 0, 0, 1164, 2803, 2804, 0, 0,
	0, 1164, 2810, 2811, 2812, 0, 0, 2813, 0, 2814,
	3253, 0, 0, 1393, 0, 163, 0, 0, 0, 504,
	1164, 2883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2574, 0, 0, 0, 0, 0, 2819,
	2820, 2821, 2822, 0, 0, 2826, 2827, 2828, 2829, 2830,
	2831, 0, 0, 0, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 507, 2847, 0, 0,
	2880, 0, 0, 0, 0, 518, 530, 531, 1316, 1323,
	1324, 1326, 1327, 1328, 3252, 1330, 1331, 0, 1333, 1334,
	1335, 0, 1338, 0, 1341, 1342, 1343, 1344, 1345, 0,
	0, 0, 0, 0, 0, 3455, 1164, 2625, 1612, 0,
	0, 1164, 0, 0, 513, 0, 520, 516, 0, 0,
	525, 526, 1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1492, 3251, 0, 1502, 0, 0, 0,
	0, 0, 0, 0, 0, 3167, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2731, 2732, 0, 0, 2734, 2735, 0, 0, 2737, 2738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2893, 0, 0, 0, 0, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 1712, 0,
	1502, 522, 0, 0, 0, 0, 0, 3560, 0, 0,
	0, 0, 0, 2768, 2769, 2770, 0, 2882, 2905, 0,
	523, 0, 1744, 0, 0, 163, 0, 1164, 0, 0,
	0, 0, 0, 515, 0, 0, 1491, 1490, 1500, 1501,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0,
	1502, 713, 0, 2058, 2059, 2060, 2061, 2062, 1164, 2063,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 638, 2800, 2801, 2802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 528, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 158,
	2900, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 2909, 0, 0, 3678, 659,
	0, 0, 0, 0, 0, 0, 2890, 0, 158, 490,
	505, 0, 0, 0, 0, 0, 0, 3184, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 158, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 508, 509,
	0, 535, 0, 0, 158, 510, 512, 0, 506, 534,
	533, 3193, 0, 0, 1612, 1612, 493, 158, 3220, 3221,
	3222, 3223, 3224, 3225, 0, 3167, 2902, 0, 3190, 0,
	0, 0, 0, 2192, 0, 0, 0, 1164, 0, 0,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 1164, 1502, 0, 524, 1491, 1490, 1500,
	1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492, 2790,
	0, 1502, 0, 0, 0, 0, 0, 0, 1491, 1490,
	1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1492,
	0, 0, 1502, 0, 0, 2875, 0, 0, 0, 2743,
	0, 0, 0, 3020, 0, 163, 2772, 0, 0, 0,
	2260, 0, 3024, 3025, 163, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 2887, 0, 0, 0, 0, 0,
	0, 0, 0, 3167, 0, 1491, 1490, 1500, 1501, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1492, 0, 0, 1502,
	1491, 1490, 1500, 1501, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1492, 0, 0, 1502, 0, 0, 0, 0, 0,
	3167, 0, 0, 490, 0, 0, 2927, 2927, 1164, 0,
	0, 1164, 0, 0, 0, 0, 0, 2876, 2878, 0,
	0, 2881, 490, 0, 2886, 0, 2891, 2888, 2889, 0,
	2892, 2885, 0, 2895, 2894, 2896, 0, 2897, 2898, 2899,
	0, 0, 2901, 2903, 2904, 2906, 2907, 2908, 0, 0,
	0, 2879, 2910, 0, 0, 0, 0, 0, 0, 0,
	0, 2912, 0, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 2427, 1502, 2429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2927,
	2927, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 1164, 490, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1164, 0, 0, 3245, 0, 3246,
	3247, 0, 3248, 3249, 0, 2874, 3250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 3259, 3260, 3261, 3262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 2539,
	0, 0, 0, 0, 0, 2541, 2542, 0, 0, 3167,
	1612, 2547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3946, 3947, 3948, 3949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2130, 0,
	0, 2133, 2134, 2135, 158, 2137, 2138, 0, 0, 2139,
	3624, 3625, 3626, 2140, 0, 0, 2141, 0, 0, 0,
	2142, 2143, 0, 2144, 2145, 0, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 3645,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 3652,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	163, 3167, 0, 0, 0, 3663, 3664, 3665, 3666, 0,
	0, 0, 0, 3671, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 0, 3681, 3682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3691, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 0, 1164, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 4087, 4090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 1540, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 0, 0, 0, 0, 0,
	2553, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2563, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3627, 3628, 3629,
	3630, 3631, 3632, 3633, 3634, 3635, 0, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 3646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 3672, 3673,
	3674, 1540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	160, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 4090, 0, 0, 0,
	0, 1164, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 1160, 3763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3922, 3923, 3924, 3771, 3926,
	0, 0, 0, 0, 0, 160, 0, 638, 0, 0,
	0, 158, 0, 3935, 1088, 3938, 3939, 494, 160, 1088,
	0, 0, 0, 0, 0, 0, 3943, 0, 0, 0,
	0, 0, 4353, 4357, 0, 0, 163, 0, 0, 0,
	0, 4371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3976, 0, 0, 0,
	0, 0, 0, 0, 3979, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4433, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 2850, 0, 0, 0, 0,
	0, 493, 493, 493, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 158, 158, 158,
	158, 0, 158, 0, 0, 0, 0, 0, 4050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 4066, 0, 4504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 2978, 0,
	0, 4091, 4092, 4093, 4094, 0, 0, 0, 0, 0,
	0, 4098, 4099, 0, 0, 0, 0, 0, 0, 159,
	1157, 0, 0, 0, 0, 4108, 0, 3008, 0, 0,
	0, 0, 0, 0, 0, 4564, 0, 0, 0, 0,
	0, 159, 0, 4111, 3918, 3919, 3920, 3921, 0, 0,
	0, 0, 3925, 491, 159, 0, 3928, 3929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 158, 0,
	2599, 0, 659, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 158,
	158, 158, 158, 0, 0, 0, 0, 0, 0, 0,
	160, 659, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 4156, 0, 659, 0, 0, 494, 0, 0, 0,
	4635, 0, 0, 0, 0, 0, 0, 4640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4179, 4180, 4181, 4182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 4197, 0,
	493, 0, 0, 0, 2275, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3209, 0, 0, 0, 0, 0, 0, 0,
	4291, 4292, 0, 659, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 4302, 0, 0, 0, 0, 0,
	0, 0, 0, 2360, 0, 4311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 4073, 4074, 4075, 4331, 0, 0, 0, 0, 4342,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	158, 158, 0, 0, 0, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2275, 0, 0, 1156, 0, 0,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4387, 0, 0, 0, 4390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 4149, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 0, 0, 4158, 0, 0,
	0, 0, 0, 3371, 0, 0, 0, 0, 0, 0,
	4166, 0, 158, 0, 0, 0, 0, 0, 158, 158,
	0, 0, 0, 158, 158, 0, 0, 2705, 0, 0,
	0, 0, 0, 0, 3415, 0, 0, 1086, 0, 0,
	0, 159, 1155, 0, 0, 0, 0, 0, 0, 0,
	0, 1393, 0, 2654, 0, 0, 0, 0, 0, 2678,
	0, 0, 3449, 0, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2675, 0,
	0, 1612, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4527, 0, 0,
	2641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3541,
	0, 0, 0, 0, 0, 4570, 0, 0, 4572, 4573,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2644,
	2643, 2656, 2663, 2642, 2655, 2646, 0, 0, 2679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2688,
	0, 0, 4377, 0, 4614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2666, 2664, 2659, 0,
	0, 0, 0, 2661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2677, 2699, 2650, 2649, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2651, 2652, 0, 0, 2669, 0, 2660, 2662, 2665,
	2667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 2695, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2685, 158, 160, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 494, 494, 494, 4512, 0, 0, 0,
	4515, 0, 0, 0, 0, 0, 0, 160, 160, 160,
	160, 160, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4571, 0, 0, 0, 0, 0, 0, 0, 3780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 158, 0, 0, 0, 0, 0, 2632,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 1088,
	0, 0, 0, 2671, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4637, 2682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2648, 0, 0, 160, 160,
	0, 0, 0, 660, 0, 2177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 160, 160, 160, 0, 0, 0, 0, 0, 0,
	0, 1086, 660, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 660, 2672, 2673, 0, 0, 2676,
	0, 0, 2681, 0, 2686, 2683, 2684, 0, 2687, 2680,
	491, 2690, 2689, 2691, 0, 2692, 2693, 2694, 159, 0,
	2696, 2697, 2698, 2700, 2701, 2702, 0, 0, 0, 2674,
	2704, 0, 0, 0, 0, 0, 0, 0, 0, 2668,
	0, 0, 159, 0, 160, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 1759, 2276, 0, 0, 491, 491,
	491, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 159, 159, 159, 159, 158, 159,
	0, 0, 0, 158, 0, 0, 158, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 660, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 582,
	593, 575, 0, 2670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 160, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 2276, 493, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 159, 159, 159, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	2176, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 160,
	160, 0, 0, 0, 160, 160, 574, 573, 576, 0,
	159, 0, 0, 0, 89, 0, 581, 491, 0, 0,
	4269, 2274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 589,
	0, 4262, 0, 0, 4597, 4600, 4596, 0, 0, 0,
	0, 0, 0, 1086, 0, 592, 0, 0, 1086, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 2275, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4263, 0, 0, 159, 159, 159, 1711,
	580, 0, 0, 0, 0, 1720, 555, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 2274, 0, 0, 1157, 0, 0, 0, 1720, 555,
	0, 0, 1754, 4172, 578, 579, 586, 2126, 590, 591,
	594, 0, 0, 3299, 0, 158, 0, 0, 0, 0,
	0, 0, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 0, 0, 0, 69, 70, 0, 4265, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 4274, 4266, 4267,
	4268, 4272, 4273, 4270, 0, 4271, 0, 4275, 0, 159,
	0, 493, 78, 0, 79, 159, 159, 0, 2110, 0,
	159, 159, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2132, 84, 0, 0,
	0, 0, 0, 0, 160, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4343,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2181, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 160, 1754, 660, 0,
	0, 0, 0, 4276, 4264, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 493, 0, 0,
	0, 0, 4269, 0, 0, 493, 493, 493, 493, 0,
	0, 0, 0, 493, 493, 0, 493, 0, 0, 0,
	0, 0, 0, 4262, 0, 0, 0, 0, 4675, 493,
	493, 0, 158, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 160, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2181, 0, 2181, 0, 0,
	2318, 0, 0, 0, 0, 0, 0, 2319, 0, 0,
	0, 0, 2181, 2325, 2181, 2276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 659, 1086, 0, 0, 4263, 0, 0, 0, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 2181, 42, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 3299,
	0, 85, 2176, 0, 93, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4265,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 4274,
	4266, 4267, 4268, 4272, 4273, 4270, 0, 4271, 0, 4275,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 89,
	0, 0, 0, 0, 0, 4269, 0, 0, 0, 160,
	0, 0, 0, 0, 160, 0, 0, 160, 0, 84,
	0, 0, 0, 0, 1754, 0, 4262, 0, 60, 0,
	0, 4669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 4276, 4264, 0, 66, 67,
	73, 2274, 74, 49, 90, 56, 55, 58, 0, 0,
	158, 0, 96, 0, 0, 0, 0, 0, 4263, 0,
	0, 160, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 45, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	75, 76, 0, 0, 0, 493, 0, 72, 0, 0,
	0, 2177, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4265, 0, 0, 0, 0, 63, 0, 0,
	0, 89, 4274, 4266, 4267, 4268, 4272, 4273, 4270, 0,
	4271, 0, 4275, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 159, 0, 0, 0, 0,
	159, 60, 0, 159, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 2276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 85, 0, 49, 90, 56, 55, 58,
	659, 158, 80, 0, 96, 0, 0, 3299, 4276, 4264,
	0, 66, 67, 73, 0, 74, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2579, 159, 0, 0,
	0, 77, 0, 491, 0, 0, 0, 0, 0, 493,
	2591, 0, 0, 0, 0, 2591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2591, 0,
	0, 2591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 2725, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 160, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 493, 0,
	493, 0, 493, 0, 2747, 0, 0, 1086, 1086, 0,
	0, 0, 0, 2181, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 82, 83, 0, 0, 0, 0, 0,
	0, 2274, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 81, 159, 66, 67, 73, 85, 74, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 494, 494, 494, 494,
	0, 0, 0, 0, 494, 494, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 494, 0, 160, 494, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 159, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 493, 0, 47, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 491, 4269, 0, 4185, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 1663, 0, 0, 491, 0,
	0, 0, 0, 0, 4262, 0, 0, 0, 0, 4663,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 2976, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 2984, 2988,
	0, 493, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3010, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 159, 0, 0, 0, 0, 3299, 0, 0,
	0, 0, 158, 2177, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 2591, 1650, 0, 4263, 0, 0, 3036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 2181,
	2181, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 491, 491, 491, 491, 0, 0, 0, 0,
	491, 491, 0, 491, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 491, 491, 0, 159,
	491, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4265, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	4274, 4266, 4267, 4268, 4272, 4273, 4270, 0, 4271, 0,
	4275, 3182, 0, 0, 0, 78, 0, 79, 0, 3182,
	3182, 3182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 2181, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 659, 0, 2181, 0, 0, 0,
	2634, 2635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 3299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3263, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4276, 4264, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 2178,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 0, 0, 1677, 1680, 1681,
	1682, 1683, 1684, 1685, 0, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 0, 1665,
	1666, 1667, 1647, 1646, 1678, 1648, 1651, 1645, 1649, 1644,
	0, 0, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 159, 0,
	0, 660, 160, 0, 0, 0, 0, 0, 0, 0,
	3423, 3424, 3425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3182, 3182, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3462, 0, 0, 0, 59, 61, 0, 0,
	494, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 491, 0, 0, 3514, 0,
	0, 2725, 0, 0, 3520, 0, 0, 0, 0, 0,
	1679, 0, 491, 0, 2725, 0, 2725, 0, 0, 0,
	3540, 0, 0, 1668, 0, 0, 0, 2725, 0, 2725,
	3549, 2725, 2725, 2725, 2725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 494, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3182, 0, 0, 0, 0, 0, 3623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3639, 0, 0, 0, 0,
	0, 3058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3095, 0, 0, 0, 0,
	0, 0, 0, 0, 3106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 159, 0,
	3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145,
	3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 0, 3172, 3173, 0, 0, 1086, 0,
	0, 2181, 0, 0, 0, 0, 2725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 71, 0, 0, 0, 491, 0, 93, 0, 0,
	47, 0, 0, 0, 494, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 4269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4262,
	0, 0, 0, 0, 4655, 0, 0, 0, 0, 0,
	0, 0, 2988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 491, 0, 491,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 494, 3182, 3311, 3312, 3313, 0, 3317, 3318,
	3319, 3320, 3321, 0, 0, 3324, 3325, 3326, 3327, 3328,
	3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338,
	3339, 3340, 0, 3342, 3343, 3344, 3345, 3346, 3347, 42,
	3350, 3351, 0, 160, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 71, 0, 96, 0, 0, 0, 93,
	0, 4263, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 4262, 0, 0, 0, 0, 4628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 69, 70, 1754, 4265, 0, 0, 0, 0,
	491, 0, 3903, 159, 0, 4274, 4266, 4267, 4268, 4272,
	4273, 4270, 0, 4271, 0, 4275, 0, 0, 2181, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 49, 90,
	56, 55, 58, 0, 60, 0, 0, 96, 3528, 0,
	0, 0, 0, 4263, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 1086, 0, 57, 0,
	0, 0, 0, 0, 3567, 3568, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4276, 4264, 42, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 3182, 0, 0, 3182, 71, 0, 159,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4274, 4266, 4267,
	4268, 4272, 4273, 4270, 0, 4271, 0, 4275, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 89, 0,
	0, 0, 0, 660, 4269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 4262, 60, 0, 0, 0,
	4610, 0, 0, 0, 0, 491, 0, 0, 4052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3715, 0, 3717, 0, 0, 0,
	0, 0, 3723, 3724, 0, 0, 0, 0, 0, 2181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4276, 4264, 0, 66, 67, 73, 0,
	74, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4263, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3182, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4274, 4266, 4267, 4268, 4272, 4273, 4270, 0, 4271,
	0, 4275, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 4195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 3868, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2181, 0, 0, 4276, 4264, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	2181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4114, 0, 4116, 4117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 1044, 0, 0,
	448, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 357, 909, 865, 0, 0, 856, 707, 857, 890,
	259, 706, 1018, 963, 1046, 946, 978, 988, 258, 244,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 477, 190, 811, 314, 0, 0, 475, 423, 339,
	0, 0, 944, 0, 795, 796, 929, 987, 876, 974,
	1050, 910, 979, 1051, 89, 0, 0, 0, 0, 732,
	557, 733, 735, 736, 737, 738, 0, 0, 171, 734,
	739, 740, 741, 0, 939, 984, 1063, 855, 704, 721,
	860, 810, 4356, 1036, 897, 898, 263, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 468,
	990, 999, 1013, 919, 376, 283, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 826, 0, 720, 0,
	870, 716, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 722, 0, 0, 4299, 875, 853,
	895, 1005, 854, 852, 340, 867, 798, 1034, 927, 301,
	191, 1040, 925, 824, 993, 871, 1022, 1056, 913, 311,
	869, 195, 866, 872, 911, 353, 1002, 1008, 808, 198,
	313, 1019, 891, 904, 729, 0, 392, 980, 467, 710,
	278, 0, 966, 391, 315, 460, 994, 1042, 466, 914,
	442, 476, 481, 271, 947, 234, 420, 261, 254, 896,
	1012, 859, 284, 375, 249, 306, 930, 986, 892, 241,
	997, 973, 1024, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 293, 285, 1027, 1025, 905, 361, 224,
	957, 950, 943, 812, 470, 1059, 257, 1009, 472, 180,
	406, 405, 917, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 485, 220, 309, 450, 709, 277, 352, 982,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1006, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 981, 389,
	427, 473, 975, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1004, 216, 237, 428, 210, 1038, 1021, 968, 932, 938,
	861, 0, 209, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 281, 992, 730, 731, 246, 801,
	1053, 211, 868, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 969, 956, 954, 862, 1037, 967, 955, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 958,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	880, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 996, 1062, 360, 393, 233,
	469, 421, 262, 878, 1066, 825, 813, 814, 817, 961,
	962, 815, 818, 819, 827, 799, 800, 802, 804, 805,
	806, 949, 1041, 863, 809, 1017, 820, 821, 822, 823,
	989, 1060, 797, 242, 746, 839, 840, 841, 747, 842,
	843, 748, 749, 844, 845, 846, 847, 750, 848, 849,
	850, 828, 829, 830, 831, 832, 833, 834, 835, 838,
	836, 837, 0, 945, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 807, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 346, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252,
	948, 970, 1001, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 928, 196, 0, 0,
	202, 0, 203, 205, 915, 201, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 448, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 357, 909, 865, 0, 0,
	856, 707, 857, 890, 259, 706, 1018, 963, 1046, 946,
	978, 988, 258, 244, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 477, 190, 811, 314, 0,
	0, 475, 423, 339, 0, 0, 944, 0, 795, 796,
	929, 987, 876, 974, 1050, 910, 979, 1051, 89, 0,
	696, 0, 0, 732, 557, 733, 735, 736, 737, 738,
	0, 0, 171, 734, 739, 740, 741, 0, 939, 984,
	1063, 855, 704, 721, 860, 810, 0, 1036, 897, 898,
	263, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 468, 990, 999, 1013, 919, 376, 283,
	0, 0, 0, 0, 718, 719, 0, 0, 0, 0,
	826, 0, 720, 0, 870, 716, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 722, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 340, 867,
	798, 1034, 927, 301, 191, 1040, 925, 824, 993, 871,
	1022, 1056, 913, 311, 869, 195, 866, 872, 911, 353,
	1002, 1008, 808, 198, 313, 1019, 891, 904, 729, 0,
	392, 980, 467, 710, 278, 0, 966, 391, 315, 460,
	994, 1042, 466, 914, 442, 476, 481, 271, 947, 234,
	420, 261, 254, 896, 1012, 859, 284, 375, 249, 306,
	930, 986, 892, 241, 997, 973, 1024, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 293, 285, 1027,
	1025, 905, 361, 224, 957, 950, 943, 812, 470, 1059,
	257, 1009, 472, 180, 406, 405, 917, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 485, 220, 309, 450,
	709, 277, 352, 982, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1006, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 981, 389, 427, 473, 975, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1004, 216, 237, 428, 210, 1038,
	1021, 968, 932, 938, 861, 0, 209, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 281, 992,
	730, 731, 246, 801, 1053, 211, 868, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 969, 956, 954, 862, 1037,
	967, 955, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 958, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 880, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 996,
	1062, 360, 393, 233, 469, 421, 262, 878, 1066, 825,
	813, 814, 817, 961, 962, 815, 818, 819, 827, 799,
	800, 802, 804, 805, 806, 949, 1041, 863, 809, 1017,
	820, 821, 822, 823, 989, 1060, 797, 242, 746, 839,
	840, 841, 747, 842, 843, 748, 749, 844, 845, 846,
	847, 750, 848, 849, 850, 828, 829, 830, 831, 832,
	833, 834, 835, 838, 836, 837, 0, 945, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 807,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 346, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 471, 252, 948, 970, 1001, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	928, 196, 0, 0, 202, 0, 203, 205, 915, 201,
	1032, 1057, 977, 991, 902, 1044, 0, 0, 448, 803,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 357,
	909, 865, 0, 0, 856, 707, 857, 890, 259, 706,
	1018, 963, 1046, 946, 978, 988, 258, 244, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 477,
	190, 811, 314, 0, 0, 475, 423, 339, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 557, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 704, 721, 860, 810,
	0, 1036, 897, 898, 263, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 468, 990, 999,
	1013, 919, 376, 283, 0, 0, 0, 0, 718, 719,
	2238, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 340, 867, 798, 1034, 927, 301, 191, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 311, 869, 195,
	866, 872, 911, 353, 1002, 1008, 808, 198, 313, 1019,
	891, 904, 729, 0, 392, 980, 467, 710, 278, 0,
	966, 391, 315, 460, 994, 1042, 466, 914, 442, 476,
	481, 271, 947, 234, 420, 261, 254, 896, 1012, 859,
	284, 375, 249, 306, 930, 986, 892, 241, 997, 973,
	1024, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 293, 285, 1027, 1025, 905, 361, 224, 957, 950,
	943, 812, 470, 1059, 257, 1009, 472, 180, 406, 405,
	917, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	485, 220, 309, 450, 709, 277, 352, 982, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1006, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 981, 389, 427, 473,
	975, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1004, 216,
	237, 428, 210, 1038, 1021, 968, 932, 938, 861, 0,
	209, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 281, 992, 730, 731, 246, 801, 1053, 211,
	868, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 969,
	956, 954, 862, 1037, 967, 955, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 958, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 880, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 996, 1062, 360, 393, 233, 469, 421,
	262, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 949,
	1041, 863, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 242, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 807, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	346, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970,
	1001, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 928, 196, 0, 0, 202, 0,
	203, 205, 915, 201, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 448, 803, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 357, 909, 865, 0, 0, 856, 707,
	857, 890, 259, 706, 1018, 963, 1046, 946, 978, 988,
	258, 244, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 477, 190, 811, 314, 0, 0, 475,
	423, 339, 0, 0, 944, 0, 795, 796, 929, 987,
	876, 974, 1050, 910, 979, 1051, 89, 0, 0, 0,
	0, 732, 557, 733, 735, 736, 737, 738, 0, 0,
	171, 734, 739, 740, 741, 0, 939, 984, 1063, 855,
	704, 721, 860, 810, 0, 1036, 897, 898, 263, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 468, 990, 999, 1013, 919, 376, 283, 0, 0,
	0, 0, 718, 719, 700, 0, 0, 0, 826, 0,
	720, 0, 870, 716, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 722, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 340, 867, 798, 1034,
	927, 301, 191, 1040, 925, 824, 993, 871, 1022, 1056,
	913, 311, 869, 195, 866, 872, 911, 353, 1002, 1008,
	808, 198, 313, 1019, 891, 904, 729, 0, 392, 980,
	467, 710, 278, 0, 966, 391, 315, 460, 994, 1042,
	466, 914, 442, 476, 481, 271, 947, 234, 420, 261,
	254, 896, 1012, 859, 284, 375, 249, 306, 930, 986,
	892, 241, 997, 973, 1024, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 293, 285, 1027, 1025, 905,
	361, 224, 957, 950, 943, 812, 470, 1059, 257, 1009,
	472, 180, 406, 405, 917, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 485, 220, 309, 450, 709, 277,
	352, 982, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1006, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	981, 389, 427, 473, 975, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1004, 216, 237, 428, 210, 1038, 1021, 968,
	932, 938, 861, 0, 209, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 281, 992, 730, 731,
	246, 801, 1053, 211, 868, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 969, 956, 954, 862, 1037, 967, 955,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 958, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 880, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 996, 1062, 360,
	393, 233, 469, 421, 262, 878, 1066, 825, 813, 814,
	817, 961, 962, 815, 818, 819, 827, 799, 800, 802,
	804, 805, 806, 949, 1041, 863, 809, 1017, 820, 821,
	822, 823, 989, 1060, 797, 242, 746, 839, 840, 841,
	747, 842, 843, 748, 749, 844, 845, 846, 847, 750,
	848, 849, 850, 828, 829, 830, 831, 832, 833, 834,
	835, 838, 836, 837, 0, 945, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 807, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 346, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	471, 252, 948, 970, 1001, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 928, 196,
	0, 0, 202, 0, 203, 205, 915, 201, 1032, 1057,
	977, 991, 902, 1044, 0, 0, 448, 803, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 357, 909, 865,
	0, 0, 856, 707, 857, 890, 259, 706, 1018, 963,
	1046, 946, 978, 988, 258, 244, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 477, 190, 811,
	314, 0, 0, 475, 423, 339, 0, 0, 944, 0,
	795, 796, 929, 987, 876, 974, 1050, 910, 2447, 1051,
	89, 0, 0, 0, 0, 2449, 557, 733, 735, 736,
	737, 738, 0, 0, 171, 734, 739, 740, 741, 2448,
	939, 984, 1063, 855, 704, 721, 860, 810, 0, 1036,
	897, 898, 263, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 468, 990, 999, 1013, 919,
	376, 283, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 826, 0, 720, 0, 870, 716, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	722, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	340, 867, 798, 1034, 927, 301, 191, 1040, 925, 824,
	993, 871, 1022, 1056, 913, 311, 869, 195, 866, 872,
	911, 353, 1002, 1008, 808, 198, 313, 1019, 891, 904,
	729, 0, 392, 980, 467, 710, 278, 0, 966, 391,
	315, 460, 994, 1042, 466, 914, 442, 476, 481, 271,
	947, 234, 420, 261, 254, 896, 1012, 859, 284, 375,
	249, 306, 930, 986, 892, 241, 997, 973, 1024, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 293,
	285, 1027, 1025, 905, 361, 224, 957, 950, 943, 812,
	470, 1059, 257, 1009, 472, 180, 406, 405, 917, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 485, 220,
	309, 450, 709, 277, 352, 982, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1006, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 981, 389, 427, 473, 975, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1004, 216, 237, 428,
	210, 1038, 1021, 968, 932, 938, 861, 0, 209, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	281, 992, 730, 731, 246, 801, 1053, 211, 868, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 969, 956, 954,
	862, 1037, 967, 955, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 958, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 880, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 996, 1062, 360, 393, 233, 469, 421, 262, 878,
	1066, 825, 813, 814, 817, 961, 962, 815, 818, 819,
	827, 799, 800, 802, 804, 805, 806, 949, 1041, 863,
	809, 1017, 820, 821, 822, 823, 989, 1060, 797, 242,
	746, 839, 840, 841, 747, 842, 843, 748, 749, 844,
	845, 846, 847, 750, 848, 849, 850, 828, 829, 830,
	831, 832, 833, 834, 835, 838, 836, 837, 0, 945,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 807, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 346, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 928, 196, 0, 0, 202, 0, 203, 205,
	915, 201, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	448, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 357, 909, 865, 0, 0, 856, 707, 857, 890,
	259, 706, 1018, 963, 1046, 946, 978, 988, 258, 244,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 477, 190, 811, 314, 0, 0, 475, 423, 339,
	0, 0, 944, 0, 795, 796, 929, 987, 876, 974,
	1050, 910, 979, 1051, 89, 0, 0, 0, 0, 2347,
	557, 733, 735, 736, 737, 738, 0, 0, 171, 734,
	739, 740, 741, 0, 939, 984, 1063, 855, 704, 721,
	860, 810, 0, 1036, 897, 898, 263, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 468,
	990, 999, 1013, 919, 376, 283, 0, 0, 0, 0,
	718, 719, 2238, 0, 0, 0, 826, 0, 720, 0,
	870, 716, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 722, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 340, 867, 798, 1034, 927, 301,
	191, 1040, 925, 824, 993, 871, 1022, 1056, 913, 311,
	869, 195, 866, 872, 911, 353, 1002, 1008, 808, 198,
	313, 1019, 891, 904, 729, 0, 392, 980, 467, 710,
	278, 0, 966, 391, 315, 460, 994, 1042, 466, 914,
	442, 476, 481, 271, 947, 234, 420, 261, 254, 896,
	1012, 859, 284, 375, 249, 306, 930, 986, 892, 241,
	997, 973, 1024, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 293, 285, 1027, 1025, 905, 361, 224,
	957, 950, 943, 812, 470, 1059, 257, 1009, 472, 180,
	406, 405, 917, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 485, 220, 309, 450, 709, 277, 352, 982,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1006, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 981, 389,
	427, 473, 975, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1004, 216, 237, 428, 210, 1038, 1021, 968, 932, 938,
	861, 0, 209, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 281, 992, 730, 731, 246, 801,
	1053, 211, 868, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 969, 956, 954, 862, 1037, 967, 955, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 958,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	880, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 996, 1062, 360, 393, 233,
	469, 421, 262, 878, 1066, 825, 813, 814, 817, 961,
	962, 815, 818, 819, 827, 799, 800, 802, 804, 805,
	806, 949, 1041, 863, 809, 1017, 820, 821, 822, 823,
	989, 1060, 797, 242, 746, 839, 840, 841, 747, 842,
	843, 748, 749, 844, 845, 846, 847, 750, 848, 849,
	850, 828, 829, 830, 831, 832, 833, 834, 835, 838,
	836, 837, 0, 945, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 807, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 346, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252,
	948, 970, 1001, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 928, 196, 0, 0,
	202, 0, 203, 205, 915, 201, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 448, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 357, 909, 865, 0, 0,
	856, 707, 857, 890, 259, 706, 1018, 963, 1046, 946,
	978, 988, 258, 244, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 477, 190, 811, 314, 0,
	0, 475, 423, 339, 0, 0, 944, 0, 795, 796,
	929, 987, 876, 974, 1050, 910, 979, 1051, 89, 0,
	0, 0, 0, 2344, 557, 733, 735, 736, 737, 738,
	0, 0, 171, 734, 739, 740, 741, 0, 939, 984,
	1063, 855, 704, 721, 860, 810, 0, 1036, 897, 898,
	263, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 468, 990, 999, 1013, 919, 376, 283,
	0, 0, 0, 0, 718, 719, 2238, 0, 0, 0,
	826, 0, 720, 0, 870, 716, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 722, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 340, 867,
	798, 1034, 927, 301, 191, 1040, 925, 824, 993, 871,
	1022, 1056, 913, 311, 869, 195, 866, 872, 911, 353,
	1002, 1008, 808, 198, 313, 1019, 891, 904, 729, 0,
	392, 980, 467, 710, 278, 0, 966, 391, 315, 460,
	994, 1042, 466, 914, 442, 476, 481, 271, 947, 234,
	420, 261, 254, 896, 1012, 859, 284, 375, 249, 306,
	930, 986, 892, 241, 997, 973, 1024, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 293, 285, 1027,
	1025, 905, 361, 224, 957, 950, 943, 812, 470, 1059,
	257, 1009, 472, 180, 406, 405, 917, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 485, 220, 309, 450,
	709, 277, 352, 982, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1006, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 981, 389, 427, 473, 975, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1004, 216, 237, 428, 210, 1038,
	1021, 968, 932, 938, 861, 0, 209, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 281, 992,
	730, 731, 246, 801, 1053, 211, 868, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 969, 956, 954, 862, 1037,
	967, 955, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 958, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 880, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 996,
	1062, 360, 393, 233, 469, 421, 262, 878, 1066, 825,
	813, 814, 817, 961, 962, 815, 818, 819, 827, 799,
	800, 802, 804, 805, 806, 949, 1041, 863, 809, 1017,
	820, 821, 822, 823, 989, 1060, 797, 242, 746, 839,
	840, 841, 747, 842, 843, 748, 749, 844, 845, 846,
	847, 750, 848, 849, 850, 828, 829, 830, 831, 832,
	833, 834, 835, 838, 836, 837, 0, 945, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 807,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 346, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 471, 252, 948, 970, 1001, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	928, 196, 0, 0, 202, 0, 203, 205, 915, 201,
	1032, 1057, 977, 991, 902, 1044, 0, 42, 448, 803,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 357,
	909, 865, 0, 0, 856, 707, 857, 890, 259, 706,
	1018, 963, 1046, 946, 978, 988, 258, 244, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 477,
	190, 811, 314, 0, 0, 475, 423, 339, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 557, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 704, 721, 860, 810,
	0, 1036, 897, 898, 263, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 468, 990, 999,
	1013, 919, 376, 283, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 340, 867, 798, 1543, 927, 301, 191, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 311, 869, 195,
	866, 872, 911, 353, 1002, 1008, 808, 198, 313, 1019,
	891, 904, 729, 0, 392, 980, 467, 710, 278, 0,
	966, 391, 315, 460, 994, 1042, 466, 914, 442, 476,
	481, 271, 947, 234, 420, 261, 254, 896, 1012, 859,
	284, 375, 249, 306, 930, 986, 892, 241, 997, 973,
	1024, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 293, 285, 1027, 1025, 905, 361, 224, 957, 950,
	943, 812, 470, 1059, 257, 1009, 472, 180, 406, 405,
	917, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	485, 220, 309, 450, 709, 277, 352, 982, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1006, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 981, 389, 427, 473,
	975, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1004, 216,
	237, 428, 210, 1038, 1021, 968, 932, 938, 861, 0,
	209, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 281, 992, 730, 731, 246, 801, 1053, 211,
	868, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 969,
	956, 954, 862, 1037, 967, 955, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 958, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 880, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 996, 1062, 360, 393, 233, 469, 421,
	262, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 949,
	1041, 863, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 242, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 807, 199, 212, 312, 1541, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	346, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970,
	1001, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 928, 196, 0, 0, 202, 0,
	203, 205, 915, 201, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 448, 803, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 357, 909, 865, 0, 0, 856, 707,
	857, 890, 259, 706, 1018, 963, 1046, 946, 978, 988,
	258, 244, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 477, 190, 811, 314, 0, 0, 475,
	423, 339, 0, 0, 944, 0, 795, 796, 929, 987,
	876, 974, 1050, 910, 979, 1051, 89, 0, 2108, 0,
	0, 732, 557, 733, 735, 736, 737, 738, 0, 0,
	171, 734, 739, 740, 741, 0, 939, 984, 1063, 855,
	704, 721, 860, 810, 0, 1036, 897, 898, 263, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 468, 990, 999, 1013, 919, 376, 283, 0, 0,
	0, 0, 718, 719, 0, 0, 0, 0, 826, 0,
	720, 0, 870, 716, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 722, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 340, 867, 798, 1034,
	927, 301, 191, 1040, 925, 824, 993, 871, 1022, 1056,
	913, 311, 869, 195, 866, 872, 911, 353, 1002, 1008,
	808, 198, 313, 1019, 891, 904, 729, 0, 392, 980,
	467, 710, 278, 0, 966, 391, 315, 460, 994, 1042,
	466, 914, 442, 476, 481, 271, 947, 234, 420, 261,
	254, 896, 1012, 859, 284, 375, 249, 306, 930, 986,
	892, 241, 997, 973, 1024, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 293, 285, 1027, 1025, 905,
	361, 224, 957, 950, 943, 812, 470, 1059, 257, 1009,
	472, 180, 406, 405, 917, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 485, 220, 309, 450, 709, 277,
	352, 982, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1006, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	981, 389, 427, 473, 975, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1004, 216, 237, 428, 210, 1038, 1021, 968,
	932, 938, 861, 0, 209, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 281, 992, 730, 731,
	246, 801, 1053, 211, 868, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 969, 956, 954, 862, 1037, 967, 955,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 958, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 880, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 996, 1062, 360,
	393, 233, 469, 421, 262, 878, 1066, 825, 813, 814,
	817, 961, 962, 815, 818, 819, 827, 799, 800, 802,
	804, 805, 806, 949, 1041, 863, 809, 1017, 820, 821,
	822, 823, 989, 1060, 797, 242, 746, 839, 840, 841,
	747, 842, 843, 748, 749, 844, 845, 846, 847, 750,
	848, 849, 850, 828, 829, 830, 831, 832, 833, 834,
	835, 838, 836, 837, 0, 945, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 807, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 346, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	471, 252, 948, 970, 1001, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 928, 196,
	0, 0, 202, 0, 203, 205, 915, 201, 1032, 1057,
	977, 991, 902, 1044, 0, 0, 448, 803, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 357, 909, 865,
	0, 0, 856, 707, 857, 890, 259, 706, 1018, 963,
	1046, 946, 978, 988, 258, 244, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 477, 190, 811,
	314, 0, 0, 475, 423, 339, 0, 0, 944, 0,
	795, 796, 929, 987, 876, 974, 1050, 910, 979, 1051,
	89, 0, 0, 0, 0, 732, 557, 733, 735, 736,
	737, 738, 0, 0, 171, 734, 739, 740, 741, 0,
	939, 984, 1063, 855, 704, 721, 860, 810, 0, 1036,
	897, 898, 263, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 468, 990, 999, 1013, 919,
	376, 283, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 826, 0, 720, 0, 870, 716, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	722, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	340, 867, 798, 1034, 927, 301, 191, 1040, 925, 824,
	993, 871, 1022, 1056, 913, 311, 869, 195, 866, 872,
	911, 353, 1002, 1008, 808, 198, 313, 1019, 891, 904,
	729, 0, 392, 980, 467, 710, 278, 0, 966, 391,
	315, 460, 994, 1042, 466, 914, 442, 476, 481, 271,
	947, 234, 420, 261, 254, 896, 1012, 859, 284, 375,
	249, 306, 930, 986, 892, 241, 997, 973, 1024, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 293,
	285, 1027, 1025, 905, 361, 224, 957, 950, 943, 812,
	470, 1059, 257, 1009, 472, 180, 406, 405, 917, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 485, 220,
	309, 450, 709, 277, 352, 982, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1006, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 981, 389, 427, 473, 975, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1004, 216, 237, 428,
	210, 1038, 1021, 968, 932, 938, 861, 0, 209, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	281, 992, 730, 731, 246, 801, 1053, 211, 868, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 969, 956, 954,
	862, 1037, 967, 955, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 958, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 880, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 996, 1062, 360, 393, 233, 469, 421, 262, 878,
	1066, 825, 813, 814, 817, 961, 962, 815, 818, 819,
	827, 799, 800, 802, 804, 805, 806, 949, 1041, 863,
	809, 1017, 820, 821, 822, 823, 989, 1060, 797, 242,
	746, 839, 840, 841, 747, 842, 843, 748, 749, 844,
	845, 846, 847, 750, 848, 849, 850, 828, 829, 830,
	831, 832, 833, 834, 835, 838, 836, 837, 0, 945,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 807, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 346, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 928, 196, 0, 0, 202, 0, 203, 205,
	915, 201, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	448, 803, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 357, 909, 865, 0, 0, 856, 1106, 857, 890,
	259, 1104, 1018, 963, 1046, 946, 978, 988, 258, 244,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 477, 190, 811, 314, 0, 0, 475, 423, 339,
	0, 0, 944, 0, 795, 796, 929, 987, 876, 974,
	1050, 910, 979, 1051, 89, 0, 0, 0, 0, 732,
	557, 733, 735, 736, 737, 738, 0, 0, 171, 734,
	739, 740, 741, 0, 939, 984, 1063, 855, 1123, 721,
	860, 810, 0, 1036, 897, 898, 263, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 468,
	990, 999, 1013, 919, 376, 283, 0, 0, 0, 0,
	718, 719, 0, 0, 0, 0, 826, 0, 720, 0,
	870, 716, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 722, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 340, 867, 798, 1034, 927, 301,
	191, 1040, 925, 824, 993, 871, 1022, 1056, 913, 311,
	869, 195, 866, 872, 911, 353, 1002, 1008, 808, 198,
	313, 1019, 891, 904, 729, 0, 392, 980, 467, 710,
	278, 0, 966, 391, 315, 460, 994, 1042, 466, 914,
	442, 476, 481, 271, 947, 234, 420, 261, 254, 896,
	1012, 859, 284, 375, 249, 306, 930, 986, 892, 241,
	997, 973, 1024, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 293, 285, 1027, 1025, 905, 361, 224,
	957, 950, 943, 812, 470, 1059, 257, 1009, 472, 180,
	406, 405, 917, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 485, 220, 309, 450, 709, 277, 352, 982,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1006, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 981, 389,
	427, 473, 975, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1004, 216, 237, 428, 210, 1038, 1021, 968, 932, 938,
	861, 0, 209, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 281, 992, 730, 731, 246, 801,
	1053, 211, 868, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 969, 956, 954, 862, 1037, 967, 955, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 958,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	880, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 996, 1062, 360, 393, 233,
	469, 421, 262, 878, 1066, 825, 813, 814, 817, 961,
	962, 815, 818, 819, 827, 799, 800, 802, 804, 805,
	806, 949, 1041, 863, 809, 1017, 820, 821, 822, 823,
	989, 1060, 797, 242, 746, 839, 840, 841, 747, 842,
	843, 748, 749, 844, 845, 846, 847, 750, 848, 849,
	850, 828, 829, 830, 831, 832, 833, 834, 835, 838,
	836, 837, 0, 945, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 807, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 346, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252,
	948, 970, 1001, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 928, 196, 0, 0,
	202, 0, 203, 205, 915, 201, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 448, 803, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 357, 909, 865, 0, 0,
	856, 1106, 857, 890, 259, 1104, 1018, 963, 1046, 946,
	978, 988, 258, 244, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 477, 190, 811, 314, 0,
	0, 475, 423, 339, 0, 0, 944, 0, 795, 796,
	929, 987, 876, 974, 1050, 910, 979, 1051, 89, 0,
	0, 0, 0, 732, 557, 733, 735, 736, 737, 738,
	0, 0, 171, 734, 739, 740, 741, 0, 939, 984,
	1063, 855, 1123, 721, 860, 810, 0, 1036, 897, 898,
	263, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 468, 990, 999, 1013, 919, 376, 283,
	0, 0, 0, 0, 718, 719, 0, 0, 0, 0,
	826, 0, 720, 0, 870, 716, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 722, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 340, 867,
	798, 1034, 927, 301, 191, 1040, 925, 824, 993, 871,
	1022, 1056, 913, 311, 869, 195, 866, 872, 911, 353,
	1002, 1008, 808, 198, 313, 1019, 891, 904, 729, 0,
	392, 980, 467, 710, 278, 0, 4516, 391, 315, 460,
	994, 1042, 466, 914, 442, 476, 481, 271, 947, 234,
	420, 261, 254, 896, 1012, 859, 284, 375, 249, 306,
	930, 986, 892, 241, 997, 973, 1024, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 293, 285, 1027,
	1025, 905, 361, 224, 957, 950, 943, 812, 470, 1059,
	257, 1009, 472, 180, 406, 405, 917, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 485, 220, 309, 450,
	709, 277, 352, 982, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1006, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 981, 389, 427, 473, 975, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1004, 216, 237, 428, 210, 1038,
	1021, 968, 932, 938, 861, 0, 209, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 281, 992,
	730, 731, 246, 801, 1053, 211, 868, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 969, 956, 954, 862, 1037,
	967, 955, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 958, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 880, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 996,
	1062, 360, 393, 233, 469, 421, 262, 878, 1066, 825,
	813, 814, 817, 961, 962, 815, 818, 819, 827, 799,
	800, 802, 804, 805, 806, 949, 1041, 863, 809, 1017,
	820, 821, 822, 823, 989, 1060, 797, 242, 746, 839,
	840, 841, 747, 842, 843, 748, 749, 844, 845, 846,
	847, 750, 848, 849, 850, 828, 829, 830, 831, 832,
	833, 834, 835, 838, 836, 837, 0, 945, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 807,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 346, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 471, 252, 948, 970, 1001, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	928, 196, 0, 0, 202, 0, 203, 205, 915, 201,
	1032, 1057, 977, 991, 902, 1044, 0, 0, 448, 803,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 357,
	909, 865, 0, 0, 856, 1106, 857, 890, 259, 1104,
	1018, 963, 1046, 946, 978, 988, 258, 244, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 477,
	190, 811, 314, 0, 0, 475, 423, 339, 0, 0,
	944, 0, 795, 796, 929, 987, 876, 974, 1050, 910,
	979, 1051, 89, 0, 0, 0, 0, 732, 557, 733,
	735, 736, 737, 738, 0, 0, 171, 734, 739, 740,
	741, 0, 939, 984, 1063, 855, 1123, 721, 860, 810,
	0, 1036, 897, 898, 263, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 468, 990, 999,
	1013, 919, 376, 283, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 826, 0, 720, 0, 870, 716,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 722, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 340, 867, 798, 1034, 927, 301, 191, 1040,
	925, 824, 993, 871, 1022, 1056, 913, 311, 869, 195,
	866, 872, 911, 353, 1002, 1008, 808, 198, 313, 1019,
	891, 904, 729, 0, 392, 980, 467, 710, 278, 0,
	966, 391, 315, 460, 994, 1042, 466, 914, 442, 476,
	481, 271, 947, 234, 420, 261, 254, 896, 1012, 859,
	284, 375, 249, 306, 930, 986, 892, 241, 997, 973,
	1024, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 293, 285, 1027, 1025, 905, 361, 224, 957, 950,
	943, 812, 470, 1059, 257, 1009, 472, 180, 406, 405,
	917, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	485, 220, 309, 450, 709, 277, 352, 982, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1006, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 981, 389, 427, 473,
	975, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1004, 216,
	237, 428, 210, 1038, 1021, 968, 932, 938, 861, 0,
	209, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 281, 992, 730, 731, 246, 801, 1053, 211,
	868, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 969,
	956, 954, 862, 1037, 967, 955, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 958, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 880, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 996, 1062, 360, 393, 233, 469, 421,
	262, 878, 1066, 825, 813, 814, 817, 961, 962, 815,
	818, 819, 827, 799, 800, 802, 804, 805, 806, 2350,
	2351, 2352, 809, 1017, 820, 821, 822, 823, 989, 1060,
	797, 242, 746, 839, 840, 841, 747, 842, 843, 748,
	749, 844, 845, 846, 847, 750, 848, 849, 850, 828,
	829, 830, 831, 832, 833, 834, 835, 838, 836, 837,
	0, 945, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 807, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	346, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970,
	1001, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 928, 196, 0, 0, 202, 0,
	203, 205, 915, 201, 1032, 1057, 977, 991, 1830, 2009,
	0, 3695, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852,
	1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831,
	1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936,
	258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010,
	1883, 0, 172, 477, 190, 3696, 314, 1985, 497, 3697,
	423, 339, 500, 499, 1879, 1994, 1900, 1963, 1862, 1935,
	1795, 1918, 2015, 1841, 1927, 2016, 89, 0, 696, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1923, 2007, 1834, 498, 1874, 1932, 2036, 1766,
	1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0,
	0, 0, 0, 0, 0, 0, 1877, 1901, 1953, 1859,
	0, 468, 1938, 1948, 1966, 1851, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1916, 0,
	0, 0, 1787, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 3699,
	1860, 301, 191, 2004, 1858, 1857, 1942, 1788, 1978, 2028,
	1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960,
	177, 198, 313, 1975, 1816, 1833, 245, 2180, 392, 1928,
	467, 496, 278, 0, 1909, 391, 315, 460, 1943, 2006,
	466, 1845, 442, 476, 481, 271, 1885, 234, 420, 261,
	254, 1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934,
	1817, 241, 1946, 1917, 1980, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1976, 1959, 1982, 1810,
	1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835,
	361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961,
	472, 180, 406, 405, 1848, 292, 1962, 181, 170, 385,
	182, 302, 204, 1987, 485, 220, 309, 450, 495, 277,
	352, 1930, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1958, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 2014, 322, 266, 270, 286, 297,
	1929, 389, 427, 473, 1920, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1954, 216, 237, 428, 210, 2002, 1977, 1911,
	1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871,
	1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464,
	246, 1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025,
	2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1899, 425, 320, 0, 206, 0, 424, 2012, 2038,
	439, 226, 1803, 1969, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1945, 2035, 360,
	393, 233, 469, 421, 262, 1799, 0, 1802, 1797, 1800,
	1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 192, 193,
	1995, 1996, 194, 1890, 2005, 1778, 0, 1973, 188, 189,
	174, 179, 1937, 2033, 1850, 242, 164, 1774, 1775, 1776,
	165, 1880, 1881, 167, 168, 1991, 1990, 1989, 1992, 169,
	2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921,
	1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1908, 199, 212,
	312, 3698, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805,
	1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812,
	1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892,
	1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986,
	471, 252, 1888, 1913, 1951, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1861, 196,
	0, 0, 202, 0, 203, 205, 1846, 201, 1993, 2029,
	1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020,
	314, 1985, 497, 475, 423, 339, 500, 499, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1923, 2007, 1834, 498,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 3201, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 467, 2278, 278, 0, 1909, 391,
	315, 460, 1943, 2006, 466, 1845, 442, 476, 481, 271,
	1885, 234, 420, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	470, 2032, 257, 1961, 472, 180, 406, 405, 1848, 292,
	1962, 181, 170, 385, 182, 302, 204, 1987, 485, 220,
	309, 450, 2277, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1958, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2014, 322,
	266, 270, 286, 297, 1929, 389, 427, 473, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1954, 216, 237, 428,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1803, 1969, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1945, 2035, 360, 393, 233, 469, 421, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 192, 193, 1995, 1996, 194, 1890, 2005, 1778,
	0, 1973, 188, 189, 174, 179, 1937, 2033, 1850, 242,
	164, 1774, 1775, 1776, 165, 1880, 1881, 167, 168, 1991,
	1990, 1989, 1992, 169, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971,
	448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779,
	1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815,
	259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244,
	1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0,
	172, 477, 190, 2020, 314, 1985, 497, 475, 423, 339,
	500, 499, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918,
	2015, 1841, 1927, 2016, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1923, 2007, 1834, 498, 1874, 1932, 2036, 1766, 1919, 0,
	1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0,
	0, 0, 0, 0, 1877, 1901, 1953, 1859, 0, 468,
	1938, 1948, 1966, 1851, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 1916, 0, 0, 0,
	1787, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1794, 1764,
	1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301,
	191, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311,
	1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 177, 198,
	313, 1975, 1816, 1833, 245, 2180, 392, 1928, 467, 496,
	278, 0, 1909, 391, 315, 460, 1943, 2006, 466, 1845,
	442, 476, 481, 271, 1885, 234, 420, 261, 254, 1824,
	1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817, 241,
	1946, 1917, 1980, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801,
	1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224,
	1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472, 180,
	406, 405, 1848, 292, 1962, 181, 170, 385, 182, 302,
	204, 1987, 485, 220, 309, 450, 495, 277, 352, 1930,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1958, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 2014, 322, 266, 270, 286, 297, 1929, 389,
	427, 473, 1920, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872,
	1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821,
	1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784,
	2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023, 459,
	2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1899,
	425, 320, 0, 206, 0, 424, 2012, 2038, 439, 226,
	1803, 1969, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1945, 2035, 360, 393, 233,
	469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903,
	1904, 2017, 2018, 2019, 1957, 1792, 192, 193, 1995, 1996,
	194, 1890, 2005, 1778, 0, 1973, 188, 189, 174, 179,
	1937, 2033, 1850, 242, 164, 1774, 1775, 1776, 165, 1880,
	1881, 167, 168, 1991, 1990, 1989, 1992, 169, 2026, 2024,
	2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967,
	1940, 1949, 1823, 1882, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1908, 199, 212, 312, 2034,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806,
	1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827,
	1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907,
	1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252,
	1888, 1913, 1951, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1861, 196, 0, 0,
	202, 0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939,
	1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031,
	1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818,
	1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884,
	1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931,
	1988, 2010, 1883, 0, 172, 477, 190, 2020, 314, 1985,
	497, 475, 423, 339, 500, 499, 1879, 1994, 1900, 1963,
	1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1923, 2007, 1834, 498, 1874, 1932,
	2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826,
	263, 0, 0, 0, 0, 0, 0, 0, 1877, 1901,
	1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283,
	0, 0, 0, 0, 0, 0, 2271, 0, 1820, 0,
	1916, 0, 0, 0, 1787, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783,
	1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942, 1788,
	1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353,
	1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245, 0,
	392, 1928, 467, 2278, 278, 0, 1909, 391, 315, 460,
	1943, 2006, 466, 1845, 442, 476, 481, 271, 1885, 234,
	420, 261, 254, 1824, 1965, 1770, 284, 375, 249, 306,
	1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1976, 1959,
	1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983,
	1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032,
	257, 1961, 472, 180, 406, 405, 1848, 292, 1962, 181,
	170, 385, 182, 302, 204, 1987, 485, 220, 309, 450,
	2277, 277, 352, 1930, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1958, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2014, 322, 266, 270,
	286, 297, 1929, 389, 427, 473, 1920, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1954, 216, 237, 428, 210, 2002,
	1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869,
	1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941,
	463, 464, 246, 1784, 2022, 211, 1785, 2021, 349, 356,
	348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001,
	1910, 1896, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1899, 425, 320, 0, 206, 0, 424,
	2012, 2038, 439, 226, 1803, 1969, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1945,
	2035, 360, 393, 233, 469, 421, 262, 1799, 0, 1802,
	1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792,
	192, 193, 1995, 1996, 194, 1890, 2005, 1778, 0, 1973,
	188, 189, 174, 179, 1937, 2033, 1850, 242, 164, 1774,
	1775, 1776, 165, 1880, 1881, 167, 168, 1991, 1990, 1989,
	1992, 169, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887,
	1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1908,
	199, 212, 312, 2034, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1970, 1915, 0, 1854, 1856,
	1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769,
	1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875,
	1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979,
	1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1861, 196, 0, 0, 202, 0, 203, 205, 1846, 201,
	1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864,
	2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357,
	1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811,
	1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893,
	1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 172, 477,
	190, 2020, 314, 1985, 497, 475, 423, 339, 500, 499,
	1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841,
	1927, 2016, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1923, 2007,
	1834, 498, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782,
	2030, 2000, 1825, 1826, 263, 0, 0, 0, 0, 0,
	0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948,
	1966, 1851, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 1916, 0, 0, 0, 1787, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955,
	1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 191, 2004,
	1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195,
	1781, 1789, 1842, 353, 1952, 1960, 177, 198, 313, 1975,
	1816, 1833, 245, 0, 392, 1928, 467, 2278, 278, 0,
	1909, 391, 315, 460, 1943, 2006, 466, 1845, 442, 476,
	481, 271, 1885, 234, 420, 261, 254, 1824, 1965, 1770,
	284, 375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917,
	1980, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832,
	2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891,
	1878, 1956, 470, 2032, 257, 1961, 472, 180, 406, 405,
	1848, 292, 1962, 181, 170, 385, 182, 302, 204, 1987,
	485, 220, 309, 450, 2277, 277, 352, 1930, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1958, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	2014, 322, 266, 270, 286, 297, 1929, 389, 427, 473,
	1920, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1954, 216,
	237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0,
	209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809,
	1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022, 211,
	1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912,
	1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1899, 425, 320,
	0, 206, 0, 424, 2012, 2038, 439, 226, 1803, 1969,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1945, 2035, 360, 393, 233, 469, 421,
	262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017,
	2018, 2019, 1957, 1792, 192, 193, 1995, 1996, 194, 1890,
	2005, 1778, 0, 1973, 188, 189, 174, 179, 1937, 2033,
	1850, 242, 164, 1774, 1775, 1776, 165, 1880, 1881, 167,
	168, 1991, 1990, 1989, 1992, 169, 2026, 2024, 2027, 1793,
	1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949,
	1823, 1882, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1908, 199, 212, 312, 2034, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1970,
	1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037,
	346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839,
	1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944,
	1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913,
	1951, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1861, 196, 0, 0, 202, 0,
	203, 205, 1846, 201, 1993, 2029, 1925, 1939, 902, 1044,
	0, 0, 448, 1111, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 357, 909, 865, 0, 0, 856, 1106,
	857, 890, 259, 1104, 1018, 963, 1046, 946, 978, 988,
	258, 244, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 477, 190, 1144, 314, 0, 497, 475,
	423, 339, 500, 499, 944, 0, 1118, 1131, 929, 987,
	876, 974, 1050, 910, 979, 1051, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 498, 939, 984, 1063, 855,
	1123, 0, 860, 1095, 0, 1036, 897, 898, 263, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 468, 990, 999, 1013, 919, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 870, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 340, 867, 1133, 1034,
	927, 301, 191, 1040, 925, 1110, 993, 871, 1022, 1056,
	913, 311, 869, 195, 866, 872, 911, 353, 1002, 1008,
	177, 198, 313, 1019, 891, 904, 245, 3301, 392, 980,
	467, 2363, 278, 0, 966, 391, 315, 460, 994, 1042,
	466, 914, 442, 476, 481, 271, 947, 234, 420, 261,
	254, 896, 1012, 859, 284, 375, 249, 306, 930, 986,
	892, 241, 997, 973, 1024, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 293, 285, 1027, 1025, 905,
	361, 224, 957, 950, 943, 1129, 470, 1059, 257, 1009,
	472, 180, 406, 405, 917, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 485, 220, 309, 450, 2362, 277,
	352, 982, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1006, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	981, 389, 427, 473, 975, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1004, 216, 237, 428, 210, 1038, 1021, 968,
	932, 938, 861, 0, 209, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 281, 992, 463, 464,
	246, 1096, 1053, 211, 868, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 969, 956, 954, 862, 1037, 967, 955,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 958, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 880, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 996, 1062, 360,
	393, 233, 469, 421, 262, 1101, 0, 1103, 1099, 1102,
	1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193,
	1138, 1139, 194, 949, 1041, 863, 0, 1017, 188, 189,
	174, 179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094,
	165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169,
	1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124,
	1125, 1132, 1127, 1128, 0, 945, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1121, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 346, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	471, 252, 948, 970, 1001, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 928, 196,
	0, 0, 202, 0, 203, 205, 915, 201, 1032, 1057,
	977, 991, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 172, 477, 190, 2020,
	314, 1985, 497, 475, 423, 339, 500, 499, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1923, 2007, 1834, 498,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 2858, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 191, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 177, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 467, 496, 278, 0, 1909, 391,
	315, 460, 1943, 2006, 466, 1845, 442, 476, 481, 271,
	1885, 234, 420, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	470, 2032, 257, 1961, 472, 180, 406, 405, 1848, 292,
	1962, 181, 170, 385, 182, 302, 204, 1987, 485, 220,
	309, 450, 495, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1958, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2014, 322,
	266, 270, 286, 297, 1929, 389, 427, 473, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1954, 216, 237, 428,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1803, 1969, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1945, 2035, 360, 393, 233, 469, 421, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778,
	0, 1973, 188, 189, 174, 179, 1937, 2033, 1850, 242,
	0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 902, 1044, 0, 0,
	448, 1111, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 357, 909, 865, 0, 0, 856, 1106, 857, 890,
	259, 1104, 1018, 963, 1046, 946, 978, 988, 258, 244,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 477, 190, 1144, 314, 0, 497, 475, 423, 339,
	500, 499, 944, 0, 1118, 1131, 929, 987, 876, 974,
	1050, 910, 979, 1051, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1126, 1140, 1107, 498, 939, 984, 1063, 855, 1123, 0,
	860, 1095, 0, 1036, 897, 898, 263, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 468,
	990, 999, 1013, 919, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	870, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 340, 867, 1133, 1034, 927, 301,
	191, 1040, 925, 1110, 993, 871, 1022, 1056, 913, 311,
	869, 195, 866, 872, 911, 353, 1002, 1008, 177, 198,
	313, 1019, 891, 904, 245, 0, 392, 980, 467, 2363,
	278, 0, 966, 391, 315, 460, 994, 1042, 466, 914,
	442, 476, 481, 271, 947, 234, 420, 261, 254, 896,
	1012, 859, 284, 375, 249, 306, 930, 986, 892, 241,
	997, 973, 1024, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 293, 285, 1027, 1025, 905, 361, 224,
	957, 950, 943, 1129, 470, 1059, 257, 1009, 472, 180,
	406, 405, 917, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 485, 220, 309, 450, 2362, 277, 352, 982,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1006, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 981, 389,
	427, 473, 975, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1004, 216, 237, 428, 210, 1038, 1021, 968, 932, 938,
	861, 0, 209, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 281, 992, 463, 464, 246, 1096,
	1053, 211, 868, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 969, 956, 954, 862, 1037, 967, 955, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 958,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	880, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 996, 1062, 360, 393, 233,
	469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119,
	1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139,
	194, 949, 1041, 863, 0, 1017, 188, 189, 174, 179,
	989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113,
	1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145,
	1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132,
	1127, 1128, 0, 945, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1121, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 346, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252,
	948, 970, 1001, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 928, 196, 0, 0,
	202, 0, 203, 205, 915, 201, 1032, 1057, 977, 991,
	1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031,
	1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818,
	1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884,
	1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931,
	1988, 2010, 1883, 0, 172, 477, 190, 2020, 314, 1985,
	497, 475, 423, 339, 500, 499, 1879, 1994, 1900, 1963,
	1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1923, 2007, 1834, 498, 1874, 1932,
	2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826,
	263, 0, 0, 0, 0, 0, 0, 0, 1877, 1901,
	1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1916, 0, 0, 0, 1787, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783,
	1968, 1998, 1860, 301, 191, 2004, 1858, 1857, 1942, 1788,
	1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353,
	1952, 1960, 177, 198, 313, 1975, 1816, 1833, 245, 0,
	392, 1928, 467, 496, 278, 0, 1909, 391, 315, 460,
	1943, 2006, 466, 1845, 442, 476, 481, 271, 1885, 234,
	420, 261, 254, 1824, 1965, 1770, 284, 375, 249, 306,
	1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1976, 1959,
	1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983,
	1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032,
	257, 1961, 472, 180, 406, 405, 1848, 292, 1962, 181,
	170, 385, 182, 302, 204, 1987, 485, 220, 309, 450,
	495, 277, 352, 1930, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1958, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2014, 322, 266, 270,
	286, 297, 1929, 389, 427, 473, 1920, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1954, 216, 237, 428, 210, 2002,
	1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869,
	1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941,
	463, 464, 246, 1784, 2022, 211, 1785, 2021, 349, 356,
	348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001,
	1910, 1896, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1899, 425, 320, 0, 206, 0, 424,
	2012, 2038, 439, 226, 1803, 1969, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1945,
	2035, 360, 393, 233, 469, 421, 262, 1799, 0, 1802,
	1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792,
	0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973,
	188, 189, 174, 179, 1937, 2033, 1850, 242, 0, 1774,
	1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989,
	1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887,
	1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1908,
	199, 212, 312, 2034, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1970, 1915, 0, 1854, 1856,
	1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769,
	1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875,
	1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979,
	1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1861, 196, 0, 0, 202, 0, 203, 205, 1846, 201,
	1993, 2029, 1925, 1939, 902, 1044, 0, 0, 448, 1111,
	1048, 889, 912, 1058, 918, 920, 985, 864, 960, 357,
	909, 865, 0, 0, 856, 1106, 857, 890, 259, 1104,
	1018, 963, 1046, 946, 978, 988, 258, 244, 953, 952,
	1035, 901, 900, 983, 1031, 1045, 0, 0, 172, 477,
	190, 1144, 314, 0, 0, 475, 423, 339, 0, 0,
	944, 0, 1118, 1131, 929, 987, 876, 974, 1050, 910,
	979, 1051, 0, 0, 0, 0, 0, 0, 557, 0,
	1454, 0, 0, 1455, 0, 0, 171, 0, 1126, 1140,
	1107, 0, 939, 984, 1063, 855, 1123, 0, 860, 1095,
	0, 1036, 897, 898, 263, 0, 0, 0, 0, 0,
	0, 0, 942, 959, 1003, 926, 0, 468, 990, 999,
	1013, 919, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1122, 0, 0, 0, 870, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 875, 853, 895, 1005,
	854, 852, 340, 867, 1133, 1034, 927, 301, 191, 1040,
	925, 1110, 993, 871, 1022, 1056, 913, 311, 869, 195,
	866, 872, 911, 353, 1002, 1008, 177, 198, 313, 1019,
	891, 904, 245, 0, 392, 980, 467, 1090, 278, 0,
	966, 391, 315, 460, 994, 1042, 466, 914, 442, 476,
	481, 271, 947, 234, 420, 261, 254, 896, 1012, 859,
	284, 375, 249, 306, 930, 986, 892, 241, 997, 973,
	1024, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1020, 1007, 1026, 887, 873, 879, 874, 903,
	1043, 293, 285, 1027, 1025, 905, 361, 224, 957, 950,
	943, 1129, 470, 1059, 257, 1009, 472, 180, 406, 405,
	917, 292, 1010, 181, 170, 385, 182, 302, 204, 1030,
	485, 220, 309, 450, 1089, 277, 352, 982, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1006, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1049, 322, 266, 270, 286, 297, 981, 389, 427, 473,
	975, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1004, 216,
	237, 428, 210, 1038, 1021, 968, 932, 938, 861, 0,
	209, 933, 934, 935, 936, 937, 1000, 894, 906, 886,
	976, 885, 281, 992, 463, 464, 246, 1096, 1053, 211,
	868, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 969,
	956, 954, 862, 1037, 967, 955, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 958, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 880, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 996, 1062, 360, 393, 233, 469, 421,
	262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141,
	1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194, 949,
	1041, 863, 0, 1017, 188, 189, 174, 179, 989, 1060,
	1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167,
	168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098,
	1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128,
	0, 945, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1121, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1015,
	972, 0, 922, 924, 923, 882, 884, 883, 881, 1064,
	346, 1033, 851, 858, 877, 888, 893, 899, 907, 908,
	916, 921, 931, 940, 941, 951, 964, 965, 971, 995,
	998, 1011, 1016, 1023, 1028, 1029, 471, 252, 948, 970,
	1001, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 928, 196, 0, 0, 202, 0,
	203, 205, 915, 201, 1032, 1057, 977, 991, 902, 1044,
	0, 0, 448, 1111, 1048, 889, 912, 1058, 918, 920,
	985, 864, 960, 357, 909, 865, 0, 0, 856, 1106,
	857, 890, 259, 1104, 1018, 963, 1046, 946, 978, 988,
	258, 244, 953, 952, 1035, 901, 900, 983, 1031, 1045,
	0, 0, 172, 477, 190, 1144, 314, 0, 0, 475,
	423, 339, 0, 0, 944, 0, 1118, 1131, 929, 987,
	876, 974, 1050, 910, 979, 1051, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1126, 1140, 1107, 0, 939, 984, 1063, 855,
	1123, 0, 860, 1095, 0, 1036, 897, 898, 263, 0,
	0, 0, 0, 0, 0, 0, 942, 959, 1003, 926,
	0, 468, 990, 999, 1013, 919, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1122, 0,
	0, 0, 870, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	875, 853, 895, 1005, 854, 852, 340, 867, 1133, 1034,
	927, 301, 191, 1040, 925, 1110, 993, 871, 1022, 1056,
	913, 311, 869, 195, 866, 872, 911, 353, 1002, 1008,
	177, 198, 313, 1019, 891, 904, 245, 0, 392, 980,
	467, 1090, 278, 0, 966, 391, 315, 460, 994, 1042,
	466, 914, 442, 476, 481, 271, 947, 234, 420, 261,
	254, 896, 1012, 859, 284, 375, 249, 306, 930, 986,
	892, 241, 997, 973, 1024, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1020, 1007, 1026, 887,
	873, 879, 874, 903, 1043, 293, 285, 1027, 1025, 905,
	361, 224, 957, 950, 943, 1129, 470, 1059, 257, 1009,
	472, 180, 406, 405, 917, 292, 1010, 181, 170, 385,
	182, 302, 204, 1030, 485, 220, 309, 450, 1089, 277,
	352, 982, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1006, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1049, 322, 266, 270, 286, 297,
	981, 389, 427, 473, 975, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1004, 216, 237, 428, 210, 1038, 1021, 968,
	932, 938, 861, 0, 209, 933, 934, 935, 936, 937,
	1000, 894, 906, 886, 976, 885, 281, 992, 463, 464,
	246, 1096, 1053, 211, 868, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 969, 956, 954, 862, 1037, 967, 955,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 958, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 880, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 996, 1062, 360,
	393, 233, 469, 421, 262, 1101, 0, 1103, 1099, 1102,
	1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193,
	1138, 1139, 194, 949, 1041, 863, 0, 1017, 188, 189,
	174, 179, 989, 1060, 1109, 242, 164, 1092, 1093, 1094,
	165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169,
	1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124,
	1125, 1132, 1127, 1128, 0, 945, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1121, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1015, 972, 0, 922, 924, 923, 882,
	884, 883, 881, 1064, 346, 1033, 851, 858, 877, 888,
	893, 899, 907, 908, 916, 921, 931, 940, 941, 951,
	964, 965, 971, 995, 998, 1011, 1016, 1023, 1028, 1029,
	471, 252, 948, 970, 1001, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 928, 196,
	0, 0, 202, 0, 203, 205, 915, 201, 1032, 1057,
	977, 991, 902, 1044, 0, 0, 448, 1111, 1048, 889,
	912, 1058, 918, 920, 985, 864, 960, 357, 909, 865,
	0, 0, 856, 1106, 857, 890, 259, 1104, 1018, 963,
	1046, 946, 978, 988, 258, 244, 953, 952, 1035, 901,
	900, 983, 1031, 1045, 0, 0, 172, 477, 190, 1144,
	314, 0, 0, 475, 423, 339, 0, 0, 944, 0,
	1118, 1131, 929, 987, 876, 974, 1050, 910, 979, 1051,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1126, 1140, 1107, 0,
	939, 984, 1063, 855, 1123, 0, 860, 1095, 0, 1036,
	897, 898, 263, 0, 0, 0, 0, 0, 0, 0,
	942, 959, 1003, 926, 0, 468, 990, 999, 1013, 919,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 870, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 875, 853, 895, 1005, 854, 852,
	340, 867, 1133, 1034, 927, 301, 191, 1040, 925, 1110,
	993, 871, 1022, 1056, 913, 311, 869, 195, 866, 872,
	911, 353, 1002, 1008, 177, 198, 313, 1019, 891, 904,
	245, 0, 392, 980, 467, 1090, 278, 0, 966, 391,
	315, 460, 994, 1042, 466, 914, 442, 476, 481, 271,
	947, 234, 420, 261, 254, 896, 1012, 859, 284, 375,
	249, 306, 930, 986, 892, 241, 997, 973, 1024, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1020, 1007, 1026, 887, 873, 879, 874, 903, 1043, 293,
	285, 1027, 1025, 905, 361, 224, 957, 950, 943, 1129,
	470, 1059, 257, 1009, 472, 180, 406, 405, 917, 292,
	1010, 181, 170, 385, 182, 302, 204, 1030, 485, 220,
	309, 450, 1089, 277, 352, 982, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1006, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1049, 322,
	266, 270, 286, 297, 981, 389, 427, 473, 975, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1004, 216, 237, 428,
	210, 1038, 1021, 968, 932, 938, 861, 0, 209, 933,
	934, 935, 936, 937, 1000, 894, 906, 886, 976, 885,
	281, 992, 463, 464, 246, 1096, 1053, 211, 1084, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 969, 956, 954,
	862, 1037, 967, 955, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 1080, 958, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 880, 1014, 454, 178,
	381, 227, 279, 267, 372, 1085, 1083, 1074, 1075, 308,
	316, 996, 1062, 360, 393, 233, 469, 421, 262, 1101,
	0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143,
	1130, 1097, 192, 193, 1138, 1139, 194, 949, 1041, 863,
	0, 1017, 188, 189, 174, 179, 989, 1060, 1109, 242,
	164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136,
	1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108,
	1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 945,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1121, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1015, 972, 0,
	922, 924, 923, 882, 884, 883, 881, 1064, 346, 1033,
	851, 858, 877, 888, 893, 899, 907, 908, 916, 921,
	931, 940, 941, 951, 964, 965, 971, 995, 998, 1011,
	1016, 1023, 1028, 1029, 471, 252, 948, 970, 1001, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 1081, 1082, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 928, 196, 0, 0, 202, 0, 203, 205,
	915, 201, 1032, 1057, 977, 991, 902, 1044, 0, 0,
	448, 1111, 1048, 889, 912, 1058, 918, 920, 985, 864,
	960, 357, 909, 865, 0, 0, 856, 1106, 857, 890,
	259, 1104, 1018, 963, 1046, 946, 978, 988, 258, 244,
	953, 952, 1035, 901, 900, 983, 1031, 1045, 0, 0,
	172, 477, 190, 1144, 314, 0, 0, 475, 423, 339,
	0, 0, 944, 0, 1118, 1131, 929, 987, 876, 974,
	1050, 910, 979, 1051, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1126, 1140, 1107, 0, 939, 984, 1063, 855, 1123, 0,
	860, 1095, 0, 1036, 897, 898, 263, 0, 0, 0,
	0, 0, 0, 0, 942, 959, 1003, 926, 0, 468,
	990, 999, 1013, 919, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	870, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 875, 853,
	895, 1005, 854, 852, 340, 867, 1133, 1034, 927, 301,
	191, 1040, 925, 1110, 993, 871, 1022, 1056, 913, 311,
	869, 195, 866, 872, 911, 353, 1002, 1008, 177, 198,
	313, 1019, 891, 904, 245, 0, 392, 980, 467, 1090,
	278, 0, 966, 391, 315, 460, 994, 1042, 466, 914,
	442, 476, 481, 271, 947, 234, 420, 261, 254, 896,
	1012, 859, 284, 375, 249, 306, 930, 986, 892, 241,
	997, 973, 1024, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1020, 1007, 1026, 887, 873, 879,
	874, 903, 1043, 293, 285, 1027, 1025, 905, 361, 224,
	957, 950, 943, 1129, 470, 1059, 257, 1009, 472, 180,
	406, 405, 917, 292, 1010, 181, 170, 385, 182, 302,
	204, 1030, 485, 220, 309, 450, 1089, 277, 352, 982,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1006, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1049, 322, 266, 270, 286, 297, 981, 389,
	427, 473, 975, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 1620, 229, 407, 410, 484,
	1004, 216, 237, 428, 210, 1038, 1021, 968, 932, 938,
	861, 0, 209, 933, 934, 935, 936, 937, 1000, 894,
	906, 886, 976, 885, 281, 992, 463, 464, 246, 1096,
	1053, 211, 868, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 969, 956, 954, 862, 1037, 967, 955, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 958,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	880, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 996, 1062, 360, 393, 233,
	469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119,
	1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139,
	194, 949, 1041, 863, 0, 1017, 188, 189, 174, 179,
	989, 1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113,
	1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145,
	1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132,
	1127, 1128, 0, 945, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1121, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1015, 972, 0, 922, 924, 923, 882, 884, 883,
	881, 1064, 346, 1033, 851, 858, 877, 888, 893, 899,
	907, 908, 916, 921, 931, 940, 941, 951, 964, 965,
	971, 995, 998, 1011, 1016, 1023, 1028, 1029, 471, 252,
	948, 970, 1001, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 928, 196, 0, 0,
	202, 0, 203, 205, 915, 201, 1032, 1057, 977, 991,
	902, 1044, 0, 0, 448, 1111, 1048, 889, 912, 1058,
	918, 920, 985, 864, 960, 357, 909, 865, 0, 0,
	856, 1106, 857, 890, 259, 1104, 1018, 963, 1046, 946,
	978, 988, 258, 244, 953, 952, 1035, 901, 900, 983,
	1031, 1045, 0, 0, 172, 477, 190, 1144, 314, 0,
	0, 475, 423, 339, 0, 0, 944, 0, 1118, 1131,
	929, 987, 876, 974, 1050, 910, 979, 1051, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1126, 1140, 1107, 0, 939, 984,
	1063, 855, 1123, 0, 860, 1095, 0, 1036, 897, 898,
	263, 0, 0, 0, 0, 0, 0, 0, 942, 959,
	1003, 926, 0, 468, 990, 999, 1013, 919, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 870, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 875, 853, 895, 1005, 854, 852, 340, 867,
	1133, 1034, 927, 301, 191, 1040, 925, 1110, 993, 871,
	1022, 1056, 913, 311, 869, 195, 866, 872, 911, 353,
	1002, 1008, 177, 198, 313, 1019, 891, 904, 245, 0,
	392, 980, 467, 1090, 278, 0, 966, 391, 315, 460,
	994, 1042, 466, 914, 442, 476, 481, 271, 947, 234,
	420, 261, 254, 896, 1012, 859, 284, 375, 249, 306,
	930, 986, 892, 241, 997, 973, 1024, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1020, 1007,
	1026, 887, 873, 879, 874, 903, 1043, 293, 285, 1027,
	1025, 905, 361, 224, 957, 950, 943, 1129, 470, 1059,
	257, 1009, 472, 180, 406, 405, 917, 292, 1010, 181,
	170, 385, 182, 302, 204, 1030, 485, 220, 309, 450,
	1089, 277, 352, 982, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1006, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1049, 322, 266, 270,
	286, 297, 981, 389, 427, 473, 975, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 1071,
	229, 407, 410, 484, 1004, 216, 237, 428, 210, 1038,
	1021, 968, 932, 938, 861, 0, 209, 933, 934, 935,
	936, 937, 1000, 894, 906, 886, 976, 885, 281, 992,
	463, 464, 246, 1096, 1053, 211, 1084, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 969, 956, 954, 862, 1037,
	967, 955, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 1080, 958, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 880, 1014, 454, 178, 381, 227,
	279, 267, 372, 1085, 1083, 1074, 1075, 308, 316, 996,
	1062, 360, 393, 233, 469, 421, 262, 1101, 0, 1103,
	1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097,
	192, 193, 1138, 1139, 194, 949, 1041, 863, 0, 1017,
	188, 189, 174, 179, 989, 1060, 1109, 242, 164, 1092,
	1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134,
	1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116,
	1117, 1124, 1125, 1132, 1127, 1128, 0, 945, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1121,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1015, 972, 0, 922, 924,
	923, 882, 884, 883, 881, 1064, 346, 1033, 851, 858,
	877, 888, 893, 899, 907, 908, 916, 921, 931, 940,
	941, 951, 964, 965, 971, 995, 998, 1011, 1016, 1023,
	1028, 1029, 471, 252, 948, 970, 1001, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 1081, 1082, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	928, 196, 0, 0, 202, 0, 203, 205, 915, 201,
	1032, 1057, 977, 991, 1830, 2009, 0, 1971, 448, 1864,
	2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357,
	1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811,
	1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893,
	1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477,
	0, 2020, 314, 1985, 0, 475, 423, 339, 0, 0,
	1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841,
	1927, 2016, 0, 0, 0, 0, 0, 3161, 3166, 0,
	3169, 3171, 3170, 0, 0, 0, 3163, 0, 1923, 2007,
	1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782,
	2030, 2000, 1825, 1826, 263, 0, 0, 0, 0, 0,
	0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948,
	1966, 1851, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 1916, 0, 0, 0, 1787, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955,
	1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004,
	1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195,
	1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975,
	1816, 1833, 245, 0, 392, 1928, 467, 0, 278, 0,
	1909, 391, 315, 460, 1943, 2006, 466, 1845, 442, 476,
	481, 271, 1885, 234, 420, 261, 254, 1824, 1965, 1770,
	284, 375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917,
	1980, 419, 457, 200, 334, 458, 480, 3164, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832,
	2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891,
	1878, 1956, 470, 2032, 257, 1961, 472, 0, 406, 405,
	1848, 292, 1962, 0, 0, 385, 3165, 302, 204, 1987,
	485, 220, 309, 450, 0, 277, 352, 1930, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1958, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2014, 322, 266, 270, 286, 297, 1929, 389, 427, 473,
	1920, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1954, 216,
	237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0,
	209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809,
	1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022, 211,
	1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912,
	1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1899, 425, 320,
	0, 206, 0, 424, 2012, 2038, 439, 226, 1803, 1969,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1945, 2035, 360, 393, 233, 469, 421,
	262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017,
	2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890,
	2005, 1778, 0, 1973, 0, 0, 0, 0, 1937, 2033,
	1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0,
	0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793,
	1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949,
	1823, 1882, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1908, 199, 212, 312, 2034, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1970,
	1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037,
	346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839,
	1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944,
	1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913,
	1951, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1861, 196, 0, 0, 202, 0,
	203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009,
	0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852,
	1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831,
	1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936,
	258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010,
	1883, 0, 0, 477, 0, 2020, 314, 1985, 0, 475,
	423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935,
	1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0,
	0, 3955, 3166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766,
	1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0,
	0, 0, 0, 0, 0, 0, 1877, 1901, 1953, 1859,
	0, 468, 1938, 1948, 1966, 1851, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1916, 0,
	0, 0, 1787, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998,
	1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028,
	1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960,
	0, 198, 313, 1975, 1816, 1833, 245, 0, 392, 1928,
	467, 0, 278, 0, 1909, 391, 315, 460, 1943, 2006,
	466, 1845, 442, 476, 481, 271, 1885, 234, 420, 261,
	254, 1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934,
	1817, 241, 1946, 1917, 1980, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1976, 1959, 1982, 1810,
	1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835,
	361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961,
	472, 0, 406, 405, 1848, 292, 1962, 0, 0, 385,
	0, 302, 204, 1987, 485, 220, 309, 450, 0, 277,
	352, 1930, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1958, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2014, 322, 266, 270, 286, 297,
	1929, 389, 427, 473, 1920, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1954, 216, 237, 428, 210, 2002, 1977, 1911,
	1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871,
	1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464,
	246, 1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025,
	2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1899, 425, 320, 0, 206, 0, 424, 2012, 2038,
	439, 226, 1803, 1969, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1945, 2035, 360,
	393, 233, 469, 421, 262, 1799, 0, 1802, 1797, 1800,
	1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0,
	1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0,
	0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776,
	0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0,
	2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921,
	1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1908, 199, 212,
	312, 2034, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805,
	1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812,
	1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892,
	1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986,
	471, 252, 1888, 1913, 1951, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1861, 196,
	0, 0, 202, 0, 203, 205, 1846, 201, 1993, 2029,
	1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0, 2020,
	314, 1985, 0, 475, 423, 339, 0, 0, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 2007, 1834, 0,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 3907, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 467, 0, 278, 0, 1909, 391,
	315, 460, 1943, 2006, 466, 1845, 442, 476, 481, 271,
	1885, 234, 420, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832, 2008, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	470, 2032, 257, 1961, 472, 0, 406, 405, 1848, 292,
	1962, 0, 0, 385, 0, 302, 204, 1987, 485, 220,
	309, 450, 0, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1958, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2014, 322,
	266, 270, 286, 297, 1929, 389, 427, 473, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1954, 216, 237, 428,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1803, 1969, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1945, 2035, 360, 393, 233, 469, 421, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778,
	0, 1973, 0, 0, 0, 0, 1937, 2033, 1850, 242,
	0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971,
	448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779,
	1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815,
	259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244,
	1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0,
	0, 477, 0, 2020, 314, 1985, 0, 475, 423, 339,
	0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918,
	2015, 1841, 1927, 2016, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0,
	1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0,
	0, 0, 0, 0, 1877, 1901, 1953, 1859, 0, 468,
	1938, 1948, 1966, 1851, 376, 283, 0, 0, 0, 0,
	0, 0, 3214, 0, 1820, 0, 1916, 0, 0, 0,
	1787, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1794, 1764,
	1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301,
	0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311,
	1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198,
	313, 1975, 1816, 1833, 245, 0, 392, 1928, 467, 0,
	278, 0, 1909, 391, 315, 460, 1943, 2006, 466, 1845,
	442, 476, 481, 271, 1885, 234, 420, 261, 254, 1824,
	1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817, 241,
	1946, 1917, 1980, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801,
	1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224,
	1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0,
	406, 405, 1848, 292, 1962, 0, 0, 385, 0, 302,
	204, 1987, 485, 220, 309, 450, 0, 277, 352, 1930,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1958, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2014, 322, 266, 270, 286, 297, 1929, 389,
	427, 473, 1920, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872,
	1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821,
	1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784,
	2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023, 459,
	2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1899,
	425, 320, 0, 206, 0, 424, 2012, 2038, 439, 226,
	1803, 1969, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1945, 2035, 360, 393, 233,
	469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903,
	1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996,
	0, 1890, 2005, 1778, 0, 1973, 0, 0, 0, 0,
	1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880,
	1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024,
	2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967,
	1940, 1949, 1823, 1882, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1908, 199, 212, 312, 2034,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806,
	1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827,
	1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907,
	1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252,
	1888, 1913, 1951, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1861, 196, 0, 0,
	202, 0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939,
	1830, 2009, 0, 1971, 448, 1864, 2013, 1813, 1843, 2031,
	1849, 1852, 1933, 1779, 1902, 357, 1840, 1780, 1763, 1818,
	1767, 1831, 1768, 1815, 259, 1811, 1974, 1905, 2011, 1884,
	1926, 1936, 258, 244, 1894, 1893, 1999, 1829, 1828, 1931,
	1988, 2010, 1883, 0, 0, 477, 0, 2020, 314, 1985,
	0, 475, 423, 339, 0, 0, 1879, 1994, 1900, 1963,
	1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1923, 2007, 1834, 0, 1874, 1932,
	2036, 1766, 1919, 0, 1771, 1782, 2030, 2000, 1825, 1826,
	263, 0, 0, 0, 0, 0, 0, 0, 1877, 1901,
	1953, 1859, 0, 468, 1938, 1948, 1966, 1851, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1916, 0, 0, 0, 1787, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	0, 0, 1794, 1764, 1822, 1955, 1765, 1762, 340, 1783,
	1968, 1998, 1860, 301, 0, 2004, 1858, 1857, 1942, 1788,
	1978, 2028, 1844, 311, 1786, 195, 1781, 1789, 1842, 353,
	1952, 1960, 0, 198, 313, 1975, 1816, 1833, 245, 0,
	392, 1928, 467, 0, 278, 0, 1909, 391, 315, 460,
	1943, 2006, 466, 1845, 442, 476, 481, 271, 1885, 234,
	420, 261, 254, 1824, 1965, 1770, 284, 375, 249, 306,
	1863, 1934, 1817, 241, 1946, 1917, 1980, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1976, 1959,
	1982, 1810, 1790, 1801, 1791, 1832, 2008, 293, 285, 1983,
	1981, 1835, 361, 224, 1898, 1891, 1878, 1956, 470, 2032,
	257, 1961, 472, 0, 406, 405, 1848, 292, 1962, 0,
	0, 385, 0, 302, 204, 1987, 485, 220, 309, 450,
	0, 277, 352, 1930, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1958, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2014, 322, 266, 270,
	286, 297, 1929, 389, 427, 473, 1920, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1954, 216, 237, 428, 210, 2002,
	1977, 1911, 1866, 1872, 1772, 0, 209, 1867, 1868, 1869,
	1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808, 281, 1941,
	463, 464, 246, 1784, 2022, 211, 1785, 2021, 349, 356,
	348, 2025, 2023, 459, 2003, 1912, 1897, 1895, 1777, 2001,
	1910, 1896, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1899, 425, 320, 0, 206, 0, 424,
	2012, 2038, 439, 226, 1803, 1969, 454, 2324, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1945,
	2035, 360, 393, 233, 469, 421, 262, 1799, 0, 1802,
	1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792,
	0, 0, 1995, 1996, 0, 1890, 2005, 1778, 0, 1973,
	0, 0, 0, 0, 1937, 2033, 1850, 242, 0, 1774,
	1775, 1776, 0, 1880, 1881, 0, 0, 1991, 1990, 1989,
	1992, 0, 2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887,
	1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1908,
	199, 212, 312, 2034, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1970, 1915, 0, 1854, 1856,
	1855, 1805, 1807, 1806, 1804, 2037, 346, 1997, 1761, 1769,
	1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875,
	1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979,
	1984, 1986, 471, 252, 1888, 1913, 1951, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1861, 196, 0, 0, 202, 0, 203, 205, 1846, 201,
	1993, 2029, 1925, 1939, 1830, 2009, 0, 1971, 448, 1864,
	2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779, 1902, 357,
	1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815, 259, 1811,
	1974, 1905, 2011, 1884, 1926, 1936, 258, 244, 1894, 1893,
	1999, 1829, 1828, 1931, 1988, 2010, 1883, 0, 0, 477,
	0, 2020, 314, 1985, 0, 475, 423, 339, 0, 0,
	1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841,
	1927, 2016, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1923, 2007,
	1834, 0, 1874, 1932, 2036, 1766, 1919, 0, 1771, 1782,
	2030, 2000, 1825, 1826, 263, 0, 0, 0, 0, 0,
	0, 0, 1877, 1901, 1953, 1859, 0, 468, 1938, 1948,
	1966, 1851, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 1916, 0, 0, 0, 1787, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 1794, 1764, 1822, 1955,
	1765, 1762, 340, 1783, 1968, 1998, 1860, 301, 0, 2004,
	1858, 1857, 1942, 1788, 1978, 2028, 1844, 311, 1786, 195,
	1781, 1789, 1842, 353, 1952, 1960, 0, 198, 313, 1975,
	1816, 1833, 245, 0, 392, 1928, 467, 0, 278, 0,
	1909, 391, 315, 460, 1943, 2006, 466, 1845, 442, 476,
	481, 271, 1885, 234, 420, 261, 254, 1824, 1965, 1770,
	284, 375, 249, 306, 1863, 1934, 1817, 241, 1946, 1917,
	1980, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1976, 1959, 1982, 1810, 1790, 1801, 1791, 1832,
	2008, 293, 285, 1983, 1981, 1835, 361, 224, 1898, 1891,
	1878, 1956, 470, 2032, 257, 1961, 472, 0, 406, 405,
	1848, 292, 1962, 0, 0, 385, 0, 302, 204, 1987,
	485, 220, 309, 450, 0, 277, 352, 1930, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1958, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2014, 322, 266, 270, 286, 297, 1929, 389, 427, 473,
	1920, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1954, 216,
	237, 428, 210, 2002, 1977, 1911, 1866, 1872, 1772, 0,
	209, 1867, 1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809,
	1924, 1808, 281, 1941, 463, 464, 246, 1784, 2022, 211,
	1785, 2021, 349, 356, 348, 2025, 2023, 459, 2003, 1912,
	1897, 1895, 1777, 2001, 1910, 1896, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1899, 425, 320,
	0, 206, 0, 424, 2012, 2038, 439, 226, 1803, 1969,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1945, 2035, 360, 393, 233, 469, 421,
	262, 1799, 0, 1802, 1797, 1800, 1798, 1903, 1904, 2017,
	2018, 2019, 1957, 1792, 0, 0, 1995, 1996, 0, 1890,
	2005, 1778, 0, 1973, 0, 0, 0, 0, 1937, 2033,
	1850, 242, 0, 1774, 1775, 1776, 0, 1880, 1881, 0,
	0, 1991, 1990, 1989, 1992, 0, 2026, 2024, 2027, 1793,
	1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949,
	1823, 1882, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1908, 199, 212, 312, 2034, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1970,
	1915, 0, 1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037,
	346, 1997, 1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839,
	1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944,
	1947, 1964, 1972, 1979, 1984, 1986, 471, 252, 1888, 1913,
	1951, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 4079, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1861, 196, 0, 0, 202, 0,
	203, 205, 1846, 201, 1993, 2029, 1925, 1939, 1830, 2009,
	0, 1971, 448, 1864, 2013, 1813, 1843, 2031, 1849, 1852,
	1933, 1779, 1902, 357, 1840, 1780, 1763, 1818, 1767, 1831,
	1768, 1815, 259, 1811, 1974, 1905, 2011, 1884, 1926, 1936,
	258, 244, 1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010,
	1883, 0, 0, 477, 0, 2020, 314, 1985, 0, 475,
	423, 339, 0, 0, 1879, 1994, 1900, 1963, 1862, 1935,
	1795, 1918, 2015, 1841, 1927, 2016, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 2007, 1834, 0, 1874, 1932, 2036, 1766,
	1919, 0, 1771, 1782, 2030, 2000, 1825, 1826, 263, 0,
	0, 0, 0, 0, 0, 0, 1877, 1901, 1953, 1859,
	0, 468, 1938, 1948, 1966, 1851, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1916, 0,
	0, 0, 1787, 1773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	1794, 1764, 1822, 1955, 1765, 1762, 340, 1783, 1968, 1998,
	1860, 301, 0, 2004, 1858, 1857, 1942, 1788, 1978, 2028,
	1844, 311, 1786, 195, 1781, 1789, 1842, 353, 1952, 1960,
	0, 198, 313, 1975, 1816, 1833, 245, 0, 392, 1928,
	467, 0, 278, 0, 1909, 391, 315, 460, 1943, 2006,
	466, 1845, 442, 476, 481, 271, 1885, 234, 420, 261,
	254, 1824, 1965, 1770, 284, 375, 249, 306, 1863, 1934,
	1817, 241, 1946, 1917, 1980, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1976, 1959, 1982, 1810,
	1790, 1801, 1791, 1832, 2008, 293, 285, 1983, 1981, 1835,
	361, 224, 1898, 1891, 1878, 1956, 470, 2032, 257, 1961,
	472, 0, 406, 405, 1848, 292, 1962, 0, 0, 385,
	0, 302, 204, 1987, 485, 220, 309, 450, 0, 277,
	352, 1930, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1958, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2014, 322, 266, 270, 286, 297,
	1929, 389, 427, 473, 1920, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1954, 216, 237, 428, 210, 2002, 1977, 1911,
	1866, 1872, 1772, 0, 209, 1867, 1868, 1869, 1870, 1871,
	1950, 1821, 1837, 1809, 1924, 1808, 281, 1941, 463, 464,
	246, 1784, 2022, 211, 1785, 2021, 349, 356, 348, 2025,
	2023, 459, 2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1899, 425, 320, 0, 206, 0, 424, 2012, 2038,
	439, 226, 1803, 1969, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1945, 2035, 360,
	393, 233, 469, 421, 262, 1799, 0, 1802, 1797, 1800,
	1798, 1903, 1904, 2017, 2018, 2019, 1957, 1792, 0, 0,
	1995, 1996, 0, 1890, 2005, 1778, 0, 1973, 0, 0,
	0, 0, 1937, 2033, 1850, 242, 0, 1774, 1775, 1776,
	0, 1880, 1881, 0, 0, 1991, 1990, 1989, 1992, 0,
	2026, 2024, 2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921,
	1922, 1967, 1940, 1949, 1823, 1882, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1908, 199, 212,
	312, 2034, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1970, 1915, 0, 1854, 1856, 1855, 1805,
	1807, 1806, 1804, 2037, 346, 1997, 1761, 1769, 1796, 1812,
	1819, 1827, 1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892,
	1906, 1907, 1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986,
	471, 252, 1888, 1913, 1951, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1861, 196,
	0, 0, 202, 0, 203, 205, 1846, 201, 1993, 2029,
	1925, 1939, 1830, 2009, 0, 1971, 448, 1864, 2013, 1813,
	1843, 2031, 1849, 1852, 1933, 1779, 1902, 357, 1840, 1780,
	1763, 1818, 1767, 1831, 1768, 1815, 259, 1811, 1974, 1905,
	2011, 1884, 1926, 1936, 258, 244, 1894, 1893, 1999, 1829,
	1828, 1931, 1988, 2010, 1883, 0, 0, 477, 0, 2020,
	314, 1985, 0, 475, 423, 339, 0, 0, 1879, 1994,
	1900, 1963, 1862, 1935, 1795, 1918, 2015, 1841, 1927, 2016,
	0, 0, 0, 0, 0, 0, 4358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 2007, 1834, 0,
	1874, 1932, 2036, 1766, 1919, 0, 1771, 1782, 2030, 2000,
	1825, 1826, 263, 0, 0, 0, 0, 0, 0, 0,
	1877, 1901, 1953, 1859, 0, 468, 1938, 1948, 1966, 1851,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 1916, 0, 0, 0, 1787, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 1794, 1764, 1822, 1955, 1765, 1762,
	340, 1783, 1968, 1998, 1860, 301, 0, 2004, 1858, 1857,
	1942, 1788, 1978, 2028, 1844, 311, 1786, 195, 1781, 1789,
	1842, 353, 1952, 1960, 0, 198, 313, 1975, 1816, 1833,
	245, 0, 392, 1928, 467, 0, 278, 0, 1909, 391,
	315, 460, 1943, 2006, 466, 1845, 442, 476, 481, 271,
	1885, 234, 420, 261, 254, 1824, 1965, 1770, 284, 375,
	249, 306, 1863, 1934, 1817, 241, 1946, 1917, 1980, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1976, 1959, 1982, 1810, 1790, 1801, 4361, 4362, 4363, 293,
	285, 1983, 1981, 1835, 361, 224, 1898, 1891, 1878, 1956,
	470, 2032, 257, 1961, 472, 0, 406, 405, 1848, 292,
	1962, 0, 0, 385, 0, 302, 204, 1987, 485, 220,
	309, 450, 0, 277, 352, 1930, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1958, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2014, 322,
	266, 270, 286, 297, 1929, 389, 427, 473, 1920, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1954, 216, 237, 428,
	210, 2002, 1977, 1911, 1866, 1872, 1772, 0, 209, 1867,
	1868, 1869, 1870, 1871, 1950, 1821, 1837, 1809, 1924, 1808,
	281, 1941, 463, 464, 246, 1784, 2022, 211, 1785, 2021,
	349, 356, 348, 2025, 2023, 459, 2003, 1912, 1897, 1895,
	1777, 2001, 1910, 1896, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1899, 425, 320, 0, 206,
	0, 424, 2012, 2038, 439, 226, 1803, 1969, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1945, 2035, 360, 393, 233, 469, 421, 262, 1799,
	0, 1802, 1797, 1800, 1798, 1903, 1904, 2017, 2018, 2019,
	1957, 1792, 0, 0, 1995, 1996, 0, 1890, 2005, 1778,
	0, 1973, 0, 0, 0, 0, 1937, 2033, 1850, 242,
	0, 1774, 1775, 1776, 0, 1880, 1881, 0, 0, 1991,
	1990, 1989, 1992, 0, 2026, 2024, 2027, 1793, 1814, 1836,
	1886, 1887, 1889, 1921, 1922, 1967, 1940, 1949, 1823, 1882,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1908, 199, 212, 312, 2034, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1970, 1915, 0,
	1854, 1856, 1855, 1805, 1807, 1806, 1804, 2037, 346, 1997,
	1761, 1769, 1796, 1812, 1819, 1827, 1838, 1839, 1847, 1853,
	1865, 1875, 1876, 1892, 1906, 1907, 1914, 1944, 1947, 1964,
	1972, 1979, 1984, 1986, 471, 252, 1888, 1913, 1951, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1861, 196, 0, 0, 202, 0, 203, 205,
	1846, 201, 1993, 2029, 1925, 1939, 1830, 2009, 0, 1971,
	448, 1864, 2013, 1813, 1843, 2031, 1849, 1852, 1933, 1779,
	1902, 357, 1840, 1780, 1763, 1818, 1767, 1831, 1768, 1815,
	259, 1811, 1974, 1905, 2011, 1884, 1926, 1936, 258, 244,
	1894, 1893, 1999, 1829, 1828, 1931, 1988, 2010, 1883, 0,
	0, 477, 0, 2020, 314, 1985, 0, 475, 423, 339,
	0, 0, 1879, 1994, 1900, 1963, 1862, 1935, 1795, 1918,
	2015, 1841, 1927, 2016, 0, 0, 0, 0, 0, 0,
	3166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1923, 2007, 1834, 0, 1874, 1932, 2036, 1766, 1919, 0,
	1771, 1782, 2030, 2000, 1825, 1826, 263, 0, 0, 0,
	0, 0, 0, 0, 1877, 1901, 1953, 1859, 0, 468,
	1938, 1948, 1966, 1851, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 1916, 0, 0, 0,
	1787, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 1794, 1764,
	1822, 1955, 1765, 1762, 340, 1783, 1968, 1998, 1860, 301,
	0, 2004, 1858, 1857, 1942, 1788, 1978, 2028, 1844, 311,
	1786, 195, 1781, 1789, 1842, 353, 1952, 1960, 0, 198,
	313, 1975, 1816, 1833, 245, 0, 392, 1928, 467, 0,
	278, 0, 1909, 391, 315, 460, 1943, 2006, 466, 1845,
	442, 476, 481, 271, 1885, 234, 420, 261, 254, 1824,
	1965, 1770, 284, 375, 249, 306, 1863, 1934, 1817, 241,
	1946, 1917, 1980, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1976, 1959, 1982, 1810, 1790, 1801,
	1791, 1832, 2008, 293, 285, 1983, 1981, 1835, 361, 224,
	1898, 1891, 1878, 1956, 470, 2032, 257, 1961, 472, 0,
	406, 405, 1848, 292, 1962, 0, 0, 385, 0, 302,
	204, 1987, 485, 220, 309, 450, 0, 277, 352, 1930,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1958, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2014, 322, 266, 270, 286, 297, 1929, 389,
	427, 473, 1920, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1954, 216, 237, 428, 210, 2002, 1977, 1911, 1866, 1872,
	1772, 0, 209, 1867, 1868, 1869, 1870, 1871, 1950, 1821,
	1837, 1809, 1924, 1808, 281, 1941, 463, 464, 246, 1784,
	2022, 211, 1785, 2021, 349, 356, 348, 2025, 2023, 459,
	2003, 1912, 1897, 1895, 1777, 2001, 1910, 1896, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1899,
	425, 320, 0, 206, 0, 424, 2012, 2038, 439, 226,
	1803, 1969, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1945, 2035, 360, 393, 233,
	469, 421, 262, 1799, 0, 1802, 1797, 1800, 1798, 1903,
	1904, 2017, 2018, 2019, 1957, 1792, 0, 0, 1995, 1996,
	0, 1890, 2005, 1778, 0, 1973, 0, 0, 0, 0,
	1937, 2033, 1850, 242, 0, 1774, 1775, 1776, 0, 1880,
	1881, 0, 0, 1991, 1990, 1989, 1992, 0, 2026, 2024,
	2027, 1793, 1814, 1836, 1886, 1887, 1889, 1921, 1922, 1967,
	1940, 1949, 1823, 1882, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1908, 199, 212, 312, 2034,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1970, 1915, 0, 1854, 1856, 1855, 1805, 1807, 1806,
	1804, 2037, 346, 1997, 1761, 1769, 1796, 1812, 1819, 1827,
	1838, 1839, 1847, 1853, 1865, 1875, 1876, 1892, 1906, 1907,
	1914, 1944, 1947, 1964, 1972, 1979, 1984, 1986, 471, 252,
	1888, 1913, 1951, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1861, 196, 0, 0,
	202, 0, 203, 205, 1846, 201, 1993, 2029, 1925, 1939,
	588, 448, 582, 593, 575, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 639, 0, 0, 0, 0,
	0, 259, 0, 0, 583, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	636, 637, 0, 732, 0, 733, 735, 736, 737, 738,
	0, 0, 0, 734, 2316, 3382, 3383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 3377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 0, 574,
	573, 576, 0, 0, 0, 340, 0, 0, 0, 581,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 585, 0, 0,
	198, 313, 589, 0, 0, 245, 0, 392, 2313, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 592, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	577, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 580, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 642, 408, 455, 222, 426, 578, 579, 586,
	587, 590, 591, 594, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	2314, 2315, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 3394, 1066, 0,
	3384, 3385, 3387, 3395, 3396, 3386, 3388, 3389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3390, 3391, 3392, 3393, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 584, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 0, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 588, 448, 582,
	593, 575, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 567, 0, 0, 0, 0, 0, 259, 0,
	0, 583, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 574, 573, 576, 0,
	0, 0, 340, 0, 0, 0, 581, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 585, 0, 0, 198, 313, 589,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 592, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 577, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 0, 406, 405,
	580, 292, 0, 0, 0, 385, 0, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 570,
	408, 455, 222, 426, 578, 579, 586, 587, 590, 591,
	594, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	584, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 2466, 2470, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 2469, 301, 191, 0, 0, 0, 2462, 0,
	2463, 2465, 2464, 311, 1165, 195, 0, 2460, 2468, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 1159,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 1478, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1480,
	1479, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 1474, 1475, 1473, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 1476, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1165, 195, 0, 1161,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 1159, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 3543, 195, 0, 0, 3542, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3510, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1165, 195,
	0, 0, 2468, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2917, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1165, 195, 0, 0, 2468, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1480,
	1479, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 2270, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 0, 196, 42, 448,
	202, 0, 203, 205, 0, 201, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 88, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 96, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 109, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 674,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3501,
	0, 0, 0, 0, 0, 3503, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 2044, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2042, 2044, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1165, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3355,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3503, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1202,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3211, 681, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 674, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 674, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 547, 544, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 2540, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 2426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 0, 196, 0, 0, 202, 0, 203, 205, 448,
	201, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 155, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 1491, 1490, 1500, 1501, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1492, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 654, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 1163, 733, 735, 736, 737,
	738, 0, 0, 0, 734, 2316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 729,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 730, 731, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 4457, 0, 0, 0, 0,
	0, 259, 4455, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 4456, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2989, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 2990, 2991, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1626, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 2470, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 2469, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3557, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3555, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 3553, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 3551,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 3546, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3533, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3531, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 3461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3452,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 2590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	2746, 2745, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 42,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 71, 0, 0,
	4269, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4262, 0, 0, 0, 0,
	4606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 62, 92, 91, 0, 0,
	0, 89, 57, 0, 0, 0, 71, 4269, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4265, 4262, 0,
	0, 0, 0, 4605, 0, 0, 0, 4274, 4266, 4267,
	4268, 4272, 4273, 4270, 4607, 4271, 0, 4275, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 89, 4602, 0,
	0, 0, 0, 4269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 69, 70,
	0, 4265, 0, 0, 4262, 0, 60, 0, 0, 0,
	0, 4274, 4266, 4267, 4268, 4272, 4273, 4270, 0, 4271,
	0, 4275, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4263, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 4276, 4264, 0, 66, 67, 73, 0,
	74, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 4276, 4264, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4274, 4266, 4267, 4268, 4272, 4273,
	4270, 0, 4271, 0, 4275, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 69, 70, 0,
	4265, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	4274, 4266, 4267, 4268, 4272, 4273, 4270, 0, 4271, 0,
	4275, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 71, 0, 0, 0, 0, 0, 93, 0, 60,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	4276, 4264, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 71, 0, 0, 4269, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 59, 61, 4262,
	0, 0, 0, 87, 4594, 0, 4276, 4264, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 4262, 0, 0, 0, 0, 4591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	59, 61, 0, 0, 0, 4263, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 89, 0, 0, 71, 0, 0, 4269, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 85, 0,
	0, 0, 69, 70, 0, 4265, 59, 61, 4262, 0,
	0, 0, 87, 4508, 0, 4274, 4266, 4267, 4268, 4272,
	4273, 4270, 0, 4271, 0, 4275, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 89, 0, 0, 0, 0,
	0, 4269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 84, 69, 70, 0, 4265,
	0, 0, 4262, 0, 60, 0, 0, 0, 0, 4274,
	4266, 4267, 4268, 4272, 4273, 4270, 0, 4271, 0, 4275,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 84,
	4263, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4276, 4264, 0, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 4276, 4264, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4274, 4266, 4267, 4268, 4272, 4273,
	4270, 0, 4271, 0, 4275, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 69, 70, 0, 4265, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 4274, 4266,
	4267, 4268, 4272, 4273, 4270, 4505, 4271, 0, 4275, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 71,
	0, 0, 0, 0, 0, 93, 0, 60, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	4276, 4264, 0, 66, 67, 73, 0, 74, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 71, 0, 0, 4269, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 4262, 0, 0,
	0, 87, 4500, 0, 4276, 4264, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 4262, 0, 0, 0, 0, 4498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	59, 61, 0, 4263, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 89,
	0, 0, 71, 0, 0, 4269, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 85, 0,
	69, 70, 0, 4265, 59, 61, 4262, 0, 0, 0,
	87, 4378, 0, 4274, 4266, 4267, 4268, 4272, 4273, 4270,
	0, 4271, 0, 4275, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 89, 0, 0, 0, 0, 0, 4269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 84, 69, 70, 0, 4265, 0, 0,
	4262, 0, 60, 0, 0, 0, 0, 4274, 4266, 4267,
	4268, 4272, 4273, 4270, 0, 4271, 0, 4275, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 84, 4263, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 4276,
	4264, 0, 66, 67, 73, 0, 74, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 4276, 4264, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4274, 4266, 4267, 4268, 4272, 4273, 4270, 0,
	4271, 0, 4275, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 69, 70, 0, 4265, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 4274, 4266, 4267, 4268,
	4272, 4273, 4270, 0, 4271, 0, 4275, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 4276, 4264,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 4276, 4264, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85,
}

var yyPact = [...]int{
	8695, -1000, -495, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3137, -1000, 3137, 319, -1000, 487, -1000, 1665, 689,
	-1000, -1000, -1000, -1000, -1000, 589, 125, 58423, 1149, 53263,
	79031, -245, 4806, 78295, 171, -1000, 171, 429, 55471, 852,
	886, 77559, 2923, 2185, 185, 36, 32, 242, 39276, 38529,
	341, 215, 231, 223, 199, 1240, -1000, 60631, 840, -1000,
	264, -1000, -1000, -1000, -1000, -1000, 54735, 3198, 3205, 3198,
	-1000, 3083, 3133, -1000, -1000, 3083, 2378, 2378, -1000, 60631,
	13650, -1000, -1000, -1000, -1000, -1000, 30992, -1000, 1340, -1000,
	59159, 41484, 3137, -1000, 1126, 1113, -91, 1057, 1057, 962,
	1057, 1057, -460, 1147, -1000, 824, 1672, -1000, -1000, -1000,
	-1000, 1663, 59159, 66519, 1144, 76087, 1058, 1058, 1058, 1058,
	1058, 1058, 1058, 1058, 52527, 59159, -1000, 1264, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 59159, 3184, 3183,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2714, 2712, 51791, 651, 2979, 1660, 336, 1660, -1000,
	-1000, 1704, -1000, 904, 892, 883, 878, 950, 869, 23,
	1606, 1666, 3080, -1000, 2659, 3083, 3083, 1606, -1000, 865,
	-1000, -1000, -1000, -1000, -1000, -1000, 1259, -1000, -1000, 1731,
	1731, 597, 1110, 949, 967, 949, 3031, 1662, 2978, 2977,
	2229, 2974, 1401, 2970, 2698, -1000, 1256, -1000, -1000, 77,
	-1000, 2183, 59159, -1000, -1000, 2056, 2055, 706, 2567, 1207,
	2778, -1000, -1000, 713, 1015, 2685, 801, 2685, 2685, 2685,
	405, 2685, 2685, 31, 2685, 2685, 2685, 348, 2685, 371,
	2685, 2685, 2685, 2685, 2685, -1000, 2367, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 799,
	2566, 2616, 2777, 225, -1000, -145, 201, 3065, 955, -1000,
	-1000, -1000, 335, 1340, 61367, 2646, -1000, 2659, -1000, -1000,
	-1000, 2656, 2659, -1000, 2129, 1142, 1058, 672, -1000, 559,
	-1000, -1000, -1000, 3012, 2659, 45167, -1000, -1000, 2142, -1000,
	2659, 2659, 1340, 3063, 1340, 1340, 3061, 3059, 1340, 2975,
	27976, 18174, 2829, 1793, -1000, -1000, -1000, -1000, 1340, 3182,
	-1000, 40748, 1254, -1000, 18174, 3944, 2659, 2659, -1000, 1197,
	1278, -1000, 1164, 1234, -1000, -1000, 18928, 18928, 18928, 18928,
	18928, 18928, 18928, -1000, -1000, -1000, -1000, -1000, -1000, 2348,
	2347, 2346, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2659, 1253, 1251, 1249, 2659, 2659, 2659, 2659,
	2659, -1000, 16666, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2659, 2659, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659,
	18174, 2659, 2659, 2659, 2659, 2659, -1000, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659,
	2659, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2659, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2659, 2659, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2659, 1066, 1066, 57687,
	2655, -66, 30238, -1000, -1000, -1000, -1000, 28730, 64311, 1554,
	-1000, -1000, -1000, -1000, 2968, -1000, -1000, 1237, 1234, 1197,
	1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3137,
	346, -1000, 2532, -1000, -1000, 1529, 1529, 1529, 1529, 1529,
	1529, 48111, -1000, -1000, -1000, 2697, 3083, -1000, 76087, 59159,
	972, 2180, 1708, 2176, 77559, 77559, 1057, -1000, 695, 66519,
	66519, -366, 1057, 806, 66519, 831, 2653, 1105, 2652, 1103,
	2360, 1058, 2774, 59159, 3010, 2175, 2173, 77559, 77559, 66519,
	66519, 77559, -1000, -1000, -1000, 27222, -1000, 1344, 2651, 47375,
	46639, 51055, 51055, -1000, -1000, -1000, 854, -1000, 1660, -1000,
	5819, 18174, 1057, 1057, 59159, 59159, 59159, 59159, 59159, -1000,
	59159, -1000, -1000, 1660, -1000, -1000, 1660, 1660, 1660, 1606,
	3180, 1606, -1000, -1000, -1000, 1660, 78295, 78295, 18174, -1000,
	18928, 65783, 1362, -1000, -1000, 1660, -1000, 78295, 1003, 1003,
	1003, -1000, 2168, 556, 365, -1000, 949, 346, -1000, -1000,
	2931, 3056, 3053, 2153, 1401, 1401, -1000, 2356, 1401, 2642,
	-1000, 1653, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1401, 3031, 17420, 76087, -475, -1000,
	-1000, 2650, -1000, 518, -1000, -1000, 997, 2772, 997, 7666,
	66519, 66519, 66519, -1000, 2685, 76087, -1000, 2685, 2685, 2685,
	30, 2685, 2685, -1000, -1000, 2685, -1000, -1000, -1000, 2685,
	-1000, -1000, 2685, -1000, -1000, -1000, 2685, 2685, -1000, 2685,
	2685, -1000, -1000, -1000, -1000, -1000, 66519, 997, 432, 2648,
	997, 66519, 66519, 1101, 205, 5, 156, -1000, -1000, -1000,
	-1000, -1000, -1000, 330, 328, 327, 326, -1000, -1000, -1000,
	-1000, 325, 284, -1000, -1000, 59159, 59159, 887, -1000, 2646,
	61367, 3039, 22698, 840, -1000, 18174, 2986, -1000, 2986, -1000,
	-1000, -1000, 380, -1000, 59159, 66519, 77559, 54735, 54735, 54735,
	54735, -1000, 2824, 2820, -1000, 2796, 2793, 2789, 505, 61367,
	-1000, 3012, 319, 2530, 2378, 2378, 559, 45167, -1000, 2659,
	-1000, 61367, 1238, 1120, 1119, 1112, 2931, -1000, -1000, -1000,
	-1000, -1000, 2331, 2240, 1846, 12896, 18928, -1000, -1000, -1000,
	-1000, -1000, 3198, 3198, -1000, -1000, -1000, -1000, -1000, -1000,
	1744, 3193, 1542, 2614, -1000, -1000, -1000, 2645, -1000, 2030,
	1232, 2017, 1803, -1000, -1000, -1000, -1000, -1000, -1000, 13650,
	-1000, 59159, -1000, 18174, 18174, 18174, 1814, -1000, 44428, -1000,
	-1000, -1000, 23452, 1551, 18928, 1809, 1700, 18928, 18928, 18928,
	18928, 18928, 18928, 18928, 18928, 18928, 18928, 18928, 18928, 18928,
	18928, 18928, 1543, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2152, -1000, 346, 36270, 12896, 36270, 1092, 1092, 76087,
	1328, 1328, 1328, 1328, 1328, 1328, 59895, -1000, -1000, -1000,
	3037, 34762, 76087, 36270, 3037, 3037, 3037, 3037, 3037, 2528,
	2155, 60631, 16666, 54735, 12896, 12896, 12896, 2378, 18174, 18174,
	12896, 18928, 12896, 15912, 15158, 20436, 12896, 12896, 3037, 1671,
	2155, 26468, 12896, -1000, 2378, -1000, -1000, -1000, -1000, 2029,
	-1000, -1000, -320, -320, -320, 392, 12896, 12896, 12896, 12896,
	2378, 2378, 12896, 12896, 12896, 12896, 12896, 12896, 2378, 2378,
	2378, 12896, 12896, 12896, 12896, 12896, 12896, 12896, 12896, 12896,
	12896, 12896, 12896, -1000, -1000, -1000, 1825, 56943, 54735, 59159,
	2606, 2598, -1000, -1000, 1221, 29484, 2628, -1000, -32, -15,
	-66, -1000, -1000, 1267, -1000, -1000, -1000, -1000, 14404, -1000,
	-1000, -1000, 24206, 3083, -1000, 40012, -1000, 61, -1000, -1000,
	-1000, 2673, -1000, 2675, 115, 590, 2675, 101, 100, 2675,
	2675, 2675, -1000, -1000, -1000, -1000, 120, -1000, -1000, -1000,
	-1000, -1000, 2689, 2688, -1000, 2673, 2673, 2673, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2680, 555, 2674, 2674, 2674, 2674, 2674, -1000,
	-1000, -1000, -1000, -1000, 1025, -1000, -1000, -1000, 18174, 2975,
	2897, 2700, 2659, 1093, -461, 806, 2986, 3007, 2986, 888,
	-1000, 1220, 2686, 77559, 874, 2559, -1000, 446, 2525, 1170,
	56207, -1000, -1000, -1000, -1000, -1000, 59159, 59159, 66519, 66519,
	66519, 59159, 59159, 2644, -1000, -1000, -1000, -1000, -1000, -1000,
	2570, -1000, 2525, -1000, -1000, 1219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -433,
	-434, 59159, -1000, -1000, -1000, -1000, -1000, -1000, 2643, -1000,
	2643, -1000, -1000, -1000, 2355, 2155, 2150, 2149, 3031, -1000,
	-1000, -1000, -1000, 1655, -1000, -1000, -1000, -1000, 1660, 59159,
	3031, -1000, -1000, -1000, 2155, 1920, 2708, 2659, 2378, -1000,
	-1000, -1000, 168, -1000, 166, -1000, -1000, -1000, 2145, -1000,
	-1000, -1000, -1000, -1000, 365, -1000, 18928, 2929, 2928, -1000,
	2642, 2642, -1000, 2642, 1401, 62103, 2642, -1000, -1000, 2511,
	-1000, 305, 2353, 59159, -1000, 61367, 76, -1000, -50, 74615,
	-1000, -1000, -1000, 997, 74615, -1000, 348, 282, -1000, 1100,
	-1000, 2509, -1000, -1000, -1000, -1000, 2685, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 74615, 393, 431,
	74615, 2570, 3179, 258, 2640, -1000, 1652, 1649, -1000, -1000,
	154, -1000, -1000, -1000, -1000, 3076, -1000, 279, 279, 2350,
	18928, -1000, 2659, 2402, -1000, 1203, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2659, -1000, -1000, -1000, -1000, 2956, 1554,
	1554, 1554, 6928, 446, 2771, 2684, 2758, 603, -1000, -1000,
	-1000, -1000, 2819, -1000, 2805, 2797, -1000, -1000, -1000, 2665,
	61367, 54735, -1000, -1000, -1000, 2378, 76087, 1185, -1000, 61367,
	2659, 2659, 2659, 18928, 18928, 1511, -1000, 18928, 18928, 1491,
	-1000, 18928, 18928, 1457, -1000, 2378, 2637, -1000, -1000, 2155,
	1201, 5352, -1000, 75351, 69, 2830, 27976, 27976, 18174, -1000,
	-1000, -1000, 24206, 3077, -1000, 2844, 2843, 3178, -1000, -1000,
	-1000, 1551, 1591, 1644, -1000, -1000, 1859, -1000, -1000, -1000,
	-1000, -1000, 1199, 2659, -1000, -1000, -1000, -1000, -1000, -1000,
	5435, -1000, -1000, -1000, -1000, 1809, 18928, 18928, 18928, 1920,
	5435, 5337, 2522, 2425, 1328, 1448, 1448, 1359, 1359, 1359,
	1359, 1359, 1842, 1842, -1000, -1000, -1000, -1000, 2378, -1000,
	2506, -1000, -1000, 2348, 2347, 2346, -1000, -1000, -1000, -1000,
	12896, -1000, -1000, -1000, -1000, -1000, -1000, 12896, 12896, 12896,
	12896, 12896, 18174, -1000, 2506, 2506, 2506, -1000, 1845, 1771,
	2363, 5280, 2506, 1450, 3177, 2506, 1357, 3176, 2506, 2278,
	18928, 18928, 18928, 2506, 2506, 12896, 1748, -1000, 18174, 2378,
	1289, 2378, 1197, 1190, 2506, -1000, 2378, 2633, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2632,
	3175, 2629, -1000, -1000, -1000, -1000, 2506, 2378, 2506, 2506,
	-113, -113, 2378, 2506, 2378, 2506, 2506, 2378, -113, -113,
	-113, 2506, 2506, 2506, 2506, 2506, 2506, 2506, 2506, 2506,
	2506, 2506, 2506, -1000, 2378, 1434, 59159, -1000, 2565, 1434,
	2548, 54735, -1000, -1000, 54735, 78295, 25714, -1000, 28730, -66,
	-45, -1000, -1000, 2628, -1000, -1000, 1641, -1000, -1000, 2345,
	2155, -1000, 1189, 2975, 417, -1000, -1000, -1000, -1000, 2681,
	43692, -1000, 2871, 1222, 1222, 1222, 65047, 76823, 2869, -1000,
	-1000, 370, 49, -1000, -1000, -1000, 2054, -1000, 339, 515,
	2675, -1000, -1000, -1000, 2675, 2675, -1000, 2675, 2675, -1000,
	-1000, -1000, -1000, 2344, 2344, -1000, -1000, -1000, -1000, 2050,
	-1000, 2680, -1000, 2049, -1000, -1000, -1000, -1000, 370, 370,
	370, 370, 370, -1000, 2236, -1000, 2757, 76087, 3032, 59159,
	-368, -1000, -1000, -1000, 3163, -1000, -1000, 76087, 63575, 2754,
	-1000, -1000, 367, 66519, 437, 754, 360, -1000, 1707, -1000,
	-1000, 1099, -1000, 1098, -1000, -1000, 1109, -1000, 59159, 66519,
	76087, 2753, 2752, -1000, 51055, -1000, -1000, -1000, -1000, 3144,
	2138, 2131, -1000, 1606, 1660, -1000, 18928, 66519, -1000, 944,
	-1000, -1000, -1000, -1000, 5435, 18928, 18928, -1000, -1000, -1000,
	-1000, 1738, -1000, -1000, -1000, -1000, 4, -1000, -1000, 1097,
	1187, 1182, 74615, 1096, -1000, 375, 66519, -1000, 76087, -1000,
	3172, 3169, 390, 3155, 66519, 2627, -1000, 1648, 1645, 1639,
	1638, 1635, 1629, 1601, 1583, 205, 2679, 2678, -1000, -1000,
	272, -1000, -34, -1000, -1000, 5435, -1000, -1000, 22698, 36270,
	-1000, 1554, 1636, -1000, 1633, 2343, 1852, 1621, -1000, -1000,
	-1000, 3132, 1719, 1896, 1034, 1554, 1033, 451, 1095, 2940,
	2938, 600, 599, -1000, 1554, 1033, 1277, 625, -1000, 1470,
	1467, 1466, 1455, 1452, 1446, 1442, 1439, 616, -369, -1000,
	1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, -195, -196,
	1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
	1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
	1554, 1554, 1554, 31746, 1554, 1554, -1000, 1156, 654, -1000,
	-1000, 18174, 2676, -1000, 18174, -1000, -1000, -1000, -1000, -1000,
	76087, 2665, 559, -1000, 2400, -1000, -1000, 1185, 76087, 76087,
	76087, 5259, 2109, 2659, 5242, 2022, 2659, 4056, 1598, 2659,
	3012, 12896, 21944, 2342, 2626, 2341, 2338, -1000, 57, 2834,
	-1000, -1000, -1000, 59159, -1000, -1000, -1000, -1000, 3144, 53999,
	13650, -1000, -1000, -1000, -1000, 34008, 12896, -1000, 1920, 5435,
	3798, -1000, 18928, -1000, -1000, 2378, 2506, 2506, 2506, 2506,
	2506, 2155, -1000, -1000, -1000, 632, 1543, 632, -1000, 1543,
	18928, -1000, 18928, 18928, -1000, 18928, 18928, -1000, -1000, 18928,
	5048, 4998, 4924, -254, -1000, 2615, 1604, -1000, 18174, 2221,
	-1000, -1000, -1000, -1000, -1000, 18928, 18928, 18928, 18928, -1000,
	-1000, -1000, -1000, -1000, 73879, -1000, -113, -113, -113, -113,
	-113, -113, -1000, -1000, -1000, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -113, -1000, 438, 2659,
	-1000, 24960, 3144, 54735, 2549, 2549, -1000, 1179, -1000, -1000,
	-1000, -41, -75, -1000, -1000, -1000, -1000, -1000, 36270, -1000,
	-1000, -1000, 4910, -1000, 1554, 1554, 1554, 394, 1554, 1554,
	1554, 1554, 1554, -197, -198, 1554, 1554, 1554, 1554, 1554,
	1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554, 1554,
	1554, 1554, 196, 1554, 1554, 1554, 1554, 1554, 1554, 31746,
	1554, 1554, -371, 48847, 1196, 993, -1000, -1000, -1000, 76823,
	76823, 76823, -1000, 76823, 76823, -1000, -1000, -1000, -1000, 49583,
	-1000, -1000, 1773, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2659, -487, 2048, 59159, -1000, 2955, 1627, 38532, 3191,
	-1000, 2868, -1000, 2867, 2866, 2337, -1000, -1000, 2512, 2490,
	2473, -1000, 2675, -1000, -1000, -1000, -1000, -1000, 2504, -1000,
	2502, 2620, -1000, 2498, -423, 59159, -1000, -1000, 2659, 2047,
	2749, -1000, -1000, -1000, -1000, 2432, 2619, -1000, 1529, 76087,
	76087, 76087, 667, -278, 792, -1000, 66519, 412, 446, 808,
	2090, -396, 2991, 59159, 66519, -1000, -1000, -1000, -1000, -1000,
	-1000, 73143, 73143, -1000, -1000, 18174, -1000, -1000, 3031, -1000,
	5435, 2525, -1000, -1000, 5435, 5435, 1434, 1141, -1000, 66519,
	1354, 72407, 1088, 66519, 388, 278, -1000, 66519, 66519, 3154,
	66519, 2570, 258, 2323, 2322, 2321, 2042, 2041, 2040, 2038,
	2037, -1000, 59159, 59159, 2320, 2948, -1000, -1000, 1603, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1429, 366, 1621, 1412,
	1396, 1391, 1387, -1000, 173, 45903, 76823, 1321, 1036, -1000,
	-1000, 2659, -1000, 42956, 49583, 49583, 49583, 76087, 2863, 2862,
	76087, 49583, 49583, 76087, 49583, 926, 2128, 2953, 1554, 116,
	-1000, -1000, -1000, 71671, -1000, 70935, 858, 50319, 49583, 76087,
	59159, 42220, -1000, -1000, -1000, -1000, 70199, 2031, 76087, 76087,
	69463, 68727, 67991, 67255, -1000, -239, 1071, 18174, 1071, 1874,
	1874, 2318, 2314, 2313, 1554, 1554, 221, 1874, 2312, 221,
	1874, 37778, 2309, 1001, 1071, 1071, 1071, 1874, 1874, 1874,
	1874, 2308, 466, 1992, 2307, 1874, 2265, 2144, 1071, -1000,
	-229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1874, 2659, 909, 1086, 828, -2, 2155, 76087,
	2155, 2493, -1000, -1000, 1487, 76087, -1000, 2381, 2381, 2381,
	18928, 18928, 18928, 18928, 18928, 18928, 18928, 18928, 18928, 61367,
	-1000, -1000, 1163, 21, 76087, -1000, 35, -1000, -1000, -1000,
	3141, -1000, 2607, -1000, -1000, -1000, 2378, -1000, 18928, 5435,
	-1000, -113, -113, -113, -113, -113, 2378, 2673, 2673, 2673,
	-1000, 2673, 2674, 128, -1000, -1000, -1000, 2673, 147, 2673,
	145, -1000, 2378, 2378, 2378, 2148, 4681, 4632, 3404, 2981,
	2148, 18928, 18928, 18928, 2659, -104, -1000, 2155, 18174, 3536,
	3231, 2148, 2148, -1000, -1000, 2125, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2748, 2748, 24960, 3012, -1000,
	21190, -1000, 840, -1000, -1000, 76087, 2599, -1000, 1554, 1252,
	1554, 1554, 3137, 2549, -1000, -1000, 1339, -1000, -1000, -1000,
	-1000, 1071, 1071, 1071, 1554, 2952, 1554, 1874, 1874, 2306,
	2305, 2304, 1554, 1554, 221, 1874, 2303, 221, 1874, 37778,
	2301, 1001, 1071, 1071, 1071, 1874, 1874, 1874, 1874, 2295,
	466, -1000, 1766, 2294, 1874, 2133, 2008, 1071, -1000, -230,
	1874, 2659, -241, 2472, -1000, 2673, 2673, 2861, 1222, -1000,
	-1000, -1000, -1000, -1000, -1000, 2672, -1000, -1000, 18928, 3026,
	-1000, 2671, 1573, -1000, -1000, -1000, -1000, 1092, 2287, -1000,
	-1000, 18928, -1000, -1000, 2659, 2659, 2659, 2659, 2659, 2659,
	2659, 2659, 2659, 2659, 2659, 2659, 2659, -35, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2286, -1000, 2021,
	-1000, 2013, -1000, -1000, -1000, 2670, -1000, 3024, -1000, 59159,
	268, 63575, -1000, 1529, 1529, 1529, -2, 423, 511, -1000,
	1728, -1000, -1000, -1000, 2285, 2282, 2281, 2525, 447, 1713,
	424, -1000, 3034, 3001, 2280, 2279, 2277, 2274, 2005, -1000,
	-1000, 2704, 76087, 2600, -1000, 2155, 1660, 35, 59159, 278,
	-1000, -1000, -1000, 66519, 278, -1000, -1000, 411, 2570, 2570,
	66519, 2570, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2470, 2468, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1310, 1275, 362, 361, -220, -1000, 445, 403, -1000, -1000,
	-1000, 50319, 1009, 1529, 1529, 2700, 1222, -1000, 2855, 1380,
	-1000, -1000, -1000, -1000, -1000, -1000, 49583, 2574, -425, -427,
	1331, -446, -1000, -1000, -1000, -1000, 50319, 1554, 1543, 2951,
	708, 359, 699, 355, -1000, -1000, -1000, -1000, 1009, 1255,
	1083, -1000, 2852, 49583, 1082, 683, 354, -1000, 1767, -284,
	2574, -1000, 2574, -1000, 2574, -1000, 2574, -1000, -1000, -1000,
	2155, -1000, -1000, -1000, -1000, -1000, -1000, 2273, 2267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -199, -1000, 37778,
	1785, -1000, 2747, 77559, -1000, 647, 2745, 2117, 1092, 2466,
	-1000, 76087, -1000, -1000, -1000, -1000, -1000, 5435, 5435, 2941,
	5435, 5435, 2743, 5435, 5435, 2705, -1000, 33254, 2659, -1000,
	25, -1000, 3139, 3131, -1000, -1000, 5435, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 539, 529, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18928, 18928, 18928,
	18928, -1000, 2148, 2148, 2148, 18928, 2378, 2264, 2155, 18928,
	18928, -1000, -1000, 1384, -1000, -1000, 2982, -1000, 2523, 61367,
	2378, 2562, 2402, 2378, 306, -1000, -1000, -1000, 60631, 54735,
	2571, -1000, 2659, 2400, 3137, 24960, 18174, 18174, 18174, 18174,
	3083, -1000, -1000, -1000, -1000, 1543, 1554, 32500, -1000, -1000,
	-1000, -1000, -1000, 2263, 2259, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -201, -1000, 37778, -1000, 241, 48847, 3002, 3002,
	76823, 76823, 76087, 2148, 2659, 76087, -1000, -1000, -1000, -1000,
	-1000, 2148, -1000, -1000, 2418, 2409, 48847, 346, -1000, -396,
	3075, -1000, 268, -1000, 2257, 798, 688, -1000, 715, 714,
	703, 702, 684, -1000, -1000, -1000, -1000, 2745, 770, 423,
	-1000, -54, 2002, 1454, 2946, 511, -1000, 1995, 1988, 1979,
	1961, 561, -1000, -1000, -1000, -1000, 358, 446, -1000, 803,
	2255, 778, 2249, -1000, -1000, 442, -1000, -1000, 2922, 2396,
	-1000, 25, -1000, 3023, 278, 3023, 386, 2570, -1000, -1000,
	-233, 1958, 18928, 2659, 2659, 679, 2397, -1000, -1000, 2124,
	-1000, -1000, 2668, 76823, 76823, 2383, -1000, 76087, -1000, -1000,
	-1000, -1000, -1000, 2984, 2983, -1000, -1000, 1009, 1543, -1000,
	1543, -1000, -1000, -1000, -1000, -1000, 49583, 76087, 49583, 1070,
	49583, -1000, -1000, 2659, 1140, -1000, -1000, -1000, -1000, 2394,
	-1000, 463, 2248, 349, -1000, -1000, 1156, 659, -1000, -1000,
	-1000, -225, -1000, -1000, 18928, 18928, 18928, -1000, 35516, 2905,
	2891, -119, 18174, 18174, -1000, -1000, -1000, -1000, 2148, 2148,
	2148, 2148, -1000, -1000, -1000, 345, -1000, -1000, 2148, 2148,
	3137, 3130, 2850, -1000, 2665, -1000, -1000, 2562, 306, -1000,
	840, -1000, 12142, -1000, 3083, -1000, 2155, 2155, 2155, 2155,
	-1000, -1000, 1543, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2394, 241, -1000, 37778, 1554, 2247, 1554, 1554, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2392, -490, 18928, 2390, -1000,
	-1000, -1000, 2387, -1000, -1000, 832, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2920, 2912, 867, 909, -1000, 2246, 2242,
	-1000, 728, 2006, 1171, -146, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 700, 2113, -1000, 422,
	-1000, -1000, 418, -1000, -1000, 3129, -396, 18928, -1000, 2905,
	-1000, 66519, 3023, -1000, -1000, 2659, 3127, -1000, 2148, 76087,
	18928, 2659, 1564, -1000, -1000, 370, 370, 48847, 2700, 2667,
	-1000, 1380, 2842, 18928, -1000, -1000, 1327, 1326, -1000, -1000,
	1068, 49583, -1000, 1380, 59159, 37778, -1000, -1000, -1000, -1000,
	909, 1346, 663, 2148, 2148, 2148, 2366, -1000, 9281, 333,
	-1000, -1000, 2875, 3126, -1000, 76087, -1000, 2155, 2569, -1000,
	2155, -1000, -1000, -1000, -1000, 2378, 322, -330, -1000, -1000,
	1449, 18174, 3190, -1000, -1000, -1000, 306, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1956, -1000, 2235, 2234, 985, -1000,
	-1000, -1000, 2148, -1000, 241, -289, 346, 836, 81227, -1000,
	-1000, -1000, -1000, 1785, -1000, -1000, -1000, -1000, 1922, -1000,
	-1000, 1959, 722, 383, -1000, 3014, -1000, -1000, 1899, 5435,
	1063, -285, -1000, -1000, 1380, -400, -1000, 2381, 2148, 76087,
	1898, 2385, 2666, 48847, -1000, 938, 5435, 1554, 1543, 49583,
	-1000, 2383, 67, -1000, 81227, 1785, 1169, 661, 2117, -1000,
	-1000, -1000, 2378, 35516, 399, -452, 13, 2230, 2893, 2889,
	2881, -1000, 2223, 2568, -1000, 3013, 18174, -1000, 2832, -267,
	-333, 2378, 406, 406, 2556, 24960, 2378, -1000, -1000, -1000,
	59159, -490, -1000, 241, -1000, 372, -1000, 860, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11388, 18174, 195, 37024, 2111, 2108, 81227, 2241,
	81227, 18174, 2107, 2103, 2880, 18928, 81173, 462, -345, -1000,
	-348, -1000, -1000, -1000, 2222, -1000, 2665, 1861, 436, 2383,
	401, -1000, -1000, 2381, -1000, 241, 48847, 2377, 911, 1543,
	-1000, -1000, -1000, 623, -1000, -1000, 459, 1092, -1000, 2117,
	-1000, 3012, -1000, -1000, 2219, -185, -1000, 2659, 6, 3106,
	3104, -1000, 3103, 3087, -1000, 76087, 2659, -1000, -1000, 2756,
	-1000, -1000, -1000, 340, -1000, 1421, 834, 1378, -1000, 1092,
	-1000, 2554, -1000, 2662, -1000, 385, 1020, 1010, -289, -1000,
	2101, 2097, -1000, 1571, 1833, -1000, 18174, 2208, 606, 586,
	2033, -1000, -1000, -1000, -1000, -1000, -1000, -496, -1000, 314,
	-497, 1069, -1000, -1000, 2093, -1000, 3146, 5435, -1000, -498,
	-1000, -1000, -1000, -1000, 2950, 1481, 62839, -1000, 2659, 679,
	-1000, -1000, 2375, 241, 2659, -1000, -1000, -1000, -1000, -225,
	-1000, 1346, 61367, 680, 2212, 35516, 2659, 2210, 2194, 2189,
	2118, -1000, -1000, -291, 1712, -1000, -1000, -1000, -1000, -1000,
	-320, 76087, -1000, 381, 379, -1000, -1000, -1000, -1000, 1786,
	1701, 81227, -1000, 2001, 81227, 3072, 3071, 3041, 35, 36270,
	81018, 80964, 81227, 81227, 18174, 80629, 81227, 1735, -1000, 80575,
	81227, -1000, 24960, -1000, -1000, -1000, -1000, 3201, 2525, 18928,
	2659, 241, -1000, 19682, 81227, -1000, 1346, -1000, 1863, 1838,
	2744, 2740, 1092, -1000, 2366, 35516, -1000, -1000, -1000, -1000,
	-331, 340, -1000, 2373, -1000, -1000, 290, 1695, 81227, -1000,
	-499, 81227, -500, 837, 346, 1087, 1267, -1000, 574, -1000,
	2092, -501, -502, -503, 1065, 18174, -504, 2087, -1000, -1000,
	2554, 66519, 2148, 18928, -1000, 2148, 2378, -1000, -1000, 2739,
	1092, -1000, 2738, 1092, -80, -83, 2737, -1000, 2366, -335,
	-1000, 2733, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 80420,
	60631, -1000, -506, 80366, -507, 7788, -1000, -1000, -1000, 80031,
	-1000, -1000, -1000, -1000, 584, -1000, -1000, 2976, -1000, -1000,
	79975, 79822, 79768, 81227, 2089, 10572, 2541, -1000, -1000, 2525,
	-235, 2148, -1000, -1000, -1000, 311, 2732, -378, 2728, 310,
	307, -1000, -1000, -86, -1000, -1000, 2726, 2725, 3151, -1000,
	-508, -1000, -1000, 10308, 1687, 81227, 1056, 81227, 1714, -1000,
	18174, -1000, 1087, -1000, 18928, 2085, 564, 18174, -509, 570,
	467, 2063, -1000, 1834, -235, 303, -381, 2724, 2721, -1000,
	-1000, -1000, 3188, -1000, 3186, 1168, 1168, 10136, 1682, -1000,
	-1000, -510, 1054, 81227, -1000, 1972, -1000, 5435, -1000, 2003,
	1967, 9221, -1000, -1000, -1000, -1000, -1000, 283, -383, -1000,
	-1000, -1000, 1014, 1810, -1000, -1000, -1000, 8453, -1000, -511,
	81227, -1000, 567, 465, -1000, -1000, -1000, -1000, -1000, 1047,
	8190, -513, 1854, 1811, -1000, 1045, 81227, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3697, 3694, 3693, 14, 3691, 293, 380, 329, 19,
	2950, 3690, 290, 3689, 299, 3688, 28, 25, 23, 36,
	3687, 3332, 3330, 3326, 3322, 32, 3686, 21, 3685, 3683,
	3320, 3682, 3681, 3314, 3680, 3679, 3677, 3676, 3661, 3660,
	3657, 3656, 3655, 3312, 3306, 3303, 3301, 3654, 3653, 3652,
	3285, 3283, 3273, 3647, 3643, 38, 40, 48, 3642, 5,
	3640, 204, 232, 3637, 4, 3636, 3635, 12, 208, 3634,
	3633, 62, 3269, 3632, 3631, 3630, 3629, 3628, 3627, 142,
	3622, 3621, 3263, 3620, 3256, 3615, 3253, 3250, 3247, 3245,
	3239, 206, 3612, 3237, 3229, 3225, 3610, 2864, 235, 486,
	228, 3608, 133, 135, 2068, 3607, 229, 3606, 219, 3604,
	3603, 3602, 491, 233, 3601, 167, 3600, 370, 161, 186,
	168, 2019, 3599, 57, 169, 314, 3597, 8, 3596, 120,
	3595, 220, 3594, 234, 2943, 199, 180, 200, 3593, 3592,
	190, 3591, 3590, 3581, 222, 3579, 3578, 237, 3968, 3577,
	3576, 188, 3575, 140, 3574, 173, 3573, 3572, 3571, 3570,
	257, 115, 85, 178, 145, 3567, 158, 3566, 3565, 3564,
	3563, 3561, 3558, 84, 31, 2866, 3557, 165, 201, 3556,
	69, 42, 39, 3554, 3553, 66, 3548, 3545, 131, 3544,
	3531, 132, 3529, 197, 71, 3522, 3513, 3512, 3510, 111,
	79, 3507, 126, 3506, 195, 3505, 3504, 3503, 3502, 3501,
	103, 3499, 78, 3498, 196, 218, 292, 3496, 3492, 44,
	46, 3491, 53, 35, 27, 105, 30, 104, 77, 185,
	175, 136, 163, 47, 156, 58, 155, 176, 3490, 247,
	181, 216, 114, 41, 3478, 3477, 211, 3475, 110, 213,
	191, 194, 212, 3474, 3473, 3467, 248, 3466, 189, 565,
	3464, 125, 236, 240, 2908, 246, 141, 3462, 3461, 3459,
	3455, 122, 60, 149, 3454, 22, 241, 250, 244, 43,
	86, 3448, 1745, 5191, 6112, 6388, 116, 242, 94, 6830,
	20, 215, 3447, 74, 3446, 3445, 3444, 49, 177, 52,
	80, 157, 3443, 164, 55, 93, 3441, 3439, 3437, 3436,
	3435, 3434, 227, 193, 3432, 3430, 63, 3429, 3426, 61,
	51, 11, 16, 3424, 148, 231, 225, 224, 3420, 221,
	54, 3419, 3418, 187, 139, 3417, 3415, 3413, 3412, 179,
	124, 210, 3410, 209, 123, 127, 3408, 109, 3403, 3402,
	106, 7409, 151, 3400, 3399, 311, 130, 153, 198, 3398,
	3384, 3383, 65, 3382, 3380, 3, 3379, 108, 50, 56,
	112, 34, 162, 3378, 3377, 202, 3376, 3375, 154, 172,
	3374, 150, 152, 68, 3371, 70, 143, 3357, 171, 2,
	7, 6, 3356, 3351, 3348, 3347, 3346, 3345, 3344, 3343,
	129, 3342, 3341, 102, 91, 75, 3340, 3339, 3338, 3336,
	3335, 203, 182, 144, 230, 134, 10, 3334, 3328, 9,
	3324, 184, 3317, 95, 3309, 128, 3296, 3294, 72, 101,
	76, 98, 3292, 3290, 99, 3288, 3281, 100, 3276, 3271,
	223, 2442, 3266, 4433, 3261, 207, 174, 73, 87, 3259,
	81, 117, 3242, 92, 3235, 17, 67, 3233, 13, 18,
	1553, 3231, 0, 2572, 214, 3222, 138, 3218, 3215, 239,
	3211,
}

var yyR1 = [...]int{
	0, 461, 461, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 244, 244, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 127, 127, 8, 8,
	126, 126, 126, 241, 241, 241, 241, 238, 238, 128,
	128, 125, 125, 133, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 464, 464, 142, 142, 140, 140,
	141, 141, 236, 236, 19, 19, 19, 246, 246, 251,
	251, 251, 254, 254, 254, 254, 224, 225, 226, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 452, 452, 452, 453, 453, 453,
	453, 453, 279, 279, 279, 279, 417, 417, 432, 432,
	432, 433, 433, 431, 431, 431, 431, 431, 435, 435,
	436, 436, 434, 434, 434, 434, 438, 438, 439, 439,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 420, 420, 420, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 441, 441, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 443, 443, 444, 444, 445, 445, 445, 445,
	446, 446, 446, 446, 446, 447, 447, 447, 447, 447,
	447, 447, 448, 448, 449, 449, 3, 2, 398, 398,
	399, 399, 400, 400, 400, 400, 401, 401, 402, 402,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	31, 31, 31, 31, 31, 31, 278, 278, 274, 274,
	274, 276, 276, 277, 277, 277, 419, 419, 419, 413,
	413, 413, 415, 415, 414, 414, 414, 416, 416, 421,
	421, 421, 421, 421, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 424, 424, 424, 422, 422, 161,
	161, 425, 425, 430, 430, 426, 426, 427, 427, 429,
	429, 429, 428, 428, 428, 428, 316, 316, 180, 180,
	69, 69, 70, 70, 70, 213, 213, 213, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	56, 56, 57, 29, 29, 29, 29, 58, 58, 59,
	32, 32, 32, 32, 32, 32, 66, 66, 66, 65,
	65, 64, 64, 64, 64, 64, 64, 34, 35, 36,
	465, 465, 465, 60, 60, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 67, 67, 62, 62, 61, 61, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 33,
	33, 33, 33, 33, 33, 25, 397, 397, 397, 55,
	55, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 77, 77, 353, 354, 354, 354,
	354, 354, 354, 340, 340, 341, 341, 341, 341, 341,
	341, 330, 330, 330, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 304, 304, 304, 304, 308, 308, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 307, 307, 307, 307, 307, 307, 307, 307,
	309, 309, 309, 309, 309, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 311, 311, 311, 311, 311, 311, 311, 311, 339,
	339, 313, 313, 312, 312, 312, 333, 333, 334, 334,
	334, 331, 331, 331, 332, 332, 317, 317, 317, 317,
	317, 317, 318, 335, 319, 319, 320, 320, 320, 320,
	320, 320, 321, 321, 322, 322, 322, 324, 324, 329,
	329, 328, 328, 328, 328, 328, 328, 325, 325, 325,
	325, 325, 325, 326, 326, 326, 327, 338, 338, 338,
	338, 338, 314, 46, 46, 52, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	375, 375, 380, 380, 268, 268, 269, 269, 53, 53,
	53, 53, 53, 167, 167, 54, 54, 54, 376, 376,
	378, 378, 378, 378, 378, 378, 378, 378, 377, 377,
	379, 379, 342, 342, 371, 371, 370, 370, 369, 369,
	369, 369, 369, 369, 369, 351, 351, 352, 352, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 346, 346,
	346, 345, 345, 347, 347, 350, 350, 350, 368, 368,
	367, 367, 343, 343, 343, 381, 381, 381, 381, 381,
	101, 101, 344, 344, 344, 382, 348, 348, 349, 349,
	349, 390, 391, 389, 389, 389, 389, 389, 168, 168,
	168, 373, 373, 373, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 102, 102, 102, 103, 103, 323, 323, 355,
	355, 355, 355, 355, 460, 460, 460, 356, 356, 356,
	356, 356, 356, 451, 451, 450, 450, 450, 357, 357,
	358, 359, 359, 359, 360, 360, 362, 362, 275, 275,
	363, 363, 364, 364, 361, 361, 361, 365, 365, 394,
	394, 394, 393, 393, 72, 72, 72, 72, 74, 74,
	73, 73, 73, 81, 81, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 71, 71,
	288, 288, 76, 212, 212, 212, 273, 273, 387, 387,
	388, 388, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 384, 384, 383, 383, 385, 385, 75,
	75, 75, 75, 162, 162, 22, 22, 78, 78, 418,
	418, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 392, 392, 392, 24, 24, 82, 83, 83, 83,
	287, 287, 287, 287, 287, 86, 86, 86, 86, 239,
	239, 240, 240, 87, 87, 87, 87, 88, 88, 88,
	88, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 122, 260, 260, 259, 259, 258,
	258, 258, 261, 261, 261, 261, 302, 302, 302, 85,
	85, 85, 97, 97, 92, 92, 95, 95, 95, 95,
	98, 98, 99, 99, 100, 100, 93, 94, 43, 44,
	44, 44, 44, 45, 90, 90, 90, 91, 91, 91,
	91, 112, 112, 113, 113, 467, 467, 467, 89, 468,
	104, 105, 105, 107, 107, 107, 108, 108, 108, 109,
	109, 109, 265, 265, 265, 265, 265, 265, 265, 106,
	106, 106, 116, 116, 120, 120, 120, 120, 119, 119,
	119, 119, 215, 215, 220, 294, 294, 196, 196, 216,
	216, 221, 221, 221, 222, 222, 223, 223, 223, 223,
	223, 218, 218, 217, 217, 219, 183, 183, 183, 183,
	181, 181, 181, 181, 181, 181, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 179, 179, 292, 292, 292, 292, 291, 291, 291,
	124, 124, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 131, 134, 198, 198, 469, 469, 152, 152, 153,
	153, 153, 153, 154, 154, 154, 154, 154, 156, 156,
	156, 157, 157, 157, 157, 157, 157, 158, 159, 159,
	155, 155, 155, 177, 177, 234, 234, 235, 235, 233,
	233, 237, 237, 130, 130, 132, 132, 132, 132, 137,
	137, 138, 138, 139, 139, 299, 299, 299, 143, 143,
	143, 145, 144, 144, 144, 144, 144, 144, 146, 146,
	454, 455, 455, 456, 456, 456, 456, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 458, 458, 459,
	459, 147, 147, 149, 150, 150, 148, 148, 148, 148,
	148, 148, 160, 160, 151, 163, 163, 163, 163, 164,
	164, 121, 121, 121, 121, 121, 121, 121, 121, 257,
	257, 166, 166, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 192, 192, 192, 192, 192, 192, 169,
	169, 169, 169, 169, 169, 169, 115, 115, 193, 193,
	193, 136, 135, 135, 118, 118, 117, 117, 194, 194,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 186, 186, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 191, 191, 191, 191,
	191, 466, 466, 188, 188, 187, 187, 187, 187, 187,
	187, 111, 111, 111, 111, 111, 300, 300, 300, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 68, 68, 205, 205, 114, 114, 203, 203, 204,
	206, 206, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	176, 176, 176, 207, 207, 195, 195, 123, 208, 208,
	209, 210, 210, 211, 211, 214, 227, 227, 227, 228,
	228, 228, 228, 178, 178, 178, 229, 229, 229, 229,
	171, 171, 170, 170, 170, 172, 172, 172, 172, 173,
	173, 470, 470, 232, 232, 231, 231, 230, 230, 230,
	230, 230, 230, 230, 242, 242, 197, 197, 200, 200,
	199, 201, 243, 243, 248, 248, 248, 248, 245, 245,
	249, 249, 249, 249, 252, 252, 253, 253, 253, 250,
	250, 250, 250, 247, 247, 247, 296, 296, 296, 296,
	255, 255, 264, 264, 262, 262, 263, 263, 256, 256,
	315, 315, 315, 270, 270, 271, 271, 272, 272, 266,
	266, 266, 266, 267, 267, 293, 293, 289, 289, 295,
	295, 290, 290, 297, 297, 298, 298, 298, 298, 395,
	395, 396, 396, 396, 336, 336, 407, 407, 337, 337,
	408, 408, 409, 409, 404, 404, 405, 405, 406, 406,
	406, 47, 410, 410, 411, 411, 412, 412, 412, 412,
	48, 49, 49, 49, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 286, 286, 286, 286, 286,
	286, 283, 283, 283, 283, 283, 283, 284, 284, 284,
	462, 463,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 3, 3, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 3,
	5, 5, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 3, 3, 1, 1, 0, 1, 1, 1, 3,
	5, 3, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 2, 1, 11, 12, 12, 13, 13,
	0, 1, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 0, 2, 3, 3, 3, 3, 4, 5, 3,
	3, 4, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 4, 4, 3,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 0, 1,
	6, 1, 4, 5, 5, 6, 0, 1, 0, 3,
	1, 1, 0, 2, 0, 8, 9, 0, 2, 0,
	1, 2, 0, 2, 1, 1, 1, 1, 4, 3,
	7, 5, 5, 1, 3, 5, 4, 8, 10, 9,
	2, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	3, 3, 6, 5, 4, 4, 5, 5, 8, 4,
	5, 7, 2, 2, 2, 2, 3, 3, 3, 4,
	1, 3, 3, 3, 3, 4, 5, 5, 3, 7,
	6, 5, 2, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 4, 4, 3, 5, 3, 1, 1,
	1, 1, 5, 0, 1, 2, 0, 1, 0, 1,
	1, 2, 5, 3, 4, 4, 4, 4, 4, 4,
	3, 7, 6, 8, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 3, 1, 3, 8, 8, 8,
	11, 12, 15, 0, 3, 3, 3, 3, 5, 3,
	5, 6, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 8, 5, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 4, 1,
	3, 1, 1, 2, 2, 4, 4, 3, 3, 3,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	4, 3, 2, 2, 6, 2, 4, 3, 3, 4,
	4, 5, 8, 6, 3, 4, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 4,
	2, 4, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 3, 2, 0, 1, 1, 2,
	4, 1, 0, 1, 2, 1, 2, 4, 4, 5,
	0, 1, 0, 3, 0, 2, 4, 4, 2, 3,
	4, 4, 5, 3, 4, 5, 4, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 0, 2, 2, 2, 2, 2, 2, 0,
	1, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 2, 2, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 5, 1, 2, 3,
	1, 1, 2, 2, 4, 0, 1, 2, 6, 1,
	3, 2, 4, 1, 1, 1, 1, 1, 5, 5,
	8, 5, 5, 8, 5, 5, 8, 2, 2, 2,
	3, 4, 4, 0, 1, 3, 1, 0, 3, 1,
	3, 1, 3, 4, 6, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 1, 3, 3, 3, 6, 7, 2, 3, 3,
	4, 4, 5, 5, 8, 8, 3, 3, 4, 3,
	4, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 6, 4, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 4, 4, 4, 2, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 6, 3, 4, 2, 2,
	2, 0, 2, 1, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 1,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 1, 0, 2, 4, 4,
	1, 4, 1, 3, 4, 1, 4, 3, 6, 2,
	3, 1, 1, 0, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 2, 3,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 4, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 2, 0, 4,
	4, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -461, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -134, -462, 12, -128, 34, -77, 190,
	-452, -74, -73, -75, -76, 193, 192, 230, 194, 645,
	368, 646, 223, 72, 445, -95, 448, 449, -467, 306,
	307, 25, 42, 450, 452, 35, 36, 246, 334, 336,
	197, 446, 428, 429, 359, 693, -6, 651, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	762, -210, 20, -104, -468, -210, -10, -9, -4, 651,
	-104, -110, 14, 15, 13, 556, -104, -353, 28, -3,
	117, 76, -8, 11, -267, -278, 97, 547, 198, -276,
	330, 332, 208, -264, -266, -274, 256, 266, 49, 210,
	209, 267, 199, 330, -264, 200, 202, 547, 198, 239,
	238, 330, 332, 271, 645, 199, -148, -297, -283, -285,
	-284, 348, 82, -282, 576, 580, 271, 583, 584, 589,
	338, 90, 52, 368, 570, 360, 369, 220, 525, 571,
	331, 337, 340, 361, 734, 370, 372, 373, 568, 569,
	54, 202, 558, 559, 562, 213, 749, 353, 221, 648,
	267, 757, 752, 754, 342, 755, 515, 607, 445, 464,
	456, 483, 649, 705, 279, 301, 453, 385, 532, 608,
	345, 294, 366, 706, 321, 289, 521, 527, 304, 448,
	609, 610, 611, 541, 247, 277, 707, 454, 298, 300,
	299, 261, 575, 305, 41, 226, 480, 658, 646, 256,
	708, 614, 701, 613, 250, 283, 612, 328, 40, 32,
	615, 249, 544, 108, 276, 709, 376, 529, 616, 501,
	377, 245, 272, 274, 290, 711, 653, 349, 232, 528,
	430, 476, 359, 127, 254, 316, 378, 712, 502, 506,
	713, 533, 335, 315, 619, 714, 715, 379, 657, 284,
	716, 201, 341, 620, 280, 717, 257, 443, 535, 346,
	500, 211, 650, 222, 56, 236, 536, 504, 622, 510,
	513, 431, 375, 432, 718, 719, 720, 721, 357, 355,
	624, 356, 358, 626, 268, 296, 654, 623, 656, 61,
	196, 660, 508, 507, 509, 297, 674, 531, 488, 486,
	722, 723, 350, 217, 724, 725, 487, 23, 726, 727,
	539, 320, 352, 728, 729, 730, 625, 293, 630, 606,
	731, 732, 530, 503, 505, 255, 126, 645, 278, 733,
	354, 526, 363, 661, 652, 339, 291, 631, 735, 381,
	292, 235, 228, 540, 425, 426, 441, 442, 371, 736,
	429, 737, 738, 739, 740, 333, 332, 449, 364, 632,
	450, 273, 302, 655, 741, 633, 634, 742, 743, 265,
	248, 543, 534, 60, 517, 512, 367, 382, 455, 427,
	438, 433, 434, 436, 437, 440, 439, 435, 444, 520,
	446, 275, 242, 635, 636, 637, 428, 638, 12, 295,
	347, 639, 640, 641, 524, 365, 303, 266, 269, 491,
	237, 744, 745, 478, 479, 447, 240, 230, 121, 542,
	326, 700, 330, 383, 288, 59, 243, 53, 746, 747,
	270, 244, 659, 287, 451, 344, 662, 199, 82, -287,
	-282, -285, -286, -283, -284, 348, 231, 58, 95, 63,
	62, 82, -282, 645, 143, 484, 532, 190, 522, 523,
	529, -346, 530, 238, 425, 367, 241, -302, 199, -260,
	240, 521, 335, 354, 580, 244, 245, 272, 426, 432,
	200, 201, 37, 534, 533, 525, -297, -97, 451, -97,
	-97, 203, 451, -112, 232, 194, -148, 231, -67, 82,
	308, -67, 34, 82, -160, -289, -297, 82, -282, 41,
	82, 450, 524, 524, 84, 652, 247, 26, -441, -416,
	363, -440, -414, 191, 190, 15, 192, 271, 368, 369,
	334, 200, 13, 35, 734, 218, 370, 371, 11, 223,
	372, 373, 239, 14, 374, -442, -419, 386, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 81, 82, -282, 26,
	-441, -416, 363, 371, 425, 447, 425, 425, -269, -268,
	384, 510, 143, -127, 704, -125, -133, -299, -297, -283,
	-284, -198, -469, 252, 547, -256, 330, -276, 204, -129,
	-131, -132, -152, -135, 702, -462, -130, -454, -148, -136,
	82, 605, -108, 10, -107, -109, 9, 8, -108, -228,
	22, 21, -265, -105, -228, -463, 78, -463, -127, -119,
	134, -121, -297, -165, 100, -175, 33, 29, -174, 348,
	231, -166, -202, -283, -201, -136, 143, -301, 132, 133,
	140, 101, 186, -186, -184, -185, -187, -189, -190, 226,
	478, 479, 81, 83, 91, 84, 85, 86, 87, 92,
	93, 94, -289, -285, -284, -281, 576, 580, 583, 584,
	589, -199, -462, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 66, 67, 574, 198, 557,
	558, 481, 559, 13, 560, 561, 562, 647, 220, 566,
	103, 55, 325, 548, 549, 553, -191, 550, 554, 555,
	568, 569, 570, 571, 205, 547, 138, 556, 593, 594,
	595, 596, 597, 598, 599, 600, 602, 603, 601, 577,
	578, 579, 581, 582, 585, 586, 587, 588, 590, 591,
	592, 676, 195, 191, 194, 99, 28, 30, 677, 253,
	102, 462, 496, 565, 21, 25, 214, 197, 484, 212,
	142, 207, 215, 310, 312, 190, 70, 678, 545, 311,
	522, 672, 669, 671, 670, 475, 473, 309, 679, 15,
	31, 224, 260, 680, 471, 192, 251, 106, 107, 681,
	46, 45, 8, 313, 225, 319, 472, 682, 683, 24,
	73, 216, 16, 210, 241, 756, 684, 334, 18, 125,
	19, 685, 666, 668, 667, 204, 119, 200, 748, 68,
	258, 686, 460, 465, 466, 467, 468, 469, 461, 96,
	687, 688, 116, 324, 64, 605, 37, 246, 702, 563,
	323, 689, 43, 42, 495, 499, 494, 322, 511, 117,
	22, 551, 552, 35, 690, 691, 234, 498, 459, 493,
	703, 692, 664, 263, 71, 384, 474, 760, 38, 74,
	229, 380, 351, 47, 97, 20, 259, 69, 39, 572,
	122, 761, 477, 206, 238, 693, 537, 262, 694, 123,
	470, 704, 218, 118, 452, 193, 362, 307, 219, 329,
	336, 695, 252, 124, 523, 663, 696, 567, 34, 223,
	306, 458, 208, 697, 264, 318, 308, 317, 698, 699,
	343, 48, 758, 675, 199, 44, 105, 497, 457, 492,
	203, 564, 239, 314, 9, 49, 36, 518, 14, 374,
	72, 75, 485, 482, 490, 489, 209, 759, 17, 327,
	573, 651, 538, 98, 673, 519, 546, -104, -104, -104,
	-245, 447, -252, -249, 533, 534, -250, -253, -247, -202,
	510, 731, 732, 532, 484, 531, -289, -297, -283, 348,
	231, 143, 577, 578, 579, 103, 481, 557, 593, 548,
	550, 545, 549, 547, 33, 594, 29, 94, 595, 574,
	205, 13, 186, 581, 582, 596, 597, 598, 66, 551,
	552, 647, 138, 100, 599, 600, 92, 602, 603, 325,
	556, 67, 601, 198, 587, 586, 585, 588, 560, 561,
	93, 553, 554, 555, 55, 591, 590, 592, -2, -6,
	-462, -148, -354, -341, -344, -289, -283, -285, -286, 227,
	-284, 215, -382, 82, -282, 212, -210, -104, 200, 202,
	556, -263, 205, -263, 239, 238, 271, -277, 264, -263,
	-263, 735, 199, -276, 109, 109, -78, -148, -418, -413,
	-419, 199, -289, -262, 205, -262, -262, -262, -262, -262,
	-262, -262, 82, -287, -148, 187, -83, -148, -140, 16,
	16, 75, 75, 82, -287, 82, 431, 375, 34, -261,
	117, 17, 547, 198, 199, 238, 239, 202, 271, -261,
	-348, 16, 119, 242, 242, 242, 242, 242, 243, 242,
	-259, 524, 526, 527, 528, -258, 16, 119, 17, -122,
	117, 24, -462, -228, -228, -258, 242, 135, -99, 99,
	-99, 82, 450, 203, -113, 233, -112, -113, -177, -155,
	28, 6, 7, 109, 34, 34, 81, 59, 34, -62,
	-61, -63, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 34, -397, 76, 187, -336, 510,
	82, -410, -411, -148, 84, 84, 74, 354, 74, 77,
	203, 77, 74, -443, 364, 76, -443, 332, 364, 365,
	266, 330, 202, -443, -443, 332, -443, -443, -443, 351,
	-443, -443, 524, -443, -443, -443, 366, 367, -443, 522,
	202, -443, -443, -443, -443, -443, 79, 74, 77, 354,
	74, 16, 74, 427, 430, 537, 651, -54, 443, 444,
	-167, 26, -374, 143, 376, 377, 378, 379, 375, 354,
	380, 381, 382, 242, 383, 199, 524, 375, -6, -125,
	77, -232, -462, 77, -199, -462, 82, -329, -328, -325,
	-326, -327, -324, 33, 199, -262, 271, -143, -145, -144,
	-146, 64, 68, 70, 65, 66, 67, 525, 71, -272,
	28, -135, -462, -124, -9, -134, -129, -462, -153, 122,
	-163, -272, -154, 72, 204, 73, 28, -155, -156, -157,
	-158, -159, 6, 7, 54, -462, -462, -7, -8, 26,
	27, -14, -7, -12, -14, 26, 27, 26, 27, -7,
	-229, 24, 35, -178, 84, 87, -202, -211, -214, -121,
	-297, 58, -116, 26, 27, 65, 57, 63, 62, -225,
	89, 16, -292, 99, 97, 98, 116, -291, 28, 82,
	81, -287, 187, -121, -169, 119, 100, 117, 118, 102,
	129, 128, 139, 132, 133, 134, 135, 136, 137, 138,
	130, 131, 142, 109, 110, 111, 112, 113, 114, 115,
	-257, -462, -136, -462, 187, -462, 187, 188, 189, 187,
	-175, -175, -175, -175, -175, -175, -175, 81, 81, 81,
	-462, 187, 187, 187, -462, -462, -462, -462, -462, -194,
	-121, 651, -462, 199, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -205,
	-121, -462, -462, -466, -462, -466, -466, -188, -466, -462,
	-188, -188, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -462, -462, -462, -462, -462, -462, -462,
	-462, -462, -462, -188, -188, -188, -462, -256, -256, 16,
	-140, -141, -148, -151, -297, 77, -246, -251, 535, 537,
	447, -250, -250, -296, -289, 81, 33, 143, -352, 109,
	120, 34, 187, -210, 78, 77, -304, -308, -310, -309,
	-311, -306, -307, -68, 488, 486, 482, 481, 484, 487,
	143, 485, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 34, 226, 478, 479, 480, 662, 502,
	503, 504, 505, 506, 507, 508, 509, 456, 483, 649,
	457, 458, 459, 460, 461, 462, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, -304,
	-304, -304, -304, -304, -288, -382, 82, -287, 76, -228,
	-265, -289, -148, -278, 208, -276, 82, 100, 82, -147,
	-289, -297, -160, -263, 265, -422, -421, -413, -416, 675,
	-263, -277, -413, 270, 268, 269, 77, 203, 77, 203,
	79, -262, 74, -142, -148, 29, 82, 82, -147, -160,
	-415, -413, -416, -161, -289, -297, -298, -297, -280, -285,
	-286, 676, 195, 26, 191, 194, 99, 28, 30, 677,
	253, 102, 462, 143, 577, 578, 579, 496, 565, 21,
	25, 214, 103, 197, 481, 484, 212, 142, 207, 215,
	310, 312, 557, 593, 190, 70, 678, 548, 550, 545,
	549, 311, 547, 522, 672, 669, 671, 670, 475, 473,
	309, 33, 679, 15, 594, 31, 224, 260, 27, 680,
	136, 471, 192, 604, 251, 106, 107, 681, 46, 45,
	8, 29, 313, 225, 94, 319, 595, 472, 682, 683,
	24, 73, 216, 16, 210, 241, 756, 684, 334, 18,
	574, 125, 19, 685, 666, 668, 667, 205, 204, 119,
	200, 748, 68, 258, 13, 686, 460, 465, 466, 467,
	468, 469, 461, 186, 96, 687, 688, 116, 324, 64,
	581, 582, 605, 50, 37, 246, 596, 597, 702, 598,
	563, 323, 689, 43, 42, 495, 499, 494, 322, 511,
	66, 117, 22, 551, 552, 35, 690, 691, 647, 234,
	498, 459, 493, 703, 692, 664, 138, 263, 71, 100,
	384, 599, 600, 92, 474, 760, 38, 74, 229, 380,
	351, 47, 97, 20, 259, 69, 39, 572, 122, 761,
	602, 477, 206, 238, 693, 537, 262, 694, 123, 603,
	470, 704, 218, 118, 452, 193, 325, 556, 362, 307,
	219, 329, 336, 67, 695, 252, 124, 601, 198, 523,
	663, 11, 696, 567, 34, 223, 306, 458, 208, 697,
	264, 318, 308, 317, 698, 57, 699, 343, 48, 587,
	586, 585, 588, 758, 65, 560, 561, 675, 199, 44,
	105, 497, 457, 492, 203, 564, 239, 93, 314, 9,
	49, 36, 518, 14, 374, 72, 75, 553, 554, 555,
	55, 485, 482, 490, 591, 489, 590, 592, 209, 759,
	104, 17, 327, 573, 651, 538, 98, 673, 519, 14,
	192, 77, 81, -240, 82, -287, 81, -240, -239, -240,
	-239, 242, -261, 81, -301, -121, -263, -263, -148, -148,
	-148, -148, -148, -148, -261, -261, -261, -261, -258, 16,
	-258, -261, -297, -297, -121, -175, -413, 549, 134, -261,
	-297, -100, -98, 217, -98, -100, 82, 82, 450, -91,
	-4, -18, -16, -17, -113, -9, 38, 28, 28, 82,
	-62, -62, 81, -62, 77, 109, -62, -177, 78, -194,
	-289, -395, 748, 77, -412, 28, 537, 538, 511, -445,
	199, 241, 238, 74, -445, -440, 371, -415, -414, -413,
	-443, -444, -289, -443, -443, -443, 524, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -419, -445, 334, 77,
	-445, -415, -413, 203, -377, -379, 441, 442, 538, 539,
	454, 375, 375, 375, 375, 375, 375, -140, -140, 203,
	253, -133, 28, -231, -230, -290, -283, -284, -285, -286,
	227, -289, -280, -469, -329, -326, -325, -327, 484, 532,
	142, 544, -148, -413, -161, -131, -131, -129, -131, 64,
	64, 64, 69, 64, 69, 69, 64, 64, -144, -299,
	-272, 77, -463, -463, -463, -9, -462, -299, -163, -272,
	200, 200, 200, 102, 16, 52, 26, 102, 16, 52,
	26, 102, 16, 52, 26, -118, -117, -120, 134, -121,
	-297, -175, -241, 96, 14, 119, 77, 23, 77, -227,
	30, 31, 187, -176, 59, 84, 87, -241, 77, -119,
	-148, -121, -121, -121, -192, 92, 100, 93, 94, -291,
	227, 134, -298, -290, -285, -283, -284, 348, 231, -280,
	-175, -193, -199, -136, 88, 119, 117, 118, 102, -175,
	-175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
	-175, -175, -175, -175, -300, 82, 81, 143, 82, -290,
	-117, -290, -174, 226, 478, 479, 92, -174, -289, -289,
	-106, 26, 27, -290, 525, -289, -290, -106, -106, -106,
	-106, -106, 77, -463, -117, -117, -117, -463, -121, -121,
	-117, -175, -117, -202, 81, -117, -202, 81, -117, -175,
	563, 564, 565, -117, -117, -106, -203, -204, 104, -202,
	-283, -286, 348, 231, -117, -463, 84, -181, -182, 654,
	663, 664, 666, 669, 662, 661, 660, 658, 657, 656,
	659, 655, 673, 672, 671, 670, 668, 667, 665, -181,
	-181, -183, 226, 480, 478, 479, -117, -118, -117, -117,
	-463, -463, -120, -117, -120, -117, -117, -120, -463, -463,
	-463, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -463, 84, -150, 96, -148, -124, -148,
	-140, -464, 16, 75, -464, 77, 187, -249, -252, 77,
	536, 538, 539, -246, -321, -322, 142, 74, 95, 81,
	-121, -290, -298, -228, -373, -341, -342, -343, -344, -366,
	215, -381, 206, 208, 210, 209, 49, -345, 216, 200,
	50, -305, -331, 517, 518, -313, 76, -312, 76, -68,
	482, 481, 484, -312, 482, 489, -312, 489, 489, -312,
	-312, -312, 482, 76, 76, -313, -313, -313, -333, 76,
	-333, 477, -334, 76, -334, -334, -334, -334, -305, -305,
	-305, -305, -305, -382, -121, -229, -293, 75, -232, 202,
	735, -329, 29, -329, -69, 253, 221, 187, 76, -161,
	256, 257, -417, 77, 33, -423, 331, 84, 205, -148,
	231, -148, -148, -413, -413, -419, -140, -148, 77, 77,
	187, 714, 714, -148, 77, 81, 82, 82, -177, -349,
	16, 119, -261, -148, -177, -115, 227, 75, -466, -463,
	452, 453, 82, -91, -175, 38, 38, -61, -174, -289,
	78, -396, 204, 556, 81, -411, -299, 510, 538, -446,
	134, -289, -445, -446, -449, 651, 203, 78, 77, -443,
	-446, 351, 334, -446, 16, -376, -378, 433, 435, 436,
	434, 437, 438, 439, 440, 77, 109, 109, 455, -380,
	24, -375, 651, -375, 81, -175, -135, -463, 77, 187,
	-199, 34, -351, -352, -351, -351, -81, -388, -358, -79,
	-386, 122, 195, 192, 191, 267, 197, -324, 557, 250,
	249, 283, 284, 73, 35, 196, 193, -71, -80, 230,
	289, 235, 290, 194, 229, 291, 228, 292, 651, 287,
	755, 515, 607, 608, 641, 90, 611, 247, 41, 200,
	621, 614, 544, 617, 618, 376, 616, 620, 211, 624,
	623, 625, 627, 628, 629, 340, 632, 633, 634, 248,
	635, 636, 637, 365, 642, 9, -423, -429, 74, -138,
	-137, 74, 75, -139, 74, -137, 64, 64, 64, -235,
	76, -299, -129, -463, -237, -289, -163, -299, -462, -462,
	-462, -175, -175, 119, -175, -175, 119, -175, -175, 119,
	-463, 77, 187, 77, -238, 40, 39, -289, 512, 60,
	-178, -178, -214, -255, 24, 16, 55, 55, -126, 16,
	-225, -225, 92, 93, 94, 187, -462, -193, -175, -175,
	-175, -115, 99, -463, -463, -118, -117, -117, -117, -117,
	-117, -121, -463, -463, -463, 77, 75, 28, -463, 75,
	119, -463, 16, 16, -463, 16, 16, -463, -463, 16,
	-175, -175, -175, -463, -463, -117, -206, -204, 106, -121,
	-463, -463, -463, -463, -463, 77, 77, 16, 77, -463,
	-463, -463, -463, -215, 572, -215, -463, -463, -463, -463,
	-463, -463, -215, -215, -215, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -236, 122,
	-148, 34, -236, 75, -124, -124, -151, -297, 134, -251,
	-254, 540, 537, 543, 82, 81, 143, 81, 187, -229,
	-357, -372, 77, -358, 755, 515, 607, -324, 608, 641,
	90, 611, 247, 41, 200, 621, 614, 544, 617, 618,
	376, 616, 620, 211, 624, 623, 625, 627, 628, 629,
	340, 632, 446, 633, 634, 248, 635, 636, 637, 365,
	642, 9, 651, 76, -350, -288, -381, 82, -282, 50,
	-345, -347, -345, -345, -345, -350, 82, -282, -350, 50,
	717, 92, 100, -320, -322, 143, -317, -318, -335, -338,
	-314, 28, 756, 520, 218, -344, 484, 532, 33, 74,
	515, 206, 50, 49, 210, 90, -332, 519, 84, 84,
	583, -312, 489, -312, -312, -312, -312, -312, -339, 81,
	-339, 84, -333, 84, 78, 74, -289, 28, -148, 675,
	-70, 13, 14, 15, -289, -398, -399, -400, -289, 119,
	258, 259, 74, -432, 362, -421, 332, 341, 99, 21,
	651, -453, 100, 203, 203, -392, 219, 214, -148, -413,
	-289, 74, 74, -240, -164, 17, 82, 82, -258, -261,
	-175, -416, 244, 245, -175, -175, -149, 96, -412, 203,
	187, 187, -446, 203, 353, -415, -289, 16, 16, 351,
	16, -415, 77, 109, 109, 109, 109, 109, 109, 109,
	109, -379, 76, 76, 385, 537, -230, -290, -351, 82,
	81, 143, 82, 81, 143, 81, -387, 77, -388, 195,
	192, 283, 284, -386, 21, -273, -345, -394, -393, -343,
	-344, 122, 207, 215, 215, 212, -273, -345, 206, 216,
	122, 215, 212, -273, 200, -351, -273, 484, 142, 203,
	37, 37, 365, 122, 365, 122, -351, -273, 207, -345,
	-270, 215, -271, 203, 28, 288, 122, 122, 122, 122,
	122, 122, 122, 122, 293, 675, -351, -351, -351, -351,
	-351, -351, -351, -351, 613, 613, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -355,
	-450, 81, -460, 90, 271, 340, 82, -282, -280, 84,
	86, 85, -351, -351, -162, 193, 277, 273, -121, 76,
	-121, -233, -289, -235, -463, 77, -163, -233, -233, -233,
	99, 203, -462, 99, 203, -462, 99, 203, -462, -272,
	-120, 134, -298, 81, 77, 81, 81, 513, 61, -148,
	-164, 604, -124, -119, 134, -290, -118, -115, 99, -175,
	-463, -463, -463, -463, -463, -463, -303, 143, 481, 484,
	226, 480, 473, 471, 470, 472, 500, 486, 517, 478,
	518, 662, -300, -303, -300, -175, -175, -175, -175, -175,
	-175, 16, 16, 16, 648, -210, 108, -121, 105, -175,
	-175, -175, -175, -289, -220, -462, -215, -215, -215, -215,
	-215, -215, -216, -215, -216, -216, -216, -216, -216, -216,
	-216, -216, -216, -216, -216, -171, -172, 34, -170, -9,
	-462, -173, -470, 55, 59, -462, -243, -248, -202, -283,
	-286, 227, -164, -124, -164, -164, 187, 537, 541, 542,
	-372, -351, -351, -351, 532, 484, 142, -351, -351, -351,
	-351, -351, 613, 613, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, 447, -351, -351, -351, -351, -351, -351, -355, -450,
	-351, -351, 675, -368, -367, 82, -287, 206, 49, -381,
	-350, -350, -350, -350, -350, -101, -288, 92, -462, 757,
	84, -148, 34, 82, 143, 81, -174, 133, -301, -166,
	-185, -462, 93, 94, 548, 549, 553, 550, 554, 555,
	568, 569, 570, 571, 545, 551, 552, 14, 50, 50,
	50, 81, 78, 78, 78, -312, 78, 77, 78, 77,
	78, 77, -168, 709, 710, -148, -224, -232, 84, 74,
	78, 77, -304, -289, -289, -289, 273, -435, 651, 337,
	-433, -431, 343, 344, 345, 346, 347, -416, 342, -423,
	339, 81, 82, 81, 674, 708, 729, 701, 29, -148,
	-413, -234, 76, -233, -234, -121, -177, -236, 199, -415,
	134, 134, -289, 203, -415, 351, -448, 651, -415, -415,
	16, -415, -378, 81, 81, 81, 84, 84, 84, 84,
	84, -140, -140, 81, 35, 82, 81, 143, -357, -79,
	195, 192, 283, 284, -359, -360, -363, -362, 123, 622,
	689, 76, -340, 82, -287, -350, -266, 208, 206, -462,
	82, -288, -288, -288, -289, 50, 50, -237, -288, -288,
	-289, -288, 33, 280, 281, 282, 82, 34, -351, 484,
	-237, 26, -237, 26, 33, 337, 285, 286, -340, -288,
	-289, -148, 216, 212, -288, -237, 26, 84, -237, -289,
	-237, 26, -237, 26, -237, 26, -237, 26, 643, -355,
	-121, -355, -460, -460, 81, 81, 81, -351, -351, -103,
	644, 217, -460, 81, -103, -460, -450, 81, -102, 217,
	220, 222, -355, -355, -355, -460, -460, -460, -460, 81,
	-356, 33, 615, 476, 610, 631, 609, 82, 92, 81,
	81, -460, 33, -460, 33, -460, -355, 638, -460, -462,
	-428, 249, 250, 203, 278, 100, -425, 754, 274, -233,
	78, 77, -153, -289, -463, -463, -463, -175, -175, -175,
	-175, -175, -175, -175, -175, -175, -299, 187, 527, -289,
	-319, -320, -207, 18, -225, -463, -175, -216, -216, -216,
	-216, -216, -463, -313, -313, -313, -313, -334, 477, -313,
	461, -313, 461, -463, -463, -463, -463, 24, 24, 24,
	24, -463, -175, -175, -175, -462, -114, 567, -121, 77,
	77, -463, -463, -294, 82, -242, 74, -242, -243, -272,
	-9, -463, -231, -173, -462, 11, 55, 59, 651, 199,
	-197, -200, -469, -237, -164, 77, -352, -352, -352, -352,
	-210, -164, -355, -355, -355, -351, 34, -351, -460, -460,
	81, 81, 81, -351, -351, -103, -460, 81, -103, -460,
	-450, 81, -102, -355, -355, -355, -460, -460, -460, -460,
	81, -356, 82, 92, 81, 81, -460, 33, -460, 33,
	-460, -355, 638, -460, -462, 643, 78, 77, -313, -313,
	50, -347, 76, -175, 28, 76, 82, 143, 81, -174,
	81, -175, -191, 81, 84, 84, 76, -226, 28, -453,
	-148, -401, -402, -403, 90, 650, 100, 260, 261, 217,
	262, 263, 264, -400, -304, -304, -304, -425, -438, -439,
	-437, 340, 360, 361, 348, -436, -434, 355, 356, 357,
	358, 99, 81, 81, 81, -424, 331, 99, 340, 21,
	28, 21, 28, 81, 81, 81, 81, 84, 75, -233,
	-261, -319, -148, -448, -415, -448, 334, -415, 78, 78,
	-364, 630, -462, 527, 619, 50, -340, -212, 220, 221,
	-304, -304, -293, -347, 50, -383, -385, 122, -288, 709,
	710, 709, 710, 34, 192, 747, 717, -340, -351, -300,
	34, 365, 365, 365, 365, -212, -271, 203, 50, -288,
	203, 365, 365, 96, 651, 81, 81, 612, 626, -451,
	-450, -316, 90, 74, -161, 278, -429, 74, -180, -174,
	-185, -174, 78, -289, 77, 77, 77, 134, -462, -404,
	-259, -208, 19, 21, -319, 82, -319, 82, -175, -175,
	-175, -175, -463, -463, -463, -175, -463, 81, -175, -175,
	-196, 122, 32, -242, -299, -463, -173, -462, -463, -463,
	77, -199, -462, -463, -210, -248, -121, -121, -121, -121,
	-228, -300, -351, -323, -450, 81, 81, 81, 612, 626,
	-451, -370, -369, 75, 211, 90, 616, 634, 747, 717,
	-367, -227, -227, -350, -350, -233, -463, -462, -233, -463,
	78, 78, -368, -9, -224, 24, -225, -403, 81, 264,
	260, 264, 264, 264, 264, 265, -429, -420, 90, 338,
	-437, 349, 715, 333, 362, 84, 84, 121, 35, 36,
	-434, 84, 84, 84, 84, -431, 21, 651, -423, 339,
	81, 81, 339, 81, 81, 331, -453, 41, 78, -404,
	-447, 28, -448, -447, 351, -361, 639, 84, -175, -462,
	-462, -275, 267, 78, 82, -305, -305, 76, -350, -350,
	-463, 77, -289, 33, 33, -212, -300, -300, -288, -289,
	-288, 203, -288, -462, 199, 77, -463, 328, 81, 367,
	-162, -430, -182, -175, -175, -175, -455, -456, -290, 722,
	-405, 43, -408, 44, -218, 573, -209, -121, -195, -123,
	-121, -463, -463, -463, -463, -111, 119, 651, -463, -463,
	-210, 21, 50, -235, -173, -9, -462, -200, -463, -228,
	-300, -463, -369, -450, -351, 81, -351, -351, 78, -330,
	759, 758, -175, 78, 78, -224, -226, 251, -226, 41,
	41, 256, 257, -428, 81, 81, 33, 350, 186, 33,
	84, 186, 575, 339, 81, 82, 340, 340, 21, -175,
	-405, -413, -447, -384, -462, 21, -463, -233, -175, -462,
	109, -368, -293, 76, -385, 55, -175, 142, 142, 203,
	-288, -383, -148, -450, -224, -428, 132, -426, 275, -463,
	-463, -463, -463, 77, -304, 24, 81, 606, -406, -407,
	-337, 47, 21, -217, -219, -289, 77, -463, 649, 71,
	652, -221, 124, 123, -194, 14, -9, 84, 81, 81,
	218, -463, -371, -370, -279, 651, -9, 252, -27, -4,
	-16, -17, -18, -19, -21, -72, -22, -23, -28, -29,
	-24, -82, -86, -87, -88, -84, -95, -93, -94, -90,
	-89, -32, -34, -35, -37, -40, -41, -38, -39, -36,
	-30, -33, -42, -25, -43, -44, -45, -50, -51, -31,
	-52, -46, 103, 205, 446, 309, 320, 321, 322, 82,
	325, 327, 323, 324, 319, 329, 445, -316, 84, 33,
	84, 33, 352, 340, 28, 84, -315, 204, 651, -383,
	-362, -463, -463, -233, 84, 78, 76, -368, 236, -351,
	-300, -288, -463, -71, 651, -27, -316, 186, -427, 276,
	-180, -463, -456, -457, 606, 29, 728, 527, 81, 48,
	44, -409, 45, 46, 81, 77, 28, -123, 61, 650,
	653, -463, -222, 102, -223, 121, 575, -179, 84, 186,
	-222, -243, -463, -148, -330, 212, 279, 510, -224, -213,
	254, 255, -224, -121, -56, -57, 104, -121, 82, -66,
	-295, 312, 313, 314, -290, 82, 82, -55, -27, 80,
	-55, -121, 82, 82, -465, 16, 58, -175, 108, -55,
	328, 658, 658, 81, -235, 84, 332, -463, 619, 50,
	-463, -371, -368, 78, 237, -300, 288, -224, 328, -174,
	-180, -430, -272, 81, 606, -462, 527, 21, 21, 21,
	21, -219, -220, 61, -223, 126, 127, 252, 126, 127,
	-174, 76, 351, 212, 212, -279, -224, 82, 82, -56,
	108, 106, -57, -121, 105, 310, 311, 315, -304, 77,
	762, 445, 322, 325, 327, 762, 328, 82, 16, 762,
	-224, -244, 34, 43, 124, 33, 337, 26, -416, -462,
	-275, 78, -371, -462, -224, -182, -430, -299, -458, -459,
	377, 92, 33, 81, -455, -462, 81, 81, 81, 81,
	651, 99, -181, -233, 351, 351, -226, 108, 106, 103,
	-55, 105, -55, 24, 24, 24, -319, -290, 108, -27,
	108, -55, -55, -55, -121, 326, -55, 96, 108, -27,
	-243, 8, -175, -462, -371, -175, 234, -27, -459, 92,
	33, -458, 92, 33, 74, 74, -174, -463, -455, 652,
	-223, 78, -20, -26, -19, -25, -16, -17, -18, 445,
	651, 103, -55, 762, -55, 762, -67, 84, -9, -65,
	-64, 84, -67, 317, 100, 318, 82, -321, 322, 82,
	762, 762, 762, 328, -121, 762, -60, 82, -224, -416,
	-463, -175, -463, -463, -224, 74, -174, 74, -174, 681,
	377, 681, 377, 74, -463, 653, -390, -391, 74, -224,
	-55, 108, -127, 762, 108, 762, 108, 106, -58, -59,
	107, -27, 77, 316, 33, 108, 108, 326, -55, 108,
	108, 77, -365, 640, -463, 74, 74, 377, 377, 681,
	377, -391, 74, -390, 74, 15, 14, 762, 108, 103,
	205, -55, 108, 106, -59, -121, -64, -175, 82, 322,
	-121, 762, 325, 327, 82, 84, -365, 74, 74, -389,
	219, 214, 217, 34, -389, 108, 103, 762, 205, -55,
	105, 82, 108, 108, 377, 681, 213, 33, 92, 108,
	762, -55, 325, 327, 205, 108, 762, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1721, 1219, 1721, 0, 1219, 0, 1219, 0, -2,
	133, 924, 925, 926, 927, 0, 1802, 0, 0, 0,
	0, 0, -2, 1181, 1182, 1185, 1182, 1182, 1211, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1325, 2750,
	-2, 1215, 1216, 1217, -2, -2, 0, 53, 0, 60,
	2, 1729, 0, 1232, 1221, 1729, 0, 0, 49, 0,
	0, 1219, 1219, 1219, 87, 88, 0, 119, 0, 121,
	0, 0, 1721, 1219, 0, 0, 0, 1806, 1806, 333,
	1806, 1806, 1821, 0, 1824, 331, 0, 1803, 1819, 1820,
	1822, 0, 0, 0, 0, 0, 1804, 1804, 1804, 1804,
	1804, 1804, 1804, 1804, 0, 0, 1095, 1416, 1418, 1419,
	1420, 1421, 1833, 1834, 2741, 2742, 2743, 2744, 2745, 2746,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2747, 2748, 2749, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 0, 0, 0,
	1100, 1101, 1102, 1103, 1104, 2735, 2736, 2737, 2738, 2739,
	2740, 1113, 1114, 0, 0, 0, 1172, 0, 1172, 1132,
	1133, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	1169, 1147, 1150, 1154, 0, 1729, 1729, 1169, 1160, 0,
	778, 779, 780, 1177, 1178, 1166, 1179, 1184, 1183, 1192,
	1192, 0, 1183, 1213, -2, 1213, 1353, 0, 457, 459,
	0, 480, 0, 483, 486, 1422, 0, -2, -2, 1844,
	1198, 0, 0, 1870, 1871, 0, 0, 0, 0, 0,
	2608, 231, 347, 272, 272, 272, 272, 272, 272, 272,
	0, 272, 272, 0, 272, 272, 272, 2624, 272, 0,
	272, 272, 272, 272, 272, 230, 346, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 336, 337, 338, 0,
	0, 0, 2608, 0, 730, 1186, 735, 733, 0, 727,
	724, 725, 0, 80, 0, 67, 81, 1753, 1375, 1376,
	1377, 1322, 0, 1326, -2, 0, 1804, 0, 1809, 69,
	1312, 1313, 1314, -2, 0, 0, 1320, 1321, -2, 1472,
	1833, 0, 0, 1226, 0, 0, 1223, 1229, 0, 1736,
	0, 0, 117, 1220, 47, 48, 2751, 59, 0, 0,
	1248, 1303, 0, 1431, 2305, 1437, -2, 2218, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 2163, 0, 0, 0,
	0, 0, 2260, 1510, 1511, 1512, 1513, 1514, 1515, 2471,
	2689, 2690, 1699, 1703, 1704, 1705, 1706, 1707, 1708, -2,
	-2, -2, 1682, 1683, 1697, 0, 2741, 2742, 2744, 2745,
	2746, 1771, 0, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 2286, 2349, 2237, 2354, 2182,
	2747, 2174, 2748, 2251, 2378, 2379, 2749, 2294, 2720, 0,
	-2, 2403, 2342, -2, -2, -2, 1578, -2, -2, -2,
	2731, 2732, 2717, 2722, 2244, 2192, 2302, 2343, 2183, 2204,
	2223, 2272, 2273, 2275, 2307, 2308, 2326, 2335, 2353, 2164,
	2165, 2166, 2267, 2268, 2375, 2374, 2373, 2376, 2409, 2407,
	2410, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2167, 2168, 2169, 2170, 2171, 2173, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2184, 2185, 2186, -2, 2191,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2202, 2203,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2219, 2220, 2222, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2238,
	2239, 2240, 2241, 2242, 2243, 2245, 2246, 2247, 2248, 2249,
	2250, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2261,
	2262, 2263, 2264, 2265, 2266, 2269, 2270, 2271, 2274, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2287,
	2288, -2, -2, 2291, 2292, 2293, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2303, 2304, 2306, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2336, 2337, 2338, 2339, 2340, 2341, 2344, 2345, 2346, 2347,
	2348, 2350, 2351, 2352, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2377, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2404, 2405, 2406, 2408, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 0, 1808, 1808, 0,
	104, 2691, 0, 1778, -2, -2, 1780, 0, 0, 0,
	-2, -2, -2, -2, 2175, -2, 1682, 0, 0, 0,
	0, 2163, 2164, 2165, 2166, 2172, 2174, 2182, 2183, 2187,
	2188, 2189, 2190, 2192, 2201, 2204, 2218, 2221, 2223, 2237,
	2244, 2251, 2260, 2267, 2268, 2272, 2273, 2275, 2286, 2289,
	2290, 2294, 2302, 2305, 2307, 2308, 2309, 2326, 2335, 2342,
	2343, 2349, 2353, 2354, 2373, 2374, 2375, 2376, 2378, 2379,
	2390, 2400, 2401, 2402, 2403, 2407, 2409, 2410, 120, 1721,
	0, 122, 0, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 804, 1827, 1828, 0, 1729, 1232, 0, 0,
	331, 0, 0, 0, 0, 0, 1806, 326, 0, 0,
	0, 0, 1806, 333, 0, 0, 1075, 0, 1076, 0,
	341, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1119, 1120, 1094, 0, 1096, 98, 1099, 0,
	0, 0, 0, 1117, 1118, 1121, 0, 1163, 1172, 1123,
	0, 0, 1806, 1806, 0, 0, 0, 0, 0, 1131,
	0, 806, 807, 1172, 1137, 1138, 1172, 1172, 1172, 1169,
	0, 1169, 1144, 1167, 1168, 1172, 0, 0, 0, 1149,
	0, 0, 0, 1157, 1158, 1172, 1162, 0, -2, 1190,
	-2, 1199, 0, 0, 79, 1214, 1213, 0, 1218, 1354,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 482,
	463, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 1353, 0, 0, 1839, 1845,
	1203, 1861, 1862, 0, 1872, 1873, 276, 0, 276, 0,
	0, 0, 0, 198, 272, 0, 200, 272, 272, 272,
	0, 272, 272, 207, 208, 272, 210, 211, 212, 272,
	214, 215, 272, 217, 218, 219, 272, 272, 222, 272,
	272, 225, 226, 227, 228, 229, 345, 276, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 731, 736, 737,
	732, 734, 705, 0, 0, 0, 0, 710, 711, 712,
	713, 0, 0, 716, 717, 0, 0, 0, 65, 66,
	0, 0, 0, 1325, 1323, 0, -2, 929, -2, 681,
	682, 683, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 1378, 0, 0, 1381, 0, 0, 0, 0, 0,
	1818, -2, 0, 0, 0, 0, 1310, 0, 1327, 0,
	1329, 0, -2, 0, 0, 0, 1818, 1333, 1334, 1335,
	1336, 1337, 0, 0, 0, 1474, 0, 57, 58, 1227,
	1228, 54, 62, 63, 55, 1224, 1225, 1230, 1231, 56,
	73, 0, 0, 1730, 1733, 1734, 1735, 1722, 1723, 1726,
	0, 0, 73, 1233, 1234, 1235, 1236, 1237, 1238, 0,
	1222, 0, 1249, 0, 0, 0, 0, 1304, 0, 1307,
	1308, 1309, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1438, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	1503, 1504, 1505, 1506, 1507, 1508, 0, 1700, 1701, 1702,
	1239, 0, 0, 0, 1239, 1239, 1239, 1239, 1239, 0,
	1478, 2416, 0, 2381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 0,
	1674, 0, 0, 1575, 0, 1576, 1577, 1579, 1593, 0,
	1580, 1581, 0, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 1589, 1590, 0, 0, 0, 0,
	0, 0, 98, 100, 1416, 0, 105, 107, 0, 0,
	2691, 1781, 1782, 672, 1796, 1797, 1798, 1799, 0, 767,
	768, 1794, 0, 1729, 821, 0, 554, 651, 572, 573,
	574, 641, 576, 643, 0, 643, 643, 1671, 1672, 643,
	643, 643, 618, 619, 620, 621, 622, 624, 625, 626,
	627, 628, 0, 0, 600, 641, 641, 641, 604, 631,
	632, 633, 634, 635, 636, 637, 638, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 646, 646, 648, 648, 648, 648, 648, 554,
	554, 554, 554, 554, 0, 803, 1030, 1031, 0, 1736,
	117, 1825, 1753, 0, 0, 333, -2, 0, -2, 0,
	1411, 0, 0, 0, 0, 146, 367, 349, 131, 0,
	0, 327, 332, 328, 329, 330, 0, 0, 0, 0,
	340, 0, 0, 1083, 96, 1805, 1084, 1085, 1086, 1087,
	1088, 342, 1089, 1090, 369, 0, 1417, 1835, 1836, 1837,
	1838, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 0,
	0, 0, 1105, 1107, 1111, 1112, 1106, 1108, 1115, 1109,
	1116, 1161, 1122, 1173, 0, 1175, 0, 0, 1353, 1127,
	1128, 1129, 1130, 808, 1136, 1139, 1140, 1146, 1172, 0,
	1353, 1145, 1170, 1171, 1148, 1466, 1151, 1591, 0, 1159,
	1180, 1196, 0, 1191, 0, 1197, 1201, 1200, 0, 1204,
	1207, 1208, 1209, 1210, 79, 1206, 0, 0, 0, 1212,
	458, 460, 462, 481, 0, 0, 484, 485, 487, 0,
	1423, 1841, 0, 0, 1864, 0, 1866, 1868, 0, 0,
	277, 278, 279, 276, 0, 232, 0, 294, 348, 0,
	199, 0, 274, 201, 202, 203, 272, 205, 206, 209,
	213, 216, 220, 221, 223, 224, 344, 0, 0, 0,
	0, 196, 0, 0, 729, 748, 0, 0, 1187, 1188,
	0, 706, 707, 708, 709, 722, 715, 720, 720, 0,
	0, 82, 0, 0, 1755, 1758, 1759, 1760, 1761, 1762,
	1763, 1831, 1832, 0, 928, 684, 685, 686, 0, 765,
	765, 765, 677, 0, 379, 1371, 1373, 0, 1368, 1379,
	1380, 1382, 0, 1384, 0, 0, 1387, 1388, 1389, 1357,
	0, 0, 1319, 1471, 1473, 0, 0, 1425, 1331, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	1348, 0, 0, 0, 1349, 0, 1475, 1476, 1244, 1245,
	0, 0, 45, 0, 1737, 0, 0, 0, 0, 1725,
	1727, 1728, 0, 0, 1710, 0, 0, 70, 117, 117,
	50, 1432, 1433, 1434, 1436, 1453, 0, 1455, 1457, 1305,
	1306, 1250, 0, 1684, -2, 1686, 1687, -2, -2, -2,
	1443, 1444, 1468, 1469, 1470, 0, 0, 0, 0, 1466,
	1448, 0, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1502, 1606, 1607, 1608, 0, 1695,
	0, 1696, 1500, 0, 0, 0, 1709, 1501, 1690, 1509,
	1474, 1240, 1241, 1693, 1694, 1691, 1692, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 0, 1550, 0, 0,
	0, 0, 0, 1484, 1699, 0, 1484, 1699, 0, 0,
	2276, 2388, 2168, 0, 0, 0, 1680, 1677, 0, 0,
	0, 0, 2735, 2736, 0, 1592, 0, 0, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 0,
	0, 0, 1276, 1277, 1278, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 0, 102, 0, 1415, 0, -2,
	0, 0, 94, 95, 0, 0, 0, 1779, 0, 0,
	0, 110, 111, 106, 1783, 673, 0, -2, 1790, 1699,
	1792, 1684, 0, 1736, -2, 539, 540, 541, 542, 0,
	785, 794, 0, 0, 783, 0, 785, 785, 0, 781,
	782, 545, 654, 652, 653, 575, 0, 605, 0, 643,
	643, 1671, 1672, 607, 643, 643, 610, 643, 643, 613,
	616, 617, 623, 0, 0, 601, 602, 603, 592, 0,
	593, 646, 595, 0, 596, 597, 598, 599, 546, 547,
	548, 549, 550, 802, 0, 296, 0, 0, 0, 0,
	0, 126, 1807, 127, 0, 390, 391, 0, 298, 0,
	334, 335, 148, 0, 0, 350, 0, 137, 0, 534,
	535, 0, 1077, 0, 1079, 339, 1091, 1082, 0, 0,
	0, 0, 0, 99, 0, 1174, 1124, 1125, 1126, 1429,
	0, 0, 1141, 1169, 1172, 1164, 0, 0, 1152, 0,
	1195, 1193, 1202, 1205, 1350, 0, 0, 464, 465, 466,
	488, 0, 1842, 1843, 1840, 1863, 0, 1867, 1869, 0,
	280, 282, 0, 0, 190, 0, 0, 273, 0, 204,
	0, 0, 0, 0, 0, 728, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1189, 714,
	0, 718, 0, 719, 703, 704, 83, 1754, 0, 0,
	1324, 765, 0, 766, 0, 0, 1038, 931, 932, 933,
	1040, 0, -2, 1036, 1036, 765, 1036, 0, 0, 0,
	0, 0, 0, 970, 765, 1036, 1813, 0, 983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 1029,
	765, 765, 765, 765, 765, 765, 765, 765, 0, 0,
	765, 765, 765, 765, 765, 765, 765, 765, 765, 765,
	765, 765, 765, 765, 765, 765, 765, 765, 765, 765,
	765, 765, 765, 0, 765, 765, 1032, 1073, 0, 1365,
	1372, 0, 0, 1366, 0, 1367, 1383, 1385, 1386, 1315,
	0, 1357, 1311, -2, 0, 1361, 1330, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 74, 2484, 0, 77, 0, 0,
	1731, 1732, 1724, 0, 1800, 1801, 1711, 1712, 1429, 0,
	0, 1242, 1454, 1456, 1458, 0, 1474, 1445, 1466, 1449,
	0, 1446, 0, 1440, 1548, 0, 0, 0, 0, 0,
	0, 1479, 1546, 1547, 1549, 0, 0, 0, 1553, 0,
	0, 1557, 0, 0, 1599, 0, 0, 1600, 1562, 0,
	0, 0, 0, 0, 1568, 1721, 0, 1678, 0, 0,
	1571, 1572, 1573, 1574, 1594, 0, 0, 0, 0, 1595,
	1596, 1597, 1598, 1535, 0, 1536, 0, 0, 0, 0,
	0, 0, 1543, 1544, 1545, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1587, 0, 0,
	1414, 0, 1429, 0, 1429, 1429, 101, 0, 1424, 108,
	109, 0, 0, 115, 674, 675, 676, 1791, 0, 297,
	536, 822, 677, 899, 765, 765, 765, 0, 765, 765,
	765, 765, 765, 0, 0, 765, 765, 765, 765, 765,
	765, 765, 765, 765, 765, 765, 765, 765, 765, 765,
	765, 765, 0, 765, 765, 765, 765, 765, 765, 0,
	765, 765, 0, 0, 0, 0, 793, -2, -2, 785,
	785, 785, 784, 785, 785, 776, 786, 787, 777, 800,
	555, 556, 0, 558, 559, 560, 561, 562, 563, 564,
	565, 0, 0, 0, 0, 570, 0, 0, 0, 0,
	663, 0, 698, 700, 0, 0, 571, 655, 0, 0,
	0, 606, 643, 614, 608, 609, 611, 612, 0, 639,
	0, 0, 594, 0, 818, 0, 1826, 116, 1753, 0,
	0, 392, 393, 394, 1412, 0, 299, 300, 0, 0,
	0, 0, 0, 158, 0, 368, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 1081, 1092, 1093, 97, 343,
	370, 0, 0, 1110, 1134, 0, 809, 810, 1353, 1143,
	1467, 1153, 1155, 1156, 1351, 1352, 102, 0, 1865, 0,
	0, 0, 0, 0, 0, 292, 275, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 0, 0, 0, 0, 1756, 1757, 0, 690,
	691, 692, 693, 694, 695, 696, 898, 677, 1039, 0,
	0, 0, 0, 1041, 906, 0, 785, 0, 0, 940,
	941, 0, 1037, 920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 0,
	962, 963, 964, 0, 965, 0, 0, 0, 0, 0,
	0, 0, 1814, 1815, 1816, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 1062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	1022, 879, 880, 881, 882, 883, 895, 896, 897, 884,
	885, 886, 0, 0, 382, 0, 0, 0, 1369, 0,
	1374, 0, 1359, 1316, -2, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 1246, 0, 0, 0, 75, 664, 1738, 1739, 46,
	1713, 71, 72, 117, 1251, 1698, 0, 1447, 0, 1450,
	1516, 1259, 1259, 1259, 1259, 1259, 0, 641, 641, 641,
	1656, 641, 648, 1659, 1661, 1662, 1663, 641, 1665, 641,
	1668, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1675, 1570, 1681, 0, 0,
	0, 0, 0, 1252, 1253, 1255, 1537, 1538, 1539, 1540,
	1541, 1542, 1520, 1260, 1521, 1522, 1524, 1525, 1527, 1528,
	1529, 1530, 1532, 1533, 1534, 1764, 1764, 0, -2, 1745,
	0, 1742, 1325, 1751, 1752, 0, 1429, 1772, 0, 0,
	0, 0, 1721, 1429, 92, 93, 0, 112, 113, 114,
	823, 0, 0, 0, 765, 0, 765, 0, 0, 0,
	0, 0, 765, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 0, 0, 0, 0, 0, 865, 866,
	0, 0, 0, 0, 788, 641, 641, 0, 783, 792,
	769, 771, 772, 773, 775, 0, 801, 557, 0, 0,
	568, 0, 0, 669, 670, 671, 656, 0, 0, 659,
	660, 0, 1441, 1442, 1591, 1591, 1591, 1591, 1591, 1591,
	0, 0, 0, 0, 1591, 1591, 1591, 0, 697, 699,
	701, 702, 642, 644, 645, 615, 629, 0, 630, 0,
	649, 0, 805, 819, 820, 0, 118, 0, 137, 0,
	306, 0, 302, 0, 0, 0, 0, 166, 0, 149,
	150, 151, 153, 154, 0, 0, 0, 147, 0, 352,
	0, 355, 356, 357, 0, 0, 0, 0, 0, 1078,
	1080, 0, 0, 1356, 1098, 1430, 1172, 664, 0, 292,
	281, 283, 284, 0, 292, 295, 191, 0, 192, 194,
	0, 193, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 0, 0, 723, 721, 687, 688, 689, 930, 934,
	-2, 1036, 0, 0, 912, 901, 0, 0, 910, 911,
	907, 0, 1033, 0, 0, 1825, 783, 1821, 0, 0,
	-2, 942, 943, 966, 967, 968, 0, 1043, 0, 0,
	0, 0, 948, 949, 950, 951, 0, 765, 0, 0,
	0, 0, 0, 0, 971, 972, 973, 974, 1033, 0,
	0, 978, 0, 0, 0, 0, 0, 1050, 0, 0,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1027, 984,
	985, 986, 987, 988, 989, 990, 991, 0, 0, 994,
	875, 876, 995, 996, 997, 998, 999, 1000, 1001, 872,
	873, 874, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 887, 888, 889, 890, 891, 892, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 0, 1025, 0,
	386, 383, 384, 0, 380, 0, 379, 0, 0, 0,
	1358, 0, 1328, 1362, 1426, 1427, 1428, 1338, 1339, 0,
	1341, 1342, 0, 1344, 1345, 0, 1364, 0, 0, 78,
	1854, 665, 1718, 0, 1243, 1517, 1451, 1519, 1523, 1518,
	1526, 1531, 1551, 1651, 664, 664, 1657, 1658, 1660, 1664,
	1666, 1667, 1669, 1555, 1552, 1554, 1556, 0, 0, 0,
	0, 1563, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 1584, 1585, 1257, 1256, 84, 0, 85, 1764, 0,
	0, 0, 0, 0, 0, -2, -2, -2, 2147, 2111,
	1749, 1766, 0, 0, 1721, 0, 0, 0, 0, 0,
	1729, 91, 824, 825, 826, 0, 765, 0, 829, 830,
	832, 833, 834, 0, 0, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 0, 869, 0, 871, 753, 0, 1726, 1726,
	785, 785, 0, 0, 0, 0, 666, 667, 668, 657,
	658, 0, 662, 640, 0, 0, 0, 0, 116, 136,
	0, 117, 307, 308, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 301, 303, 304, 305, 379, 184, 167,
	168, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	0, 0, 155, 156, 157, 351, 0, 0, 354, 0,
	0, 0, 0, 138, 139, 0, 141, 137, 0, 0,
	1142, 1854, 1413, 285, 292, 285, 0, 195, 750, 751,
	914, 0, 0, 0, 0, 908, 0, 936, 1034, 0,
	554, 554, 0, 785, 785, 0, 1065, 0, 969, 944,
	946, 945, 947, 0, 0, 954, 955, 1033, 0, 959,
	0, 1044, 1045, 1046, 1047, 975, 0, 0, 0, 0,
	0, 1048, 1049, 0, 0, 992, 993, 1023, 1024, 0,
	893, 1069, 0, 0, 1074, 381, 1073, 0, 373, 388,
	389, 0, 1370, 1360, 0, 0, 0, 1247, 0, 1856,
	1850, 1271, 0, 0, 1652, 1653, 1654, 1655, 0, 0,
	0, 0, 1564, 1565, 1566, 1601, 1569, 1676, 0, 0,
	1721, 0, 0, 86, 1357, -2, 1743, 0, 0, 1750,
	1325, 1768, 0, 103, 1729, 1773, 1774, 1775, 1776, 1777,
	90, 827, 0, 831, 877, 878, 835, 836, 867, 868,
	0, 752, 756, 0, 765, 0, 765, 765, 763, 764,
	789, 790, 791, 770, 774, 0, 551, 0, 0, 661,
	647, 650, 0, 116, 118, 0, 118, 309, 310, 311,
	312, 314, 315, 0, 0, 0, 382, 130, 0, 0,
	169, 0, 0, 0, 0, 179, 180, 181, 182, 183,
	161, 162, 163, 164, 165, 152, 0, 0, 353, 0,
	360, 362, 0, 361, 363, 0, 135, 0, 1355, 1856,
	187, 0, 285, 189, 293, 1063, 0, 913, 0, 0,
	0, 0, 0, 935, 1035, 543, 544, 0, 1825, 0,
	1042, 0, 0, 0, 953, 956, 957, 960, 976, 977,
	0, 0, 981, 0, 0, 0, 1026, 116, 387, 385,
	382, 371, 375, 0, 0, 0, 0, 1391, 0, 2576,
	76, 1858, -2, 0, 68, 0, 1719, 1720, 1714, 1715,
	1717, 1558, 1560, 1559, 1561, 0, 0, 0, 1582, 1583,
	1261, 0, 0, 1741, 1744, 1746, 0, 1767, 1769, 89,
	828, 870, 757, 758, 0, 760, 0, 0, 0, 566,
	552, 553, 0, 569, 754, 142, 0, 0, 79, 316,
	317, 318, 319, 386, 185, 186, 170, 171, 0, 173,
	174, 0, 0, 0, 365, 0, 358, 359, 0, 1097,
	1810, 286, 188, 900, 0, 906, 902, 0, 0, 0,
	0, 0, 0, 0, 1066, 0, 952, 765, 0, 0,
	980, 0, 1052, 894, 79, 386, 0, 377, 0, 1340,
	1343, 1346, 0, 0, 0, 0, 0, 0, 1857, 1852,
	0, 1849, 0, 1272, 1273, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 759, 761, 762,
	0, 551, 123, 755, 124, 0, 116, 395, 116, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 0, 0, 0, 0, 0, 79, 0,
	79, 0, 0, 0, 440, 0, 79, 0, 0, 175,
	0, 177, 178, 364, 0, 140, 1357, 0, 0, 0,
	0, 903, 904, 0, 909, 754, 0, 0, 0, 0,
	961, 979, 1051, 0, 1028, 116, 1070, 0, 372, 0,
	373, 1817, 1392, 1393, 0, 0, 1394, 0, 0, 0,
	0, 1855, 0, 0, 1851, 0, 0, 1716, 1602, 0,
	1605, 1254, 1262, 0, 1265, 0, 0, 0, 1301, 0,
	1263, 1765, -2, 0, 567, 0, 0, 0, 142, 116,
	0, 0, 129, 0, 0, 410, 0, 0, 1827, 0,
	0, -2, -2, -2, 1829, 437, 438, 0, 489, 0,
	0, 0, 454, 455, 0, 441, 0, 456, 320, 0,
	116, 172, 176, 366, 42, 0, 0, 1064, 0, 908,
	905, 937, 0, 754, 0, 958, 1053, 1071, 116, 0,
	373, 376, 0, 1397, 0, 0, 0, 0, 0, 0,
	0, 1274, 1275, 1603, 0, 1266, 1267, 1268, 1269, 1270,
	0, 0, 143, 0, 0, 125, 118, 396, 397, 0,
	0, 79, 411, 0, 79, 0, 0, 0, 664, 0,
	79, 79, 79, 79, 0, 79, 79, 0, 442, 79,
	79, 44, 0, 1811, 1812, 287, 288, 289, 291, 0,
	0, 754, 939, 0, 79, 374, 378, 1390, 1398, 1399,
	0, 0, 0, 1406, 0, 0, 1859, 1860, 1853, 1847,
	0, 0, 1302, 0, 144, 145, 79, 0, 79, 408,
	0, 79, 0, 0, 0, 0, 672, 1830, 0, 490,
	321, 0, 0, 0, 0, 0, 0, 0, 323, 116,
	43, 0, 0, 0, 938, 0, 2295, 116, 1400, 0,
	0, 1401, 0, 0, 0, 0, 0, 1395, 0, 0,
	1264, 795, 116, 398, 399, 400, 401, 402, 403, 79,
	0, 406, 0, 79, 0, 79, 420, 421, 422, 79,
	429, 431, 432, 433, 0, 435, 436, 424, 445, 322,
	79, 79, 79, 79, 0, 79, 439, 443, 132, 290,
	917, 0, 1067, 1068, 1072, 0, 0, 0, 0, 1402,
	1403, 1407, 1409, 0, 1396, 1604, 796, 797, 0, 128,
	0, 405, 80, 79, 0, -2, 0, 79, 0, 417,
	0, 423, 0, 434, 0, 324, 0, 0, 0, 0,
	0, 0, 915, 0, 917, 0, 0, 0, 0, 1408,
	1410, 798, 0, 799, 0, 0, 0, 79, 0, 409,
	413, 0, 0, 79, 418, 0, 430, 425, 325, 446,
	0, 79, 448, 451, 444, 918, 916, 0, 0, 811,
	813, 814, 0, 0, 812, 404, 407, 79, 415, 0,
	79, 447, 0, 0, 1404, 1405, 815, 816, 817, 0,
	79, 0, 449, 452, 414, 0, -2, 450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 762,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1146
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1240
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1267
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1287
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1344
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1368
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1390
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1437
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1471
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1496
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1769
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1785
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1826
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1840
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1853
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1863
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1884
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2188
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2320
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2337
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2518
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2530
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2714
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2718
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2742
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2748
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2753
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2758
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2764
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2800
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2804
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2811
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2883
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2905
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2913
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2928
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2932
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2943
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2947
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2951
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3098
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3219
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3508
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3519
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3542
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3909
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3935
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3988
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4099
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4117
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4121
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4125
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4135
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4286
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.bytes = nil
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4408
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4412
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4418
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4422
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4441
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4478
		{
			yyVAL.val = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.val = ":="
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4504
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4508
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4520
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4537
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4566
		{
			yyVAL.val = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4575
		{
			yyVAL.val = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4609
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 795:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4623
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4627
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4631
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4635
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4639
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4644
		{
			yyVAL.bytes = []byte(nil)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4668
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.val = ""
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.val = Restrict
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.val = Cascade
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.val = NoAction
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.val = SetDefault
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = SetNull
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = true
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.val = true
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.val = false
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4743
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4805
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4945
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4951
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5063
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5073
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5093
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			yyVAL.val = false
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.val = true
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			yyVAL.val = ""
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5133
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5148
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5152
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 915:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5161
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 916:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5170
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5181
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5185
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.val = ""
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5194
		{
			yyVAL.val = ""
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5198
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = string("")
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 930:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5248
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5268
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5281
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5295
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5299
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5305
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5323
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5342
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5359
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5383
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5405
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5433
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5451
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5470
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5480
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5490
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5500
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5510
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5550
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5565
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5581
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5591
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5601
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5617
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5631
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5645
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5659
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5673
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5687
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5713
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5723
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5733
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5759
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5773
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5800
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5810
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5820
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5830
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5840
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5857
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5870
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5885
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5899
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5920
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5941
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5960
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5970
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6002
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6010
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6014
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6018
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6022
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6026
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6030
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6034
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6042
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6050
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6058
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6062
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6066
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6070
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6086
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6150
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6160
		{
			yyVAL.val = true
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			yyVAL.val = false
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6174
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6194
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6207
		{
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6226
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6232
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6240
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6244
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6248
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6252
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6256
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6260
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6264
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6268
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6272
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6276
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6280
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6284
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6309
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6313
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6317
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6321
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6326
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6330
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6336
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6340
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6346
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6350
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6356
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1070:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6386
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1071:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6412
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1072:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6440
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6470
		{
			yyVAL.val = EventName{}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6474
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6480
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6484
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6496
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6520
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6536
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6540
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6546
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6571
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6591
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6609
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6626
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6643
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6663
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6683
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6698
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6713
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6732
		{

		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6736
		{
			yyVAL.val = Restrict
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6740
		{
			yyVAL.val = Cascade
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6746
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6759
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6774
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6780
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6784
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6788
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6801
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6805
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6809
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6813
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6819
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6823
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6830
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6834
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6840
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6844
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6848
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6852
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6858
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6862
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6866
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6876
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6887
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6898
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6909
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6921
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6933
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6946
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6959
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6970
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6981
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6992
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7003
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7013
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7023
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7036
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7046
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7057
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7067
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7077
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7088
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7100
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7112
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7126
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7139
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7150
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7164
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7176
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7186
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7197
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7210
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7220
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7232
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7243
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7256
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7265
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7276
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7287
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7298
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7309
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7323
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7333
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7343
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7353
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7365
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = false
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7375
		{
			yyVAL.val = true
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7381
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7385
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7391
		{
			yyVAL.val = ""
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7395
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7399
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7405
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7409
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7413
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7417
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7423
		{
			yyVAL.val = ""
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7427
		{
			yyVAL.val = SessionStr
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7431
		{
			yyVAL.val = GlobalStr
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7437
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7449
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7474
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7478
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7484
		{
			yyVAL.val = &Begin{}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7488
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7494
		{
			yyVAL.val = &Begin{}
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7498
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7502
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7506
		{
			yyVAL.val = &Begin{}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7511
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7515
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7520
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7524
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7539
		{
			yyVAL.val = &Commit{}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7545
		{
			yyVAL.val = &Rollback{}
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7551
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7557
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7561
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7565
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7569
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7575
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7581
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7585
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7589
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7595
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			yyVAL.val = ""
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7607
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7612
		{
			yyVAL.val = false
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7616
		{
			yyVAL.val = true
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7628
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7648
		{
			setAllowComments(yylex, true)
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7652
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7660
		{
			yyVAL.val = Comments(nil)
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7664
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7670
		{
			yyVAL.val = UnionStr
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7674
		{
			yyVAL.val = UnionAllStr
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7678
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7684
		{
			yyVAL.val = IntersectStr
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7688
		{
			yyVAL.val = IntersectAllStr
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7692
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7698
		{
			yyVAL.val = ExceptStr
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7702
		{
			yyVAL.val = ExceptAllStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7706
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7711
		{
			yyVAL.val = QueryOpts{}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7715
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7726
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7737
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7748
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7770
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = ""
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = AllStr
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = DistinctStr
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7796
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7804
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7815
		{
			yyVAL.val = &StarExpr{}
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7819
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7823
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7827
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7833
		{
			yyVAL.val = &StarExpr{}
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7837
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7841
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7845
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7851
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7855
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7861
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7866
		{
			yyVAL.val = ColIdent{}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7869
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7874
		{
			yyVAL.val = Exprs(nil)
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7878
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7883
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7887
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7900
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7907
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7930
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7945
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7949
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7953
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7957
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7964
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7972
		{
			yyVAL.val = Window(nil)
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7975
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7981
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7990
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8034
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8039
		{
			yyVAL.val = ColIdent{}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8043
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8047
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8051
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8057
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8061
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8071
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8075
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8085
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8089
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8104
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8119
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8125
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8131
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8154
		{
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8156
		{
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8160
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8170
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8185
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8189
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8193
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8197
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8203
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8207
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8211
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8215
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8219
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8225
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8229
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8233
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8239
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8243
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8247
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8251
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8255
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8259
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8265
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8271
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8275
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8285
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8289
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8294
		{
			yyVAL.val = Expr(nil)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8304
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8308
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = Columns(nil)
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8333
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8337
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8369
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8379
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = JoinCondition{}
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8387
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8391
		{
			yyVAL.val = JoinCondition{}
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8393
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8398
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8402
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8408
		{
			yyVAL.val = JoinStr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8412
		{
			yyVAL.val = JoinStr
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8416
		{
			yyVAL.val = JoinStr
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8422
		{
			yyVAL.val = StraightJoinStr
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8428
		{
			yyVAL.val = LeftJoinStr
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8432
		{
			yyVAL.val = LeftJoinStr
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8436
		{
			yyVAL.val = RightJoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8440
		{
			yyVAL.val = RightJoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8444
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8448
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8454
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8458
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1390:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8468
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8480
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8490
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8494
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8499
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8506
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8510
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8514
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8518
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8522
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8526
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8530
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8534
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1405:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8538
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8542
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8548
		{
			yyVAL.val = &NullVal{}
		}
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8552
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8558
		{
			yyVAL.val = &NullVal{}
		}
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8562
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8568
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8572
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8578
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8584
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8588
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8594
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8598
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8614
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8620
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8624
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8630
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8635
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8639
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8643
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8647
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8652
		{
			yyVAL.val = Expr(nil)
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8656
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8662
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8666
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8670
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8696
		{
			yyVAL.val = ""
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8706
		{
			yyVAL.val = BoolVal(true)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = BoolVal(false)
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8716
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8732
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1451:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8752
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = IsNullStr
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = IsNotNullStr
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = IsTrueStr
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = IsFalseStr
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = EqualStr
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = LessThanStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = GreaterThanStr
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = LessEqualStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = NotEqualStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = Expr(nil)
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8817
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8823
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8827
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8831
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8837
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8843
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8847
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8852
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8859
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8863
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8869
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8873
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8879
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8883
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8887
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8891
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8895
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8899
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8903
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8907
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8911
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8915
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8935
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8939
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8947
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8951
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8955
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8959
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8963
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8967
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8971
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8979
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8987
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9001
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9005
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9009
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9029
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1517:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9033
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1518:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1519:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9063
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9067
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9071
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9075
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9079
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9083
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9087
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9091
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9095
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9099
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9103
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9107
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9116
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9120
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9124
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9128
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9140
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9144
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9148
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9152
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9156
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1551:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1552:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9199
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9203
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9207
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9211
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9215
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1559:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9219
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1560:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9223
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1561:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9227
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9231
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9235
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1564:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9239
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1565:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9243
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1566:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9247
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1567:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9251
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1569:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9276
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9280
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9304
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9308
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9312
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9316
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1582:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9320
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1583:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9324
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9328
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1585:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9332
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9340
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9344
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9348
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9352
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9356
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9369
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9373
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9391
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9395
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9399
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9403
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9409
		{
			yyVAL.val = ""
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9413
		{
			yyVAL.val = BooleanModeStr
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9417
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1604:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9421
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9425
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9431
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9435
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9439
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9445
		{
			yyVAL.val = Armscii8Str
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9449
		{
			yyVAL.val = AsciiStr
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = Big5Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = UBinaryStr
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9461
		{
			yyVAL.val = Cp1250Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9465
		{
			yyVAL.val = Cp1251Str
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9469
		{
			yyVAL.val = Cp1256Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9473
		{
			yyVAL.val = Cp1257Str
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9477
		{
			yyVAL.val = Cp850Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9481
		{
			yyVAL.val = Cp852Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9485
		{
			yyVAL.val = Cp866Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9489
		{
			yyVAL.val = Cp932Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = Dec8Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = EucjpmsStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = EuckrStr
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = Gb18030Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = Gb2312Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9513
		{
			yyVAL.val = GbkStr
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9517
		{
			yyVAL.val = Geostd8Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9521
		{
			yyVAL.val = GreekStr
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9525
		{
			yyVAL.val = HebrewStr
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9529
		{
			yyVAL.val = Hp8Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9533
		{
			yyVAL.val = Keybcs2Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = Koi8rStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = Koi8uStr
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = Latin1Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Latin2Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = Latin5Str
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Latin7Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = MacceStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = MacromanStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = SjisStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Swe7Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = Tis620Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = Ucs2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = UjisStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9589
		{
			yyVAL.val = Utf16Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9593
		{
			yyVAL.val = Utf16leStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9597
		{
			yyVAL.val = Utf32Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9615
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9619
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9623
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9627
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9631
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9635
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9639
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9643
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9650
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9654
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9658
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9662
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9666
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9670
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9674
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9678
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9682
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9686
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9690
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9694
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9700
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9704
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9709
		{
			yyVAL.val = Expr(nil)
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9713
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9718
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9722
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9728
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9732
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9743
		{
			yyVAL.val = Expr(nil)
		}
	case 1681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9747
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9753
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9757
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9765
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9769
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9773
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9777
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9781
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9785
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9789
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9809
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9813
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9817
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9823
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9835
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9839
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9843
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9847
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9851
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9855
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9859
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9863
		{
			yyVAL.val = &NullVal{}
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = Exprs(nil)
		}
	case 1714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9892
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9896
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = Expr(nil)
		}
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9917
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9922
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9926
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9932
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9936
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9942
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = AscScr
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = AscScr
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9955
		{
			yyVAL.val = DescScr
		}
	case 1729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9964
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9968
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9972
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = ""
		}
	case 1737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9995
		{
			yyVAL.val = ForUpdateStr
		}
	case 1738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9999
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10003
		{
			yyVAL.val = ShareModeStr
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10009
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10013
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10033
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10037
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10042
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10049
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10053
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10057
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1748:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10062
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10069
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10073
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10082
		{
			yyVAL.val = Columns(nil)
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10092
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10096
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10102
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10106
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10110
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10114
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10118
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10122
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10126
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10131
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10135
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10145
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10151
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10155
		{
			yyVAL.val = ValTuple{}
		}
	case 1770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10161
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10167
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10177
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10181
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10187
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10204
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10208
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10214
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10225
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10238
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10251
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10257
		{
			yyVAL.val = SetScope_Global
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = SetScope_Session
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10267
		{
			yyVAL.val = SetScope_Session
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10271
		{
			yyVAL.val = SetScope_Persist
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10275
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10281
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10289
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10306
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10321
		{
			yyVAL.val = &Default{}
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10325
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10334
		{
			yyVAL.val = 0
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10336
		{
			yyVAL.val = 1
		}
	case 1804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10339
		{
			yyVAL.val = 0
		}
	case 1805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = 1
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10344
		{
			yyVAL.val = 0
		}
	case 1807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10346
		{
			yyVAL.val = 1
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10349
		{
			yyVAL.val = ""
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = IgnoreStr
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10354
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10356
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10361
		{
			yyVAL.val = struct{}{}
		}
	case 1814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10363
		{
			yyVAL.val = struct{}{}
		}
	case 1815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10367
		{
			yyVAL.val = struct{}{}
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10369
		{
			yyVAL.val = struct{}{}
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = struct{}{}
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10374
		{
			yyVAL.val = struct{}{}
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10378
		{
			yyVAL.val = UniqueStr
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10380
		{
			yyVAL.val = FulltextStr
		}
	case 1821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10382
		{
			yyVAL.val = SpatialStr
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10384
		{
			yyVAL.val = VectorStr
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10387
		{
			yyVAL.val = ""
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10389
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10392
		{
			yyVAL.val = ColIdent{}
		}
	case 1826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10394
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10398
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10402
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10412
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10429
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10436
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10440
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10444
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = string("")
		}
	case 1840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10451
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10454
		{
			yyVAL.val = string("")
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = IgnoreStr
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = ReplaceStr
		}
	case 1844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10461
		{
			yyVAL.val = BoolVal(false)
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10463
		{
			yyVAL.val = BoolVal(true)
		}
	case 1846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10470
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = BoolVal(false)
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = BoolVal(true)
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10484
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10505
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10514
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10518
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = &Lines{}
		}
	case 1859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10527
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10536
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10547
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10553
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10557
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10563
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10578
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10596
		{
			yyVAL.val = LockRead
		}
	case 1867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10600
		{
			yyVAL.val = LockReadLocal
		}
	case 1868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10604
		{
			yyVAL.val = LockWrite
		}
	case 1869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10608
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10614
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10620
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10631
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10641
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11569
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11578
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
