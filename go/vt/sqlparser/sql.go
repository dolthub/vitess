// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1810,
	201, 1831,
	-2, 335,
	-1, 62,
	243, 1184,
	244, 1184,
	-2, 1173,
	-1, 90,
	272, 335,
	-2, 1816,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 545,
	1, 2514,
	6, 2514,
	7, 2514,
	29, 2514,
	188, 2514,
	764, 2514,
	-2, 1219,
	-1, 558,
	188, 1841,
	-2, 1835,
	-1, 559,
	188, 1842,
	-2, 1836,
	-1, 663,
	1, 685,
	764, 685,
	-2, 683,
	-1, 672,
	1, 1325,
	8, 1325,
	9, 1325,
	10, 1325,
	17, 1325,
	18, 1325,
	19, 1325,
	20, 1325,
	22, 1325,
	24, 1325,
	26, 1325,
	35, 1325,
	36, 1325,
	65, 1325,
	66, 1325,
	67, 1325,
	68, 1325,
	69, 1325,
	71, 1325,
	72, 1325,
	75, 1325,
	76, 1325,
	78, 1325,
	79, 1325,
	97, 1325,
	527, 1325,
	575, 1325,
	653, 1325,
	764, 1325,
	-2, 1825,
	-1, 677,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	26, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 705,
	188, 2210,
	-2, 1447,
	-1, 738,
	188, 2318,
	-2, 1717,
	-1, 739,
	188, 2400,
	-2, 1449,
	-1, 740,
	188, 2230,
	-2, 1450,
	-1, 809,
	188, 2181,
	-2, 1681,
	-1, 812,
	188, 2196,
	-2, 1599,
	-1, 813,
	188, 2199,
	-2, 1599,
	-1, 814,
	188, 2410,
	-2, 1599,
	-1, 816,
	188, 2197,
	-2, 1599,
	-1, 817,
	188, 2411,
	-2, 1599,
	-1, 818,
	188, 2412,
	-2, 1599,
	-1, 877,
	188, 2198,
	-2, 1599,
	-1, 960,
	188, 2298,
	-2, 1599,
	-1, 961,
	188, 2299,
	-2, 1599,
	-1, 1074,
	110, 2527,
	121, 2527,
	188, 2527,
	-2, 1792,
	-1, 1075,
	110, 2658,
	121, 2658,
	188, 2658,
	-2, 1793,
	-1, 1080,
	110, 2555,
	121, 2555,
	188, 2555,
	-2, 1794,
	-1, 1081,
	110, 2606,
	121, 2606,
	188, 2606,
	-2, 1795,
	-1, 1082,
	110, 2607,
	121, 2607,
	188, 2607,
	-2, 1796,
	-1, 1083,
	110, 2454,
	121, 2454,
	188, 2454,
	-2, 1801,
	-1, 1085,
	110, 2583,
	121, 2583,
	188, 2583,
	-2, 1803,
	-1, 1257,
	454, 1198,
	-2, 1202,
	-1, 1259,
	454, 1198,
	-2, 1202,
	-1, 1384,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1386,
	1, 686,
	764, 686,
	-2, 683,
	-1, 1409,
	1, 1326,
	8, 1326,
	9, 1326,
	10, 1326,
	17, 1326,
	18, 1326,
	19, 1326,
	20, 1326,
	22, 1326,
	24, 1326,
	26, 1326,
	35, 1326,
	36, 1326,
	65, 1326,
	66, 1326,
	67, 1326,
	68, 1326,
	69, 1326,
	71, 1326,
	72, 1326,
	75, 1326,
	76, 1326,
	78, 1326,
	79, 1326,
	97, 1326,
	527, 1326,
	575, 1326,
	653, 1326,
	764, 1326,
	-2, 1825,
	-1, 1420,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	26, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 1714,
	1, 685,
	764, 685,
	-2, 683,
	-1, 1716,
	1, 685,
	764, 685,
	-2, 683,
	-1, 2275,
	188, 1845,
	-2, 1693,
	-1, 2278,
	188, 2746,
	-2, 1696,
	-1, 2279,
	188, 2747,
	-2, 1697,
	-1, 2280,
	188, 1844,
	-2, 1840,
	-1, 2430,
	76, 98,
	78, 98,
	-2, 102,
	-1, 2448,
	188, 2322,
	-2, 1797,
	-1, 2455,
	1, 906,
	764, 906,
	-2, 683,
	-1, 2643,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 2725,
	8, 59,
	9, 59,
	10, 59,
	-2, 1479,
	-1, 2742,
	1, 1371,
	8, 1371,
	9, 1371,
	10, 1371,
	17, 1371,
	18, 1371,
	19, 1371,
	20, 1371,
	22, 1371,
	24, 1371,
	26, 1371,
	35, 1371,
	36, 1371,
	65, 1371,
	66, 1371,
	67, 1371,
	68, 1371,
	69, 1371,
	71, 1371,
	72, 1371,
	75, 1371,
	76, 1371,
	78, 1371,
	79, 1371,
	97, 1371,
	527, 1371,
	575, 1371,
	653, 1371,
	764, 1371,
	-2, 1825,
	-1, 2919,
	213, 1038,
	217, 1038,
	-2, 794,
	-1, 2920,
	213, 1108,
	217, 1108,
	-2, 795,
	-1, 3191,
	1, 1433,
	8, 1433,
	9, 1433,
	10, 1433,
	17, 1433,
	18, 1433,
	19, 1433,
	20, 1433,
	22, 1433,
	24, 1433,
	26, 1433,
	35, 1433,
	36, 1433,
	65, 1433,
	66, 1433,
	67, 1433,
	68, 1433,
	69, 1433,
	71, 1433,
	72, 1433,
	75, 1433,
	76, 1433,
	78, 1433,
	79, 1433,
	97, 1433,
	527, 1433,
	575, 1433,
	653, 1433,
	764, 1433,
	-2, 1825,
	-1, 3295,
	1, 1748,
	26, 1748,
	75, 1748,
	764, 1748,
	-2, 1825,
	-1, 3498,
	50, 927,
	207, 930,
	209, 927,
	210, 927,
	211, 927,
	-2, 1044,
	-1, 3518,
	207, 931,
	213, 1038,
	217, 1038,
	-2, 929,
	-1, 3709,
	78, 2093,
	79, 2093,
	188, 2093,
	-2, 1227,
	-1, 3710,
	77, 1759,
	253, 1759,
	-2, 2142,
	-1, 3711,
	77, 1760,
	253, 1760,
	-2, 2712,
	-1, 3957,
	8, 59,
	9, 59,
	10, 59,
	-2, 1755,
	-1, 4103,
	47, 1856,
	-2, 1854,
	-1, 4364,
	8, 59,
	9, 59,
	10, 59,
	-2, 1756,
	-1, 4384,
	316, 432,
	-2, 1912,
	-1, 4385,
	316, 433,
	-2, 1953,
	-1, 4386,
	316, 434,
	-2, 2130,
	-1, 4623,
	105, 418,
	107, 418,
	109, 418,
	-2, 79,
	-1, 4704,
	107, 425,
	108, 425,
	109, 425,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 83532

var yyAct = [...]int{
	751, 44, 4677, 4640, 4577, 4614, 4627, 697, 4391, 1190,
	4615, 570, 4241, 3, 4367, 2936, 3791, 2445, 4356, 4097,
	4493, 4579, 4492, 1412, 4244, 8, 2935, 4378, 4390, 4243,
	7, 2368, 4242, 6, 707, 711, 3303, 4275, 28, 4092,
	4245, 9, 4369, 3654, 4062, 44, 4005, 3460, 2369, 3271,
	493, 4377, 656, 3984, 4218, 1634, 1419, 108, 4142, 2721,
	1705, 2305, 4354, 4110, 4098, 724, 4099, 3910, 107, 2977,
	1537, 3505, 3917, 3868, 3360, 3869, 2658, 3044, 4047, 3624,
	4101, 688, 3715, 3181, 3860, 3904, 3814, 3951, 597, 3707,
	3928, 549, 552, 3473, 2472, 652, 2916, 674, 1748, 1460,
	2709, 101, 1747, 3003, 1171, 2535, 3797, 3438, 1467, 2183,
	2250, 4368, 3903, 3361, 3304, 1414, 750, 3619, 3699, 1150,
	490, 1750, 3117, 3510, 2923, 2947, 1218, 2924, 3630, 2989,
	1566, 1565, 3586, 2174, 1416, 3598, 3080, 2462, 815, 2476,
	134, 2640, 1162, 2503, 3577, 105, 2607, 2641, 2872, 3458,
	2634, 2917, 1079, 1379, 1207, 3179, 716, 2850, 1267, 710,
	1390, 2565, 2873, 3233, 698, 2236, 1753, 2638, 2238, 1411,
	1418, 2175, 1158, 2478, 2153, 1268, 2112, 714, 2047, 1724,
	1244, 3017, 2499, 2970, 1448, 1076, 1615, 693, 2358, 1611,
	1456, 2282, 640, 1451, 2712, 2165, 2589, 2875, 672, 2117,
	1301, 2087, 1279, 1641, 1385, 1614, 1072, 3084, 1153, 2432,
	2321, 1073, 668, 1475, 2243, 1202, 1397, 3716, 681, 669,
	1278, 1389, 1388, 655, 1166, 1387, 572, 1263, 573, 2726,
	2079, 2046, 2080, 1173, 3280, 1179, 1180, 555, 1177, 1717,
	691, 664, 1189, 129, 125, 4704, 4698, 1154, 4685, 4669,
	4655, 4623, 4621, 4592, 4589, 4588, 4587, 4572, 4570, 4472,
	4468, 4463, 100, 4144, 4143, 3376, 3880, 2110, 2520, 1181,
	3632, 3451, 4338, 3164, 678, 4025, 2552, 2551, 3875, 3876,
	3873, 3874, 3420, 3421, 3508, 4648, 1439, 3506, 4610, 86,
	4608, 4023, 4693, 4647, 4609, 3359, 3879, 3130, 3454, 2981,
	1727, 4405, 4404, 4613, 4026, 3452, 661, 99, 4352, 97,
	4554, 42, 2670, 3985, 4224, 3279, 2549, 2240, 687, 3167,
	3798, 2039, 94, 4033, 2549, 565, 3453, 3001, 3987, 1353,
	3800, 4504, 4370, 148, 666, 145, 42, 146, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 2370, 2382, 2380,
	2379, 2378, 2381, 2377, 2376, 2375, 2371, 2372, 2389, 2373,
	2388, 2387, 2374, 2386, 2385, 2384, 2383, 4310, 71, 42,
	42, 122, 42, 150, 149, 654, 4351, 89, 47, 1183,
	2382, 2380, 2379, 2378, 2381, 2377, 2376, 2375, 3898, 1312,
	2389, 3180, 2388, 2387, 3294, 2386, 2385, 2384, 2383, 2943,
	3261, 137, 89, 504, 2950, 3769, 153, 3566, 1149, 4223,
	4641, 4057, 569, 3766, 3300, 3300, 3615, 88, 3301, 3301,
	2955, 2954, 3330, 3854, 3329, 3140, 3980, 4427, 700, 3579,
	3901, 4412, 3858, 3139, 4210, 89, 89, 4337, 89, 3599,
	3981, 677, 4165, 1354, 3902, 2951, 4106, 3803, 2961, 3986,
	2826, 3691, 1170, 114, 112, 113, 2864, 2582, 1257, 2863,
	2588, 2957, 2865, 2933, 4117, 151, 3314, 152, 3315, 3316,
	2623, 2934, 4360, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 704, 544, 1500, 567, 2237,
	3801, 3802, 3804, 3805, 3806, 3401, 1066, 2116, 4360, 156,
	96, 3402, 3403, 2442, 2443, 2156, 2157, 2441, 2948, 4357,
	547, 4429, 3936, 2447, 2937, 667, 4355, 1616, 4339, 1617,
	3652, 2191, 3323, 2114, 2115, 96, 1251, 1242, 1243, 1222,
	1223, 2134, 3234, 1226, 2113, 4357, 1240, 1331, 1241, 1242,
	1243, 1399, 1402, 1403, 1404, 1400, 564, 1401, 1406, 563,
	2959, 2713, 2714, 3929, 1339, 3214, 2949, 2750, 96, 96,
	2587, 96, 1151, 2474, 2475, 1213, 649, 136, 89, 1224,
	1225, 1298, 2489, 2488, 4361, 3103, 3537, 2953, 4445, 2482,
	2481, 2956, 2483, 1165, 1187, 2208, 1161, 1403, 1404, 2946,
	4647, 2493, 3672, 4609, 3676, 4607, 3674, 1203, 2619, 2158,
	4361, 2571, 1227, 2570, 539, 2085, 562, 643, 1252, 1253,
	3934, 2479, 2479, 644, 3348, 3237, 1399, 1402, 1403, 1404,
	1400, 2500, 1401, 1406, 1356, 1357, 2154, 2155, 646, 644,
	4465, 542, 3479, 4466, 1351, 4467, 1228, 1352, 4692, 645,
	3059, 665, 4648, 4646, 4645, 4446, 4610, 2393, 2164, 2163,
	597, 2162, 1348, 1150, 2161, 1260, 2160, 1380, 4024, 2159,
	1375, 642, 1383, 2608, 2611, 2609, 2610, 2612, 2613, 2614,
	2615, 1335, 1336, 4090, 1410, 1415, 3110, 4326, 3108, 3896,
	1433, 1434, 1150, 147, 1150, 1150, 4496, 108, 1150, 3888,
	3886, 3815, 3192, 650, 3109, 3107, 2996, 3445, 1150, 3818,
	3037, 3620, 3621, 3622, 3623, 4558, 1509, 1511, 4557, 1254,
	1513, 3816, 3817, 4305, 4508, 3000, 4051, 4170, 3477, 3472,
	4303, 3041, 4409, 1328, 4169, 1454, 3826, 3844, 3042, 1407,
	2601, 2998, 4159, 4042, 1214, 3439, 3440, 3441, 3442, 3443,
	3192, 2536, 1528, 3824, 4421, 4495, 1532, 1533, 1534, 1535,
	1536, 3631, 1540, 3849, 4464, 3192, 4701, 142, 1314, 4403,
	2145, 1479, 4088, 2146, 108, 4671, 731, 4700, 732, 734,
	735, 736, 737, 4670, 1266, 4667, 733, 2317, 1382, 1305,
	4585, 154, 4631, 4460, 4458, 4459, 3129, 3507, 4419, 3120,
	4566, 3914, 4167, 4040, 3183, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	2583, 1559, 1560, 1562, 1562, 1562, 4020, 1567, 1567, 1567,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 678, 678, 1425, 3508, 3988, 2948, 3578, 1393, 663,
	3241, 3240, 3242, 3239, 2189, 3322, 4037, 3448, 3246, 3542,
	3238, 3235, 1409, 3989, 3236, 1338, 3244, 4447, 1567, 1221,
	543, 3799, 1314, 3601, 1510, 4161, 4331, 2952, 143, 550,
	3243, 3474, 2945, 4574, 566, 3530, 2167, 3629, 553, 2595,
	2395, 2396, 2394, 4202, 2949, 3184, 3434, 3245, 3247, 3183,
	1394, 2314, 2190, 3321, 4063, 2948, 4017, 4012, 3102, 3109,
	4583, 3107, 4578, 4016, 2192, 3436, 1732, 1733, 1731, 1314,
	1206, 3439, 3440, 3441, 3442, 3443, 1722, 4015, 4581, 1472,
	1473, 1471, 1376, 1561, 1563, 1564, 554, 4014, 2962, 1568,
	1569, 138, 4013, 109, 4011, 4034, 3991, 2999, 1474, 3002,
	4211, 1567, 1567, 2949, 4358, 1315, 1322, 1323, 1325, 1326,
	1327, 1442, 1329, 1330, 2086, 1332, 1333, 1334, 87, 1337,
	3895, 1340, 1341, 1342, 1343, 1344, 3990, 1376, 4222, 1435,
	4358, 1440, 1440, 1441, 1441, 1447, 4567, 4118, 115, 126,
	1259, 4411, 3857, 1405, 1436, 1302, 1436, 1436, 1457, 1601,
	1436, 109, 109, 2948, 109, 4336, 3604, 3602, 2116, 2485,
	3856, 1481, 3600, 2502, 1261, 2964, 2486, 1216, 3887, 1377,
	4494, 731, 1265, 732, 734, 735, 736, 737, 3603, 4304,
	2147, 733, 2317, 3885, 2114, 2115, 1313, 1405, 1178, 4160,
	4166, 4039, 3248, 1347, 136, 1321, 4440, 1712, 2049, 1306,
	4239, 2949, 1175, 1174, 4021, 4373, 4374, 1604, 2170, 1538,
	662, 1472, 1473, 1471, 1239, 3628, 4154, 4155, 1405, 2530,
	2531, 4150, 2526, 1255, 1215, 1238, 3625, 3626, 1178, 2932,
	1474, 4417, 1602, 1603, 3166, 1176, 1361, 3174, 3176, 3175,
	128, 3025, 3026, 3168, 4320, 136, 2118, 1264, 1079, 1235,
	132, 140, 139, 1079, 2525, 551, 141, 551, 2171, 1319,
	1234, 3544, 3545, 1233, 4036, 3447, 1232, 1558, 2944, 1236,
	1237, 548, 3587, 3861, 3862, 3588, 4681, 3589, 1324, 4234,
	2039, 2081, 3531, 3532, 3533, 2120, 551, 3099, 2119, 1165,
	4510, 1150, 1373, 2469, 3087, 4580, 4582, 4694, 136, 3097,
	4509, 1165, 3096, 108, 2315, 2316, 3365, 3087, 137, 141,
	4590, 3516, 551, 3543, 107, 4707, 2314, 2537, 1408, 1421,
	1423, 4702, 4686, 1320, 4658, 1316, 1172, 641, 3072, 4309,
	597, 138, 1726, 667, 3119, 1371, 1310, 2549, 4193, 4082,
	3894, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 2471, 597,
	3891, 1749, 1697, 1698, 1699, 1700, 1701, 1317, 1318, 3627,
	3470, 3104, 1421, 1423, 1608, 3036, 3032, 3006, 3005, 2596,
	1626, 2151, 130, 1737, 131, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1735, 1707, 1262,
	2519, 1631, 1169, 2223, 2222, 1757, 2221, 2471, 1619, 123,
	1168, 4085, 3877, 1620, 1150, 3465, 1392, 1150, 1191, 2043,
	2043, 2043, 2043, 1709, 1710, 1182, 2088, 3009, 1725, 108,
	3086, 1721, 3008, 1730, 3169, 488, 3651, 1728, 2089, 3182,
	2093, 3313, 2037, 2091, 1515, 1516, 2090, 3034, 2538, 3033,
	695, 1627, 4469, 3075, 1703, 2664, 3074, 1367, 2471, 1605,
	1606, 1422, 1628, 1702, 1755, 2870, 4679, 1514, 1512, 4680,
	597, 4678, 1309, 3364, 3045, 89, 2054, 2055, 1366, 1362,
	1363, 1364, 1365, 1368, 1369, 1370, 1372, 4329, 89, 2667,
	2665, 2660, 2767, 2744, 2050, 4164, 2662, 2630, 2550, 2074,
	3515, 140, 139, 3170, 1422, 2144, 2527, 2437, 2470, 2062,
	2253, 1517, 2063, 2064, 2065, 3087, 2107, 1630, 2471, 3118,
	1165, 2069, 2797, 3088, 2469, 2794, 2052, 1531, 1530, 1517,
	3095, 2077, 3119, 1529, 1739, 1480, 1296, 2041, 2045, 3075,
	1204, 2664, 3074, 651, 3076, 3077, 674, 674, 674, 674,
	2661, 2663, 2666, 2668, 2471, 2447, 2471, 2470, 1708, 1517,
	2127, 1150, 2125, 1720, 1713, 1711, 1415, 4192, 2217, 2066,
	3878, 2068, 1729, 108, 4191, 2667, 2665, 2660, 108, 2315,
	2316, 2180, 2662, 1500, 1490, 1746, 1745, 1500, 1256, 2216,
	2860, 3467, 2076, 2048, 4200, 4441, 4442, 2176, 96, 1514,
	127, 123, 3870, 2105, 4438, 4439, 4227, 4226, 2470, 4476,
	2210, 2307, 2306, 3950, 3093, 3087, 2211, 3110, 3108, 118,
	3090, 2038, 2218, 3089, 3094, 3095, 1245, 2220, 1374, 4184,
	3076, 3077, 3782, 3780, 3086, 2642, 2661, 2663, 2666, 2668,
	2083, 2082, 2194, 2092, 2098, 2099, 3401, 1066, 2101, 3391,
	3392, 3394, 3402, 3403, 3393, 3395, 3396, 2122, 2851, 3128,
	3127, 1610, 1150, 2198, 2104, 4028, 2195, 121, 2470, 3397,
	3398, 3399, 3400, 2308, 108, 3087, 3126, 3125, 2166, 2169,
	1165, 1757, 3124, 3088, 2469, 2123, 3123, 1479, 2053, 2126,
	4477, 1540, 674, 3122, 3781, 1515, 1516, 2274, 1515, 1516,
	2313, 2318, 4029, 108, 2470, 3121, 2470, 3118, 120, 3494,
	3493, 3113, 3093, 3087, 2216, 2072, 2560, 2741, 3090, 3116,
	2168, 3089, 3094, 678, 678, 678, 678, 3382, 3380, 2310,
	1246, 2312, 3068, 3067, 3065, 3064, 1627, 2344, 2347, 2185,
	2280, 2219, 1230, 678, 2738, 2360, 2324, 1628, 2327, 2184,
	2283, 2735, 2172, 2390, 2391, 2251, 2252, 674, 2188, 2186,
	2362, 2246, 2187, 1538, 2289, 2196, 2197, 3055, 2199, 1220,
	1474, 3495, 3054, 2209, 2867, 2866, 1247, 1430, 1431, 2287,
	2288, 2286, 2260, 1473, 1471, 1742, 1471, 2446, 3053, 3381,
	96, 1472, 1473, 1471, 3069, 3052, 3066, 2273, 3051, 1079,
	1424, 1474, 4690, 1474, 3050, 1430, 1431, 668, 3049, 687,
	1474, 2284, 4661, 4628, 4660, 2056, 2057, 2058, 2059, 2060,
	2561, 2061, 1472, 1473, 1471, 2258, 1432, 3048, 1424, 2618,
	2617, 1757, 2103, 4379, 1158, 4513, 2868, 4512, 4684, 1272,
	2270, 1474, 1185, 1184, 1421, 1423, 1231, 2452, 4379, 3263,
	4454, 1538, 4453, 2128, 1432, 2359, 2131, 2132, 2133, 4657,
	2135, 2136, 4568, 2454, 2137, 2788, 4514, 2787, 2138, 678,
	1219, 2139, 1421, 1423, 3004, 2140, 2141, 1249, 2142, 2143,
	4505, 1472, 1473, 1471, 2359, 2073, 2810, 1472, 1473, 1471,
	2280, 2398, 4637, 2328, 2329, 2330, 2331, 2332, 2545, 2403,
	1474, 2405, 1715, 3825, 2408, 3819, 1474, 1258, 4532, 2459,
	3030, 2468, 2431, 103, 2244, 3374, 3911, 2356, 3192, 1472,
	1473, 1471, 1417, 2764, 2765, 2766, 2429, 4688, 1493, 1494,
	1495, 1496, 1497, 1490, 678, 700, 1500, 3897, 1474, 2262,
	2263, 2264, 2509, 2510, 2511, 2512, 2513, 2453, 2266, 2268,
	2269, 1468, 559, 2496, 2497, 2498, 2267, 4673, 2259, 110,
	4695, 116, 1472, 1473, 1471, 1610, 1610, 2484, 2487, 2435,
	2439, 2490, 2491, 2492, 2444, 2438, 1422, 2244, 4408, 4548,
	4545, 1474, 89, 4301, 2193, 2543, 2544, 2505, 2506, 2507,
	2508, 2458, 2456, 2529, 2285, 2514, 2480, 4162, 1472, 1473,
	1471, 1472, 1473, 1471, 1422, 4503, 4516, 4316, 1538, 4457,
	163, 4706, 491, 503, 2339, 2340, 163, 1474, 2255, 4696,
	1474, 163, 3758, 3756, 2501, 1067, 1068, 1069, 1472, 1473,
	1471, 639, 2789, 3757, 4302, 4379, 4307, 1167, 4547, 4544,
	163, 2801, 2516, 2256, 2546, 4300, 2257, 1474, 4163, 163,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 2261, 163, 1500, 3607, 3605, 3174, 3176, 3175, 2521,
	2242, 2523, 4231, 163, 1164, 3606, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 4705, 4058,
	1500, 695, 4689, 4027, 2451, 163, 639, 2425, 1472, 1473,
	1471, 1472, 1473, 1471, 695, 3909, 3265, 491, 163, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 1474, 2281, 1500,
	1474, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 3908, 3907,
	1500, 3906, 3835, 2311, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 695, 3763, 1500, 3789,
	3788, 3555, 2367, 3489, 2515, 2566, 3488, 3487, 3486, 3485,
	3426, 3377, 2335, 2336, 2337, 2342, 2975, 2973, 2341, 2350,
	2343, 2346, 2349, 2960, 2354, 2355, 3761, 2428, 1304, 2430,
	2365, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 3204, 1303, 1500, 2397, 1391, 2399, 2400, 3174, 3176,
	3175, 2404, 4672, 2406, 2407, 2976, 1562, 3450, 3449, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 4666, 4594, 1150, 1472, 1473, 1471, 3174, 3176, 3175,
	4586, 4470, 4451, 4450, 2233, 2088, 4396, 2229, 2225, 4395,
	4389, 4388, 4168, 1474, 1384, 2235, 4065, 2089, 2231, 2227,
	2096, 2095, 2091, 3698, 3534, 2090, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 2578, 3020,
	1500, 2234, 3019, 2572, 2230, 2226, 3612, 2557, 2556, 2309,
	2097, 3610, 2518, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 2084, 2586, 1500, 1744, 1743,
	2539, 89, 1716, 1714, 1410, 4502, 2541, 2542, 1299, 695,
	561, 1610, 4392, 1276, 4501, 1383, 4500, 4497, 4426, 4406,
	4346, 2232, 4340, 2562, 2228, 2224, 4233, 3174, 3176, 3175,
	4232, 3201, 3174, 3176, 3175, 1275, 2568, 4158, 4157, 4138,
	4089, 4041, 4038, 674, 4010, 2558, 3979, 3978, 3946, 3900,
	3899, 3834, 2730, 2731, 2732, 3833, 3832, 2564, 3198, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 3831, 3822, 1500, 3821, 3820, 3787, 3784, 3759, 2605,
	3754, 3745, 2604, 3741, 3736, 3735, 3734, 3608, 3597, 3585,
	3581, 3574, 3573, 3572, 2723, 3492, 3484, 3483, 3482, 3408,
	3213, 3212, 3210, 2729, 3070, 2768, 2971, 2869, 3925, 1527,
	1526, 1525, 1738, 1454, 1454, 2625, 2584, 2555, 2100, 1345,
	2791, 163, 2743, 695, 2573, 4207, 695, 3635, 4556, 695,
	2708, 2631, 3771, 4539, 1757, 2577, 4064, 491, 3771, 4416,
	3771, 4414, 2585, 3635, 695, 4072, 695, 3771, 4236, 2593,
	2274, 2592, 3924, 3635, 4146, 3635, 4141, 4003, 2724, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 4086, 695, 1500, 4002, 2600, 3635, 4045, 2603, 3192,
	695, 678, 3428, 3923, 2648, 2629, 695, 3635, 3921, 2039,
	3852, 3700, 2622, 2280, 3719, 2624, 163, 3300, 2762, 2763,
	3694, 3301, 2627, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 2039, 3851, 1500, 89, 2728,
	678, 2639, 3411, 2717, 3771, 3770, 3635, 3634, 3418, 3417,
	3414, 3415, 3018, 2283, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 3260, 3410, 1500, 3018,
	2453, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 674, 3409, 1500, 674, 3414, 3413, 3693,
	2754, 2752, 2753, 639, 2743, 695, 2598, 2597, 2333, 2580,
	2433, 2433, 2773, 2333, 695, 2149, 163, 2212, 695, 1633,
	1632, 2534, 102, 2212, 2284, 2855, 2248, 2039, 1310, 2148,
	1307, 2853, 1308, 1308, 4639, 1079, 3719, 163, 2769, 2333,
	3719, 2553, 4347, 2259, 4220, 3962, 3192, 2777, 1757, 3635,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 2212, 491, 1500, 2533, 3429, 3416, 2633, 2563,
	2434, 2434, 2436, 2039, 2212, 3211, 3047, 1310, 2440, 1380,
	2743, 2247, 2820, 2818, 2599, 2817, 2743, 2616, 2602, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 2102, 2554, 1500, 2549, 2548, 2809, 1755, 2249, 1378,
	2111, 2039, 1736, 1302, 1734, 1613, 1381, 4444, 4415, 2722,
	4187, 4185, 4004, 3779, 2927, 2930, 3776, 1457, 2477, 2504,
	2479, 3186, 3058, 3057, 2500, 2915, 1314, 597, 2528, 3024,
	2574, 2713, 2714, 2720, 2495, 2494, 1706, 1295, 2854, 2978,
	3836, 2567, 2922, 1211, 2925, 2926, 1210, 4676, 4675, 2918,
	4652, 4650, 2856, 4644, 1703, 2857, 4643, 3259, 4616, 4611,
	678, 4605, 4603, 678, 4550, 2043, 2879, 4549, 3916, 3912,
	3700, 3427, 3422, 3015, 3014, 1619, 2858, 2861, 2994, 2716,
	2710, 2547, 1725, 2150, 2121, 1311, 2825, 2827, 2207, 2871,
	3684, 2719, 2204, 2206, 2834, 2835, 2836, 2205, 3012, 538,
	2718, 2783, 2201, 2202, 2963, 2965, 4436, 2626, 2203, 2966,
	2967, 2200, 2968, 2969, 4350, 3215, 2751, 4189, 2759, 1461,
	1462, 2758, 2979, 4124, 3892, 3867, 3774, 2811, 133, 2972,
	2180, 3524, 3523, 3407, 3406, 2974, 3405, 2931, 2921, 4398,
	4342, 3022, 4215, 4345, 4341, 4344, 2176, 3062, 4104, 3038,
	1464, 1459, 4102, 4153, 4152, 1466, 1465, 4044, 1463, 560,
	2733, 2734, 3106, 2997, 2736, 2737, 540, 541, 2739, 2740,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 4399, 3016, 1500, 144, 3199, 2576, 2575, 3202,
	2094, 3105, 3205, 4, 3021, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 1413, 43, 1500,
	4030, 4031, 674, 3031, 3060, 1449, 4475, 1461, 1462, 3085,
	3188, 3081, 3092, 2770, 2771, 2772, 4632, 1450, 3194, 3195,
	3196, 3091, 3098, 3190, 3101, 3114, 3078, 3884, 106, 3035,
	3165, 3056, 3730, 3112, 3535, 1757, 3379, 3040, 1464, 3206,
	3043, 3061, 43, 1466, 1465, 3073, 1463, 2632, 1629, 3683,
	1293, 2274, 1277, 1274, 3173, 1273, 1217, 4075, 2778, 2779,
	2780, 2781, 2782, 4074, 1391, 2251, 2252, 3272, 3953, 3455,
	2522, 1350, 1270, 1271, 3222, 3829, 3827, 2802, 2803, 2804,
	1408, 4348, 4306, 3830, 3828, 4048, 2807, 3792, 3778, 3424,
	3249, 3297, 3302, 3251, 2280, 1269, 674, 2322, 2323, 4520,
	2173, 2096, 2095, 108, 1445, 1446, 1443, 1444, 1359, 2852,
	1437, 1438, 163, 3952, 3296, 2757, 4519, 4518, 4007, 2621,
	1250, 1164, 689, 2756, 4433, 4432, 4431, 4430, 4216, 3305,
	4179, 4171, 4122, 3932, 3079, 690, 102, 3931, 3657, 3018,
	3193, 2983, 2984, 2985, 3307, 4654, 4653, 4654, 4471, 3262,
	3847, 3209, 3207, 3478, 1489, 1488, 1498, 1499, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1490, 3476, 3220, 1500, 3475,
	3046, 3219, 3224, 2819, 3223, 2798, 2795, 3222, 2761, 678,
	3298, 2067, 3217, 1469, 3375, 1209, 1208, 4653, 4229, 3404,
	2245, 3388, 682, 3250, 686, 685, 4536, 4258, 65, 4260,
	23, 2980, 4259, 22, 491, 4261, 24, 4262, 25, 4256,
	18, 4255, 17, 4254, 16, 3299, 3363, 4257, 19, 4253,
	15, 1380, 639, 639, 104, 3383, 68, 639, 4397, 3010,
	3011, 4247, 11, 4282, 39, 1164, 163, 3356, 4280, 37,
	1, 639, 639, 4279, 36, 4283, 40, 163, 597, 4335,
	3444, 491, 491, 491, 491, 676, 3387, 50, 3367, 3368,
	3369, 3173, 3370, 3371, 2594, 3310, 163, 163, 163, 163,
	163, 3185, 163, 678, 3187, 2879, 3309, 3317, 3311, 3312,
	4278, 32, 4277, 31, 4276, 30, 3430, 2129, 163, 163,
	4273, 27, 3023, 639, 596, 3366, 4272, 26, 3813, 163,
	2514, 3027, 3028, 3273, 3274, 3275, 3276, 3277, 3278, 4252,
	14, 4249, 13, 4248, 12, 4246, 10, 3812, 3618, 3437,
	700, 2995, 4330, 3373, 4201, 3823, 2707, 3517, 1723, 4019,
	1188, 2532, 1300, 4343, 4103, 4213, 4212, 3796, 3795, 1164,
	2988, 2987, 1294, 2581, 2109, 3457, 3446, 3385, 3082, 3083,
	3386, 3007, 639, 639, 639, 3071, 4177, 1164, 2620, 2152,
	2606, 1360, 2455, 2460, 3853, 3504, 4056, 3503, 3264, 3502,
	1152, 117, 2559, 1229, 3425, 3466, 512, 2457, 3412, 3471,
	2941, 3512, 4214, 1297, 2940, 2958, 2473, 1386, 639, 3480,
	3975, 3435, 2939, 2938, 3281, 3282, 3283, 3284, 3285, 3286,
	3287, 3288, 3289, 3290, 3291, 3461, 4308, 2942, 1638, 1636,
	1637, 1635, 1640, 3512, 1639, 518, 163, 163, 1621, 3617,
	3463, 163, 4383, 1164, 3697, 3355, 3513, 3464, 1470, 744,
	135, 3115, 647, 648, 3481, 163, 639, 3216, 163, 163,
	163, 163, 124, 520, 1508, 2755, 2862, 1077, 1078, 1070,
	163, 4474, 3490, 3491, 3497, 2746, 4225, 4105, 163, 4217,
	3496, 3078, 163, 3514, 4372, 1455, 2918, 4107, 3930, 3656,
	2808, 1703, 3584, 2648, 3633, 1557, 3546, 2357, 713, 660,
	3655, 3519, 3520, 3521, 3714, 3949, 4109, 2265, 3526, 3527,
	727, 3529, 726, 725, 722, 723, 3173, 2392, 4359, 3650,
	3226, 2254, 3689, 3293, 3292, 3547, 3295, 1482, 3552, 3419,
	1358, 702, 163, 1429, 1428, 1427, 1426, 1420, 3252, 491,
	3253, 3254, 671, 3255, 3256, 3522, 2426, 3257, 3029, 3582,
	1398, 1396, 1395, 1741, 1609, 2715, 2711, 670, 3708, 675,
	46, 2760, 1248, 3266, 3267, 3268, 3269, 3690, 4116, 111,
	108, 684, 683, 692, 3372, 1164, 29, 1164, 21, 20,
	1164, 3704, 1205, 2637, 2659, 3525, 3636, 1164, 1186, 3658,
	3305, 3702, 1164, 1164, 1164, 48, 3462, 54, 3538, 53,
	3540, 51, 163, 52, 163, 3307, 2982, 2524, 2180, 4382,
	4576, 3553, 3703, 3556, 1280, 3558, 3560, 3562, 3564, 3768,
	4593, 4626, 1355, 38, 2176, 35, 34, 1425, 33, 4274,
	4268, 4267, 4270, 4269, 3667, 3668, 3669, 4266, 3670, 4271,
	4265, 4264, 4263, 3671, 3673, 4281, 3675, 4251, 3378, 4250,
	4560, 4559, 1562, 1562, 1562, 1567, 1567, 1567, 1570, 1571,
	1572, 1573, 1567, 1567, 1567, 3567, 5, 3569, 163, 163,
	163, 3724, 3701, 98, 95, 41, 119, 1148, 2, 3783,
	0, 0, 3744, 3590, 3591, 3592, 0, 0, 0, 0,
	0, 3706, 0, 0, 0, 0, 1164, 3614, 0, 0,
	0, 0, 0, 0, 0, 0, 3173, 3456, 0, 0,
	3568, 0, 0, 0, 3570, 3571, 3720, 3721, 3722, 3723,
	0, 0, 3580, 0, 0, 3583, 0, 0, 0, 0,
	0, 3746, 3593, 3594, 3595, 3596, 3739, 0, 0, 3742,
	3609, 3611, 3613, 3755, 0, 3718, 0, 3808, 3809, 3810,
	3775, 3655, 3725, 0, 0, 0, 0, 3616, 0, 1610,
	1610, 0, 3772, 3773, 0, 3855, 0, 3837, 3839, 0,
	0, 0, 1164, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 1561, 1563, 1564, 0, 0, 1568, 1569, 0,
	3793, 163, 3717, 1601, 1602, 1603, 0, 163, 163, 639,
	639, 639, 163, 3786, 3661, 3662, 3663, 3664, 3665, 0,
	0, 0, 0, 0, 0, 0, 0, 3549, 3850, 3807,
	3841, 0, 0, 3811, 0, 3843, 0, 3863, 3864, 0,
	3512, 0, 0, 3842, 0, 0, 0, 0, 3845, 3846,
	0, 3848, 0, 3692, 0, 0, 0, 0, 0, 0,
	3838, 0, 3726, 3727, 3728, 3512, 0, 0, 3883, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3865, 0, 0, 3747, 3748, 3749, 0, 0, 0, 0,
	0, 0, 0, 0, 3085, 0, 3081, 3092, 3765, 0,
	0, 3889, 0, 3859, 0, 0, 3091, 0, 0, 3866,
	0, 0, 0, 0, 3732, 3733, 0, 0, 0, 0,
	0, 0, 3740, 3927, 0, 3743, 0, 0, 3881, 0,
	0, 0, 3750, 3751, 3752, 3753, 3918, 3920, 0, 0,
	3890, 3760, 3762, 3764, 0, 0, 3872, 3767, 0, 0,
	0, 0, 0, 3641, 3642, 3643, 3644, 3645, 3646, 3647,
	3648, 3649, 0, 0, 0, 3655, 3655, 3919, 0, 0,
	0, 0, 0, 3893, 0, 0, 3959, 0, 0, 3708,
	0, 3660, 3933, 3935, 674, 0, 0, 3964, 3222, 0,
	0, 108, 0, 0, 0, 0, 0, 3173, 3225, 0,
	0, 3915, 107, 0, 0, 0, 3905, 0, 0, 0,
	3682, 0, 0, 0, 3686, 3687, 3688, 0, 0, 3913,
	0, 0, 0, 0, 0, 3305, 3956, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0,
	3307, 1500, 0, 0, 0, 0, 0, 0, 0, 3999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3954,
	0, 3973, 0, 0, 0, 3958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3972, 0, 0, 4006,
	0, 0, 0, 0, 0, 0, 0, 3976, 0, 0,
	3966, 3955, 0, 0, 3997, 0, 0, 4000, 0, 668,
	0, 0, 3363, 3963, 3967, 0, 0, 0, 0, 0,
	0, 3173, 163, 0, 0, 1489, 1488, 1498, 1499, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1490, 4060, 4061, 1500,
	0, 3777, 0, 0, 3790, 0, 0, 0, 0, 3794,
	163, 3995, 3996, 3258, 3785, 0, 0, 0, 3173, 0,
	0, 3982, 3983, 3993, 3994, 3992, 0, 0, 0, 0,
	0, 678, 0, 0, 0, 0, 0, 0, 4084, 0,
	4022, 0, 0, 4009, 4008, 0, 1164, 3840, 0, 0,
	0, 0, 4018, 0, 163, 0, 163, 0, 0, 0,
	1164, 0, 4050, 4052, 4053, 1164, 4055, 4032, 0, 0,
	4046, 4035, 0, 0, 0, 4068, 4049, 0, 0, 4043,
	0, 0, 0, 0, 4077, 0, 4078, 0, 0, 0,
	4054, 0, 639, 639, 0, 0, 0, 0, 4066, 4067,
	3959, 4129, 0, 0, 4070, 0, 4076, 0, 0, 4093,
	0, 4069, 0, 108, 0, 3681, 0, 0, 0, 0,
	0, 0, 0, 0, 4128, 0, 1489, 1488, 1498, 1499,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0, 4091,
	1500, 0, 0, 0, 0, 0, 1150, 0, 0, 0,
	0, 0, 0, 0, 163, 163, 4126, 0, 108, 0,
	1164, 0, 0, 163, 0, 0, 0, 0, 0, 4148,
	0, 0, 0, 0, 0, 0, 4133, 4135, 3968, 3969,
	3970, 3971, 4079, 4125, 4081, 4130, 4083, 1164, 4132, 0,
	4127, 4121, 4123, 4149, 0, 4151, 0, 4178, 0, 0,
	0, 0, 0, 4183, 0, 3363, 0, 0, 0, 0,
	0, 4136, 0, 0, 0, 0, 0, 0, 0, 4147,
	1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1490, 0, 0, 1500, 3173, 0, 0, 4156, 0,
	2792, 0, 0, 0, 0, 4198, 0, 0, 4181, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 0, 0, 0, 4173, 4175, 0,
	3708, 0, 4176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 4174, 4188, 0,
	1150, 0, 1150, 4230, 0, 4208, 0, 0, 4195, 0,
	4240, 0, 108, 0, 0, 4237, 4186, 3937, 3938, 3939,
	3940, 4199, 4197, 4238, 0, 3944, 0, 0, 0, 3947,
	3948, 0, 3203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4228, 0, 0, 3173, 0, 0, 1150,
	0, 0, 0, 0, 0, 0, 0, 4327, 0, 0,
	0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 0, 4299, 1500, 0, 0, 0, 0,
	163, 4315, 0, 0, 4194, 163, 0, 3918, 163, 163,
	163, 0, 0, 0, 0, 0, 3363, 0, 3363, 4108,
	4111, 4312, 4311, 0, 4322, 4371, 4318, 4375, 0, 0,
	4317, 0, 4319, 0, 2920, 3305, 4363, 4328, 3919, 0,
	2929, 2929, 4334, 4325, 3200, 4332, 0, 0, 0, 0,
	3307, 0, 1538, 0, 4349, 0, 0, 0, 0, 0,
	4362, 1150, 0, 1150, 4366, 0, 0, 0, 0, 1150,
	0, 0, 0, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 0, 0, 1500, 0, 2366,
	0, 4393, 163, 0, 0, 0, 0, 4402, 0, 0,
	1164, 1164, 0, 0, 0, 0, 639, 0, 0, 0,
	4428, 4059, 0, 0, 4420, 4323, 0, 0, 0, 3272,
	163, 163, 639, 1164, 4387, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 4422, 0, 3918, 0, 4407, 0,
	639, 0, 4424, 0, 4437, 0, 0, 0, 0, 0,
	0, 0, 0, 4418, 0, 0, 0, 0, 0, 4449,
	4425, 0, 0, 0, 0, 1164, 4443, 3919, 4435, 639,
	0, 1164, 4434, 1164, 4423, 4455, 1164, 0, 0, 4094,
	4095, 4096, 4482, 0, 4448, 0, 0, 0, 4487, 597,
	4473, 4481, 4135, 0, 0, 0, 694, 696, 4452, 4484,
	4499, 4486, 1164, 1164, 0, 0, 0, 0, 4488, 4461,
	1538, 0, 0, 0, 0, 0, 0, 0, 4498, 0,
	0, 0, 0, 0, 0, 1150, 0, 4483, 1150, 0,
	0, 0, 0, 4490, 1150, 1150, 1150, 1150, 0, 1150,
	1150, 4489, 4524, 1150, 1150, 4506, 3363, 4524, 4491, 0,
	4455, 4524, 4534, 4515, 4538, 4145, 4517, 0, 3655, 1150,
	4485, 0, 4507, 4526, 4527, 4528, 4511, 4542, 4531, 0,
	0, 0, 0, 0, 0, 4521, 0, 3172, 0, 0,
	0, 3305, 4535, 4543, 1150, 0, 4546, 1150, 0, 4553,
	1150, 0, 0, 0, 4555, 1164, 3307, 4196, 0, 4522,
	4172, 4551, 108, 1164, 1164, 1164, 4565, 2446, 4111, 4584,
	4573, 4564, 4569, 4575, 4563, 4571, 597, 4182, 4596, 4562,
	0, 4595, 4561, 0, 4599, 0, 0, 0, 163, 4602,
	4190, 0, 0, 0, 163, 0, 0, 1150, 0, 0,
	1164, 1150, 0, 1150, 0, 4620, 4617, 1150, 0, 4524,
	4604, 4524, 0, 4606, 0, 4629, 0, 0, 1150, 1150,
	1150, 1150, 0, 1150, 0, 4618, 4524, 4524, 4524, 0,
	0, 4524, 4376, 4380, 0, 0, 0, 0, 0, 0,
	1661, 4394, 0, 0, 0, 0, 0, 0, 0, 4636,
	0, 4651, 1150, 0, 1150, 4649, 1150, 0, 0, 1164,
	4524, 0, 4524, 4662, 0, 4664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4674, 0, 0, 0,
	0, 0, 0, 4462, 4659, 0, 1150, 4682, 163, 0,
	0, 0, 1150, 0, 4524, 0, 0, 0, 0, 0,
	1150, 0, 0, 1164, 0, 0, 4365, 0, 4524, 0,
	0, 0, 0, 0, 0, 0, 1150, 0, 0, 1150,
	4687, 0, 0, 0, 4524, 0, 0, 4456, 0, 1150,
	2635, 2636, 0, 0, 0, 1150, 0, 4524, 0, 0,
	0, 0, 0, 4524, 3172, 0, 0, 4699, 491, 1648,
	0, 0, 0, 0, 2929, 2929, 2929, 0, 2929, 2929,
	0, 0, 0, 1484, 491, 1487, 0, 0, 0, 0,
	0, 0, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 163,
	1485, 1486, 1483, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1490, 0, 0, 1500, 0, 0, 0, 0,
	0, 1164, 0, 4400, 0, 4529, 0, 0, 0, 0,
	3197, 0, 0, 0, 1164, 1164, 1164, 0, 0, 0,
	0, 639, 1662, 0, 0, 0, 0, 0, 163, 639,
	0, 0, 0, 0, 0, 0, 0, 1164, 1164, 1489,
	1488, 1498, 1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1490, 0, 0, 1500, 2774, 639, 0, 1164, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 4591, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 163, 0, 1489, 1488, 1498, 1499, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1490, 1458, 0, 1500, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 491, 491, 491, 491, 0, 0, 0, 1164, 491,
	491, 1164, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 1164, 0, 1164, 0, 491, 491, 1164, 163, 491,
	0, 0, 0, 0, 1164, 0, 1164, 1164, 1164, 1164,
	1164, 1164, 0, 157, 0, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 157, 0, 4663, 557, 0, 3172,
	0, 0, 0, 4668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 0, 0, 0, 4537, 0,
	0, 0, 157, 4540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 701, 0, 0, 1164,
	0, 0, 1087, 0, 0, 1164, 157, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 163,
	0, 1500, 0, 0, 1164, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 4598, 0, 0, 0, 0, 0,
	0, 157, 0, 1675, 1678, 1679, 1680, 1681, 1682, 1683,
	0, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 0, 1663, 1664, 1665, 1645, 1644,
	1676, 1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 0, 0, 0,
	0, 2745, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 3172,
	0, 3063, 1489, 1488, 1498, 1499, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1490, 0, 3100, 1500, 0, 0, 0,
	0, 0, 0, 0, 3111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 0, 0,
	3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150,
	3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160,
	3161, 3162, 3163, 0, 3177, 3178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 1677, 0, 0, 0,
	163, 0, 1164, 0, 0, 0, 0, 0, 505, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1164, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 639, 639,
	0, 639, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 531, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 2929, 0, 0, 0,
	0, 0, 0, 0, 0, 1164, 0, 491, 0, 0,
	0, 0, 0, 514, 0, 521, 517, 491, 0, 526,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3318, 3319, 3320, 0, 3324,
	3325, 3326, 3327, 3328, 0, 0, 3331, 3332, 3333, 3334,
	3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344,
	3345, 3346, 3347, 0, 3349, 3350, 3351, 3352, 3353, 3354,
	3172, 3357, 3358, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 1164, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 163, 0, 0, 0,
	0, 515, 529, 0, 0, 0, 0, 0, 530, 657,
	0, 0, 0, 0, 3172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 2706, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 3172, 0, 0, 491, 0, 0, 2929, 2929, 1164,
	506, 0, 1164, 1391, 0, 2655, 0, 0, 0, 0,
	0, 2679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3536, 0, 0, 0, 0, 522, 509, 510,
	0, 536, 0, 2654, 0, 511, 513, 0, 507, 535,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2676, 0, 0, 0, 0, 0, 0, 0, 3575, 3576,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2929, 0, 0, 1164, 0, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 1164, 491, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 2213, 2214, 2215, 0, 0, 0, 0, 0, 0,
	0, 2645, 3499, 2657, 0, 3498, 2656, 2647, 0, 0,
	2680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3172, 0,
	0, 0, 0, 0, 0, 0, 0, 2678, 2700, 2651,
	2650, 0, 1391, 0, 0, 0, 0, 491, 0, 0,
	2885, 0, 0, 0, 0, 0, 0, 2646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3729, 0, 3731, 3500, 3501, 0, 0, 2670, 3737, 3738,
	0, 0, 0, 0, 0, 0, 2874, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 2334, 0, 2882,
	0, 0, 0, 1164, 0, 2338, 0, 0, 0, 0,
	0, 0, 2929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 163, 3172,
	2696, 2642, 0, 0, 0, 0, 0, 0, 2401, 2402,
	0, 0, 0, 0, 0, 0, 2409, 2410, 2411, 1164,
	0, 0, 0, 0, 0, 2704, 0, 0, 0, 0,
	0, 0, 0, 0, 2424, 0, 2686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 1087, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2895, 0, 0, 0, 0, 0, 1164, 0, 491, 0,
	491, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 2884, 2907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 3882, 0, 0, 0, 0, 0,
	1719, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2672, 0, 0, 157,
	0, 0, 1719, 557, 0, 0, 1752, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 2683, 0, 0, 0, 157,
	157, 157, 157, 157, 0, 157, 0, 0, 2649, 2902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2070, 2071, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2078, 0, 2911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2892, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 2673, 2674,
	0, 0, 2677, 0, 0, 2682, 0, 2687, 2684, 2685,
	0, 2688, 2681, 0, 2691, 2690, 2692, 0, 2693, 2694,
	2695, 0, 0, 2697, 2698, 2699, 2701, 2702, 2703, 0,
	0, 0, 2675, 2705, 0, 0, 0, 0, 0, 0,
	0, 0, 2669, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 2904, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 3974,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 157,
	157, 0, 0, 0, 657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 1164, 494, 0, 157, 0,
	1752, 157, 157, 157, 157, 158, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 2877, 0, 0, 0, 0,
	0, 157, 0, 0, 658, 657, 0, 0, 0, 0,
	0, 0, 1164, 158, 0, 0, 2671, 0, 0, 2241,
	0, 0, 0, 0, 2889, 0, 658, 0, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 158, 1156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 701, 0, 157, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 494, 158, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 2878, 2880, 0,
	0, 2883, 0, 0, 2888, 0, 2893, 2890, 2891, 2241,
	2894, 2887, 0, 2897, 2896, 2898, 2569, 2899, 2900, 2901,
	0, 0, 2903, 2905, 2906, 2908, 2909, 2910, 0, 0,
	0, 2881, 2912, 0, 0, 657, 0, 157, 2241, 2241,
	2241, 2914, 0, 0, 2241, 0, 2241, 2241, 2241, 0,
	2241, 2241, 0, 0, 0, 1087, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 2241, 2241, 2241, 0, 0, 2241, 2241, 2241, 2241,
	2241, 2241, 0, 0, 0, 2241, 2241, 2241, 2241, 2241,
	2241, 2241, 2241, 2241, 2241, 2241, 2241, 0, 0, 743,
	0, 157, 157, 157, 0, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 2628, 4137, 0, 4139, 4140, 0,
	0, 0, 0, 0, 0, 0, 1754, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2725, 160, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 2742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 1752, 0, 0,
	160, 1160, 0, 0, 157, 0, 0, 0, 0, 0,
	157, 157, 0, 0, 589, 157, 583, 594, 576, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 2775,
	0, 2776, 0, 0, 495, 160, 0, 0, 0, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2784, 2785, 2786, 0, 0,
	0, 2790, 0, 2793, 0, 0, 2796, 0, 0, 2799,
	2800, 0, 0, 0, 2805, 2806, 0, 0, 0, 0,
	2812, 2813, 2814, 0, 0, 2815, 0, 2816, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	4321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 2821, 2822, 2823,
	2824, 0, 0, 2828, 2829, 2830, 2831, 2832, 2833, 0,
	0, 0, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 0, 2849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 574, 577, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 2913, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 1391, 0, 0,
	0, 158, 0, 0, 0, 2885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2882, 0, 0, 0, 581, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 579, 580, 587, 2124, 591, 592, 595, 0,
	0, 0, 0, 0, 495, 0, 0, 157, 0, 657,
	0, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 2886, 0, 3191, 0, 0, 0,
	0, 0, 0, 0, 0, 2895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 157, 0,
	0, 2884, 2907, 0, 0, 0, 657, 3227, 3228, 3229,
	3230, 3231, 3232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 1087, 0, 0, 0, 0, 1754,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 2706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 2902, 0, 0, 0, 1391, 0,
	2655, 0, 0, 0, 0, 0, 2679, 2241, 0, 0,
	0, 0, 0, 0, 2241, 2241, 2241, 2241, 2241, 2911,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2892, 556, 0, 0, 0, 0, 0, 0, 2654, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 1155, 0, 0, 0, 0, 158, 2642, 0, 1088,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 2904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 157, 0,
	0, 157, 2859, 1754, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 0, 0, 0, 0, 0, 2645, 2644, 2657, 2664,
	2643, 2656, 2647, 0, 0, 2680, 0, 0, 0, 0,
	2877, 0, 0, 0, 0, 0, 2689, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2667, 2665, 2660, 0, 0, 0, 2889,
	2662, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	158, 0, 2678, 2700, 2651, 2650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 494, 494, 494, 0,
	0, 0, 2646, 157, 157, 0, 0, 0, 0, 0,
	158, 158, 158, 158, 158, 0, 158, 0, 2652, 2653,
	0, 0, 2670, 0, 2661, 2663, 2666, 2668, 0, 0,
	0, 0, 2878, 2880, 0, 0, 2883, 0, 0, 2888,
	0, 2893, 2890, 2891, 0, 2894, 2887, 0, 2897, 2896,
	2898, 0, 2899, 2900, 2901, 0, 0, 2903, 2905, 2906,
	2908, 2909, 2910, 0, 0, 0, 2881, 2912, 0, 0,
	0, 0, 0, 0, 0, 2696, 2914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3638, 3639, 3640, 0, 0, 0,
	2704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3659, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 3666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3677,
	3678, 3679, 3680, 0, 0, 0, 0, 3685, 0, 0,
	158, 158, 0, 0, 0, 658, 0, 2177, 3695, 3696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	2876, 0, 158, 158, 158, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 3705, 0, 2241,
	1754, 0, 158, 0, 0, 0, 658, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 157, 701, 0,
	0, 495, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2672, 0, 160, 0, 0, 158, 0, 0, 0,
	0, 4209, 0, 494, 0, 0, 0, 2276, 495, 495,
	495, 495, 1661, 0, 0, 0, 0, 0, 0, 0,
	2683, 0, 0, 160, 160, 160, 160, 160, 0, 160,
	0, 0, 0, 2649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2673, 2674, 0, 2361, 2677, 0, 0,
	2682, 0, 2687, 2684, 2685, 0, 2688, 2681, 0, 2691,
	2690, 2692, 0, 2693, 2694, 2695, 0, 0, 2697, 2698,
	2699, 2701, 2702, 2703, 0, 0, 0, 2675, 2705, 0,
	0, 1648, 0, 0, 0, 0, 0, 2669, 0, 0,
	0, 0, 158, 158, 158, 0, 0, 0, 0, 0,
	1088, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2276, 0, 1086,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 160, 0, 0, 0, 659, 0,
	2178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 160, 160, 160, 160, 0,
	0, 157, 0, 0, 1662, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2671, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 157, 158, 0, 0, 0, 0,
	0, 158, 158, 0, 0, 0, 158, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	2277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3941, 3942, 3943, 0,
	3945, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 160, 0, 0, 3957, 0, 3960, 3961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3965, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	0, 0, 657, 0, 0, 160, 160, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3998, 0, 0,
	0, 0, 0, 0, 0, 4001, 0, 0, 0, 0,
	2277, 0, 0, 1160, 0, 1675, 1678, 1679, 1680, 1681,
	1682, 1683, 0, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 0, 1663, 1664, 1665,
	1645, 1644, 1676, 1646, 1649, 1643, 1647, 1642, 0, 0,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 0,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4071, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 160, 160, 0, 0, 0, 160,
	0, 0, 1086, 4087, 0, 0, 0, 1086, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4112, 4113, 4114,
	4115, 0, 0, 0, 0, 0, 0, 4119, 4120, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 4134, 157, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 0, 0, 0, 742, 0, 158, 0,
	658, 1666, 0, 0, 1718, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 1740, 0, 0, 0, 1718, 556, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 492, 0, 0, 4180,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 4203, 4204, 4205, 4206, 658, 158,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 4221, 159, 1157, 0,
	0, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 1088, 1088, 0, 0, 0, 159,
	2276, 0, 0, 0, 2130, 4235, 0, 0, 0, 0,
	0, 492, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4313, 4314, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4324, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 4333, 0, 0, 0,
	2182, 0, 0, 0, 0, 0, 0, 0, 42, 45,
	0, 0, 0, 0, 1751, 4353, 0, 160, 0, 0,
	4364, 0, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 75, 76, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 88, 0, 0, 0, 0, 657, 157,
	0, 160, 0, 659, 0, 1087, 0, 0, 0, 0,
	63, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2182, 4410, 0, 0, 158, 4413, 0, 0, 0, 158,
	0, 0, 158, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2182, 0, 2182, 0, 0, 2319, 494, 0,
	0, 0, 0, 0, 2320, 0, 0, 0, 0, 2182,
	2326, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 659, 160, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 80, 158, 96, 0, 0,
	0, 0, 0, 2277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 158, 158, 0, 0, 57, 0,
	0, 494, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	2182, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4552, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 2177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4597, 0, 2517,
	4600, 4601, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 1751, 0, 4612, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 160, 0, 0, 160, 0, 0, 4642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2276, 0, 0, 0, 0, 0, 82, 83, 0,
	0, 157, 158, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 64, 81, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 160, 160, 0,
	0, 0, 0, 71, 495, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3306, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 2178,
	157, 0, 4284, 0, 0, 4625, 4628, 4624, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 158, 0, 4285, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 2277, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 160, 0, 0, 0, 57,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 158, 0, 2591, 0, 0,
	0, 0, 2591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 494, 494, 494, 494, 0,
	0, 657, 0, 494, 494, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4287, 494,
	494, 0, 158, 494, 0, 0, 0, 0, 4296, 4288,
	4289, 4290, 4294, 4295, 4292, 160, 4293, 0, 4297, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2727, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	1661, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 2749, 495, 0, 1086, 1086, 0,
	0, 0, 0, 2182, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4298, 4286, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3306, 0, 0, 2177, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 492, 492, 492, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 160, 0,
	159, 159, 159, 159, 159, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 495, 495,
	495, 495, 1662, 0, 0, 0, 495, 495, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 495, 495, 0, 160, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 2986, 2990, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	159, 159, 0, 0, 0, 0, 0, 2179, 0, 0,
	3013, 0, 0, 85, 0, 0, 0, 0, 0, 159,
	0, 0, 159, 159, 159, 159, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 2591, 0, 0, 0, 0, 0, 3039, 0,
	2591, 0, 0, 2591, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2178, 0, 2182,
	2182, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 2275, 0, 0,
	0, 0, 0, 1675, 1678, 1679, 1680, 1681, 1682, 1683,
	0, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 0, 1663, 1664, 1665, 1645, 1644,
	1676, 1646, 1649, 1643, 1647, 1642, 0, 0, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3189, 0, 0, 0, 0, 0, 0, 0,
	3189, 3189, 3189, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 2182, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 71, 0, 160, 0, 0,
	658, 0, 93, 0, 0, 47, 0, 2182, 0, 658,
	158, 0, 159, 159, 159, 0, 3306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 2275, 0, 0,
	1157, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3270, 0, 494, 0,
	0, 0, 0, 0, 4284, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 1086, 495, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	2182, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 159, 159, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 494,
	0, 494, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3431, 3432, 3433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3189, 3189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 3469, 0, 0, 69, 70, 0,
	4287, 0, 659, 160, 0, 0, 0, 0, 0, 0,
	4296, 4288, 4289, 4290, 4294, 4295, 4292, 4635, 4293, 0,
	4297, 494, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 2727, 0, 0, 3528, 60,
	0, 495, 0, 0, 0, 0, 0, 0, 2727, 0,
	2727, 0, 0, 0, 3548, 0, 0, 0, 0, 0,
	0, 2727, 0, 2727, 3557, 2727, 2727, 2727, 2727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 494,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4298, 4286, 0,
	66, 67, 73, 0, 74, 0, 3189, 0, 0, 0,
	0, 0, 3637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 159, 0, 0, 0,
	4291, 3653, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 495, 0, 495, 0, 0, 0, 0, 0,
	0, 4284, 0, 0, 159, 0, 4703, 0, 0, 0,
	0, 0, 494, 0, 494, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 3306, 0, 0, 0,
	0, 158, 0, 0, 1086, 0, 0, 2182, 0, 0,
	0, 0, 2727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4285, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 159,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 495, 0, 0, 160, 0, 4291, 0, 0,
	2275, 0, 0, 0, 0, 85, 0, 0, 0, 2990,
	0, 0, 0, 0, 69, 70, 0, 4287, 4284, 0,
	0, 0, 0, 4697, 0, 0, 0, 4296, 4288, 4289,
	4290, 4294, 4295, 4292, 0, 4293, 0, 4297, 0, 3189,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 495, 0, 0,
	0, 0, 3871, 495, 0, 49, 90, 56, 55, 58,
	0, 0, 3306, 0, 96, 0, 0, 0, 0, 0,
	4285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 160, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 4298, 4286, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 159,
	0, 0, 159, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 1751, 492, 0,
	0, 0, 0, 0, 0, 3922, 0, 0, 0, 0,
	0, 69, 70, 0, 4287, 0, 0, 0, 0, 0,
	0, 2182, 0, 0, 4296, 4288, 4289, 4290, 4294, 4295,
	4292, 0, 4293, 0, 4297, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 42,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 159, 159, 0, 0, 0, 1086,
	93, 492, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4291, 0, 0, 59, 61, 3189, 0, 0, 3189,
	87, 4298, 4286, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 4284, 0, 0, 0, 2179, 4691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	4073, 0, 0, 0, 0, 93, 0, 0, 47, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 4080, 0, 0, 4285, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2275, 62, 92, 91, 0, 0, 0, 0, 57,
	89, 0, 159, 0, 0, 0, 4291, 2182, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4284, 0, 0,
	0, 0, 4683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4296, 4288,
	4289, 4290, 4294, 4295, 4292, 0, 4293, 0, 4297, 0,
	0, 0, 159, 78, 0, 79, 0, 0, 0, 85,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 84, 4285,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	3189, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 4219, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4298, 4286, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4296, 4288, 4289, 4290, 4294, 4295, 4292,
	0, 4293, 159, 4297, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 3189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 2182, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 159, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 492, 492, 492, 492, 0,
	0, 0, 0, 492, 492, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	492, 0, 159, 492, 0, 0, 0, 2182, 0, 0,
	4298, 4286, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 4219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2182, 0, 2179, 0, 0, 0, 0, 0,
	42, 448, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 259, 0, 0, 0, 87, 0, 0, 2182,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 478, 190, 88, 314, 0, 0, 476,
	423, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 85, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 159,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 96,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 195, 0, 0, 492, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 492, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 492, 442, 477, 482, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 492, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	481, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 484, 475, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 471, 0, 257, 0,
	473, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 486, 220, 309, 450, 161, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 474, 0, 217, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 485, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 492, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 492, 0, 492,
	0, 492, 0, 0, 0, 0, 680, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 109, 384, 276, 336, 413, 338, 298, 247,
	483, 341, 383, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 252, 673, 0, 0, 213, 223, 236, 250,
	265, 492, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 479, 480, 0,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 492, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 901, 1044, 0, 0, 448, 802, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 706, 856, 889, 259, 705, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	810, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 794, 795, 928, 986, 875, 973, 1050, 909, 978,
	1051, 89, 0, 0, 0, 0, 731, 558, 732, 734,
	735, 736, 737, 0, 0, 171, 733, 738, 739, 740,
	0, 938, 983, 1063, 854, 703, 720, 859, 809, 4379,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 717, 718, 0,
	0, 0, 0, 825, 0, 719, 0, 869, 715, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 721, 492, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 797, 1034, 926, 301, 191, 1040, 924,
	823, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 807, 198, 313, 1019, 890,
	903, 728, 0, 392, 979, 467, 709, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	811, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 708, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 729, 730, 246, 800, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 877, 1066, 824, 812, 813, 816, 960, 961, 814,
	817, 818, 826, 798, 799, 801, 803, 804, 805, 948,
	1041, 862, 808, 1017, 819, 820, 821, 822, 988, 1060,
	796, 242, 745, 838, 839, 840, 746, 841, 842, 747,
	748, 843, 844, 845, 846, 749, 847, 848, 849, 827,
	828, 829, 830, 831, 832, 833, 834, 837, 835, 836,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 806, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 901, 1044,
	0, 0, 448, 802, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	706, 856, 889, 259, 705, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 810, 314, 0, 0,
	476, 423, 339, 0, 0, 943, 0, 794, 795, 928,
	986, 875, 973, 1050, 909, 978, 1051, 89, 0, 695,
	0, 0, 731, 558, 732, 734, 735, 736, 737, 0,
	0, 171, 733, 738, 739, 740, 0, 938, 983, 1063,
	854, 703, 720, 859, 809, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 717, 718, 0, 0, 0, 0, 825,
	0, 719, 0, 869, 715, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 721, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 797,
	1034, 926, 301, 191, 1040, 924, 823, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 807, 198, 313, 1019, 890, 903, 728, 0, 392,
	979, 467, 709, 278, 0, 965, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 811, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 708,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	729, 730, 246, 800, 1053, 211, 867, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 877, 1066, 824,
	812, 813, 816, 960, 961, 814, 817, 818, 826, 798,
	799, 801, 803, 804, 805, 948, 1041, 862, 808, 1017,
	819, 820, 821, 822, 988, 1060, 796, 242, 745, 838,
	839, 840, 746, 841, 842, 747, 748, 843, 844, 845,
	846, 749, 847, 848, 849, 827, 828, 829, 830, 831,
	832, 833, 834, 837, 835, 836, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 806,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 901, 1044, 0, 0, 448, 802,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 706, 856, 889, 259,
	705, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1050,
	909, 978, 1051, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1063, 854, 703, 720, 859,
	809, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 2239, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1034, 926, 301, 191,
	1040, 924, 823, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1019, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 811, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 877, 1066, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1041, 862, 808, 1017, 819, 820, 821, 822,
	988, 1060, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	901, 1044, 0, 0, 448, 802, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 706, 856, 889, 259, 705, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 810, 314,
	0, 0, 476, 423, 339, 0, 0, 943, 0, 794,
	795, 928, 986, 875, 973, 1050, 909, 978, 1051, 89,
	0, 0, 0, 0, 731, 558, 732, 734, 735, 736,
	737, 0, 0, 171, 733, 738, 739, 740, 0, 938,
	983, 1063, 854, 703, 720, 859, 809, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 717, 718, 699, 0, 0,
	0, 825, 0, 719, 0, 869, 715, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 721,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 797, 1034, 926, 301, 191, 1040, 924, 823, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 807, 198, 313, 1019, 890, 903, 728,
	0, 392, 979, 467, 709, 278, 0, 965, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 811, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 708, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 729, 730, 246, 800, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 877,
	1066, 824, 812, 813, 816, 960, 961, 814, 817, 818,
	826, 798, 799, 801, 803, 804, 805, 948, 1041, 862,
	808, 1017, 819, 820, 821, 822, 988, 1060, 796, 242,
	745, 838, 839, 840, 746, 841, 842, 747, 748, 843,
	844, 845, 846, 749, 847, 848, 849, 827, 828, 829,
	830, 831, 832, 833, 834, 837, 835, 836, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 806, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 901, 1044, 0, 0,
	448, 802, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 706, 856,
	889, 259, 705, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1050, 909, 2448, 1051, 89, 0, 0, 0, 0,
	2450, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 2449, 938, 983, 1063, 854, 703,
	720, 859, 809, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1034, 926,
	301, 191, 1040, 924, 823, 992, 870, 1022, 1056, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1019, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1042, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1012, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1024, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1006, 1026, 886, 872,
	878, 873, 902, 1043, 293, 285, 1027, 1025, 904, 361,
	224, 956, 949, 942, 811, 471, 1059, 257, 1008, 473,
	180, 406, 405, 916, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1038, 1021, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1053, 211, 867, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 968, 955, 953, 861, 1037, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 879, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1062, 360,
	393, 233, 469, 421, 262, 877, 1066, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1041, 862, 808, 1017, 819, 820,
	821, 822, 988, 1060, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1015, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1064, 346, 1033, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1032, 1057,
	976, 990, 901, 1044, 0, 0, 448, 802, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 706, 856, 889, 259, 705, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	810, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 794, 795, 928, 986, 875, 973, 1050, 909, 978,
	1051, 89, 0, 0, 0, 0, 2348, 558, 732, 734,
	735, 736, 737, 0, 0, 171, 733, 738, 739, 740,
	0, 938, 983, 1063, 854, 703, 720, 859, 809, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 717, 718, 2239,
	0, 0, 0, 825, 0, 719, 0, 869, 715, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 721, 0, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 797, 1034, 926, 301, 191, 1040, 924,
	823, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 807, 198, 313, 1019, 890,
	903, 728, 0, 392, 979, 467, 709, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	811, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 708, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 729, 730, 246, 800, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 877, 1066, 824, 812, 813, 816, 960, 961, 814,
	817, 818, 826, 798, 799, 801, 803, 804, 805, 948,
	1041, 862, 808, 1017, 819, 820, 821, 822, 988, 1060,
	796, 242, 745, 838, 839, 840, 746, 841, 842, 747,
	748, 843, 844, 845, 846, 749, 847, 848, 849, 827,
	828, 829, 830, 831, 832, 833, 834, 837, 835, 836,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 806, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 901, 1044,
	0, 0, 448, 802, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	706, 856, 889, 259, 705, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 810, 314, 0, 0,
	476, 423, 339, 0, 0, 943, 0, 794, 795, 928,
	986, 875, 973, 1050, 909, 978, 1051, 89, 0, 0,
	0, 0, 2345, 558, 732, 734, 735, 736, 737, 0,
	0, 171, 733, 738, 739, 740, 0, 938, 983, 1063,
	854, 703, 720, 859, 809, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 717, 718, 2239, 0, 0, 0, 825,
	0, 719, 0, 869, 715, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 721, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 797,
	1034, 926, 301, 191, 1040, 924, 823, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 807, 198, 313, 1019, 890, 903, 728, 0, 392,
	979, 467, 709, 278, 0, 965, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 811, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 708,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	729, 730, 246, 800, 1053, 211, 867, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 877, 1066, 824,
	812, 813, 816, 960, 961, 814, 817, 818, 826, 798,
	799, 801, 803, 804, 805, 948, 1041, 862, 808, 1017,
	819, 820, 821, 822, 988, 1060, 796, 242, 745, 838,
	839, 840, 746, 841, 842, 747, 748, 843, 844, 845,
	846, 749, 847, 848, 849, 827, 828, 829, 830, 831,
	832, 833, 834, 837, 835, 836, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 806,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 901, 1044, 0, 42, 448, 802,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 706, 856, 889, 259,
	705, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1050,
	909, 978, 1051, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1063, 854, 703, 720, 859,
	809, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1541, 926, 301, 191,
	1040, 924, 823, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1019, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 811, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 877, 1066, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 948, 1041, 862, 808, 1017, 819, 820, 821, 822,
	988, 1060, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1539,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	901, 1044, 0, 0, 448, 802, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 706, 856, 889, 259, 705, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 810, 314,
	0, 0, 476, 423, 339, 0, 0, 943, 0, 794,
	795, 928, 986, 875, 973, 1050, 909, 978, 1051, 89,
	0, 2106, 0, 0, 731, 558, 732, 734, 735, 736,
	737, 0, 0, 171, 733, 738, 739, 740, 0, 938,
	983, 1063, 854, 703, 720, 859, 809, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 717, 718, 0, 0, 0,
	0, 825, 0, 719, 0, 869, 715, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 721,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 797, 1034, 926, 301, 191, 1040, 924, 823, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 807, 198, 313, 1019, 890, 903, 728,
	0, 392, 979, 467, 709, 278, 0, 965, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 811, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 708, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 729, 730, 246, 800, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 877,
	1066, 824, 812, 813, 816, 960, 961, 814, 817, 818,
	826, 798, 799, 801, 803, 804, 805, 948, 1041, 862,
	808, 1017, 819, 820, 821, 822, 988, 1060, 796, 242,
	745, 838, 839, 840, 746, 841, 842, 747, 748, 843,
	844, 845, 846, 749, 847, 848, 849, 827, 828, 829,
	830, 831, 832, 833, 834, 837, 835, 836, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 806, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 901, 1044, 0, 0,
	448, 802, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 706, 856,
	889, 259, 705, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 810, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 794, 795, 928, 986, 875,
	973, 1050, 909, 978, 1051, 89, 0, 0, 0, 0,
	731, 558, 732, 734, 735, 736, 737, 0, 0, 171,
	733, 738, 739, 740, 0, 938, 983, 1063, 854, 703,
	720, 859, 809, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 717, 718, 0, 0, 0, 0, 825, 0, 719,
	0, 869, 715, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 721, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 797, 1034, 926,
	301, 191, 1040, 924, 823, 992, 870, 1022, 1056, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 807,
	198, 313, 1019, 890, 903, 728, 0, 392, 979, 467,
	709, 278, 0, 965, 391, 315, 460, 993, 1042, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1012, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1024, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1006, 1026, 886, 872,
	878, 873, 902, 1043, 293, 285, 1027, 1025, 904, 361,
	224, 956, 949, 942, 811, 471, 1059, 257, 1008, 473,
	180, 406, 405, 916, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 486, 220, 309, 450, 708, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1038, 1021, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 729, 730,
	246, 800, 1053, 211, 867, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 968, 955, 953, 861, 1037, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 957, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 879, 1014, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 995, 1062, 360,
	393, 233, 469, 421, 262, 877, 1066, 824, 812, 813,
	816, 960, 961, 814, 817, 818, 826, 798, 799, 801,
	803, 804, 805, 948, 1041, 862, 808, 1017, 819, 820,
	821, 822, 988, 1060, 796, 242, 745, 838, 839, 840,
	746, 841, 842, 747, 748, 843, 844, 845, 846, 749,
	847, 848, 849, 827, 828, 829, 830, 831, 832, 833,
	834, 837, 835, 836, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 806, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1015, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1064, 346, 1033, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1032, 1057,
	976, 990, 901, 1044, 0, 0, 448, 802, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 1106, 856, 889, 259, 1104, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	810, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 794, 795, 928, 986, 875, 973, 1050, 909, 978,
	1051, 89, 0, 0, 0, 0, 731, 558, 732, 734,
	735, 736, 737, 0, 0, 171, 733, 738, 739, 740,
	0, 938, 983, 1063, 854, 1123, 720, 859, 809, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 717, 718, 0,
	0, 0, 0, 825, 0, 719, 0, 869, 715, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 721, 0, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 797, 1034, 926, 301, 191, 1040, 924,
	823, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 807, 198, 313, 1019, 890,
	903, 728, 0, 392, 979, 467, 709, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	811, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 708, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 729, 730, 246, 800, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 877, 1066, 824, 812, 813, 816, 960, 961, 814,
	817, 818, 826, 798, 799, 801, 803, 804, 805, 948,
	1041, 862, 808, 1017, 819, 820, 821, 822, 988, 1060,
	796, 242, 745, 838, 839, 840, 746, 841, 842, 747,
	748, 843, 844, 845, 846, 749, 847, 848, 849, 827,
	828, 829, 830, 831, 832, 833, 834, 837, 835, 836,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 806, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 901, 1044,
	0, 0, 448, 802, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	1106, 856, 889, 259, 1104, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 810, 314, 0, 0,
	476, 423, 339, 0, 0, 943, 0, 794, 795, 928,
	986, 875, 973, 1050, 909, 978, 1051, 89, 0, 0,
	0, 0, 731, 558, 732, 734, 735, 736, 737, 0,
	0, 171, 733, 738, 739, 740, 0, 938, 983, 1063,
	854, 1123, 720, 859, 809, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 717, 718, 0, 0, 0, 0, 825,
	0, 719, 0, 869, 715, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 721, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 797,
	1034, 926, 301, 191, 1040, 924, 823, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 807, 198, 313, 1019, 890, 903, 728, 0, 392,
	979, 467, 709, 278, 0, 4541, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 811, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 708,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	729, 730, 246, 800, 1053, 211, 867, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 877, 1066, 824,
	812, 813, 816, 960, 961, 814, 817, 818, 826, 798,
	799, 801, 803, 804, 805, 948, 1041, 862, 808, 1017,
	819, 820, 821, 822, 988, 1060, 796, 242, 745, 838,
	839, 840, 746, 841, 842, 747, 748, 843, 844, 845,
	846, 749, 847, 848, 849, 827, 828, 829, 830, 831,
	832, 833, 834, 837, 835, 836, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 806,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 901, 1044, 0, 0, 448, 802,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 1106, 856, 889, 259,
	1104, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 810, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 794, 795, 928, 986, 875, 973, 1050,
	909, 978, 1051, 89, 0, 0, 0, 0, 731, 558,
	732, 734, 735, 736, 737, 0, 0, 171, 733, 738,
	739, 740, 0, 938, 983, 1063, 854, 1123, 720, 859,
	809, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 717,
	718, 0, 0, 0, 0, 825, 0, 719, 0, 869,
	715, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 721, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 797, 1034, 926, 301, 191,
	1040, 924, 823, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 807, 198, 313,
	1019, 890, 903, 728, 0, 392, 979, 467, 709, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 811, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 708, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 729, 730, 246, 800,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 877, 1066, 824, 812, 813, 816, 960,
	961, 814, 817, 818, 826, 798, 799, 801, 803, 804,
	805, 2351, 2352, 2353, 808, 1017, 819, 820, 821, 822,
	988, 1060, 796, 242, 745, 838, 839, 840, 746, 841,
	842, 747, 748, 843, 844, 845, 846, 749, 847, 848,
	849, 827, 828, 829, 830, 831, 832, 833, 834, 837,
	835, 836, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 806, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	1827, 2007, 0, 3709, 448, 1861, 2011, 1810, 1840, 2029,
	1846, 1849, 1930, 1776, 1899, 357, 1837, 1777, 1959, 1760,
	1815, 1764, 1828, 1765, 1812, 259, 1808, 1972, 1902, 2009,
	1881, 1923, 1933, 258, 244, 1891, 1890, 1997, 1826, 1825,
	1928, 1986, 2008, 1880, 0, 172, 478, 190, 3710, 314,
	1983, 498, 3711, 423, 339, 501, 500, 1876, 1992, 1897,
	1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924, 2014, 89,
	0, 695, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1920, 2005, 1831, 499, 1871,
	1929, 2034, 1763, 1916, 0, 1768, 1779, 2028, 1998, 1822,
	1823, 263, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 468, 1935, 1945, 1964, 1848, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 340,
	1780, 1966, 3713, 1857, 301, 191, 2002, 1855, 1854, 1939,
	1785, 1976, 2026, 1841, 311, 1783, 195, 1778, 1786, 1839,
	353, 1949, 1957, 177, 198, 313, 1973, 1813, 1830, 245,
	2181, 392, 1925, 467, 497, 278, 0, 1906, 391, 315,
	460, 1940, 2004, 466, 1842, 442, 477, 482, 271, 1882,
	234, 420, 261, 254, 1821, 1963, 1767, 284, 375, 249,
	306, 1860, 1931, 1814, 241, 1943, 1914, 1978, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1974,
	1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006, 293, 285,
	1981, 1979, 1832, 361, 224, 1895, 1888, 1875, 1953, 471,
	2030, 257, 1958, 473, 180, 406, 405, 1845, 292, 1960,
	181, 170, 385, 182, 302, 204, 1985, 486, 220, 309,
	450, 496, 277, 352, 1927, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1955, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 2012, 322, 266,
	270, 286, 297, 1926, 389, 427, 474, 1917, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1951, 216, 237, 428,
	210, 2000, 1975, 1908, 1863, 1869, 1769, 0, 209, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	281, 1938, 463, 464, 246, 1781, 2020, 211, 1782, 2019,
	349, 356, 348, 2023, 2021, 459, 2001, 1909, 1894, 1892,
	1774, 1999, 1907, 1893, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1896, 425, 320, 0, 206,
	0, 424, 2010, 2036, 439, 226, 1800, 1967, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1942, 2033, 360, 393, 233, 469, 421, 262, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017,
	1954, 1789, 192, 193, 1993, 1994, 194, 1887, 2003, 1775,
	0, 1971, 188, 189, 174, 179, 1934, 2031, 1847, 242,
	164, 1771, 1772, 1773, 165, 1877, 1878, 167, 168, 1989,
	1988, 1987, 1990, 169, 2024, 2022, 2025, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1905, 199, 212, 312, 3712, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1968, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035, 346, 1995,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962,
	1970, 1977, 1982, 1984, 472, 252, 1885, 1910, 1948, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 1858, 196, 0, 0, 202, 0, 203, 205,
	1843, 201, 1991, 2027, 1922, 1936, 1827, 2007, 0, 1969,
	448, 1861, 2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776,
	1899, 357, 1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765,
	1812, 259, 1808, 1972, 1902, 2009, 1881, 1923, 1933, 258,
	244, 1891, 1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880,
	0, 172, 478, 190, 2018, 314, 1983, 498, 476, 423,
	339, 501, 500, 1876, 1992, 1897, 1961, 1859, 1932, 1792,
	1915, 2013, 1838, 1924, 2014, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1920, 2005, 1831, 499, 1871, 1929, 2034, 1763, 1916,
	0, 1768, 1779, 2028, 1998, 1822, 1823, 263, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	468, 1935, 1945, 1964, 1848, 376, 283, 0, 0, 0,
	0, 0, 0, 3208, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 340, 1780, 1966, 1996, 1857,
	301, 191, 2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841,
	311, 1783, 195, 1778, 1786, 1839, 353, 1949, 1957, 177,
	198, 313, 1973, 1813, 1830, 245, 0, 392, 1925, 467,
	2279, 278, 0, 1906, 391, 315, 460, 1940, 2004, 466,
	1842, 442, 477, 482, 271, 1882, 234, 420, 261, 254,
	1821, 1963, 1767, 284, 375, 249, 306, 1860, 1931, 1814,
	241, 1943, 1914, 1978, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1974, 1956, 1980, 1807, 1787,
	1798, 1788, 1829, 2006, 293, 285, 1981, 1979, 1832, 361,
	224, 1895, 1888, 1875, 1953, 471, 2030, 257, 1958, 473,
	180, 406, 405, 1845, 292, 1960, 181, 170, 385, 182,
	302, 204, 1985, 486, 220, 309, 450, 2278, 277, 352,
	1927, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1955, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2012, 322, 266, 270, 286, 297, 1926,
	389, 427, 474, 1917, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1951, 216, 237, 428, 210, 2000, 1975, 1908,
	1863, 1869, 1769, 0, 209, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 281, 1938, 463, 464,
	246, 1781, 2020, 211, 1782, 2019, 349, 356, 348, 2023,
	2021, 459, 2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1896, 425, 320, 0, 206, 0, 424, 2010, 2036,
	439, 226, 1800, 1967, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1942, 2033, 360,
	393, 233, 469, 421, 262, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789, 192, 193,
	1993, 1994, 194, 1887, 2003, 1775, 0, 1971, 188, 189,
	174, 179, 1934, 2031, 1847, 242, 164, 1771, 1772, 1773,
	165, 1877, 1878, 167, 168, 1989, 1988, 1987, 1990, 169,
	2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1965, 1937, 1946, 1820, 1879, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1905, 199, 212,
	312, 2032, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1968, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2035, 346, 1995, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984,
	472, 252, 1885, 1910, 1948, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1858, 196,
	0, 0, 202, 0, 203, 205, 1843, 201, 1991, 2027,
	1922, 1936, 1827, 2007, 0, 1969, 448, 1861, 2011, 1810,
	1840, 2029, 1846, 1849, 1930, 1776, 1899, 357, 1837, 1777,
	1959, 1760, 1815, 1764, 1828, 1765, 1812, 259, 1808, 1972,
	1902, 2009, 1881, 1923, 1933, 258, 244, 1891, 1890, 1997,
	1826, 1825, 1928, 1986, 2008, 1880, 0, 172, 478, 190,
	2018, 314, 1983, 498, 476, 423, 339, 501, 500, 1876,
	1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924,
	2014, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1920, 2005, 1831,
	499, 1871, 1929, 2034, 1763, 1916, 0, 1768, 1779, 2028,
	1998, 1822, 1823, 263, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 468, 1935, 1945, 1964,
	1848, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 340, 1780, 1966, 1996, 1857, 301, 191, 2002, 1855,
	1854, 1939, 1785, 1976, 2026, 1841, 311, 1783, 195, 1778,
	1786, 1839, 353, 1949, 1957, 177, 198, 313, 1973, 1813,
	1830, 245, 2181, 392, 1925, 467, 497, 278, 0, 1906,
	391, 315, 460, 1940, 2004, 466, 1842, 442, 477, 482,
	271, 1882, 234, 420, 261, 254, 1821, 1963, 1767, 284,
	375, 249, 306, 1860, 1931, 1814, 241, 1943, 1914, 1978,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1974, 1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006,
	293, 285, 1981, 1979, 1832, 361, 224, 1895, 1888, 1875,
	1953, 471, 2030, 257, 1958, 473, 180, 406, 405, 1845,
	292, 1960, 181, 170, 385, 182, 302, 204, 1985, 486,
	220, 309, 450, 496, 277, 352, 1927, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1955, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 2012,
	322, 266, 270, 286, 297, 1926, 389, 427, 474, 1917,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1951, 216,
	237, 428, 210, 2000, 1975, 1908, 1863, 1869, 1769, 0,
	209, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 281, 1938, 463, 464, 246, 1781, 2020, 211,
	1782, 2019, 349, 356, 348, 2023, 2021, 459, 2001, 1909,
	1894, 1892, 1774, 1999, 1907, 1893, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1896, 425, 320,
	0, 206, 0, 424, 2010, 2036, 439, 226, 1800, 1967,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1942, 2033, 360, 393, 233, 469, 421,
	262, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2015,
	2016, 2017, 1954, 1789, 192, 193, 1993, 1994, 194, 1887,
	2003, 1775, 0, 1971, 188, 189, 174, 179, 1934, 2031,
	1847, 242, 164, 1771, 1772, 1773, 165, 1877, 1878, 167,
	168, 1989, 1988, 1987, 1990, 169, 2024, 2022, 2025, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946,
	1820, 1879, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1905, 199, 212, 312, 2032, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1968,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035,
	346, 1995, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1962, 1970, 1977, 1982, 1984, 472, 252, 1885, 1910,
	1948, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 1858, 196, 0, 0, 202, 0,
	203, 205, 1843, 201, 1991, 2027, 1922, 1936, 1827, 2007,
	0, 1969, 448, 1861, 2011, 1810, 1840, 2029, 1846, 1849,
	1930, 1776, 1899, 357, 1837, 1777, 1959, 1760, 1815, 1764,
	1828, 1765, 1812, 259, 1808, 1972, 1902, 2009, 1881, 1923,
	1933, 258, 244, 1891, 1890, 1997, 1826, 1825, 1928, 1986,
	2008, 1880, 0, 172, 478, 190, 2018, 314, 1983, 498,
	476, 423, 339, 501, 500, 1876, 1992, 1897, 1961, 1859,
	1932, 1792, 1915, 2013, 1838, 1924, 2014, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1920, 2005, 1831, 499, 1871, 1929, 2034,
	1763, 1916, 0, 1768, 1779, 2028, 1998, 1822, 1823, 263,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 468, 1935, 1945, 1964, 1848, 376, 283, 0,
	0, 0, 0, 0, 0, 2272, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 340, 1780, 1966,
	1996, 1857, 301, 191, 2002, 1855, 1854, 1939, 1785, 1976,
	2026, 1841, 311, 1783, 195, 1778, 1786, 1839, 353, 1949,
	1957, 177, 198, 313, 1973, 1813, 1830, 245, 0, 392,
	1925, 467, 2279, 278, 0, 1906, 391, 315, 460, 1940,
	2004, 466, 1842, 442, 477, 482, 271, 1882, 234, 420,
	261, 254, 1821, 1963, 1767, 284, 375, 249, 306, 1860,
	1931, 1814, 241, 1943, 1914, 1978, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1974, 1956, 1980,
	1807, 1787, 1798, 1788, 1829, 2006, 293, 285, 1981, 1979,
	1832, 361, 224, 1895, 1888, 1875, 1953, 471, 2030, 257,
	1958, 473, 180, 406, 405, 1845, 292, 1960, 181, 170,
	385, 182, 302, 204, 1985, 486, 220, 309, 450, 2278,
	277, 352, 1927, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1955, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 2012, 322, 266, 270, 286,
	297, 1926, 389, 427, 474, 1917, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1951, 216, 237, 428, 210, 2000,
	1975, 1908, 1863, 1869, 1769, 0, 209, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 281, 1938,
	463, 464, 246, 1781, 2020, 211, 1782, 2019, 349, 356,
	348, 2023, 2021, 459, 2001, 1909, 1894, 1892, 1774, 1999,
	1907, 1893, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1896, 425, 320, 0, 206, 0, 424,
	2010, 2036, 439, 226, 1800, 1967, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1942,
	2033, 360, 393, 233, 469, 421, 262, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789,
	192, 193, 1993, 1994, 194, 1887, 2003, 1775, 0, 1971,
	188, 189, 174, 179, 1934, 2031, 1847, 242, 164, 1771,
	1772, 1773, 165, 1877, 1878, 167, 168, 1989, 1988, 1987,
	1990, 169, 2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1905,
	199, 212, 312, 2032, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1968, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2035, 346, 1995, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977,
	1982, 1984, 472, 252, 1885, 1910, 1948, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	1858, 196, 0, 0, 202, 0, 203, 205, 1843, 201,
	1991, 2027, 1922, 1936, 1827, 2007, 0, 1969, 448, 1861,
	2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776, 1899, 357,
	1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765, 1812, 259,
	1808, 1972, 1902, 2009, 1881, 1923, 1933, 258, 244, 1891,
	1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880, 0, 172,
	478, 190, 2018, 314, 1983, 498, 476, 423, 339, 501,
	500, 1876, 1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013,
	1838, 1924, 2014, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1920,
	2005, 1831, 499, 1871, 1929, 2034, 1763, 1916, 0, 1768,
	1779, 2028, 1998, 1822, 1823, 263, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 468, 1935,
	1945, 1964, 1848, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 340, 1780, 1966, 1996, 1857, 301, 191,
	2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841, 311, 1783,
	195, 1778, 1786, 1839, 353, 1949, 1957, 177, 198, 313,
	1973, 1813, 1830, 245, 0, 392, 1925, 467, 2279, 278,
	0, 1906, 391, 315, 460, 1940, 2004, 466, 1842, 442,
	477, 482, 271, 1882, 234, 420, 261, 254, 1821, 1963,
	1767, 284, 375, 249, 306, 1860, 1931, 1814, 241, 1943,
	1914, 1978, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1974, 1956, 1980, 1807, 1787, 1798, 1788,
	1829, 2006, 293, 285, 1981, 1979, 1832, 361, 224, 1895,
	1888, 1875, 1953, 471, 2030, 257, 1958, 473, 180, 406,
	405, 1845, 292, 1960, 181, 170, 385, 182, 302, 204,
	1985, 486, 220, 309, 450, 2278, 277, 352, 1927, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1955,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 2012, 322, 266, 270, 286, 297, 1926, 389, 427,
	474, 1917, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1951, 216, 237, 428, 210, 2000, 1975, 1908, 1863, 1869,
	1769, 0, 209, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 281, 1938, 463, 464, 246, 1781,
	2020, 211, 1782, 2019, 349, 356, 348, 2023, 2021, 459,
	2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1896,
	425, 320, 0, 206, 0, 424, 2010, 2036, 439, 226,
	1800, 1967, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1942, 2033, 360, 393, 233,
	469, 421, 262, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2015, 2016, 2017, 1954, 1789, 192, 193, 1993, 1994,
	194, 1887, 2003, 1775, 0, 1971, 188, 189, 174, 179,
	1934, 2031, 1847, 242, 164, 1771, 1772, 1773, 165, 1877,
	1878, 167, 168, 1989, 1988, 1987, 1990, 169, 2024, 2022,
	2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965,
	1937, 1946, 1820, 1879, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1905, 199, 212, 312, 2032,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1968, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2035, 346, 1995, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984, 472, 252,
	1885, 1910, 1948, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1858, 196, 0, 0,
	202, 0, 203, 205, 1843, 201, 1991, 2027, 1922, 1936,
	901, 1044, 0, 0, 448, 1111, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 1106, 856, 889, 259, 1104, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 1144, 314,
	0, 498, 476, 423, 339, 501, 500, 943, 0, 1118,
	1131, 928, 986, 875, 973, 1050, 909, 978, 1051, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 499, 938,
	983, 1063, 854, 1123, 0, 859, 1095, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 869, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 1133, 1034, 926, 301, 191, 1040, 924, 1110, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 177, 198, 313, 1019, 890, 903, 245,
	3308, 392, 979, 467, 2364, 278, 0, 965, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 1129, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 2363, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 463, 464, 246, 1096, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 1101,
	0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143,
	1130, 1097, 192, 193, 1138, 1139, 194, 948, 1041, 862,
	0, 1017, 188, 189, 174, 179, 988, 1060, 1109, 242,
	164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136,
	1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108,
	1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1121, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 1827, 2007, 0, 1969,
	448, 1861, 2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776,
	1899, 357, 1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765,
	1812, 259, 1808, 1972, 1902, 2009, 1881, 1923, 1933, 258,
	244, 1891, 1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880,
	0, 172, 478, 190, 2018, 314, 1983, 498, 476, 423,
	339, 501, 500, 1876, 1992, 1897, 1961, 1859, 1932, 1792,
	1915, 2013, 1838, 1924, 2014, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1920, 2005, 1831, 499, 1871, 1929, 2034, 1763, 1916,
	0, 1768, 1779, 2028, 1998, 1822, 1823, 263, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	468, 1935, 1945, 1964, 1848, 376, 283, 0, 0, 0,
	0, 0, 0, 2860, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 340, 1780, 1966, 1996, 1857,
	301, 191, 2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841,
	311, 1783, 195, 1778, 1786, 1839, 353, 1949, 1957, 177,
	198, 313, 1973, 1813, 1830, 245, 0, 392, 1925, 467,
	497, 278, 0, 1906, 391, 315, 460, 1940, 2004, 466,
	1842, 442, 477, 482, 271, 1882, 234, 420, 261, 254,
	1821, 1963, 1767, 284, 375, 249, 306, 1860, 1931, 1814,
	241, 1943, 1914, 1978, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1974, 1956, 1980, 1807, 1787,
	1798, 1788, 1829, 2006, 293, 285, 1981, 1979, 1832, 361,
	224, 1895, 1888, 1875, 1953, 471, 2030, 257, 1958, 473,
	180, 406, 405, 1845, 292, 1960, 181, 170, 385, 182,
	302, 204, 1985, 486, 220, 309, 450, 496, 277, 352,
	1927, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1955, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 2012, 322, 266, 270, 286, 297, 1926,
	389, 427, 474, 1917, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1951, 216, 237, 428, 210, 2000, 1975, 1908,
	1863, 1869, 1769, 0, 209, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 281, 1938, 463, 464,
	246, 1781, 2020, 211, 1782, 2019, 349, 356, 348, 2023,
	2021, 459, 2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1896, 425, 320, 0, 206, 0, 424, 2010, 2036,
	439, 226, 1800, 1967, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1942, 2033, 360,
	393, 233, 469, 421, 262, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789, 0, 0,
	1993, 1994, 0, 1887, 2003, 1775, 0, 1971, 188, 189,
	174, 179, 1934, 2031, 1847, 242, 0, 1771, 1772, 1773,
	0, 1877, 1878, 0, 0, 1989, 1988, 1987, 1990, 0,
	2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1965, 1937, 1946, 1820, 1879, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1905, 199, 212,
	312, 2032, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1968, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2035, 346, 1995, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984,
	472, 252, 1885, 1910, 1948, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1858, 196,
	0, 0, 202, 0, 203, 205, 1843, 201, 1991, 2027,
	1922, 1936, 901, 1044, 0, 0, 448, 1111, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 1106, 856, 889, 259, 1104, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	1144, 314, 0, 498, 476, 423, 339, 501, 500, 943,
	0, 1118, 1131, 928, 986, 875, 973, 1050, 909, 978,
	1051, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1126, 1140, 1107,
	499, 938, 983, 1063, 854, 1123, 0, 859, 1095, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 869, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 1133, 1034, 926, 301, 191, 1040, 924,
	1110, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 177, 198, 313, 1019, 890,
	903, 245, 0, 392, 979, 467, 2364, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	1129, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 2363, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 463, 464, 246, 1096, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141,
	1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194, 948,
	1041, 862, 0, 1017, 188, 189, 174, 179, 988, 1060,
	1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167,
	168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098,
	1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1121, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 1827, 2007,
	0, 1969, 448, 1861, 2011, 1810, 1840, 2029, 1846, 1849,
	1930, 1776, 1899, 357, 1837, 1777, 1959, 1760, 1815, 1764,
	1828, 1765, 1812, 259, 1808, 1972, 1902, 2009, 1881, 1923,
	1933, 258, 244, 1891, 1890, 1997, 1826, 1825, 1928, 1986,
	2008, 1880, 0, 172, 478, 190, 2018, 314, 1983, 498,
	476, 423, 339, 501, 500, 1876, 1992, 1897, 1961, 1859,
	1932, 1792, 1915, 2013, 1838, 1924, 2014, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1920, 2005, 1831, 499, 1871, 1929, 2034,
	1763, 1916, 0, 1768, 1779, 2028, 1998, 1822, 1823, 263,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 468, 1935, 1945, 1964, 1848, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 340, 1780, 1966,
	1996, 1857, 301, 191, 2002, 1855, 1854, 1939, 1785, 1976,
	2026, 1841, 311, 1783, 195, 1778, 1786, 1839, 353, 1949,
	1957, 177, 198, 313, 1973, 1813, 1830, 245, 0, 392,
	1925, 467, 497, 278, 0, 1906, 391, 315, 460, 1940,
	2004, 466, 1842, 442, 477, 482, 271, 1882, 234, 420,
	261, 254, 1821, 1963, 1767, 284, 375, 249, 306, 1860,
	1931, 1814, 241, 1943, 1914, 1978, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1974, 1956, 1980,
	1807, 1787, 1798, 1788, 1829, 2006, 293, 285, 1981, 1979,
	1832, 361, 224, 1895, 1888, 1875, 1953, 471, 2030, 257,
	1958, 473, 180, 406, 405, 1845, 292, 1960, 181, 170,
	385, 182, 302, 204, 1985, 486, 220, 309, 450, 496,
	277, 352, 1927, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1955, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 2012, 322, 266, 270, 286,
	297, 1926, 389, 427, 474, 1917, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1951, 216, 237, 428, 210, 2000,
	1975, 1908, 1863, 1869, 1769, 0, 209, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 281, 1938,
	463, 464, 246, 1781, 2020, 211, 1782, 2019, 349, 356,
	348, 2023, 2021, 459, 2001, 1909, 1894, 1892, 1774, 1999,
	1907, 1893, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1896, 425, 320, 0, 206, 0, 424,
	2010, 2036, 439, 226, 1800, 1967, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1942,
	2033, 360, 393, 233, 469, 421, 262, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789,
	0, 0, 1993, 1994, 0, 1887, 2003, 1775, 0, 1971,
	188, 189, 174, 179, 1934, 2031, 1847, 242, 0, 1771,
	1772, 1773, 0, 1877, 1878, 0, 0, 1989, 1988, 1987,
	1990, 0, 2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1905,
	199, 212, 312, 2032, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1968, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2035, 346, 1995, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977,
	1982, 1984, 472, 252, 1885, 1910, 1948, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	1858, 196, 0, 0, 202, 0, 203, 205, 1843, 201,
	1991, 2027, 1922, 1936, 901, 1044, 0, 0, 448, 1111,
	1048, 888, 911, 1058, 917, 919, 984, 863, 959, 357,
	908, 864, 1009, 0, 0, 855, 1106, 856, 889, 259,
	1104, 1018, 962, 1046, 945, 977, 987, 258, 244, 952,
	951, 1035, 900, 899, 982, 1031, 1045, 0, 0, 172,
	478, 190, 1144, 314, 0, 0, 476, 423, 339, 0,
	0, 943, 0, 1118, 1131, 928, 986, 875, 973, 1050,
	909, 978, 1051, 0, 0, 0, 0, 0, 0, 558,
	0, 1452, 0, 0, 1453, 0, 0, 171, 0, 1126,
	1140, 1107, 0, 938, 983, 1063, 854, 1123, 0, 859,
	1095, 0, 1036, 896, 897, 263, 0, 0, 0, 0,
	0, 0, 0, 941, 958, 1002, 925, 0, 468, 989,
	998, 1013, 918, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 0, 0, 0, 869,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 874, 852, 894,
	1004, 853, 851, 340, 866, 1133, 1034, 926, 301, 191,
	1040, 924, 1110, 992, 870, 1022, 1056, 912, 311, 868,
	195, 865, 871, 910, 353, 1001, 1007, 177, 198, 313,
	1019, 890, 903, 245, 0, 392, 979, 467, 1090, 278,
	0, 965, 391, 315, 460, 993, 1042, 466, 913, 442,
	477, 482, 271, 946, 234, 420, 261, 254, 895, 1012,
	858, 284, 375, 249, 306, 929, 985, 891, 241, 996,
	972, 1024, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1020, 1006, 1026, 886, 872, 878, 873,
	902, 1043, 293, 285, 1027, 1025, 904, 361, 224, 956,
	949, 942, 1129, 471, 1059, 257, 1008, 473, 180, 406,
	405, 916, 292, 1010, 181, 170, 385, 182, 302, 204,
	1030, 486, 220, 309, 450, 1089, 277, 352, 981, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 1005,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 1049, 322, 266, 270, 286, 297, 980, 389, 427,
	474, 974, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1003, 216, 237, 428, 210, 1038, 1021, 967, 931, 937,
	860, 0, 209, 932, 933, 934, 935, 936, 999, 893,
	905, 885, 975, 884, 281, 991, 463, 464, 246, 1096,
	1053, 211, 867, 1052, 349, 356, 348, 1055, 1054, 459,
	1039, 968, 955, 953, 861, 1037, 966, 954, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 957,
	425, 320, 0, 206, 0, 424, 1047, 1065, 439, 226,
	879, 1014, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 995, 1062, 360, 393, 233,
	469, 421, 262, 1101, 0, 1103, 1099, 1102, 1100, 1119,
	1120, 1141, 1142, 1143, 1130, 1097, 192, 193, 1138, 1139,
	194, 948, 1041, 862, 0, 1017, 188, 189, 174, 179,
	988, 1060, 1109, 242, 164, 1092, 1093, 1094, 165, 1113,
	1114, 167, 168, 1136, 1135, 1134, 1137, 169, 1146, 1145,
	1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132,
	1127, 1128, 0, 944, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1121, 199, 212, 312, 1061,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1015, 971, 0, 921, 923, 922, 881, 883, 882,
	880, 1064, 346, 1033, 850, 857, 876, 887, 892, 898,
	906, 907, 915, 920, 930, 939, 940, 950, 963, 964,
	970, 994, 997, 1011, 1016, 1023, 1028, 1029, 472, 252,
	947, 969, 1000, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 927, 196, 0, 0,
	202, 0, 203, 205, 914, 201, 1032, 1057, 976, 990,
	901, 1044, 0, 0, 448, 1111, 1048, 888, 911, 1058,
	917, 919, 984, 863, 959, 357, 908, 864, 1009, 0,
	0, 855, 1106, 856, 889, 259, 1104, 1018, 962, 1046,
	945, 977, 987, 258, 244, 952, 951, 1035, 900, 899,
	982, 1031, 1045, 0, 0, 172, 478, 190, 1144, 314,
	0, 0, 476, 423, 339, 0, 0, 943, 0, 1118,
	1131, 928, 986, 875, 973, 1050, 909, 978, 1051, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1126, 1140, 1107, 0, 938,
	983, 1063, 854, 1123, 0, 859, 1095, 0, 1036, 896,
	897, 263, 0, 0, 0, 0, 0, 0, 0, 941,
	958, 1002, 925, 0, 468, 989, 998, 1013, 918, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1122, 0, 0, 0, 869, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 874, 852, 894, 1004, 853, 851, 340,
	866, 1133, 1034, 926, 301, 191, 1040, 924, 1110, 992,
	870, 1022, 1056, 912, 311, 868, 195, 865, 871, 910,
	353, 1001, 1007, 177, 198, 313, 1019, 890, 903, 245,
	0, 392, 979, 467, 1090, 278, 0, 965, 391, 315,
	460, 993, 1042, 466, 913, 442, 477, 482, 271, 946,
	234, 420, 261, 254, 895, 1012, 858, 284, 375, 249,
	306, 929, 985, 891, 241, 996, 972, 1024, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1020,
	1006, 1026, 886, 872, 878, 873, 902, 1043, 293, 285,
	1027, 1025, 904, 361, 224, 956, 949, 942, 1129, 471,
	1059, 257, 1008, 473, 180, 406, 405, 916, 292, 1010,
	181, 170, 385, 182, 302, 204, 1030, 486, 220, 309,
	450, 1089, 277, 352, 981, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 1005, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 1049, 322, 266,
	270, 286, 297, 980, 389, 427, 474, 974, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1003, 216, 237, 428,
	210, 1038, 1021, 967, 931, 937, 860, 0, 209, 932,
	933, 934, 935, 936, 999, 893, 905, 885, 975, 884,
	281, 991, 463, 464, 246, 1096, 1053, 211, 867, 1052,
	349, 356, 348, 1055, 1054, 459, 1039, 968, 955, 953,
	861, 1037, 966, 954, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 957, 425, 320, 0, 206,
	0, 424, 1047, 1065, 439, 226, 879, 1014, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 995, 1062, 360, 393, 233, 469, 421, 262, 1101,
	0, 1103, 1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143,
	1130, 1097, 192, 193, 1138, 1139, 194, 948, 1041, 862,
	0, 1017, 188, 189, 174, 179, 988, 1060, 1109, 242,
	164, 1092, 1093, 1094, 165, 1113, 1114, 167, 168, 1136,
	1135, 1134, 1137, 169, 1146, 1145, 1147, 1098, 1105, 1108,
	1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128, 0, 944,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1121, 199, 212, 312, 1061, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1015, 971, 0,
	921, 923, 922, 881, 883, 882, 880, 1064, 346, 1033,
	850, 857, 876, 887, 892, 898, 906, 907, 915, 920,
	930, 939, 940, 950, 963, 964, 970, 994, 997, 1011,
	1016, 1023, 1028, 1029, 472, 252, 947, 969, 1000, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 927, 196, 0, 0, 202, 0, 203, 205,
	914, 201, 1032, 1057, 976, 990, 901, 1044, 0, 0,
	448, 1111, 1048, 888, 911, 1058, 917, 919, 984, 863,
	959, 357, 908, 864, 1009, 0, 0, 855, 1106, 856,
	889, 259, 1104, 1018, 962, 1046, 945, 977, 987, 258,
	244, 952, 951, 1035, 900, 899, 982, 1031, 1045, 0,
	0, 172, 478, 190, 1144, 314, 0, 0, 476, 423,
	339, 0, 0, 943, 0, 1118, 1131, 928, 986, 875,
	973, 1050, 909, 978, 1051, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1126, 1140, 1107, 0, 938, 983, 1063, 854, 1123,
	0, 859, 1095, 0, 1036, 896, 897, 263, 0, 0,
	0, 0, 0, 0, 0, 941, 958, 1002, 925, 0,
	468, 989, 998, 1013, 918, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 869, 1091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 874,
	852, 894, 1004, 853, 851, 340, 866, 1133, 1034, 926,
	301, 191, 1040, 924, 1110, 992, 870, 1022, 1056, 912,
	311, 868, 195, 865, 871, 910, 353, 1001, 1007, 177,
	198, 313, 1019, 890, 903, 245, 0, 392, 979, 467,
	1090, 278, 0, 965, 391, 315, 460, 993, 1042, 466,
	913, 442, 477, 482, 271, 946, 234, 420, 261, 254,
	895, 1012, 858, 284, 375, 249, 306, 929, 985, 891,
	241, 996, 972, 1024, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1020, 1006, 1026, 886, 872,
	878, 873, 902, 1043, 293, 285, 1027, 1025, 904, 361,
	224, 956, 949, 942, 1129, 471, 1059, 257, 1008, 473,
	180, 406, 405, 916, 292, 1010, 181, 170, 385, 182,
	302, 204, 1030, 486, 220, 309, 450, 1089, 277, 352,
	981, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 1005, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 1049, 322, 266, 270, 286, 297, 980,
	389, 427, 474, 974, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1003, 216, 237, 428, 210, 1038, 1021, 967,
	931, 937, 860, 0, 209, 932, 933, 934, 935, 936,
	999, 893, 905, 885, 975, 884, 281, 991, 463, 464,
	246, 1096, 1053, 211, 1084, 1052, 349, 356, 348, 1055,
	1054, 459, 1039, 968, 955, 953, 861, 1037, 966, 954,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	1080, 957, 425, 320, 0, 206, 0, 424, 1047, 1065,
	439, 226, 879, 1014, 454, 178, 381, 227, 279, 267,
	372, 1085, 1083, 1074, 1075, 308, 316, 995, 1062, 360,
	393, 233, 469, 421, 262, 1101, 0, 1103, 1099, 1102,
	1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097, 192, 193,
	1138, 1139, 194, 948, 1041, 862, 0, 1017, 188, 189,
	174, 179, 988, 1060, 1109, 242, 164, 1092, 1093, 1094,
	165, 1113, 1114, 167, 168, 1136, 1135, 1134, 1137, 169,
	1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116, 1117, 1124,
	1125, 1132, 1127, 1128, 0, 944, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1121, 199, 212,
	312, 1061, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1015, 971, 0, 921, 923, 922, 881,
	883, 882, 880, 1064, 346, 1033, 850, 857, 876, 887,
	892, 898, 906, 907, 915, 920, 930, 939, 940, 950,
	963, 964, 970, 994, 997, 1011, 1016, 1023, 1028, 1029,
	472, 252, 947, 969, 1000, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 1081, 1082, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 927, 196,
	0, 0, 202, 0, 203, 205, 914, 201, 1032, 1057,
	976, 990, 901, 1044, 0, 0, 448, 1111, 1048, 888,
	911, 1058, 917, 919, 984, 863, 959, 357, 908, 864,
	1009, 0, 0, 855, 1106, 856, 889, 259, 1104, 1018,
	962, 1046, 945, 977, 987, 258, 244, 952, 951, 1035,
	900, 899, 982, 1031, 1045, 0, 0, 172, 478, 190,
	1144, 314, 0, 0, 476, 423, 339, 0, 0, 943,
	0, 1118, 1131, 928, 986, 875, 973, 1050, 909, 978,
	1051, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1126, 1140, 1107,
	0, 938, 983, 1063, 854, 1123, 0, 859, 1095, 0,
	1036, 896, 897, 263, 0, 0, 0, 0, 0, 0,
	0, 941, 958, 1002, 925, 0, 468, 989, 998, 1013,
	918, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 869, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 874, 852, 894, 1004, 853,
	851, 340, 866, 1133, 1034, 926, 301, 191, 1040, 924,
	1110, 992, 870, 1022, 1056, 912, 311, 868, 195, 865,
	871, 910, 353, 1001, 1007, 177, 198, 313, 1019, 890,
	903, 245, 0, 392, 979, 467, 1090, 278, 0, 965,
	391, 315, 460, 993, 1042, 466, 913, 442, 477, 482,
	271, 946, 234, 420, 261, 254, 895, 1012, 858, 284,
	375, 249, 306, 929, 985, 891, 241, 996, 972, 1024,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1020, 1006, 1026, 886, 872, 878, 873, 902, 1043,
	293, 285, 1027, 1025, 904, 361, 224, 956, 949, 942,
	1129, 471, 1059, 257, 1008, 473, 180, 406, 405, 916,
	292, 1010, 181, 170, 385, 182, 302, 204, 1030, 486,
	220, 309, 450, 1089, 277, 352, 981, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 1005, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 1049,
	322, 266, 270, 286, 297, 980, 389, 427, 474, 974,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 1618, 229, 407, 410, 485, 1003, 216,
	237, 428, 210, 1038, 1021, 967, 931, 937, 860, 0,
	209, 932, 933, 934, 935, 936, 999, 893, 905, 885,
	975, 884, 281, 991, 463, 464, 246, 1096, 1053, 211,
	867, 1052, 349, 356, 348, 1055, 1054, 459, 1039, 968,
	955, 953, 861, 1037, 966, 954, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 957, 425, 320,
	0, 206, 0, 424, 1047, 1065, 439, 226, 879, 1014,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 995, 1062, 360, 393, 233, 469, 421,
	262, 1101, 0, 1103, 1099, 1102, 1100, 1119, 1120, 1141,
	1142, 1143, 1130, 1097, 192, 193, 1138, 1139, 194, 948,
	1041, 862, 0, 1017, 188, 189, 174, 179, 988, 1060,
	1109, 242, 164, 1092, 1093, 1094, 165, 1113, 1114, 167,
	168, 1136, 1135, 1134, 1137, 169, 1146, 1145, 1147, 1098,
	1105, 1108, 1115, 1116, 1117, 1124, 1125, 1132, 1127, 1128,
	0, 944, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1121, 199, 212, 312, 1061, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1015,
	971, 0, 921, 923, 922, 881, 883, 882, 880, 1064,
	346, 1033, 850, 857, 876, 887, 892, 898, 906, 907,
	915, 920, 930, 939, 940, 950, 963, 964, 970, 994,
	997, 1011, 1016, 1023, 1028, 1029, 472, 252, 947, 969,
	1000, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 927, 196, 0, 0, 202, 0,
	203, 205, 914, 201, 1032, 1057, 976, 990, 901, 1044,
	0, 0, 448, 1111, 1048, 888, 911, 1058, 917, 919,
	984, 863, 959, 357, 908, 864, 1009, 0, 0, 855,
	1106, 856, 889, 259, 1104, 1018, 962, 1046, 945, 977,
	987, 258, 244, 952, 951, 1035, 900, 899, 982, 1031,
	1045, 0, 0, 172, 478, 190, 1144, 314, 0, 0,
	476, 423, 339, 0, 0, 943, 0, 1118, 1131, 928,
	986, 875, 973, 1050, 909, 978, 1051, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1126, 1140, 1107, 0, 938, 983, 1063,
	854, 1123, 0, 859, 1095, 0, 1036, 896, 897, 263,
	0, 0, 0, 0, 0, 0, 0, 941, 958, 1002,
	925, 0, 468, 989, 998, 1013, 918, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 869, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1112, 0, 0,
	0, 874, 852, 894, 1004, 853, 851, 340, 866, 1133,
	1034, 926, 301, 191, 1040, 924, 1110, 992, 870, 1022,
	1056, 912, 311, 868, 195, 865, 871, 910, 353, 1001,
	1007, 177, 198, 313, 1019, 890, 903, 245, 0, 392,
	979, 467, 1090, 278, 0, 965, 391, 315, 460, 993,
	1042, 466, 913, 442, 477, 482, 271, 946, 234, 420,
	261, 254, 895, 1012, 858, 284, 375, 249, 306, 929,
	985, 891, 241, 996, 972, 1024, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1020, 1006, 1026,
	886, 872, 878, 873, 902, 1043, 293, 285, 1027, 1025,
	904, 361, 224, 956, 949, 942, 1129, 471, 1059, 257,
	1008, 473, 180, 406, 405, 916, 292, 1010, 181, 170,
	385, 182, 302, 204, 1030, 486, 220, 309, 450, 1089,
	277, 352, 981, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 1005, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 1049, 322, 266, 270, 286,
	297, 980, 389, 427, 474, 974, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 1071,
	229, 407, 410, 485, 1003, 216, 237, 428, 210, 1038,
	1021, 967, 931, 937, 860, 0, 209, 932, 933, 934,
	935, 936, 999, 893, 905, 885, 975, 884, 281, 991,
	463, 464, 246, 1096, 1053, 211, 1084, 1052, 349, 356,
	348, 1055, 1054, 459, 1039, 968, 955, 953, 861, 1037,
	966, 954, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 1080, 957, 425, 320, 0, 206, 0, 424,
	1047, 1065, 439, 226, 879, 1014, 454, 178, 381, 227,
	279, 267, 372, 1085, 1083, 1074, 1075, 308, 316, 995,
	1062, 360, 393, 233, 469, 421, 262, 1101, 0, 1103,
	1099, 1102, 1100, 1119, 1120, 1141, 1142, 1143, 1130, 1097,
	192, 193, 1138, 1139, 194, 948, 1041, 862, 0, 1017,
	188, 189, 174, 179, 988, 1060, 1109, 242, 164, 1092,
	1093, 1094, 165, 1113, 1114, 167, 168, 1136, 1135, 1134,
	1137, 169, 1146, 1145, 1147, 1098, 1105, 1108, 1115, 1116,
	1117, 1124, 1125, 1132, 1127, 1128, 0, 944, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1121,
	199, 212, 312, 1061, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1015, 971, 0, 921, 923,
	922, 881, 883, 882, 880, 1064, 346, 1033, 850, 857,
	876, 887, 892, 898, 906, 907, 915, 920, 930, 939,
	940, 950, 963, 964, 970, 994, 997, 1011, 1016, 1023,
	1028, 1029, 472, 252, 947, 969, 1000, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 1081, 1082, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	927, 196, 0, 0, 202, 0, 203, 205, 914, 201,
	1032, 1057, 976, 990, 1827, 2007, 0, 1969, 448, 1861,
	2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776, 1899, 357,
	1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765, 1812, 259,
	1808, 1972, 1902, 2009, 1881, 1923, 1933, 258, 244, 1891,
	1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880, 0, 0,
	478, 0, 2018, 314, 1983, 0, 476, 423, 339, 0,
	0, 1876, 1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013,
	1838, 1924, 2014, 0, 0, 0, 0, 0, 3166, 3171,
	0, 3174, 3176, 3175, 0, 0, 0, 3168, 0, 1920,
	2005, 1831, 0, 1871, 1929, 2034, 1763, 1916, 0, 1768,
	1779, 2028, 1998, 1822, 1823, 263, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 468, 1935,
	1945, 1964, 1848, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 340, 1780, 1966, 1996, 1857, 301, 0,
	2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841, 311, 1783,
	195, 1778, 1786, 1839, 353, 1949, 1957, 0, 198, 313,
	1973, 1813, 1830, 245, 0, 392, 1925, 467, 0, 278,
	0, 1906, 391, 315, 460, 1940, 2004, 466, 1842, 442,
	477, 482, 271, 1882, 234, 420, 261, 254, 1821, 1963,
	1767, 284, 375, 249, 306, 1860, 1931, 1814, 241, 1943,
	1914, 1978, 419, 457, 200, 334, 458, 481, 3169, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1974, 1956, 1980, 1807, 1787, 1798, 1788,
	1829, 2006, 293, 285, 1981, 1979, 1832, 361, 224, 1895,
	1888, 1875, 1953, 471, 2030, 257, 1958, 473, 0, 406,
	405, 1845, 292, 1960, 0, 0, 385, 3170, 302, 204,
	1985, 486, 220, 309, 450, 0, 277, 352, 1927, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1955,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2012, 322, 266, 270, 286, 297, 1926, 389, 427,
	474, 1917, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1951, 216, 237, 428, 210, 2000, 1975, 1908, 1863, 1869,
	1769, 0, 209, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 281, 1938, 463, 464, 246, 1781,
	2020, 211, 1782, 2019, 349, 356, 348, 2023, 2021, 459,
	2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1896,
	425, 320, 0, 206, 0, 424, 2010, 2036, 439, 226,
	1800, 1967, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1942, 2033, 360, 393, 233,
	469, 421, 262, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2015, 2016, 2017, 1954, 1789, 0, 0, 1993, 1994,
	0, 1887, 2003, 1775, 0, 1971, 0, 0, 0, 0,
	1934, 2031, 1847, 242, 0, 1771, 1772, 1773, 0, 1877,
	1878, 0, 0, 1989, 1988, 1987, 1990, 0, 2024, 2022,
	2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965,
	1937, 1946, 1820, 1879, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1905, 199, 212, 312, 2032,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1968, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2035, 346, 1995, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984, 472, 252,
	1885, 1910, 1948, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1858, 196, 0, 0,
	202, 0, 203, 205, 1843, 201, 1991, 2027, 1922, 1936,
	1827, 2007, 0, 1969, 448, 1861, 2011, 1810, 1840, 2029,
	1846, 1849, 1930, 1776, 1899, 357, 1837, 1777, 1959, 1760,
	1815, 1764, 1828, 1765, 1812, 259, 1808, 1972, 1902, 2009,
	1881, 1923, 1933, 258, 244, 1891, 1890, 1997, 1826, 1825,
	1928, 1986, 2008, 1880, 0, 0, 478, 0, 2018, 314,
	1983, 0, 476, 423, 339, 0, 0, 1876, 1992, 1897,
	1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924, 2014, 0,
	0, 0, 0, 0, 3977, 3171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 2005, 1831, 0, 1871,
	1929, 2034, 1763, 1916, 0, 1768, 1779, 2028, 1998, 1822,
	1823, 263, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 468, 1935, 1945, 1964, 1848, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 340,
	1780, 1966, 1996, 1857, 301, 0, 2002, 1855, 1854, 1939,
	1785, 1976, 2026, 1841, 311, 1783, 195, 1778, 1786, 1839,
	353, 1949, 1957, 0, 198, 313, 1973, 1813, 1830, 245,
	0, 392, 1925, 467, 0, 278, 0, 1906, 391, 315,
	460, 1940, 2004, 466, 1842, 442, 477, 482, 271, 1882,
	234, 420, 261, 254, 1821, 1963, 1767, 284, 375, 249,
	306, 1860, 1931, 1814, 241, 1943, 1914, 1978, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1974,
	1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006, 293, 285,
	1981, 1979, 1832, 361, 224, 1895, 1888, 1875, 1953, 471,
	2030, 257, 1958, 473, 0, 406, 405, 1845, 292, 1960,
	0, 0, 385, 0, 302, 204, 1985, 486, 220, 309,
	450, 0, 277, 352, 1927, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1955, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 2012, 322, 266,
	270, 286, 297, 1926, 389, 427, 474, 1917, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1951, 216, 237, 428,
	210, 2000, 1975, 1908, 1863, 1869, 1769, 0, 209, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	281, 1938, 463, 464, 246, 1781, 2020, 211, 1782, 2019,
	349, 356, 348, 2023, 2021, 459, 2001, 1909, 1894, 1892,
	1774, 1999, 1907, 1893, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1896, 425, 320, 0, 206,
	0, 424, 2010, 2036, 439, 226, 1800, 1967, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1942, 2033, 360, 393, 233, 469, 421, 262, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017,
	1954, 1789, 0, 0, 1993, 1994, 0, 1887, 2003, 1775,
	0, 1971, 0, 0, 0, 0, 1934, 2031, 1847, 242,
	0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1989,
	1988, 1987, 1990, 0, 2024, 2022, 2025, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1905, 199, 212, 312, 2032, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1968, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035, 346, 1995,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962,
	1970, 1977, 1982, 1984, 472, 252, 1885, 1910, 1948, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 1858, 196, 0, 0, 202, 0, 203, 205,
	1843, 201, 1991, 2027, 1922, 1936, 1827, 2007, 0, 1969,
	448, 1861, 2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776,
	1899, 357, 1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765,
	1812, 259, 1808, 1972, 1902, 2009, 1881, 1923, 1933, 258,
	244, 1891, 1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880,
	0, 0, 478, 0, 2018, 314, 1983, 0, 476, 423,
	339, 0, 0, 1876, 1992, 1897, 1961, 1859, 1932, 1792,
	1915, 2013, 1838, 1924, 2014, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 2005, 1831, 0, 1871, 1929, 2034, 1763, 1916,
	0, 1768, 1779, 2028, 1998, 1822, 1823, 263, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	468, 1935, 1945, 1964, 1848, 376, 283, 0, 0, 0,
	0, 0, 0, 3926, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 340, 1780, 1966, 1996, 1857,
	301, 0, 2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841,
	311, 1783, 195, 1778, 1786, 1839, 353, 1949, 1957, 0,
	198, 313, 1973, 1813, 1830, 245, 0, 392, 1925, 467,
	0, 278, 0, 1906, 391, 315, 460, 1940, 2004, 466,
	1842, 442, 477, 482, 271, 1882, 234, 420, 261, 254,
	1821, 1963, 1767, 284, 375, 249, 306, 1860, 1931, 1814,
	241, 1943, 1914, 1978, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1974, 1956, 1980, 1807, 1787,
	1798, 1788, 1829, 2006, 293, 285, 1981, 1979, 1832, 361,
	224, 1895, 1888, 1875, 1953, 471, 2030, 257, 1958, 473,
	0, 406, 405, 1845, 292, 1960, 0, 0, 385, 0,
	302, 204, 1985, 486, 220, 309, 450, 0, 277, 352,
	1927, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1955, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2012, 322, 266, 270, 286, 297, 1926,
	389, 427, 474, 1917, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1951, 216, 237, 428, 210, 2000, 1975, 1908,
	1863, 1869, 1769, 0, 209, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 281, 1938, 463, 464,
	246, 1781, 2020, 211, 1782, 2019, 349, 356, 348, 2023,
	2021, 459, 2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1896, 425, 320, 0, 206, 0, 424, 2010, 2036,
	439, 226, 1800, 1967, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1942, 2033, 360,
	393, 233, 469, 421, 262, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789, 0, 0,
	1993, 1994, 0, 1887, 2003, 1775, 0, 1971, 0, 0,
	0, 0, 1934, 2031, 1847, 242, 0, 1771, 1772, 1773,
	0, 1877, 1878, 0, 0, 1989, 1988, 1987, 1990, 0,
	2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1965, 1937, 1946, 1820, 1879, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1905, 199, 212,
	312, 2032, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1968, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2035, 346, 1995, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984,
	472, 252, 1885, 1910, 1948, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1858, 196,
	0, 0, 202, 0, 203, 205, 1843, 201, 1991, 2027,
	1922, 1936, 1827, 2007, 0, 1969, 448, 1861, 2011, 1810,
	1840, 2029, 1846, 1849, 1930, 1776, 1899, 357, 1837, 1777,
	1959, 1760, 1815, 1764, 1828, 1765, 1812, 259, 1808, 1972,
	1902, 2009, 1881, 1923, 1933, 258, 244, 1891, 1890, 1997,
	1826, 1825, 1928, 1986, 2008, 1880, 0, 0, 478, 0,
	2018, 314, 1983, 0, 476, 423, 339, 0, 0, 1876,
	1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924,
	2014, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 2005, 1831,
	0, 1871, 1929, 2034, 1763, 1916, 0, 1768, 1779, 2028,
	1998, 1822, 1823, 263, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 468, 1935, 1945, 1964,
	1848, 376, 283, 0, 0, 0, 0, 0, 0, 3221,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 340, 1780, 1966, 1996, 1857, 301, 0, 2002, 1855,
	1854, 1939, 1785, 1976, 2026, 1841, 311, 1783, 195, 1778,
	1786, 1839, 353, 1949, 1957, 0, 198, 313, 1973, 1813,
	1830, 245, 0, 392, 1925, 467, 0, 278, 0, 1906,
	391, 315, 460, 1940, 2004, 466, 1842, 442, 477, 482,
	271, 1882, 234, 420, 261, 254, 1821, 1963, 1767, 284,
	375, 249, 306, 1860, 1931, 1814, 241, 1943, 1914, 1978,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1974, 1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006,
	293, 285, 1981, 1979, 1832, 361, 224, 1895, 1888, 1875,
	1953, 471, 2030, 257, 1958, 473, 0, 406, 405, 1845,
	292, 1960, 0, 0, 385, 0, 302, 204, 1985, 486,
	220, 309, 450, 0, 277, 352, 1927, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1955, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2012,
	322, 266, 270, 286, 297, 1926, 389, 427, 474, 1917,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1951, 216,
	237, 428, 210, 2000, 1975, 1908, 1863, 1869, 1769, 0,
	209, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 281, 1938, 463, 464, 246, 1781, 2020, 211,
	1782, 2019, 349, 356, 348, 2023, 2021, 459, 2001, 1909,
	1894, 1892, 1774, 1999, 1907, 1893, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1896, 425, 320,
	0, 206, 0, 424, 2010, 2036, 439, 226, 1800, 1967,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1942, 2033, 360, 393, 233, 469, 421,
	262, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2015,
	2016, 2017, 1954, 1789, 0, 0, 1993, 1994, 0, 1887,
	2003, 1775, 0, 1971, 0, 0, 0, 0, 1934, 2031,
	1847, 242, 0, 1771, 1772, 1773, 0, 1877, 1878, 0,
	0, 1989, 1988, 1987, 1990, 0, 2024, 2022, 2025, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946,
	1820, 1879, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1905, 199, 212, 312, 2032, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1968,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035,
	346, 1995, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1962, 1970, 1977, 1982, 1984, 472, 252, 1885, 1910,
	1948, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 1858, 196, 0, 0, 202, 0,
	203, 205, 1843, 201, 1991, 2027, 1922, 1936, 1827, 2007,
	0, 1969, 448, 1861, 2011, 1810, 1840, 2029, 1846, 1849,
	1930, 1776, 1899, 357, 1837, 1777, 1959, 1760, 1815, 1764,
	1828, 1765, 1812, 259, 1808, 1972, 1902, 2009, 1881, 1923,
	1933, 258, 244, 1891, 1890, 1997, 1826, 1825, 1928, 1986,
	2008, 1880, 0, 0, 478, 0, 2018, 314, 1983, 0,
	476, 423, 339, 0, 0, 1876, 1992, 1897, 1961, 1859,
	1932, 1792, 1915, 2013, 1838, 1924, 2014, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1920, 2005, 1831, 0, 1871, 1929, 2034,
	1763, 1916, 0, 1768, 1779, 2028, 1998, 1822, 1823, 263,
	0, 0, 0, 0, 0, 0, 0, 1874, 1898, 1950,
	1856, 0, 468, 1935, 1945, 1964, 1848, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 1913,
	0, 0, 0, 1784, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1791, 1761, 1819, 1952, 1762, 1759, 340, 1780, 1966,
	1996, 1857, 301, 0, 2002, 1855, 1854, 1939, 1785, 1976,
	2026, 1841, 311, 1783, 195, 1778, 1786, 1839, 353, 1949,
	1957, 0, 198, 313, 1973, 1813, 1830, 245, 0, 392,
	1925, 467, 0, 278, 0, 1906, 391, 315, 460, 1940,
	2004, 466, 1842, 442, 477, 482, 271, 1882, 234, 420,
	261, 254, 1821, 1963, 1767, 284, 375, 249, 306, 1860,
	1931, 1814, 241, 1943, 1914, 1978, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 1974, 1956, 1980,
	1807, 1787, 1798, 1788, 1829, 2006, 293, 285, 1981, 1979,
	1832, 361, 224, 1895, 1888, 1875, 1953, 471, 2030, 257,
	1958, 473, 0, 406, 405, 1845, 292, 1960, 0, 0,
	385, 0, 302, 204, 1985, 486, 220, 309, 450, 0,
	277, 352, 1927, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 1955, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 2012, 322, 266, 270, 286,
	297, 1926, 389, 427, 474, 1917, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 1951, 216, 237, 428, 210, 2000,
	1975, 1908, 1863, 1869, 1769, 0, 209, 1864, 1865, 1866,
	1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805, 281, 1938,
	463, 464, 246, 1781, 2020, 211, 1782, 2019, 349, 356,
	348, 2023, 2021, 459, 2001, 1909, 1894, 1892, 1774, 1999,
	1907, 1893, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1896, 425, 320, 0, 206, 0, 424,
	2010, 2036, 439, 226, 1800, 1967, 454, 2325, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1942,
	2033, 360, 393, 233, 469, 421, 262, 1796, 0, 1799,
	1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789,
	0, 0, 1993, 1994, 0, 1887, 2003, 1775, 0, 1971,
	0, 0, 0, 0, 1934, 2031, 1847, 242, 0, 1771,
	1772, 1773, 0, 1877, 1878, 0, 0, 1989, 1988, 1987,
	1990, 0, 2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884,
	1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1905,
	199, 212, 312, 2032, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 1968, 1912, 0, 1851, 1853,
	1852, 1802, 1804, 1803, 1801, 2035, 346, 1995, 1758, 1766,
	1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872,
	1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977,
	1982, 1984, 472, 252, 1885, 1910, 1948, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	1858, 196, 0, 0, 202, 0, 203, 205, 1843, 201,
	1991, 2027, 1922, 1936, 1827, 2007, 0, 1969, 448, 1861,
	2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776, 1899, 357,
	1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765, 1812, 259,
	1808, 1972, 1902, 2009, 1881, 1923, 1933, 258, 244, 1891,
	1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880, 0, 0,
	478, 0, 2018, 314, 1983, 0, 476, 423, 339, 0,
	0, 1876, 1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013,
	1838, 1924, 2014, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	2005, 1831, 0, 1871, 1929, 2034, 1763, 1916, 0, 1768,
	1779, 2028, 1998, 1822, 1823, 263, 0, 0, 0, 0,
	0, 0, 0, 1874, 1898, 1950, 1856, 0, 468, 1935,
	1945, 1964, 1848, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 1913, 0, 0, 0, 1784,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1791, 1761, 1819,
	1952, 1762, 1759, 340, 1780, 1966, 1996, 1857, 301, 0,
	2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841, 311, 1783,
	195, 1778, 1786, 1839, 353, 1949, 1957, 0, 198, 313,
	1973, 1813, 1830, 245, 0, 392, 1925, 467, 0, 278,
	0, 1906, 391, 315, 460, 1940, 2004, 466, 1842, 442,
	477, 482, 271, 1882, 234, 420, 261, 254, 1821, 1963,
	1767, 284, 375, 249, 306, 1860, 1931, 1814, 241, 1943,
	1914, 1978, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 1974, 1956, 1980, 1807, 1787, 1798, 1788,
	1829, 2006, 293, 285, 1981, 1979, 1832, 361, 224, 1895,
	1888, 1875, 1953, 471, 2030, 257, 1958, 473, 0, 406,
	405, 1845, 292, 1960, 0, 0, 385, 0, 302, 204,
	1985, 486, 220, 309, 450, 0, 277, 352, 1927, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 1955,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 2012, 322, 266, 270, 286, 297, 1926, 389, 427,
	474, 1917, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	1951, 216, 237, 428, 210, 2000, 1975, 1908, 1863, 1869,
	1769, 0, 209, 1864, 1865, 1866, 1867, 1868, 1947, 1818,
	1834, 1806, 1921, 1805, 281, 1938, 463, 464, 246, 1781,
	2020, 211, 1782, 2019, 349, 356, 348, 2023, 2021, 459,
	2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1896,
	425, 320, 0, 206, 0, 424, 2010, 2036, 439, 226,
	1800, 1967, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1942, 2033, 360, 393, 233,
	469, 421, 262, 1796, 0, 1799, 1794, 1797, 1795, 1900,
	1901, 2015, 2016, 2017, 1954, 1789, 0, 0, 1993, 1994,
	0, 1887, 2003, 1775, 0, 1971, 0, 0, 0, 0,
	1934, 2031, 1847, 242, 0, 1771, 1772, 1773, 0, 1877,
	1878, 0, 0, 1989, 1988, 1987, 1990, 0, 2024, 2022,
	2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965,
	1937, 1946, 1820, 1879, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1905, 199, 212, 312, 2032,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 1968, 1912, 0, 1851, 1853, 1852, 1802, 1804, 1803,
	1801, 2035, 346, 1995, 1758, 1766, 1793, 1809, 1816, 1824,
	1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904,
	1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984, 472, 252,
	1885, 1910, 1948, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	4100, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 1858, 196, 0, 0,
	202, 0, 203, 205, 1843, 201, 1991, 2027, 1922, 1936,
	1827, 2007, 0, 1969, 448, 1861, 2011, 1810, 1840, 2029,
	1846, 1849, 1930, 1776, 1899, 357, 1837, 1777, 1959, 1760,
	1815, 1764, 1828, 1765, 1812, 259, 1808, 1972, 1902, 2009,
	1881, 1923, 1933, 258, 244, 1891, 1890, 1997, 1826, 1825,
	1928, 1986, 2008, 1880, 0, 0, 478, 0, 2018, 314,
	1983, 0, 476, 423, 339, 0, 0, 1876, 1992, 1897,
	1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924, 2014, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 2005, 1831, 0, 1871,
	1929, 2034, 1763, 1916, 0, 1768, 1779, 2028, 1998, 1822,
	1823, 263, 0, 0, 0, 0, 0, 0, 0, 1874,
	1898, 1950, 1856, 0, 468, 1935, 1945, 1964, 1848, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 1913, 0, 0, 0, 1784, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 0, 1791, 1761, 1819, 1952, 1762, 1759, 340,
	1780, 1966, 1996, 1857, 301, 0, 2002, 1855, 1854, 1939,
	1785, 1976, 2026, 1841, 311, 1783, 195, 1778, 1786, 1839,
	353, 1949, 1957, 0, 198, 313, 1973, 1813, 1830, 245,
	0, 392, 1925, 467, 0, 278, 0, 1906, 391, 315,
	460, 1940, 2004, 466, 1842, 442, 477, 482, 271, 1882,
	234, 420, 261, 254, 1821, 1963, 1767, 284, 375, 249,
	306, 1860, 1931, 1814, 241, 1943, 1914, 1978, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 1974,
	1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006, 293, 285,
	1981, 1979, 1832, 361, 224, 1895, 1888, 1875, 1953, 471,
	2030, 257, 1958, 473, 0, 406, 405, 1845, 292, 1960,
	0, 0, 385, 0, 302, 204, 1985, 486, 220, 309,
	450, 0, 277, 352, 1927, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 1955, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 2012, 322, 266,
	270, 286, 297, 1926, 389, 427, 474, 1917, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 1951, 216, 237, 428,
	210, 2000, 1975, 1908, 1863, 1869, 1769, 0, 209, 1864,
	1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806, 1921, 1805,
	281, 1938, 463, 464, 246, 1781, 2020, 211, 1782, 2019,
	349, 356, 348, 2023, 2021, 459, 2001, 1909, 1894, 1892,
	1774, 1999, 1907, 1893, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1896, 425, 320, 0, 206,
	0, 424, 2010, 2036, 439, 226, 1800, 1967, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1942, 2033, 360, 393, 233, 469, 421, 262, 1796,
	0, 1799, 1794, 1797, 1795, 1900, 1901, 2015, 2016, 2017,
	1954, 1789, 0, 0, 1993, 1994, 0, 1887, 2003, 1775,
	0, 1971, 0, 0, 0, 0, 1934, 2031, 1847, 242,
	0, 1771, 1772, 1773, 0, 1877, 1878, 0, 0, 1989,
	1988, 1987, 1990, 0, 2024, 2022, 2025, 1790, 1811, 1833,
	1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946, 1820, 1879,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1905, 199, 212, 312, 2032, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 1968, 1912, 0,
	1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035, 346, 1995,
	1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836, 1844, 1850,
	1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941, 1944, 1962,
	1970, 1977, 1982, 1984, 472, 252, 1885, 1910, 1948, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 1858, 196, 0, 0, 202, 0, 203, 205,
	1843, 201, 1991, 2027, 1922, 1936, 1827, 2007, 0, 1969,
	448, 1861, 2011, 1810, 1840, 2029, 1846, 1849, 1930, 1776,
	1899, 357, 1837, 1777, 1959, 1760, 1815, 1764, 1828, 1765,
	1812, 259, 1808, 1972, 1902, 2009, 1881, 1923, 1933, 258,
	244, 1891, 1890, 1997, 1826, 1825, 1928, 1986, 2008, 1880,
	0, 0, 478, 0, 2018, 314, 1983, 0, 476, 423,
	339, 0, 0, 1876, 1992, 1897, 1961, 1859, 1932, 1792,
	1915, 2013, 1838, 1924, 2014, 0, 0, 0, 0, 0,
	0, 4381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 2005, 1831, 0, 1871, 1929, 2034, 1763, 1916,
	0, 1768, 1779, 2028, 1998, 1822, 1823, 263, 0, 0,
	0, 0, 0, 0, 0, 1874, 1898, 1950, 1856, 0,
	468, 1935, 1945, 1964, 1848, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 1913, 0, 0,
	0, 1784, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 1791,
	1761, 1819, 1952, 1762, 1759, 340, 1780, 1966, 1996, 1857,
	301, 0, 2002, 1855, 1854, 1939, 1785, 1976, 2026, 1841,
	311, 1783, 195, 1778, 1786, 1839, 353, 1949, 1957, 0,
	198, 313, 1973, 1813, 1830, 245, 0, 392, 1925, 467,
	0, 278, 0, 1906, 391, 315, 460, 1940, 2004, 466,
	1842, 442, 477, 482, 271, 1882, 234, 420, 261, 254,
	1821, 1963, 1767, 284, 375, 249, 306, 1860, 1931, 1814,
	241, 1943, 1914, 1978, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 1974, 1956, 1980, 1807, 1787,
	1798, 4384, 4385, 4386, 293, 285, 1981, 1979, 1832, 361,
	224, 1895, 1888, 1875, 1953, 471, 2030, 257, 1958, 473,
	0, 406, 405, 1845, 292, 1960, 0, 0, 385, 0,
	302, 204, 1985, 486, 220, 309, 450, 0, 277, 352,
	1927, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 1955, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 2012, 322, 266, 270, 286, 297, 1926,
	389, 427, 474, 1917, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 1951, 216, 237, 428, 210, 2000, 1975, 1908,
	1863, 1869, 1769, 0, 209, 1864, 1865, 1866, 1867, 1868,
	1947, 1818, 1834, 1806, 1921, 1805, 281, 1938, 463, 464,
	246, 1781, 2020, 211, 1782, 2019, 349, 356, 348, 2023,
	2021, 459, 2001, 1909, 1894, 1892, 1774, 1999, 1907, 1893,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1896, 425, 320, 0, 206, 0, 424, 2010, 2036,
	439, 226, 1800, 1967, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1942, 2033, 360,
	393, 233, 469, 421, 262, 1796, 0, 1799, 1794, 1797,
	1795, 1900, 1901, 2015, 2016, 2017, 1954, 1789, 0, 0,
	1993, 1994, 0, 1887, 2003, 1775, 0, 1971, 0, 0,
	0, 0, 1934, 2031, 1847, 242, 0, 1771, 1772, 1773,
	0, 1877, 1878, 0, 0, 1989, 1988, 1987, 1990, 0,
	2024, 2022, 2025, 1790, 1811, 1833, 1883, 1884, 1886, 1918,
	1919, 1965, 1937, 1946, 1820, 1879, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1905, 199, 212,
	312, 2032, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 1968, 1912, 0, 1851, 1853, 1852, 1802,
	1804, 1803, 1801, 2035, 346, 1995, 1758, 1766, 1793, 1809,
	1816, 1824, 1835, 1836, 1844, 1850, 1862, 1872, 1873, 1889,
	1903, 1904, 1911, 1941, 1944, 1962, 1970, 1977, 1982, 1984,
	472, 252, 1885, 1910, 1948, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 1858, 196,
	0, 0, 202, 0, 203, 205, 1843, 201, 1991, 2027,
	1922, 1936, 1827, 2007, 0, 1969, 448, 1861, 2011, 1810,
	1840, 2029, 1846, 1849, 1930, 1776, 1899, 357, 1837, 1777,
	1959, 1760, 1815, 1764, 1828, 1765, 1812, 259, 1808, 1972,
	1902, 2009, 1881, 1923, 1933, 258, 244, 1891, 1890, 1997,
	1826, 1825, 1928, 1986, 2008, 1880, 0, 0, 478, 0,
	2018, 314, 1983, 0, 476, 423, 339, 0, 0, 1876,
	1992, 1897, 1961, 1859, 1932, 1792, 1915, 2013, 1838, 1924,
	2014, 0, 0, 0, 0, 0, 0, 3171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 2005, 1831,
	0, 1871, 1929, 2034, 1763, 1916, 0, 1768, 1779, 2028,
	1998, 1822, 1823, 263, 0, 0, 0, 0, 0, 0,
	0, 1874, 1898, 1950, 1856, 0, 468, 1935, 1945, 1964,
	1848, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 1913, 0, 0, 0, 1784, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1791, 1761, 1819, 1952, 1762,
	1759, 340, 1780, 1966, 1996, 1857, 301, 0, 2002, 1855,
	1854, 1939, 1785, 1976, 2026, 1841, 311, 1783, 195, 1778,
	1786, 1839, 353, 1949, 1957, 0, 198, 313, 1973, 1813,
	1830, 245, 0, 392, 1925, 467, 0, 278, 0, 1906,
	391, 315, 460, 1940, 2004, 466, 1842, 442, 477, 482,
	271, 1882, 234, 420, 261, 254, 1821, 1963, 1767, 284,
	375, 249, 306, 1860, 1931, 1814, 241, 1943, 1914, 1978,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 1974, 1956, 1980, 1807, 1787, 1798, 1788, 1829, 2006,
	293, 285, 1981, 1979, 1832, 361, 224, 1895, 1888, 1875,
	1953, 471, 2030, 257, 1958, 473, 0, 406, 405, 1845,
	292, 1960, 0, 0, 385, 0, 302, 204, 1985, 486,
	220, 309, 450, 0, 277, 352, 1927, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 1955, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 2012,
	322, 266, 270, 286, 297, 1926, 389, 427, 474, 1917,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 1951, 216,
	237, 428, 210, 2000, 1975, 1908, 1863, 1869, 1769, 0,
	209, 1864, 1865, 1866, 1867, 1868, 1947, 1818, 1834, 1806,
	1921, 1805, 281, 1938, 463, 464, 246, 1781, 2020, 211,
	1782, 2019, 349, 356, 348, 2023, 2021, 459, 2001, 1909,
	1894, 1892, 1774, 1999, 1907, 1893, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1896, 425, 320,
	0, 206, 0, 424, 2010, 2036, 439, 226, 1800, 1967,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1942, 2033, 360, 393, 233, 469, 421,
	262, 1796, 0, 1799, 1794, 1797, 1795, 1900, 1901, 2015,
	2016, 2017, 1954, 1789, 0, 0, 1993, 1994, 0, 1887,
	2003, 1775, 0, 1971, 0, 0, 0, 0, 1934, 2031,
	1847, 242, 0, 1771, 1772, 1773, 0, 1877, 1878, 0,
	0, 1989, 1988, 1987, 1990, 0, 2024, 2022, 2025, 1790,
	1811, 1833, 1883, 1884, 1886, 1918, 1919, 1965, 1937, 1946,
	1820, 1879, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1905, 199, 212, 312, 2032, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 1968,
	1912, 0, 1851, 1853, 1852, 1802, 1804, 1803, 1801, 2035,
	346, 1995, 1758, 1766, 1793, 1809, 1816, 1824, 1835, 1836,
	1844, 1850, 1862, 1872, 1873, 1889, 1903, 1904, 1911, 1941,
	1944, 1962, 1970, 1977, 1982, 1984, 472, 252, 1885, 1910,
	1948, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 1858, 196, 0, 0, 202, 0,
	203, 205, 1843, 201, 1991, 2027, 1922, 1936, 589, 448,
	583, 594, 576, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	259, 0, 0, 584, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 314, 0, 0, 476, 423, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 637,
	638, 0, 731, 0, 732, 734, 735, 736, 737, 0,
	0, 0, 733, 2317, 3389, 3390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 3384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 0, 575, 574,
	577, 0, 0, 0, 340, 0, 0, 0, 582, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 586, 0, 0, 198,
	313, 590, 0, 0, 245, 0, 392, 2314, 467, 0,
	278, 0, 0, 391, 315, 460, 0, 593, 466, 0,
	442, 477, 482, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 481, 578,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 484, 475, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 471, 0, 257, 0, 473, 0,
	406, 405, 581, 292, 0, 0, 0, 385, 0, 302,
	204, 0, 486, 220, 309, 450, 0, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	0, 1349, 408, 455, 222, 426, 579, 580, 587, 588,
	591, 592, 595, 322, 266, 270, 286, 297, 0, 389,
	427, 474, 0, 217, 470, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	485, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	2315, 2316, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 3401, 1066, 0,
	3391, 3392, 3394, 3402, 3403, 3393, 3395, 3396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3397, 3398, 3399, 3400, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 483, 341,
	383, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 585, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 479, 480, 0, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 589, 448, 583,
	594, 576, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 568, 0, 0, 0, 0, 0, 259,
	0, 0, 584, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 574, 577,
	0, 0, 0, 340, 0, 0, 0, 582, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 586, 0, 0, 198, 313,
	590, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 593, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 578, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 581, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	571, 408, 455, 222, 426, 579, 580, 587, 588, 591,
	592, 595, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 585, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 2467, 2471, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 2470, 301, 191, 0, 0,
	0, 2463, 0, 2464, 2466, 2465, 311, 1165, 195, 0,
	2461, 2469, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 1159, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 1476, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1478, 1477, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	1472, 1473, 1471, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1165, 195, 0, 1161, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 1159, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 3551, 195, 0, 0, 3550, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3518,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 1165,
	195, 0, 0, 2469, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2919, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 1165, 195, 0,
	0, 2469, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1478, 1477, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	2271, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3509, 0, 0,
	0, 0, 0, 3511, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 2042, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 2042,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 1165, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3362, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 498, 476, 423,
	339, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3511, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	497, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 496, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 498, 476, 423, 339, 501,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 497, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 496, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 498, 476, 423, 339, 501, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 497, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 496, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 498, 476, 423, 339, 501, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1201, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 497, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 496, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 498,
	476, 423, 339, 501, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 497, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 496,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3218, 680, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 673, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	478, 190, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 486, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	673, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 548, 545, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 2540, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 2427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 478, 190, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 486, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 2167, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 0, 196,
	0, 0, 202, 0, 203, 205, 448, 201, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 478, 190,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 486,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 478, 190, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 155, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 486, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 478, 190, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 486, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 1489, 1488, 1498,
	1499, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 653, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 1163, 732, 734, 735, 736,
	737, 0, 0, 0, 733, 2317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 728,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 729, 730, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 4480, 0, 0,
	0, 0, 0, 259, 4478, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 4479, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2991, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 2992, 2993, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	1624, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 2471, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 2470, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 3565, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 3563, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 3561, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 3559,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 3554, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 3541, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 3539, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 3468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3459,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 2748, 2747, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 314, 0, 0, 476, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 477, 482,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 481, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 484, 475, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 471, 0, 257, 0, 473, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 486,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 474, 0,
	217, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 485, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 483, 341, 383, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 479, 480, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 478, 0, 0, 314,
	0, 0, 476, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 477, 482, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 481, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	484, 475, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 471,
	0, 257, 0, 473, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 486, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 474, 0, 217, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 485, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 483, 341, 383, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	479, 480, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 0, 314, 0, 0,
	476, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 477, 482, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 481, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 484, 475,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 471, 0, 257,
	0, 473, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 486, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 474, 0, 217, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 485, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 0, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 483, 341, 383, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 479, 480,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 314, 0, 0, 476, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 477, 482, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 481,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 484, 475, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 471, 0, 257, 0, 473,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 486, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 474, 0, 217, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 485, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 483,
	341, 383, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 479, 480, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 314, 0, 0, 476, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	477, 482, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 481, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 484, 475, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 471, 0, 257, 0, 473, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 486, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	474, 0, 217, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 485,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 483, 341, 383,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 479, 480, 42, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 71, 0, 0, 0, 4291, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4284,
	0, 0, 0, 0, 4656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4284, 0, 0, 0, 0, 4638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 71, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 62, 92, 91, 0, 0, 0, 89,
	57, 0, 0, 0, 71, 4291, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 69, 70, 0, 4287, 4284, 0, 0, 0,
	0, 4634, 0, 0, 0, 4296, 4288, 4289, 4290, 4294,
	4295, 4292, 0, 4293, 0, 4297, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 69, 70, 0, 4287,
	0, 0, 0, 4284, 60, 0, 0, 0, 4633, 4296,
	4288, 4289, 4290, 4294, 4295, 4292, 0, 4293, 0, 4297,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 4285, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 4298, 4286, 0, 66, 67, 73, 0, 74,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 4298, 4286, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 69,
	70, 0, 4287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4296, 4288, 4289, 4290, 4294, 4295, 4292, 0,
	4293, 0, 4297, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 69, 70, 0, 4287,
	0, 60, 0, 0, 42, 0, 0, 0, 0, 4296,
	4288, 4289, 4290, 4294, 4295, 4292, 0, 4293, 71, 4297,
	0, 0, 0, 0, 78, 93, 79, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 4630, 59, 61, 0, 0, 4291, 0, 87, 4298,
	4286, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 4298, 4286, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 49, 90, 56, 55, 58, 93,
	0, 0, 47, 96, 0, 0, 0, 0, 0, 4285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 42, 0, 0, 0,
	4291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	47, 4284, 0, 0, 0, 0, 4622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 70, 89, 4287, 0, 0, 0, 0, 4291, 0,
	0, 0, 0, 4296, 4288, 4289, 4290, 4294, 4295, 4292,
	0, 4293, 0, 4297, 0, 0, 0, 85, 78, 4284,
	79, 0, 0, 0, 4619, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 84, 0, 0, 0, 96, 0, 0,
	0, 0, 60, 4285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 85, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 49, 90, 56, 55,
	58, 93, 0, 0, 47, 96, 0, 0, 0, 0,
	0, 4285, 0, 0, 0, 0, 0, 0, 0, 0,
	4298, 4286, 0, 66, 67, 73, 0, 74, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 89, 4287, 0, 0,
	0, 0, 4291, 0, 0, 0, 0, 4296, 4288, 4289,
	4290, 4294, 4295, 4292, 0, 4293, 0, 4297, 0, 0,
	0, 0, 78, 4284, 79, 0, 0, 0, 4533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 69, 70, 0, 4287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4296, 4288, 4289, 4290, 4294,
	4295, 4292, 0, 4293, 0, 4297, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 84, 71, 0, 0, 96,
	0, 0, 0, 93, 60, 4285, 47, 0, 0, 0,
	0, 0, 0, 0, 4298, 4286, 0, 66, 67, 73,
	0, 74, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 89, 0,
	59, 61, 0, 0, 4291, 0, 87, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 4284, 0, 0, 0, 0,
	0, 0, 4298, 4286, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4287,
	0, 89, 0, 0, 0, 0, 0, 4291, 0, 4296,
	4288, 4289, 4290, 4294, 4295, 4292, 0, 4293, 0, 4297,
	0, 0, 0, 0, 78, 0, 79, 0, 4284, 0,
	0, 0, 0, 4525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 49, 90, 56, 55, 58, 0, 60, 0,
	0, 96, 0, 0, 0, 0, 0, 4285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 42, 0,
	87, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 71, 0, 96, 0, 0, 0, 0, 93,
	4285, 0, 47, 0, 0, 0, 4298, 4286, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 62, 92,
	91, 0, 85, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 70,
	0, 4287, 59, 61, 89, 0, 0, 0, 87, 0,
	4291, 4296, 4288, 4289, 4290, 4294, 4295, 4292, 4530, 4293,
	0, 4297, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 4284, 0, 0, 0, 0, 4523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	60, 69, 70, 0, 4287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4296, 4288, 4289, 4290, 4294, 4295,
	4292, 0, 4293, 0, 4297, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 49, 90,
	56, 55, 58, 60, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4285, 0, 0, 0, 0, 4298, 4286,
	0, 66, 67, 73, 0, 74, 0, 42, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 71, 0, 0, 0, 0, 59, 61, 93, 0,
	0, 47, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4298, 4286, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 89, 85, 0, 0, 0, 0, 4291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4287, 0, 0,
	4284, 0, 0, 0, 0, 4401, 0, 4296, 4288, 4289,
	4290, 4294, 4295, 4292, 0, 4293, 0, 4297, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 59, 61,
	0, 0, 4285, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 89, 0, 0, 0, 57, 0, 4291,
	0, 0, 0, 0, 4298, 4286, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 85, 0, 0, 0,
	4284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4287, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 4296, 4288, 4289, 4290,
	4294, 4295, 4292, 0, 4293, 0, 4297, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4285, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 4298, 4286, 0, 66, 67, 73, 0,
	74, 0, 0, 69, 70, 0, 4287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4296, 4288, 4289, 4290,
	4294, 4295, 4292, 0, 4293, 0, 4297, 0, 0, 0,
	0, 78, 85, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4298, 4286, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85,
}

var yyPact = [...]int{
	8527, -1000, -502, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2876, -1000, 2876, 361, -1000, 440, -1000, 1440, 901,
	-1000, -1000, -1000, -1000, -1000, 557, 134, 59702, 1085, 53790,
	80366, -244, 5094, 79628, 151, -1000, 151, 427, 56004, 806,
	863, 78890, 2667, 2097, 154, 23, 20, 240, 40506, 981,
	289, 180, 212, 201, 181, 1249, -1000, 61916, 817, -1000,
	310, -1000, -1000, -1000, -1000, -1000, 55266, 2942, 2946, 2942,
	-1000, 2860, 2874, -1000, -1000, 2860, 2220, 2220, -1000, 61916,
	14812, -1000, -1000, -1000, -1000, -1000, 32200, -1000, 1248, -1000,
	60440, 42720, 2876, -1000, 1059, 1049, -106, 980, 980, 823,
	980, 980, -468, 1075, -1000, 797, 1583, -1000, -1000, -1000,
	-1000, 1582, 60440, 67820, 1068, 981, 981, 981, 981, 981,
	981, 981, 981, 981, 53052, 60440, -1000, 1202, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60440, 2930,
	2929, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2520, 2517, 52314, 651, 2781, 1602, 330, 1602,
	-1000, -1000, 1576, -1000, 883, 880, 877, 866, 886, 842,
	10, 1460, 1609, 2856, -1000, 2094, 2860, 2860, 1460, -1000,
	840, -1000, -1000, -1000, -1000, -1000, -1000, 1302, -1000, -1000,
	1657, 1657, 572, 1045, 873, 899, 873, 2826, 1579, 2780,
	2778, 2123, 2777, 940, 2775, 2510, -1000, 1198, -1000, -1000,
	59, -1000, 2095, 60440, -1000, -1000, 1977, 1963, 704, 2395,
	1118, 2560, -1000, -1000, 681, 852, 2499, 805, 2499, 2499,
	2499, 371, 2499, 2499, 11, 2499, 2499, 2499, 304, 2499,
	351, 2499, 2499, 2499, 2499, 2499, -1000, 2209, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	39757, 2801, 205, -1000, -210, 179, 2841, 952, -1000, -1000,
	-1000, 284, 1248, 62654, 2471, -1000, 2094, -1000, -1000, -1000,
	2478, 2094, -1000, 2031, 1066, 981, 638, -1000, 551, -1000,
	-1000, -1000, 2811, 2094, 11609, -1000, -1000, 1649, -1000, 2094,
	2094, 1248, 2843, 1248, 1248, 2839, 2837, 1248, 2741, 29176,
	19348, 2642, 1711, -1000, -1000, -1000, -1000, 1248, 2927, -1000,
	41982, 1197, -1000, 19348, 4632, 2094, 2094, -1000, 1130, 1261,
	-1000, 1105, 1173, -1000, -1000, 20104, 20104, 20104, 20104, 20104,
	20104, 20104, -1000, -1000, -1000, -1000, -1000, -1000, 2199, 2198,
	2197, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2094, 1195, 1190, 1189, 2094, 2094, 2094, 2094, 2094,
	-1000, 17836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2094, 2094, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 19348,
	2094, 2094, 2094, 2094, 2094, -1000, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2094, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2094, 2094, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2094, 988, 988, 58964,
	2477, -20, 31444, -1000, -1000, -1000, -1000, 29932, 65606, 1476,
	-1000, -1000, -1000, -1000, 2773, -1000, -1000, 1179, 1173, 1130,
	1129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2876,
	300, -1000, 2381, -1000, -1000, 9345, 9345, 9345, 9345, 9345,
	9345, 48624, -1000, -1000, -1000, 2509, 2860, -1000, 980, 980,
	848, 2090, 1651, 2089, 78890, 78890, 980, -1000, 670, 67820,
	67820, -377, 980, 783, 67820, 657, 2476, 1043, 2474, 1029,
	2202, 981, 77414, 60440, 2086, 2085, 78890, 78890, 67820, 67820,
	78890, -1000, -1000, -1000, 28420, -1000, 1278, 2473, 47886, 47148,
	51576, 51576, -1000, -1000, -1000, 815, -1000, 1602, -1000, 7893,
	19348, 980, 980, 60440, 60440, 60440, 60440, 60440, -1000, 60440,
	-1000, -1000, 1602, -1000, -1000, 1602, 1602, 1602, 1460, 2925,
	1460, -1000, -1000, -1000, 1602, 79628, 79628, 19348, -1000, 20104,
	67082, 1307, -1000, -1000, 1602, -1000, 79628, 923, 923, 923,
	-1000, 2082, 522, 325, -1000, 873, 300, -1000, -1000, 2701,
	2833, 2832, 2067, 940, 940, -1000, 2206, 940, 2463, -1000,
	1572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 940, 2826, 18592, 77414, -483, -1000, -1000,
	2472, -1000, 505, -1000, -1000, 906, 2559, 906, 6603, 67820,
	67820, 67820, -1000, 2499, 77414, -1000, 2499, 2499, 2499, 5,
	2499, 2499, -1000, -1000, 2499, -1000, -1000, -1000, 2499, -1000,
	-1000, 2499, -1000, -1000, -1000, 2499, 2499, -1000, 2499, 2499,
	-1000, -1000, -1000, -1000, -1000, 67820, 685, 2394, 2439, 2558,
	-1000, 1027, 183, -35, 143, -1000, -1000, -1000, -1000, -1000,
	-1000, 283, 280, 278, 275, -1000, -1000, -1000, -1000, 273,
	272, -1000, -1000, 58218, 58218, 864, -1000, 2471, 62654, 2831,
	23884, 817, -1000, 19348, 2790, -1000, 2790, -1000, -1000, -1000,
	378, -1000, 60440, 67820, 78890, 55266, 55266, 55266, 55266, -1000,
	2596, 2587, -1000, 2588, 2577, 2573, 520, 62654, -1000, 2811,
	361, 2379, 2220, 2220, 551, 11609, -1000, 2094, -1000, 62654,
	1149, 1055, 1053, 1052, 2701, -1000, -1000, -1000, -1000, -1000,
	2092, 2091, 2088, 14056, 20104, -1000, -1000, -1000, -1000, -1000,
	2942, 2942, -1000, -1000, -1000, -1000, -1000, -1000, 1667, 2936,
	1491, 2443, -1000, -1000, -1000, 2470, -1000, 1574, 1172, 1808,
	1730, -1000, -1000, -1000, -1000, -1000, -1000, 14812, -1000, 60440,
	-1000, 19348, 19348, 19348, 1705, -1000, 45672, -1000, -1000, -1000,
	24640, 1503, 20104, 1755, 1511, 20104, 20104, 20104, 20104, 20104,
	20104, 20104, 20104, 20104, 20104, 20104, 20104, 20104, 20104, 20104,
	1379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2066,
	-1000, 300, 37492, 14056, 37492, 684, 684, 77414, 1290, 1290,
	1290, 1290, 1290, 1290, 61178, -1000, -1000, -1000, 2830, 35980,
	77414, 37492, 2830, 2830, 2830, 2830, 2830, 2375, 1714, 61916,
	17836, 55266, 14056, 14056, 14056, 2220, 19348, 19348, 14056, 20104,
	14056, 17080, 16324, 21616, 14056, 14056, 2830, 1600, 1714, 27664,
	14056, -1000, 2220, -1000, -1000, -1000, -1000, 1937, -1000, -1000,
	-309, -309, -309, 420, 14056, 14056, 14056, 14056, 2220, 2220,
	14056, 14056, 14056, 14056, 14056, 14056, 2220, 2220, 2220, 14056,
	14056, 14056, 14056, 14056, 14056, 14056, 14056, 14056, 14056, 14056,
	14056, -1000, -1000, -1000, 1862, 57480, 55266, 60440, 2435, 2434,
	-1000, -1000, 1169, 30688, 2440, -1000, -31, -37, -20, -1000,
	-1000, 1262, -1000, -1000, -1000, -1000, 15568, -1000, -1000, -1000,
	25396, 2860, -1000, 41244, -1000, 44, -1000, -1000, -1000, 2491,
	-1000, 2493, 96, 535, 2493, 82, 81, 2493, 2493, 2493,
	-1000, -1000, -1000, -1000, 107, -1000, -1000, -1000, -1000, -1000,
	2508, 2507, -1000, 2491, 2491, 2491, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2497, 544, 2492, 2492, 2492, 2492, 2492, -1000, -1000, -1000,
	-1000, -1000, 948, -1000, -1000, -1000, 19348, 2741, 2740, 77414,
	60440, 1047, -469, 783, 2790, 2800, 2790, 860, -1000, 1168,
	2501, 78890, 822, 2427, -1000, 409, 2390, 1092, 56742, -1000,
	-1000, -1000, -1000, -1000, 60440, 60440, 67820, 67820, 67820, 60440,
	2556, 2467, -1000, -1000, -1000, -1000, -1000, 2466, -1000, 2390,
	-1000, -1000, 1160, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -439, -440, 60440,
	-1000, -1000, -1000, -1000, -1000, -1000, 2464, -1000, 2464, -1000,
	-1000, -1000, 2205, 1714, 2065, 2064, 2826, -1000, -1000, -1000,
	-1000, 1550, -1000, -1000, -1000, -1000, 1602, 60440, 2826, -1000,
	-1000, -1000, 1714, 1797, 2515, 2094, 2220, -1000, -1000, -1000,
	149, -1000, 146, -1000, -1000, -1000, 2060, -1000, -1000, -1000,
	-1000, -1000, 325, -1000, 20104, 2699, 2698, -1000, 2463, 2463,
	-1000, 2463, 940, 63392, 2463, -1000, -1000, 2370, -1000, 252,
	2204, 60440, -1000, 62654, 48, -1000, -80, 75938, -1000, -1000,
	-1000, 906, 75938, -1000, 304, 246, -1000, 1025, -1000, 2368,
	-1000, -1000, -1000, -1000, 2499, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 906, 395, 2450, 906, 67820,
	67820, 228, 2449, -1000, 1570, 1569, -1000, -1000, 141, -1000,
	-1000, -1000, -1000, 2855, -1000, -1000, 243, -69, -1000, 243,
	2203, 20104, -1000, 2094, 2277, -1000, 1159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2094, -1000, -1000, -1000, -1000, 2772,
	1476, 1476, 1476, 7154, 409, 2555, 2506, 2554, 476, -1000,
	-1000, -1000, -1000, 2585, -1000, 2576, 2518, -1000, -1000, -1000,
	2482, 62654, 55266, -1000, -1000, -1000, 2220, 77414, 1106, -1000,
	62654, 2094, 2094, 2094, 20104, 20104, 1481, -1000, 20104, 20104,
	1474, -1000, 20104, 20104, 1447, -1000, 2220, 2448, -1000, -1000,
	1714, 1155, 5013, -1000, 76676, 43, 2605, 29176, 29176, 19348,
	-1000, -1000, -1000, 25396, 2859, -1000, 2615, 2612, 2922, -1000,
	-1000, -1000, 1503, 1534, 1536, -1000, -1000, 1680, -1000, -1000,
	-1000, -1000, -1000, 1154, 2094, -1000, -1000, -1000, -1000, -1000,
	-1000, 4868, -1000, -1000, -1000, -1000, 1755, 20104, 20104, 20104,
	1797, 4868, 4734, 1920, 1770, 1290, 1643, 1643, 1294, 1294,
	1294, 1294, 1294, 1826, 1826, -1000, -1000, -1000, -1000, 2220,
	-1000, 2366, -1000, -1000, 2199, 2198, 2197, -1000, -1000, -1000,
	-1000, 14056, -1000, -1000, -1000, -1000, -1000, -1000, 14056, 14056,
	14056, 14056, 14056, 19348, -1000, 2366, 2366, 2366, -1000, 1639,
	1853, 2214, 3980, 2366, 1359, 2920, 2366, 1356, 2919, 2366,
	1875, 20104, 20104, 20104, 2366, 2366, 14056, 1629, -1000, 19348,
	2220, 1221, 2220, 1130, 1129, 2366, -1000, 2220, 2447, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2445, 2917, 2444, -1000, -1000, -1000, -1000, 2366, 2220, 2366,
	2366, -124, -124, 2220, 2366, 2220, 2366, 2366, 2220, -124,
	-124, -124, 2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366,
	2366, 2366, 2366, 2366, -1000, 2220, 1385, 60440, -1000, 2436,
	1385, 2389, 55266, -1000, -1000, 55266, 79628, 26908, -1000, 29932,
	-20, -83, -1000, -1000, 2440, -1000, -1000, 1542, -1000, -1000,
	2195, 1714, -1000, 1127, 2741, 5768, -1000, -1000, -1000, -1000,
	2498, 44934, -1000, 2637, 1206, 1206, 1206, 66344, 78152, 2636,
	-1000, -1000, 370, 29, -1000, -1000, -1000, 1958, -1000, 363,
	534, 2493, -1000, -1000, -1000, 2493, 2493, -1000, 2493, 2493,
	-1000, -1000, -1000, -1000, 2194, 2194, -1000, -1000, -1000, -1000,
	1952, -1000, 2497, -1000, 1951, -1000, -1000, -1000, -1000, 370,
	370, 370, 370, 370, -1000, 1996, -1000, 2513, 2094, 60440,
	-378, -1000, -1000, -1000, 2888, -1000, -1000, 77414, 64868, 2553,
	-1000, -1000, 333, 67820, 398, 615, 306, -1000, 1623, -1000,
	-1000, 1024, -1000, 1023, -1000, -1000, 1062, 60440, 60440, 67820,
	77414, 2549, 2548, -1000, 51576, -1000, -1000, -1000, -1000, 2882,
	2059, 2056, -1000, 1460, 1602, -1000, 20104, 67820, -1000, 856,
	-1000, -1000, -1000, -1000, 4868, 20104, 20104, -1000, -1000, -1000,
	-1000, 1663, -1000, -1000, -1000, -1000, -16, -1000, -1000, 1022,
	1111, 1109, 75938, 1021, -1000, 346, 67820, -1000, 77414, -1000,
	75938, 369, 393, 75938, 1119, 2914, 2438, -1000, 1567, 1548,
	1544, 1538, 1535, 1528, 1512, 1507, 183, 2496, 2495, -1000,
	-1000, 254, -1000, 2728, -1000, -1000, 4868, -1000, -1000, 23884,
	37492, -1000, 1476, 1502, -1000, 1500, 2192, 1110, 1196, -1000,
	-1000, -1000, 2873, 1157, 1257, 946, 1476, 959, 432, 1017,
	2703, 2674, 555, 553, -1000, 1476, 959, 1353, 500, -1000,
	1432, 1420, 1413, 1409, 1404, 1403, 1387, 1386, 492, -380,
	-1000, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, -182,
	-190, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476,
	1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476,
	1476, 1476, 1476, 1476, 32956, 1476, 1476, -262, -1000, 1095,
	631, -1000, -1000, 19348, 2494, -1000, 19348, -1000, -1000, -1000,
	-1000, -1000, 77414, 2482, 551, -1000, 2271, -1000, -1000, 1106,
	77414, 77414, 77414, 4690, 2024, 2094, 4174, 1997, 2094, 4082,
	1857, 2094, 2811, 14056, 23128, 2190, 2437, 2189, 2188, -1000,
	40, 2603, -1000, -1000, -1000, 60440, -1000, -1000, -1000, -1000,
	2882, 54528, 14812, -1000, -1000, -1000, -1000, 35224, 14056, -1000,
	1797, 4868, 3628, -1000, 20104, -1000, -1000, 2220, 2366, 2366,
	2366, 2366, 2366, 1714, -1000, -1000, -1000, 388, 1379, 388,
	-1000, 1379, 20104, -1000, 20104, 20104, -1000, 20104, 20104, -1000,
	-1000, 20104, 3857, 2591, 2400, -250, -1000, 2442, 1590, -1000,
	19348, 1850, -1000, -1000, -1000, -1000, -1000, 20104, 20104, 20104,
	20104, -1000, -1000, -1000, -1000, -1000, 75200, -1000, -124, -124,
	-124, -124, -124, -124, -1000, -1000, -1000, -124, -124, -124,
	-124, -124, -124, -124, -124, -124, -124, -124, -124, -1000,
	359, 2094, -1000, 26152, 2882, 55266, 2385, 2385, -1000, 1103,
	-1000, -1000, -1000, -73, -75, -1000, -1000, -1000, -1000, -1000,
	37492, -1000, -1000, -1000, 6843, -1000, 1476, 1476, 1476, 379,
	1476, 1476, 1476, 1476, 1476, -191, -193, 1476, 1476, 1476,
	1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476, 1476,
	1476, 1476, 1476, 1476, 165, 1476, 1476, 1476, 1476, 1476,
	1476, 32956, 1476, 1476, -382, 49362, 1116, 936, -1000, -1000,
	-1000, 78152, 78152, 78152, -1000, 78152, 78152, -1000, -1000, -1000,
	-1000, 50100, -1000, -1000, 1672, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2094, -494, 1946, 60440, -1000, 2761, 1495,
	39760, 2935, -1000, 2635, -1000, 2633, 2632, 2187, -1000, -1000,
	2355, 2338, 2313, -1000, 2493, -1000, -1000, -1000, -1000, -1000,
	2359, -1000, 2322, 2429, -1000, 2320, -429, 2547, 77414, 2820,
	2094, 1945, 2546, -1000, -1000, -1000, -1000, 2273, 2428, -1000,
	9345, 77414, 77414, 77414, 632, -262, 587, -1000, 67820, 354,
	409, 785, 1995, -405, 2799, 60440, 67820, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 74462, 74462, -1000, -1000, 19348, -1000,
	-1000, 2826, -1000, 4868, 2390, -1000, -1000, 4868, 4868, 1385,
	1065, -1000, 67820, 1306, 73724, 1016, 67820, 367, 238, -1000,
	2913, 2910, 366, 2897, -1000, 245, 67820, 228, 2186, 2185,
	2184, 1944, 1943, 1942, 1941, 1938, -1000, 60440, 60440, 2183,
	-1000, -1000, -1000, 1477, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1362, 5549, 1196, 1361, 1352, 1345, 1344, -1000, 163,
	46410, 980, 1141, 964, -1000, -1000, 2094, -1000, 44196, 50100,
	50100, 50100, 981, 2631, 2630, 77414, 50100, 50100, 77414, 50100,
	861, 2041, 2759, 1476, 90, -1000, -1000, -1000, 72986, -1000,
	72248, 835, 50838, 50100, 77414, 60440, 43458, -1000, -1000, -1000,
	-1000, 71510, 1936, 77414, 77414, 70772, 70034, 69296, 68558, -1000,
	-238, 1012, 19348, 1012, 1831, 1831, 2181, 2180, 2179, 1476,
	1476, 211, 1831, 2178, 211, 1831, 39004, 2177, 914, 1012,
	1012, 1012, 1831, 1831, 1831, 1831, 2176, 405, 1832, 2175,
	1831, 2117, 2112, 1012, -1000, -224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1831, 2094, -1000,
	345, 836, 1015, 796, -5, 1714, 77414, 1714, 2318, -1000,
	-1000, 1621, 77414, -1000, 2235, 2235, 2235, 20104, 20104, 20104,
	20104, 20104, 20104, 20104, 20104, 20104, 62654, -1000, -1000, 1098,
	-9, 77414, -1000, 22, -1000, -1000, -1000, 2880, -1000, 2424,
	-1000, -1000, -1000, 2220, -1000, 20104, 4868, -1000, -124, -124,
	-124, -124, -124, 2220, 2491, 2491, 2491, -1000, 2491, 2492,
	113, -1000, -1000, -1000, 2491, 133, 2491, 131, -1000, 2220,
	2220, 2220, 2100, 3951, 3716, 2785, 2616, 2100, 20104, 20104,
	20104, 2094, -118, -1000, 1714, 19348, 2361, 2292, 2100, 2100,
	-1000, -1000, 2040, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2545, 2545, 26152, 2811, -1000, 22372, -1000, 817,
	-1000, -1000, 77414, 2402, -1000, 1476, 1191, 1476, 1476, 2876,
	2385, -1000, -1000, 1305, -1000, -1000, -1000, -1000, 1012, 1012,
	1012, 1476, 2757, 1476, 1831, 1831, 2174, 2173, 2172, 1476,
	1476, 211, 1831, 2171, 211, 1831, 39004, 2169, 914, 1012,
	1012, 1012, 1831, 1831, 1831, 1831, 2168, 405, -1000, 1790,
	2166, 1831, 2012, 1983, 1012, -1000, -227, 1831, 2094, -240,
	2316, -1000, 2491, 2491, 2625, 1206, -1000, -1000, -1000, -1000,
	-1000, -1000, 2489, -1000, -1000, 20104, 2819, -1000, 2486, 1400,
	-1000, -1000, -1000, -1000, 684, 2165, -1000, -1000, 20104, -1000,
	-1000, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094, 2094,
	2094, 2094, 2094, 2094, -52, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2164, -1000, 1935, -1000, 1934, -1000,
	-1000, -1000, 60440, -1000, -1000, 2818, -1000, 60440, 229, 64868,
	-1000, 9345, 9345, 9345, -5, 350, -1000, 1655, -1000, -1000,
	-1000, 2163, 2162, 2160, 2390, 411, 1653, 385, -1000, 2815,
	2814, 2159, 2144, 2143, 2139, 1917, -1000, -1000, 2514, 77414,
	2411, -1000, 1714, 1602, 22, 60440, 238, -1000, -1000, -1000,
	67820, 238, -1000, -1000, 392, 67820, 67820, 2894, 67820, 422,
	1119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2307, 2281, -1000, -1000, -1000, -1000, -1000, -1000, 1317, 1355,
	329, 328, -209, -1000, 491, 381, -1000, -1000, -1000, 50838,
	912, 9345, 9345, 78152, 1206, -1000, 2624, 1329, -1000, -1000,
	-1000, -1000, 77414, -1000, 50100, 2408, -431, -433, 1227, -453,
	-1000, -1000, -1000, -1000, 50838, 1476, 1379, 2752, 677, 324,
	662, 323, -1000, -1000, -1000, -1000, 912, 1165, 1006, -1000,
	2623, 50100, 996, 614, 313, -1000, 1690, -265, 2408, -1000,
	2408, -1000, 2408, -1000, 2408, -1000, -1000, -1000, 1714, -1000,
	-1000, -1000, -1000, -1000, -1000, 2138, 2137, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -184, -1000, 39004, 345, -1000,
	1916, 1914, 1913, 1870, 1675, -1000, 2544, 78890, -1000, 512,
	2543, 949, 684, 2279, -1000, 77414, -1000, -1000, -1000, -1000,
	-1000, 4868, 4868, 2275, 4868, 4868, 2244, 4868, 4868, 2200,
	-1000, 34468, 2094, -1000, -2, -1000, 2878, 2872, -1000, -1000,
	4868, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 527, 429,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20104, 20104, 20104, 20104, -1000, 2100, 2100, 2100, 20104,
	2220, 2136, 1714, 20104, 20104, -1000, -1000, 1340, -1000, 2847,
	2795, 2847, 2286, 62654, 2220, 2311, 2277, 2220, 358, -1000,
	-1000, -1000, 61916, 55266, 2407, -1000, 2094, 2271, 2876, 26152,
	19348, 19348, 19348, 19348, 2860, -1000, -1000, -1000, -1000, 1379,
	1476, 33712, -1000, -1000, -1000, -1000, -1000, 2135, 2134, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -188, -1000, 39004, -1000,
	237, 49362, 2794, 2794, 78152, 78152, 77414, 2100, 2094, 77414,
	-1000, -1000, -1000, -1000, -1000, 2100, -1000, -1000, 2265, 2248,
	2485, -1000, -1000, -405, 2854, -1000, 229, -1000, 2132, 689,
	656, -1000, 687, 682, 672, 658, 650, -1000, -1000, -1000,
	-1000, 2543, 725, 350, -1000, -59, 1858, 1430, 2724, 391,
	-1000, -1000, -1000, -1000, 302, 409, -1000, 784, 2130, 711,
	2129, -1000, -1000, 401, -1000, -1000, 2665, 2268, -1000, -2,
	-1000, 2816, 238, 2816, 364, 1119, 1119, 67820, 1119, -1000,
	-1000, -1000, -1000, -230, 1854, 20104, 2094, 2094, 646, 2227,
	-1000, -1000, 2033, -1000, -1000, 2513, 980, 78152, 2237, -1000,
	77414, -1000, -1000, -1000, -1000, -1000, -1000, 2789, 2783, -1000,
	-1000, 912, 1379, -1000, 1379, -1000, -1000, -1000, -1000, -1000,
	50100, 77414, 50100, 995, 50100, -1000, -1000, 2094, 1061, -1000,
	-1000, -1000, -1000, 2263, -1000, -1000, -1000, -1000, -1000, -1000,
	433, 2128, 305, -1000, -1000, 1095, 516, -1000, -1000, -1000,
	-277, -1000, -1000, 20104, 20104, 20104, -1000, 36736, 2658, 2653,
	-129, 19348, 19348, -1000, -1000, -1000, -1000, 2100, 2100, 2100,
	2100, -1000, -1000, -1000, 344, -1000, -1000, 2100, 2100, 2876,
	2871, -1000, -1000, 2622, -1000, 2847, 2482, -1000, -1000, 2311,
	358, -1000, 817, -1000, 13300, -1000, 2860, -1000, 1714, 1714,
	1714, 1714, -1000, -1000, 1379, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2263, 237, -1000, 39004, 1476, 2127, 1476, 1476,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2247, -497, 20104,
	2245, -1000, -1000, -1000, 49362, 300, -1000, 829, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2662, 2661, 819, 836, -1000,
	2126, 2125, -1000, 698, 1813, 1158, -135, -1000, -1000, -1000,
	-1000, -1000, -1000, 710, 2029, -1000, 383, -1000, -1000, 376,
	-1000, -1000, 2870, -405, 20104, -1000, 2658, -1000, 67820, 2816,
	-1000, -1000, -1000, -1000, 1119, -1000, 2094, 2869, -1000, 2100,
	77414, 20104, 2094, 1369, -1000, -1000, 370, 370, 2484, 78152,
	2483, -1000, 1329, 2611, 20104, -1000, -1000, 1281, 1274, -1000,
	-1000, 994, 50100, -1000, 1329, 60440, 39004, -1000, -1000, -1000,
	-1000, 836, 1311, 627, 2100, 2100, 2100, 2217, -1000, 7657,
	352, -1000, -1000, 2644, 2867, -1000, 77414, -1000, 1714, 2406,
	-1000, 1714, -1000, -1000, -1000, -1000, 2220, 337, -340, -1000,
	-1000, 1332, 19348, 2405, 2934, -1000, -1000, -1000, -1000, 358,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1837, -1000, 2118,
	2114, 920, -1000, -1000, -1000, 2100, -1000, 2239, -1000, 300,
	807, 82836, -1000, -1000, -1000, -1000, 1675, -1000, -1000, -1000,
	-1000, 1810, -1000, -1000, 1799, 686, 372, -1000, 2813, -1000,
	-1000, 1801, 4868, 984, -286, -1000, -1000, -1000, 1329, -407,
	-1000, 2235, 2100, 77414, 1772, 49362, 2513, 49362, -1000, 867,
	4868, 1476, 1379, 50100, -1000, 2237, 24, -1000, 82836, 1675,
	1150, 609, 949, -1000, -1000, -1000, 2220, 36736, 407, -458,
	-11, 2110, 2645, 2649, 2646, -1000, 2108, 2404, -1000, 2812,
	19348, -1000, 2602, -276, -347, 2220, 413, 413, 2401, 26152,
	2220, -1000, -1000, -1000, 60440, -497, 237, -321, -1000, 810,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12544, 19348, 164, 38248, 2028, 2027,
	82836, 2101, 82836, 19348, 2026, 2023, 2673, 20104, 82686, 430,
	-358, -1000, -359, -1000, -1000, -1000, 2107, -1000, 2482, 1743,
	389, 2237, 380, -1000, -1000, 2235, -1000, 2232, 2481, 2230,
	853, 1379, -1000, -1000, -1000, 499, -1000, -1000, 415, 684,
	-1000, 949, -1000, 2811, -1000, -1000, 2106, -181, -1000, 2094,
	-18, 2866, 2865, -1000, 2864, 2863, -1000, 77414, 2094, -1000,
	-1000, 2594, -1000, -1000, -1000, 387, -1000, 1327, 803, 1318,
	-1000, 684, -1000, 2398, -1000, 2480, -1000, -1000, 237, -1000,
	365, -321, -1000, 2020, 2019, -1000, 1780, 1593, -1000, 19348,
	1753, 473, 467, 4575, -1000, -1000, -1000, -1000, -1000, -1000,
	-503, -1000, 307, -504, 973, -1000, -1000, 2018, -1000, 2892,
	4868, -1000, -505, -1000, -1000, -1000, -1000, 2731, 1415, 64130,
	-1000, 2094, 646, -1000, 237, 49362, 237, 2094, -1000, -1000,
	-1000, -1000, -277, -1000, 1311, 62654, 652, 2105, 36736, 2094,
	2104, 2102, 2093, 1773, -1000, -1000, -322, 1630, -1000, -1000,
	-1000, -1000, -1000, -309, 77414, 362, 947, 937, -1000, -1000,
	-1000, -1000, 1578, 1612, 82836, -1000, 1750, 82836, 2853, 2852,
	2835, 22, 37492, 82477, 82304, 82836, 82836, 19348, 82241, 82836,
	1661, -1000, 82069, 82836, -1000, 26152, -1000, -1000, -1000, -1000,
	2948, 2390, 20104, 2094, -1000, 2224, -1000, 20860, 82836, -1000,
	1311, -1000, 1796, 1795, 2542, 2539, 684, -1000, 2217, 36736,
	-1000, -1000, -1000, -1000, -344, 387, -1000, 2219, -1000, 356,
	353, 343, 1608, 82836, -1000, -506, 82836, -507, 808, 300,
	837, 1262, -1000, 457, -1000, 2017, -508, -509, -510, 841,
	19348, -511, 2009, -1000, -1000, 2398, 67820, 2100, 20104, 237,
	2100, 2220, -1000, -1000, 2537, 684, -1000, 2536, 684, -88,
	-90, 2534, -1000, 2217, -352, -1000, 2533, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 81905, 61916, -1000, -512,
	81837, -513, 9008, -1000, -1000, -1000, 81673, -1000, -1000, -1000,
	-1000, 465, -1000, -1000, 2742, -1000, -1000, 81369, 81312, 9880,
	82836, 1633, 81159, 2396, -1000, -1000, 2390, -232, 2100, -1000,
	-1000, -1000, -1000, 268, 2531, -389, 2528, 266, 265, -1000,
	-1000, -93, -1000, -1000, 2526, 2525, 2891, -1000, -514, -1000,
	-1000, 81105, 1605, 82836, 978, 82836, 1555, -1000, 19348, -1000,
	837, -1000, 20104, 2008, 452, 19348, -515, 447, 437, 1989,
	-1000, 1722, -232, 264, -390, 2523, 2522, -1000, -1000, -1000,
	2893, -1000, 2932, 1101, 1101, 10993, 1584, -1000, -1000, -516,
	976, 82836, -1000, 1671, -1000, 4868, -1000, 1859, 1543, 10838,
	-1000, -1000, -1000, -1000, -1000, 260, -391, -1000, -1000, -1000,
	943, 1776, -1000, -1000, -1000, 10484, -1000, -518, 82836, -1000,
	441, 428, -1000, -1000, -1000, -1000, -1000, 975, 10277, -519,
	1855, 1778, -1000, 969, 82836, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3418, 3417, 3416, 12, 3415, 289, 307, 322, 23,
	2743, 3414, 309, 3413, 286, 3406, 32, 29, 24, 40,
	3391, 3075, 3073, 3071, 3069, 37, 3390, 8, 3389, 3387,
	3056, 3385, 3382, 3050, 3381, 3380, 3379, 3377, 3373, 3372,
	3371, 3370, 3369, 3044, 3042, 3040, 3005, 3368, 3366, 3365,
	3003, 2998, 2993, 3363, 77, 3362, 28, 51, 27, 3361,
	6, 3360, 202, 220, 3354, 4, 3350, 3349, 21, 203,
	3347, 3346, 76, 2991, 3343, 3341, 3339, 3337, 3335, 3328,
	141, 3324, 3323, 2979, 3322, 2977, 3319, 2973, 2971, 2969,
	2967, 2965, 201, 3318, 2962, 2959, 2957, 3316, 2649, 232,
	458, 230, 3314, 132, 144, 1763, 3313, 210, 3312, 218,
	3311, 3309, 3308, 486, 227, 3307, 161, 99, 489, 165,
	164, 168, 317, 3302, 63, 169, 375, 3301, 7, 3300,
	115, 3299, 219, 3297, 223, 2757, 198, 177, 194, 3296,
	3295, 154, 3294, 3293, 3292, 216, 3291, 3290, 239, 441,
	3288, 3286, 189, 3282, 134, 3277, 175, 3276, 3275, 3274,
	3273, 237, 121, 83, 170, 181, 3271, 159, 3270, 3269,
	3267, 3266, 3264, 3263, 89, 34, 485, 3261, 158, 193,
	3258, 72, 31, 48, 3257, 3255, 65, 3254, 3253, 131,
	3252, 3250, 138, 3247, 191, 70, 3246, 3245, 3244, 3239,
	116, 82, 3238, 35, 3237, 188, 3235, 3230, 3229, 3228,
	3227, 101, 3225, 84, 3224, 190, 234, 315, 3219, 3217,
	54, 49, 3216, 62, 18, 16, 108, 46, 110, 81,
	184, 171, 133, 153, 47, 149, 59, 157, 229, 87,
	3215, 231, 178, 214, 118, 36, 3211, 3209, 205, 3208,
	114, 211, 185, 186, 206, 3207, 3206, 3205, 241, 3204,
	180, 553, 3203, 126, 192, 104, 2678, 240, 140, 3202,
	3193, 3192, 3191, 122, 56, 136, 3190, 44, 243, 238,
	244, 42, 109, 3189, 1802, 6206, 6479, 8316, 50, 60,
	151, 7149, 66, 213, 3188, 69, 3184, 3182, 3178, 4875,
	166, 52, 61, 156, 3175, 163, 55, 94, 3174, 3172,
	3171, 3170, 3169, 3168, 173, 139, 3167, 3166, 67, 3153,
	3152, 43, 26, 17, 15, 3150, 160, 225, 222, 221,
	3147, 204, 58, 3146, 3145, 182, 143, 3144, 3143, 3142,
	3140, 183, 123, 208, 3137, 207, 125, 127, 3136, 124,
	3133, 3132, 96, 2508, 150, 3131, 3130, 273, 135, 148,
	197, 3129, 3127, 3126, 71, 3125, 3124, 3, 3123, 113,
	74, 53, 111, 14, 162, 3122, 3121, 195, 3120, 3119,
	146, 174, 3118, 137, 142, 73, 3116, 75, 147, 3115,
	167, 2, 5, 10, 3111, 3109, 3108, 3104, 3103, 3102,
	3101, 3100, 129, 3098, 3097, 106, 90, 80, 3096, 3095,
	3094, 3093, 3092, 200, 176, 98, 228, 102, 11, 3091,
	3090, 9, 3089, 179, 3088, 105, 3086, 3085, 128, 3084,
	3082, 79, 100, 39, 107, 3081, 3079, 117, 155, 3078,
	86, 3077, 3058, 226, 412, 3054, 389, 3047, 199, 196,
	78, 93, 3024, 85, 112, 3017, 103, 3015, 19, 64,
	3009, 22, 20, 319, 3000, 0, 4319, 209, 2988, 130,
	2986, 2984, 217, 2975,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 128, 128, 8, 8,
	127, 127, 127, 243, 243, 243, 243, 240, 240, 129,
	129, 126, 126, 134, 16, 16, 16, 111, 111, 17,
	18, 18, 18, 18, 467, 467, 143, 143, 141, 141,
	142, 142, 237, 237, 239, 239, 19, 19, 19, 248,
	248, 253, 253, 253, 256, 256, 256, 256, 225, 226,
	227, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 455, 455, 455, 456,
	456, 456, 456, 456, 281, 281, 281, 281, 419, 419,
	435, 435, 435, 436, 436, 434, 434, 434, 434, 434,
	438, 438, 439, 439, 437, 437, 437, 437, 441, 441,
	442, 442, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 422, 422, 422, 50,
	50, 50, 50, 50, 54, 54, 51, 51, 51, 51,
	51, 51, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 444, 444, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 446, 446, 447, 447,
	448, 448, 448, 448, 449, 449, 449, 449, 449, 450,
	450, 450, 450, 450, 450, 450, 451, 451, 452, 452,
	3, 2, 400, 400, 401, 401, 402, 402, 402, 402,
	403, 403, 404, 404, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 31, 31, 31, 31, 31, 31,
	280, 280, 276, 276, 276, 278, 278, 279, 279, 279,
	421, 421, 421, 415, 415, 415, 417, 417, 416, 416,
	416, 418, 418, 423, 423, 423, 423, 423, 426, 426,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	427, 427, 427, 424, 424, 162, 162, 428, 428, 433,
	433, 429, 429, 430, 430, 432, 432, 432, 431, 431,
	431, 431, 318, 318, 181, 181, 70, 70, 71, 71,
	71, 214, 214, 214, 20, 20, 20, 20, 20, 20,
	26, 26, 28, 28, 28, 28, 57, 57, 58, 29,
	29, 29, 29, 59, 59, 60, 32, 32, 32, 32,
	32, 32, 67, 67, 67, 66, 66, 65, 65, 65,
	65, 65, 65, 34, 35, 36, 468, 468, 468, 61,
	61, 37, 37, 37, 40, 40, 40, 41, 41, 41,
	38, 39, 42, 30, 30, 30, 30, 68, 68, 63,
	63, 62, 62, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 33, 33, 33, 33, 33,
	33, 25, 399, 399, 399, 56, 56, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	78, 78, 355, 356, 356, 356, 356, 356, 356, 342,
	342, 343, 343, 343, 343, 343, 343, 332, 332, 332,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 306, 306, 306,
	306, 310, 310, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 311, 311, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	313, 313, 313, 313, 313, 341, 341, 315, 315, 314,
	314, 314, 335, 335, 336, 336, 336, 333, 333, 333,
	334, 334, 319, 319, 319, 319, 319, 319, 320, 337,
	321, 321, 322, 322, 322, 322, 322, 322, 323, 323,
	324, 324, 324, 326, 326, 331, 331, 330, 330, 330,
	330, 330, 330, 327, 327, 327, 327, 327, 327, 328,
	328, 328, 329, 340, 340, 340, 340, 340, 316, 46,
	46, 52, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 377, 377,
	382, 382, 270, 270, 271, 271, 53, 53, 53, 53,
	53, 168, 168, 55, 55, 55, 378, 378, 380, 380,
	380, 380, 380, 380, 380, 380, 379, 379, 381, 381,
	344, 344, 373, 373, 372, 372, 371, 371, 371, 371,
	371, 371, 371, 353, 353, 354, 354, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 348, 348, 348, 347,
	347, 349, 349, 352, 352, 352, 370, 370, 369, 369,
	345, 345, 345, 383, 383, 383, 383, 383, 102, 102,
	346, 346, 346, 384, 350, 350, 351, 351, 351, 392,
	393, 391, 391, 391, 391, 391, 169, 169, 169, 375,
	375, 375, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	103, 103, 103, 104, 104, 325, 325, 357, 357, 357,
	357, 357, 463, 463, 463, 358, 358, 358, 358, 358,
	358, 454, 454, 453, 453, 453, 359, 359, 360, 361,
	361, 361, 362, 362, 364, 364, 277, 277, 365, 365,
	366, 366, 363, 363, 363, 367, 367, 396, 396, 396,
	395, 395, 73, 73, 73, 73, 75, 75, 74, 74,
	74, 82, 82, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 72, 72, 290, 290,
	77, 213, 213, 213, 275, 275, 389, 389, 390, 390,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 386, 386, 385, 385, 387, 387, 76, 76, 76,
	76, 163, 163, 22, 22, 79, 79, 420, 420, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 394,
	394, 394, 24, 24, 83, 84, 84, 84, 289, 289,
	289, 289, 289, 87, 87, 87, 87, 241, 241, 242,
	242, 88, 88, 88, 88, 89, 89, 89, 89, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 123, 262, 262, 261, 261, 260, 260, 260,
	263, 263, 263, 263, 304, 304, 304, 86, 86, 86,
	98, 98, 93, 93, 96, 96, 96, 96, 99, 99,
	100, 100, 101, 101, 94, 95, 43, 44, 44, 44,
	44, 45, 91, 91, 91, 92, 92, 92, 92, 113,
	113, 114, 114, 470, 470, 470, 90, 471, 105, 106,
	106, 108, 108, 108, 109, 109, 109, 110, 110, 110,
	267, 267, 267, 267, 267, 267, 267, 107, 107, 107,
	117, 117, 121, 121, 121, 121, 120, 120, 120, 120,
	216, 216, 221, 296, 296, 197, 197, 217, 217, 222,
	222, 222, 223, 223, 224, 224, 224, 224, 224, 219,
	219, 218, 218, 220, 184, 184, 184, 184, 182, 182,
	182, 182, 182, 182, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 180,
	180, 294, 294, 294, 294, 293, 293, 293, 125, 125,
	130, 130, 132, 132, 132, 132, 132, 132, 132, 132,
	135, 199, 199, 472, 472, 153, 153, 154, 154, 154,
	154, 155, 155, 155, 155, 155, 157, 157, 157, 158,
	158, 158, 158, 158, 158, 159, 160, 160, 156, 156,
	156, 178, 178, 235, 235, 236, 236, 234, 234, 238,
	238, 131, 131, 133, 133, 133, 133, 138, 138, 139,
	139, 140, 140, 301, 301, 301, 144, 144, 144, 146,
	145, 145, 145, 145, 145, 145, 147, 147, 457, 458,
	458, 459, 459, 459, 459, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 460, 461, 461, 462, 462, 148,
	148, 150, 151, 151, 149, 149, 149, 149, 149, 149,
	161, 161, 152, 164, 164, 164, 164, 165, 165, 122,
	122, 122, 122, 122, 122, 122, 122, 259, 259, 167,
	167, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 193, 193, 193, 193, 193, 193, 170, 170, 170,
	170, 170, 170, 170, 116, 116, 194, 194, 194, 137,
	136, 136, 119, 119, 118, 118, 195, 195, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 187, 187, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 192, 192, 192, 192, 192, 469,
	469, 189, 189, 188, 188, 188, 188, 188, 188, 112,
	112, 112, 112, 112, 302, 302, 302, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 69,
	69, 206, 206, 115, 115, 204, 204, 205, 207, 207,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 177, 177,
	177, 208, 208, 196, 196, 124, 209, 209, 210, 211,
	211, 212, 212, 215, 228, 228, 228, 229, 229, 229,
	229, 179, 179, 179, 230, 230, 230, 230, 172, 172,
	171, 171, 171, 173, 173, 173, 173, 174, 174, 473,
	473, 233, 233, 232, 232, 231, 231, 231, 231, 231,
	231, 231, 244, 244, 198, 198, 201, 201, 200, 202,
	245, 245, 250, 250, 250, 250, 247, 247, 251, 251,
	251, 251, 254, 254, 255, 255, 255, 252, 252, 252,
	252, 249, 249, 249, 298, 298, 298, 298, 257, 257,
	266, 266, 264, 264, 265, 265, 258, 258, 317, 317,
	317, 272, 272, 273, 273, 274, 274, 268, 268, 268,
	268, 269, 269, 295, 295, 291, 291, 297, 297, 292,
	292, 299, 299, 300, 300, 300, 300, 397, 397, 398,
	398, 398, 338, 338, 409, 409, 339, 339, 410, 410,
	411, 411, 406, 406, 407, 407, 408, 408, 408, 47,
	412, 412, 413, 413, 414, 414, 414, 414, 48, 49,
	49, 49, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 288, 288, 288, 288,
	288, 288, 285, 285, 285, 285, 285, 285, 286, 286,
	286, 465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 9, 9, 10, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 0, 2, 3, 4, 5, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 0, 0,
	0, 2, 3, 2, 3, 12, 12, 13, 5, 5,
	16, 12, 9, 4, 15, 1, 6, 9, 8, 0,
	3, 3, 6, 3, 0, 3, 4, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	10, 9, 5, 7, 0, 3, 9, 9, 9, 10,
	6, 8, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 3, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 2, 4, 5, 4, 6, 7,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 0, 1,
	4, 3, 3, 3, 6, 6, 5, 5, 5, 5,
	4, 3, 5, 1, 3, 1, 3, 3, 5, 0,
	5, 0, 3, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 8, 4, 7, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	5, 7, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 2, 5, 0, 1, 2, 1,
	3, 5, 7, 8, 7, 9, 10, 7, 9, 10,
	2, 2, 2, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 4, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 5, 5, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 3, 6, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 3, 2, 3, 3, 2, 3, 3, 2,
	3, 4, 2, 2, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 3, 2, 2, 4, 3, 1,
	0, 1, 3, 3, 3, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 1, 0, 1, 1, 1, 1,
	2, 2, 2, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 5,
	5, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 2, 2, 3, 3, 0, 3,
	0, 3, 1, 1, 0, 1, 5, 4, 2, 3,
	3, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 3, 5, 5,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 5, 3,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 3, 3, 3,
	3, 2, 1, 11, 12, 12, 13, 13, 0, 1,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	2, 3, 3, 3, 3, 4, 5, 3, 3, 4,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 6, 1,
	4, 5, 5, 6, 0, 1, 0, 3, 1, 1,
	0, 2, 0, 8, 9, 0, 2, 0, 1, 2,
	0, 2, 1, 1, 1, 1, 4, 3, 7, 5,
	5, 1, 3, 5, 4, 9, 11, 9, 2, 2,
	3, 3, 4, 4, 4, 4, 3, 3, 3, 3,
	6, 5, 4, 4, 5, 5, 8, 4, 5, 7,
	2, 2, 2, 2, 3, 4, 3, 4, 1, 3,
	3, 3, 3, 4, 5, 5, 3, 7, 6, 5,
	2, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 4, 4, 3, 5, 3, 1, 1, 1, 1,
	6, 0, 1, 2, 0, 1, 0, 1, 1, 2,
	5, 3, 4, 4, 4, 4, 4, 4, 3, 7,
	6, 8, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 3, 1, 3, 8, 8, 8, 11, 12,
	15, 0, 3, 3, 3, 3, 5, 3, 5, 6,
	6, 4, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 8, 5, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 4, 1, 3, 1,
	1, 2, 2, 4, 4, 3, 3, 3, 3, 3,
	4, 3, 5, 5, 5, 4, 4, 4, 4, 3,
	2, 2, 6, 2, 4, 3, 3, 4, 4, 5,
	8, 6, 3, 4, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 4, 2, 4,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 4, 1,
	0, 1, 2, 1, 2, 4, 4, 5, 0, 1,
	0, 3, 0, 2, 4, 4, 2, 3, 4, 4,
	5, 3, 4, 5, 4, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	0, 2, 2, 2, 2, 2, 2, 0, 1, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 2, 2, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 5, 1, 2, 3, 1, 1,
	2, 2, 4, 0, 1, 2, 6, 1, 3, 2,
	4, 1, 1, 1, 1, 1, 5, 5, 8, 5,
	5, 8, 5, 5, 8, 2, 2, 2, 3, 4,
	4, 0, 1, 3, 1, 0, 3, 1, 3, 1,
	3, 4, 6, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 2, 2, 2, 12, 1,
	3, 3, 3, 6, 7, 2, 3, 3, 4, 4,
	5, 5, 8, 8, 3, 3, 4, 3, 4, 1,
	3, 3, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 4, 6, 6, 6, 4, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	4, 4, 4, 2, 2, 2, 1, 2, 2, 2,
	8, 8, 6, 6, 3, 4, 2, 2, 2, 0,
	2, 1, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 2, 1, 2, 1, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 1, 0, 2, 4, 4, 1, 4,
	1, 3, 4, 1, 4, 3, 6, 2, 3, 1,
	1, 0, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 0, 5, 1, 3, 2, 3, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 4,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 0, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 2, 0, 4, 4, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 191,
	-455, -75, -74, -76, -77, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -96, 450, 451, -470, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -11, 200, -12, -13, -7,
	764, -211, 20, -105, -471, -211, -10, -9, -4, 653,
	-105, -111, 14, 15, 13, 558, -105, -355, 29, -3,
	118, 77, -8, 11, -269, -280, 98, 549, 199, -278,
	331, 333, 209, -266, -268, -276, 257, 267, 50, 211,
	210, 268, 200, 331, -266, 201, 203, 549, 199, 240,
	239, 331, 333, 272, 647, 200, -149, -299, -285, -287,
	-286, 349, 83, -284, 578, 582, 272, 585, 586, 591,
	339, 91, 53, 369, 572, 361, 370, 221, 527, 573,
	332, 338, 341, 362, 736, 371, 373, 374, 570, 571,
	55, 203, 560, 561, 564, 214, 751, 354, 222, 650,
	268, 759, 754, 756, 343, 757, 517, 609, 447, 466,
	458, 485, 651, 707, 280, 302, 455, 386, 534, 610,
	346, 295, 367, 708, 322, 290, 523, 529, 305, 450,
	611, 612, 613, 543, 248, 278, 709, 456, 299, 301,
	300, 262, 577, 306, 42, 227, 482, 660, 648, 257,
	710, 616, 703, 615, 251, 284, 614, 329, 41, 33,
	617, 250, 546, 109, 277, 711, 377, 531, 618, 503,
	378, 246, 273, 275, 291, 713, 655, 350, 233, 530,
	432, 478, 360, 128, 255, 317, 379, 714, 504, 508,
	715, 535, 336, 316, 621, 716, 717, 380, 659, 285,
	718, 202, 342, 622, 281, 719, 258, 445, 537, 347,
	502, 212, 652, 223, 57, 237, 538, 506, 624, 512,
	515, 433, 376, 434, 720, 721, 722, 723, 358, 356,
	626, 357, 359, 628, 269, 297, 656, 625, 658, 62,
	197, 662, 510, 509, 511, 298, 676, 533, 490, 488,
	724, 725, 351, 218, 726, 727, 489, 23, 728, 729,
	541, 321, 353, 730, 731, 732, 627, 294, 632, 608,
	733, 734, 532, 505, 507, 256, 127, 647, 279, 735,
	355, 528, 364, 663, 654, 340, 292, 633, 737, 382,
	293, 236, 229, 542, 427, 428, 443, 444, 372, 738,
	431, 739, 740, 741, 742, 334, 333, 451, 365, 634,
	452, 274, 303, 657, 743, 635, 636, 744, 745, 266,
	249, 545, 536, 61, 519, 514, 368, 383, 457, 429,
	440, 435, 436, 438, 439, 442, 441, 437, 446, 522,
	448, 276, 243, 637, 638, 639, 430, 640, 12, 296,
	348, 641, 642, 643, 526, 366, 304, 267, 270, 493,
	238, 746, 747, 480, 481, 449, 241, 231, 122, 544,
	387, 327, 702, 331, 384, 289, 60, 244, 54, 748,
	749, 271, 245, 661, 288, 453, 345, 664, 200, 83,
	-289, -284, -287, -288, -285, -286, 349, 232, 59, 96,
	64, 63, 83, -284, 647, 144, 486, 534, 191, 524,
	525, 531, -348, 532, 239, 427, 368, 242, -304, 200,
	-262, 241, 523, 336, 355, 582, 245, 246, 273, 428,
	434, 201, 202, 38, 536, 535, 527, -299, -98, 453,
	-98, -98, 204, 453, -113, 233, 195, -149, 232, -68,
	83, 309, -68, 35, 83, -161, -291, -299, 83, -284,
	42, 83, 452, 526, 526, 85, 654, 248, 27, -444,
	-418, 364, -443, -416, 192, 191, 15, 193, 272, 369,
	370, 335, 201, 13, 36, 736, 219, 371, 372, 11,
	224, 373, 374, 240, 14, 375, -445, -421, 388, 389,
	390, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 82, 83, -284,
	-264, 206, 372, 427, 449, 427, 427, -271, -270, 385,
	512, 144, -128, 706, -126, -134, -301, -299, -285, -286,
	-199, -472, 253, 549, -258, 331, -278, 205, -130, -132,
	-133, -153, -136, 704, -465, -131, -457, -149, -137, 83,
	607, -109, 10, -108, -110, 9, 8, -109, -229, 22,
	21, -267, -106, -229, -466, 79, -466, -128, -120, 135,
	-122, -299, -166, 101, -176, 34, 30, -175, 349, 232,
	-167, -203, -285, -202, -137, 144, -303, 133, 134, 141,
	102, 187, -187, -185, -186, -188, -190, -191, 227, 480,
	481, 82, 84, 92, 85, 86, 87, 88, 93, 94,
	95, -291, -287, -286, -283, 578, 582, 585, 586, 591,
	-200, -465, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 67, 68, 576, 199, 559, 560,
	483, 561, 13, 562, 563, 564, 649, 221, 568, 104,
	56, 326, 550, 551, 555, -192, 552, 556, 557, 570,
	571, 572, 573, 206, 549, 139, 558, 595, 596, 597,
	598, 599, 600, 601, 602, 604, 605, 603, 579, 580,
	581, 583, 584, 587, 588, 589, 590, 592, 593, 594,
	678, 196, 192, 195, 100, 29, 31, 679, 254, 103,
	464, 498, 567, 21, 25, 215, 198, 486, 213, 143,
	208, 216, 311, 313, 191, 71, 680, 547, 312, 524,
	674, 671, 673, 672, 477, 475, 310, 681, 15, 32,
	225, 261, 682, 473, 193, 252, 107, 108, 683, 47,
	46, 8, 314, 226, 320, 474, 684, 685, 24, 74,
	217, 16, 211, 242, 758, 686, 335, 18, 126, 19,
	687, 668, 670, 669, 205, 120, 201, 750, 69, 259,
	688, 462, 467, 468, 469, 470, 471, 463, 97, 689,
	690, 117, 325, 65, 607, 38, 247, 704, 565, 324,
	691, 44, 43, 497, 501, 496, 323, 513, 118, 22,
	553, 554, 36, 692, 693, 235, 500, 461, 495, 705,
	694, 666, 264, 72, 385, 476, 762, 39, 75, 230,
	381, 352, 48, 98, 20, 260, 70, 40, 574, 123,
	763, 479, 207, 239, 695, 539, 263, 696, 124, 472,
	706, 219, 119, 454, 194, 363, 308, 220, 330, 26,
	337, 697, 253, 125, 525, 665, 698, 569, 35, 224,
	307, 460, 209, 699, 265, 319, 309, 318, 700, 701,
	344, 49, 760, 677, 200, 45, 106, 499, 459, 494,
	204, 566, 240, 315, 9, 50, 37, 520, 14, 375,
	73, 76, 487, 484, 492, 491, 210, 761, 17, 328,
	575, 653, 540, 99, 675, 521, 548, -105, -105, -105,
	-247, 449, -254, -251, 535, 536, -252, -255, -249, -203,
	512, 733, 734, 534, 486, 533, -291, -299, -285, 349,
	232, 144, 579, 580, 581, 104, 483, 559, 595, 550,
	552, 547, 551, 549, 34, 596, 30, 95, 597, 576,
	206, 13, 187, 583, 584, 598, 599, 600, 67, 553,
	554, 649, 139, 101, 601, 602, 93, 604, 605, 326,
	558, 68, 603, 199, 589, 588, 587, 590, 562, 563,
	94, 555, 556, 557, 56, 593, 592, 594, -2, -6,
	-465, -149, -356, -343, -346, -291, -285, -287, -288, 228,
	-286, 216, -384, 83, -284, 213, -211, -105, 201, 203,
	558, -265, 206, -265, 240, 239, 272, -279, 265, -265,
	-265, 737, 200, -278, 110, 110, -79, -149, -420, -415,
	-421, 200, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, 83, -289, -149, 188, -84, -149, -141, 16, 16,
	76, 76, 83, -289, 83, 433, 376, 35, -263, 118,
	17, 549, 199, 200, 239, 240, 203, 272, -263, -350,
	16, 120, 243, 243, 243, 243, 243, 244, 243, -261,
	526, 528, 529, 530, -260, 16, 120, 17, -123, 118,
	24, -465, -229, -229, -260, 243, 136, -100, 100, -100,
	83, 452, 204, -114, 234, -113, -114, -178, -156, 29,
	6, 7, 110, 35, 35, 82, 60, 35, -63, -62,
	-64, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 35, -399, 77, 188, -338, 512, 83,
	-412, -413, -149, 85, 85, 75, 355, 75, 78, 204,
	78, 75, -446, 365, 77, -446, 333, 365, 366, 267,
	331, 203, -446, -446, 333, -446, -446, -446, 352, -446,
	-446, 526, -446, -446, -446, 367, 368, -446, 524, 203,
	-446, -446, -446, -446, -446, 80, 27, -444, -418, 364,
	30, 429, 432, 539, 653, -55, 445, 446, -168, 27,
	-376, 144, 377, 378, 379, 380, 376, 355, 381, 382,
	383, 243, 384, 200, 526, 376, -6, -126, 78, -233,
	-465, 78, -200, -465, 83, -331, -330, -327, -328, -329,
	-326, 34, 200, -264, 272, -144, -146, -145, -147, 65,
	69, 71, 66, 67, 68, 527, 72, -274, 29, -136,
	-465, -125, -9, -135, -130, -465, -154, 123, -164, -274,
	-155, 73, 205, 74, 29, -156, -157, -158, -159, -160,
	6, 7, 55, -465, -465, -7, -8, 27, 28, -14,
	-7, -12, -14, 27, 28, 27, 28, -7, -230, 24,
	36, -179, 85, 88, -203, -212, -215, -122, -299, 59,
	-117, 27, 28, 66, 58, 64, 63, -226, 90, 16,
	-294, 100, 98, 99, 117, -293, 29, 83, 82, -289,
	188, -122, -170, 120, 101, 118, 119, 103, 130, 129,
	140, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	143, 110, 111, 112, 113, 114, 115, 116, -259, -465,
	-137, -465, 188, -465, 188, 189, 190, 188, -176, -176,
	-176, -176, -176, -176, -176, 82, 82, 82, -465, 188,
	188, 188, -465, -465, -465, -465, -465, -195, -122, 653,
	-465, 200, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -206, -122, -465,
	-465, -469, -465, -469, -469, -189, -469, -465, -189, -189,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -189, -189, -189, -465, -258, -258, 16, -141, -142,
	-149, -152, -299, 78, -248, -253, 537, 539, 449, -252,
	-252, -298, -291, 82, 34, 144, -354, 110, 121, 35,
	188, -211, 79, 78, -306, -310, -312, -311, -313, -308,
	-309, -69, 490, 488, 484, 483, 486, 489, 144, 487,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 35, 227, 480, 481, 482, 664, 504, 505, 506,
	507, 508, 509, 510, 511, 458, 485, 651, 459, 460,
	461, 462, 463, 464, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, -306, -306, -306,
	-306, -306, -290, -384, 83, -289, 77, -229, -267, -265,
	-265, -280, 209, -278, 83, 101, 83, -148, -291, -299,
	-161, -265, 266, -424, -423, -415, -418, 677, -265, -279,
	-415, 271, 269, 270, 78, 204, 78, 204, 80, -264,
	-291, -143, -149, 83, 83, -148, -161, -417, -415, -418,
	-162, -291, -299, -300, -299, -282, -287, -288, 678, 196,
	27, 192, 195, 100, 29, 31, 679, 254, 103, 464,
	144, 579, 580, 581, 498, 567, 21, 25, 215, 104,
	198, 483, 486, 213, 143, 208, 216, 311, 313, 559,
	595, 191, 71, 680, 550, 552, 547, 551, 312, 549,
	524, 674, 671, 673, 672, 477, 475, 310, 34, 681,
	15, 596, 32, 225, 261, 28, 682, 137, 473, 193,
	606, 252, 107, 108, 683, 47, 46, 8, 30, 314,
	226, 95, 320, 597, 474, 684, 685, 24, 74, 217,
	16, 211, 242, 758, 686, 335, 18, 576, 126, 19,
	687, 668, 670, 669, 206, 205, 120, 201, 750, 69,
	259, 13, 688, 462, 467, 468, 469, 470, 471, 463,
	187, 97, 689, 690, 117, 325, 65, 583, 584, 607,
	51, 38, 247, 598, 599, 704, 600, 565, 324, 691,
	44, 43, 497, 501, 496, 323, 513, 67, 118, 22,
	553, 554, 36, 692, 693, 649, 235, 500, 461, 495,
	705, 694, 666, 139, 264, 72, 101, 385, 601, 602,
	93, 476, 762, 39, 75, 230, 381, 352, 48, 98,
	20, 260, 70, 40, 574, 123, 763, 604, 479, 207,
	239, 695, 539, 263, 696, 124, 605, 472, 706, 219,
	119, 454, 194, 326, 558, 363, 308, 220, 330, 26,
	337, 68, 697, 253, 125, 603, 199, 525, 665, 11,
	698, 569, 35, 224, 307, 460, 209, 699, 265, 319,
	309, 318, 700, 58, 701, 344, 49, 589, 588, 587,
	590, 760, 66, 562, 563, 677, 200, 45, 106, 499,
	459, 494, 204, 566, 240, 94, 315, 9, 50, 37,
	520, 14, 375, 73, 76, 555, 556, 557, 56, 487,
	484, 492, 593, 491, 592, 594, 210, 761, 105, 17,
	328, 575, 653, 540, 99, 675, 521, 14, 193, 78,
	82, -242, 83, -289, 82, -242, -241, -242, -241, 243,
	-263, 82, -303, -122, -265, -265, -149, -149, -149, -149,
	-149, -149, -263, -263, -263, -263, -260, 16, -260, -263,
	-299, -299, -122, -176, -415, 551, 135, -263, -299, -101,
	-99, 218, -99, -101, 83, 83, 452, -92, -4, -18,
	-16, -17, -114, -9, 39, 29, 29, 83, -63, -63,
	82, -63, 78, 110, -63, -178, 79, -195, -291, -397,
	750, 78, -414, 29, 539, 540, 513, -448, 200, 242,
	239, 75, -448, -443, 372, -417, -416, -415, -446, -447,
	-291, -446, -446, -446, 526, -446, -446, -446, -446, -446,
	-446, -446, -446, -446, -421, 75, 78, 355, 75, 16,
	75, 204, -379, -381, 443, 444, 540, 541, 456, 376,
	376, 376, 376, 376, 376, -377, -141, 653, -377, -141,
	204, 254, -134, 29, -232, -231, -292, -285, -286, -287,
	-288, 228, -291, -282, -472, -331, -328, -327, -329, 486,
	534, 143, 546, -149, -415, -162, -132, -132, -130, -132,
	65, 65, 65, 70, 65, 70, 70, 65, 65, -145,
	-301, -274, 78, -466, -466, -466, -9, -465, -301, -164,
	-274, 201, 201, 201, 103, 16, 53, 27, 103, 16,
	53, 27, 103, 16, 53, 27, -119, -118, -121, 135,
	-122, -299, -176, -243, 97, 14, 120, 78, 23, 78,
	-228, 31, 32, 188, -177, 60, 85, 88, -243, 78,
	-120, -149, -122, -122, -122, -193, 93, 101, 94, 95,
	-293, 228, 135, -300, -292, -287, -285, -286, 349, 232,
	-282, -176, -194, -200, -137, 89, 120, 118, 119, 103,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -176, -302, 83, 82, 144, 83,
	-292, -118, -292, -175, 227, 480, 481, 93, -175, -291,
	-291, -107, 27, 28, -292, 527, -291, -292, -107, -107,
	-107, -107, -107, 78, -466, -118, -118, -118, -466, -122,
	-122, -118, -176, -118, -203, 82, -118, -203, 82, -118,
	-176, 565, 566, 567, -118, -118, -107, -204, -205, 105,
	-203, -285, -288, 349, 232, -118, -466, 85, -182, -183,
	656, 665, 666, 668, 671, 664, 663, 662, 660, 659,
	658, 661, 657, 675, 674, 673, 672, 670, 669, 667,
	-182, -182, -184, 227, 482, 480, 481, -118, -119, -118,
	-118, -466, -466, -121, -118, -121, -118, -118, -121, -466,
	-466, -466, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -118, -466, 85, -151, 97, -149, -125,
	-149, -141, -467, 16, 76, -467, 78, 188, -251, -254,
	78, 538, 540, 541, -248, -323, -324, 143, 75, 96,
	82, -122, -292, -300, -229, -375, -343, -344, -345, -346,
	-368, 216, -383, 207, 209, 211, 210, 50, -347, 217,
	201, 51, -307, -333, 519, 520, -315, 77, -314, 77,
	-69, 484, 483, 486, -314, 484, 491, -314, 491, 491,
	-314, -314, -314, 484, 77, 77, -315, -315, -315, -335,
	77, -335, 479, -336, 77, -336, -336, -336, -336, -307,
	-307, -307, -307, -307, -384, -122, -230, -291, -149, 203,
	737, -331, 30, -331, -70, 254, 222, 188, 77, -162,
	257, 258, -419, 78, 34, -425, 332, 85, 206, -149,
	232, -149, -149, -415, -415, -421, -141, 75, 78, 78,
	188, 716, 716, -149, 78, 82, 83, 83, -178, -351,
	16, 120, -263, -149, -178, -116, 228, 76, -469, -466,
	454, 455, 83, -92, -176, 39, 39, -62, -175, -291,
	79, -398, 205, 558, 82, -413, -301, 512, 540, -449,
	135, -291, -448, -449, -452, 653, 204, 79, 78, -446,
	-448, 335, 78, -448, -417, -415, -378, -380, 435, 437,
	438, 436, 439, 440, 441, 442, 78, 110, 110, 457,
	-382, 24, -377, 539, -377, 82, -176, -136, -466, 78,
	188, -200, 35, -353, -354, -353, -353, -82, -390, -360,
	-80, -388, 123, 196, 193, 192, 268, 198, -326, 559,
	251, 250, 284, 285, 74, 36, 197, 194, -72, -81,
	231, 290, 236, 291, 195, 230, 292, 229, 293, 653,
	288, 757, 517, 609, 610, 643, 91, 613, 248, 42,
	201, 623, 616, 546, 619, 620, 377, 618, 622, 212,
	626, 625, 627, 629, 630, 631, 341, 634, 635, 636,
	249, 637, 638, 639, 366, 644, 9, -426, -425, -432,
	75, -139, -138, 75, 76, -140, 75, -138, 65, 65,
	65, -236, 77, -301, -130, -466, -238, -291, -164, -301,
	-465, -465, -465, -176, -176, 120, -176, -176, 120, -176,
	-176, 120, -466, 78, 188, 78, -240, 41, 40, -291,
	514, 61, -179, -179, -215, -257, 24, 16, 56, 56,
	-127, 16, -226, -226, 93, 94, 95, 188, -465, -194,
	-176, -176, -176, -116, 100, -466, -466, -119, -118, -118,
	-118, -118, -118, -122, -466, -466, -466, 78, 76, 29,
	-466, 76, 120, -466, 16, 16, -466, 16, 16, -466,
	-466, 16, -176, -176, -176, -466, -466, -118, -207, -205,
	107, -122, -466, -466, -466, -466, -466, 78, 78, 16,
	78, -466, -466, -466, -466, -216, 574, -216, -466, -466,
	-466, -466, -466, -466, -216, -216, -216, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -466, -466, -466,
	-237, 123, -149, 35, -237, 76, -125, -125, -152, -299,
	135, -253, -256, 542, 539, 545, 83, 82, 144, 82,
	188, -230, -359, -374, 78, -360, 757, 517, 609, -326,
	610, 643, 91, 613, 248, 42, 201, 623, 616, 546,
	619, 620, 377, 618, 622, 212, 626, 625, 627, 629,
	630, 631, 341, 634, 448, 635, 636, 249, 637, 638,
	639, 366, 644, 9, 653, 77, -352, -290, -383, 83,
	-284, 51, -347, -349, -347, -347, -347, -352, 83, -284,
	-352, 51, 719, 93, 101, -322, -324, 144, -319, -320,
	-337, -340, -316, 29, 758, 522, 219, -346, 486, 534,
	34, 75, 517, 207, 51, 50, 211, 91, -334, 521,
	85, 85, 585, -314, 491, -314, -314, -314, -314, -314,
	-341, 82, -341, 85, -335, 85, 79, -295, 76, -233,
	-149, 677, -71, 13, 14, 15, -291, -400, -401, -402,
	-291, 120, 259, 260, 75, -435, 363, -423, 333, 342,
	100, 21, 653, -456, 101, 204, 204, -394, 220, 215,
	-149, -149, -415, -291, 75, 75, -242, -165, 17, 83,
	83, -260, -263, -176, -418, 245, 246, -176, -176, -150,
	97, -414, 204, 188, 188, -449, 204, 354, -417, -291,
	-449, 352, 335, -449, -54, 205, 16, 78, 110, 110,
	110, 110, 110, 110, 110, 110, -381, 77, 77, 386,
	36, -231, -292, -353, 83, 82, 144, 83, 82, 144,
	82, -389, 78, -390, 196, 193, 284, 285, -388, 21,
	-275, -347, -396, -395, -345, -346, 123, 208, 216, 216,
	213, -275, -347, 207, 217, 123, 216, 213, -275, 201,
	-353, -275, 486, 143, 204, 38, 38, 366, 123, 366,
	123, -353, -275, 208, -347, -272, 216, -273, 204, 29,
	289, 123, 123, 123, 123, 123, 123, 123, 123, 294,
	677, -353, -353, -353, -353, -353, -353, -353, -353, 615,
	615, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -357, -453, 82, -463, 91, 272,
	341, 83, -284, -282, 85, 87, 86, -353, -353, -438,
	653, -163, 194, 278, 274, -122, 77, -122, -234, -291,
	-236, -466, 78, -164, -234, -234, -234, 100, 204, -465,
	100, 204, -465, 100, 204, -465, -274, -121, 135, -300,
	82, 78, 82, 82, 515, 62, -149, -165, 606, -125,
	-120, 135, -292, -119, -116, 100, -176, -466, -466, -466,
	-466, -466, -466, -305, 144, 483, 486, 227, 482, 475,
	473, 472, 474, 502, 488, 519, 480, 520, 664, -302,
	-305, -302, -176, -176, -176, -176, -176, -176, 16, 16,
	16, 650, -211, 109, -122, 106, -176, -176, -176, -176,
	-291, -221, -465, -216, -216, -216, -216, -216, -216, -217,
	-216, -217, -217, -217, -217, -217, -217, -217, -217, -217,
	-217, -217, -172, -173, 35, -171, -9, -465, -174, -473,
	56, 60, -465, -245, -250, -203, -285, -288, 228, -165,
	-125, -165, -165, 188, 539, 543, 544, -374, -353, -353,
	-353, 534, 486, 143, -353, -353, -353, -353, -353, 615,
	615, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, 449, -353,
	-353, -353, -353, -353, -353, -357, -453, -353, -353, 677,
	-370, -369, 83, -289, 207, 50, -383, -352, -352, -352,
	-352, -352, -102, -290, 93, -465, 759, 85, -149, 35,
	83, 144, 82, -175, 134, -303, -167, -186, -465, 94,
	95, 550, 551, 555, 552, 556, 557, 570, 571, 572,
	573, 547, 553, 554, 14, 51, 51, 51, 82, 79,
	79, 79, -314, 79, 78, 79, 78, 79, 78, -169,
	711, 712, 75, -291, 29, -233, 85, 75, 79, 78,
	-306, -291, -291, -291, 274, -438, 338, -436, -434, 344,
	345, 346, 347, 348, -418, 343, -425, 340, 82, 83,
	82, 676, 710, 731, 703, 30, -149, -415, -235, 77,
	-234, -235, -122, -178, -237, 200, -417, 135, 135, -291,
	204, -417, 352, -451, 653, 16, 16, 352, 16, 387,
	-417, -380, 82, 82, 82, 85, 85, 85, 85, 85,
	-141, -141, 82, 83, 82, 144, -359, -80, 196, 193,
	284, 285, -361, -362, -365, -364, 124, 624, 691, 77,
	-342, 83, -289, -265, -268, 209, 207, -465, 83, -290,
	-290, -290, -264, 51, 51, -238, -290, -290, -291, -290,
	34, 281, 282, 283, 83, 35, -353, 486, -238, 27,
	-238, 27, 34, 338, 286, 287, -342, -290, -291, -149,
	217, 213, -290, -238, 27, 85, -238, -291, -238, 27,
	-238, 27, -238, 27, -238, 27, 645, -357, -122, -357,
	-463, -463, 82, 82, 82, -353, -353, -104, 646, 218,
	-463, 82, -104, -463, -453, 82, -103, 218, 221, 223,
	-357, -357, -357, -463, -463, -463, -463, 82, -358, 34,
	617, 478, 612, 633, 611, 83, 93, 82, 82, -463,
	34, -463, 34, -463, -357, 640, -463, -465, -439, -437,
	356, 357, 358, 359, -431, 250, 251, 204, 279, 101,
	-428, 756, 275, -234, 79, 78, -154, -291, -466, -466,
	-466, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-301, 188, 529, -291, -321, -322, -208, 18, -226, -466,
	-176, -217, -217, -217, -217, -217, -466, -315, -315, -315,
	-315, -336, 479, -315, 463, -315, 463, -466, -466, -466,
	-466, 24, 24, 24, 24, -466, -176, -176, -176, -465,
	-115, 569, -122, 78, 78, -466, -466, -296, 83, -244,
	75, -244, -245, -274, -9, -466, -232, -174, -465, 11,
	56, 60, 653, 200, -198, -201, -472, -238, -165, 78,
	-354, -354, -354, -354, -211, -165, -357, -357, -357, -353,
	35, -353, -463, -463, 82, 82, 82, -353, -353, -104,
	-463, 82, -104, -463, -453, 82, -103, -357, -357, -357,
	-463, -463, -463, -463, 82, -358, 83, 93, 82, 82,
	-463, 34, -463, 34, -463, -357, 640, -463, -465, 645,
	79, 78, -315, -315, 51, -349, 77, -176, 29, 77,
	83, 144, 82, -175, 82, -176, -192, 82, 85, 85,
	-149, -225, 29, -456, -149, -403, -404, -405, 91, 652,
	101, 261, 262, 218, 263, 264, 265, -402, -306, -306,
	-306, -428, -441, -442, -440, 341, 361, 362, 349, 100,
	82, 82, 82, -427, 332, 100, 341, 21, 29, 21,
	29, 82, 82, 82, 82, 85, 76, -234, -263, -321,
	-149, -451, -417, -451, 335, -417, -417, 16, -417, 331,
	-54, 79, 79, -366, 632, -465, 529, 621, 51, -342,
	-213, 221, 222, -306, -306, -352, -349, 51, -385, -387,
	123, -291, -290, 711, 712, 711, 712, 35, 193, 749,
	719, -342, -353, -302, 35, 366, 366, 366, 366, -213,
	-273, 204, 51, -290, 204, 366, 366, 97, 653, 82,
	82, 614, 628, -454, -453, -437, 85, 85, 85, 85,
	-318, 91, 75, -162, 279, -432, 75, -181, -175, -186,
	-175, 79, -291, 78, 78, 78, 135, -465, -406, -261,
	-209, 19, 21, -321, 83, -321, 83, -176, -176, -176,
	-176, -466, -466, -466, -176, -466, 82, -176, -176, -197,
	123, -239, 26, 33, -239, -244, -301, -466, -174, -465,
	-466, -466, 78, -200, -465, -466, -211, -250, -122, -122,
	-122, -122, -229, -302, -353, -325, -453, 82, 82, 82,
	614, 628, -454, -372, -371, 76, 212, 91, 618, 636,
	749, 719, -369, -228, -228, -352, -352, -234, -466, -465,
	-234, -466, 79, 79, 77, -227, -225, 24, -226, -405,
	82, 265, 261, 265, 265, 265, 265, 266, -432, -422,
	91, 339, -440, 350, 717, 334, 363, 85, 85, 122,
	36, 37, -434, 21, 653, -425, 340, 82, 82, 340,
	82, 82, 332, -456, 42, 79, -406, -450, 29, -451,
	-450, 352, -54, -54, -417, -54, -363, 641, 85, -176,
	-465, -465, -277, 268, 79, 83, -307, -307, -295, -265,
	-352, -466, 78, -291, 34, 34, -213, -302, -302, -290,
	-291, -290, 204, -290, -465, 200, 78, -466, 329, 82,
	368, -163, -433, -183, -176, -176, -176, -458, -459, -292,
	724, -407, 44, -410, 45, -219, 575, -210, -122, -196,
	-124, -122, -466, -466, -466, -466, -112, 120, 653, -466,
	-466, -211, 21, -117, 51, -239, -236, -174, -9, -465,
	-201, -466, -229, -302, -466, -371, -453, -353, 82, -353,
	-353, 79, -332, 761, 760, -176, 79, -370, -9, -227,
	252, -227, 42, 42, 257, 258, -431, 82, 82, 34,
	351, 187, 34, 85, 187, 577, 340, 82, 83, 341,
	341, 21, -176, -407, -415, -450, -54, -386, -465, 21,
	-466, -234, -176, -465, 110, 77, -352, 77, -387, 56,
	-176, 143, 143, 204, -290, -385, -149, -453, -225, -431,
	133, -429, 276, -466, -466, -466, -466, 78, -306, 24,
	82, 608, -408, -409, -339, 48, 21, -218, -220, -291,
	78, -466, 651, 72, 654, -222, 125, 124, -195, 14,
	-9, 85, 82, 82, 219, -466, 79, -225, -9, 253,
	-27, -4, -16, -17, -18, -19, -21, -73, -22, -23,
	-28, -29, -24, -83, -87, -88, -89, -85, -96, -94,
	-95, -91, -90, -32, -34, -35, -37, -40, -41, -38,
	-39, -36, -30, -33, -42, -25, -43, -44, -45, -50,
	-51, -31, -52, -46, 104, 206, 448, 310, 321, 322,
	323, 83, 326, 328, 324, 325, 320, 330, 447, -318,
	85, 34, 85, 34, 353, 341, 29, 85, -317, 205,
	653, -385, -364, -466, -466, -234, 85, -370, -295, -370,
	237, -353, -302, -290, -466, -72, 653, -27, -318, 187,
	-430, 277, -181, -466, -459, -460, 608, 30, 730, 529,
	82, 49, 45, -411, 46, 47, 82, 78, 29, -124,
	62, 652, 655, -466, -223, 103, -224, 122, 577, -180,
	85, 187, -223, -245, -466, -149, -332, -373, -372, -281,
	653, -225, -214, 255, 256, -225, -122, -57, -58, 105,
	-122, 83, -67, -297, 313, 314, 315, -292, 83, 83,
	-56, -27, 81, -56, -122, 83, 83, -468, 16, 59,
	-176, 109, -56, 329, 660, 660, 82, -236, 85, 333,
	-466, 621, 51, -466, 79, 77, 79, 238, -302, 289,
	-225, 329, -175, -181, -433, -274, 82, 608, -465, 529,
	21, 21, 21, 21, -220, -221, 62, -224, 127, 128,
	253, 127, 128, -175, 77, 213, 280, 512, -281, -225,
	83, 83, -57, 109, 107, -58, -122, 106, 311, 312,
	316, -306, 78, 764, 447, 323, 326, 328, 764, 329,
	83, 16, 764, -225, -246, 35, 44, 125, 34, 338,
	27, -418, -465, -277, -373, -370, -373, -465, -225, -183,
	-433, -301, -461, -462, 378, 93, 34, 82, -458, -465,
	82, 82, 82, 82, 653, 100, -182, -234, 352, 213,
	213, -227, 109, 107, 104, -56, 106, -56, 24, 24,
	24, -321, -292, 109, -27, 109, -56, -56, -56, -122,
	327, -56, 97, 109, -27, -245, 8, -176, -465, 79,
	-176, 235, -27, -462, 93, 34, -461, 93, 34, 75,
	75, -175, -466, -458, 654, -224, 79, 352, 352, -20,
	-26, -19, -25, -16, -17, -18, 447, 653, 104, -56,
	764, -56, 764, -68, 85, -9, -66, -65, 85, -68,
	318, 101, 319, 83, -323, 323, 83, 764, 764, 764,
	329, -122, 764, -61, 83, -225, -418, -466, -176, -373,
	-466, -466, -225, 75, -175, 75, -175, 683, 378, 683,
	378, 75, -466, 655, -392, -393, 75, -225, -56, 109,
	-128, 764, 109, 764, 109, 107, -59, -60, 108, -27,
	78, 317, 34, 109, 109, 327, -56, 109, 109, 78,
	-367, 642, -466, 75, 75, 378, 378, 683, 378, -393,
	75, -392, 75, 15, 14, 764, 109, 104, 206, -56,
	109, 107, -60, -122, -65, -176, 83, 323, -122, 764,
	326, 328, 83, 85, -367, 75, 75, -391, 220, 215,
	218, 35, -391, 109, 104, 764, 206, -56, 106, 83,
	109, 109, 378, 683, 214, 34, 93, 109, 764, -56,
	326, 328, 206, 109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1729, 1227, 1729, 0, 1227, 0, 1227, 0, -2,
	135, 932, 933, 934, 935, 0, 1810, 0, 0, 0,
	0, 0, -2, 1189, 1190, 1193, 1190, 1190, 1219, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 734, 0, 64, 0, 1333, 2761,
	-2, 1223, 1224, 1225, -2, -2, 0, 53, 0, 60,
	2, 1737, 0, 1240, 1229, 1737, 0, 0, 49, 0,
	0, 1227, 1227, 1227, 87, 88, 0, 121, 0, 123,
	0, 0, 1729, 1227, 0, 0, 0, 1814, 1814, 337,
	1814, 1814, 1829, 0, 1832, 335, 0, 1811, 1827, 1828,
	1830, 0, 0, 0, 0, 1812, 1812, 1812, 1812, 1812,
	1812, 1812, 1812, 1812, 0, 0, 1103, 1424, 1426, 1427,
	1428, 1429, 1841, 1842, 2752, 2753, 2754, 2755, 2756, 2757,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2758, 2759, 2760, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 0, 0,
	0, 1108, 1109, 1110, 1111, 1112, 2746, 2747, 2748, 2749,
	2750, 2751, 1121, 1122, 0, 0, 0, 1180, 0, 1180,
	1140, 1141, 0, 1143, 0, 0, 0, 0, 0, 0,
	0, 1177, 1155, 1158, 1162, 0, 1737, 1737, 1177, 1168,
	0, 786, 787, 788, 1185, 1186, 1174, 1187, 1192, 1191,
	1200, 1200, 0, 1191, 1221, -2, 1221, 1361, 0, 463,
	465, 0, 486, 0, 489, 492, 1430, 0, -2, -2,
	1852, 1206, 0, 0, 1878, 1879, 0, 0, 0, 0,
	0, 2618, 235, 351, 276, 276, 276, 276, 276, 276,
	276, 0, 276, 276, 0, 276, 276, 276, 2634, 276,
	0, 276, 276, 276, 276, 276, 234, 350, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 340, 341, 342,
	0, 0, 0, 738, 1194, 743, 741, 0, 735, 732,
	733, 0, 80, 0, 67, 81, 1761, 1383, 1384, 1385,
	1330, 0, 1334, -2, 0, 1812, 0, 1817, 69, 1320,
	1321, 1322, -2, 0, 0, 1328, 1329, -2, 1480, 1841,
	0, 0, 1234, 0, 0, 1231, 1237, 0, 1744, 0,
	0, 119, 1228, 47, 48, 2762, 59, 0, 0, 1256,
	1311, 0, 1439, 2314, 1445, -2, 2227, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 2172, 0, 0, 0, 0,
	0, 2269, 1518, 1519, 1520, 1521, 1522, 1523, 2481, 2699,
	2700, 1707, 1711, 1712, 1713, 1714, 1715, 1716, -2, -2,
	-2, 1690, 1691, 1705, 0, 2752, 2753, 2755, 2756, 2757,
	1779, 0, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 2295, 2359, 2246, 2364, 2191, 2758,
	2183, 2759, 2260, 2388, 2389, 2760, 2303, 2731, 0, -2,
	2413, 2351, -2, -2, -2, 1586, -2, -2, -2, 2742,
	2743, 2728, 2733, 2253, 2201, 2311, 2352, 2192, 2213, 2232,
	2281, 2282, 2284, 2316, 2317, 2335, 2344, 2363, 2173, 2174,
	2175, 2276, 2277, 2385, 2384, 2383, 2386, 2419, 2417, 2420,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2176, 2177, 2178, 2179, 2180, 2182, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2193, 2194, 2195, -2, 2200, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2211, 2212, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2228, 2229, 2231, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2247, 2248,
	2249, 2250, 2251, 2252, 2254, 2255, 2256, 2257, 2258, 2259,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2270, 2271,
	2272, 2273, 2274, 2275, 2278, 2279, 2280, 2283, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2296, 2297,
	-2, -2, 2300, 2301, 2302, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2312, 2313, 2315, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2345,
	2346, 2347, 2348, 2349, 2350, 2353, 2354, 2355, 2356, 2357,
	2358, 2360, 2361, 2362, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2387, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2414, 2415, 2416, 2418, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 0, 1816, 1816, 0,
	106, 2701, 0, 1786, -2, -2, 1788, 0, 0, 0,
	-2, -2, -2, -2, 2184, -2, 1690, 0, 0, 0,
	0, 2172, 2173, 2174, 2175, 2181, 2183, 2191, 2192, 2196,
	2197, 2198, 2199, 2201, 2210, 2213, 2227, 2230, 2232, 2246,
	2253, 2260, 2269, 2276, 2277, 2281, 2282, 2284, 2295, 2298,
	2299, 2303, 2311, 2314, 2316, 2317, 2318, 2335, 2344, 2351,
	2352, 2359, 2363, 2364, 2383, 2384, 2385, 2386, 2388, 2389,
	2400, 2410, 2411, 2412, 2413, 2417, 2419, 2420, 122, 1729,
	0, 124, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 812, 1835, 1836, 0, 1737, 1240, 1814, 1814,
	335, 0, 0, 0, 0, 0, 1814, 330, 0, 0,
	0, 0, 1814, 337, 0, 0, 1083, 0, 1084, 0,
	345, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 1128, 1102, 0, 1104, 98, 1107, 0, 0,
	0, 0, 1125, 1126, 1129, 0, 1171, 1180, 1131, 0,
	0, 1814, 1814, 0, 0, 0, 0, 0, 1139, 0,
	814, 815, 1180, 1145, 1146, 1180, 1180, 1180, 1177, 0,
	1177, 1152, 1175, 1176, 1180, 0, 0, 0, 1157, 0,
	0, 0, 1165, 1166, 1180, 1170, 0, -2, 1198, -2,
	1207, 0, 0, 79, 1222, 1221, 0, 1226, 1362, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 488, 469,
	0, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 1361, 0, 0, 1847, 1853, 1211,
	1869, 1870, 0, 1880, 1881, 280, 0, 280, 0, 0,
	0, 0, 202, 276, 0, 204, 276, 276, 276, 0,
	276, 276, 211, 212, 276, 214, 215, 216, 276, 218,
	219, 276, 221, 222, 223, 276, 276, 226, 276, 276,
	229, 230, 231, 232, 233, 349, 0, 0, 0, 2618,
	1813, 0, 0, 0, 0, 739, 744, 745, 740, 742,
	711, 0, 0, 0, 0, 716, 717, 718, 719, 0,
	0, 722, 723, 728, 728, 0, 65, 66, 0, 0,
	0, 1333, 1331, 0, -2, 937, -2, 687, 688, 689,
	0, 684, 0, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 1389, 0, 0, 0, 0, 0, 1826, -2,
	0, 0, 0, 0, 1318, 0, 1335, 0, 1337, 0,
	-2, 0, 0, 0, 1826, 1341, 1342, 1343, 1344, 1345,
	0, 0, 0, 1482, 0, 57, 58, 1235, 1236, 54,
	62, 63, 55, 1232, 1233, 1238, 1239, 56, 73, 0,
	0, 1738, 1741, 1742, 1743, 1730, 1731, 1734, 0, 0,
	73, 1241, 1242, 1243, 1244, 1245, 1246, 0, 1230, 0,
	1257, 0, 0, 0, 0, 1312, 0, 1315, 1316, 1317,
	0, 1443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1446, 0,
	1460, 0, 0, 0, 0, 0, 0, 0, 1511, 1512,
	1513, 1514, 1515, 1516, 0, 1708, 1709, 1710, 1247, 0,
	0, 0, 1247, 1247, 1247, 1247, 1247, 0, 1486, 2426,
	0, 2391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 0, 1682, 0,
	0, 1583, 0, 1584, 1585, 1587, 1601, 0, 1588, 1589,
	0, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 1597, 1598, 0, 0, 0, 0, 0, 0,
	98, 100, 1424, 0, 107, 109, 0, 0, 2701, 1789,
	1790, 678, 1804, 1805, 1806, 1807, 0, 775, 776, 1802,
	0, 1737, 829, 0, 560, 657, 578, 579, 580, 647,
	582, 649, 0, 649, 649, 1679, 1680, 649, 649, 649,
	624, 625, 626, 627, 628, 630, 631, 632, 633, 634,
	0, 0, 606, 647, 647, 647, 610, 637, 638, 639,
	640, 641, 642, 643, 644, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	652, 652, 654, 654, 654, 654, 654, 560, 560, 560,
	560, 560, 0, 811, 1038, 1039, 0, 1744, 119, 0,
	0, 0, 0, 337, -2, 0, -2, 0, 1419, 0,
	0, 0, 0, 148, 373, 353, 133, 0, 0, 331,
	336, 332, 333, 334, 0, 0, 0, 0, 344, 0,
	0, 1091, 96, 1092, 1093, 1094, 1095, 1096, 346, 1097,
	1098, 375, 0, 1425, 1843, 1844, 1845, 1846, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 0, 0, 0,
	1113, 1115, 1119, 1120, 1114, 1116, 1123, 1117, 1124, 1169,
	1130, 1181, 0, 1183, 0, 0, 1361, 1135, 1136, 1137,
	1138, 816, 1144, 1147, 1148, 1154, 1180, 0, 1361, 1153,
	1178, 1179, 1156, 1474, 1159, 1599, 0, 1167, 1188, 1204,
	0, 1199, 0, 1205, 1209, 1208, 0, 1212, 1215, 1216,
	1217, 1218, 79, 1214, 0, 0, 0, 1220, 464, 466,
	468, 487, 0, 0, 490, 491, 493, 0, 1431, 1849,
	0, 0, 1872, 0, 1874, 1876, 0, 0, 281, 282,
	283, 280, 0, 236, 0, 298, 352, 0, 203, 0,
	278, 205, 206, 207, 276, 209, 210, 213, 217, 220,
	224, 225, 227, 228, 348, 280, 0, 0, 280, 0,
	0, 0, 737, 756, 0, 0, 1195, 1196, 0, 712,
	713, 714, 715, 730, 721, 724, 728, 0, 725, 728,
	0, 0, 82, 0, 0, 1763, 1766, 1767, 1768, 1769,
	1770, 1771, 1839, 1840, 0, 936, 690, 691, 692, 0,
	773, 773, 773, 683, 358, 385, 1379, 1381, 0, 1376,
	1387, 1388, 1390, 0, 1392, 0, 0, 1395, 1396, 1397,
	1365, 0, 0, 1327, 1479, 1481, 0, 0, 1433, 1339,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 1356, 0, 0, 0, 1357, 0, 1483, 1484, 1252,
	1253, 0, 0, 45, 0, 1745, 0, 0, 0, 0,
	1733, 1735, 1736, 0, 0, 1718, 0, 0, 70, 119,
	119, 50, 1440, 1441, 1442, 1444, 1461, 0, 1463, 1465,
	1313, 1314, 1258, 0, 1692, -2, 1694, 1695, -2, -2,
	-2, 1451, 1452, 1476, 1477, 1478, 0, 0, 0, 0,
	1474, 1456, 0, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1510, 1614, 1615, 1616, 0,
	1703, 0, 1704, 1508, 0, 0, 0, 1717, 1509, 1698,
	1517, 1482, 1248, 1249, 1701, 1702, 1699, 1700, 0, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 1558, 0,
	0, 0, 0, 0, 1492, 1707, 0, 1492, 1707, 0,
	0, 2285, 2398, 2177, 0, 0, 0, 1688, 1685, 0,
	0, 0, 0, 2746, 2747, 0, 1600, 0, 0, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	0, 0, 0, 1284, 1285, 1286, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 0, 102, 0, 1423, 0,
	-2, 0, 0, 94, 95, 0, 0, 0, 1787, 0,
	0, 0, 112, 113, 108, 1791, 679, 0, -2, 1798,
	1707, 1800, 1692, 0, 1744, -2, 545, 546, 547, 548,
	0, 793, 802, 0, 0, 791, 0, 793, 793, 0,
	789, 790, 551, 660, 658, 659, 581, 0, 611, 0,
	649, 649, 1679, 1680, 613, 649, 649, 616, 649, 649,
	619, 622, 623, 629, 0, 0, 607, 608, 609, 598,
	0, 599, 652, 601, 0, 602, 603, 604, 605, 552,
	553, 554, 555, 556, 810, 0, 300, 1833, 1761, 0,
	0, 128, 1815, 129, 0, 396, 397, 0, 302, 0,
	338, 339, 150, 0, 0, 354, 0, 139, 0, 540,
	541, 0, 1085, 0, 1087, 343, 1099, 0, 0, 0,
	0, 0, 0, 99, 0, 1182, 1132, 1133, 1134, 1437,
	0, 0, 1149, 1177, 1180, 1172, 0, 0, 1160, 0,
	1203, 1201, 1210, 1213, 1358, 0, 0, 470, 471, 472,
	494, 0, 1850, 1851, 1848, 1871, 0, 1875, 1877, 0,
	284, 286, 0, 0, 192, 0, 0, 277, 0, 208,
	0, 0, 0, 0, 194, 0, 736, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	720, 0, 726, 0, 727, 709, 710, 83, 1762, 0,
	0, 1332, 773, 0, 774, 0, 0, 1046, 939, 940,
	941, 1048, 0, -2, 1044, 1044, 773, 1044, 0, 0,
	0, 0, 0, 0, 978, 773, 1044, 1821, 0, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	1037, 773, 773, 773, 773, 773, 773, 773, 773, 0,
	0, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 0, 773, 773, 160, 359, 1081,
	0, 1373, 1380, 0, 0, 1374, 0, 1375, 1391, 1393,
	1394, 1323, 0, 1365, 1319, -2, 0, 1369, 1338, 1433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 74, 2494, 0, 77,
	0, 0, 1739, 1740, 1732, 0, 1808, 1809, 1719, 1720,
	1437, 0, 0, 1250, 1462, 1464, 1466, 0, 1482, 1453,
	1474, 1457, 0, 1454, 0, 1448, 1556, 0, 0, 0,
	0, 0, 0, 1487, 1554, 1555, 1557, 0, 0, 0,
	1561, 0, 0, 1565, 0, 0, 1607, 0, 0, 1608,
	1570, 0, 0, 0, 0, 0, 1576, 1729, 0, 1686,
	0, 0, 1579, 1580, 1581, 1582, 1602, 0, 0, 0,
	0, 1603, 1604, 1605, 1606, 1543, 0, 1544, 0, 0,
	0, 0, 0, 0, 1551, 1552, 1553, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1595,
	0, 0, 1422, 0, 1437, 0, 1437, 1437, 101, 0,
	1432, 110, 111, 0, 0, 117, 680, 681, 682, 1799,
	0, 301, 542, 830, 683, 907, 773, 773, 773, 0,
	773, 773, 773, 773, 773, 0, 0, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 0, 773, 773, 773, 773, 773,
	773, 0, 773, 773, 0, 0, 0, 0, 801, -2,
	-2, 793, 793, 793, 792, 793, 793, 784, 794, 795,
	785, 808, 561, 562, 0, 564, 565, 566, 567, 568,
	569, 570, 571, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 669, 0, 704, 706, 0, 0, 577, 661,
	0, 0, 0, 612, 649, 620, 614, 615, 617, 618,
	0, 645, 0, 0, 600, 0, 826, 0, 0, 0,
	1761, 0, 0, 398, 399, 400, 1420, 0, 303, 304,
	0, 0, 0, 0, 0, 160, 0, 374, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 1089, 1100, 1101,
	1090, 97, 347, 376, 0, 0, 1118, 1142, 0, 817,
	818, 1361, 1151, 1475, 1161, 1163, 1164, 1359, 1360, 102,
	0, 1873, 0, 0, 0, 0, 0, 0, 296, 279,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	729, 1764, 1765, 0, 696, 697, 698, 699, 700, 701,
	702, 906, 683, 1047, 0, 0, 0, 0, 1049, 914,
	0, 1814, 0, 0, 948, 949, 0, 1045, 928, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 0, 970, 971, 972, 0, 973,
	0, 0, 0, 0, 0, 0, 0, 1822, 1823, 1824,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1029, 1030, 887, 888, 889, 890,
	891, 903, 904, 905, 892, 893, 894, 0, 0, 1040,
	0, 388, 0, 0, 0, 1377, 0, 1382, 0, 1367,
	1324, -2, 0, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 1254, 0,
	0, 0, 75, 670, 1746, 1747, 46, 1721, 71, 72,
	119, 1259, 1706, 0, 1455, 0, 1458, 1524, 1267, 1267,
	1267, 1267, 1267, 0, 647, 647, 647, 1664, 647, 654,
	1667, 1669, 1670, 1671, 647, 1673, 647, 1676, 1678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 1578, 1689, 0, 0, 0, 0, 0,
	1260, 1261, 1263, 1545, 1546, 1547, 1548, 1549, 1550, 1528,
	1268, 1529, 1530, 1532, 1533, 1535, 1536, 1537, 1538, 1540,
	1541, 1542, 1772, 1772, 0, -2, 1753, 0, 1750, 1333,
	1759, 1760, 0, 1437, 1780, 0, 0, 0, 0, 1729,
	1437, 92, 93, 0, 114, 115, 116, 831, 0, 0,
	0, 773, 0, 773, 0, 0, 0, 0, 0, 773,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 862, 0,
	0, 0, 0, 0, 0, 873, 874, 0, 0, 0,
	0, 796, 647, 647, 0, 791, 800, 777, 779, 780,
	781, 783, 0, 809, 563, 0, 0, 574, 0, 0,
	675, 676, 677, 662, 0, 0, 665, 666, 0, 1449,
	1450, 1599, 1599, 1599, 1599, 1599, 1599, 0, 0, 0,
	0, 1599, 1599, 1599, 0, 703, 705, 707, 708, 648,
	650, 651, 621, 635, 0, 636, 0, 655, 0, 813,
	827, 828, 0, 1834, 118, 0, 139, 0, 310, 0,
	306, 0, 0, 0, 0, 168, 151, 152, 153, 155,
	156, 0, 0, 0, 149, 0, 356, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 1086, 1088, 0, 0,
	1364, 1106, 1438, 1180, 670, 0, 296, 285, 287, 288,
	0, 296, 299, 193, 0, 0, 0, 0, 0, 0,
	194, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 0, 731, 693, 694, 695, 938, 942, -2, 1044,
	0, 0, 920, 909, 0, 0, 918, 919, 915, 0,
	1041, 0, 0, 793, 791, 1829, 0, 0, -2, 950,
	951, 974, 0, 976, 0, 1051, 0, 0, 0, 0,
	956, 957, 958, 959, 0, 773, 0, 0, 0, 0,
	0, 0, 979, 980, 981, 982, 1041, 0, 0, 986,
	0, 0, 0, 0, 0, 1058, 0, 0, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1035, 992, 993, 994,
	995, 996, 997, 998, 999, 0, 0, 1002, 883, 884,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 880, 881, 882,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 895,
	896, 897, 898, 899, 900, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 0, 1033, 0, 161, 162,
	0, 0, 0, 0, 392, 389, 390, 0, 386, 0,
	385, 0, 0, 0, 1366, 0, 1336, 1370, 1434, 1435,
	1436, 1346, 1347, 0, 1349, 1350, 0, 1352, 1353, 0,
	1372, 0, 0, 78, 1862, 671, 1726, 0, 1251, 1525,
	1459, 1527, 1531, 1526, 1534, 1539, 1559, 1659, 670, 670,
	1665, 1666, 1668, 1672, 1674, 1675, 1677, 1563, 1560, 1562,
	1564, 0, 0, 0, 0, 1571, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 1592, 1593, 1265, 1264, 104,
	0, 104, 1772, 0, 0, 0, 0, 0, 0, -2,
	-2, -2, 2156, 2120, 1757, 1774, 0, 0, 1729, 0,
	0, 0, 0, 0, 1737, 91, 832, 833, 834, 0,
	773, 0, 837, 838, 840, 841, 842, 0, 0, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 0, 877, 0, 879,
	761, 0, 1734, 1734, 793, 793, 0, 0, 0, 0,
	672, 673, 674, 663, 664, 0, 668, 646, 0, 0,
	0, 120, 118, 138, 0, 119, 311, 312, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 305, 307, 308,
	309, 385, 186, 169, 170, 0, 0, 0, 0, 0,
	157, 158, 159, 355, 0, 0, 360, 0, 0, 0,
	0, 140, 141, 0, 143, 139, 0, 0, 1150, 1862,
	1421, 289, 296, 289, 0, 194, 194, 0, 194, 195,
	201, 758, 759, 922, 0, 0, 0, 0, 916, 0,
	944, 1042, 0, 560, 560, 1833, 1814, 793, 0, 1073,
	0, 975, 977, 952, 954, 953, 955, 0, 0, 962,
	963, 1041, 0, 967, 0, 1052, 1053, 1054, 1055, 983,
	0, 0, 0, 0, 0, 1056, 1057, 0, 0, 1000,
	1001, 1031, 1032, 0, 901, 163, 164, 165, 166, 167,
	1077, 0, 0, 1082, 387, 1081, 0, 379, 394, 395,
	0, 1378, 1368, 0, 0, 0, 1255, 0, 1864, 1858,
	1279, 0, 0, 1660, 1661, 1662, 1663, 0, 0, 0,
	0, 1572, 1573, 1574, 1609, 1577, 1684, 0, 0, 1729,
	0, 84, 119, 0, 85, 104, 1365, -2, 1751, 0,
	0, 1758, 1333, 1776, 0, 103, 1737, 1781, 1782, 1783,
	1784, 1785, 90, 835, 0, 839, 885, 886, 843, 844,
	875, 876, 0, 760, 764, 0, 773, 0, 773, 773,
	771, 772, 797, 798, 799, 778, 782, 0, 557, 0,
	0, 667, 653, 656, 0, 0, 120, 0, 120, 313,
	314, 315, 316, 318, 319, 0, 0, 0, 388, 132,
	0, 0, 171, 0, 0, 0, 0, 181, 182, 183,
	184, 185, 154, 0, 0, 357, 0, 366, 368, 0,
	367, 369, 0, 137, 0, 1363, 1864, 189, 0, 289,
	191, 297, 196, 198, 194, 197, 1071, 0, 921, 0,
	0, 0, 0, 0, 943, 1043, 549, 550, 0, 793,
	0, 1050, 0, 0, 0, 961, 964, 965, 968, 984,
	985, 0, 0, 989, 0, 0, 0, 1034, 118, 393,
	391, 388, 377, 381, 0, 0, 0, 0, 1399, 0,
	2586, 76, 1866, -2, 0, 68, 0, 1727, 1728, 1722,
	1723, 1725, 1566, 1568, 1567, 1569, 0, 0, 0, 1590,
	1591, 1269, 0, 105, 0, 86, 1749, 1752, 1754, 0,
	1775, 1777, 89, 836, 878, 765, 766, 0, 768, 0,
	0, 0, 572, 558, 559, 0, 575, 0, 118, 0,
	0, 79, 320, 321, 322, 323, 392, 187, 188, 172,
	173, 0, 175, 176, 0, 0, 0, 371, 0, 364,
	365, 0, 1105, 1818, 290, 190, 199, 908, 0, 914,
	910, 0, 0, 0, 0, 0, 1833, 0, 1074, 0,
	960, 773, 0, 0, 988, 0, 1060, 902, 79, 392,
	0, 383, 0, 1348, 1351, 1354, 0, 0, 0, 0,
	0, 0, 1865, 1860, 0, 1857, 0, 1280, 1281, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 767, 769, 770, 0, 557, 762, 144, 118, 401,
	118, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	79, 0, 79, 0, 0, 0, 446, 0, 79, 0,
	0, 177, 0, 179, 180, 370, 0, 142, 1365, 0,
	0, 0, 0, 911, 912, 0, 917, 0, 0, 0,
	0, 0, 969, 987, 1059, 0, 1036, 118, 1078, 0,
	378, 0, 379, 1825, 1400, 1401, 0, 0, 1402, 0,
	0, 0, 0, 1863, 0, 0, 1859, 0, 0, 1724,
	1610, 0, 1613, 1262, 1270, 0, 1273, 0, 0, 0,
	1309, 0, 1271, 1773, -2, 0, 573, 125, 763, 126,
	0, 144, 118, 0, 0, 131, 0, 0, 416, 0,
	0, 1835, 0, 0, -2, -2, -2, 1837, 443, 444,
	0, 495, 0, 0, 0, 460, 461, 0, 447, 0,
	462, 324, 0, 118, 174, 178, 372, 42, 0, 0,
	1072, 0, 916, 913, 762, 0, 762, 0, 966, 1061,
	1079, 118, 0, 379, 382, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 1282, 1283, 1611, 0, 1274, 1275,
	1276, 1277, 1278, 0, 0, 0, 0, 0, 127, 120,
	402, 403, 0, 0, 79, 417, 0, 79, 0, 0,
	0, 670, 0, 79, 79, 79, 79, 0, 79, 79,
	0, 448, 79, 79, 44, 0, 1819, 1820, 291, 292,
	293, 295, 0, 0, 945, 0, 947, 0, 79, 380,
	384, 1398, 1406, 1407, 0, 0, 0, 1414, 0, 0,
	1867, 1868, 1861, 1855, 0, 0, 1310, 0, 145, 0,
	0, 79, 0, 79, 414, 0, 79, 0, 0, 0,
	0, 678, 1838, 0, 496, 325, 0, 0, 0, 0,
	0, 0, 0, 327, 118, 43, 0, 0, 0, 762,
	0, 2304, 118, 1408, 0, 0, 1409, 0, 0, 0,
	0, 0, 1403, 0, 0, 1272, 803, 146, 147, 118,
	404, 405, 406, 407, 408, 409, 79, 0, 412, 0,
	79, 0, 79, 426, 427, 428, 79, 435, 437, 438,
	439, 0, 441, 442, 430, 451, 326, 79, 79, 79,
	79, 0, 79, 445, 449, 134, 294, 925, 0, 946,
	1075, 1076, 1080, 0, 0, 0, 0, 1410, 1411, 1415,
	1417, 0, 1404, 1612, 804, 805, 0, 130, 0, 411,
	80, 79, 0, -2, 0, 79, 0, 423, 0, 429,
	0, 440, 0, 328, 0, 0, 0, 0, 0, 0,
	923, 0, 925, 0, 0, 0, 0, 1416, 1418, 806,
	0, 807, 0, 0, 0, 79, 0, 415, 419, 0,
	0, 79, 424, 0, 436, 431, 329, 452, 0, 79,
	454, 457, 450, 926, 924, 0, 0, 819, 821, 822,
	0, 0, 820, 410, 413, 79, 421, 0, 79, 453,
	0, 0, 1412, 1413, 823, 824, 825, 0, 79, 0,
	455, 458, 420, 0, -2, 456, 459, 422,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:785
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:814
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:828
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:938
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:964
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1010
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1028
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1051
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1064
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1077
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1131
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1140
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1161
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1211
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1255
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 126:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1284
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1305
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1344
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1362
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1386
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1408
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1440
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1455
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1489
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1501
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1514
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1550
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1571
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.val = []AccountName(nil)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1629
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1642
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1666
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1719
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1723
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1727
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1756
		{
			yyVAL.val = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1771
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1787
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1803
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1830
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1843
		{
			yyVAL.val = false
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.val = true
		}
	case 196:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1853
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1869
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1884
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1900
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1916
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1968
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2048
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = []string(nil)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2198
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2202
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2206
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.val = false
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.val = true
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.val = false
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.val = true
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2297
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2363
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2367
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2380
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2384
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2405
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2409
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.val = ""
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2422
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2427
		{
			yyVAL.val = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2540
		{
			yyVAL.val = &Authentication{}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = yyDollar[1].val
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2550
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2566
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2578
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2582
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2600
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2630
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2635
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2639
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.val = EventStatus_Enable
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = EventStatus_Disable
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = BeforeStr
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = AfterStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.val = InsertStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = UpdateStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = DeleteStr
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2735
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2770
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2774
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2778
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2798
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2804
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 420:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2809
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2814
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 422:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2820
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2838
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2844
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2848
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2852
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2856
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2860
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2867
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2939
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2961
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2965
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2969
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2980
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 455:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2984
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 456:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2988
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2999
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 458:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3003
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3007
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.val = &Resignal{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3154
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3160
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.val = Exprs(nil)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.val = Exprs(nil)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3184
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3248
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3275
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3305
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3434
		{
			yyVAL.val = BoolVal(false)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.val = BoolVal(false)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.val = BoolVal(true)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3447
		{
			yyVAL.val = ColumnType{}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3477
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3542
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3564
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3575
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3609
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3662
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3770
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3832
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3939
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3965
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3983
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3991
		{
			yyVAL.val = BoolVal(false)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.val = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = BoolVal(true)
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4004
		{
			yyVAL.val = BoolVal(false)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.val = BoolVal(true)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4018
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.val = BoolVal(true)
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.val = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = ""
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.val = false
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.val = true
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4165
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4169
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4173
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4199
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4205
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = colKeyPrimary
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = colKey
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = colKeyUnique
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4311
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4328
		{
			yyVAL.val = false
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = true
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.val = ""
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = ""
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4350
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4360
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.val = false
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = true
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.bytes = nil
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4422
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4482
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4486
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4491
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4542
		{
			yyVAL.val = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.val = ":="
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4564
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4568
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4584
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.val = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4639
		{
			yyVAL.val = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4708
		{
			yyVAL.bytes = []byte(nil)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4732
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			yyVAL.val = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4751
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = Restrict
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = Cascade
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = NoAction
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = SetDefault
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = SetNull
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4794
		{
			yyVAL.val = true
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = true
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = false
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4807
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4945
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4953
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4969
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4993
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4997
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5005
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5033
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5106
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5137
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5150
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5166
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5174
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5184
		{
			yyVAL.val = false
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.val = true
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5193
		{
			yyVAL.val = ""
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5212
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5225
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 924:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5234
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5245
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5249
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.val = ""
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.val = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5262
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5267
		{
			yyVAL.val = string("")
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5271
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5283
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5297
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5312
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5332
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5345
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5363
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5369
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5387
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5406
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5425
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5451
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5473
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5487
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5501
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5538
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5548
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5558
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5568
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5578
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5598
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5608
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5618
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5633
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5649
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5659
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5669
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5685
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5699
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5713
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5727
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5741
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5791
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5801
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5813
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5829
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5843
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5860
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5890
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5900
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5910
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5930
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5943
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5958
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5972
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5993
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6014
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6033
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6215
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6219
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6223
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6227
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6233
		{
			yyVAL.val = true
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.val = false
		}
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6247
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6273
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6286
		{
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6288
		{
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6291
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6295
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6305
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6311
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6343
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6347
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6351
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6376
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6400
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6405
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6409
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6415
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6419
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6425
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6429
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6435
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1078:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6465
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1079:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6491
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6519
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6549
		{
			yyVAL.val = EventName{}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6553
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6559
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6563
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6599
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6615
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6619
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6625
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6650
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6675
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6693
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6710
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6727
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6747
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6767
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6782
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6797
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6816
		{

		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6820
		{
			yyVAL.val = Restrict
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = Cascade
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6830
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6843
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6858
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6864
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6868
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6872
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6885
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6889
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6893
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6897
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6903
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6907
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6914
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6918
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6924
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6928
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6932
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6936
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6946
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6950
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6960
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6971
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6982
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7005
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7017
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7030
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7043
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7054
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7065
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7076
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7087
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7097
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7107
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7120
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7130
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7141
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7151
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7161
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7172
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7184
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7196
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7210
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7223
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7234
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7248
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7260
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7270
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7281
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7294
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7304
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7316
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7327
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7340
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7349
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7360
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7371
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7382
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7393
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7407
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7417
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7427
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7437
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7455
		{
			yyVAL.val = false
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7459
		{
			yyVAL.val = true
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7465
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7469
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7475
		{
			yyVAL.val = ""
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7479
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7483
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7489
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7493
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7497
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7507
		{
			yyVAL.val = ""
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7511
		{
			yyVAL.val = SessionStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = GlobalStr
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7521
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7533
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7546
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7558
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7562
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7568
		{
			yyVAL.val = &Begin{}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7572
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7578
		{
			yyVAL.val = &Begin{}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7582
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7586
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Begin{}
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7595
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7599
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7604
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7608
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7613
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7617
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7623
		{
			yyVAL.val = &Commit{}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7629
		{
			yyVAL.val = &Rollback{}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7635
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7641
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7645
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7649
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7653
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7659
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7665
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7669
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7673
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7679
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7687
		{
			yyVAL.val = ""
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7691
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = false
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7700
		{
			yyVAL.val = true
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7712
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7732
		{
			setAllowComments(yylex, true)
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7736
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7744
		{
			yyVAL.val = Comments(nil)
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7748
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7754
		{
			yyVAL.val = UnionStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7758
		{
			yyVAL.val = UnionAllStr
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7762
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7768
		{
			yyVAL.val = IntersectStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7772
		{
			yyVAL.val = IntersectAllStr
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7776
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7782
		{
			yyVAL.val = ExceptStr
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.val = ExceptAllStr
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7795
		{
			yyVAL.val = QueryOpts{}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7799
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7810
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7821
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7832
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7843
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7854
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7866
		{
			yyVAL.val = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7870
		{
			yyVAL.val = AllStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7874
		{
			yyVAL.val = DistinctStr
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7880
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7888
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7899
		{
			yyVAL.val = &StarExpr{}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7907
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7911
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7917
		{
			yyVAL.val = &StarExpr{}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7921
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7925
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7935
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7939
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7945
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7950
		{
			yyVAL.val = ColIdent{}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7953
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7958
		{
			yyVAL.val = Exprs(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7962
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7967
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7971
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7976
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7980
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7991
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8014
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8029
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8033
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8037
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8041
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8056
		{
			yyVAL.val = Window(nil)
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8059
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8068
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8074
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8114
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8118
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8123
		{
			yyVAL.val = ColIdent{}
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8127
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8131
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8135
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8141
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8145
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8155
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8159
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8169
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8173
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8188
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8203
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8209
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8215
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8223
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8229
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8233
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8238
		{
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8240
		{
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8244
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8254
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8287
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8291
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8309
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8313
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8317
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8323
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8349
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8365
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8369
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8373
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8378
		{
			yyVAL.val = Expr(nil)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8388
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8392
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8397
		{
			yyVAL.val = Columns(nil)
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8401
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8407
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8411
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8417
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8421
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8427
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8431
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8445
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8449
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8453
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8463
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8469
		{
			yyVAL.val = JoinCondition{}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = JoinCondition{}
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8477
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8482
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8486
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8492
		{
			yyVAL.val = JoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8496
		{
			yyVAL.val = JoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8500
		{
			yyVAL.val = JoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8506
		{
			yyVAL.val = StraightJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8512
		{
			yyVAL.val = LeftJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8516
		{
			yyVAL.val = LeftJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8520
		{
			yyVAL.val = RightJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = RightJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8532
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8538
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8542
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1398:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8552
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8559
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8564
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8570
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8574
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8578
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1404:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8583
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8590
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8594
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8598
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8614
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8618
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8622
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8626
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8632
		{
			yyVAL.val = &NullVal{}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8636
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8642
		{
			yyVAL.val = &NullVal{}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8646
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8652
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8656
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8662
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8672
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8698
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8708
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8714
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8719
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8723
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8727
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8731
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = Expr(nil)
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8746
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8750
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8754
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = ""
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8790
		{
			yyVAL.val = BoolVal(true)
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8794
		{
			yyVAL.val = BoolVal(false)
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = IsNullStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = IsNotNullStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8850
		{
			yyVAL.val = IsTrueStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = IsFalseStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8868
		{
			yyVAL.val = EqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8872
		{
			yyVAL.val = LessThanStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = GreaterThanStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = LessEqualStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = NotEqualStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8897
		{
			yyVAL.val = Expr(nil)
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8901
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8907
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8911
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8915
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8921
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8931
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8947
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8953
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8963
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8967
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8971
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8979
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8983
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8987
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8991
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8995
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8999
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9003
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9007
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9011
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9015
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9027
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9031
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9035
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9039
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9063
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9071
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9085
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9089
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9093
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9113
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9127
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9131
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9135
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9139
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9143
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9147
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9151
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9200
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9204
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9208
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9251
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9255
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9259
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1563:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9287
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9303
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9307
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9311
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9315
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9319
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9323
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9327
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9331
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1575:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9335
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9339
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1577:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9351
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9355
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9360
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9364
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9375
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9388
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9392
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9396
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9416
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9424
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9432
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9453
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9457
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9467
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9471
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9475
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9493
		{
			yyVAL.val = ""
		}
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9497
		{
			yyVAL.val = BooleanModeStr
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9501
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1612:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9529
		{
			yyVAL.val = Armscii8Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9533
		{
			yyVAL.val = AsciiStr
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9537
		{
			yyVAL.val = Big5Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = UBinaryStr
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = Cp1250Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Cp1251Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = Cp1256Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Cp1257Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = Cp850Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = Cp852Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = Cp866Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Cp932Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = Dec8Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = EucjpmsStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = EuckrStr
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9589
		{
			yyVAL.val = Gb18030Str
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9593
		{
			yyVAL.val = Gb2312Str
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9597
		{
			yyVAL.val = GbkStr
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = Geostd8Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = GreekStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = HebrewStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9613
		{
			yyVAL.val = Hp8Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9617
		{
			yyVAL.val = Keybcs2Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9621
		{
			yyVAL.val = Koi8rStr
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9625
		{
			yyVAL.val = Koi8uStr
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9629
		{
			yyVAL.val = Latin1Str
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = Latin2Str
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = Latin5Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = Latin7Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = MacceStr
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9649
		{
			yyVAL.val = MacromanStr
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9653
		{
			yyVAL.val = SjisStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9657
		{
			yyVAL.val = Swe7Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9661
		{
			yyVAL.val = Tis620Str
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9665
		{
			yyVAL.val = Ucs2Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = UjisStr
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = Utf16Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = Utf16leStr
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9681
		{
			yyVAL.val = Utf32Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9693
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9699
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9703
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9707
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9723
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9727
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9734
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9738
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9742
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9758
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9788
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = Expr(nil)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9802
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9806
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9812
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9816
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9822
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9827
		{
			yyVAL.val = Expr(nil)
		}
	case 1689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9831
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9837
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9841
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9845
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9907
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9911
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9927
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = &NullVal{}
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9953
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9957
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9961
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9966
		{
			yyVAL.val = Exprs(nil)
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9976
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9980
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9991
		{
			yyVAL.val = Expr(nil)
		}
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9995
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10001
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10010
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10020
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10026
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10031
		{
			yyVAL.val = AscScr
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10035
		{
			yyVAL.val = AscScr
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10039
		{
			yyVAL.val = DescScr
		}
	case 1737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10044
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10048
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10052
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10062
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10066
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10070
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10075
		{
			yyVAL.val = ""
		}
	case 1745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10079
		{
			yyVAL.val = ForUpdateStr
		}
	case 1746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10083
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10087
		{
			yyVAL.val = ShareModeStr
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10093
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10097
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10117
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10121
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10126
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10133
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10137
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10141
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1756:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10146
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10157
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10166
		{
			yyVAL.val = Columns(nil)
		}
	case 1762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10170
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10176
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10180
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10186
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10202
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10206
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10210
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10215
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10219
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10225
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10229
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10235
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10239
		{
			yyVAL.val = ValTuple{}
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10245
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10251
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10261
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10265
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10271
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10274
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10282
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10288
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10292
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10298
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10309
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10322
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10335
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10341
		{
			yyVAL.val = SetScope_Global
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10345
		{
			yyVAL.val = SetScope_Session
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10351
		{
			yyVAL.val = SetScope_Session
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10355
		{
			yyVAL.val = SetScope_Persist
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10359
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10365
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10369
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10373
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10390
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10397
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10401
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10405
		{
			yyVAL.val = &Default{}
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10409
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10418
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10420
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10423
		{
			yyVAL.val = 0
		}
	case 1813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = 1
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = 0
		}
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = 1
		}
	case 1816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10433
		{
			yyVAL.val = ""
		}
	case 1817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10435
		{
			yyVAL.val = IgnoreStr
		}
	case 1818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10438
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10440
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10451
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10453
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10462
		{
			yyVAL.val = UniqueStr
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = FulltextStr
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10466
		{
			yyVAL.val = SpatialStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10468
		{
			yyVAL.val = VectorStr
		}
	case 1831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10471
		{
			yyVAL.val = ""
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10473
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10476
		{
			yyVAL.val = ColIdent{}
		}
	case 1834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10482
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10486
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10492
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10496
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10513
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10520
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10524
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10528
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10533
		{
			yyVAL.val = string("")
		}
	case 1848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10535
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10538
		{
			yyVAL.val = string("")
		}
	case 1850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10540
		{
			yyVAL.val = IgnoreStr
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10542
		{
			yyVAL.val = ReplaceStr
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = BoolVal(false)
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10547
		{
			yyVAL.val = BoolVal(true)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10550
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10554
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10559
		{
			yyVAL.val = BoolVal(false)
		}
	case 1857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10563
		{
			yyVAL.val = BoolVal(true)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10568
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10572
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10577
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10581
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10589
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10593
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10598
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10602
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10607
		{
			yyVAL.val = &Lines{}
		}
	case 1867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10611
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10620
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10631
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10637
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10641
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10647
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10662
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10680
		{
			yyVAL.val = LockRead
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10684
		{
			yyVAL.val = LockReadLocal
		}
	case 1876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10688
		{
			yyVAL.val = LockWrite
		}
	case 1877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10692
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10698
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10704
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10715
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10725
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11656
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11665
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
