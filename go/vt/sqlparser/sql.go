// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
	aliasedExprs             []*AliasedExpr
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const USER = 57614
const IDENTIFIED = 57615
const ROLE = 57616
const REUSE = 57617
const GRANT = 57618
const GRANTS = 57619
const REVOKE = 57620
const NONE = 57621
const ATTRIBUTE = 57622
const RANDOM = 57623
const PASSWORD = 57624
const INITIAL = 57625
const AUTHENTICATION = 57626
const SSL = 57627
const X509 = 57628
const CIPHER = 57629
const ISSUER = 57630
const SUBJECT = 57631
const ACCOUNT = 57632
const EXPIRE = 57633
const NEVER = 57634
const DAY = 57635
const OPTION = 57636
const OPTIONAL = 57637
const EXCEPT = 57638
const ADMIN = 57639
const PRIVILEGES = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FLUSH = 57645
const FAILED_LOGIN_ATTEMPTS = 57646
const PASSWORD_LOCK_TIME = 57647
const REQUIRE = 57648
const PROXY = 57649
const ROUTINE = 57650
const TABLESPACE = 57651
const CLIENT = 57652
const SLAVE = 57653
const EVENT = 57654
const EXECUTE = 57655
const FILE = 57656
const RELOAD = 57657
const REPLICATION = 57658
const SHUTDOWN = 57659
const SUPER = 57660
const USAGE = 57661
const LOGS = 57662
const ENGINE = 57663
const ERROR = 57664
const GENERAL = 57665
const HOSTS = 57666
const OPTIMIZER_COSTS = 57667
const RELAY = 57668
const SLOW = 57669
const USER_RESOURCES = 57670
const NO_WRITE_TO_BINLOG = 57671
const CHANNEL = 57672
const BEGIN = 57673
const START = 57674
const TRANSACTION = 57675
const COMMIT = 57676
const ROLLBACK = 57677
const SAVEPOINT = 57678
const WORK = 57679
const RELEASE = 57680
const CHAIN = 57681
const BIT = 57682
const TINYINT = 57683
const SMALLINT = 57684
const MEDIUMINT = 57685
const INT = 57686
const INTEGER = 57687
const BIGINT = 57688
const INTNUM = 57689
const SERIAL = 57690
const REAL = 57691
const DOUBLE = 57692
const FLOAT_TYPE = 57693
const DECIMAL = 57694
const NUMERIC = 57695
const DEC = 57696
const FIXED = 57697
const PRECISION = 57698
const TIME = 57699
const TIMESTAMP = 57700
const DATETIME = 57701
const YEAR = 57702
const CHAR = 57703
const VARCHAR = 57704
const BOOL = 57705
const CHARACTER = 57706
const VARBINARY = 57707
const NCHAR = 57708
const NVARCHAR = 57709
const NATIONAL = 57710
const VARYING = 57711
const TEXT = 57712
const TINYTEXT = 57713
const MEDIUMTEXT = 57714
const LONGTEXT = 57715
const LONG = 57716
const BLOB = 57717
const TINYBLOB = 57718
const MEDIUMBLOB = 57719
const LONGBLOB = 57720
const JSON = 57721
const ENUM = 57722
const GEOMETRY = 57723
const POINT = 57724
const LINESTRING = 57725
const POLYGON = 57726
const GEOMETRYCOLLECTION = 57727
const MULTIPOINT = 57728
const MULTILINESTRING = 57729
const MULTIPOLYGON = 57730
const LOCAL = 57731
const LOW_PRIORITY = 57732
const NULLX = 57733
const AUTO_INCREMENT = 57734
const APPROXNUM = 57735
const SIGNED = 57736
const UNSIGNED = 57737
const ZEROFILL = 57738
const SRID = 57739
const COLLATION = 57740
const DATABASES = 57741
const SCHEMAS = 57742
const TABLES = 57743
const FULL = 57744
const PROCESSLIST = 57745
const COLUMNS = 57746
const FIELDS = 57747
const ENGINES = 57748
const PLUGINS = 57749
const NAMES = 57750
const CHARSET = 57751
const GLOBAL = 57752
const SESSION = 57753
const ISOLATION = 57754
const LEVEL = 57755
const READ = 57756
const WRITE = 57757
const ONLY = 57758
const REPEATABLE = 57759
const COMMITTED = 57760
const UNCOMMITTED = 57761
const SERIALIZABLE = 57762
const ENCRYPTION = 57763
const CURRENT_TIMESTAMP = 57764
const NOW = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURRENT_USER = 57768
const CURRENT_TIME = 57769
const LOCALTIME = 57770
const LOCALTIMESTAMP = 57771
const UTC_DATE = 57772
const UTC_TIME = 57773
const UTC_TIMESTAMP = 57774
const REPLACE = 57775
const CONVERT = 57776
const CAST = 57777
const SUBSTR = 57778
const SUBSTRING = 57779
const TRIM = 57780
const LEADING = 57781
const TRAILING = 57782
const BOTH = 57783
const GROUP_CONCAT = 57784
const SEPARATOR = 57785
const TIMESTAMPADD = 57786
const TIMESTAMPDIFF = 57787
const OVER = 57788
const WINDOW = 57789
const GROUPING = 57790
const CURRENT = 57791
const AVG = 57792
const BIT_AND = 57793
const BIT_OR = 57794
const BIT_XOR = 57795
const COUNT = 57796
const JSON_ARRAYAGG = 57797
const JSON_OBJECTAGG = 57798
const MAX = 57799
const MIN = 57800
const STDDEV_POP = 57801
const STDDEV = 57802
const STD = 57803
const STDDEV_SAMP = 57804
const SUM = 57805
const VAR_POP = 57806
const VARIANCE = 57807
const VAR_SAMP = 57808
const CUME_DIST = 57809
const DENSE_RANK = 57810
const FIRST_VALUE = 57811
const LAG = 57812
const LAST_VALUE = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const ROW_NUMBER = 57817
const PERCENT_RANK = 57818
const RANK = 57819
const DUAL = 57820
const JSON_TABLE = 57821
const PATH = 57822
const AVG_ROW_LENGTH = 57823
const CHECKSUM = 57824
const COMPRESSION = 57825
const DIRECTORY = 57826
const DELAY_KEY_WRITE = 57827
const ENGINE_ATTRIBUTE = 57828
const INSERT_METHOD = 57829
const MAX_ROWS = 57830
const MIN_ROWS = 57831
const PACK_KEYS = 57832
const ROW_FORMAT = 57833
const SECONDARY_ENGINE_ATTRIBUTE = 57834
const STATS_AUTO_RECALC = 57835
const STATS_PERSISTENT = 57836
const STATS_SAMPLE_PAGES = 57837
const STORAGE = 57838
const DISK = 57839
const MEMORY = 57840
const DYNAMIC = 57841
const COMPRESSED = 57842
const REDUNDANT = 57843
const COMPACT = 57844
const LIST = 57845
const HASH = 57846
const PARTITIONS = 57847
const SUBPARTITION = 57848
const SUBPARTITIONS = 57849
const PREPARE = 57850
const DEALLOCATE = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const ACCESSIBLE = 57859
const ASENSITIVE = 57860
const CUBE = 57861
const DAY_HOUR = 57862
const DAY_MICROSECOND = 57863
const DAY_MINUTE = 57864
const DAY_SECOND = 57865
const DELAYED = 57866
const DISTINCTROW = 57867
const EMPTY = 57868
const FLOAT4 = 57869
const FLOAT8 = 57870
const GET = 57871
const HIGH_PRIORITY = 57872
const HOUR_MICROSECOND = 57873
const HOUR_MINUTE = 57874
const HOUR_SECOND = 57875
const INSENSITIVE = 57876
const INT1 = 57877
const INT2 = 57878
const INT3 = 57879
const INT4 = 57880
const INT8 = 57881
const IO_AFTER_GTIDS = 57882
const IO_BEFORE_GTIDS = 57883
const LINEAR = 57884
const MASTER_BIND = 57885
const MASTER_SSL_VERIFY_SERVER_CERT = 57886
const MIDDLEINT = 57887
const MINUTE_MICROSECOND = 57888
const MINUTE_SECOND = 57889
const PURGE = 57890
const READ_WRITE = 57891
const REPEAT = 57892
const RETURN = 57893
const RLIKE = 57894
const SECOND_MICROSECOND = 57895
const SENSITIVE = 57896
const SPECIFIC = 57897
const SQL_BIG_RESULT = 57898
const SQL_SMALL_RESULT = 57899
const VARCHARACTER = 57900
const WHILE = 57901
const YEAR_MONTH = 57902
const UNUSED = 57903
const DESCRIPTION = 57904
const LATERAL = 57905
const MEMBER = 57906
const RECURSIVE = 57907
const BUCKETS = 57908
const CLONE = 57909
const COMPONENT = 57910
const DEFINITION = 57911
const ENFORCED = 57912
const EXCLUDE = 57913
const GEOMCOLLECTION = 57914
const GET_MASTER_PUBLIC_KEY = 57915
const HISTOGRAM = 57916
const HISTORY = 57917
const INACTIVE = 57918
const INVISIBLE = 57919
const LOCKED = 57920
const MASTER_COMPRESSION_ALGORITHMS = 57921
const MASTER_PUBLIC_KEY_PATH = 57922
const MASTER_TLS_CIPHERSUITES = 57923
const MASTER_ZSTD_COMPRESSION_LEVEL = 57924
const NESTED = 57925
const NETWORK_NAMESPACE = 57926
const NOWAIT = 57927
const NULLS = 57928
const OJ = 57929
const OLD = 57930
const ORDINALITY = 57931
const ORGANIZATION = 57932
const OTHERS = 57933
const PERSIST = 57934
const PERSIST_ONLY = 57935
const PRIVILEGE_CHECKS_USER = 57936
const PROCESS = 57937
const REFERENCE = 57938
const REQUIRE_ROW_FORMAT = 57939
const RESOURCE = 57940
const RESPECT = 57941
const RESTART = 57942
const RETAIN = 57943
const SECONDARY = 57944
const SECONDARY_ENGINE = 57945
const SECONDARY_LOAD = 57946
const SECONDARY_UNLOAD = 57947
const SKIP = 57948
const THREAD_PRIORITY = 57949
const TIES = 57950
const VCPU = 57951
const VISIBLE = 57952
const SYSTEM = 57953
const INFILE = 57954
const ACTIVE = 57955
const AGGREGATE = 57956
const ANY = 57957
const ARRAY = 57958
const ASCII = 57959
const AT = 57960
const AUTOEXTEND_SIZE = 57961
const ENDS = 57962
const EVENTS = 57963
const GENERATED = 57964
const ALWAYS = 57965
const STORED = 57966
const VIRTUAL = 57967
const NVAR = 57968
const PASSWORD_LOCK = 57969

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 38,
	647, 38,
	-2, 60,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	190, 1399,
	191, 1418,
	-2, 253,
	-1, 54,
	231, 868,
	232, 868,
	-2, 857,
	-1, 73,
	5, 65,
	-2, 46,
	-1, 440,
	1, 2079,
	23, 2079,
	178, 2079,
	647, 2079,
	-2, 902,
	-1, 453,
	178, 1428,
	-2, 1422,
	-1, 454,
	178, 1429,
	-2, 1423,
	-1, 510,
	1, 554,
	647, 554,
	-2, 552,
	-1, 533,
	178, 1789,
	-2, 1066,
	-1, 563,
	178, 1897,
	-2, 1317,
	-1, 564,
	178, 1978,
	-2, 1068,
	-1, 565,
	178, 1809,
	-2, 1069,
	-1, 632,
	178, 1760,
	-2, 1287,
	-1, 635,
	178, 1777,
	-2, 1216,
	-1, 636,
	178, 1990,
	-2, 1216,
	-1, 637,
	178, 1989,
	-2, 1216,
	-1, 638,
	178, 1988,
	-2, 1216,
	-1, 639,
	178, 1877,
	-2, 1216,
	-1, 640,
	178, 1878,
	-2, 1216,
	-1, 641,
	178, 1775,
	-2, 1216,
	-1, 642,
	178, 1776,
	-2, 1216,
	-1, 643,
	178, 1778,
	-2, 1216,
	-1, 891,
	101, 2091,
	178, 2091,
	-2, 1383,
	-1, 892,
	101, 2200,
	178, 2200,
	-2, 1384,
	-1, 897,
	101, 2115,
	178, 2115,
	-2, 1385,
	-1, 898,
	101, 2159,
	178, 2159,
	-2, 1386,
	-1, 899,
	101, 2160,
	178, 2160,
	-2, 1387,
	-1, 900,
	101, 2028,
	178, 2028,
	-2, 1391,
	-1, 902,
	101, 2136,
	178, 2136,
	-2, 1393,
	-1, 1065,
	357, 881,
	-2, 885,
	-1, 1067,
	357, 881,
	-2, 885,
	-1, 1172,
	5, 65,
	-2, 47,
	-1, 1177,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1179,
	1, 555,
	647, 555,
	-2, 552,
	-1, 1443,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1445,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1917,
	178, 1431,
	-2, 1427,
	-1, 2037,
	1, 977,
	5, 977,
	12, 977,
	13, 977,
	14, 977,
	15, 977,
	17, 977,
	19, 977,
	29, 977,
	30, 977,
	56, 977,
	57, 977,
	58, 977,
	59, 977,
	60, 977,
	62, 977,
	63, 977,
	66, 977,
	67, 977,
	69, 977,
	70, 977,
	88, 977,
	421, 977,
	466, 977,
	647, 977,
	-2, 1010,
	-1, 2045,
	67, 82,
	69, 82,
	-2, 86,
	-1, 2063,
	178, 1901,
	-2, 1388,
	-1, 2224,
	44, 735,
	197, 737,
	199, 735,
	200, 735,
	-2, 781,
	-1, 2273,
	5, 66,
	-2, 1098,
	-1, 2834,
	197, 738,
	-2, 736,
	-1, 2907,
	69, 1673,
	70, 1673,
	178, 1673,
	-2, 908,
	-1, 2933,
	1, 1052,
	5, 1052,
	12, 1052,
	13, 1052,
	14, 1052,
	15, 1052,
	17, 1052,
	19, 1052,
	29, 1052,
	30, 1052,
	56, 1052,
	57, 1052,
	58, 1052,
	59, 1052,
	60, 1052,
	62, 1052,
	63, 1052,
	66, 1052,
	67, 1052,
	69, 1052,
	70, 1052,
	88, 1052,
	421, 1052,
	466, 1052,
	647, 1052,
	-2, 1010,
	-1, 3122,
	5, 66,
	-2, 1349,
	-1, 3225,
	41, 1438,
	-2, 1436,
	-1, 3464,
	5, 66,
	-2, 1352,
	-1, 3487,
	281, 320,
	-2, 1493,
	-1, 3488,
	281, 321,
	-2, 1534,
	-1, 3489,
	281, 322,
	-2, 1710,
	-1, 3685,
	96, 305,
	98, 305,
	100, 305,
	-2, 60,
	-1, 3721,
	98, 312,
	99, 312,
	100, 312,
	-2, 60,
}

const yyPrivate = 57344

const yyLast = 54047

var yyAct = [...]int{
	575, 82, 3501, 3628, 3609, 3662, 3677, 1194, 3610, 1008,
	2615, 3494, 3566, 465, 2434, 3375, 3, 2060, 3456, 2472,
	2433, 506, 3521, 3370, 3378, 7, 3630, 3377, 6, 1863,
	3543, 3466, 2806, 535, 2777, 3376, 5, 3338, 2730, 3379,
	8, 3294, 3163, 2943, 1373, 539, 3337, 3225, 2641, 2996,
	2900, 3454, 2927, 1278, 2358, 2569, 1277, 1476, 2128, 2356,
	2499, 574, 519, 3227, 542, 2901, 2352, 526, 2816, 2720,
	2145, 2790, 1942, 2086, 3055, 3033, 3079, 85, 1301, 3049,
	490, 490, 502, 82, 3371, 496, 1889, 2424, 444, 447,
	2731, 2642, 97, 2897, 1051, 2828, 978, 2481, 517, 2909,
	2077, 1033, 552, 1475, 2918, 110, 2223, 2383, 1861, 1882,
	2090, 1078, 538, 2114, 2585, 1948, 2002, 2341, 2175, 2041,
	2537, 2623, 2073, 1815, 1452, 2194, 2334, 1779, 1862, 2034,
	2463, 1478, 2622, 1869, 2110, 1195, 1355, 971, 2033, 516,
	893, 896, 1351, 1919, 1202, 2645, 1993, 1198, 2037, 1087,
	1820, 1109, 970, 1178, 889, 522, 1354, 2719, 505, 2047,
	1206, 1216, 890, 1182, 2092, 1181, 1180, 467, 468, 131,
	1071, 1023, 73, 2420, 1791, 544, 1086, 1007, 1792, 1761,
	442, 106, 991, 450, 996, 1446, 511, 102, 3721, 3716,
	3707, 3685, 2425, 2441, 3683, 3657, 3637, 3623, 2445, 3555,
	3551, 84, 2745, 87, 3296, 3295, 1813, 2775, 3204, 3026,
	2947, 3718, 3714, 3712, 2450, 2449, 3644, 39, 968, 483,
	39, 477, 488, 471, 3202, 39, 460, 3452, 3602, 3346,
	3034, 42, 2159, 3217, 2492, 39, 2446, 2159, 1005, 3205,
	3036, 3569, 3440, 478, 89, 975, 95, 2787, 2636, 3451,
	1021, 532, 2452, 2607, 2431, 3345, 39, 405, 3263, 3536,
	3278, 2354, 2432, 3147, 80, 2976, 2637, 3160, 3161, 2988,
	2944, 504, 2702, 2701, 3607, 3153, 2456, 3318, 2003, 83,
	3517, 2311, 83, 2891, 3576, 990, 439, 83, 993, 512,
	998, 999, 1065, 1001, 884, 885, 886, 83, 3254, 2684,
	2685, 2193, 3460, 2062, 2435, 1876, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 83, 2376,
	1244, 3460, 2375, 2683, 3012, 2377, 1186, 3018, 3020, 3019,
	3016, 3017, 3015, 3014, 3013, 2057, 2058, 1300, 3457, 3455,
	1819, 124, 120, 121, 2056, 122, 3021, 3022, 83, 1037,
	1038, 1879, 1880, 1041, 1356, 3039, 1357, 3457, 93, 91,
	92, 3276, 966, 1837, 1817, 1818, 1138, 2448, 114, 83,
	2451, 1055, 1056, 2834, 2662, 459, 2347, 2348, 458, 126,
	125, 1146, 2454, 2088, 2089, 2419, 462, 1039, 1040, 500,
	2192, 1106, 3103, 2444, 470, 469, 472, 3037, 3038, 3040,
	3041, 3042, 2104, 3461, 476, 2343, 2346, 2347, 2348, 2344,
	2093, 2345, 2350, 103, 1054, 2919, 2920, 2877, 2875, 2111,
	2093, 480, 3461, 2181, 1061, 2180, 484, 2694, 2096, 2098,
	437, 2097, 1797, 434, 457, 2714, 513, 2525, 1858, 1857,
	82, 487, 82, 127, 1856, 128, 1068, 1855, 3675, 501,
	1854, 1853, 1142, 1143, 2487, 1072, 1113, 517, 3050, 3056,
	3057, 3058, 3059, 2517, 1073, 3312, 3053, 1075, 3596, 2721,
	2722, 3231, 1816, 1122, 3428, 1074, 2723, 2815, 2522, 2206,
	3051, 3052, 1153, 3503, 2788, 1154, 3502, 1062, 1063, 2491,
	2791, 2792, 2793, 2794, 2795, 3430, 2797, 3322, 1077, 1399,
	3067, 3076, 987, 82, 3674, 2207, 3320, 1176, 3203, 3221,
	1848, 2800, 1042, 105, 987, 1189, 1122, 3510, 2489, 2146,
	1024, 3199, 3695, 116, 115, 2791, 2792, 2793, 2794, 2795,
	3065, 1435, 3636, 3667, 1253, 1255, 3552, 510, 1257, 3550,
	3548, 3546, 3547, 1435, 473, 474, 475, 481, 1827, 485,
	486, 489, 3618, 2444, 1434, 1874, 2343, 2346, 2347, 2348,
	2344, 3196, 2345, 2350, 1459, 1460, 1458, 1269, 3625, 112,
	1272, 1273, 1274, 1275, 1276, 3197, 1281, 445, 1110, 113,
	117, 2447, 112, 83, 995, 994, 2443, 118, 1450, 3195,
	3598, 517, 438, 117, 3194, 123, 3193, 3191, 997, 1254,
	1875, 112, 3192, 1036, 1386, 1052, 1145, 1053, 1055, 1056,
	997, 2978, 1877, 3527, 3314, 107, 3373, 108, 3137, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 2668, 1298, 1299, 1302, 1302, 1302, 1308,
	1302, 1302, 1308, 1302, 1308, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1223, 1172, 2457, 2693, 2945, 129,
	3035, 2586, 3304, 987, 461, 1050, 1400, 1047, 119, 3308,
	3309, 1046, 1122, 454, 3458, 2725, 2817, 2140, 2141, 3564,
	2490, 2200, 2444, 3151, 2774, 3479, 3480, 1114, 2507, 2508,
	1048, 1049, 1435, 3458, 1798, 1304, 1306, 2947, 1310, 1312,
	3255, 1315, 2692, 3344, 3149, 2724, 2113, 1076, 1069, 1067,
	2461, 3319, 1121, 1155, 3220, 3619, 2799, 443, 3200, 2349,
	2095, 1132, 448, 137, 518, 402, 404, 518, 3313, 137,
	3218, 2493, 518, 3152, 137, 2977, 2979, 2980, 2981, 3575,
	3429, 3676, 518, 2588, 493, 493, 446, 104, 137, 138,
	2349, 3286, 2137, 139, 3292, 1173, 140, 141, 446, 1188,
	1793, 138, 142, 74, 1160, 139, 449, 987, 140, 141,
	3681, 2083, 137, 980, 142, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 94, 2136, 3702, 2967, 3634, 1758, 2968, 3629,
	2969, 2442, 137, 493, 987, 980, 114, 1129, 3080, 3081,
	2543, 3164, 2833, 1020, 137, 3632, 3722, 479, 3719, 1413,
	1416, 1417, 1418, 1419, 1420, 1421, 3166, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 3708, 1401, 1402, 1403, 1404,
	1380, 1384, 1414, 1381, 1387, 1383, 1385, 1382, 1819, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 3686, 1127,
	992, 1170, 1817, 1818, 1010, 2085, 3324, 2231, 2225, 2226,
	83, 2224, 2227, 2228, 1821, 3090, 557, 556, 559, 560,
	561, 562, 2085, 512, 2734, 558, 1954, 2756, 2757, 987,
	3091, 987, 2813, 2083, 977, 1128, 1118, 1124, 2590, 2361,
	2363, 2349, 2516, 2594, 2512, 2589, 2495, 2587, 2494, 2234,
	2201, 1823, 2592, 1464, 1822, 896, 1462, 1070, 2131, 989,
	896, 2675, 2156, 2233, 2232, 2591, 2749, 2155, 2674, 2085,
	138, 1125, 1126, 2673, 139, 3165, 988, 140, 141, 2510,
	2593, 2595, 2555, 142, 1185, 3679, 1000, 1166, 3680, 400,
	3678, 116, 115, 3094, 1303, 1305, 1307, 1309, 1311, 1313,
	1314, 1316, 1259, 1260, 2085, 2286, 83, 446, 2914, 1165,
	1161, 1162, 1163, 1164, 1167, 1168, 1169, 1171, 2085, 2283,
	3317, 1415, 1258, 1256, 2863, 2682, 1024, 446, 2514, 490,
	2513, 2380, 2265, 1454, 2254, 2216, 3631, 3633, 1430, 1431,
	1432, 1433, 2138, 2052, 1892, 2062, 2428, 1261, 490, 1367,
	1359, 2084, 1477, 1244, 1271, 1360, 1270, 2550, 2543, 1224,
	1104, 1117, 2547, 1022, 1368, 2546, 2549, 1064, 2084, 2823,
	2362, 2824, 2532, 3000, 2533, 2543, 1453, 2372, 1349, 987,
	1457, 1234, 2544, 2083, 1244, 1261, 3089, 2810, 1789, 3528,
	3529, 1346, 1347, 3339, 1437, 3525, 3526, 82, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	3207, 3117, 1072, 3505, 137, 2084, 1258, 3349, 3348, 1030,
	2562, 1073, 2335, 1780, 1075, 2529, 1926, 2530, 1372, 1440,
	2825, 2167, 1074, 2534, 3001, 1885, 2230, 1044, 1787, 1212,
	3366, 1924, 1925, 1923, 1215, 2219, 3208, 3095, 490, 1024,
	2084, 2916, 1470, 2554, 1764, 2915, 1215, 2551, 1237, 1238,
	1239, 1240, 1241, 1234, 2084, 2913, 1244, 1035, 1775, 1776,
	1777, 1778, 137, 1259, 1260, 1807, 1480, 1810, 1770, 1771,
	1772, 1773, 1846, 1774, 1120, 1365, 2531, 1259, 1260, 100,
	3506, 1369, 1442, 1080, 1890, 1891, 1003, 1830, 1441, 1449,
	1783, 1466, 1784, 1455, 1214, 1212, 1456, 1213, 1214, 1212,
	82, 1002, 3706, 1057, 3544, 82, 2609, 137, 1994, 1444,
	1474, 1473, 1215, 1781, 3620, 517, 1215, 1994, 1763, 2299,
	1766, 2168, 137, 3570, 99, 3066, 1852, 1045, 3060, 1768,
	1769, 1828, 1219, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 1066, 3594, 1244, 1213, 1214,
	1212, 2859, 1795, 3096, 1034, 1794, 1881, 1799, 2188, 3544,
	2278, 3582, 2277, 3581, 1912, 98, 82, 1215, 1802, 1803,
	1883, 1851, 1805, 2751, 2754, 1209, 1825, 1883, 3703, 2752,
	2753, 517, 1213, 1214, 1212, 3689, 3663, 3688, 1808, 2251,
	2252, 2253, 1281, 2743, 1826, 100, 1946, 1829, 1952, 1920,
	1059, 1215, 1921, 1953, 1955, 1199, 83, 517, 1200, 3426,
	1959, 1961, 3577, 3475, 1847, 1878, 3433, 1850, 1922, 3425,
	2290, 1786, 3367, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 2176, 1866, 1244, 3704, 3279, 2361, 2363, 3215, 3315,
	1899, 1870, 1943, 1859, 1944, 1193, 1979, 1982, 1970, 3647,
	1213, 1214, 1212, 1873, 1995, 1871, 1872, 3427, 2038, 1213,
	1214, 1212, 1213, 1214, 1212, 3214, 1911, 3710, 1917, 1215,
	3622, 3213, 3212, 1223, 3711, 3206, 3025, 1172, 1215, 1193,
	3024, 1215, 1904, 1906, 1907, 3606, 2061, 3316, 2973, 1908,
	1905, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 2963, 2939, 1244, 2956, 2066, 2746, 896,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 2985, 2042, 1244, 2032, 2468, 2983, 2466, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	1958, 2068, 1244, 1962, 1963, 1964, 1965, 1966, 2455, 1112,
	2378, 2008, 2379, 2010, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 1991, 2362, 1244, 2986,
	1111, 1213, 1214, 1212, 2984, 3557, 2031, 1009, 2045, 3545,
	3556, 3507, 1894, 3504, 1084, 2153, 3439, 3311, 1918, 3310,
	1215, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 3495, 1895, 1083, 2067,
	1896, 1917, 3291, 3222, 2120, 2121, 2122, 2123, 2054, 2074,
	2050, 3190, 2107, 2108, 2109, 2059, 2053, 975, 2469, 2279,
	2046, 2151, 2152, 3696, 2071, 2069, 1213, 1214, 1212, 3159,
	3158, 2124, 2125, 2126, 2611, 3144, 1947, 1213, 1214, 1212,
	2116, 2117, 2118, 2119, 1985, 1215, 2094, 3113, 2099, 2100,
	2101, 2102, 2103, 3063, 1998, 3062, 1215, 3061, 3023, 2112,
	2982, 1971, 1972, 1973, 2082, 2974, 2966, 1977, 1978, 1981,
	1984, 3639, 1989, 1990, 2964, 2147, 2960, 2959, 1996, 2958,
	137, 2149, 2150, 2822, 2762, 1213, 1214, 1212, 2157, 980,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 2132, 2001, 2134,
	2004, 2005, 3713, 2565, 1215, 2009, 2564, 2011, 2012, 2535,
	2464, 3553, 2189, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2162, 1804, 1760, 1759, 3541,
	3540, 3497, 3496, 3492, 3491, 1123, 1130, 1131, 1133, 1134,
	1135, 1136, 1137, 1184, 1139, 1140, 1141, 3321, 1144, 3239,
	1147, 1148, 1149, 1150, 1151, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 2218, 1193, 1244,
	2428, 3232, 3233, 3087, 2884, 3364, 557, 556, 559, 560,
	561, 562, 980, 137, 2896, 558, 1954, 2853, 1177, 2894,
	2849, 2835, 493, 493, 2801, 2502, 493, 2501, 2182, 428,
	2164, 2163, 1945, 137, 1801, 1796, 137, 1472, 1471, 2893,
	2606, 493, 493, 3183, 1445, 1443, 137, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 1107,
	1031, 1244, 137, 137, 137, 137, 456, 137, 464, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 1465, 1997, 1244, 493, 3173, 1193, 3182, 137, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 3173, 3579, 1244, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 2991, 3562, 1244, 1308,
	557, 556, 559, 560, 561, 562, 3445, 1193, 980, 558,
	1954, 406, 2281, 1152, 2263, 1193, 3532, 1193, 2991, 3513,
	495, 493, 493, 493, 2991, 3441, 980, 2780, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	3173, 3354, 1244, 2991, 3302, 2883, 2263, 1193, 2191, 3173,
	3269, 2185, 3173, 3172, 3126, 1193, 493, 2048, 409, 2215,
	1193, 493, 493, 2991, 2990, 2772, 2771, 418, 426, 427,
	2048, 2213, 2768, 2769, 2768, 2767, 2338, 1193, 137, 2500,
	980, 2203, 2202, 1968, 2186, 1968, 1193, 2898, 2160, 137,
	2912, 2169, 2165, 1371, 1370, 2765, 2174, 2764, 2763, 2882,
	2500, 2367, 2337, 1758, 415, 2173, 1157, 416, 1118, 86,
	424, 425, 2172, 2049, 137, 2051, 1887, 2144, 3670, 1156,
	3599, 1219, 1116, 2255, 1115, 3568, 2049, 1116, 1758, 2912,
	3120, 1968, 1912, 2338, 2159, 2042, 2338, 2929, 2781, 2770,
	2563, 2536, 2338, 2055, 1110, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 2912, 2143, 1244,
	980, 2198, 980, 2263, 1118, 980, 2184, 1886, 2263, 2305,
	2304, 83, 980, 421, 980, 980, 2190, 1806, 2161, 2158,
	1888, 1174, 1849, 2205, 137, 2197, 2208, 1814, 1758, 1463,
	1461, 967, 1353, 3476, 422, 1920, 3442, 2928, 1921, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 3335, 3236, 1244, 3134, 3027, 2091, 2919, 2920, 2212,
	2115, 980, 980, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 1950, 2067, 1244, 1917, 2093, 2742, 2111,
	2418, 1122, 2139, 2243, 2241, 2242, 2106, 2105, 1438, 2355,
	137, 137, 137, 83, 2364, 2365, 2260, 1103, 2038, 2129,
	407, 2038, 2183, 2177, 517, 1028, 1027, 3701, 3699, 3651,
	3649, 3611, 2922, 2360, 2898, 980, 2779, 2256, 2470, 1824,
	1468, 1158, 1119, 2661, 2658, 2266, 2656, 2926, 2660, 2659,
	2250, 2657, 433, 2925, 420, 410, 411, 2924, 431, 2655,
	2654, 3523, 412, 414, 3450, 408, 430, 429, 523, 524,
	896, 2566, 2240, 2042, 1207, 1208, 3499, 1898, 3515, 3123,
	2248, 2247, 2042, 528, 2368, 2042, 3260, 2369, 3086, 2994,
	2848, 2847, 2761, 2760, 2759, 2430, 2178, 2422, 2310, 2312,
	2351, 2736, 3326, 1205, 3329, 2318, 2319, 2320, 2321, 2298,
	423, 435, 436, 3438, 3437, 3500, 3226, 3224, 3307, 137,
	2336, 3306, 455, 1800, 2561, 137, 137, 493, 493, 493,
	3209, 3210, 137, 2560, 1196, 2953, 2747, 2695, 2217, 1366,
	1101, 1085, 2366, 1437, 3668, 1197, 2257, 2258, 2259, 1082,
	1081, 1032, 3243, 3242, 1184, 3118, 1480, 490, 1890, 1891,
	3068, 2506, 2373, 2133, 2370, 1359, 1467, 3069, 3600, 3431,
	3228, 1453, 2999, 1079, 2381, 2778, 1207, 1208, 520, 2417,
	100, 2130, 1860, 2246, 82, 1190, 1191, 2497, 3588, 3587,
	3586, 2245, 3187, 2211, 1060, 3509, 3508, 3449, 3435, 517,
	3358, 3330, 3259, 2687, 521, 86, 3448, 2465, 2291, 2292,
	2293, 2267, 2268, 2269, 2270, 2271, 2527, 3341, 2467, 2500,
	3554, 2473, 2475, 2476, 2477, 2427, 2429, 3653, 3652, 3652,
	2458, 2459, 2460, 2462, 3098, 2820, 2523, 2521, 2488, 1192,
	2296, 2520, 2423, 2287, 2426, 2504, 2284, 2209, 2496, 1782,
	1210, 1026, 1025, 3653, 2571, 3351, 1831, 2758, 1884, 1834,
	1835, 1836, 967, 1838, 1839, 1912, 515, 1840, 3392, 57,
	2503, 3394, 22, 1841, 3673, 2518, 88, 1842, 1843, 60,
	1844, 1845, 2616, 2524, 2509, 2511, 3393, 21, 3395, 23,
	3396, 24, 3498, 2515, 3390, 17, 3389, 16, 3388, 15,
	3391, 18, 3387, 14, 1, 2638, 2640, 3381, 10, 2038,
	2038, 2038, 2038, 2038, 2526, 2199, 2545, 2540, 2556, 2557,
	517, 2596, 2559, 1832, 2598, 3048, 2355, 3047, 2669, 3413,
	37, 1866, 2541, 3054, 2567, 3411, 36, 2786, 2038, 3410,
	35, 517, 2572, 2664, 2608, 2789, 2573, 3409, 31, 2576,
	2486, 2671, 3064, 2643, 3408, 30, 3407, 29, 3405, 26,
	1451, 2639, 3404, 25, 2597, 3406, 27, 2578, 3198, 1917,
	3386, 13, 1006, 2042, 2042, 2042, 2042, 2042, 3383, 12,
	2571, 2142, 1970, 3382, 11, 2672, 1108, 2538, 2548, 2553,
	2042, 3380, 9, 3436, 3325, 3327, 3223, 2678, 2505, 2680,
	2681, 3071, 2042, 3032, 2679, 2617, 2618, 2619, 2620, 2621,
	3031, 2480, 2744, 2479, 1102, 1812, 2755, 2539, 2542, 2154,
	2229, 2210, 137, 1159, 2075, 3535, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 3277, 2663, 2650,
	2651, 3146, 2653, 2946, 137, 137, 137, 2649, 2881, 2748,
	2652, 2676, 2942, 2382, 2975, 2070, 3465, 969, 96, 2166,
	1043, 413, 2686, 2072, 2439, 3328, 1105, 2438, 2453, 490,
	2087, 1179, 1183, 2796, 2437, 2436, 3323, 2440, 137, 1377,
	137, 1375, 1376, 2575, 980, 1374, 2124, 1379, 2126, 980,
	2735, 1378, 2737, 3646, 3574, 417, 1361, 2782, 3486, 2895,
	2807, 1211, 568, 111, 3088, 2599, 2600, 2552, 2601, 2602,
	498, 980, 2603, 499, 980, 1203, 101, 109, 1897, 2728,
	419, 1252, 2244, 2803, 2374, 1225, 2612, 2613, 2750, 894,
	895, 887, 2798, 2236, 1175, 3347, 3516, 3565, 3478, 1201,
	3518, 3447, 3340, 2297, 1296, 1992, 541, 980, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	2776, 2667, 1244, 3116, 3520, 1903, 2738, 2739, 2740, 1279,
	2741, 555, 554, 553, 550, 551, 3459, 1893, 2889, 2635,
	1226, 2773, 530, 2036, 2802, 2805, 2809, 2677, 2029, 2187,
	2814, 2342, 2340, 2339, 2818, 2819, 2766, 2821, 1469, 2574,
	2808, 1350, 2921, 2917, 2353, 2040, 2035, 2860, 2903, 82,
	2039, 1437, 41, 2826, 3097, 2832, 1058, 2568, 2890, 3253,
	2249, 90, 2852, 514, 517, 525, 1297, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 2931,
	28, 1244, 2850, 20, 2935, 2936, 2937, 19, 2858, 2222,
	1004, 43, 2643, 45, 46, 2899, 2474, 2135, 3485, 3627,
	1088, 3638, 2840, 2845, 3661, 2904, 3542, 2870, 2871, 2902,
	2872, 34, 2911, 2874, 2873, 2876, 33, 32, 3402, 3401,
	3400, 3403, 2831, 2864, 2865, 2866, 2867, 2868, 3399, 3398,
	3397, 3412, 3385, 3384, 137, 3613, 2934, 3612, 4, 1187,
	2930, 81, 137, 38, 965, 137, 2, 0, 0, 0,
	2941, 137, 0, 0, 137, 137, 137, 2906, 0, 0,
	0, 0, 3004, 3006, 3008, 3009, 2940, 2923, 0, 0,
	0, 0, 0, 0, 2951, 0, 0, 2957, 0, 2932,
	0, 0, 0, 0, 0, 2965, 0, 1228, 82, 1231,
	0, 0, 0, 3002, 1866, 0, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 517, 1229, 1230, 1227, 0, 3029, 0,
	0, 0, 0, 0, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 0, 0, 1244, 0,
	0, 0, 0, 980, 2995, 137, 2862, 0, 3044, 3045,
	3046, 2728, 980, 980, 3028, 0, 0, 493, 0, 2728,
	0, 0, 0, 2992, 2993, 0, 2948, 2949, 2950, 0,
	0, 2605, 137, 493, 0, 0, 2886, 2887, 2888, 0,
	0, 3011, 0, 0, 0, 0, 2970, 2971, 2972, 0,
	0, 493, 0, 0, 3082, 3083, 2987, 0, 3073, 3043,
	0, 0, 0, 3075, 0, 0, 0, 2989, 0, 0,
	3084, 980, 2807, 2571, 0, 493, 0, 980, 0, 3030,
	0, 3072, 0, 493, 3102, 0, 0, 3070, 0, 980,
	980, 0, 0, 0, 0, 3099, 3100, 3074, 0, 0,
	3085, 0, 2933, 3078, 3077, 0, 0, 0, 0, 3092,
	0, 2124, 0, 0, 0, 2735, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 3148, 3150, 0, 980, 3093,
	0, 0, 0, 0, 0, 0, 0, 0, 2643, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 0, 0, 1244, 0, 0, 0, 0, 3136, 0,
	0, 0, 0, 0, 0, 3141, 3142, 3143, 3139, 3127,
	0, 0, 0, 3119, 0, 0, 2998, 0, 0, 0,
	3175, 0, 2204, 3145, 3128, 980, 0, 3010, 0, 0,
	0, 0, 0, 1302, 1302, 1302, 1308, 1302, 1302, 1308,
	1302, 1308, 1317, 1318, 3156, 3154, 3140, 0, 3157, 0,
	1967, 1969, 137, 137, 137, 137, 137, 0, 1974, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 3185, 137,
	0, 1762, 1762, 137, 0, 0, 0, 0, 0, 1767,
	0, 137, 0, 0, 3186, 0, 3184, 0, 0, 0,
	0, 0, 0, 0, 980, 3162, 2006, 2007, 0, 3168,
	3169, 1785, 3167, 2013, 2014, 2015, 2016, 3188, 2728, 3003,
	3005, 3007, 1304, 1306, 0, 1310, 1312, 3244, 1315, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 3189, 2727,
	0, 0, 980, 0, 0, 0, 0, 0, 0, 0,
	0, 2903, 0, 0, 2903, 3265, 0, 1279, 3201, 3211,
	0, 0, 3216, 3104, 3105, 3106, 3107, 3219, 2931, 3230,
	517, 3111, 0, 3229, 0, 3114, 3115, 0, 0, 0,
	3281, 0, 3283, 3284, 3285, 0, 3234, 3235, 3245, 0,
	2360, 0, 3272, 2042, 137, 3247, 0, 3248, 3170, 3171,
	3241, 0, 0, 0, 3262, 0, 0, 980, 980, 980,
	0, 3264, 2902, 493, 3268, 2902, 3261, 82, 137, 493,
	3267, 0, 0, 0, 3258, 0, 0, 0, 3271, 3270,
	0, 0, 517, 0, 137, 3288, 493, 0, 980, 0,
	493, 0, 0, 0, 493, 493, 0, 493, 3280, 0,
	3282, 0, 0, 3305, 0, 0, 0, 0, 3287, 0,
	0, 2830, 0, 0, 3289, 0, 1900, 1901, 1902, 0,
	2838, 2843, 980, 3303, 0, 0, 137, 980, 0, 0,
	2830, 0, 0, 980, 0, 0, 980, 980, 0, 3237,
	3238, 0, 0, 0, 2903, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 3333, 0, 3356, 3357, 0,
	0, 517, 2728, 3176, 2728, 3177, 3331, 3178, 3180, 0,
	0, 0, 0, 3332, 0, 0, 3334, 0, 2728, 0,
	0, 0, 0, 0, 3342, 1279, 82, 0, 2261, 0,
	1975, 1976, 0, 3350, 3352, 0, 0, 3374, 3363, 0,
	0, 0, 3353, 3372, 0, 2902, 0, 3355, 0, 0,
	0, 3360, 980, 3362, 980, 3365, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 0, 0,
	1244, 1303, 1305, 1307, 1309, 1311, 1313, 1314, 1316, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3434, 3443, 0, 3432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3467, 0, 0, 2065,
	0, 2727, 1204, 0, 3481, 0, 0, 2643, 0, 2727,
	3463, 3462, 3469, 0, 3468, 0, 0, 0, 0, 0,
	0, 3477, 3368, 0, 3288, 0, 0, 0, 0, 0,
	82, 0, 3493, 0, 0, 82, 0, 3297, 0, 0,
	0, 0, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 3490, 0, 432, 0,
	0, 0, 0, 132, 0, 0, 452, 0, 0, 0,
	0, 0, 2127, 0, 0, 3511, 0, 507, 0, 0,
	0, 0, 0, 137, 3524, 980, 3537, 0, 0, 0,
	0, 3512, 529, 3514, 0, 0, 0, 0, 904, 0,
	0, 132, 0, 0, 3336, 3530, 0, 0, 3539, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 132, 3533, 0, 493, 0, 0, 0, 0, 0,
	490, 2830, 0, 132, 3561, 0, 3538, 0, 0, 0,
	0, 3549, 0, 0, 0, 0, 0, 3563, 0, 0,
	0, 0, 2179, 0, 2220, 2221, 82, 2830, 3585, 0,
	0, 0, 82, 82, 0, 3593, 82, 980, 0, 0,
	0, 0, 3467, 3592, 3573, 0, 0, 3592, 0, 0,
	2807, 0, 0, 3583, 3580, 0, 0, 0, 0, 0,
	3590, 0, 3589, 82, 0, 3621, 3597, 3578, 82, 3603,
	0, 3601, 0, 0, 3605, 0, 0, 0, 0, 3641,
	0, 2616, 137, 517, 2061, 3617, 490, 3635, 3616, 0,
	3640, 3643, 3642, 3624, 2214, 3650, 3615, 0, 3648, 82,
	3614, 3655, 980, 82, 82, 3658, 3645, 3656, 82, 980,
	980, 980, 3654, 0, 2235, 3592, 0, 0, 82, 3664,
	0, 0, 0, 0, 3626, 0, 0, 0, 2727, 3592,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	3682, 82, 0, 3687, 0, 0, 82, 3690, 0, 3592,
	3693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 980, 82, 2604, 0, 0,
	82, 0, 3709, 0, 0, 3592, 0, 3592, 2262, 0,
	2264, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 82, 0, 3717, 0, 0, 0, 82, 0, 3592,
	0, 980, 82, 2273, 2274, 2275, 2276, 0, 3592, 0,
	2280, 2282, 0, 3592, 2285, 0, 0, 2288, 2289, 0,
	0, 0, 2294, 2295, 0, 0, 0, 0, 2301, 2302,
	0, 2303, 0, 0, 2306, 2307, 0, 2308, 2309, 0,
	0, 2313, 2314, 2315, 2316, 2317, 0, 0, 0, 0,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 137, 132, 0, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 980, 0,
	0, 0, 137, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 2727, 0, 2727, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 2727, 0,
	0, 0, 0, 567, 0, 0, 0, 980, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	0, 0, 1244, 0, 0, 2528, 0, 0, 0, 0,
	0, 0, 0, 3671, 0, 0, 507, 0, 2558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 507, 1203, 134, 0, 0, 0, 0, 0, 0,
	3694, 0, 493, 0, 134, 0, 0, 3700, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 134, 974, 0, 0, 2416, 0, 0, 0,
	133, 0, 0, 0, 0, 980, 0, 980, 0, 980,
	0, 0, 134, 0, 508, 0, 137, 0, 0, 2390,
	0, 0, 2272, 0, 134, 0, 0, 2397, 0, 0,
	0, 0, 0, 0, 0, 905, 0, 0, 133, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 2300, 2579,
	2580, 2581, 2582, 2583, 2584, 0, 0, 0, 133, 980,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 2394, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 2688, 2689, 2690, 2691, 0, 0,
	2696, 2697, 2698, 2699, 2700, 0, 0, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 0, 2715,
	2716, 2717, 2718, 0, 2729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2665, 2666, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2404, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2396, 0, 2416,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2390, 0, 980, 0, 980, 0, 0, 0,
	2397, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2408, 2384, 134, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2394, 0, 0, 1352,
	0, 0, 904, 0, 0, 0, 0, 904, 0, 2415,
	493, 0, 0, 980, 0, 0, 0, 0, 137, 0,
	0, 2401, 0, 0, 0, 0, 0, 2385, 0, 0,
	133, 0, 2410, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 2610, 0, 2861, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2869, 0,
	0, 0, 0, 0, 2391, 0, 0, 0, 0, 2878,
	2879, 2880, 0, 0, 0, 0, 2885, 0, 0, 0,
	2952, 0, 2954, 2955, 0, 0, 0, 0, 133, 2961,
	2962, 0, 2387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 2398, 0, 1448, 452, 2389,
	0, 2905, 1222, 0, 0, 2404, 0, 0, 0, 0,
	0, 2400, 132, 0, 0, 132, 0, 0, 1448, 452,
	0, 0, 0, 508, 0, 1479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 2938,
	2396, 132, 132, 132, 132, 0, 132, 0, 1220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 2388, 2392, 2395, 0, 2399, 2402, 2403, 2405, 2406,
	2407, 2409, 2411, 2412, 2413, 2414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 566, 0, 0, 2408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2415, 0, 2804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2391, 132, 0,
	0, 0, 2854, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 972, 528, 0, 0, 0, 0, 0, 2386,
	0, 0, 0, 132, 0, 2387, 0, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 0, 1479, 0, 0,
	0, 3155, 2389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2400, 2892, 0, 0, 0, 3108,
	3109, 3110, 0, 3112, 0, 0, 0, 1399, 0, 0,
	1951, 0, 0, 0, 0, 0, 3121, 3122, 0, 3124,
	0, 0, 3125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 1951, 1951, 1951, 0, 0,
	0, 1951, 1951, 1951, 1951, 3138, 1951, 1951, 0, 0,
	0, 904, 1951, 0, 2388, 2392, 2395, 0, 2399, 2402,
	2403, 2405, 2406, 2407, 2409, 2411, 2412, 2413, 2414, 0,
	0, 0, 1951, 1951, 1951, 1951, 0, 0, 1951, 1951,
	1951, 1951, 1951, 0, 0, 0, 0, 1951, 1951, 1951,
	1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 132,
	132, 132, 0, 0, 0, 0, 904, 0, 0, 0,
	134, 3174, 1386, 0, 0, 0, 0, 0, 0, 0,
	1479, 0, 3179, 3181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 905,
	0, 0, 0, 0, 905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2386, 3290, 1400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 134, 132, 132, 0, 3249, 3250, 3251,
	3252, 132, 0, 0, 0, 0, 0, 3256, 3257, 0,
	0, 0, 0, 134, 0, 0, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1436, 0, 0,
	0, 0, 0, 0, 3273, 3274, 3275, 0, 0, 133,
	0, 0, 134, 134, 134, 134, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 133, 0, 0, 0, 0, 1279, 0, 3298,
	3299, 3300, 0, 3301, 0, 0, 0, 3129, 3130, 3131,
	3132, 0, 0, 3133, 0, 0, 3135, 0, 133, 133,
	133, 133, 0, 133, 0, 1279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1416, 1417,
	1418, 1419, 1420, 1421, 0, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 0, 1401, 1402, 1403, 1404, 1380, 1384,
	1414, 1381, 1387, 1383, 1385, 1382, 3343, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 0, 0, 0, 0,
	0, 0, 0, 3359, 0, 3361, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	3369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 508, 0, 1864, 0, 1913, 0,
	3444, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	3453, 0, 0, 0, 0, 0, 3464, 0, 0, 0,
	0, 0, 0, 3470, 0, 3471, 3472, 3473, 3474, 0,
	133, 0, 0, 528, 0, 0, 0, 1220, 0, 0,
	0, 0, 0, 0, 1914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2170, 2171, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 905, 507,
	134, 134, 134, 0, 0, 0, 0, 0, 3531, 0,
	0, 3534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1913, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 39, 0, 0, 0, 0, 133, 133, 133, 0,
	0, 0, 0, 905, 0, 63, 0, 0, 0, 0,
	0, 79, 0, 0, 42, 0, 0, 1914, 0, 0,
	0, 973, 0, 1279, 3572, 1479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 0, 3420, 134,
	0, 0, 0, 0, 0, 134, 134, 0, 0, 0,
	0, 3608, 134, 0, 0, 0, 0, 0, 0, 0,
	3414, 0, 0, 3660, 3663, 3659, 0, 0, 0, 0,
	0, 1951, 0, 0, 0, 1951, 1951, 1951, 1951, 1951,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 133, 133, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 903, 0, 1951, 0, 0, 903, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 3697, 3698, 44, 75, 48, 47,
	50, 132, 0, 0, 507, 0, 0, 0, 3482, 3483,
	132, 3415, 0, 132, 2371, 1479, 0, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 78,
	77, 0, 0, 0, 0, 49, 0, 0, 0, 0,
	0, 0, 3519, 3522, 0, 0, 0, 0, 0, 0,
	0, 1439, 0, 0, 0, 0, 0, 1447, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 451,
	0, 0, 0, 0, 0, 0, 0, 61, 62, 0,
	3416, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	3423, 3417, 3418, 3419, 3421, 3422, 0, 0, 0, 0,
	70, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 3584, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 0, 3522, 0, 0, 3424, 76, 1811, 58, 59,
	65, 0, 66, 0, 63, 0, 0, 0, 0, 0,
	79, 0, 0, 42, 0, 1833, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 1951, 0,
	0, 0, 83, 0, 0, 0, 1951, 3420, 1479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 3414,
	0, 0, 0, 0, 3720, 0, 0, 3691, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 133, 0, 508, 0, 0, 0,
	904, 132, 132, 132, 132, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 132, 1868,
	0, 1868, 507, 0, 1956, 0, 1913, 1951, 0, 0,
	132, 1957, 0, 1868, 1868, 44, 75, 48, 47, 50,
	0, 0, 51, 53, 0, 0, 0, 0, 74, 0,
	3415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 0, 0, 54, 78, 77,
	0, 0, 1914, 0, 49, 0, 0, 0, 0, 0,
	1999, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 61, 62, 0, 3416,
	1868, 0, 0, 132, 972, 0, 0, 0, 0, 3423,
	3417, 3418, 3419, 3421, 3422, 0, 0, 0, 0, 70,
	0, 71, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	0, 0, 134, 132, 0, 0, 72, 0, 0, 0,
	0, 134, 0, 0, 134, 0, 52, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3424, 76, 0, 58, 59, 65,
	133, 66, 0, 0, 0, 132, 0, 0, 133, 0,
	0, 508, 0, 0, 0, 0, 0, 133, 0, 0,
	133, 0, 529, 0, 905, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2421, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 0, 0, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	79, 0, 0, 42, 0, 0, 0, 0, 134, 0,
	0, 51, 53, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 3420, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3414,
	0, 0, 132, 0, 3715, 1914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 134, 134, 134, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2644, 133, 133,
	133, 133, 133, 0, 0, 44, 75, 48, 47, 50,
	0, 508, 0, 0, 0, 133, 0, 0, 0, 508,
	3415, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 78, 77,
	0, 0, 0, 0, 49, 0, 0, 0, 0, 0,
	0, 507, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 0, 0, 2196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2733, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	2196, 0, 0, 2196, 0, 0, 61, 62, 0, 3416,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 3423,
	3417, 3418, 3419, 3421, 3422, 0, 0, 0, 0, 70,
	0, 71, 0, 0, 134, 39, 2239, 0, 0, 0,
	133, 0, 0, 0, 0, 1868, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 79, 72, 1951, 42, 1951,
	0, 1951, 1951, 0, 133, 0, 52, 0, 0, 0,
	2839, 2844, 0, 0, 0, 0, 134, 0, 0, 0,
	133, 0, 0, 0, 3424, 76, 0, 58, 59, 65,
	0, 66, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 0, 3420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2421, 0, 2837, 2842, 0, 0,
	0, 0, 133, 0, 3414, 0, 0, 0, 0, 3705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 529, 0, 0, 0, 0, 39, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 0, 0, 79, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 0, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2644, 903, 1864, 0,
	44, 75, 48, 47, 50, 0, 0, 0, 0, 83,
	0, 0, 0, 0, 3420, 3415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 3414, 0, 0, 49,
	0, 3692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 53, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2471, 0, 0, 0, 0, 0, 0, 0,
	0, 2478, 2482, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 134, 3416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3423, 3417, 3418, 3419, 3421, 3422,
	0, 0, 0, 0, 70, 0, 71, 0, 0, 0,
	0, 0, 44, 75, 48, 47, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 3415, 0, 133,
	2196, 72, 0, 0, 0, 0, 2519, 0, 0, 0,
	0, 52, 0, 0, 54, 78, 77, 0, 1868, 1868,
	0, 49, 0, 0, 0, 0, 0, 0, 0, 3424,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 61, 62, 0, 3416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3423, 3417, 3418, 3419,
	3421, 3422, 0, 0, 0, 0, 70, 0, 71, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2614, 63, 0, 0, 0, 0,
	0, 79, 0, 72, 42, 0, 0, 0, 508, 0,
	0, 0, 2644, 52, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3424, 76, 0, 58, 59, 65, 0, 66, 0,
	0, 0, 0, 83, 0, 0, 0, 0, 3420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	3414, 0, 0, 0, 0, 3684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 2733, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 2732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 507, 44, 75, 48, 47,
	50, 0, 0, 0, 0, 0, 2783, 2784, 2785, 0,
	0, 3415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 54, 78,
	77, 0, 0, 0, 0, 49, 0, 2812, 133, 0,
	0, 0, 507, 0, 39, 0, 0, 0, 51, 53,
	0, 0, 0, 0, 74, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 79, 0, 0, 42, 0, 0,
	0, 2846, 0, 0, 0, 0, 2851, 0, 508, 0,
	508, 0, 2855, 0, 0, 2856, 2857, 61, 62, 0,
	3416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3423, 3417, 3418, 3419, 3421, 3422, 83, 0, 0, 0,
	70, 3420, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3414, 0, 0, 0, 72, 3669, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 1868, 0, 2910, 0, 3424, 76, 0, 58, 59,
	65, 0, 66, 0, 0, 0, 2733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 2910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	75, 48, 47, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 3415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 78, 77, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 0, 2997, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2644, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2482, 0, 0, 0, 63, 0,
	61, 62, 0, 3416, 79, 0, 0, 42, 0, 0,
	0, 0, 0, 3423, 3417, 3418, 3419, 3421, 3422, 0,
	0, 0, 0, 70, 0, 71, 0, 0, 0, 0,
	0, 0, 51, 53, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 83, 3666, 0, 0,
	72, 3420, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2733, 3414, 0, 0, 1868, 0, 3424, 76,
	0, 58, 59, 65, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 0,
	63, 0, 0, 0, 0, 0, 79, 0, 0, 42,
	0, 2997, 0, 0, 0, 0, 0, 0, 2997, 2997,
	2997, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	75, 48, 47, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3415, 0, 0, 0, 83, 0,
	0, 0, 0, 3420, 0, 0, 0, 0, 0, 0,
	0, 54, 78, 77, 0, 0, 0, 0, 49, 0,
	0, 0, 508, 0, 2732, 3414, 0, 0, 0, 0,
	3595, 0, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 0, 79, 0, 508, 42, 67, 68, 0, 0,
	2732, 0, 0, 64, 0, 0, 0, 0, 0, 508,
	61, 62, 0, 3416, 0, 51, 53, 0, 0, 0,
	0, 74, 0, 3423, 3417, 3418, 3419, 3421, 3422, 0,
	55, 0, 0, 70, 83, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 75, 48, 47, 50, 0, 0, 0, 0,
	72, 0, 0, 0, 3240, 0, 3415, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 78, 77, 0, 0, 3665, 76,
	49, 58, 59, 65, 0, 66, 0, 0, 0, 3266,
	0, 0, 0, 0, 0, 0, 0, 2997, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 62, 0, 3416, 3293, 44, 75, 48,
	47, 50, 0, 0, 0, 3423, 3417, 3418, 3419, 3421,
	3422, 0, 0, 0, 0, 70, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	78, 77, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 52, 0, 0, 0, 0, 0, 0, 2732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3424, 76, 0, 58, 59, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2997, 0, 2997, 0, 2997, 0,
	0, 70, 0, 71, 0, 51, 53, 0, 0, 0,
	1765, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2732, 0,
	0, 0, 3446, 0, 0, 0, 56, 76, 0, 58,
	59, 65, 0, 66, 903, 0, 0, 0, 0, 1868,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 51, 53, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2997,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3567, 0, 0, 51, 53, 0, 0, 0, 0, 74,
	0, 0, 0, 3571, 0, 1868, 0, 0, 0, 0,
	2997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 1868, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 534, 679, 711, 218, 533, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 3567, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 1193, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 531,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 1949, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 770, 860, 685, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 625, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 534, 679, 711, 218, 533, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 633, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 618, 619, 750,
	806, 698, 793, 869, 731, 798, 870, 83, 0, 0,
	0, 0, 453, 557, 556, 559, 560, 561, 562, 0,
	0, 144, 558, 563, 564, 565, 0, 760, 803, 881,
	677, 531, 548, 682, 632, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 545, 546, 527, 0, 0, 0, 648, 0,
	547, 0, 692, 543, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 549, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 621, 853,
	748, 253, 161, 859, 746, 646, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 630,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	537, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 536, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 624,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	635, 297, 647, 641, 643, 642, 639, 640, 638, 637,
	636, 649, 622, 623, 626, 627, 628, 770, 860, 685,
	631, 836, 644, 645, 808, 878, 620, 203, 569, 661,
	662, 663, 570, 664, 665, 571, 572, 666, 667, 668,
	669, 573, 670, 671, 672, 650, 651, 652, 653, 654,
	655, 656, 657, 660, 658, 659, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 629, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 634, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 534, 679, 711, 218, 533,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 1193, 0, 0, 453, 557, 556, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 531, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 534, 679, 711,
	218, 533, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 556, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 531, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 1949, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 770, 860, 685, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 625, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 534,
	679, 711, 218, 533, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 633, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 618, 619, 750, 806, 698, 793, 869,
	731, 2063, 870, 83, 0, 0, 0, 0, 453, 557,
	556, 559, 560, 561, 562, 0, 0, 144, 558, 563,
	564, 565, 2064, 760, 803, 881, 677, 531, 548, 682,
	632, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 545, 546,
	0, 0, 0, 0, 648, 0, 547, 0, 692, 543,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 549, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 621, 853, 748, 253, 161, 859,
	746, 646, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 630, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 537, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 536, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 624, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 635, 297, 647, 641,
	643, 642, 639, 640, 638, 637, 636, 649, 622, 623,
	626, 627, 628, 770, 860, 685, 631, 836, 644, 645,
	808, 878, 620, 203, 569, 661, 662, 663, 570, 664,
	665, 571, 572, 666, 667, 668, 669, 573, 670, 671,
	672, 650, 651, 652, 653, 654, 655, 656, 657, 660,
	658, 659, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 629, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 634, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 923, 679, 711, 218, 921, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 1193, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 940,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 0, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 770, 860, 685, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 625, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 534, 679, 711, 218, 533, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 633, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 618, 619, 750,
	806, 698, 793, 869, 731, 798, 870, 83, 0, 0,
	0, 0, 453, 557, 1983, 559, 560, 561, 562, 0,
	0, 144, 558, 563, 564, 565, 0, 760, 803, 881,
	677, 531, 548, 682, 632, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 545, 546, 1949, 0, 0, 0, 648, 0,
	547, 0, 692, 543, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 549, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 621, 853,
	748, 253, 161, 859, 746, 646, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 630,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	537, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 536, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 624,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	635, 297, 647, 641, 643, 642, 639, 640, 638, 637,
	636, 649, 622, 623, 626, 627, 628, 770, 860, 685,
	631, 836, 644, 645, 808, 878, 620, 203, 569, 661,
	662, 663, 570, 664, 665, 571, 572, 666, 667, 668,
	669, 573, 670, 671, 672, 650, 651, 652, 653, 654,
	655, 656, 657, 660, 658, 659, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 629, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 634, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 534, 679, 711, 218, 533,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 0, 0, 0, 453, 557, 1980, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 531, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 1949, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 39,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 534, 679, 711,
	218, 533, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 556, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 531, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 0, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 770, 860, 685, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 1280, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	863, 0, 367, 625, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 534,
	679, 711, 218, 533, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 633, 264, 0, 0, 391, 355, 284, 0,
	0, 765, 0, 618, 619, 750, 806, 698, 793, 869,
	731, 798, 870, 83, 0, 1809, 0, 0, 453, 557,
	556, 559, 560, 561, 562, 0, 0, 144, 558, 563,
	564, 565, 0, 760, 803, 881, 677, 531, 548, 682,
	632, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 545, 546,
	0, 0, 0, 0, 648, 0, 547, 0, 692, 543,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 549, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 621, 853, 748, 253, 161, 859,
	746, 646, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 630, 165, 263, 838, 712,
	725, 206, 0, 331, 799, 385, 537, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 536, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 624, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 635, 297, 647, 641,
	643, 642, 639, 640, 638, 637, 636, 649, 622, 623,
	626, 627, 628, 770, 860, 685, 631, 836, 644, 645,
	808, 878, 620, 203, 569, 661, 662, 663, 570, 664,
	665, 571, 572, 666, 667, 668, 669, 573, 670, 671,
	672, 650, 651, 652, 653, 654, 655, 656, 657, 660,
	658, 659, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 629, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 634, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 625, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 923, 679, 711, 218, 921, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 633, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 618, 619, 750, 806, 698,
	793, 869, 731, 798, 870, 83, 0, 0, 0, 0,
	453, 557, 556, 559, 560, 561, 562, 0, 0, 144,
	558, 563, 564, 565, 0, 760, 803, 881, 677, 940,
	548, 682, 632, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	545, 546, 0, 0, 0, 0, 648, 0, 547, 0,
	692, 543, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 549, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 621, 853, 748, 253,
	161, 859, 746, 646, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 630, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 537, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 536, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 624, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 635, 297,
	647, 641, 643, 642, 639, 640, 638, 637, 636, 649,
	622, 623, 626, 627, 628, 770, 860, 685, 631, 836,
	644, 645, 808, 878, 620, 203, 569, 661, 662, 663,
	570, 664, 665, 571, 572, 666, 667, 668, 669, 573,
	670, 671, 672, 650, 651, 652, 653, 654, 655, 656,
	657, 660, 658, 659, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 629, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 634, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 625, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 534, 679, 711, 218, 533, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 633, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 618, 619, 750,
	806, 698, 793, 869, 731, 798, 870, 83, 0, 0,
	0, 0, 453, 557, 556, 559, 560, 561, 562, 0,
	0, 144, 558, 563, 564, 565, 0, 760, 803, 881,
	677, 531, 548, 682, 632, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 545, 546, 0, 0, 0, 0, 648, 0,
	547, 0, 692, 543, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 549, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 621, 853,
	748, 253, 161, 859, 746, 646, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 630,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	537, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 536, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 624,
	872, 176, 690, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	635, 297, 647, 641, 643, 642, 639, 640, 638, 637,
	636, 649, 622, 623, 626, 627, 628, 770, 860, 685,
	631, 836, 644, 645, 808, 878, 620, 203, 569, 661,
	662, 663, 570, 664, 665, 571, 572, 666, 667, 668,
	669, 573, 670, 671, 672, 650, 651, 652, 653, 654,
	655, 656, 657, 660, 658, 659, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 629, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 634, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 625,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 923, 679, 711, 218, 921,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 633, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 618,
	619, 750, 806, 698, 793, 869, 731, 798, 870, 83,
	0, 0, 0, 0, 453, 557, 556, 559, 560, 561,
	562, 0, 0, 144, 558, 563, 564, 565, 0, 760,
	803, 881, 677, 940, 548, 682, 632, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	648, 0, 547, 0, 692, 543, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 549, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	621, 853, 748, 253, 161, 859, 746, 646, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 630, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 537, 233, 3672, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	536, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 383, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 624, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 635, 297, 647, 641, 643, 642, 639, 640,
	638, 637, 636, 649, 622, 623, 626, 627, 628, 770,
	860, 685, 631, 836, 644, 645, 808, 878, 620, 203,
	569, 661, 662, 663, 570, 664, 665, 571, 572, 666,
	667, 668, 669, 573, 670, 671, 672, 650, 651, 652,
	653, 654, 655, 656, 657, 660, 658, 659, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	629, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	634, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 625, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 923, 679, 711,
	218, 921, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	633, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 618, 619, 750, 806, 698, 793, 869, 731, 798,
	870, 83, 0, 0, 0, 0, 453, 557, 556, 559,
	560, 561, 562, 0, 0, 144, 558, 563, 564, 565,
	0, 760, 803, 881, 677, 940, 548, 682, 632, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 545, 546, 0, 0,
	0, 0, 648, 0, 547, 0, 692, 543, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	549, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 621, 853, 748, 253, 161, 859, 746, 646,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 630, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 537, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 536, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 383, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 624, 872, 176, 690, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 635, 297, 647, 641, 643, 642,
	639, 640, 638, 637, 636, 649, 622, 623, 626, 627,
	628, 1986, 1987, 1988, 631, 836, 644, 645, 808, 878,
	620, 203, 569, 661, 662, 663, 570, 664, 665, 571,
	572, 666, 667, 668, 669, 573, 670, 671, 672, 650,
	651, 652, 653, 654, 655, 656, 657, 660, 658, 659,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 629, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 634, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	1729, 2907, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 983, 391, 355, 284, 986,
	985, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 83, 0, 1193, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 1643,
	1727, 1554, 984, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 161, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 149, 165, 263, 1695, 1536,
	1553, 206, 1867, 331, 1648, 385, 982, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 151, 340, 339,
	1568, 246, 1682, 152, 143, 326, 153, 254, 170, 1707,
	398, 184, 259, 369, 981, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	1678, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 159, 160,
	1657, 1752, 1570, 203, 138, 1494, 1495, 1496, 139, 1600,
	1601, 140, 141, 1711, 1710, 1709, 1712, 142, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 2908, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750,
	1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538,
	1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604,
	1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651,
	1708, 1730, 1603, 0, 1740, 264, 1705, 983, 391, 355,
	284, 986, 985, 1599, 1714, 1620, 1683, 1582, 1655, 1515,
	1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 1643, 1727, 1554, 984, 1594, 1652, 1755, 1486, 1639,
	0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0,
	0, 0, 0, 0, 0, 1597, 1621, 1673, 1579, 386,
	1658, 1668, 1686, 1571, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 1636, 0, 0, 0,
	1507, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 1514, 1484,
	1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253,
	161, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506,
	162, 1501, 1509, 1562, 296, 1672, 1680, 149, 165, 263,
	1695, 1536, 1553, 206, 1867, 331, 1648, 385, 982, 233,
	1629, 330, 265, 378, 1663, 1726, 384, 1565, 362, 392,
	396, 229, 1605, 197, 352, 220, 215, 1544, 1685, 1490,
	238, 318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637,
	1700, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 1696,
	1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239,
	1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389, 151,
	340, 339, 1568, 246, 1682, 152, 143, 326, 153, 254,
	170, 1707, 398, 184, 259, 369, 981, 232, 295, 208,
	1650, 306, 1550, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 1678, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 1734, 271, 224, 228, 240,
	251, 1649, 329, 359, 390, 1640, 181, 173, 361, 383,
	192, 341, 344, 397, 1674, 180, 175, 1722, 1697, 1631,
	1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644,
	1528, 235, 1661, 381, 382, 207, 399, 1504, 1742, 176,
	1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617,
	1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 1619, 0, 171, 0,
	356, 1732, 1757, 360, 189, 1523, 1689, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	1665, 1754, 304, 332, 196, 387, 353, 221, 1519, 297,
	1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677,
	1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693,
	159, 160, 1657, 1752, 1570, 203, 138, 1494, 1495, 1496,
	139, 1600, 1601, 140, 141, 1711, 1710, 1709, 1712, 142,
	1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641,
	1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 1628, 166, 177, 262,
	1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527,
	1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576,
	1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626,
	1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690,
	1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608,
	1633, 1671, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 1717, 1581, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 1566, 168,
	1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0,
	391, 355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 2577, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 161, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 149,
	165, 263, 1695, 1536, 1553, 206, 0, 331, 1648, 385,
	1916, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 151, 340, 339, 1568, 246, 1682, 152, 143, 326,
	153, 254, 170, 1707, 398, 184, 259, 369, 1915, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 1678, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 159, 160, 1657, 1752, 1570, 203, 138, 1494,
	1495, 1496, 139, 1600, 1601, 140, 141, 1711, 1710, 1709,
	1712, 142, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 0, 391, 355, 284, 0, 0, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 1643, 1727, 1554, 0, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 1910, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 161, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 149, 165, 263, 1695, 1536, 1553, 206, 0, 331,
	1648, 385, 1916, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511,
	1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 151, 340, 339, 1568, 246, 1682, 152,
	143, 326, 153, 254, 170, 1707, 398, 184, 259, 369,
	1915, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 1678, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 159, 160, 1657, 1752, 1570, 203,
	138, 1494, 1495, 1496, 139, 1600, 1601, 140, 141, 1711,
	1710, 1709, 1712, 142, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691,
	367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499,
	1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535,
	218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205,
	1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0,
	1740, 264, 1705, 0, 391, 355, 284, 0, 0, 1599,
	1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647,
	1736, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 1643, 1727, 1554,
	0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749,
	1720, 1545, 1546, 222, 0, 0, 0, 0, 0, 0,
	0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 1636, 0, 0, 0, 1507, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482,
	285, 1503, 1688, 1718, 1580, 253, 161, 1724, 1578, 1577,
	1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562,
	296, 1672, 1680, 149, 165, 263, 1695, 1536, 1553, 206,
	0, 331, 1648, 385, 1916, 233, 1629, 330, 265, 378,
	1663, 1726, 384, 1565, 362, 392, 396, 229, 1605, 197,
	352, 220, 215, 1544, 1685, 1490, 238, 318, 210, 257,
	1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510,
	1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305,
	188, 1618, 1611, 1598, 389, 151, 340, 339, 1568, 246,
	1682, 152, 143, 326, 153, 254, 170, 1707, 398, 184,
	259, 369, 1915, 232, 295, 208, 1650, 306, 1550, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 1678, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 1734, 271, 224, 228, 240, 251, 1649, 329, 359,
	390, 1640, 181, 173, 361, 383, 192, 341, 344, 397,
	1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0,
	174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381,
	382, 207, 399, 1504, 1742, 176, 1505, 1741, 292, 300,
	291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630,
	1616, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 1619, 0, 171, 0, 356, 1732, 1757, 360,
	189, 1523, 1689, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 1665, 1754, 304, 332,
	196, 387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518,
	1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716,
	0, 1610, 1725, 1498, 0, 1693, 159, 160, 1657, 1752,
	1570, 203, 138, 1494, 1495, 1496, 139, 1600, 1601, 140,
	141, 1711, 1710, 1709, 1712, 142, 1746, 1744, 1747, 1513,
	1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669,
	1543, 1602, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 1628, 166, 177, 262, 1753, 325, 231, 1481,
	1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558,
	1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589,
	1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0,
	1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706,
	1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 1717, 1581, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659,
	863, 0, 367, 928, 867, 710, 733, 876, 739, 741,
	804, 686, 781, 301, 730, 687, 0, 0, 678, 923,
	679, 711, 218, 921, 837, 782, 865, 767, 797, 807,
	217, 205, 774, 773, 854, 722, 721, 802, 850, 864,
	0, 0, 961, 264, 0, 983, 391, 355, 284, 986,
	985, 765, 0, 935, 948, 750, 806, 698, 793, 869,
	731, 798, 870, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 943,
	957, 924, 984, 760, 803, 881, 677, 940, 0, 682,
	912, 0, 855, 718, 719, 222, 0, 0, 0, 0,
	0, 0, 0, 763, 780, 822, 747, 386, 809, 818,
	832, 740, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 939, 0, 0, 0, 692, 908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 697, 675, 716, 824,
	676, 674, 285, 689, 950, 853, 748, 253, 161, 859,
	746, 927, 812, 693, 841, 734, 261, 691, 162, 688,
	694, 732, 296, 821, 827, 149, 165, 263, 838, 712,
	725, 206, 2646, 331, 799, 385, 2648, 233, 785, 330,
	265, 378, 813, 861, 384, 735, 362, 392, 396, 229,
	768, 197, 352, 220, 215, 717, 831, 681, 238, 318,
	210, 257, 751, 805, 713, 202, 816, 792, 843, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 839, 826, 845,
	708, 695, 700, 696, 724, 862, 247, 239, 846, 844,
	726, 305, 188, 778, 771, 764, 389, 151, 340, 339,
	738, 246, 829, 152, 143, 326, 153, 254, 170, 849,
	398, 184, 259, 369, 2647, 232, 295, 208, 801, 306,
	723, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	825, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 868, 271, 224, 228, 240, 251, 800,
	329, 359, 390, 794, 181, 173, 361, 383, 192, 341,
	344, 397, 823, 180, 175, 857, 840, 787, 753, 759,
	683, 0, 174, 819, 715, 727, 707, 795, 706, 235,
	811, 381, 382, 207, 399, 913, 872, 176, 690, 871,
	292, 300, 291, 874, 377, 858, 788, 777, 775, 684,
	856, 786, 776, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 779, 0, 171, 0, 356, 866,
	883, 360, 189, 701, 833, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 815, 880,
	304, 332, 196, 387, 353, 221, 918, 297, 920, 916,
	919, 917, 936, 937, 958, 959, 960, 947, 914, 0,
	955, 956, 0, 770, 860, 685, 0, 836, 159, 160,
	808, 878, 926, 203, 138, 909, 910, 911, 139, 930,
	931, 140, 141, 953, 952, 951, 954, 142, 963, 962,
	964, 915, 922, 925, 932, 933, 934, 941, 942, 949,
	944, 945, 0, 766, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 938, 166, 177, 262, 879, 325,
	231, 673, 680, 699, 702, 703, 704, 705, 709, 714,
	720, 728, 729, 737, 742, 743, 744, 745, 752, 754,
	755, 756, 757, 758, 761, 762, 772, 783, 784, 790,
	791, 0, 814, 817, 946, 828, 830, 834, 835, 842,
	847, 848, 873, 877, 882, 388, 213, 769, 789, 820,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 852, 749, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 736, 168, 851, 875,
	796, 810, 863, 0, 367, 928, 867, 710, 733, 876,
	739, 741, 804, 686, 781, 301, 730, 687, 0, 0,
	678, 923, 679, 711, 218, 921, 837, 782, 865, 767,
	797, 807, 217, 205, 774, 773, 854, 722, 721, 802,
	850, 864, 0, 0, 961, 264, 0, 0, 391, 355,
	284, 0, 0, 765, 0, 935, 948, 750, 806, 698,
	793, 869, 731, 798, 870, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 943, 957, 924, 0, 760, 803, 881, 677, 940,
	0, 682, 912, 0, 855, 718, 719, 222, 0, 0,
	0, 0, 0, 0, 0, 763, 780, 822, 747, 386,
	809, 818, 832, 740, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	692, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 697, 675,
	716, 824, 676, 674, 285, 689, 950, 853, 748, 253,
	161, 859, 746, 927, 812, 693, 841, 734, 261, 691,
	162, 688, 694, 732, 296, 821, 827, 149, 165, 263,
	838, 712, 725, 206, 0, 331, 799, 385, 907, 233,
	785, 330, 265, 378, 813, 861, 384, 735, 362, 392,
	396, 229, 768, 197, 352, 220, 215, 717, 831, 681,
	238, 318, 210, 257, 751, 805, 713, 202, 816, 792,
	843, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 839,
	826, 845, 708, 695, 700, 696, 724, 862, 247, 239,
	846, 844, 726, 305, 188, 778, 771, 764, 389, 151,
	340, 339, 738, 246, 829, 152, 143, 326, 153, 254,
	170, 849, 398, 184, 259, 369, 906, 232, 295, 208,
	801, 306, 723, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 825, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 868, 271, 224, 228, 240,
	251, 800, 329, 359, 390, 794, 181, 173, 361, 383,
	192, 341, 344, 397, 823, 180, 175, 857, 840, 787,
	753, 759, 683, 0, 174, 819, 715, 727, 707, 795,
	706, 235, 811, 381, 382, 207, 399, 913, 872, 176,
	690, 871, 292, 300, 291, 874, 377, 858, 788, 777,
	775, 684, 856, 786, 776, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 779, 0, 171, 0,
	356, 866, 883, 360, 189, 701, 833, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	815, 880, 304, 332, 196, 387, 353, 221, 918, 297,
	920, 916, 919, 917, 936, 937, 958, 959, 960, 947,
	914, 0, 955, 956, 0, 770, 860, 685, 0, 836,
	159, 160, 808, 878, 926, 203, 138, 909, 910, 911,
	139, 930, 931, 140, 141, 953, 952, 951, 954, 142,
	963, 962, 964, 915, 922, 925, 932, 933, 934, 941,
	942, 949, 944, 945, 0, 766, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 938, 166, 177, 262,
	879, 325, 231, 673, 680, 699, 702, 703, 704, 705,
	709, 714, 720, 728, 729, 737, 742, 743, 744, 745,
	752, 754, 755, 756, 757, 758, 761, 762, 772, 783,
	784, 790, 791, 0, 814, 817, 946, 828, 830, 834,
	835, 842, 847, 848, 873, 877, 882, 388, 213, 769,
	789, 820, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 852, 749, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 736, 168,
	851, 875, 796, 810, 863, 0, 367, 928, 867, 710,
	733, 876, 739, 741, 804, 686, 781, 301, 730, 687,
	0, 0, 678, 923, 679, 711, 218, 921, 837, 782,
	865, 767, 797, 807, 217, 205, 774, 773, 854, 722,
	721, 802, 850, 864, 0, 0, 961, 264, 0, 0,
	391, 355, 284, 0, 0, 765, 0, 935, 948, 750,
	806, 698, 793, 869, 731, 798, 870, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 943, 957, 924, 0, 760, 803, 881,
	677, 940, 0, 682, 912, 0, 855, 718, 719, 222,
	0, 0, 0, 0, 0, 0, 0, 763, 780, 822,
	747, 386, 809, 818, 832, 740, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 692, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	697, 675, 716, 824, 676, 674, 285, 689, 950, 853,
	748, 253, 161, 859, 746, 927, 812, 693, 841, 734,
	261, 691, 162, 688, 694, 732, 296, 821, 827, 149,
	165, 263, 838, 712, 725, 206, 0, 331, 799, 385,
	907, 233, 785, 330, 265, 378, 813, 861, 384, 735,
	362, 392, 396, 229, 768, 197, 352, 220, 215, 717,
	831, 681, 238, 318, 210, 257, 751, 805, 713, 202,
	816, 792, 843, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 839, 826, 845, 708, 695, 700, 696, 724, 862,
	247, 239, 846, 844, 726, 305, 188, 778, 771, 764,
	389, 151, 340, 339, 738, 246, 829, 152, 143, 326,
	153, 254, 170, 849, 398, 184, 259, 369, 906, 232,
	295, 208, 801, 306, 723, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 825, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 868, 271, 224,
	228, 240, 251, 800, 329, 359, 390, 794, 181, 173,
	361, 383, 192, 341, 344, 397, 823, 180, 175, 857,
	840, 787, 753, 759, 683, 0, 174, 819, 715, 727,
	707, 795, 706, 235, 811, 381, 382, 207, 399, 913,
	872, 176, 901, 871, 292, 300, 291, 874, 377, 858,
	788, 777, 775, 684, 856, 786, 776, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 897, 779, 0,
	171, 0, 356, 866, 883, 360, 189, 701, 833, 372,
	150, 323, 190, 234, 225, 315, 902, 900, 891, 892,
	258, 266, 815, 880, 304, 332, 196, 387, 353, 221,
	918, 297, 920, 916, 919, 917, 936, 937, 958, 959,
	960, 947, 914, 0, 955, 956, 0, 770, 860, 685,
	0, 836, 159, 160, 808, 878, 926, 203, 138, 909,
	910, 911, 139, 930, 931, 140, 141, 953, 952, 951,
	954, 142, 963, 962, 964, 915, 922, 925, 932, 933,
	934, 941, 942, 949, 944, 945, 0, 766, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 938, 166,
	177, 262, 879, 325, 231, 673, 680, 699, 702, 703,
	704, 705, 709, 714, 720, 728, 729, 737, 742, 743,
	744, 745, 752, 754, 755, 756, 757, 758, 761, 762,
	772, 783, 784, 790, 791, 0, 814, 817, 946, 828,
	830, 834, 835, 842, 847, 848, 873, 877, 882, 388,
	213, 769, 789, 820, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	898, 899, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 852,
	749, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	736, 168, 851, 875, 796, 810, 863, 0, 367, 928,
	867, 710, 733, 876, 739, 741, 804, 686, 781, 301,
	730, 687, 0, 0, 678, 923, 679, 711, 218, 921,
	837, 782, 865, 767, 797, 807, 217, 205, 774, 773,
	854, 722, 721, 802, 850, 864, 0, 0, 961, 264,
	0, 0, 391, 355, 284, 0, 0, 765, 0, 935,
	948, 750, 806, 698, 793, 869, 731, 798, 870, 0,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 943, 957, 924, 0, 760,
	803, 881, 677, 940, 0, 682, 912, 0, 855, 718,
	719, 222, 0, 0, 0, 0, 0, 0, 0, 763,
	780, 822, 747, 386, 809, 818, 832, 740, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 0, 0, 0, 692, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 697, 675, 716, 824, 676, 674, 285, 689,
	950, 853, 748, 253, 161, 859, 746, 927, 812, 693,
	841, 734, 261, 691, 162, 688, 694, 732, 296, 821,
	827, 149, 165, 263, 838, 712, 725, 206, 0, 331,
	799, 385, 907, 233, 785, 330, 265, 378, 813, 861,
	384, 735, 362, 392, 396, 229, 768, 197, 352, 220,
	215, 717, 831, 681, 238, 318, 210, 257, 751, 805,
	713, 202, 816, 792, 843, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 839, 826, 845, 708, 695, 700, 696,
	724, 862, 247, 239, 846, 844, 726, 305, 188, 778,
	771, 764, 389, 151, 340, 339, 738, 246, 829, 152,
	143, 326, 153, 254, 170, 849, 398, 184, 259, 369,
	906, 232, 295, 208, 801, 306, 723, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 825, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 868,
	271, 224, 228, 240, 251, 800, 329, 359, 390, 794,
	181, 173, 361, 1358, 192, 341, 344, 397, 823, 180,
	175, 857, 840, 787, 753, 759, 683, 0, 174, 819,
	715, 727, 707, 795, 706, 235, 811, 381, 382, 207,
	399, 913, 872, 176, 690, 871, 292, 300, 291, 874,
	377, 858, 788, 777, 775, 684, 856, 786, 776, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	779, 0, 171, 0, 356, 866, 883, 360, 189, 701,
	833, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 815, 880, 304, 332, 196, 387,
	353, 221, 918, 297, 920, 916, 919, 917, 936, 937,
	958, 959, 960, 947, 914, 0, 955, 956, 0, 770,
	860, 685, 0, 836, 159, 160, 808, 878, 926, 203,
	138, 909, 910, 911, 139, 930, 931, 140, 141, 953,
	952, 951, 954, 142, 963, 962, 964, 915, 922, 925,
	932, 933, 934, 941, 942, 949, 944, 945, 0, 766,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	938, 166, 177, 262, 879, 325, 231, 673, 680, 699,
	702, 703, 704, 705, 709, 714, 720, 728, 729, 737,
	742, 743, 744, 745, 752, 754, 755, 756, 757, 758,
	761, 762, 772, 783, 784, 790, 791, 0, 814, 817,
	946, 828, 830, 834, 835, 842, 847, 848, 873, 877,
	882, 388, 213, 769, 789, 820, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 852, 749, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 736, 168, 851, 875, 796, 810, 863, 0,
	367, 928, 867, 710, 733, 876, 739, 741, 804, 686,
	781, 301, 730, 687, 0, 0, 678, 923, 679, 711,
	218, 921, 837, 782, 865, 767, 797, 807, 217, 205,
	774, 773, 854, 722, 721, 802, 850, 864, 0, 0,
	961, 264, 0, 0, 391, 355, 284, 0, 0, 765,
	0, 935, 948, 750, 806, 698, 793, 869, 731, 798,
	870, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 943, 957, 924,
	0, 760, 803, 881, 677, 940, 0, 682, 912, 0,
	855, 718, 719, 222, 0, 0, 0, 0, 0, 0,
	0, 763, 780, 822, 747, 386, 809, 818, 832, 740,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 692, 908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 0, 0, 697, 675, 716, 824, 676, 674,
	285, 689, 950, 853, 748, 253, 161, 859, 746, 927,
	812, 693, 841, 734, 261, 691, 162, 688, 694, 732,
	296, 821, 827, 149, 165, 263, 838, 712, 725, 206,
	0, 331, 799, 385, 907, 233, 785, 330, 265, 378,
	813, 861, 384, 735, 362, 392, 396, 229, 768, 197,
	352, 220, 215, 717, 831, 681, 238, 318, 210, 257,
	751, 805, 713, 202, 816, 792, 843, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 839, 826, 845, 708, 695,
	700, 696, 724, 862, 247, 239, 846, 844, 726, 305,
	188, 778, 771, 764, 389, 151, 340, 339, 738, 246,
	829, 152, 143, 326, 153, 254, 170, 849, 398, 184,
	259, 369, 906, 232, 295, 208, 801, 306, 723, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 825, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 868, 271, 224, 228, 240, 251, 800, 329, 359,
	390, 794, 181, 173, 361, 888, 192, 341, 344, 397,
	823, 180, 175, 857, 840, 787, 753, 759, 683, 0,
	174, 819, 715, 727, 707, 795, 706, 235, 811, 381,
	382, 207, 399, 913, 872, 176, 901, 871, 292, 300,
	291, 874, 377, 858, 788, 777, 775, 684, 856, 786,
	776, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 897, 779, 0, 171, 0, 356, 866, 883, 360,
	189, 701, 833, 372, 150, 323, 190, 234, 225, 315,
	902, 900, 891, 892, 258, 266, 815, 880, 304, 332,
	196, 387, 353, 221, 918, 297, 920, 916, 919, 917,
	936, 937, 958, 959, 960, 947, 914, 0, 955, 956,
	0, 770, 860, 685, 0, 836, 159, 160, 808, 878,
	926, 203, 138, 909, 910, 911, 139, 930, 931, 140,
	141, 953, 952, 951, 954, 142, 963, 962, 964, 915,
	922, 925, 932, 933, 934, 941, 942, 949, 944, 945,
	0, 766, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 938, 166, 177, 262, 879, 325, 231, 673,
	680, 699, 702, 703, 704, 705, 709, 714, 720, 728,
	729, 737, 742, 743, 744, 745, 752, 754, 755, 756,
	757, 758, 761, 762, 772, 783, 784, 790, 791, 0,
	814, 817, 946, 828, 830, 834, 835, 842, 847, 848,
	873, 877, 882, 388, 213, 769, 789, 820, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 898, 899, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 852, 749, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 736, 168, 851, 875, 796, 810,
	1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 0, 391, 355, 284, 0,
	0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 0, 0, 0, 0, 0, 2726, 0,
	2721, 2722, 0, 0, 0, 0, 0, 2723, 0, 1643,
	1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536,
	1553, 206, 0, 331, 1648, 385, 0, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 0, 340, 339,
	1568, 246, 1682, 0, 0, 326, 2725, 254, 170, 1707,
	398, 184, 259, 369, 0, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	1678, 324, 342, 373, 186, 358, 2724, 0, 0, 0,
	333, 0, 0, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0,
	1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600,
	1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 1753, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750,
	1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538,
	1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604,
	1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651,
	1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391, 355,
	284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515,
	1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639,
	0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0,
	0, 0, 0, 0, 0, 1597, 1621, 1673, 1579, 386,
	1658, 1668, 1686, 1571, 319, 237, 0, 0, 0, 0,
	0, 0, 3101, 0, 1540, 0, 1636, 0, 0, 0,
	1507, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 1514, 1484,
	1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253,
	0, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506,
	162, 1501, 1509, 1562, 296, 1672, 1680, 0, 165, 263,
	1695, 1536, 1553, 206, 0, 331, 1648, 385, 0, 233,
	1629, 330, 265, 378, 1663, 1726, 384, 1565, 362, 392,
	396, 229, 1605, 197, 352, 220, 215, 1544, 1685, 1490,
	238, 318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637,
	1700, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 1696,
	1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239,
	1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389, 0,
	340, 339, 1568, 246, 1682, 0, 0, 326, 0, 254,
	170, 1707, 398, 184, 259, 369, 0, 232, 295, 208,
	1650, 306, 1550, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 1678, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 1734, 271, 224, 228, 240,
	251, 1649, 329, 359, 390, 1640, 181, 173, 361, 383,
	192, 341, 344, 397, 1674, 180, 175, 1722, 1697, 1631,
	1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644,
	1528, 235, 1661, 381, 382, 207, 399, 1504, 1742, 176,
	1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617,
	1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 1619, 0, 171, 0,
	356, 1732, 1757, 360, 189, 1523, 1689, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	1665, 1754, 304, 332, 196, 387, 353, 221, 1519, 297,
	1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677,
	1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693,
	0, 0, 1657, 1752, 1570, 203, 0, 1494, 1495, 1496,
	0, 1600, 1601, 0, 0, 1711, 1710, 1709, 1712, 0,
	1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641,
	1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 1628, 166, 177, 262,
	1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527,
	1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576,
	1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626,
	1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690,
	1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608,
	1633, 1671, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 1717, 1581, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 1566, 168,
	1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0,
	391, 355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 2570, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0,
	165, 263, 1695, 1536, 1553, 206, 0, 331, 1648, 385,
	0, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 0, 340, 339, 1568, 246, 1682, 0, 0, 326,
	0, 254, 170, 1707, 398, 184, 259, 369, 0, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 1678, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494,
	1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709,
	1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 0, 391, 355, 284, 0, 0, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1727, 1554, 0, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 2372, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 0, 165, 263, 1695, 1536, 1553, 206, 0, 331,
	1648, 385, 0, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511,
	1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 0, 340, 339, 1568, 246, 1682, 0,
	0, 326, 0, 254, 170, 1707, 398, 184, 259, 369,
	0, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 1678, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203,
	0, 1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711,
	1710, 1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691,
	367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499,
	1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535,
	218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205,
	1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0,
	1740, 264, 1705, 0, 391, 355, 284, 0, 0, 1599,
	1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647,
	1736, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 1727, 1554,
	0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749,
	1720, 1545, 1546, 222, 0, 0, 0, 0, 0, 0,
	0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	1540, 0, 1636, 0, 0, 0, 1507, 1493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482,
	285, 1503, 1688, 1718, 1580, 253, 0, 1724, 1578, 1577,
	1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562,
	296, 1672, 1680, 0, 165, 263, 1695, 1536, 1553, 206,
	0, 331, 1648, 385, 0, 233, 1629, 330, 265, 378,
	1663, 1726, 384, 1565, 362, 392, 396, 229, 1605, 197,
	352, 220, 215, 1544, 1685, 1490, 238, 318, 210, 257,
	1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510,
	1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305,
	188, 1618, 1611, 1598, 389, 0, 340, 339, 1568, 246,
	1682, 0, 0, 326, 0, 254, 170, 1707, 398, 184,
	259, 369, 0, 232, 295, 208, 1650, 306, 1550, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 1678, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 1734, 271, 224, 228, 240, 251, 1649, 329, 359,
	390, 1640, 181, 173, 361, 383, 192, 341, 344, 397,
	1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0,
	174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381,
	382, 207, 399, 1504, 1742, 176, 1505, 1741, 292, 300,
	291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630,
	1616, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 1619, 0, 171, 0, 356, 1732, 1757, 360,
	189, 1523, 1689, 372, 1960, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 1665, 1754, 304, 332,
	196, 387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518,
	1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716,
	0, 1610, 1725, 1498, 0, 1693, 0, 0, 1657, 1752,
	1570, 203, 0, 1494, 1495, 1496, 0, 1600, 1601, 0,
	0, 1711, 1710, 1709, 1712, 0, 1746, 1744, 1747, 1513,
	1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669,
	1543, 1602, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 1628, 166, 177, 262, 1753, 325, 231, 1481,
	1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558,
	1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589,
	1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0,
	1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706,
	1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 1717, 1581, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659,
	1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572,
	1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551,
	1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656,
	217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730,
	1603, 0, 1740, 264, 1705, 0, 391, 355, 284, 0,
	0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735,
	1561, 1647, 1736, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491,
	1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0, 0,
	0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668,
	1686, 1571, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 0, 1636, 0, 0, 0, 1507, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675,
	1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724,
	1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501,
	1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536,
	1553, 206, 0, 331, 1648, 385, 0, 233, 1629, 330,
	265, 378, 1663, 1726, 384, 1565, 362, 392, 396, 229,
	1605, 197, 352, 220, 215, 1544, 1685, 1490, 238, 318,
	210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 1696, 1679, 1702,
	1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701,
	1555, 305, 188, 1618, 1611, 1598, 389, 0, 340, 339,
	1568, 246, 1682, 0, 0, 326, 0, 254, 170, 1707,
	398, 184, 259, 369, 0, 232, 295, 208, 1650, 306,
	1550, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	1678, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 1734, 271, 224, 228, 240, 251, 1649,
	329, 359, 390, 1640, 181, 173, 361, 383, 192, 341,
	344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592,
	1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235,
	1661, 381, 382, 207, 399, 1504, 1742, 176, 1505, 1741,
	292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497,
	1721, 1630, 1616, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 1619, 0, 171, 0, 356, 1732,
	1757, 360, 189, 1523, 1689, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 1665, 1754,
	304, 332, 196, 387, 353, 221, 1519, 297, 1522, 1517,
	1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0,
	1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0,
	1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600,
	1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744,
	1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687,
	1660, 1669, 1543, 1602, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 1628, 166, 177, 262, 1753, 325,
	231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539,
	1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587,
	1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634,
	1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699,
	1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 1717, 1581, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 1566, 168, 1713, 1748,
	1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750,
	1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538,
	1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604,
	1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651,
	1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391, 355,
	284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515,
	1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0, 0,
	3484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639,
	0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0,
	0, 0, 0, 0, 0, 1597, 1621, 1673, 1579, 386,
	1658, 1668, 1686, 1571, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 1636, 0, 0, 0,
	1507, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 1514, 1484,
	1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253,
	0, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506,
	162, 1501, 1509, 1562, 296, 1672, 1680, 0, 165, 263,
	1695, 1536, 1553, 206, 0, 331, 1648, 385, 0, 233,
	1629, 330, 265, 378, 1663, 1726, 384, 1565, 362, 392,
	396, 229, 1605, 197, 352, 220, 215, 1544, 1685, 1490,
	238, 318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637,
	1700, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 1696,
	1679, 1702, 1530, 1510, 1521, 3487, 3488, 3489, 247, 239,
	1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389, 0,
	340, 339, 1568, 246, 1682, 0, 0, 326, 0, 254,
	170, 1707, 398, 184, 259, 369, 0, 232, 295, 208,
	1650, 306, 1550, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 1678, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 1734, 271, 224, 228, 240,
	251, 1649, 329, 359, 390, 1640, 181, 173, 361, 383,
	192, 341, 344, 397, 1674, 180, 175, 1722, 1697, 1631,
	1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644,
	1528, 235, 1661, 381, 382, 207, 399, 1504, 1742, 176,
	1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617,
	1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 1619, 0, 171, 0,
	356, 1732, 1757, 360, 189, 1523, 1689, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	1665, 1754, 304, 332, 196, 387, 353, 221, 1519, 297,
	1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677,
	1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693,
	0, 0, 1657, 1752, 1570, 203, 0, 1494, 1495, 1496,
	0, 1600, 1601, 0, 0, 1711, 1710, 1709, 1712, 0,
	1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641,
	1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 1628, 166, 177, 262,
	1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527,
	1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576,
	1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626,
	1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690,
	1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608,
	1633, 1671, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 1717, 1581, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 1566, 168,
	1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533,
	1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500,
	1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625,
	1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549,
	1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0,
	391, 355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582,
	1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0,
	0, 0, 2726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755,
	1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222,
	0, 0, 0, 0, 0, 0, 0, 1597, 1621, 1673,
	1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 0, 1636, 0,
	0, 0, 1507, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718,
	1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564,
	261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0,
	165, 263, 1695, 1536, 1553, 206, 0, 331, 1648, 385,
	0, 233, 1629, 330, 265, 378, 1663, 1726, 384, 1565,
	362, 392, 396, 229, 1605, 197, 352, 220, 215, 1544,
	1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537, 202,
	1666, 1637, 1700, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728,
	247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598,
	389, 0, 340, 339, 1568, 246, 1682, 0, 0, 326,
	0, 254, 170, 1707, 398, 184, 259, 369, 0, 232,
	295, 208, 1650, 306, 1550, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 1678, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 1734, 271, 224,
	228, 240, 251, 1649, 329, 359, 390, 1640, 181, 173,
	361, 383, 192, 341, 344, 397, 1674, 180, 175, 1722,
	1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557,
	1529, 1644, 1528, 235, 1661, 381, 382, 207, 399, 1504,
	1742, 176, 1505, 1741, 292, 300, 291, 1745, 377, 1723,
	1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 1619, 0,
	171, 0, 356, 1732, 1757, 360, 189, 1523, 1689, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 1665, 1754, 304, 332, 196, 387, 353, 221,
	1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738,
	1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498,
	0, 1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494,
	1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709,
	1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607,
	1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 1628, 166,
	177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525,
	1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574,
	1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596,
	1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681,
	1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388,
	213, 1608, 1633, 1671, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 1717,
	1581, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584,
	1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301,
	1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531,
	1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613,
	1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264,
	1705, 0, 391, 355, 284, 0, 0, 1599, 1714, 1620,
	1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1727, 1554, 0, 1594,
	1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545,
	1546, 222, 0, 0, 0, 0, 0, 0, 0, 1597,
	1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	1636, 0, 0, 0, 1507, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503,
	1688, 1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508,
	1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672,
	1680, 0, 165, 263, 1695, 1536, 1553, 206, 0, 331,
	1648, 385, 0, 233, 1629, 330, 265, 378, 1663, 1726,
	384, 1565, 362, 392, 396, 229, 1605, 197, 352, 220,
	215, 1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654,
	1537, 202, 1666, 1637, 1700, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511,
	1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618,
	1611, 1598, 389, 0, 340, 339, 1568, 246, 1682, 0,
	0, 326, 0, 254, 170, 1707, 398, 184, 259, 369,
	0, 232, 295, 208, 1650, 306, 1550, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 1678, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 1734,
	271, 224, 228, 240, 251, 1649, 329, 359, 390, 1640,
	181, 173, 361, 383, 192, 341, 344, 397, 1674, 180,
	175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670,
	1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207,
	399, 1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745,
	377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	1619, 0, 171, 0, 356, 1732, 1757, 360, 189, 1523,
	1689, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 1665, 1754, 304, 332, 196, 387,
	353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624,
	1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610,
	1725, 1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203,
	0, 1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711,
	1710, 1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556,
	1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	1628, 166, 177, 262, 1753, 325, 231, 1481, 1489, 1516,
	1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567,
	1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591,
	1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667,
	1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751,
	1756, 388, 213, 1608, 1633, 1671, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 1717, 1581, 163, 0, 0, 169, 367, 0, 0,
	0, 0, 1566, 168, 1713, 1748, 1645, 1659, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 2081, 2085, 0, 0, 264, 0,
	983, 391, 355, 284, 986, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 2084, 253, 161, 0, 0, 0, 2078, 0, 2079,
	2080, 261, 987, 162, 0, 2076, 2083, 296, 0, 0,
	149, 165, 263, 0, 0, 0, 206, 976, 331, 0,
	385, 982, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 151, 340, 339, 0, 246, 0, 152, 143,
	326, 153, 254, 170, 0, 398, 184, 259, 369, 981,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 0, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 1217, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 983, 391, 355, 284, 986, 985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 1221, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	984, 0, 1213, 1214, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 253, 161, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 149, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 982, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 151, 340, 339, 0, 246,
	0, 152, 143, 326, 153, 254, 170, 0, 398, 184,
	259, 369, 981, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 0, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 983, 391, 355, 284,
	986, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 161,
	0, 0, 0, 0, 0, 0, 0, 261, 987, 162,
	0, 977, 0, 296, 0, 0, 149, 165, 263, 0,
	0, 0, 206, 976, 331, 0, 385, 982, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 151, 340,
	339, 0, 246, 0, 152, 143, 326, 153, 254, 170,
	0, 398, 184, 259, 369, 981, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 0, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 983,
	391, 355, 284, 986, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 1221, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 161, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 149,
	165, 263, 0, 0, 0, 206, 1909, 331, 0, 385,
	982, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 151, 340, 339, 0, 246, 0, 152, 143, 326,
	153, 254, 170, 0, 398, 184, 259, 369, 981, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 0, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 983, 391, 355, 284, 986, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2841, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 161, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 149, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 982, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 151, 340, 339, 0, 246, 0,
	152, 143, 326, 153, 254, 170, 0, 398, 184, 259,
	369, 981, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 0, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 983, 391, 355, 284, 986,
	985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2836, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 161, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 149, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 982, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 151, 340, 339,
	0, 246, 0, 152, 143, 326, 153, 254, 170, 0,
	398, 184, 259, 369, 981, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	0, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 0, 163, 39, 367,
	169, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2354,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 161, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 149, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 151, 340, 339, 0, 246, 0,
	152, 143, 326, 153, 254, 170, 0, 398, 184, 259,
	369, 135, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 0, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 518, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 161, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 149, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 151, 340, 339,
	0, 246, 0, 152, 143, 326, 153, 254, 170, 0,
	398, 184, 259, 369, 135, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	0, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3246, 2044, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0,
	0, 2043, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 161, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 149, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	151, 340, 339, 0, 246, 0, 152, 143, 326, 153,
	254, 170, 0, 398, 184, 259, 369, 135, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 0, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 160, 0, 0, 0, 203, 138, 0, 0,
	0, 139, 0, 0, 140, 141, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 285, 0,
	0, 0, 0, 253, 161, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 149, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 443, 440, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 151, 340, 339, 0, 246, 0, 152,
	143, 326, 153, 254, 170, 0, 398, 184, 259, 369,
	135, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 0, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 160, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 161, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 149, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 2148, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 151, 340, 339, 0,
	246, 0, 152, 143, 326, 153, 254, 170, 0, 398,
	184, 259, 369, 135, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 0,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 160, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	161, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 149, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 151,
	340, 339, 0, 246, 0, 152, 143, 326, 153, 254,
	170, 0, 398, 184, 259, 369, 135, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 0, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 160, 0, 0, 0, 203, 138, 0, 0, 0,
	139, 0, 0, 140, 141, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 1348, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 253, 161, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	149, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 151, 340, 339, 0, 246, 0, 152, 143,
	326, 153, 254, 170, 0, 398, 184, 259, 369, 135,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 0, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 130, 0, 253, 161, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 149, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 151, 340, 339, 0, 246,
	0, 152, 143, 326, 153, 254, 170, 0, 398, 184,
	259, 369, 135, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 0, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 161,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 149, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 151, 340,
	339, 0, 246, 0, 152, 143, 326, 153, 254, 170,
	0, 398, 184, 259, 369, 135, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 0, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 0, 163, 0,
	0, 169, 483, 367, 477, 488, 471, 0, 168, 0,
	0, 0, 0, 0, 301, 0, 0, 494, 0, 0,
	0, 0, 0, 218, 0, 0, 478, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 469, 472,
	0, 0, 0, 285, 0, 0, 0, 476, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 480, 0, 0, 165, 263, 484,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 487, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 497, 342, 373, 186, 358, 473, 474, 475,
	481, 482, 485, 486, 489, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	479, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 0, 163, 0,
	0, 169, 483, 367, 477, 488, 471, 0, 168, 0,
	0, 0, 0, 0, 301, 0, 0, 463, 0, 0,
	0, 0, 0, 218, 0, 0, 478, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 469, 472,
	0, 0, 0, 285, 0, 0, 0, 476, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 480, 0, 0, 165, 263, 484,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 487, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 466, 342, 373, 186, 358, 473, 474, 475,
	481, 482, 485, 486, 489, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 203, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 979, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 0, 0, 1244, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	479, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 285, 163, 0,
	0, 169, 253, 0, 0, 0, 0, 0, 168, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 2359, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2361, 2363, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 2357, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 253, 0, 0, 2362, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 0, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 0, 340, 339, 0, 246,
	0, 0, 0, 326, 0, 254, 170, 0, 398, 184,
	259, 369, 0, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 0, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 2359,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 2363, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 0,
	0, 2362, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 503, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 3604, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 2670, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 203, 138, 0, 218,
	0, 139, 0, 0, 140, 141, 0, 217, 205, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 979, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 285,
	163, 0, 0, 169, 253, 0, 0, 0, 0, 0,
	168, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 3560, 0, 0, 0,
	0, 0, 218, 3558, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 3559, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 203, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 979, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2483, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 285, 163, 0, 0,
	169, 253, 0, 0, 0, 0, 0, 168, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 2484, 2485, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 1788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 1364, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 979, 0,
	1363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2827,
	0, 0, 0, 0, 2829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 203,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 979, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	2811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 0, 285, 163, 0, 0, 169, 253, 0, 0,
	0, 0, 0, 168, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0,
	0, 979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 203, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 979, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 2195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 285,
	163, 0, 0, 169, 253, 0, 0, 0, 0, 0,
	168, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	203, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	2237, 2238, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 979,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 285, 163, 0, 0, 169, 253, 0,
	0, 0, 0, 0, 168, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 203, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 979, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 285, 163, 0,
	0, 169, 253, 0, 0, 0, 0, 0, 168, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 2829, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 203, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 136, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 285, 163, 0, 0, 169,
	253, 0, 0, 0, 0, 0, 168, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 203, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 453, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 285,
	163, 0, 0, 169, 253, 0, 0, 0, 0, 0,
	168, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	203, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 1029,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 0, 285, 163, 0, 0, 169, 253, 0,
	0, 0, 0, 0, 168, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 0, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 0, 340,
	339, 0, 246, 0, 0, 0, 326, 0, 254, 170,
	0, 398, 184, 259, 369, 0, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 0, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 203, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 1019, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 0, 285, 163, 0,
	0, 169, 253, 0, 0, 0, 0, 0, 168, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 403, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 203, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 401, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 285, 163, 0, 0, 169,
	253, 0, 0, 0, 0, 0, 168, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 79,
	0, 0, 42, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 83, 325, 231, 0, 0, 3420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3414, 0,
	0, 0, 0, 3591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 0, 39,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 63, 44, 75, 48, 47, 50, 79,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 3415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 78, 77, 0,
	0, 0, 0, 49, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 0, 0, 0, 3420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 62, 0, 3416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3423, 3417,
	3418, 3419, 3421, 3422, 0, 0, 0, 0, 70, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 75, 48, 47, 50, 0,
	0, 0, 0, 3424, 76, 0, 58, 59, 65, 3415,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 78, 77, 0,
	0, 0, 0, 49, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 62, 0, 3416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3423, 3417,
	3418, 3419, 3421, 3422, 0, 0, 0, 0, 70, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3424, 76, 0, 58, 59, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 53, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 53, 0, 0, 0, 0, 74,
}

var yyPact = [...]int{
	7486, -1000, -446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2220, -1000,
	-1000, 350, -1000, 1146, 324, -1000, -1000, 397, 152, 37313,
	779, 52888, 52444, -270, 1667, 50668, 77, -1000, 77, 236,
	34821, 504, 713, 51112, 2116, 1663, 79, -42, -45, 150,
	39196, 38566, 41, -1000, 41509, 94, 84, -1000, -1000, -1000,
	-1000, 2291, 229, -1000, -1000, 2191, 2218, 2044, -1000, 8679,
	-1000, -1000, -1000, -1000, -1000, 22803, -1000, 2286, 37936, 30456,
	-1000, 765, 746, -167, 684, 684, 357, 684, 684, 776,
	-1000, 356, 1090, -1000, -1000, -1000, -1000, 1075, 37936, 46758,
	688, 49780, 688, 688, 688, 688, 688, 688, 688, 52000,
	37936, -1000, 865, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37936, 2271, 2270, 1989, 1988, 51556, 1657, 2152, 1135, 160,
	1135, -1000, -1000, 1106, -1000, 460, 456, 479, 454, 185,
	1181, 2205, -1000, 1893, 2191, 2191, -1000, -1000, -1000, -1000,
	-1000, -1000, 921, -1000, -1000, 1144, 1144, 373, 743, 250,
	516, 229, 2180, 1072, 2151, 2150, 1423, 2142, 818, 2141,
	1979, -1000, 862, -1000, -1000, -17, -1000, 1656, 37936, -1000,
	-1000, 1384, 1363, 390, 1848, 847, 2006, -1000, -1000, 405,
	624, 1963, 448, 1963, 1963, 1963, 1963, 1963, -54, 1963,
	1963, 1963, 123, 1963, 188, 1963, 1963, 1963, 1963, 1963,
	1732, -1000, -1000, -1000, 416, 1843, 1885, 2005, 650, -1000,
	-1000, -1000, 1975, 43378, 1902, -1000, 1893, -1000, -1000, -1000,
	1615, 774, -1000, -107, 1975, 2194, 1265, -1000, 41509, 2145,
	1219, 15099, 2083, -1000, -1000, 1184, 2269, -1000, 29833, 861,
	-1000, 15099, 2685, 1893, 1893, -1000, 825, 918, -1000, 803,
	849, -1000, -1000, 14457, 14457, 14457, 14457, 14457, 14457, 14457,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1893, 858, 856, 1893,
	1893, 1893, 1893, 1893, -1000, 13173, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1893, 1893,
	1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 15099, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 1893, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 708, 708, 36690, 1913, -77, 22161,
	-1000, -1000, -1000, -1000, 20877, 46135, 1064, -1000, -1000, -1000,
	-1000, 2140, -1000, -1000, 851, 849, 825, 824, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2220, -1000, -1000, 1814,
	709, -1000, 4618, 4618, 4618, 4618, 4618, 481, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1970, 49780, 37936,
	337, 1642, 1107, 1641, 51112, 51112, -1000, 334, 46758, 46758,
	684, 345, 46758, 307, 1911, 742, 1910, 739, 1680, 37936,
	2172, 2004, 37936, 1635, 1634, 51112, 51112, 46758, 46758, -1000,
	-1000, -1000, 28581, 1909, -1000, 1553, 1552, 15099, 15099, -1000,
	-1000, -1000, 1135, -1000, 7715, 15099, 684, 684, 37936, 37936,
	37936, 37936, -1000, 37936, -1000, -1000, 1135, 1135, 1135, 1135,
	1092, 2268, 1092, -1000, 1092, -1000, -1000, 15099, -1000, 14457,
	45512, 943, -1000, -1000, 50668, 573, 573, 573, -1000, 1632,
	359, -1000, -1000, -1000, -1000, -1000, 250, -1000, -1000, 2120,
	1631, 818, 818, -1000, 1551, 818, 1898, -1000, 1054, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 818, -1000, 13815, 49780, -425, -1000, -1000, 1908, -1000,
	449, -1000, -1000, 704, 2003, 704, 213, 46758, 46758, 46758,
	-1000, 1963, 49780, -1000, 1963, 1963, 1963, -57, 1963, 1963,
	-1000, -1000, 1963, -1000, -1000, -1000, -1000, -1000, 1963, -1000,
	-1000, -1000, 1963, 1963, -1000, 1963, 1963, -1000, -1000, -1000,
	-1000, -1000, 46758, 704, 215, 1903, 704, 46758, 46758, -1000,
	112, 111, 108, 105, -1000, -1000, -1000, -1000, 100, 99,
	-1000, -1000, -1000, 1902, 43378, 2189, 17667, 2156, -1000, 2156,
	-1000, -1000, -1000, 172, -1000, 37936, -83, -1000, -1000, 229,
	-1000, -1000, -1000, -1000, 1975, 1179, 2279, 1004, 1888, -1000,
	-1000, 1901, -1000, 1149, 846, 1421, 2058, -1000, -1000, -1000,
	37936, -1000, 15099, 15099, 15099, 1288, -1000, 31079, -1000, -1000,
	-1000, -1000, -1000, -1000, 18951, 1016, 14457, 1228, 1012, 14457,
	14457, 14457, 14457, 14457, 14457, 14457, 14457, 14457, 14457, 14457,
	14457, 14457, 14457, 14457, 1259, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1629, -1000, 229, 26655, 9963, 26655, 1716,
	1716, 49780, 900, 900, 900, 900, 900, 900, 39640, 2185,
	26013, 26655, 2185, 2185, 2185, 2185, 2185, 1265, 1806, 1251,
	41509, 13173, 9963, 9963, 9963, 1265, 15099, 15099, 9963, 9963,
	12531, 11889, 16383, 9963, 9963, 2185, 1102, 1251, 20877, 9963,
	-1000, -1000, 11247, -1000, -1000, -1000, -1000, -1000, 1265, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49780, 49780, 9963,
	9963, 9963, 9963, 1265, 1265, 9963, 9963, 9963, 9963, 9963,
	1265, 1265, 1265, 1265, 9963, 9963, 9963, 9963, 9963, 9963,
	9963, 9963, 9963, 9963, 9963, 9963, 36067, 34198, 37936, 1849,
	1836, -1000, 845, 21519, 1864, -1000, -88, -99, -77, -1000,
	-1000, 892, -1000, -1000, -1000, 10605, -1000, 19593, 2191, 2044,
	-1000, 29210, -1000, -1000, -30, -1000, -1000, -1000, 1938, -1000,
	1959, 352, 48, 1959, 1959, 1959, 1959, 1959, -1000, -1000,
	-1000, -1000, 21, -1000, -1000, -1000, -1000, -1000, 1969, 1968,
	-1000, 1938, 1938, 1938, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1961, 351, 1942, 1942, 1942, 1942, 1942,
	-1000, -1000, -1000, -1000, 612, 612, 612, -1000, 15099, 1982,
	2188, 745, 345, 2156, 2169, 2156, 561, -1000, 844, 1964,
	452, 1879, -1000, 227, 1829, 35444, -1000, -1000, -1000, -1000,
	-1000, 37936, 37936, 46758, 46758, 46758, 738, -1000, 37936, 1900,
	-1000, -1000, -1000, -1000, -1000, 1855, -1000, 1829, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37936, -1000,
	-1000, 1899, 1251, 1899, -1000, -1000, 1550, 1251, 1628, 1627,
	2180, -1000, -1000, -1000, 1100, -1000, -1000, -1000, -1000, 1135,
	50668, 50668, 37936, 2180, 1135, 1251, 1104, 1986, 1893, 1265,
	-1000, -1000, 68, -1000, 65, -1000, -1000, -1000, 1625, -1000,
	14457, -1000, 1898, 1898, -1000, 1898, 818, 1716, 1898, -1000,
	1804, -1000, 1160, 1537, 37936, -1000, 43378, -18, -1000, -133,
	48892, -1000, -1000, -1000, 704, 48892, -1000, 123, 168, -1000,
	736, -1000, 1802, -1000, -1000, -1000, -1000, 1963, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48892, 166, 210,
	48892, 1855, 2266, -1000, -1000, -1000, -1000, 2204, -1000, -1000,
	1893, 1780, -1000, 837, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2139, 1024, 1024, 1024, 705, -1000,
	-1000, 1265, -1000, 49336, -1000, 2050, 1219, 1219, 15099, -1000,
	-1000, -1000, 19593, 2202, -1000, 2064, 2063, 2023, -1000, -1000,
	1016, 1094, 1028, -1000, -1000, 1195, -1000, -1000, -1000, -1000,
	-1000, 836, 1893, -1000, -1000, -1000, -1000, -1000, 3749, -1000,
	-1000, -1000, -1000, 1228, 14457, 14457, 14457, 1104, 3749, 3217,
	1892, 1280, 900, 1013, 1013, 931, 931, 931, 931, 931,
	1190, 1190, -1000, -1000, -1000, 1265, -1000, 1767, -1000, -1000,
	1251, 834, -1000, -1000, -1000, -1000, -1000, -1000, 9963, -1000,
	-1000, -1000, 9963, 9963, 9963, 9963, 9963, -1000, 15099, -1000,
	1265, 1767, 1767, 1767, -1000, 1183, 1496, 1735, 1767, 988,
	2265, 1767, 974, 2262, 1767, 1299, 14457, 14457, 14457, 1767,
	1767, 9963, 1111, -1000, 15099, 1265, 1767, -1000, 1598, 1891,
	1890, 1767, 1265, 1889, 1767, 1767, -184, -184, 1265, 1767,
	1265, 1767, 1767, -184, -184, -184, -184, 1767, 1767, 1767,
	1767, 1767, 1767, 1767, 1767, 1767, 1767, 1767, 1767, 989,
	37936, -1000, 1863, 500, -1000, -1000, -1000, 2187, 32952, -1000,
	-1000, 40263, -1000, 1893, 1893, 989, 1824, 34198, -1000, -1000,
	34198, 50668, 25371, -1000, 20877, -77, -114, -1000, -1000, 1864,
	-1000, -1000, 1367, -1000, -1000, 1251, -1000, 833, 2145, 2185,
	4194, 709, -1000, -1000, -1000, 1962, 312, -1000, 2082, 904,
	904, 953, 1597, 2080, -1000, -1000, 170, -33, -1000, -1000,
	-1000, 1362, -1000, 200, -1000, 1959, 1959, 342, 1959, -1000,
	-1000, -1000, -1000, -1000, -1000, 1535, 1535, -1000, -1000, -1000,
	-1000, 1341, -1000, 1961, -1000, 1339, -1000, -1000, -1000, -1000,
	170, 170, 170, 170, -1000, -1000, -1000, 1448, 2002, 49780,
	-1000, 37936, -1000, -1000, -1000, 2244, -1000, -1000, 49780, 44889,
	-1000, -1000, 129, 46758, 225, 398, 218, -1000, -1000, 734,
	-1000, 732, -1000, -1000, -1000, -1000, -1000, -1000, 37936, 46758,
	-1000, 15099, -1000, -1000, -1000, -1000, 2237, 1624, 1622, -1000,
	-1000, -1000, 1092, 1135, -1000, -1000, 14457, 46758, -1000, 475,
	-1000, -1000, -1000, 3749, -1000, -1000, -1000, 989, 769, -1000,
	-1000, -69, -1000, -1000, 730, 832, 830, 48892, 728, -1000,
	147, 46758, -1000, 49780, -1000, 2260, 2256, 165, 2255, 46758,
	-1000, 88, -1000, 214, -1000, 17667, 26655, 1024, 1032, -1000,
	979, 1534, 1862, -1000, 857, 840, 939, 622, 622, -1000,
	1024, 622, 2131, 2122, 987, -1000, 1861, 1531, 1528, -1000,
	2048, -1000, -1000, -1000, 37936, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 24729, 9963, -1000, 1104, 3749, 2538,
	-1000, 14457, -1000, 9963, -1000, 18309, 1265, 1767, 1767, 1767,
	1767, 1767, 1251, -1000, -1000, -1000, -1000, 547, 1259, 547,
	-1000, 1259, -1000, 14457, 14457, -1000, 14457, 14457, -1000, -1000,
	14457, 3676, 2840, 1699, -277, -1000, 1884, 1096, -1000, 15099,
	1437, -1000, -1000, -1000, 14457, 14457, -1000, -1000, -1000, -1000,
	-1000, 48448, -1000, -184, -184, -184, -184, -184, -1000, -1000,
	-1000, -1000, -184, -184, -184, -184, -184, -184, -184, -184,
	-184, -184, -184, -184, 219, 1893, -1000, 20235, 34198, 34198,
	34198, 34198, 34198, -1000, 2034, 2033, -1000, 2020, 2018, 2017,
	318, 43378, 1797, 1265, 392, 32952, -1000, 1893, -1000, 42755,
	855, 762, 757, 750, 9963, 14457, 2237, 34198, 1857, 1857,
	-1000, 827, -1000, -1000, -1000, -110, -138, -1000, -1000, -1000,
	26655, -1000, -1000, -1000, 3961, 2217, 1024, 1024, 1024, 1024,
	294, 2138, 1024, 1024, 1024, 1024, 1024, -230, -231, 1024,
	1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
	83, 1024, 1024, 1024, 1024, 23445, 1024, -1000, 43822, 707,
	2087, 585, 1597, 1597, 1597, -1000, 1597, -1000, -1000, -1000,
	1960, -1000, 1199, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1893, -440, 1322, 2137, 822, 2278, -1000, 2079, -1000,
	2078, 2077, 1509, -1000, -1000, 1818, 1817, 1815, -1000, -1000,
	-1000, 1959, -1000, 1795, -1000, 1793, 1860, -1000, 1786, 115,
	37936, -1000, -1000, 2182, 2000, -1000, -1000, -1000, -1000, 1747,
	1859, -1000, 4618, 49780, 49780, 49780, -286, 186, -1000, 46758,
	193, 227, 436, 1621, 37936, 46758, -1000, -1000, 1251, -1000,
	15099, -1000, -1000, 2180, -1000, 3749, 1829, -1000, -1000, 10,
	37936, -1000, 46758, 942, 47825, 718, 46758, 164, 163, -1000,
	46758, 46758, 2254, 46758, 1855, 1508, -1000, -1000, 976, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 705, 47381, 1597, 772,
	-1000, -1000, 625, -1000, 300, 1618, 32325, 31702, 49780, 2076,
	2075, 1617, 37936, 49780, -1000, -1000, 50224, 1614, 15099, 49780,
	-1000, -1000, 49780, 49780, -1000, -1000, -1000, -1000, 1172, 8679,
	-1000, -1000, 1265, -1000, 14457, 3749, -1000, -1000, 826, -1000,
	-184, -184, -184, -184, -184, 1265, 1938, 1938, -1000, 1938,
	1942, -1000, 1938, 54, 1938, 53, 1265, 1265, 1265, 2459,
	1870, 1816, 1655, 1598, 14457, 14457, 14457, 1893, -179, -1000,
	1251, 15099, 1640, 1620, -1000, -1000, 1611, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1998, 20235, 1893, 17025, -1000,
	49780, 1878, -1000, 1044, 887, 1034, 1030, 825, 824, 500,
	1941, 1996, 349, -1000, -1000, -1000, -1000, 2031, -1000, 2027,
	2021, -1000, -1000, -1000, 1919, -1000, -1000, 1858, 1893, 49780,
	14457, 855, -1000, 1893, 1893, 1893, 1265, 1325, 2220, 1857,
	-1000, -1000, 932, -1000, -1000, -1000, -1000, 156, 394, 394,
	394, 1259, 1024, 2136, 1024, 1024, 1320, 27939, 1504, 1502,
	1501, 1024, 1024, 1317, 1499, 27939, 1491, 598, 394, 394,
	394, 1302, 1490, 237, -1000, 1485, 1388, 1383, 394, -1000,
	-246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 394,
	1784, -1000, 1938, 1938, 2074, -1000, 904, -1000, -1000, -1000,
	-1000, -1000, 49780, -1000, 14457, 2179, -1000, 980, -1000, 1716,
	-1000, 1893, 1893, 1893, 1893, 14457, -1000, -1000, -117, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1483, -1000,
	1294, -1000, 1290, -1000, -1000, -380, 1937, 229, -1000, 37936,
	148, 44889, -1000, 4618, 4618, 4618, 157, 141, -1000, 1127,
	-1000, -1000, -1000, 1482, 1480, 1478, 1829, 238, 1124, 199,
	-1000, 2174, -1000, -1000, 1251, 1135, -52, -1000, -1000, 163,
	-1000, -1000, -1000, 46758, 163, -1000, -1000, 206, 1855, 1855,
	46758, 1855, -1000, -1000, -1000, -1000, -1000, 50224, 608, 4618,
	4618, 1982, 904, 2073, 585, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1600, -1000, 872,
	-1000, 716, 608, 50224, 1251, 944, 1155, -1000, 2253, -1000,
	-1000, -1000, 3749, 24087, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 319, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14457, 14457, 14457, 14457, -1000, 1598, 1598, 1598, 14457,
	1265, 1472, 1251, 14457, 14457, 978, -1000, -1000, 2158, 1811,
	1851, -1000, -1000, 9321, 1265, 2062, 1780, -1000, 41509, 1775,
	-1000, 2220, 20235, 15099, 15099, 15099, 15099, -1000, -1000, 15099,
	1936, -1000, 15099, -1000, -1000, -1000, -1000, -1000, 49780, 377,
	-1000, 15099, 1775, 1262, -1000, 49780, 49780, 49780, -1000, 1460,
	2191, -1000, -261, -1000, 301, 280, 230, -1000, -1000, -1000,
	-1000, -1000, 1259, 1024, 27939, 1259, -1000, -1000, -1000, -1000,
	-1000, 1455, 1454, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -249, -1000,
	754, 43822, 2163, 2163, 1597, 1597, 1773, -1000, 1598, 1893,
	-1000, -1000, -1000, -1000, 8037, -1000, 8037, -1000, 8037, 8037,
	1598, -1000, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
	1893, 1893, 1893, -1000, 1687, 1643, -1000, 43822, -1000, -1000,
	2203, -1000, 148, -1000, 1436, 344, 353, -1000, 343, 341,
	336, 308, 321, -1000, -1000, -1000, -1000, 439, 157, -1000,
	-86, 1289, 1014, 2130, 141, -1000, 1286, 1285, 1279, 1252,
	221, -1000, -1000, -1000, -1000, 217, 227, -1000, 434, 1428,
	-1000, 2109, 2107, 2177, 163, 2177, 158, 1855, 1601, -1000,
	-1000, 1599, -1000, -1000, 1934, 1597, 1597, -1000, 1576, -1000,
	-1000, 49780, -1000, 608, 2155, 2154, 1893, 2237, 33575, 8679,
	-1000, -1000, -1000, -1000, 1598, 1598, 1598, 1598, -1000, -1000,
	-1000, 187, -1000, -1000, 1598, 1598, 2220, 2216, 2071, -1000,
	1893, -1000, -1000, 1893, 211, -1000, 49780, 2191, -1000, 1251,
	1251, 1251, 1251, 1251, 49780, 1251, 1770, 1893, 40886, -1000,
	43378, 1686, 1686, 1686, -62, -1000, -265, 1249, 27939, 1893,
	27939, 1893, 1893, 515, -1000, 1259, -1000, -1000, -1000, -1000,
	-1000, -1000, 754, -1000, 27939, 1024, 1427, -1000, -1000, -1000,
	-1000, -1000, 566, 49780, -439, 14457, 1767, 1767, 1767, -1000,
	1767, -1000, -1000, -1000, 1764, -1000, 229, 442, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2115, 2112, 444, -1000, 1404,
	1402, -1000, 437, 1301, 823, -191, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 431, 1574, -1000,
	196, -1000, -1000, 691, 2089, 2092, 2215, -1000, 46758, 2177,
	-1000, -1000, -1000, -1000, 170, 170, 43822, 1982, 1933, -1000,
	-1000, -1000, 14457, -1000, 960, 2234, -1000, 1854, -1000, -1000,
	-1000, -1000, -1000, 1265, 192, -305, -1000, -1000, 983, 15099,
	2276, -1000, 1851, 1893, -1000, 229, -1000, -1000, 1761, -1000,
	-1000, -1000, 855, -1000, -1000, -1000, 1893, 1893, 2214, -1000,
	1265, 49780, 1265, 49780, 1602, 49780, 1019, -1000, -1000, -1000,
	1236, -1000, 37936, -1000, -1000, -1000, -1000, 1598, -1000, -1000,
	-1000, -1000, 754, -1000, 375, 53513, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1233, -1000, -1000, 1271, 446, 194,
	-1000, 2176, -1000, 1919, 1230, 2107, 2212, 2104, 2102, -1000,
	1401, -291, -1000, 1745, 1918, 43822, 3749, 1727, -1000, 49780,
	2222, 2211, -1000, -1000, 2041, -283, -308, 1265, 245, 245,
	1852, 20235, 1851, 1265, -1000, -1000, 26655, 960, -351, -1000,
	1686, -1000, 1686, 1265, 1265, 1686, 1227, -1000, 1915, -439,
	-1000, 754, -1000, 462, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15099, 15099, 27297, 1561, 1560, 53513,
	1424, 1559, 1558, 2095, 53513, 174, -1000, 171, -1000, -1000,
	-1000, 1398, -1000, 1055, -1000, 1396, -1000, 2210, 2209, -1000,
	224, 754, 43822, 1739, -1000, 960, 2061, -186, 15099, 15099,
	-1000, 2038, -1000, -1000, -1000, 226, -1000, 958, 372, 952,
	-1000, 1716, -1000, 1850, -1000, 1737, -1000, 4618, 1727, -267,
	-1000, -1000, -1000, -1000, -1000, 1893, 49780, -1000, -1000, 1557,
	1556, -1000, 1098, 1372, 265, 259, 470, -1000, -1000, -1000,
	-1000, -1000, -1000, -447, -1000, 248, -1000, -1000, 1538, -1000,
	2239, -448, -1000, -1000, -1000, -1000, -1000, -1000, 1395, 1390,
	44445, -1000, 1717, 754, -1000, 474, -1000, 49780, -1000, 1251,
	1846, -1000, 1251, -292, 1122, -1000, -1000, -1000, -1000, -1000,
	49780, 1265, 26655, 260, -1000, -1000, 1226, 49780, 1702, -1000,
	-1000, -1000, 1153, -1000, 15099, 53513, 2201, 2200, 2199, 10,
	26655, 53353, 53513, 1148, -1000, 7390, -1000, -1000, -1000, -1000,
	153, 1829, 754, -1000, 364, 1841, -1000, 2175, 15099, -306,
	226, -1000, 42132, -1000, -1000, 1300, -225, -1000, 1686, 1995,
	202, 1109, 53513, -1000, 1263, -450, 492, 229, 733, 892,
	-1000, 244, -1000, -451, 1498, -1000, 46758, -1000, 1893, 49780,
	1893, -1000, -319, -1000, 43378, -1000, -1000, 1264, -1000, 1994,
	1993, 2248, -1000, -1000, -1000, -1000, -1000, -1000, 53513, 41509,
	-1000, -452, 53513, 5245, -1000, -1000, -1000, 7258, -1000, -1000,
	-1000, -1000, 251, -1000, -1000, 2146, -1000, 7008, 1839, -1000,
	1829, 15741, -1000, -1000, -1000, -1000, 420, -1000, -1000, 2274,
	-1000, 2249, 761, 761, -1000, -453, -1000, 6785, -456, 682,
	53513, 1177, -1000, 15099, -1000, 6491, 733, -1000, 14457, 234,
	1450, 1598, 1265, -1000, 1992, 14457, 1991, -1000, -1000, -1000,
	601, 1240, -1000, 6369, 1097, 53513, -1000, -457, 649, 53513,
	-1000, 1260, -1000, -1000, 3749, 1291, -1000, -1000, -1000, -332,
	1536, -333, -1000, -1000, -1000, -1000, -1000, 6074, -1000, -458,
	53513, -1000, -1000, -334, -1000, 632, 5584, -459, -1000, -1000,
	630, 53513, -1000,
}

var yyPgo = [...]int{
	0, 2736, 2734, 15, 172, 2733, 264, 2731, 2729, 56,
	2728, 35, 27, 24, 39, 2727, 2421, 2413, 2408, 2400,
	2395, 2725, 11, 2723, 2722, 2392, 2721, 2720, 2388, 2719,
	2718, 2711, 2710, 2709, 2708, 2386, 2384, 2377, 2707, 2706,
	2701, 2369, 2365, 2359, 2, 2696, 30, 2694, 5, 2691,
	149, 176, 2690, 3, 2689, 2688, 26, 2687, 2686, 2337,
	2684, 2683, 2681, 2680, 106, 2679, 2332, 2330, 2677, 2328,
	2326, 2324, 2320, 2318, 170, 2673, 2316, 2301, 2298, 2670,
	2082, 178, 292, 174, 203, 2655, 2653, 2651, 160, 2650,
	155, 2649, 2648, 286, 118, 2647, 278, 116, 67, 115,
	2023, 2646, 22, 66, 271, 2644, 7, 2642, 138, 2640,
	129, 2636, 2635, 158, 2634, 148, 64, 104, 2633, 2632,
	171, 2631, 2628, 2623, 117, 2622, 2621, 185, 119, 2619,
	2618, 142, 2613, 59, 183, 54, 60, 2612, 112, 2611,
	2610, 2609, 33, 251, 2607, 111, 147, 2606, 2605, 102,
	2604, 2603, 78, 2602, 2601, 2595, 143, 53, 2594, 2593,
	50, 2591, 61, 65, 2576, 45, 2575, 146, 2574, 2573,
	2572, 2571, 2570, 77, 2569, 76, 2568, 144, 121, 132,
	2567, 2566, 12, 10, 2565, 51, 18, 19, 55, 34,
	86, 62, 135, 128, 108, 2564, 49, 52, 126, 99,
	2563, 109, 93, 48, 2561, 156, 2560, 91, 162, 140,
	136, 154, 2559, 2554, 2552, 186, 2551, 127, 94, 2550,
	101, 1467, 182, 2548, 2547, 105, 2546, 2543, 2540, 2537,
	2534, 92, 120, 2533, 181, 184, 187, 133, 2532, 693,
	3909, 3863, 145, 4492, 29, 161, 2531, 58, 2529, 2528,
	2526, 3392, 131, 21, 72, 175, 2525, 114, 44, 73,
	2524, 2523, 2521, 2517, 2515, 2512, 2511, 2509, 164, 110,
	2507, 2506, 2505, 2504, 32, 20, 17, 14, 2502, 166,
	165, 163, 2501, 153, 41, 2500, 2498, 134, 113, 2497,
	2496, 2495, 2494, 130, 95, 152, 31, 2493, 122, 137,
	192, 2491, 87, 2490, 2489, 173, 1667, 2488, 2487, 2486,
	2485, 107, 157, 2484, 2483, 2482, 43, 2473, 2471, 2467,
	2455, 2454, 90, 38, 42, 84, 23, 2453, 2451, 100,
	96, 46, 37, 2450, 6, 4, 8, 2449, 2448, 2447,
	2445, 2444, 2443, 2441, 97, 2440, 2433, 75, 2431, 2426,
	2425, 47, 2424, 2423, 2416, 151, 123, 57, 168, 103,
	13, 2411, 2402, 9, 2398, 124, 2390, 70, 2382, 71,
	2380, 2375, 74, 2367, 2363, 79, 2357, 2355, 167, 1738,
	1164, 2353, 150, 125, 63, 68, 2345, 69, 179, 2334,
	0, 1752, 159, 2322, 337, 2309, 2306, 2304,
}

var yyR1 = [...]int{
	0, 389, 389, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 79,
	3, 3, 9, 10, 4, 4, 5, 5, 106, 106,
	6, 105, 105, 105, 201, 201, 201, 201, 200, 200,
	107, 107, 104, 104, 113, 7, 7, 8, 8, 11,
	11, 87, 87, 12, 13, 13, 13, 13, 392, 392,
	122, 122, 120, 120, 121, 121, 198, 198, 14, 14,
	14, 205, 205, 210, 210, 210, 213, 213, 213, 213,
	187, 188, 189, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 361, 361, 370, 370, 370,
	371, 371, 369, 369, 369, 369, 369, 373, 373, 374,
	374, 372, 372, 372, 372, 376, 376, 377, 377, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 364, 364, 364, 41, 41, 41, 41,
	41, 42, 42, 42, 42, 42, 42, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 379, 379,
	380, 380, 381, 381, 382, 382, 382, 382, 383, 383,
	383, 383, 383, 384, 384, 384, 384, 384, 384, 384,
	385, 385, 386, 386, 2, 342, 342, 343, 343, 344,
	344, 344, 344, 345, 345, 346, 346, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 26, 236, 236,
	233, 233, 233, 234, 234, 235, 235, 235, 363, 363,
	363, 357, 357, 357, 359, 359, 358, 358, 358, 360,
	360, 365, 365, 365, 365, 365, 367, 367, 367, 367,
	367, 367, 368, 368, 368, 366, 366, 57, 57, 58,
	58, 58, 176, 176, 176, 15, 15, 15, 15, 15,
	21, 23, 23, 45, 45, 46, 24, 24, 24, 24,
	47, 47, 48, 27, 27, 27, 27, 27, 27, 27,
	55, 55, 55, 54, 54, 53, 53, 53, 53, 53,
	53, 29, 30, 31, 393, 393, 393, 49, 49, 32,
	32, 32, 33, 34, 25, 25, 25, 25, 56, 56,
	51, 51, 50, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 28, 28, 28, 28, 28,
	28, 20, 341, 341, 341, 44, 44, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 62, 62, 307, 308,
	308, 308, 308, 308, 308, 308, 308, 294, 294, 295,
	295, 295, 295, 295, 284, 284, 284, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 258, 258, 258, 258, 264, 264, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 263, 263, 263,
	263, 263, 263, 263, 263, 265, 265, 265, 265, 265,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 293, 293, 269, 269, 268, 268, 268,
	287, 287, 288, 288, 288, 285, 285, 285, 286, 286,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 273, 289, 274, 274, 275, 275, 276, 276,
	277, 277, 278, 278, 283, 283, 282, 282, 282, 282,
	282, 282, 279, 279, 279, 279, 279, 279, 280, 280,
	280, 281, 292, 292, 292, 292, 292, 270, 43, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 328, 328, 227, 227, 228, 228, 297, 297, 326,
	326, 325, 325, 324, 324, 324, 306, 306, 321, 321,
	321, 321, 321, 321, 321, 321, 301, 301, 301, 300,
	300, 302, 302, 305, 305, 323, 323, 322, 322, 298,
	298, 298, 329, 329, 329, 329, 329, 299, 299, 299,
	299, 299, 330, 303, 303, 304, 304, 304, 335, 336,
	334, 334, 334, 334, 334, 139, 139, 139, 310, 310,
	310, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 312, 312, 312, 312, 312, 313, 313, 313, 313,
	313, 313, 387, 387, 387, 314, 314, 314, 315, 315,
	315, 315, 315, 316, 316, 316, 316, 317, 317, 318,
	318, 319, 319, 320, 320, 339, 339, 338, 338, 59,
	59, 61, 61, 60, 65, 65, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 175, 175,
	175, 232, 232, 333, 331, 331, 332, 332, 17, 17,
	63, 63, 362, 362, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 337, 337, 337, 19, 19, 66, 69,
	69, 388, 388, 70, 70, 70, 70, 71, 71, 71,
	71, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 101, 219, 219, 218,
	218, 217, 217, 217, 220, 220, 220, 220, 256, 256,
	256, 68, 68, 68, 80, 80, 75, 75, 78, 78,
	78, 81, 81, 82, 82, 83, 83, 76, 77, 35,
	36, 36, 36, 36, 37, 73, 73, 73, 74, 74,
	74, 74, 93, 93, 395, 395, 395, 72, 396, 84,
	85, 85, 86, 86, 86, 223, 223, 90, 90, 90,
	88, 88, 88, 89, 89, 95, 95, 99, 99, 99,
	99, 98, 98, 98, 98, 178, 178, 183, 248, 248,
	159, 159, 179, 179, 184, 184, 184, 185, 185, 186,
	186, 186, 186, 186, 181, 181, 180, 180, 182, 147,
	147, 246, 246, 246, 246, 245, 245, 245, 245, 245,
	245, 103, 103, 108, 108, 110, 110, 110, 110, 110,
	110, 114, 161, 161, 132, 132, 133, 133, 133, 133,
	133, 145, 145, 197, 197, 196, 196, 199, 199, 109,
	111, 111, 111, 111, 117, 117, 118, 118, 119, 119,
	231, 231, 253, 253, 253, 123, 123, 123, 125, 124,
	124, 124, 124, 124, 124, 126, 126, 112, 112, 309,
	309, 296, 260, 260, 261, 397, 397, 397, 397, 127,
	127, 129, 130, 130, 128, 128, 128, 128, 128, 134,
	134, 131, 135, 135, 135, 135, 136, 136, 100, 100,
	100, 100, 100, 100, 100, 100, 216, 216, 138, 138,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	155, 155, 155, 155, 155, 155, 140, 140, 140, 140,
	140, 140, 140, 94, 94, 156, 156, 156, 116, 115,
	115, 97, 97, 96, 96, 157, 157, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 150, 150, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 394, 394, 152, 151,
	151, 151, 151, 151, 151, 91, 91, 91, 91, 91,
	254, 254, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 168, 168, 92,
	92, 166, 166, 167, 169, 169, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	142, 142, 142, 142, 142, 142, 142, 142, 144, 144,
	144, 170, 170, 158, 158, 102, 171, 171, 172, 173,
	173, 174, 174, 177, 190, 190, 190, 191, 191, 191,
	191, 146, 146, 192, 192, 192, 141, 141, 141, 141,
	141, 141, 141, 195, 195, 194, 194, 193, 193, 193,
	193, 193, 193, 202, 202, 160, 160, 163, 163, 162,
	164, 203, 203, 207, 207, 207, 207, 204, 204, 208,
	208, 208, 208, 211, 211, 212, 212, 212, 209, 209,
	209, 206, 206, 206, 250, 250, 250, 214, 214, 224,
	224, 221, 221, 222, 222, 215, 215, 271, 271, 271,
	230, 230, 229, 229, 229, 225, 225, 225, 226, 226,
	247, 247, 243, 243, 249, 249, 244, 244, 251, 251,
	252, 252, 340, 340, 290, 290, 350, 350, 291, 291,
	351, 351, 353, 353, 348, 348, 349, 349, 352, 352,
	38, 354, 354, 355, 355, 356, 356, 356, 356, 39,
	40, 40, 40, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 242, 242, 242, 242, 242,
	242, 240, 240, 240, 240, 240, 390, 391,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	5, 7, 1, 5, 1, 3, 1, 3, 2, 1,
	13, 0, 2, 2, 0, 2, 3, 3, 1, 3,
	0, 2, 1, 3, 4, 1, 3, 1, 3, 8,
	9, 1, 1, 10, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	0, 0, 0, 2, 3, 3, 11, 9, 11, 5,
	5, 16, 12, 9, 4, 0, 3, 0, 2, 2,
	1, 3, 1, 1, 2, 2, 2, 0, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 3,
	3, 5, 3, 3, 4, 5, 4, 4, 2, 2,
	2, 2, 2, 0, 2, 2, 9, 10, 9, 5,
	7, 7, 7, 7, 8, 4, 6, 2, 3, 2,
	3, 3, 3, 4, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 2, 2, 2, 3, 3,
	2, 3, 3, 2, 2, 2, 2, 2, 1, 3,
	0, 3, 1, 3, 0, 1, 1, 1, 1, 3,
	1, 3, 3, 0, 2, 5, 5, 5, 7, 5,
	0, 3, 0, 3, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 7, 5, 7,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 2, 5, 0, 1, 2, 1, 3, 5,
	7, 8, 2, 2, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 1, 1, 0, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 3, 3, 2, 2, 3, 2, 3, 4,
	2, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 3, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 2, 3, 5, 3, 5, 3, 5, 4,
	5, 4, 3, 1, 0, 1, 3, 3, 0, 1,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 2, 1, 2, 1, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 3, 5,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 2,
	3, 3, 3, 3, 3, 4, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 5, 8, 1, 4,
	5, 4, 5, 5, 5, 5, 8, 0, 1, 0,
	2, 0, 4, 0, 2, 0, 2, 0, 2, 1,
	1, 4, 3, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 9, 2, 2, 0, 1,
	2, 0, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 4,
	4, 1, 3, 2, 2, 4, 4, 3, 3, 3,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	3, 2, 2, 6, 2, 4, 4, 4, 5, 8,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 4, 1, 0, 1, 2, 1, 2, 4,
	4, 0, 1, 0, 3, 0, 2, 4, 4, 2,
	3, 4, 4, 5, 3, 3, 4, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 1, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 2, 6, 0, 1,
	0, 3, 0, 1, 0, 2, 2, 4, 1, 2,
	2, 2, 2, 2, 0, 2, 1, 3, 3, 1,
	3, 0, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 1, 3, 1,
	1, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 3, 2, 2, 2, 12, 11, 1,
	3, 3, 4, 3, 0, 0, 3, 4, 3, 1,
	3, 3, 2, 1, 1, 3, 1, 1, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	4, 6, 6, 4, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -389, -1, -3, -10, -11, -12, -13, -14, -16,
	-59, -17, -18, -19, -66, -69, -70, -71, -67, -68,
	-75, -76, -77, -73, -72, -25, -28, -20, -79, -35,
	-36, -37, -38, -39, -40, -41, -42, -43, -5, 6,
	7, -107, 29, -62, 181, -61, -60, 184, 183, 220,
	185, 527, 332, 528, 213, 64, 350, -78, 353, 354,
	-395, 272, 273, 20, 37, 355, 357, 30, 31, 235,
	295, 297, 322, -4, 533, 182, 351, 215, 214, 26,
	-6, -7, -390, 68, 647, -173, 15, -84, -396, -84,
	-87, 9, 10, 8, 452, -84, -307, -231, 109, 68,
	23, -226, -236, 89, 443, 189, -234, 291, 293, -224,
	-225, -233, 245, 255, 44, 200, 199, 256, 190, 291,
	190, 191, 193, 443, 189, 228, 227, 291, 293, 527,
	190, -128, -251, -240, -241, 309, 73, -239, 469, 473,
	476, 477, 482, 299, 82, 331, 332, 323, 333, 210,
	421, 292, 298, 301, 324, 614, 334, 336, 337, 463,
	464, 193, 203, 632, 316, 211, 530, 256, 642, 635,
	303, 411, 500, 350, 367, 359, 382, 531, 585, 267,
	358, 349, 428, 501, 306, 260, 329, 586, 287, 417,
	423, 270, 353, 521, 519, 502, 437, 236, 587, 264,
	266, 265, 250, 468, 271, 36, 216, 378, 312, 528,
	245, 588, 504, 581, 503, 239, 516, 35, 27, 518,
	238, 440, 100, 589, 340, 425, 505, 399, 341, 234,
	590, 535, 310, 222, 424, 374, 322, 118, 243, 282,
	342, 591, 400, 404, 592, 429, 296, 281, 523, 593,
	594, 343, 595, 192, 302, 506, 596, 246, 431, 307,
	398, 201, 532, 212, 48, 225, 432, 402, 522, 408,
	597, 339, 598, 599, 600, 601, 320, 318, 507, 319,
	321, 257, 262, 508, 53, 187, 406, 405, 407, 263,
	427, 387, 385, 602, 603, 311, 207, 442, 604, 605,
	386, 18, 606, 607, 435, 286, 314, 608, 609, 610,
	509, 524, 499, 611, 612, 426, 401, 403, 244, 117,
	527, 613, 317, 422, 326, 534, 300, 520, 615, 345,
	224, 218, 436, 335, 616, 617, 618, 619, 620, 294,
	293, 354, 327, 510, 355, 268, 621, 622, 511, 623,
	624, 254, 237, 439, 430, 52, 413, 625, 330, 346,
	416, 351, 231, 512, 513, 514, 515, 7, 261, 308,
	525, 526, 420, 328, 269, 255, 258, 389, 226, 626,
	627, 376, 377, 352, 229, 220, 112, 438, 580, 291,
	347, 51, 232, 628, 629, 259, 233, 356, 305, 379,
	190, 73, -239, 73, -239, 527, 134, 383, 428, 181,
	418, 419, 425, -301, 426, 227, 230, -256, 190, -219,
	417, 296, 317, 473, 233, 234, 191, 192, 32, 430,
	429, 421, -251, -80, 356, -80, -80, 194, 356, -93,
	222, 185, -128, 221, -56, 73, 274, -56, 29, 73,
	-134, -243, -251, 73, -239, 36, 73, 355, 420, 420,
	76, 534, 236, 21, -379, -360, 326, -378, -358, 182,
	181, 10, 183, 331, 332, 333, 191, 8, 30, 614,
	208, 334, 335, 6, 213, 336, 337, 228, 9, 338,
	-363, 75, 73, -239, 21, -379, -360, 326, -228, -227,
	348, 408, -106, 584, -104, -113, -253, -251, -240, 75,
	443, -215, 195, 352, -86, 5, -9, -3, 533, -191,
	17, 16, -90, 54, 55, -85, -98, 125, -100, -251,
	-137, 92, -143, 28, 24, -142, 309, 221, -138, -165,
	-240, -164, -116, 134, -255, 123, 124, 131, 93, 177,
	-150, -148, -149, -151, -153, -154, 75, 74, 83, 76,
	77, 78, 79, 84, 85, 86, -243, -241, -238, 469,
	473, 476, 477, 482, -162, -390, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 58, 59,
	467, 189, 453, 454, 380, 8, 455, 456, 457, 529,
	210, 461, 95, 47, 569, 441, 451, 450, 449, 447,
	448, 444, 446, 445, 463, 464, 196, 443, 129, 452,
	486, 487, 488, 489, 490, 491, 492, 493, 495, 496,
	494, 470, 471, 472, 474, 475, 478, 479, 480, 481,
	483, 484, 485, 536, 186, 182, 185, 91, 23, 25,
	537, 242, 94, 365, 394, 460, 16, 20, 204, 188,
	383, 202, 133, 198, 205, 276, 278, 181, 62, 538,
	277, 418, 539, 540, 541, 542, 373, 371, 275, 543,
	10, 26, 214, 249, 544, 369, 183, 240, 98, 99,
	545, 41, 40, 315, 279, 215, 285, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	116, 14, 549, 550, 551, 552, 195, 111, 191, 631,
	60, 247, 553, 363, 554, 555, 556, 557, 558, 364,
	88, 559, 560, 108, 290, 56, 498, 32, 235, 582,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	109, 17, 30, 562, 563, 223, 396, 362, 391, 583,
	564, 565, 252, 63, 348, 372, 645, 33, 66, 219,
	344, 313, 42, 89, 15, 248, 61, 34, 465, 113,
	646, 375, 197, 227, 567, 433, 251, 568, 114, 368,
	584, 208, 110, 357, 184, 325, 273, 209, 570, 297,
	571, 241, 115, 419, 572, 573, 462, 29, 213, 272,
	361, 199, 574, 253, 284, 274, 283, 575, 576, 304,
	43, 643, 630, 190, 39, 97, 395, 360, 390, 194,
	459, 228, 280, 5, 44, 31, 414, 9, 338, 64,
	67, 384, 381, 577, 388, 644, 12, 578, 466, 533,
	434, 90, 579, 415, -84, -84, -84, -204, 352, -211,
	-208, 429, 430, -209, -212, -206, -165, 408, 611, 612,
	428, 383, 427, -243, -251, -240, 309, 221, 134, 470,
	471, 472, 95, 380, 453, 486, 444, 446, 441, 445,
	443, 28, 487, 24, 86, 488, 467, 196, 8, 177,
	474, 475, 489, 490, 491, 58, 447, 448, 529, 129,
	92, 492, 493, 84, 495, 496, 569, 452, 59, 494,
	189, 480, 479, 478, 481, 455, 456, 85, 449, 450,
	451, 47, 484, 483, 485, -2, -6, 6, -128, -308,
	-295, -299, -243, -240, -241, -242, 217, 205, -330, 73,
	-239, 309, 221, 50, 87, 55, 54, 202, 191, 193,
	452, -222, 196, -222, 228, 227, -235, 253, -222, -222,
	190, -234, 101, 101, -63, -128, -362, -357, -363, -221,
	196, -243, -221, -221, -221, -221, -221, -221, -221, 73,
	-239, -128, 178, -120, -128, 11, 11, 67, 67, 73,
	-239, 73, 29, -220, 109, 12, 443, 189, 190, 227,
	228, 193, -220, -303, 11, 111, 231, 231, 231, 232,
	231, -218, 420, 422, 229, 423, 424, 12, -101, 109,
	19, -390, -191, -191, 126, -82, 91, -82, 73, 355,
	194, -74, -3, -13, -11, -12, -93, -9, -145, 23,
	101, 29, 29, 75, 51, 29, -51, -50, -52, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 29, -341, 68, 178, -290, 408, 73, -354, -355,
	-128, 76, 76, 66, 317, 66, 69, 194, 69, 66,
	-380, 327, 68, -380, 293, 327, 328, 255, 291, 193,
	-380, -380, 293, -380, -380, -380, -380, -380, 420, -380,
	-380, -380, 329, 330, -380, 418, 193, -380, -380, -380,
	-380, -380, 71, 66, 69, 317, 66, 11, 66, -327,
	134, 340, 341, 342, 343, 339, 317, 344, 345, 346,
	231, 347, -4, -104, 69, -195, -390, 73, -283, -282,
	-279, -280, -281, -278, 28, 190, 433, -8, -6, -390,
	21, 22, -391, 70, -106, -192, 19, 30, -146, 76,
	79, -174, -177, -100, -251, 50, -88, 21, 22, 81,
	11, -246, 91, 89, 90, 108, -245, 23, 73, -239,
	-240, 75, -241, -242, 178, -100, -140, 111, 92, 109,
	110, 94, 120, 119, 130, 123, 124, 125, 126, 127,
	128, 129, 121, 122, 133, 101, 102, 103, 104, 105,
	106, 107, -216, -390, -116, -390, 178, -390, 178, 179,
	180, 178, -143, -143, -143, -143, -143, -143, -143, -390,
	178, 178, -390, -390, -390, -390, -390, -9, -157, -100,
	533, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -168, -100, -390, -390,
	-394, -152, -390, -394, -152, -394, -152, -394, -390, -394,
	-152, -394, -152, -394, -394, -152, -394, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -215, -215, 11, -120,
	-121, -131, -251, 69, -205, -210, 431, 433, 352, -209,
	-209, -250, -243, 75, 28, 101, 29, 178, -173, -84,
	70, 69, -299, -258, -264, -266, -265, -267, -262, -263,
	380, 383, 387, 385, 381, 386, 134, 384, 389, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 29,
	216, 376, 377, 378, 379, 400, 401, 402, 403, 404,
	405, 406, 407, 359, 382, 531, 360, 361, 362, 363,
	364, 365, 367, 368, 369, 370, 371, 372, 373, 374,
	-258, -258, -258, -258, 73, 231, -240, -330, 68, -243,
	-128, -236, -234, 73, 92, 73, -127, -243, -251, -134,
	254, -366, -365, -357, -360, -222, -235, -357, 259, 257,
	258, 69, 194, 69, 194, 71, -120, 24, 66, -122,
	-128, 73, 73, -127, -134, -359, -357, -360, -252, -251,
	-237, 536, 186, 21, 182, 185, 91, 23, 25, 537,
	242, 94, 365, 134, 470, 471, 472, 394, 460, 16,
	20, 204, 95, 188, 380, 383, 202, 133, 198, 205,
	276, 278, 453, 486, 181, 62, 538, 444, 446, 441,
	445, 277, 443, 418, 539, 540, 541, 542, 373, 371,
	275, 28, 543, 10, 487, 26, 214, 249, 22, 544,
	127, 369, 183, 497, 240, 98, 99, 545, 41, 40,
	315, 24, 279, 215, 86, 285, 488, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	467, 116, 14, 549, 550, 551, 552, 196, 195, 111,
	191, 631, 60, 247, 8, 553, 363, 554, 555, 556,
	557, 558, 364, 177, 88, 559, 560, 108, 290, 56,
	474, 475, 498, 45, 32, 235, 489, 490, 582, 491,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	58, 109, 17, 447, 448, 30, 562, 563, 529, 223,
	396, 362, 391, 583, 564, 565, 129, 252, 63, 92,
	348, 492, 493, 84, 372, 645, 33, 66, 219, 344,
	313, 42, 89, 15, 248, 61, 34, 465, 113, 646,
	495, 375, 197, 227, 567, 433, 251, 568, 114, 496,
	368, 584, 208, 110, 357, 184, 569, 452, 325, 273,
	209, 570, 297, 59, 571, 241, 115, 494, 189, 419,
	572, 6, 573, 462, 29, 213, 272, 361, 199, 574,
	253, 284, 274, 283, 575, 49, 576, 304, 43, 480,
	479, 478, 481, 643, 57, 455, 456, 630, 190, 39,
	97, 395, 360, 390, 194, 459, 228, 85, 280, 5,
	44, 31, 414, 9, 338, 64, 67, 449, 450, 451,
	47, 384, 381, 577, 484, 388, 483, 485, 644, 96,
	12, 578, 466, 533, 434, 90, 579, 415, 69, 75,
	75, -388, -100, -388, -220, 75, -255, -100, -222, -222,
	-128, -128, -128, -128, -128, -220, -220, -220, -220, -217,
	11, 111, 11, -217, -217, -100, -143, -357, 445, 125,
	-251, -83, -81, 207, -81, -83, 73, 73, 355, -74,
	33, 73, -51, -51, 75, -51, 69, 101, -51, 70,
	-157, -243, -340, 631, 69, -356, 23, 433, 434, 409,
	-382, 190, 230, 227, 66, -382, -378, 335, -359, -358,
	-357, -380, -381, -243, -380, -380, -380, 420, -380, -380,
	-380, -380, -380, -380, -380, -380, -363, -382, 295, 69,
	-382, -359, -357, 339, 339, 339, 339, 339, 339, -113,
	23, -194, -193, -244, -240, -241, -242, 217, -243, -237,
	-283, -280, -279, -281, 383, 428, 133, 440, -128, 434,
	435, -9, -201, 88, 9, 111, 69, 18, 69, -190,
	25, 26, 178, -144, 51, 76, 79, -223, 49, -128,
	-100, -100, -100, -155, 84, 92, 85, 86, -245, 217,
	125, -252, -244, -241, -240, 309, 221, -237, -143, -156,
	-162, -116, 80, 111, 109, 110, 94, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -254, 73, 75, 73, -244, -96, -99, 125,
	-100, -251, -244, -142, 84, -142, -243, -243, -88, -244,
	421, -244, -88, -88, -88, -88, -88, -391, 69, -391,
	-9, -96, -96, -96, -391, -100, -100, -96, -96, -165,
	75, -96, -165, 75, -96, -143, 458, 459, 460, -96,
	-96, -88, -166, -167, 96, -165, -96, -391, -143, -243,
	-243, -96, -97, -96, -96, -96, -391, -391, -99, -96,
	-99, -96, -96, -391, -391, -391, -391, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -96, -96, -96, -130,
	88, -128, -103, -108, -110, -111, -132, -115, -390, -109,
	-112, -128, -116, 73, 498, -128, -120, -392, 11, 67,
	-392, 69, 178, -208, -211, 69, 432, 434, 435, -205,
	-276, -277, 133, 66, 87, -100, -244, -252, -191, -90,
	-310, -295, -297, -298, -299, -321, 205, -329, 197, 199,
	200, 44, -300, 206, 191, 45, -259, -285, 413, 414,
	-269, 68, -268, 68, -268, 388, 380, 383, 381, -268,
	-268, -268, -268, -268, 381, 68, 68, -269, -269, -269,
	-287, 68, -287, 375, -288, 68, -288, -288, -288, -288,
	-259, -259, -259, -259, -330, -330, -330, -100, -247, 67,
	23, 193, -283, 24, -283, -57, 242, 211, 178, 68,
	245, 246, -361, 69, 28, -367, 292, -128, 221, -128,
	-128, -357, -357, -363, -337, 209, 204, -128, 69, 69,
	-128, 69, 75, 73, 73, -145, -304, 11, 111, -220,
	-251, -251, -128, -145, -220, -94, 217, 67, -394, -391,
	357, 358, 73, -143, -50, -142, 70, -129, 88, 75,
	-355, -253, 408, 434, -383, 125, -243, -382, -383, -386,
	533, 194, 70, 69, -380, -383, 313, 295, -383, 11,
	-328, 19, -115, -390, -391, 69, 178, 29, -306, 101,
	-306, -306, -65, -64, 186, 183, 184, 187, 188, -333,
	411, 182, 239, 238, 224, -391, -200, 34, 35, -243,
	52, -146, -146, -177, -214, 19, 11, 47, 47, -89,
	57, 84, 85, 86, 178, -390, -156, -143, -143, -143,
	-94, 91, -391, 69, -391, 178, -97, -96, -96, -96,
	-96, -96, -100, -391, -391, -391, -391, 69, 67, 23,
	-391, 67, -391, 11, 11, -391, 11, 11, -391, -391,
	11, -143, -143, -143, -391, -391, -96, -169, -167, 98,
	-100, -391, -391, -391, 69, 69, -391, -391, -391, -391,
	-178, 465, -178, -391, -391, -391, -391, -391, -178, -178,
	-178, -178, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -198, 113, -128, 29, 69, -123,
	-125, -124, -126, 56, 60, 62, 57, 58, 59, 421,
	63, -231, -103, -114, 47, -390, -133, 113, -135, 23,
	-253, 64, 195, 65, -390, -390, -198, 67, -103, -103,
	-131, -251, 125, -210, -213, 436, 433, 439, 73, 75,
	178, -192, -314, -311, 69, 113, 638, 411, 500, 428,
	28, 383, 501, 133, 82, 502, 236, 36, 191, 504,
	440, 340, 505, 506, 201, 507, 508, 509, 301, 510,
	351, 511, 512, 513, 514, 328, 5, -299, 68, 73,
	-305, -240, 45, -300, -302, -300, -300, -305, 73, -305,
	45, 84, 92, -275, -277, 134, -272, -273, -289, -292,
	-270, 23, 641, 416, 383, 28, 66, 411, 197, 45,
	44, 200, 82, -286, 415, 76, 76, 476, -268, -268,
	-268, 388, -268, -293, 75, -293, 76, -287, 76, 70,
	66, -243, -187, -128, -58, 8, 9, 10, -243, -342,
	-343, -344, -243, 111, 247, 248, -370, 325, -365, 293,
	302, 91, 16, 533, 194, 194, -128, -357, -100, -136,
	12, 73, 73, -217, -220, -143, -360, 233, 234, -198,
	190, -356, 194, 178, 178, -383, 194, 316, -359, -243,
	11, 11, 313, 11, -359, 349, -193, -244, -306, 73,
	75, 134, 73, 75, 134, 75, 69, -232, -300, -339,
	-298, -299, -338, 198, 205, -232, 205, 202, -300, 206,
	197, 198, -229, -300, 194, 23, -232, -232, -306, -232,
	32, 32, 113, 69, 75, 75, 53, -128, -95, -188,
	125, -244, -97, -94, 91, -143, -99, 125, -252, -391,
	-391, -391, -391, -391, -391, -257, 134, 380, 216, 378,
	371, 398, 385, 413, 376, 414, -254, -257, -254, -143,
	-143, -143, -143, -143, 11, 11, 11, 530, -173, 100,
	-100, 97, -143, -143, -243, -183, -390, -178, -178, -178,
	-178, -178, -179, -178, -179, -179, -179, -179, -179, -179,
	-179, -179, -179, -179, -179, -141, 29, 47, -390, -9,
	-390, -203, -207, -165, -240, -242, 217, 309, 221, -108,
	-110, -110, -108, -110, 56, 56, 56, 61, 56, 61,
	61, 56, 56, -124, -253, -391, -391, -161, 241, -390,
	33, -253, -135, 191, 191, 191, -97, -143, -136, -103,
	-136, -136, 178, 433, 437, 438, -311, 16, -306, -306,
	-306, -306, 428, 383, 133, 29, -306, -306, -306, -306,
	-306, 503, 503, -306, -306, -306, -306, -306, -306, -306,
	-306, -306, -306, -306, 352, -306, -306, -306, -306, -312,
	-387, 75, 76, 82, 331, 301, 73, -239, -237, -306,
	-323, -322, -243, -240, 197, -329, 44, -329, -305, -305,
	-305, -305, 68, 84, -390, 642, 76, 29, -142, 124,
	-138, 441, 447, 448, 442, -390, 85, 86, 9, 45,
	45, 45, 75, 70, 70, 70, -268, 70, 69, 70,
	69, 70, 69, -139, 589, 92, -128, -189, 23, 66,
	70, 69, -258, -243, -243, -243, -373, 533, 298, -371,
	-369, 304, 305, 306, 307, 308, -360, 303, -367, 300,
	75, 73, -128, -357, -100, -145, -274, -275, -128, -359,
	125, 125, -243, 194, -359, 313, -385, 533, -359, -359,
	11, -359, 75, 73, 75, 134, -64, 68, -294, 73,
	-239, -305, -225, 197, 73, 73, 73, -240, -239, -241,
	-242, 73, -240, -239, -241, -242, -243, 45, 45, 73,
	-128, -243, -294, 73, -100, -243, -243, -243, -201, 69,
	-98, -391, -143, 178, -179, -179, -179, -179, -179, -391,
	-269, -269, -269, -288, -269, 364, -269, 364, -391, -391,
	-391, 19, 19, 19, 19, -391, -143, -143, -143, -390,
	-92, 462, -100, 69, 69, -248, 73, -202, 66, -203,
	-160, -163, -162, -390, -9, -391, -194, 6, 533, -199,
	-243, -136, 69, 101, 101, 101, 101, -118, -117, 66,
	67, -119, 66, -117, 56, 56, 56, -197, 68, 69,
	-162, -390, -199, -143, -135, -390, -390, -390, -391, 69,
	-173, -136, -315, -316, 114, 522, -317, 561, -312, -312,
	-312, -254, -306, 29, -306, -306, 76, -387, 75, 75,
	75, -306, -306, 76, 75, -387, 75, 207, 210, 212,
	-312, -312, -312, 76, 75, -313, 28, 518, 374, 519,
	520, 521, 75, 28, 76, 28, 76, -312, 515, -312,
	70, 69, -269, -269, 45, -302, -196, -243, -143, 23,
	73, 134, -142, -394, -390, -394, -390, -394, -390, -390,
	-143, -149, 441, 451, 450, 449, 447, 448, 444, 446,
	445, 463, 464, 75, 76, 76, 589, 68, -9, -187,
	-128, -345, -346, -347, 82, 532, 92, 249, 250, 207,
	251, 252, 253, -344, -258, -258, -258, -376, -377, -375,
	301, 323, 324, 309, -374, -372, 318, 319, 320, 321,
	91, 75, 75, 75, -368, 292, 91, 301, 16, 23,
	-220, -348, -218, -385, -359, -385, 295, -359, -294, -175,
	210, 211, -258, -258, -247, -302, 45, 73, -230, 194,
	23, 194, -175, -294, 29, 183, 88, -105, 11, -188,
	-188, 125, -274, 73, -143, -143, -143, -143, -391, -391,
	-391, -143, -391, 75, -143, -143, -159, 113, 27, -202,
	69, -391, -391, 47, -391, -391, 69, -173, -207, -100,
	-100, -100, -100, -100, 68, -100, -196, 241, -391, -135,
	-231, -196, -196, -196, 75, -191, -318, 524, -390, 423,
	-390, 423, 523, 45, -254, -306, -387, -254, 75, 75,
	516, 517, -325, -324, 67, 201, 82, -322, -190, -190,
	-305, -305, 70, 69, -391, -390, -96, -96, -96, -391,
	-96, -391, 70, 70, -323, -187, -189, 19, -188, -347,
	75, 253, 249, 253, 253, 253, 253, 254, -364, 82,
	299, -375, 310, 594, 294, 325, 76, 76, 112, 30,
	31, -372, 76, 76, 76, 76, -369, 16, 533, -367,
	300, 75, 75, -349, 38, -351, 39, -384, 23, -385,
	-384, 313, 70, 73, -259, -259, 68, -305, -305, 73,
	-243, -175, 28, 28, -390, -136, 497, -103, -98, -391,
	-391, -391, -391, -91, 111, 533, -391, -391, -173, 16,
	45, -163, -160, 47, -9, -390, -243, -191, -196, 70,
	-162, -133, -253, -391, -391, -391, 423, -319, 525, 76,
	-387, -390, -387, -390, -390, -390, 256, -254, -324, -387,
	-306, 75, 208, -243, -284, 644, 643, -143, -391, -391,
	-391, -391, 70, -9, 240, -189, 36, 36, 245, 246,
	75, 75, 28, 311, 177, 28, 76, 177, 468, 300,
	75, 73, 301, -271, 195, -352, 43, -350, -291, 42,
	16, -357, -384, -323, -247, 68, -143, -331, -332, 113,
	-170, 13, -188, -391, 531, 63, 534, -184, 115, 114,
	-157, 9, -160, -9, 70, -135, -390, -390, 16, -391,
	-196, -391, -196, -142, 73, -196, 101, 76, -128, -391,
	-326, -325, -187, 241, -22, -3, -11, -12, -13, -14,
	-16, -59, -17, -18, -23, -24, -19, -66, -69, -70,
	-71, -67, -78, -76, -77, -73, -72, -27, -29, -30,
	-32, -33, -34, -31, -25, -28, -20, -35, -36, -37,
	-41, -42, -26, -43, 95, 196, 275, 286, 287, 288,
	73, 289, 290, 285, 350, 76, 28, 76, 28, 314,
	301, 23, -197, 76, -351, 16, -353, 40, 41, 75,
	533, 70, 68, -323, -391, 69, -243, -171, 14, 16,
	53, 532, 535, -391, -185, 94, -186, 112, 468, -147,
	76, 177, -185, -203, -391, -309, -296, -244, -331, -316,
	-391, -391, -391, -391, -391, 76, 68, -284, -176, 243,
	244, -187, -100, -100, 73, -55, -249, 278, 279, 280,
	-244, 73, 73, -44, -22, 72, 73, 73, -393, 11,
	50, -44, 312, 312, 75, 38, 115, 75, 16, 16,
	293, -326, -323, 70, -332, 47, -181, 466, -172, -100,
	-158, -102, -100, 53, -186, 117, 118, 241, 117, 118,
	-142, -391, 69, -258, -391, -320, 526, -390, -196, -187,
	73, 73, -45, -46, 96, 97, 276, 277, 281, -258,
	69, 647, 288, 73, 11, 647, 75, 75, 28, 298,
	21, -360, 70, -326, 225, -180, -182, -243, 69, 533,
	91, -243, -391, -296, -260, 499, 24, 76, -196, 70,
	-189, 100, 98, -46, -100, -44, 19, 19, 19, -274,
	-244, 100, -22, -44, 88, 100, 315, -326, 226, 69,
	23, -102, 534, -186, 23, -253, 75, 499, -391, -335,
	-336, 66, -15, -21, -14, -11, -12, -13, 350, 533,
	95, -44, 97, 647, -56, 76, -9, -54, -53, 76,
	-56, 283, 92, 284, 73, -276, 288, 647, -49, 73,
	-360, -390, -182, -183, 535, -253, -261, 75, -336, 66,
	-335, 66, 10, 9, -187, -44, -106, 647, -44, 100,
	98, -47, -48, 99, -22, 350, 69, 282, 28, 100,
	69, -143, 223, -397, 84, 28, 341, -334, 209, 204,
	207, 29, -334, 647, 100, 647, 196, -44, 100, 98,
	-48, -100, 100, -53, -143, 288, 73, -391, -391, 66,
	-143, 66, 203, 28, 84, 100, 95, 647, 196, -44,
	97, 73, 545, 66, 545, 100, 647, -44, 545, 196,
	100, 647, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 1329, 908,
	908, 0, 908, 1010, -2, 739, 740, 0, 0, 0,
	0, 0, 0, 0, -2, 873, 874, 877, 874, 874,
	902, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 595, -2, 0, 1405, 0, 904, 905, 906,
	44, 0, 0, 2276, 2, 1337, 0, 917, 910, 0,
	908, 908, 908, 71, 72, 0, 103, 0, 0, 0,
	1011, 0, 0, 0, 1403, 1403, 255, 1403, 1403, 0,
	1419, 253, 0, 1400, 1415, 1416, 1417, 0, 0, 0,
	1401, 0, 1401, 1401, 1401, 1401, 1401, 1401, 1401, 0,
	0, 807, 1044, 1046, 1047, 1048, 1428, 1429, 2271, 2272,
	2273, 2274, 2275, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	0, 0, 0, 813, 814, 0, 0, 0, 864, 0,
	864, 831, 832, 0, 834, 0, 0, 0, 0, 0,
	844, 847, 851, 0, 1337, 1337, 616, 617, 618, 869,
	870, 858, 871, 876, 875, 883, 883, 0, 875, 60,
	-2, 0, 991, 0, 344, 346, 0, 366, 0, 369,
	372, 1049, 0, -2, -2, 1434, 889, 0, 0, 1459,
	1460, 0, 0, 0, 0, 0, 2170, 198, 269, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 0, 200,
	200, 200, 2179, 200, 0, 200, 200, 200, 200, 200,
	268, 258, 259, 260, 0, 0, 0, 2170, 0, 596,
	593, 594, 61, 0, 49, 62, 1353, 1012, 1013, 1014,
	-2, 0, 1406, 878, 0, 912, 0, 42, 0, 1343,
	0, 0, 920, 918, 919, 909, 0, 931, 961, 0,
	1058, 1893, 1064, -2, 1806, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1751, 0, 0, 0, 0, 0, 1848,
	1137, 1138, 1139, 1140, 1141, 1142, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, -2, -2, -2, 1296, 1297, 0, 2271,
	2272, 2273, 2274, 2275, 1370, 0, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1874, 1937,
	1825, 1942, 1770, 0, 1762, 1839, 1966, 1967, 0, 1882,
	2252, 0, -2, 1991, 1930, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2262, 2263, 1832, 1780, 1890, 1931,
	1771, 1792, 1811, 1860, 1861, 1863, 1895, 1896, 1914, 1923,
	1941, 1752, 1753, 1754, 1855, 1856, 1963, 1962, 1961, 1964,
	1997, 1995, 1998, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1755, 1756, 1757, 1758, 1759, 1761,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1773, 1774,
	1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790,
	1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1807, 1808, 1810, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836,
	1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1849, 1850, 1851, 1852, 1853, 1854, 1857, 1858, 1859, 1862,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1875, 1876, 1879, 1880, 1881, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1891, 1892, 1894, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924,
	1925, 1926, 1927, 1928, 1929, 1932, 1933, 1934, 1935, 1936,
	1938, 1939, 1940, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1965, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1992, 1993, 1994, 1996, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 1405, 1405, 0, 88, 2229, 0,
	1377, -2, -2, 1379, 0, 0, 0, -2, -2, -2,
	-2, 1763, -2, 1296, 0, 0, 0, 0, 1751, 1752,
	1753, 1754, 1760, 1762, 1770, 1771, 1775, 1776, 1777, 1778,
	1780, 1789, 1792, 1806, 1809, 1811, 1825, 1832, 1839, 1848,
	1855, 1856, 1860, 1861, 1863, 1874, 1877, 1878, 1882, 1890,
	1893, 1895, 1896, 1897, 1914, 1923, 1930, 1931, 1937, 1941,
	1942, 1961, 1962, 1963, 1964, 1966, 1967, 1978, 1988, 1989,
	1990, 1991, 1995, 1997, 1998, 104, 1329, 908, 105, 0,
	419, 420, 0, 0, 0, 0, 0, 0, 641, 1422,
	1423, 2265, 2266, 2267, 2268, 2269, 2270, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	1403, 255, 0, 0, 788, 0, 789, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	820, 806, 0, 808, 82, 0, 0, 0, 0, 817,
	818, 821, 864, 823, 0, 0, 1403, 1403, 0, 0,
	0, 0, 830, 0, 643, 644, 864, 864, 864, 864,
	861, 0, 861, 841, 861, 859, 860, 0, 846, 0,
	0, 0, 854, 855, 0, -2, 881, -2, 890, 0,
	0, 895, 898, 899, 900, 901, 60, 897, 907, 0,
	0, 0, 0, 348, 0, 0, 368, 350, 0, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 371, 0, 0, 1432, 1435, 894, 1450, 1451,
	0, 1461, 1462, 204, 0, 204, 0, 0, 0, 0,
	167, 200, 0, 169, 200, 200, 200, 0, 200, 200,
	176, 177, 200, 179, 180, 181, 182, 183, 200, 185,
	186, 187, 200, 200, 190, 200, 200, 193, 194, 195,
	196, 197, 267, 204, 0, 0, 204, 0, 0, 578,
	0, 0, 0, 0, 583, 584, 585, 586, 0, 0,
	589, 590, -2, 48, 0, 0, 0, -2, 742, -2,
	556, 557, 558, 0, 553, 0, 0, 45, 67, 0,
	913, 914, 66, 2277, 0, 54, 0, 0, 1338, 1341,
	1342, 1330, 1331, 1334, 0, 0, 915, 921, 922, 911,
	0, 932, 0, 0, 0, 0, 962, 0, 965, 966,
	967, 968, 969, 970, 0, 1062, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1065, 0, 1079, 0, 0, 0, 0, 0,
	0, 0, 1130, 1131, 1132, 1133, 1134, 1135, 0, 920,
	0, 0, 920, 920, 920, 920, 920, 0, 0, 1105,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 920, 0, 1288, 0, 0,
	1199, 1208, 0, 1200, 1209, 1201, 1210, 1202, 0, 1203,
	1211, 1204, 1212, 1205, 1206, 1213, 1207, 0, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 1044, 0, 89, 91, 0, 0, 2229, 1380,
	1381, 548, 1394, 1395, 1396, 0, 1392, 0, 1337, 917,
	658, 0, 421, 437, 525, 452, 453, 454, 515, 456,
	517, 517, 0, 517, 517, 517, 517, 517, 492, 493,
	494, 495, 496, 498, 499, 500, 501, 502, 0, 0,
	475, 515, 515, 515, 479, 505, 506, 507, 508, 509,
	510, 511, 512, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 520, 520, 522, 522, 522, 522, 522,
	437, 437, 437, 437, 0, 0, 0, 640, 0, 1420,
	0, 0, 255, -2, 0, -2, 0, 1039, 0, 0,
	0, 115, 285, 271, 114, 0, 249, 254, 250, 251,
	252, 0, 0, 0, 0, 262, 803, 1402, 0, 796,
	80, 797, 798, 799, 800, 801, 264, 802, 1045, 1430,
	1431, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 0, 809,
	810, 815, 811, 816, 822, 865, 0, 867, 0, 0,
	991, 827, 828, 829, 645, 835, 836, 837, 843, 864,
	0, 0, 0, 991, 864, 845, 1093, 848, 1216, 0,
	872, 887, 0, 882, 0, 888, 892, 891, 0, 896,
	0, 903, 345, 347, 349, 367, 0, 0, 370, 373,
	0, 1050, 0, 0, 0, 1453, 0, 1455, 1457, 0,
	0, 205, 206, 207, 204, 0, 199, 0, 222, 270,
	0, 168, 0, 202, 170, 171, 172, 200, 174, 175,
	178, 184, 188, 189, 191, 192, 266, 0, 0, 0,
	0, 165, 0, 579, 580, 581, 582, 591, 588, 63,
	0, 0, 1355, 1358, 1359, 1360, 1361, 1362, 1426, 1427,
	741, 559, 560, 561, 0, 606, 606, 606, 0, 879,
	880, 0, 40, 0, 1344, 0, 0, 0, 0, 1333,
	1335, 1336, 0, 0, 1318, 0, 0, 923, 916, 43,
	1059, 1060, 1061, 1063, 1080, 0, 1082, 1084, 963, 964,
	933, 0, 1298, 1299, 1300, 1301, 1302, -2, 1070, 1071,
	1095, 1096, 1097, 0, 0, 0, 0, 1093, 1075, 0,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1129, 1230, 1231, 0, 1307, 0, 1103, 927,
	928, 0, 1308, 1127, 1317, 1128, 1303, 1136, 1101, 1305,
	1306, 1304, 0, 0, 0, 0, 0, 1098, 0, 1369,
	0, 0, 0, 0, 1177, 0, 0, 0, 0, 1111,
	1310, 0, 1111, 1310, 0, 0, 1864, 1976, 1756, 0,
	0, 0, 1294, 1291, 0, 0, 0, 1217, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 1043, 0, 971, 973, 974, 975, -2, 0, 979,
	980, 1052, 1099, 1428, 0, -2, 0, 0, 78, 79,
	0, 0, 0, 1378, 0, 0, 0, 94, 95, 90,
	1382, 549, 0, -2, 1389, 1390, 1298, 0, 1343, 920,
	715, 422, 424, 425, 426, 0, 623, 631, 0, 0,
	621, 623, 623, 0, 619, 620, 429, 528, 526, 527,
	455, 0, 480, 0, 481, 517, 517, 517, 517, 484,
	485, 487, 490, 491, 497, 0, 0, 476, 477, 478,
	467, 0, 468, 520, 470, 0, 471, 472, 473, 474,
	430, 431, 432, 433, 637, 638, 639, 0, 0, 0,
	100, 0, 109, 1404, 110, 0, 287, 288, 0, 225,
	256, 257, 117, 0, 0, 272, 0, 416, 417, 0,
	790, 0, 792, 261, 794, 804, 805, 795, 0, 0,
	83, 0, 866, 824, 825, 826, 1056, 0, 0, 838,
	862, 863, 861, 864, 842, 856, 0, 0, 849, 0,
	886, 884, 893, 992, 351, 352, 374, 86, 0, 1433,
	1452, 0, 1456, 1458, 0, 208, 210, 0, 0, 159,
	0, 0, 201, 0, 173, 0, 0, 0, 0, 0,
	587, 0, 64, 0, 1354, 0, 0, 606, 0, 607,
	0, 0, 743, 744, -2, 781, 1412, 781, 781, 767,
	606, 781, 0, 0, 0, 68, 55, 0, 2063, 58,
	0, 1339, 1340, 1332, 0, 1397, 1398, 1319, 1320, 101,
	924, 1081, 1083, 1085, 0, 1101, 1072, 1093, 1076, 0,
	1073, 0, 1067, 0, 1175, 0, 0, 0, 0, 0,
	0, 0, 1106, -2, 1173, 1174, 1176, 0, 0, 0,
	1180, 0, 1183, 0, 0, 1223, 0, 0, 1224, 1188,
	0, 0, 0, 0, 0, 1194, 1329, 0, 1292, 0,
	0, 1197, 1198, 1218, 0, 0, 1219, 1220, 1221, 1222,
	1162, 0, 1163, 0, 0, 0, 0, 0, 1169, 1170,
	1171, 1172, 942, 942, 942, 942, 942, 942, 942, 942,
	942, 942, 942, 942, 0, 0, 1042, 0, 0, 0,
	0, 0, 0, 1015, 0, 0, 1018, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 986, 0,
	1052, 0, 0, 0, 1101, 0, 1056, 0, 1056, 1056,
	85, 0, 1051, 92, 93, 0, 0, 99, 550, 551,
	0, 224, 418, 659, 0, 0, 606, 606, 606, 606,
	0, 0, 606, 606, 606, 606, 606, 0, 0, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	0, 606, 606, 606, 606, 0, 606, 423, 0, 624,
	0, 0, 623, 623, 623, 622, 623, 614, 624, 615,
	0, 438, 0, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 0, 0, 0, 0, 0, 543, 0, 573,
	575, 0, 0, 451, 529, 0, 0, 0, 486, 482,
	483, 517, 488, 0, 513, 0, 0, 469, 0, 655,
	0, 1421, 102, 0, 0, 289, 290, 291, 1040, 0,
	226, 227, 0, 0, 0, 0, 127, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 81, 265, 812, 833,
	0, 646, 647, 991, 840, 1094, 850, 852, 853, 544,
	0, 1454, 0, 0, 0, 0, 0, 0, 220, 203,
	0, 0, 0, 0, 166, 0, 1356, 1357, 0, 565,
	566, 567, 568, 569, 570, 571, 0, 0, 623, 0,
	768, 769, 0, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 1414, 0, 0, 0, 0,
	776, 777, 0, 0, 56, 57, 1345, 41, 54, 0,
	934, 1309, 0, 1074, 0, 1077, 1104, 929, 0, 1143,
	942, 942, 942, 942, 942, 0, 515, 515, 1277, 515,
	522, 1280, 515, 1282, 515, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1289, 1196,
	1295, 0, 0, 0, 935, 936, 938, 1164, 1165, 1166,
	1167, 1168, 1147, 943, 1148, 1149, 1151, 1152, 1154, 1155,
	1156, 1157, 1159, 1160, 1161, 1363, 0, 0, 0, 1348,
	0, 1056, 1371, 0, 0, 0, 0, 2265, 2266, 972,
	1006, 1008, 0, 1003, 1016, 1017, 1019, 0, 1021, 0,
	0, 1024, 1025, 1026, 993, 978, 1100, 981, 0, 0,
	0, 1052, 990, 0, 0, 0, 0, 0, 1329, 1056,
	76, 77, 0, 96, 97, 98, 660, 727, 0, 0,
	0, 0, 606, 0, 606, 606, 0, 0, 0, 0,
	0, 606, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 0, 696,
	697, 701, 702, 703, 704, 705, 712, 713, 714, 0,
	0, 625, 515, 515, 0, 629, 621, 630, 608, 610,
	611, 613, 0, 439, 0, 0, 450, 0, 530, 0,
	532, 1216, 1216, 1216, 0, 0, 1068, 1069, 0, 572,
	574, 576, 577, 516, 518, 519, 489, 503, 0, 504,
	0, 523, 0, 642, 656, 0, 0, 0, 100, 0,
	233, 0, 229, 0, 0, 0, 135, 0, 118, 119,
	120, 122, 123, 0, 0, 0, 116, 0, 274, 0,
	277, 278, 791, 793, 1057, 864, 1444, 545, 1041, 220,
	209, 211, 212, 0, 220, 223, 160, 0, 161, 163,
	0, 162, 592, 562, 563, 564, 745, 0, 778, 0,
	0, 1420, 621, 0, -2, 748, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 0, 774, 0,
	750, 0, 778, 0, 771, 0, 0, 59, 51, 101,
	101, 1144, 1078, 0, 1146, 1150, 1145, 1153, 1158, 1178,
	1274, 544, 1278, 1279, 1281, 1283, 1284, 1286, 1182, 1179,
	1181, 0, 0, 0, 0, 1189, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 940, 939, 69, 0, 1363,
	1346, 1365, 1367, 0, 0, 0, 0, -2, 1735, 0,
	997, 1329, 0, 0, 0, 0, 0, 1000, 1007, 0,
	0, 1001, 0, 1002, 1020, 1022, 1023, 976, 0, 0,
	982, 0, 0, -2, 989, 0, 0, 0, 999, 0,
	1337, 75, 729, 718, 0, 0, 0, 728, 661, 662,
	663, 664, 0, 606, 0, 0, 668, 669, 671, 672,
	673, 0, 0, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 706, 707, 708, 709,
	710, 711, 690, 691, 692, 693, 694, 695, 0, 700,
	598, 0, 1334, 1334, 623, 623, 0, 995, 0, 0,
	546, 547, 531, 533, 0, 535, 0, 537, 0, 0,
	0, 542, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 0, 0, 514, 0, 0, 657, 0, 100, 102,
	0, 101, 234, 235, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 228, 230, 231, 232, 153, 136, 137,
	0, 0, 0, 0, 128, 129, 0, 0, 0, 0,
	0, 124, 125, 126, 273, 0, 0, 276, 0, 0,
	839, 1446, 1440, 213, 220, 213, 0, 164, 0, 747,
	779, 0, 437, 437, 0, 623, 623, 770, 0, 1410,
	1411, 0, 765, 778, 0, 0, 0, 1056, 0, 0,
	925, 930, 1275, 1276, 0, 0, 0, 0, 1190, 1191,
	1192, 1225, 1195, 1290, 0, 0, 1329, 0, 0, 70,
	0, 1368, -2, 0, 0, 87, 0, 1337, 1372, 1373,
	1374, 1375, 1376, 1004, 0, 1009, 0, 0, 1052, 987,
	0, 0, 0, 0, 0, 74, 731, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 670, 666, 674, 675,
	698, 699, 597, 601, 0, 606, 0, 626, 627, 628,
	609, 612, 0, 0, 434, 0, 0, 0, 0, 539,
	0, 541, 521, 524, 0, 107, 0, 0, 102, 236,
	237, 238, 239, 241, 242, 0, 0, 0, 113, 0,
	0, 138, 0, 0, 0, 0, 148, 149, 150, 151,
	152, 130, 131, 132, 133, 134, 121, 0, 0, 275,
	0, 280, 281, 1407, 1448, -2, 0, 156, 0, 213,
	158, 221, 746, 780, 427, 428, 0, 1420, 0, 749,
	764, 766, 0, 773, 0, 1321, 52, 53, 101, 1184,
	1186, 1185, 1187, 0, 0, 0, 1214, 1215, 944, 0,
	0, 1366, 1347, 0, 1351, 0, 998, 73, 0, 994,
	983, 985, 1052, 1053, 1054, 1055, 0, 716, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 667, 602, 603,
	0, 605, 0, 996, 448, 435, 436, 0, 534, 536,
	538, 540, 599, 100, 0, 60, 243, 244, 245, 246,
	154, 155, 139, 140, 0, 142, 143, 0, 0, 0,
	283, 0, 279, 993, 0, 1440, 0, 1442, 0, 1439,
	0, 214, 157, 0, 0, 0, 772, 0, 784, 0,
	1326, 0, 926, 1193, 0, 0, 0, 0, 0, 0,
	941, 0, 1350, 0, 1005, 988, 0, 0, 727, 719,
	0, 721, 0, 0, 0, 0, 0, 604, 0, 434,
	106, 600, 108, 292, 100, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 334, 60, 0, 144, 0, 146, 147,
	282, 0, 39, 0, 1447, 0, 1445, 0, 0, 1441,
	0, 599, 0, 0, 783, 0, 0, 954, 0, 0,
	1226, 0, 1229, 937, 945, 0, 948, 0, 0, 0,
	959, 0, 946, 1364, -2, 0, 1029, 0, 0, 733,
	720, 722, 723, 724, 725, 0, 0, 449, 100, 0,
	0, 112, 0, 0, 1422, 0, 0, -2, -2, -2,
	1424, 331, 332, 0, 375, 0, 342, 343, 0, 335,
	0, 0, 141, 145, 284, 1408, 1409, 1449, 0, 0,
	0, 751, 0, 599, 785, 0, 50, 0, 1327, 1328,
	1322, 1323, 1325, 1227, 0, 949, 950, 951, 952, 953,
	0, 0, 0, 0, 717, 732, 0, 0, 0, 102,
	293, 294, 0, 303, 0, 60, 0, 0, 0, 544,
	0, 60, 60, 0, 336, 60, 1443, 1437, 215, 216,
	217, 219, 599, 775, 0, 955, 956, 0, 0, 0,
	0, 960, 0, 1030, 1031, 0, 0, 734, 0, 632,
	60, 0, 60, 304, 0, 0, 0, 0, 0, 548,
	1425, 0, 376, 0, 0, 247, 0, 752, 0, 0,
	0, 1324, 0, 947, 0, 1028, 1034, 0, 726, 633,
	634, 0, 100, 295, 296, 297, 298, 299, 60, 0,
	301, 0, 60, 60, 313, 314, 315, 60, 323, 325,
	326, 327, 0, 329, 330, 318, 339, 60, 333, 337,
	218, 0, 957, 958, 1228, 1027, 1035, 1033, 635, 0,
	636, 0, 0, 0, 111, 0, 61, 60, 0, 0,
	60, 0, 310, 0, 316, 60, 0, 328, 0, 0,
	0, 0, 1883, 1032, 0, 0, 0, 648, 650, 651,
	0, 0, 649, 60, 0, -2, 306, 0, 0, 60,
	311, 0, 317, 324, 319, 340, 338, 786, 787, 0,
	0, 0, 652, 653, 654, 300, 302, 60, 308, 0,
	60, 341, 1036, 0, 1038, 0, 60, 0, 1037, 307,
	0, -2, 309,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 647,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:561
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:606
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:618
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:645
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 50:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:682
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableExprs = nil
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:707
		{
			yyVAL.into = nil
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.with = nil
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			yyVAL.with = yyDollar[2].with
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:754
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:782
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:788
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:801
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = InsertStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = ReplaceStr
		}
	case 73:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.partitions = nil
		}
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:901
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:951
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:956
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:961
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:986
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 107:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:990
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:996
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1002
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1018
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1022
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1026
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1045
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.accountNames = nil
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItems = nil
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1108
		{
			yyVAL.accountLimitItems = nil
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItems = nil
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1189
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.str = ""
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 156:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1237
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 157:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1242
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 160:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1261
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1266
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1270
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1423
		{
			yyVAL.strs = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1442
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.grantAssumption = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1489
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1493
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1497
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1501
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.boolean = false
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.boolean = true
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.boolean = false
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.boolean = true
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1530
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1542
		{
			yyVAL.procedureParams = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1570
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristics = nil
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1641
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = ""
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1787
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1819
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = BeforeStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = AfterStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = InsertStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = UpdateStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = DeleteStr
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.triggerOrder = nil
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1890
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1896
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1900
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1916
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1922
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 307:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1927
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1932
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 309:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1938
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 316:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: &BeginEndBlock{}}}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1988
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2064
		{
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2089
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Resignal{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2214
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.exprs = nil
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.exprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2305
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2319
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2335
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2547
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2556
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.sqlVal = nil
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.sqlVal = nil
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2938
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2968
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2976
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2980
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2988
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.boolean = false
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3052
		{
			yyVAL.charsetCollates = nil
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3088
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3092
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3096
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3100
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3108
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3114
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3118
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3122
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3128
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3134
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.colKeyOpt = colKey
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3204
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3217
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3219
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3223
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = ""
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3234
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3238
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3243
		{
			yyVAL.indexOptions = nil
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3263
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3267
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = ""
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3294
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3306
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3319
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3365
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 632:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3405
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 633:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3409
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 634:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3413
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 635:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3417
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 636:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3421
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3450
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = ""
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3512
		{
			yyVAL.boolean = true
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.boolean = true
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			yyVAL.boolean = false
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = ""
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 717:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = yyDollar[1].str
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3781
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3785
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 726:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string("")
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3867
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3877
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3900
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3907
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3918
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3922
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 751:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3927
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 752:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3931
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3940
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3945
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3965
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3985
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3989
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3993
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4000
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4022
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4031
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4035
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 775:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4045
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.columnOrder = nil
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
		}
	case 783:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4079
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4089
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 786:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4095
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 787:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4099
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4109
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4119
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4131
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4137
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4145
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4157
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4165
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4173
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4181
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4189
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4197
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{

		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4230
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4236
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4240
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.aliasedExprs = []*AliasedExpr{{Expr: yyDollar[1].expr}}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.aliasedExprs = append(yyDollar[1].aliasedExprs, &AliasedExpr{Expr: yyDollar[3].expr})
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4264
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].aliasedExprs}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].aliasedExprs}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4278
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4286
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4297
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4305
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4309
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4313
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4318
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4322
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4326
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4342
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4350
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4354
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4358
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4362
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 839:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4366
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4371
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4380
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4384
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4392
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4398
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4406
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4410
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4415
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4419
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4428
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4432
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4446
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.boolean = false
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.boolean = true
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = ""
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4486
		{
			yyVAL.showFilter = nil
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4494
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4498
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = SessionStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = GlobalStr
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4522
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4531
		{
			yyVAL.bytes = nil
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4541
		{
			yyVAL.statement = &Begin{}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4551
		{
			yyVAL.statement = &Begin{}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4555
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4559
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.bytes = nil
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.bytes = nil
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			yyVAL.bytes = nil
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.bytes = nil
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4582
		{
			yyVAL.bytes = nil
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.bytes = nil
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4592
		{
			yyVAL.statement = &Commit{}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4598
		{
			yyVAL.statement = &Rollback{}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4610
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4614
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4618
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4622
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4638
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			setAllowComments(yylex, true)
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.bytes2 = nil
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = UnionStr
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = UnionAllStr
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = UnionDistinctStr
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.byt = 0
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.byt = 1
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = SQLCacheStr
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = DistinctStr
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4746
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.str = StraightJoinHint
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4764
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4787
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4797
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4805
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4815
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4821
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4826
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4834
		{
			yyVAL.exprs = nil
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4843
		{
			yyVAL.over = nil
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.over = yyDollar[1].over
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4852
		{
			yyVAL.frame = nil
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4856
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4867
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4905
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4909
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4913
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4924
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4932
		{
			yyVAL.window = nil
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4935
		{
			yyVAL.window = yyDollar[2].window
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4968
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4980
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4986
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5030
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5064
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5070
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5075
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5090
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5094
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5098
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.expr = nil
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			yyVAL.columns = nil
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5126
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5136
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5152
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5166
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5170
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5174
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5186
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5198
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5201
		{
			yyVAL.empty = struct{}{}
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.empty = struct{}{}
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5212
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5218
		{
			yyVAL.str = JoinStr
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5222
		{
			yyVAL.str = JoinStr
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5226
		{
			yyVAL.str = JoinStr
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = StraightJoinStr
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = LeftJoinStr
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = LeftJoinStr
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = RightJoinStr
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = RightJoinStr
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5264
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1027:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5278
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1028:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5282
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5288
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5293
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5313
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{

		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5341
		{

		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5345
		{

		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5349
		{

		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5353
		{

		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5363
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5369
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5375
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5389
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5411
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5422
		{
			yyVAL.indexHints = nil
		}
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5426
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5430
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5434
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5439
		{
			yyVAL.expr = nil
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5443
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5449
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5453
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5457
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5461
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5465
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5469
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5477
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5511
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5515
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5527
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5531
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = IsNullStr
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = IsNotNullStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.str = IsTrueStr
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5561
		{
			yyVAL.str = IsFalseStr
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = EqualStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.str = LessThanStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			yyVAL.str = GreaterThanStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.str = LessEqualStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.str = NotEqualStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5600
		{
			yyVAL.expr = nil
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5624
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5634
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5640
		{
			yyVAL.selectExprs = nil
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5651
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5661
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5691
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5707
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5711
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5715
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5719
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5723
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5727
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5747
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5751
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5755
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5767
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5775
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5789
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5793
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5797
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5817
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5821
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5855
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5859
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5867
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5871
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5875
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5887
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5891
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5895
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5908
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5975
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5979
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5991
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5999
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6003
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6007
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6011
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6015
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6019
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1190:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6023
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6027
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6031
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1193:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6035
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1195:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6043
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6047
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6051
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6078
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6094
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6108
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6112
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6116
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6121
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6126
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6131
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6135
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6139
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6172
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6180
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.str = BooleanModeStr
		}
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6194
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1228:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6208
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = Armscii8Str
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = AsciiStr
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = Big5Str
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = UBinaryStr
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = Cp1250Str
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.str = Cp1251Str
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6242
		{
			yyVAL.str = Cp1256Str
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.str = Cp1257Str
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			yyVAL.str = Cp850Str
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = Cp852Str
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = Cp866Str
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = Cp932Str
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.str = Dec8Str
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
			yyVAL.str = EucjpmsStr
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.str = EuckrStr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6278
		{
			yyVAL.str = Gb18030Str
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			yyVAL.str = Gb2312Str
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6286
		{
			yyVAL.str = GbkStr
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6290
		{
			yyVAL.str = Geostd8Str
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6294
		{
			yyVAL.str = GreekStr
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6298
		{
			yyVAL.str = HebrewStr
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.str = Hp8Str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.str = Keybcs2Str
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6310
		{
			yyVAL.str = Koi8rStr
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			yyVAL.str = Koi8uStr
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = Latin1Str
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6322
		{
			yyVAL.str = Latin2Str
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6326
		{
			yyVAL.str = Latin5Str
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6330
		{
			yyVAL.str = Latin7Str
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6334
		{
			yyVAL.str = MacceStr
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6338
		{
			yyVAL.str = MacromanStr
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6342
		{
			yyVAL.str = SjisStr
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6346
		{
			yyVAL.str = Swe7Str
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6350
		{
			yyVAL.str = Tis620Str
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6354
		{
			yyVAL.str = Ucs2Str
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.str = UjisStr
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = Utf16Str
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6366
		{
			yyVAL.str = Utf16leStr
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6370
		{
			yyVAL.str = Utf32Str
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6374
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6388
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6400
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6404
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6408
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6418
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6426
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6430
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6434
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6438
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6443
		{
			yyVAL.expr = nil
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6447
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6452
		{
			yyVAL.str = string("")
		}
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6456
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6462
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6466
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6472
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6477
		{
			yyVAL.expr = nil
		}
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6481
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6487
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6495
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6499
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6503
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6507
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6511
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6515
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6519
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6523
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6527
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6531
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6535
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6539
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6545
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6549
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6553
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6557
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6561
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6565
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6569
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6573
		{
			yyVAL.expr = &NullVal{}
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6583
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6587
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6592
		{
			yyVAL.exprs = nil
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6602
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6606
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6612
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6617
		{
			yyVAL.expr = nil
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6621
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6627
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6632
		{
			yyVAL.orderBy = nil
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6636
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6642
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6646
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6652
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6657
		{
			yyVAL.str = AscScr
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6661
		{
			yyVAL.str = AscScr
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6665
		{
			yyVAL.str = DescScr
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6670
		{
			yyVAL.limit = nil
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6674
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6678
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6682
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6688
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6692
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6697
		{
			yyVAL.str = ""
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6701
		{
			yyVAL.str = ForUpdateStr
		}
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6705
		{
			yyVAL.str = ShareModeStr
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6718
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6722
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6726
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6730
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6735
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6739
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6743
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6749
		{
			yyVAL.columns = nil
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6753
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6763
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6773
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6781
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6785
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6789
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6794
		{
			yyVAL.assignExprs = nil
		}
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6798
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6804
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6808
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6818
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6830
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6844
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6850
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6853
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6857
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6861
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6867
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6871
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6877
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6888
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6901
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6914
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6920
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6930
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6934
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6938
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6944
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6948
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6952
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6959
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6966
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6970
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6974
		{
			yyVAL.expr = &Default{}
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6983
		{
			yyVAL.byt = 0
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6985
		{
			yyVAL.byt = 1
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6988
		{
			yyVAL.byt = 0
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6990
		{
			yyVAL.byt = 1
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6993
		{
			yyVAL.byt = 0
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6995
		{
			yyVAL.byt = 1
		}
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6998
		{
			yyVAL.str = ""
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7000
		{
			yyVAL.str = IgnoreStr
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7003
		{
			yyVAL.sqlVal = nil
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7005
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7007
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7011
		{
			yyVAL.empty = struct{}{}
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7013
		{
			yyVAL.empty = struct{}{}
		}
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7016
		{
			yyVAL.empty = struct{}{}
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7018
		{
			yyVAL.empty = struct{}{}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7020
		{
			yyVAL.empty = struct{}{}
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7024
		{
			yyVAL.str = UniqueStr
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = FulltextStr
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7028
		{
			yyVAL.str = SpatialStr
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7031
		{
			yyVAL.str = ""
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7033
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7036
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7038
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7042
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7046
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7052
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7056
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7063
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7069
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7073
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7085
		{
			yyVAL.str = string("")
		}
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7087
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7090
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7092
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7095
		{
			yyVAL.EnclosedBy = nil
		}
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7099
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7104
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7108
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7113
		{
			yyVAL.sqlVal = nil
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7117
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7122
		{
			yyVAL.sqlVal = nil
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7126
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7131
		{
			yyVAL.Fields = nil
		}
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7135
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7140
		{
			yyVAL.Lines = nil
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7144
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7149
		{
			yyVAL.sqlVal = nil
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7153
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7159
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7165
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7169
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7175
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7179
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7185
		{
			yyVAL.lockType = LockRead
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7189
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7193
		{
			yyVAL.lockType = LockWrite
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7197
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7203
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7209
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7213
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7217
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8072
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8081
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
