// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const ROUTINE = 57589
const TABLESPACE = 57590
const CLIENT = 57591
const SLAVE = 57592
const EVENT = 57593
const EXECUTE = 57594
const FILE = 57595
const RELOAD = 57596
const REPLICATION = 57597
const SHUTDOWN = 57598
const SUPER = 57599
const USAGE = 57600
const BEGIN = 57601
const START = 57602
const TRANSACTION = 57603
const COMMIT = 57604
const ROLLBACK = 57605
const SAVEPOINT = 57606
const WORK = 57607
const RELEASE = 57608
const BIT = 57609
const TINYINT = 57610
const SMALLINT = 57611
const MEDIUMINT = 57612
const INT = 57613
const INTEGER = 57614
const BIGINT = 57615
const INTNUM = 57616
const SERIAL = 57617
const REAL = 57618
const DOUBLE = 57619
const FLOAT_TYPE = 57620
const DECIMAL = 57621
const NUMERIC = 57622
const DEC = 57623
const FIXED = 57624
const PRECISION = 57625
const TIME = 57626
const TIMESTAMP = 57627
const DATETIME = 57628
const YEAR = 57629
const CHAR = 57630
const VARCHAR = 57631
const BOOL = 57632
const CHARACTER = 57633
const VARBINARY = 57634
const NCHAR = 57635
const NVARCHAR = 57636
const NATIONAL = 57637
const VARYING = 57638
const TEXT = 57639
const TINYTEXT = 57640
const MEDIUMTEXT = 57641
const LONGTEXT = 57642
const LONG = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const LOCAL = 57658
const LOW_PRIORITY = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const COLLATION = 57666
const DATABASES = 57667
const SCHEMAS = 57668
const TABLES = 57669
const FULL = 57670
const PROCESSLIST = 57671
const COLUMNS = 57672
const FIELDS = 57673
const ENGINES = 57674
const PLUGINS = 57675
const NAMES = 57676
const CHARSET = 57677
const GLOBAL = 57678
const SESSION = 57679
const ISOLATION = 57680
const LEVEL = 57681
const READ = 57682
const WRITE = 57683
const ONLY = 57684
const REPEATABLE = 57685
const COMMITTED = 57686
const UNCOMMITTED = 57687
const SERIALIZABLE = 57688
const CURRENT_TIMESTAMP = 57689
const DATABASE = 57690
const CURRENT_DATE = 57691
const CURRENT_USER = 57692
const CURRENT_TIME = 57693
const LOCALTIME = 57694
const LOCALTIMESTAMP = 57695
const UTC_DATE = 57696
const UTC_TIME = 57697
const UTC_TIMESTAMP = 57698
const REPLACE = 57699
const CONVERT = 57700
const CAST = 57701
const SUBSTR = 57702
const SUBSTRING = 57703
const TRIM = 57704
const LEADING = 57705
const TRAILING = 57706
const BOTH = 57707
const GROUP_CONCAT = 57708
const SEPARATOR = 57709
const TIMESTAMPADD = 57710
const TIMESTAMPDIFF = 57711
const OVER = 57712
const WINDOW = 57713
const GROUPING = 57714
const GROUPS = 57715
const CURRENT = 57716
const ROWS = 57717
const RANGE = 57718
const AVG = 57719
const BIT_AND = 57720
const BIT_OR = 57721
const BIT_XOR = 57722
const COUNT = 57723
const JSON_ARRAYAGG = 57724
const JSON_OBJECTAGG = 57725
const MAX = 57726
const MIN = 57727
const STDDEV_POP = 57728
const STDDEV = 57729
const STD = 57730
const STDDEV_SAMP = 57731
const SUM = 57732
const VAR_POP = 57733
const VARIANCE = 57734
const VAR_SAMP = 57735
const CUME_DIST = 57736
const DENSE_RANK = 57737
const FIRST_VALUE = 57738
const LAG = 57739
const LAST_VALUE = 57740
const LEAD = 57741
const NTH_VALUE = 57742
const NTILE = 57743
const ROW_NUMBER = 57744
const PERCENT_RANK = 57745
const RANK = 57746
const MATCH = 57747
const AGAINST = 57748
const BOOLEAN = 57749
const LANGUAGE = 57750
const WITH = 57751
const QUERY = 57752
const EXPANSION = 57753
const UNUSED = 57754
const ARRAY = 57755
const DESCRIPTION = 57756
const EMPTY = 57757
const JSON_TABLE = 57758
const LATERAL = 57759
const MEMBER = 57760
const RECURSIVE = 57761
const ACTIVE = 57762
const BUCKETS = 57763
const CLONE = 57764
const COMPONENT = 57765
const DEFINITION = 57766
const ENFORCED = 57767
const EXCLUDE = 57768
const FOLLOWING = 57769
const GEOMCOLLECTION = 57770
const GET_MASTER_PUBLIC_KEY = 57771
const HISTOGRAM = 57772
const HISTORY = 57773
const INACTIVE = 57774
const INVISIBLE = 57775
const LOCKED = 57776
const MASTER_COMPRESSION_ALGORITHMS = 57777
const MASTER_PUBLIC_KEY_PATH = 57778
const MASTER_TLS_CIPHERSUITES = 57779
const MASTER_ZSTD_COMPRESSION_LEVEL = 57780
const NESTED = 57781
const NETWORK_NAMESPACE = 57782
const NOWAIT = 57783
const NULLS = 57784
const OJ = 57785
const OLD = 57786
const ORDINALITY = 57787
const ORGANIZATION = 57788
const OTHERS = 57789
const PATH = 57790
const PERSIST = 57791
const PERSIST_ONLY = 57792
const PRECEDING = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 1009,
	-1, 42,
	141, 1071,
	142, 1089,
	-2, 230,
	-1, 48,
	181, 653,
	182, 653,
	-2, 643,
	-1, 499,
	128, 1099,
	-2, 1093,
	-1, 500,
	128, 1100,
	-2, 1094,
	-1, 604,
	98, 1364,
	128, 1364,
	-2, 1055,
	-1, 605,
	98, 1478,
	128, 1478,
	-2, 1056,
	-1, 610,
	98, 1387,
	128, 1387,
	-2, 1057,
	-1, 611,
	98, 1433,
	128, 1433,
	-2, 1058,
	-1, 612,
	98, 1434,
	128, 1434,
	-2, 1059,
	-1, 613,
	98, 1317,
	128, 1317,
	-2, 1063,
	-1, 615,
	98, 1410,
	128, 1410,
	-2, 1065,
	-1, 1104,
	1, 741,
	5, 741,
	12, 741,
	13, 741,
	14, 741,
	15, 741,
	17, 741,
	19, 741,
	30, 741,
	31, 741,
	56, 741,
	57, 741,
	58, 741,
	59, 741,
	60, 741,
	62, 741,
	63, 741,
	66, 741,
	67, 741,
	69, 741,
	70, 741,
	490, 741,
	-2, 771,
	-1, 1108,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1347,
	128, 1102,
	-2, 1098,
	-1, 1512,
	44, 502,
	-2, 1329,
	-1, 1516,
	68, 502,
	-2, 1279,
	-1, 1519,
	68, 498,
	72, 498,
	-2, 1201,
	-1, 1520,
	68, 499,
	72, 499,
	-2, 1211,
	-1, 1635,
	44, 545,
	148, 547,
	150, 545,
	151, 545,
	-2, 580,
	-1, 1703,
	5, 50,
	-2, 837,
	-1, 2002,
	69, 1255,
	70, 1255,
	128, 1255,
	-2, 684,
	-1, 2025,
	1, 792,
	5, 792,
	12, 792,
	13, 792,
	14, 792,
	15, 792,
	17, 792,
	19, 792,
	30, 792,
	31, 792,
	56, 792,
	57, 792,
	58, 792,
	59, 792,
	60, 792,
	62, 792,
	63, 792,
	66, 792,
	67, 792,
	69, 792,
	70, 792,
	490, 792,
	-2, 771,
	-1, 2126,
	148, 548,
	-2, 546,
	-1, 2188,
	5, 50,
	-2, 1029,
	-1, 2388,
	41, 1109,
	-2, 1107,
	-1, 2517,
	5, 50,
	-2, 1032,
}

const yyPrivate = 57344

const yyLast = 30743

var yyAct = [...]int{
	562, 78, 2533, 2655, 2706, 2679, 2669, 2534, 813, 407,
	2520, 2670, 2598, 2408, 1504, 2440, 7, 2439, 6, 2438,
	5, 500, 1564, 2657, 2441, 8, 502, 2507, 2571, 2596,
	2038, 2200, 2502, 2295, 2019, 2335, 2388, 1928, 1139, 1562,
	1918, 561, 1229, 1742, 1055, 1771, 1471, 1995, 2390, 629,
	2276, 491, 1792, 1521, 1465, 2087, 2253, 1574, 505, 2231,
	2247, 1325, 1469, 1492, 2039, 479, 2521, 1996, 125, 1513,
	2215, 125, 2111, 2120, 432, 432, 469, 125, 484, 78,
	390, 393, 2437, 3, 627, 1852, 1927, 435, 435, 518,
	845, 91, 1503, 81, 1992, 1104, 104, 1743, 1634, 125,
	2011, 1656, 1502, 1318, 1964, 1444, 2004, 1372, 625, 1600,
	125, 624, 1553, 1509, 125, 632, 1273, 1231, 125, 1209,
	1228, 1381, 1549, 1333, 1835, 957, 606, 1455, 1246, 1119,
	1100, 1436, 125, 435, 1349, 632, 1448, 964, 895, 829,
	960, 487, 874, 125, 623, 1118, 602, 603, 609, 478,
	977, 598, 1278, 1616, 812, 410, 873, 1073, 1896, 968,
	409, 483, 800, 595, 83, 1110, 1101, 1074, 2728, 2724,
	2714, 1938, 2696, 2694, 2674, 2650, 2579, 80, 1271, 67,
	2232, 2687, 2636, 2633, 2367, 2225, 2565, 2216, 2234, 35,
	35, 35, 35, 425, 2668, 419, 430, 413, 2515, 2638,
	2365, 85, 86, 87, 88, 89, 2635, 2632, 2072, 2380,
	1863, 2550, 2084, 1737, 2564, 2368, 1985, 2482, 420, 2561,
	2562, 1678, 2180, 402, 799, 1383, 2034, 2035, 1489, 1490,
	1738, 2320, 1467, 1615, 2514, 1587, 1277, 1587, 1120, 35,
	1121, 70, 38, 39, 1780, 2033, 951, 1779, 1537, 1488,
	1781, 79, 79, 79, 79, 1313, 1314, 2237, 848, 1275,
	1276, 1294, 802, 1818, 805, 806, 849, 850, 923, 833,
	834, 619, 401, 836, 400, 1523, 931, 1614, 892, 507,
	2419, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 1810, 1538, 1003, 2235, 2236, 2238, 2239,
	2240, 79, 1543, 2167, 1538, 2602, 2602, 835, 1815, 1814,
	2165, 493, 384, 1525, 1274, 399, 1258, 476, 412, 411,
	414, 2597, 907, 2304, 2370, 107, 1106, 927, 928, 418,
	1811, 1858, 1886, 577, 404, 583, 585, 584, 581, 582,
	580, 579, 578, 2663, 2393, 1816, 422, 1803, 2248, 2110,
	426, 1525, 1891, 1804, 586, 587, 2251, 2603, 2603, 70,
	38, 39, 1627, 1529, 1531, 429, 1530, 1550, 97, 2249,
	2250, 2581, 497, 122, 2580, 855, 2094, 1862, 125, 2540,
	2486, 40, 389, 2254, 2255, 2256, 2257, 78, 78, 2476,
	2265, 2272, 116, 112, 113, 858, 114, 1628, 1305, 2359,
	2587, 2366, 863, 1575, 865, 1860, 864, 2263, 2538, 110,
	2574, 2575, 1813, 938, 2683, 597, 939, 2576, 2360, 621,
	2358, 99, 125, 798, 846, 96, 847, 849, 850, 118,
	117, 109, 108, 2085, 844, 907, 394, 810, 2357, 2088,
	2089, 2090, 2091, 2092, 2356, 2355, 2634, 2354, 824, 1569,
	385, 2362, 2472, 2473, 856, 857, 415, 416, 417, 423,
	1284, 427, 428, 431, 2088, 2089, 2090, 2091, 2092, 862,
	866, 2484, 2435, 947, 105, 930, 2652, 1568, 395, 391,
	954, 119, 2384, 120, 106, 2568, 2569, 2478, 841, 2522,
	2097, 2202, 2599, 2599, 1763, 832, 840, 111, 2503, 1012,
	1877, 1878, 1014, 842, 843, 804, 803, 2665, 2630, 1921,
	101, 2371, 102, 1449, 82, 980, 2277, 2278, 2433, 906,
	2720, 1138, 1902, 2125, 1138, 2233, 1259, 907, 1904, 1861,
	2729, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1825,
	1538, 1053, 2071, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 403, 1072, 1075, 1075,
	1075, 1081, 1075, 1075, 1081, 1075, 1081, 1090, 1091, 1092,
	1093, 1094, 1095, 2112, 1105, 1621, 2513, 1528, 917, 2420,
	1552, 1812, 940, 914, 2726, 859, 2488, 2363, 71, 2477,
	77, 77, 77, 77, 125, 125, 125, 1111, 115, 392,
	2381, 1864, 2600, 2600, 392, 392, 1277, 2715, 2646, 2710,
	632, 2539, 1474, 1476, 2661, 2483, 944, 2656, 2697, 35,
	36, 70, 38, 39, 387, 1054, 2383, 98, 1099, 1275,
	1276, 2659, 946, 58, 2096, 1853, 1279, 801, 421, 76,
	77, 609, 912, 40, 62, 63, 609, 1642, 1636, 1637,
	59, 1635, 2155, 1638, 1639, 1138, 2042, 815, 1137, 903,
	388, 1138, 2287, 826, 2336, 1904, 107, 475, 913, 2288,
	909, 1854, 1281, 1880, 1885, 1280, 1882, 49, 2338, 1866,
	1865, 79, 1797, 1584, 1622, 1217, 1215, 1202, 1583, 1643,
	860, 1198, 965, 1132, 1475, 1797, 1770, 1769, 1965, 1768,
	797, 950, 984, 807, 910, 911, 71, 896, 356, 1123,
	2152, 2291, 2144, 1713, 1124, 1136, 1076, 1078, 1080, 1082,
	1084, 1086, 1087, 1089, 1797, 1710, 1077, 1079, 1915, 1083,
	1085, 1884, 1088, 1883, 2708, 902, 1784, 2709, 1109, 2707,
	1967, 2481, 1114, 1776, 42, 72, 45, 44, 47, 2337,
	1797, 1800, 1015, 1016, 1673, 1661, 1646, 1328, 1855, 1856,
	392, 1013, 1131, 1116, 983, 1133, 825, 1493, 1056, 2658,
	2660, 2061, 109, 108, 1003, 1797, 48, 75, 74, 1796,
	2106, 1071, 1484, 46, 2286, 1910, 1902, 1524, 993, 1256,
	1907, 1003, 1796, 1906, 1909, 432, 1211, 1321, 64, 632,
	976, 996, 997, 998, 999, 1000, 993, 435, 435, 1003,
	1247, 1591, 432, 1230, 2292, 838, 125, 831, 1356, 125,
	1708, 1796, 1707, 2062, 435, 435, 1919, 125, 1210, 56,
	57, 1015, 1016, 1354, 1355, 1353, 125, 125, 125, 125,
	975, 974, 974, 1015, 1016, 2009, 65, 1796, 66, 2008,
	1914, 1437, 1641, 1107, 1911, 1233, 435, 851, 976, 976,
	1266, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1129,
	867, 1969, 1796, 1326, 1327, 808, 1973, 1254, 1968, 1902,
	1966, 814, 1987, 1138, 2713, 1971, 1903, 1904, 2647, 2666,
	50, 73, 432, 52, 53, 60, 94, 61, 1970, 1098,
	1204, 1108, 1841, 2264, 435, 435, 435, 1248, 1592, 632,
	2258, 830, 839, 1972, 1974, 1269, 2700, 2680, 2699, 975,
	974, 2049, 975, 974, 975, 974, 1303, 1287, 78, 2717,
	971, 2649, 79, 2543, 1317, 975, 974, 976, 2721, 435,
	976, 93, 976, 1352, 435, 435, 2535, 2518, 1234, 1319,
	1212, 853, 125, 976, 125, 1250, 632, 1251, 1219, 961,
	1243, 1244, 962, 1245, 975, 974, 1309, 975, 974, 2378,
	1709, 2573, 2377, 2572, 125, 1237, 1238, 474, 1346, 92,
	980, 1437, 976, 1726, 2623, 976, 975, 974, 71, 975,
	974, 2376, 2722, 1989, 2375, 78, 817, 818, 819, 820,
	821, 822, 823, 1285, 976, 1261, 1262, 976, 1350, 1264,
	1311, 2369, 2224, 1347, 994, 995, 996, 997, 998, 999,
	1000, 993, 1376, 1377, 1003, 1267, 632, 2536, 2572, 1316,
	2611, 2223, 2610, 1282, 975, 974, 1840, 1236, 1057, 1286,
	77, 1838, 1283, 1308, 2479, 1339, 1341, 1342, 1330, 1819,
	1439, 1340, 976, 1658, 1659, 1660, 898, 1252, 523, 522,
	525, 526, 527, 528, 592, 593, 1310, 524, 529, 897,
	2622, 1304, 1331, 2537, 1307, 1332, 1373, 1054, 1374, 871,
	2584, 1345, 1315, 1782, 2582, 1783, 1468, 1937, 2549, 2609,
	2480, 1105, 632, 632, 2475, 1105, 1056, 2474, 2432, 125,
	2385, 2353, 870, 1422, 1425, 2314, 2261, 125, 125, 1343,
	2260, 1438, 125, 125, 2259, 2221, 125, 125, 125, 2054,
	1415, 597, 1836, 1611, 1223, 1263, 1497, 1235, 2608, 2485,
	625, 2430, 2402, 1800, 1390, 2396, 632, 632, 1394, 2284,
	2139, 1239, 1240, 1241, 1242, 1479, 1233, 2135, 2127, 1481,
	2098, 2082, 1473, 2081, 2080, 1871, 609, 1870, 1605, 1589,
	1588, 1347, 1375, 1260, 1257, 1379, 1227, 1226, 1054, 1387,
	1225, 1224, 1213, 1207, 1206, 1205, 1464, 1203, 1396, 1397,
	1336, 1337, 893, 827, 398, 396, 2327, 2639, 956, 1407,
	1218, 1499, 937, 1411, 2211, 2629, 2556, 956, 2211, 2554,
	2211, 2552, 1198, 2395, 125, 2347, 1253, 1581, 2346, 1434,
	2211, 2434, 1993, 1107, 125, 2007, 125, 125, 435, 435,
	435, 2327, 2426, 125, 2077, 1477, 1772, 1510, 2055, 1498,
	903, 1457, 1460, 1461, 1462, 1458, 1081, 1459, 1463, 1579,
	1580, 2012, 2013, 2007, 1486, 1485, 1351, 1482, 1491, 125,
	125, 125, 2327, 2343, 1478, 1500, 1111, 1312, 2327, 956,
	1507, 1559, 1560, 1056, 2327, 2326, 2211, 2210, 1420, 1421,
	2192, 956, 1112, 1607, 125, 1112, 125, 1645, 956, 1335,
	632, 2146, 1772, 1452, 632, 1555, 1556, 1557, 1558, 2069,
	2068, 2065, 2066, 1551, 2065, 2064, 1671, 956, 78, 1452,
	956, 1624, 1623, 1517, 1413, 1608, 632, 1413, 956, 632,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	1613, 2394, 1003, 1346, 1135, 1134, 2558, 1662, 1113, 82,
	1115, 1113, 1772, 1111, 1451, 1496, 82, 1573, 1348, 2147,
	942, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1323, 941, 1347, 900,
	901, 2186, 901, 1587, 2078, 1107, 1593, 2067, 2021, 1895,
	1107, 1599, 1786, 1452, 1107, 1350, 1487, 1572, 1671, 2147,
	1054, 1731, 1730, 1413, 1539, 1540, 1541, 1542, 1606, 2007,
	1671, 1612, 1265, 1603, 1586, 1324, 1306, 1272, 903, 1216,
	1214, 1117, 952, 953, 1450, 1561, 1563, 1322, 1457, 1460,
	1461, 1462, 1458, 620, 1459, 1463, 1619, 79, 1480, 1428,
	406, 2566, 2553, 2020, 2401, 2399, 1498, 2226, 1440, 1739,
	1741, 1525, 2198, 1105, 1105, 1105, 1105, 1105, 1626, 1554,
	2048, 1629, 1650, 1648, 1649, 2012, 2013, 1667, 79, 1468,
	1631, 1764, 1550, 1790, 125, 125, 125, 125, 125, 1105,
	907, 1570, 1545, 1544, 1199, 890, 125, 1602, 1663, 2691,
	125, 2689, 2671, 2605, 125, 79, 2076, 2015, 1993, 1842,
	125, 1745, 1221, 943, 904, 899, 1755, 468, 1753, 2018,
	1744, 1756, 1757, 1754, 1461, 1462, 1657, 1701, 2017, 1752,
	1767, 1751, 488, 489, 632, 1774, 2563, 1775, 1925, 1565,
	1759, 1740, 1647, 1773, 969, 970, 1334, 2593, 1766, 1576,
	2189, 1577, 1578, 1655, 1654, 609, 2490, 2317, 1585, 2283,
	965, 1415, 2214, 2134, 955, 2133, 1802, 2053, 2493, 2052,
	1677, 1679, 1794, 967, 2044, 78, 2548, 1725, 2547, 1799,
	1801, 1689, 1690, 1691, 1692, 2389, 1596, 2583, 2387, 2471,
	2470, 397, 1874, 1746, 958, 632, 1749, 2372, 2373, 1829,
	1130, 1758, 888, 872, 435, 1787, 959, 1198, 869, 896,
	868, 1828, 828, 1830, 1831, 1832, 1833, 2618, 125, 435,
	2406, 432, 1876, 1123, 2405, 1210, 2184, 1777, 2293, 1789,
	1747, 1748, 1610, 1750, 435, 1785, 1326, 1327, 2266, 1566,
	1868, 1220, 2541, 1351, 2391, 2267, 1869, 1922, 1845, 1702,
	969, 970, 2617, 1598, 435, 94, 632, 1844, 1201, 948,
	949, 1653, 435, 2616, 2615, 2350, 854, 82, 485, 1652,
	1923, 1924, 2586, 1727, 2585, 2545, 2494, 632, 632, 2410,
	1837, 2302, 486, 125, 2409, 1839, 1930, 2296, 503, 1945,
	1772, 2693, 2692, 632, 1847, 1848, 1849, 2692, 1346, 2115,
	1892, 1890, 1859, 1889, 1714, 1711, 1630, 1249, 972, 2693,
	632, 2423, 2051, 1795, 1798, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 1320, 620, 471,
	473, 560, 84, 1347, 54, 1872, 1, 1664, 1665, 1666,
	1881, 1620, 1107, 1107, 1107, 1107, 1107, 1873, 1289, 1998,
	78, 2451, 51, 1887, 436, 436, 1879, 1900, 1107, 1899,
	2246, 1893, 2453, 19, 1319, 1894, 481, 2245, 1107, 2452,
	18, 632, 2252, 632, 2023, 2454, 20, 2083, 1931, 2027,
	2028, 2029, 2455, 21, 1932, 1820, 1821, 2450, 15, 2086,
	1997, 1994, 1827, 2449, 14, 1857, 632, 1745, 2006, 2262,
	436, 1940, 1834, 1936, 1208, 1905, 1744, 1916, 1917, 1930,
	2361, 1920, 1718, 1719, 1720, 2022, 632, 811, 632, 1571,
	632, 616, 632, 2026, 1976, 628, 1975, 1986, 894, 2032,
	2443, 10, 1999, 1897, 1908, 1913, 2464, 33, 2463, 32,
	2462, 28, 2546, 1445, 2489, 816, 2461, 27, 2460, 26,
	2458, 23, 2491, 2001, 2457, 22, 2459, 24, 2046, 2386,
	2016, 2047, 1946, 2448, 13, 1949, 1950, 1951, 2445, 12,
	1954, 2043, 2268, 2045, 125, 2030, 2230, 2074, 2075, 432,
	2093, 2024, 2444, 11, 2442, 9, 1559, 2229, 1560, 1851,
	1850, 2037, 435, 889, 2056, 2057, 1270, 125, 435, 2036,
	1898, 2060, 2079, 1901, 1582, 1640, 2501, 1511, 2063, 1501,
	622, 90, 125, 1590, 435, 837, 632, 435, 364, 2100,
	1508, 435, 435, 1867, 435, 1808, 2492, 891, 1807, 1817,
	2095, 1522, 1806, 1317, 1805, 2487, 1809, 1143, 1141, 1142,
	632, 1140, 1145, 1144, 125, 632, 368, 1125, 2528, 973,
	94, 100, 632, 632, 55, 2285, 1912, 95, 103, 370,
	2123, 1011, 1988, 1651, 1526, 1527, 1778, 1532, 1533, 1534,
	1535, 1536, 607, 608, 600, 2560, 2567, 963, 2504, 1724,
	1070, 1435, 506, 2145, 1875, 1546, 1547, 1548, 1926, 1762,
	2148, 1474, 1476, 2506, 1338, 521, 2178, 520, 1198, 519,
	2138, 516, 517, 2601, 2118, 2124, 2117, 1597, 2031, 1329,
	1736, 985, 2070, 2105, 504, 495, 2109, 1103, 1096, 1609,
	2113, 2114, 2101, 2116, 1456, 1454, 1453, 1222, 2143, 596,
	2014, 2010, 1466, 1102, 477, 125, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 68, 2154,
	1003, 1934, 632, 852, 386, 2179, 2418, 37, 472, 632,
	632, 632, 490, 25, 17, 861, 16, 1745, 632, 2206,
	2207, 2208, 1633, 1475, 809, 41, 1744, 43, 1846, 1567,
	632, 2058, 2204, 2527, 2654, 875, 78, 2678, 2570, 31,
	2217, 30, 2163, 1977, 1978, 29, 1979, 1980, 2456, 2185,
	1981, 2465, 2447, 2446, 2641, 2640, 4, 945, 125, 69,
	2193, 1388, 1389, 1990, 1991, 2194, 34, 618, 2, 2209,
	0, 0, 1399, 1400, 1401, 1402, 0, 2205, 0, 2242,
	2243, 2244, 2219, 0, 0, 1412, 1414, 0, 2103, 1787,
	0, 0, 1419, 0, 0, 0, 0, 435, 2025, 0,
	0, 2218, 0, 0, 2140, 0, 0, 1105, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 2227, 2294,
	2279, 2280, 0, 2281, 2241, 0, 632, 1930, 125, 2073,
	0, 0, 981, 0, 632, 0, 0, 0, 2270, 0,
	0, 0, 2271, 2050, 0, 2298, 2299, 1998, 0, 2289,
	1998, 2322, 2099, 2275, 2269, 2282, 2043, 0, 0, 0,
	0, 2297, 1107, 2023, 2274, 0, 0, 2104, 0, 0,
	0, 1559, 0, 2290, 632, 2181, 0, 0, 0, 0,
	632, 0, 0, 0, 1056, 125, 0, 125, 1997, 0,
	2325, 1997, 0, 632, 2195, 2196, 2273, 2319, 2197, 2136,
	0, 2199, 0, 0, 2328, 0, 0, 2102, 632, 1056,
	2349, 0, 2351, 0, 2318, 0, 0, 2348, 0, 0,
	0, 0, 0, 0, 0, 0, 2329, 0, 2342, 1473,
	0, 2330, 2324, 2321, 2340, 2341, 2339, 2334, 0, 0,
	0, 0, 0, 0, 2344, 0, 2345, 0, 0, 0,
	2352, 0, 0, 0, 2407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1197, 2150, 2364, 0, 2374,
	632, 0, 0, 2220, 2379, 2222, 0, 0, 0, 0,
	2392, 1998, 2382, 78, 616, 0, 0, 1604, 0, 616,
	1126, 0, 0, 2397, 2398, 2400, 1822, 1823, 1824, 1826,
	0, 2404, 0, 2411, 0, 0, 0, 2413, 0, 632,
	2412, 0, 78, 0, 0, 2175, 2176, 2177, 0, 2436,
	0, 0, 1997, 0, 0, 0, 0, 0, 2424, 0,
	2429, 0, 0, 0, 0, 0, 0, 2428, 2431, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 1105, 0, 0, 0, 0,
	0, 0, 0, 2228, 905, 2425, 0, 0, 0, 0,
	2303, 0, 0, 435, 0, 0, 125, 0, 0, 0,
	0, 632, 0, 632, 0, 0, 1107, 0, 0, 0,
	2497, 0, 2499, 0, 2495, 0, 0, 0, 0, 0,
	2498, 0, 0, 0, 0, 2509, 1669, 0, 0, 2496,
	2510, 1672, 0, 0, 0, 125, 1674, 1675, 0, 2523,
	0, 1680, 1681, 1682, 1683, 1684, 1685, 2516, 0, 1688,
	78, 0, 0, 1745, 1693, 1694, 1695, 1696, 0, 1698,
	1699, 1700, 1744, 2532, 436, 436, 1703, 1704, 1705, 1706,
	632, 0, 0, 0, 0, 1712, 0, 0, 1715, 1716,
	0, 436, 436, 1721, 1722, 0, 0, 2511, 0, 1728,
	0, 1729, 0, 0, 1732, 1733, 0, 1734, 1735, 1200,
	0, 0, 2542, 2559, 493, 632, 2544, 0, 1056, 0,
	0, 0, 0, 436, 0, 0, 1760, 1761, 0, 0,
	0, 0, 2551, 2305, 2306, 2307, 2308, 0, 0, 0,
	0, 2312, 0, 0, 0, 2315, 2316, 2429, 0, 0,
	0, 0, 0, 2589, 0, 2591, 0, 2577, 0, 0,
	0, 0, 0, 0, 78, 632, 2614, 0, 0, 0,
	78, 436, 436, 436, 2590, 2588, 2594, 2621, 632, 2592,
	2607, 0, 2604, 2619, 0, 0, 432, 2627, 2606, 2612,
	632, 0, 2628, 0, 0, 0, 0, 0, 0, 435,
	2631, 0, 78, 463, 2648, 0, 436, 78, 0, 0,
	0, 436, 436, 2645, 0, 2644, 0, 2643, 0, 1290,
	2637, 481, 2642, 2059, 2121, 2505, 2508, 0, 0, 2651,
	2664, 0, 0, 0, 0, 0, 0, 78, 0, 2673,
	78, 78, 2675, 0, 0, 78, 0, 981, 2621, 632,
	0, 0, 2681, 2672, 0, 0, 2685, 0, 0, 0,
	0, 0, 432, 2684, 1107, 78, 628, 2690, 78, 2686,
	2698, 2688, 2621, 0, 2701, 435, 2703, 0, 0, 0,
	0, 0, 2524, 2525, 0, 78, 0, 78, 2711, 2653,
	0, 78, 2621, 2716, 2621, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 78, 0,
	2725, 0, 2621, 0, 0, 78, 0, 0, 0, 78,
	0, 0, 2621, 0, 0, 0, 2621, 0, 0, 0,
	0, 1935, 0, 457, 0, 0, 1378, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1952, 1953, 0,
	2519, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 1963, 2160, 2161, 0, 2162, 0, 2500, 2164,
	0, 2166, 1941, 1942, 2508, 481, 0, 0, 0, 1947,
	1948, 0, 0, 0, 616, 0, 0, 0, 2613, 0,
	0, 1955, 1956, 1957, 1958, 0, 1960, 1961, 1962, 0,
	2000, 1717, 1441, 1442, 0, 0, 1197, 908, 915, 916,
	918, 919, 920, 921, 922, 0, 924, 925, 926, 0,
	929, 0, 932, 933, 934, 935, 936, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 2212, 2213,
	0, 0, 0, 628, 0, 0, 628, 628, 0, 0,
	1380, 1385, 1386, 0, 0, 0, 0, 1391, 1392, 1393,
	956, 1395, 0, 0, 1398, 0, 0, 0, 0, 1403,
	1404, 1405, 1406, 0, 1408, 1409, 1410, 0, 0, 0,
	0, 0, 1416, 1417, 1418, 436, 436, 436, 1424, 1427,
	0, 1432, 1433, 0, 0, 0, 2702, 0, 0, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 2173, 0, 1003, 0, 0, 1443, 0, 1446, 1447,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 0, 0, 1003, 0, 0, 0, 0, 0,
	0, 0, 0, 481, 0, 0, 0, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 0, 0, 1601, 0,
	0, 2662, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 2149, 0, 1618, 0, 0, 0, 0, 0,
	0, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 0, 0, 1003, 1618, 0, 0, 1618,
	0, 0, 379, 0, 0, 2159, 0, 0, 0, 0,
	0, 0, 0, 2151, 0, 0, 2168, 2169, 0, 0,
	628, 2153, 2174, 0, 0, 0, 0, 0, 2704, 0,
	2156, 2157, 0, 0, 0, 0, 0, 2158, 0, 2187,
	2188, 0, 2190, 0, 0, 2191, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 987, 0, 990,
	0, 0, 0, 0, 0, 2203, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 0, 988, 989, 986, 992, 991, 1001,
	1002, 994, 995, 996, 997, 998, 999, 1000, 993, 0,
	0, 1003, 0, 357, 0, 0, 0, 0, 123, 0,
	360, 383, 0, 0, 0, 0, 0, 123, 0, 0,
	369, 377, 378, 481, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	599, 617, 0, 616, 123, 0, 366, 0, 123, 367,
	0, 0, 375, 376, 0, 0, 0, 0, 0, 0,
	0, 1793, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 1676, 0, 0, 628, 2301, 0, 0, 0, 0,
	1686, 1687, 0, 372, 0, 0, 0, 0, 0, 0,
	0, 1697, 0, 0, 0, 0, 2309, 2310, 2311, 956,
	2313, 436, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2172, 436, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 2332, 2333,
	0, 436, 0, 0, 0, 1843, 0, 0, 992, 991,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	0, 436, 1003, 0, 0, 0, 0, 0, 358, 436,
	0, 1288, 0, 0, 1291, 1292, 1293, 0, 1295, 1296,
	0, 0, 1297, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 1299, 1300, 0, 1301, 1302, 0, 0, 0,
	0, 371, 361, 362, 0, 382, 1888, 0, 0, 363,
	365, 0, 359, 381, 380, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 628, 628, 1003,
	0, 0, 0, 0, 0, 2183, 2414, 2415, 2416, 2417,
	0, 0, 0, 628, 0, 0, 2421, 2422, 0, 0,
	35, 0, 70, 38, 39, 628, 0, 0, 374, 2182,
	1944, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 40, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 0, 0, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 0, 79, 1003, 0, 0, 0, 0, 0, 616,
	0, 628, 0, 2005, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 2466, 0, 0, 2677,
	2680, 2676, 123, 0, 0, 0, 2005, 0, 463, 2512,
	0, 0, 0, 0, 0, 0, 2517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 0, 628, 2126,
	628, 0, 2040, 0, 0, 42, 72, 45, 44, 47,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 2467, 0, 1003, 0, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 436, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 2171, 0, 0, 0, 0,
	0, 436, 0, 0, 436, 0, 0, 0, 436, 436,
	0, 436, 2555, 0, 0, 2122, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 2129, 2131, 0, 0, 0,
	1138, 0, 0, 0, 0, 2122, 0, 0, 0, 0,
	56, 57, 0, 2468, 0, 0, 2108, 0, 0, 0,
	2170, 0, 0, 0, 0, 0, 0, 65, 457, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2132, 2595, 1984, 0, 0, 2137, 0, 0, 0, 0,
	0, 0, 2141, 2142, 0, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 0, 0, 1003,
	0, 2469, 73, 0, 52, 53, 60, 0, 61, 0,
	0, 0, 0, 0, 123, 123, 123, 0, 0, 0,
	0, 0, 481, 1983, 617, 0, 1165, 0, 0, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 0, 0, 1003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2578, 0, 0, 0, 616,
	992, 991, 1001, 1002, 994, 995, 996, 997, 998, 999,
	1000, 993, 2201, 0, 1003, 0, 0, 0, 0, 2201,
	2201, 2201, 0, 0, 0, 0, 0, 0, 628, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2201, 0, 0, 0, 0, 2718, 2719, 0, 1933, 0,
	1152, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 0, 436, 1003, 0, 0, 2122, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 77, 0, 1003, 0, 0, 0, 0, 2122, 0,
	0, 0, 1166, 1982, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 438, 439, 440, 441, 445, 446, 450,
	451, 460, 459, 458, 461, 462, 465, 464, 466, 442,
	443, 444, 447, 448, 449, 452, 453, 456, 454, 455,
	0, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 481, 0, 481, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 123, 0, 0, 123,
	0, 0, 0, 0, 0, 2041, 0, 1232, 0, 0,
	0, 0, 0, 0, 2323, 0, 123, 123, 123, 123,
	2201, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 2040, 0, 1003, 0, 0, 0, 0,
	0, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 2040, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 0, 1167, 1168,
	1169, 1170, 1146, 1150, 1180, 1147, 1153, 1149, 1151, 1148,
	1668, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	0, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 0, 0, 1003, 0, 0, 0, 0,
	2403, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 0, 0, 1003, 0, 0, 0, 0,
	0, 0, 123, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2427,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	2041, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 1384, 1384,
	1384, 0, 0, 0, 1384, 1384, 1384, 1384, 1384, 1384,
	0, 2040, 1384, 2040, 0, 0, 0, 1384, 1384, 1384,
	1384, 0, 1384, 1384, 1384, 0, 0, 0, 0, 0,
	1384, 1384, 1384, 0, 0, 616, 1384, 1384, 0, 1384,
	1384, 0, 0, 0, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 1384, 1384, 1384, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 123, 480, 0,
	628, 0, 123, 123, 0, 0, 123, 1483, 1232, 617,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2557, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 2201, 0,
	0, 0, 0, 0, 123, 0, 123, 123, 0, 0,
	628, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1594,
	1595, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 480, 0, 0, 2667,
	0, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 0, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 0, 1167, 1168,
	1169, 1170, 1146, 1150, 1180, 1147, 1153, 1149, 1151, 1148,
	0, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1232, 0, 0, 0, 35, 0, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 0, 0, 76, 0, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 0, 0, 79, 0, 1384, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 1384, 35, 0, 70, 38, 39, 0,
	2466, 1181, 0, 0, 0, 2727, 0, 0, 58, 0,
	0, 0, 0, 0, 76, 0, 1384, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 123, 123, 123, 123, 123, 42,
	72, 45, 44, 47, 0, 0, 480, 0, 0, 0,
	123, 0, 0, 0, 480, 2467, 79, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	2466, 0, 0, 0, 35, 2723, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 0, 0, 76, 0, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	72, 45, 44, 47, 56, 57, 0, 2468, 0, 0,
	0, 0, 0, 0, 0, 2467, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 0, 79, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	2466, 0, 0, 0, 0, 2712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2469, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 57, 0, 2468, 0, 42,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 2467, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 1384, 0, 0, 35, 46, 70,
	38, 39, 0, 1384, 0, 1232, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 2469, 73, 76, 52, 53,
	60, 40, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 57, 0, 2468, 0, 2119,
	0, 0, 0, 2121, 0, 0, 0, 0, 0, 79,
	0, 65, 0, 66, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 35, 0, 70, 38, 39, 0, 0,
	0, 0, 0, 2466, 0, 77, 0, 58, 2695, 0,
	0, 0, 0, 76, 0, 0, 0, 40, 0, 463,
	0, 0, 0, 0, 0, 2469, 73, 0, 52, 53,
	60, 0, 61, 71, 0, 0, 0, 0, 0, 0,
	2130, 0, 42, 72, 45, 44, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 2682, 0, 2467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 48, 75, 74, 0, 0, 2466,
	0, 46, 457, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 1791, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 123, 42, 72,
	45, 44, 47, 71, 0, 0, 0, 56, 57, 0,
	2468, 0, 123, 0, 2467, 1196, 0, 0, 0, 0,
	0, 0, 463, 0, 65, 0, 66, 0, 0, 457,
	48, 75, 74, 0, 0, 0, 0, 46, 0, 0,
	0, 0, 0, 2128, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 0, 77, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 2469, 73,
	0, 52, 53, 60, 0, 61, 0, 0, 0, 0,
	0, 457, 0, 56, 57, 0, 2468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	65, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 617,
	0, 0, 0, 0, 2469, 73, 0, 52, 53, 60,
	0, 61, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 480, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	754, 319, 702, 780, 666, 688, 793, 691, 694, 735,
	649, 715, 248, 686, 650, 0, 670, 639, 679, 640,
	667, 704, 173, 665, 756, 718, 779, 206, 731, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 778, 710,
	0, 787, 209, 0, 727, 788, 307, 232, 0, 0,
	706, 764, 713, 752, 701, 737, 658, 726, 782, 687,
	733, 783, 0, 0, 0, 0, 2526, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 123, 730, 776, 682,
	732, 734, 637, 729, 0, 644, 651, 792, 771, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 705,
	714, 746, 698, 0, 0, 617, 0, 0, 0, 0,
	0, 671, 0, 724, 0, 123, 0, 652, 645, 0,
	0, 703, 0, 0, 0, 657, 636, 672, 748, 0,
	634, 185, 233, 142, 753, 770, 700, 197, 348, 774,
	697, 696, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 745, 289, 684, 635, 757, 668, 680,
	164, 676, 281, 252, 337, 0, 721, 259, 280, 210,
	327, 741, 775, 336, 689, 796, 345, 350, 0, 711,
	655, 304, 174, 0, 131, 0, 266, 169, 202, 699,
	736, 669, 161, 743, 725, 763, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 2529, 2530, 2531, 0,
	0, 0, 0, 342, 695, 292, 291, 690, 193, 751,
	728, 641, 274, 739, 198, 130, 316, 353, 147, 204,
	321, 633, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 681, 740, 338, 750, 272, 294,
	323, 149, 311, 677, 678, 683, 747, 283, 758, 768,
	781, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 642, 0, 309, 340, 355, 151, 664, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 662,
	663, 660, 0, 661, 716, 717, 784, 785, 786, 749,
	654, 0, 765, 766, 0, 0, 0, 0, 0, 755,
	772, 773, 738, 794, 692, 693, 659, 295, 275, 643,
	646, 647, 648, 656, 707, 708, 720, 723, 761, 760,
	759, 762, 767, 790, 789, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 129, 138,
	208, 795, 273, 180, 341, 638, 171, 0, 709, 712,
	722, 744, 127, 139, 150, 156, 170, 175, 179, 685,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 742, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 769, 777, 754, 319, 702, 780, 666, 688,
	793, 691, 694, 735, 649, 715, 248, 686, 650, 0,
	670, 639, 679, 640, 667, 704, 173, 665, 756, 718,
	779, 206, 731, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 778, 710, 0, 787, 209, 0, 727, 788,
	307, 232, 0, 0, 706, 764, 713, 752, 701, 737,
	658, 726, 782, 687, 733, 783, 0, 0, 0, 0,
	631, 0, 1505, 1506, 0, 0, 0, 0, 0, 653,
	0, 730, 776, 682, 732, 734, 637, 729, 0, 644,
	651, 792, 771, 673, 674, 675, 1788, 0, 0, 0,
	0, 0, 0, 705, 714, 746, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 671, 0, 724, 0, 0,
	0, 652, 645, 0, 0, 703, 0, 0, 0, 657,
	636, 672, 748, 0, 634, 185, 233, 142, 753, 770,
	700, 197, 348, 774, 697, 696, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 745, 289, 684,
	635, 757, 668, 680, 164, 676, 281, 252, 337, 0,
	721, 259, 280, 210, 327, 741, 775, 336, 689, 796,
	345, 350, 0, 711, 655, 304, 174, 0, 131, 0,
	266, 169, 202, 699, 736, 669, 161, 743, 725, 763,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 695, 292,
	291, 690, 193, 751, 728, 641, 274, 739, 198, 130,
	316, 353, 147, 204, 321, 633, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 681, 740,
	338, 750, 272, 294, 323, 149, 311, 677, 678, 683,
	747, 283, 758, 768, 781, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 642, 0, 309, 340, 355,
	151, 664, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 662, 663, 660, 0, 661, 716, 717,
	784, 785, 786, 749, 654, 0, 765, 766, 0, 0,
	0, 0, 0, 755, 772, 773, 738, 794, 692, 693,
	659, 295, 275, 643, 646, 647, 648, 656, 707, 708,
	720, 723, 761, 760, 759, 762, 767, 790, 789, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 129, 138, 208, 795, 273, 180, 341, 638,
	171, 0, 709, 712, 722, 744, 127, 139, 150, 156,
	170, 175, 179, 685, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 742,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 769, 777, 754, 319,
	702, 780, 666, 688, 793, 691, 694, 735, 649, 715,
	248, 686, 650, 0, 670, 639, 679, 640, 667, 704,
	173, 665, 756, 718, 779, 206, 731, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 778, 710, 0, 787,
	209, 0, 727, 788, 307, 232, 0, 0, 706, 764,
	713, 752, 701, 737, 658, 726, 782, 687, 733, 783,
	0, 0, 0, 0, 631, 0, 1505, 1506, 0, 0,
	0, 0, 0, 653, 0, 730, 776, 682, 732, 734,
	637, 729, 0, 644, 651, 792, 771, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 705, 714, 746,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 671,
	0, 724, 0, 0, 0, 652, 645, 0, 0, 703,
	0, 0, 0, 657, 636, 672, 748, 0, 634, 185,
	233, 142, 753, 770, 700, 197, 348, 774, 697, 696,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 745, 289, 684, 635, 757, 668, 680, 164, 676,
	281, 252, 337, 0, 721, 259, 280, 210, 327, 741,
	775, 336, 689, 796, 345, 350, 0, 711, 655, 304,
	174, 0, 131, 0, 266, 169, 202, 699, 736, 669,
	161, 743, 725, 763, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 695, 292, 291, 690, 193, 751, 728, 641,
	274, 739, 198, 130, 316, 353, 147, 204, 321, 633,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 681, 740, 338, 750, 272, 294, 323, 149,
	311, 677, 678, 683, 747, 283, 758, 768, 781, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 642,
	0, 309, 340, 355, 151, 664, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 662, 663, 660,
	0, 661, 716, 717, 784, 785, 786, 749, 654, 0,
	765, 766, 0, 0, 0, 0, 0, 755, 772, 773,
	738, 794, 692, 693, 659, 295, 275, 643, 646, 647,
	648, 656, 707, 708, 720, 723, 761, 760, 759, 762,
	767, 790, 789, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 129, 138, 208, 795,
	273, 180, 341, 638, 171, 0, 709, 712, 722, 744,
	127, 139, 150, 156, 170, 175, 179, 685, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 742, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	769, 777, 2002, 319, 702, 780, 666, 688, 793, 691,
	694, 735, 649, 715, 248, 686, 650, 0, 670, 639,
	679, 640, 667, 704, 173, 665, 756, 718, 779, 206,
	731, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	778, 710, 0, 787, 209, 0, 727, 788, 307, 232,
	0, 0, 706, 764, 713, 752, 701, 737, 658, 726,
	782, 687, 733, 783, 79, 0, 956, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 730,
	776, 682, 732, 734, 637, 729, 0, 644, 651, 792,
	771, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 705, 714, 746, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 0, 724, 0, 0, 0, 652,
	645, 0, 0, 703, 0, 0, 0, 657, 636, 672,
	748, 0, 634, 185, 233, 142, 753, 770, 700, 197,
	348, 774, 697, 696, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 745, 289, 684, 635, 757,
	668, 680, 164, 676, 281, 252, 337, 0, 721, 259,
	280, 210, 327, 741, 775, 336, 689, 796, 345, 350,
	0, 711, 655, 304, 174, 0, 131, 0, 266, 169,
	202, 699, 736, 669, 161, 743, 725, 763, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 695, 292, 291, 690,
	193, 751, 728, 641, 274, 739, 198, 130, 316, 353,
	147, 204, 321, 633, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 681, 740, 338, 750,
	272, 294, 323, 149, 311, 677, 678, 683, 747, 283,
	758, 768, 781, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 642, 0, 309, 340, 355, 151, 664,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 662, 663, 660, 0, 661, 716, 717, 784, 785,
	786, 749, 654, 0, 765, 766, 0, 0, 0, 0,
	0, 755, 772, 773, 738, 794, 692, 693, 659, 295,
	275, 643, 646, 647, 648, 656, 707, 708, 720, 723,
	761, 760, 759, 762, 767, 790, 789, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	129, 138, 208, 2003, 273, 180, 341, 638, 171, 0,
	709, 712, 722, 744, 127, 139, 150, 156, 170, 175,
	179, 685, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 742, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 769, 777, 754, 319, 702, 780,
	666, 688, 793, 691, 694, 735, 649, 715, 248, 686,
	650, 0, 670, 639, 679, 640, 667, 704, 173, 665,
	756, 718, 779, 206, 731, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 778, 710, 0, 787, 209, 0,
	727, 788, 307, 232, 0, 0, 706, 764, 713, 752,
	701, 737, 658, 726, 782, 687, 733, 783, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 730, 776, 682, 732, 734, 637, 729,
	0, 644, 651, 792, 771, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 705, 714, 746, 698, 0,
	0, 0, 0, 0, 0, 2300, 0, 671, 0, 724,
	0, 0, 0, 652, 645, 0, 0, 703, 0, 0,
	0, 657, 636, 672, 748, 0, 634, 185, 233, 142,
	753, 770, 700, 197, 348, 774, 697, 696, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 745,
	289, 684, 635, 757, 668, 680, 164, 676, 281, 252,
	337, 0, 721, 259, 280, 210, 327, 741, 775, 336,
	689, 796, 345, 350, 0, 711, 655, 304, 174, 0,
	131, 0, 266, 169, 202, 699, 736, 669, 161, 743,
	725, 763, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	695, 292, 291, 690, 193, 751, 728, 641, 274, 739,
	198, 130, 316, 353, 147, 204, 321, 633, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	681, 740, 338, 750, 272, 294, 323, 149, 311, 677,
	678, 683, 747, 283, 758, 768, 781, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 642, 0, 309,
	340, 355, 151, 664, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 662, 663, 660, 0, 661,
	716, 717, 784, 785, 786, 749, 654, 0, 765, 766,
	0, 0, 0, 0, 0, 755, 772, 773, 738, 794,
	692, 693, 659, 295, 275, 643, 646, 647, 648, 656,
	707, 708, 720, 723, 761, 760, 759, 762, 767, 790,
	789, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 129, 138, 208, 795, 273, 180,
	341, 638, 171, 0, 709, 712, 722, 744, 127, 139,
	150, 156, 170, 175, 179, 685, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 742, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 769, 777,
	754, 319, 702, 780, 666, 688, 793, 691, 694, 735,
	649, 715, 248, 686, 650, 0, 670, 639, 679, 640,
	667, 704, 173, 665, 756, 718, 779, 206, 731, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 778, 710,
	0, 787, 209, 0, 727, 788, 307, 232, 0, 0,
	706, 764, 713, 752, 701, 737, 658, 726, 782, 687,
	733, 783, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 730, 776, 682,
	732, 734, 637, 729, 0, 644, 651, 792, 771, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 705,
	714, 746, 698, 0, 0, 0, 0, 0, 0, 1939,
	0, 671, 0, 724, 0, 0, 0, 652, 645, 0,
	0, 703, 0, 0, 0, 657, 636, 672, 748, 0,
	634, 185, 233, 142, 753, 770, 700, 197, 348, 774,
	697, 696, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 745, 289, 684, 635, 757, 668, 680,
	164, 676, 281, 252, 337, 0, 721, 259, 280, 210,
	327, 741, 775, 336, 689, 796, 345, 350, 0, 711,
	655, 304, 174, 0, 131, 0, 266, 169, 202, 699,
	736, 669, 161, 743, 725, 763, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 695, 292, 291, 690, 193, 751,
	728, 641, 274, 739, 198, 130, 316, 353, 147, 204,
	321, 633, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 681, 740, 338, 750, 272, 294,
	323, 149, 311, 677, 678, 683, 747, 283, 758, 768,
	781, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 642, 0, 309, 340, 355, 151, 664, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 662,
	663, 660, 0, 661, 716, 717, 784, 785, 786, 749,
	654, 0, 765, 766, 0, 0, 0, 0, 0, 755,
	772, 773, 738, 794, 692, 693, 659, 295, 275, 643,
	646, 647, 648, 656, 707, 708, 720, 723, 761, 760,
	759, 762, 767, 790, 789, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 129, 138,
	208, 795, 273, 180, 341, 638, 171, 0, 709, 712,
	722, 744, 127, 139, 150, 156, 170, 175, 179, 685,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 742, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 769, 777, 754, 319, 702, 780, 666, 688,
	793, 691, 694, 735, 649, 715, 248, 686, 650, 0,
	670, 639, 679, 640, 667, 704, 173, 665, 756, 718,
	779, 206, 731, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 778, 710, 0, 787, 209, 0, 727, 788,
	307, 232, 0, 0, 706, 764, 713, 752, 701, 737,
	658, 726, 782, 687, 733, 783, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 730, 776, 682, 732, 734, 637, 729, 0, 644,
	651, 792, 771, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 705, 714, 746, 698, 0, 0, 0,
	0, 0, 0, 1929, 0, 671, 0, 724, 0, 0,
	0, 652, 645, 0, 0, 703, 0, 0, 0, 657,
	636, 672, 748, 0, 634, 185, 233, 142, 753, 770,
	700, 197, 348, 774, 697, 696, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 745, 289, 684,
	635, 757, 668, 680, 164, 676, 281, 252, 337, 0,
	721, 259, 280, 210, 327, 741, 775, 336, 689, 796,
	345, 350, 0, 711, 655, 304, 174, 0, 131, 0,
	266, 169, 202, 699, 736, 669, 161, 743, 725, 763,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 695, 292,
	291, 690, 193, 751, 728, 641, 274, 739, 198, 130,
	316, 353, 147, 204, 321, 633, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 681, 740,
	338, 750, 272, 294, 323, 149, 311, 677, 678, 683,
	747, 283, 758, 768, 781, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 642, 0, 309, 340, 355,
	151, 664, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 662, 663, 660, 0, 661, 716, 717,
	784, 785, 786, 749, 654, 0, 765, 766, 0, 0,
	0, 0, 0, 755, 772, 773, 738, 794, 692, 693,
	659, 295, 275, 643, 646, 647, 648, 656, 707, 708,
	720, 723, 761, 760, 759, 762, 767, 790, 789, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 129, 138, 208, 795, 273, 180, 341, 638,
	171, 0, 709, 712, 722, 744, 127, 139, 150, 156,
	170, 175, 179, 685, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 742,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 769, 777, 754, 319,
	702, 780, 666, 688, 793, 691, 694, 735, 649, 715,
	248, 686, 650, 0, 670, 639, 679, 640, 667, 704,
	173, 665, 756, 718, 779, 206, 731, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 778, 710, 0, 787,
	209, 0, 727, 788, 307, 232, 0, 0, 706, 764,
	713, 752, 701, 737, 658, 726, 782, 687, 733, 783,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 730, 776, 682, 732, 734,
	637, 729, 0, 644, 651, 792, 771, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 705, 714, 746,
	698, 0, 0, 0, 0, 0, 0, 1484, 0, 671,
	0, 724, 0, 0, 0, 652, 645, 0, 0, 703,
	0, 0, 0, 657, 636, 672, 748, 0, 634, 185,
	233, 142, 753, 770, 700, 197, 348, 774, 697, 696,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 745, 289, 684, 635, 757, 668, 680, 164, 676,
	281, 252, 337, 0, 721, 259, 280, 210, 327, 741,
	775, 336, 689, 796, 345, 350, 0, 711, 655, 304,
	174, 0, 131, 0, 266, 169, 202, 699, 736, 669,
	161, 743, 725, 763, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 695, 292, 291, 690, 193, 751, 728, 641,
	274, 739, 198, 130, 316, 353, 147, 204, 321, 633,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 681, 740, 338, 750, 272, 294, 323, 149,
	311, 677, 678, 683, 747, 283, 758, 768, 781, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 642,
	0, 309, 340, 355, 151, 664, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 662, 663, 660,
	0, 661, 716, 717, 784, 785, 786, 749, 654, 0,
	765, 766, 0, 0, 0, 0, 0, 755, 772, 773,
	738, 794, 692, 693, 659, 295, 275, 643, 646, 647,
	648, 656, 707, 708, 720, 723, 761, 760, 759, 762,
	767, 790, 789, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 129, 138, 208, 795,
	273, 180, 341, 638, 171, 0, 709, 712, 722, 744,
	127, 139, 150, 156, 170, 175, 179, 685, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 742, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	769, 777, 754, 319, 702, 780, 666, 688, 793, 691,
	694, 735, 649, 715, 248, 686, 650, 0, 670, 639,
	679, 640, 667, 704, 173, 665, 756, 718, 779, 206,
	731, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	778, 710, 0, 787, 209, 0, 727, 788, 307, 232,
	0, 0, 706, 764, 713, 752, 701, 737, 658, 726,
	782, 687, 733, 783, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 730,
	776, 682, 732, 734, 637, 729, 0, 644, 651, 792,
	771, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 705, 714, 746, 698, 0, 0, 0, 0, 0,
	0, 1344, 0, 671, 0, 724, 0, 0, 0, 652,
	645, 0, 0, 703, 0, 0, 0, 657, 636, 672,
	748, 0, 634, 185, 233, 142, 753, 770, 700, 197,
	348, 774, 697, 696, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 745, 289, 684, 635, 757,
	668, 680, 164, 676, 281, 252, 337, 0, 721, 259,
	280, 210, 327, 741, 775, 336, 689, 796, 345, 350,
	0, 711, 655, 304, 174, 0, 131, 0, 266, 169,
	202, 699, 736, 669, 161, 743, 725, 763, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 695, 292, 291, 690,
	193, 751, 728, 641, 274, 739, 198, 130, 316, 353,
	147, 204, 321, 633, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 681, 740, 338, 750,
	272, 294, 323, 149, 311, 677, 678, 683, 747, 283,
	758, 768, 781, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 642, 0, 309, 340, 355, 151, 664,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 662, 663, 660, 0, 661, 716, 717, 784, 785,
	786, 749, 654, 0, 765, 766, 0, 0, 0, 0,
	0, 755, 772, 773, 738, 794, 692, 693, 659, 295,
	275, 643, 646, 647, 648, 656, 707, 708, 720, 723,
	761, 760, 759, 762, 767, 790, 789, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	129, 138, 208, 795, 273, 180, 341, 638, 171, 0,
	709, 712, 722, 744, 127, 139, 150, 156, 170, 175,
	179, 685, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 742, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 769, 777, 754, 319, 702, 780,
	666, 688, 793, 691, 694, 735, 649, 715, 248, 686,
	650, 0, 670, 639, 679, 640, 667, 704, 173, 665,
	756, 718, 779, 206, 731, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 778, 710, 0, 787, 209, 0,
	727, 788, 307, 232, 0, 0, 706, 764, 713, 752,
	701, 737, 658, 726, 782, 687, 733, 783, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 730, 776, 682, 732, 734, 637, 729,
	0, 644, 651, 792, 771, 673, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 705, 714, 746, 698, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 0, 724,
	0, 0, 0, 652, 645, 0, 0, 703, 0, 0,
	0, 657, 636, 672, 748, 0, 634, 185, 233, 142,
	753, 770, 700, 197, 348, 774, 697, 696, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 745,
	289, 684, 635, 757, 668, 680, 164, 676, 281, 252,
	337, 0, 721, 259, 280, 210, 327, 741, 775, 336,
	689, 796, 345, 350, 0, 711, 655, 304, 174, 0,
	131, 0, 266, 169, 202, 699, 736, 669, 161, 743,
	725, 763, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	695, 292, 291, 690, 193, 751, 728, 641, 274, 739,
	198, 130, 316, 353, 147, 204, 321, 633, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	681, 740, 338, 750, 272, 294, 323, 149, 311, 677,
	678, 683, 747, 283, 758, 768, 781, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 642, 0, 309,
	340, 355, 151, 664, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 662, 663, 660, 0, 661,
	716, 717, 784, 785, 786, 749, 654, 0, 765, 766,
	0, 0, 0, 0, 0, 755, 772, 773, 738, 794,
	692, 693, 659, 295, 275, 643, 646, 647, 648, 656,
	707, 708, 720, 723, 761, 760, 759, 762, 767, 790,
	789, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 129, 138, 208, 795, 273, 180,
	341, 638, 171, 0, 709, 712, 722, 744, 127, 139,
	150, 156, 170, 175, 179, 685, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 742, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 769, 777,
	754, 319, 702, 780, 666, 688, 793, 691, 694, 735,
	649, 715, 248, 686, 650, 0, 670, 639, 679, 640,
	667, 704, 173, 665, 756, 718, 779, 206, 731, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 778, 710,
	0, 787, 209, 0, 727, 788, 307, 232, 0, 0,
	706, 764, 713, 752, 701, 737, 658, 726, 782, 687,
	733, 783, 0, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 653, 0, 730, 776, 682,
	732, 734, 637, 729, 0, 644, 651, 792, 771, 673,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 705,
	714, 746, 698, 0, 0, 0, 0, 0, 0, 0,
	0, 671, 0, 724, 0, 0, 0, 652, 645, 0,
	0, 703, 0, 0, 0, 657, 636, 672, 748, 0,
	634, 185, 233, 142, 753, 770, 700, 197, 348, 774,
	697, 696, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 745, 289, 684, 635, 757, 668, 680,
	164, 676, 281, 252, 337, 0, 721, 259, 280, 210,
	327, 741, 775, 336, 689, 796, 345, 350, 0, 711,
	655, 304, 174, 0, 131, 0, 266, 169, 202, 699,
	736, 669, 161, 743, 725, 763, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 695, 292, 291, 690, 193, 751,
	728, 641, 274, 739, 198, 130, 316, 353, 147, 204,
	321, 633, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 681, 740, 338, 750, 272, 294,
	323, 149, 311, 677, 678, 683, 747, 283, 758, 768,
	781, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 642, 0, 309, 340, 355, 151, 664, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 662,
	663, 660, 0, 661, 716, 717, 784, 785, 786, 749,
	654, 0, 765, 766, 0, 0, 0, 0, 0, 755,
	772, 773, 738, 794, 692, 693, 659, 295, 275, 643,
	646, 647, 648, 656, 707, 708, 720, 723, 761, 760,
	759, 762, 767, 790, 789, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 129, 138,
	208, 795, 273, 180, 341, 638, 171, 0, 709, 712,
	722, 744, 127, 139, 150, 156, 170, 175, 179, 685,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 742, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 769, 777, 754, 319, 702, 780, 666, 688,
	793, 691, 694, 735, 649, 715, 248, 686, 650, 0,
	670, 639, 679, 640, 667, 704, 173, 665, 756, 718,
	779, 206, 731, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 1516, 1520, 0, 787, 209, 0, 727, 788,
	307, 232, 0, 0, 706, 764, 713, 752, 701, 737,
	658, 726, 782, 687, 733, 783, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 653,
	0, 730, 776, 682, 732, 734, 637, 729, 0, 644,
	651, 792, 771, 673, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 705, 714, 746, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 671, 0, 724, 0, 0,
	0, 652, 645, 0, 0, 703, 0, 0, 0, 657,
	636, 672, 748, 0, 634, 185, 233, 142, 753, 770,
	1519, 197, 348, 774, 697, 696, 1514, 0, 1515, 187,
	207, 630, 126, 140, 1512, 1518, 244, 745, 289, 684,
	635, 757, 668, 680, 164, 676, 281, 252, 337, 0,
	721, 259, 280, 210, 327, 741, 775, 336, 689, 796,
	345, 350, 0, 711, 655, 304, 174, 0, 131, 0,
	266, 169, 202, 699, 736, 669, 161, 743, 725, 763,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 695, 292,
	291, 690, 193, 751, 728, 641, 274, 739, 198, 130,
	316, 353, 147, 204, 321, 633, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 681, 740,
	338, 750, 272, 294, 323, 149, 311, 677, 678, 683,
	747, 283, 758, 768, 781, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 642, 0, 309, 340, 355,
	151, 664, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 662, 663, 660, 0, 661, 716, 717,
	784, 785, 786, 749, 654, 0, 765, 766, 0, 0,
	0, 0, 0, 755, 772, 773, 738, 794, 692, 693,
	659, 295, 275, 643, 646, 647, 648, 656, 707, 708,
	720, 723, 761, 760, 759, 762, 767, 790, 789, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 129, 138, 208, 795, 273, 180, 341, 638,
	171, 0, 709, 712, 722, 744, 127, 139, 150, 156,
	170, 175, 179, 685, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 742,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 769, 777, 754, 319,
	702, 780, 666, 688, 793, 691, 694, 735, 649, 715,
	248, 686, 650, 0, 670, 639, 679, 640, 667, 704,
	173, 665, 756, 718, 779, 206, 731, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 778, 710, 0, 787,
	209, 0, 727, 788, 307, 232, 0, 0, 706, 764,
	713, 752, 701, 737, 658, 726, 782, 687, 733, 783,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 653, 0, 730, 776, 682, 732, 734,
	637, 729, 0, 644, 651, 792, 771, 673, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 705, 714, 746,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 671,
	0, 724, 0, 0, 0, 652, 645, 0, 0, 703,
	0, 0, 0, 657, 636, 672, 748, 0, 634, 185,
	233, 142, 753, 770, 700, 197, 348, 774, 697, 696,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 745, 289, 684, 635, 757, 668, 680, 164, 676,
	281, 252, 337, 0, 721, 259, 280, 210, 327, 741,
	775, 336, 689, 796, 345, 350, 0, 711, 655, 304,
	174, 0, 131, 0, 266, 169, 202, 699, 736, 669,
	161, 743, 725, 763, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 695, 292, 291, 690, 193, 751, 728, 641,
	274, 739, 198, 130, 316, 353, 147, 204, 321, 633,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 681, 740, 338, 750, 272, 294, 323, 149,
	311, 677, 678, 683, 747, 283, 758, 768, 781, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 642,
	0, 309, 340, 355, 151, 664, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 662, 663, 660,
	0, 661, 716, 717, 784, 785, 786, 749, 654, 0,
	765, 766, 0, 0, 0, 0, 0, 755, 772, 773,
	738, 794, 692, 693, 659, 295, 275, 643, 646, 647,
	648, 656, 707, 708, 720, 723, 761, 760, 759, 762,
	767, 790, 789, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 129, 138, 208, 795,
	273, 180, 341, 638, 171, 0, 709, 712, 722, 744,
	127, 139, 150, 156, 170, 175, 179, 685, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 742, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	769, 777, 754, 319, 702, 780, 666, 688, 793, 691,
	694, 735, 649, 715, 248, 686, 650, 0, 670, 639,
	679, 640, 667, 704, 173, 665, 756, 718, 779, 206,
	731, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	778, 710, 0, 787, 209, 0, 727, 788, 307, 232,
	0, 0, 706, 764, 713, 752, 701, 737, 658, 726,
	782, 687, 733, 783, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 0, 730,
	776, 682, 732, 734, 637, 729, 0, 644, 651, 792,
	771, 673, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 705, 714, 746, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 0, 724, 0, 0, 0, 652,
	645, 0, 0, 703, 0, 0, 0, 657, 636, 672,
	748, 0, 634, 185, 233, 142, 753, 770, 700, 197,
	348, 774, 697, 696, 269, 0, 313, 187, 207, 630,
	126, 140, 626, 186, 244, 745, 289, 684, 635, 757,
	668, 680, 164, 676, 281, 252, 337, 0, 721, 259,
	280, 210, 327, 741, 775, 336, 689, 796, 345, 350,
	0, 711, 655, 304, 174, 0, 131, 0, 266, 169,
	202, 699, 736, 669, 161, 743, 725, 763, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 695, 292, 291, 690,
	193, 751, 728, 641, 274, 739, 198, 130, 316, 353,
	147, 204, 321, 633, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 681, 740, 338, 750,
	272, 294, 323, 149, 311, 677, 678, 683, 747, 283,
	758, 768, 781, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 642, 0, 309, 340, 355, 151, 664,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 662, 663, 660, 0, 661, 716, 717, 784, 785,
	786, 749, 654, 0, 765, 766, 0, 0, 0, 0,
	0, 755, 772, 773, 738, 794, 692, 693, 659, 295,
	275, 643, 646, 647, 648, 656, 707, 708, 720, 723,
	761, 760, 759, 762, 767, 790, 789, 791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	129, 138, 208, 795, 273, 180, 341, 638, 171, 0,
	709, 712, 722, 744, 127, 139, 150, 156, 170, 175,
	179, 685, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 742, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 769, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 173, 498, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 576, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 563, 564, 0, 0,
	0, 0, 0, 0, 1494, 0, 79, 0, 0, 0,
	499, 523, 522, 525, 526, 527, 528, 0, 0, 0,
	524, 529, 558, 559, 1495, 0, 0, 496, 514, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 512, 0, 0, 0, 0, 590, 0, 513,
	0, 0, 508, 509, 510, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 566, 0,
	0, 197, 348, 0, 0, 588, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 573,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 565,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 577, 589, 583, 585, 584, 581, 582,
	580, 579, 578, 591, 567, 568, 569, 570, 571, 0,
	0, 0, 574, 0, 586, 587, 0, 0, 0, 0,
	0, 295, 275, 530, 531, 532, 533, 534, 538, 539,
	543, 544, 552, 551, 550, 553, 554, 556, 555, 557,
	535, 536, 537, 540, 541, 542, 545, 546, 549, 547,
	548, 572, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 35, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 173, 498,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 576, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 563, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 499, 523, 522, 525, 526, 527, 528, 0,
	0, 0, 524, 529, 558, 559, 0, 0, 0, 496,
	514, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 512, 0, 0, 0, 0, 590,
	0, 513, 0, 0, 508, 509, 510, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	566, 0, 0, 197, 348, 0, 0, 588, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 573, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 565, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 577, 589, 583, 585, 584,
	581, 582, 580, 579, 578, 591, 567, 568, 569, 570,
	571, 0, 0, 0, 574, 0, 586, 587, 0, 0,
	0, 0, 0, 295, 275, 530, 531, 532, 533, 534,
	538, 539, 543, 544, 552, 551, 550, 553, 554, 556,
	555, 557, 535, 536, 537, 540, 541, 542, 545, 546,
	549, 547, 548, 572, 129, 138, 208, 77, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 173,
	498, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 576, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 563,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 499, 523, 522, 525, 526, 527, 528,
	0, 0, 0, 524, 529, 558, 559, 0, 0, 0,
	496, 514, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 492, 0, 0, 0,
	590, 0, 513, 0, 0, 508, 509, 510, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 566, 0, 0, 197, 348, 0, 0, 588, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 573, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 565, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 577, 589, 583, 585,
	584, 581, 582, 580, 579, 578, 591, 567, 568, 569,
	570, 571, 0, 0, 0, 574, 0, 586, 587, 0,
	0, 0, 0, 0, 295, 275, 530, 531, 532, 533,
	534, 538, 539, 543, 544, 552, 551, 550, 553, 554,
	556, 555, 557, 535, 536, 537, 540, 541, 542, 545,
	546, 549, 547, 548, 572, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	173, 498, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 576,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	563, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 956, 0, 499, 523, 522, 525, 526, 527,
	528, 0, 0, 0, 524, 529, 558, 559, 0, 0,
	0, 496, 514, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 512, 0, 0, 0,
	0, 590, 0, 513, 0, 0, 508, 509, 510, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 566, 0, 0, 197, 348, 0, 0, 588,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 573, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 565, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 577, 589, 583,
	585, 584, 581, 582, 580, 579, 578, 591, 567, 568,
	569, 570, 571, 0, 0, 0, 574, 0, 586, 587,
	0, 0, 0, 0, 0, 295, 275, 530, 531, 532,
	533, 534, 538, 539, 543, 544, 552, 551, 550, 553,
	554, 556, 555, 557, 535, 536, 537, 540, 541, 542,
	545, 546, 549, 547, 548, 572, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 173, 498, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	576, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 563, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 499, 523, 522, 525, 526,
	527, 528, 0, 0, 0, 524, 529, 558, 559, 0,
	0, 0, 496, 514, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 512, 1382, 0,
	0, 0, 590, 0, 513, 0, 0, 508, 509, 510,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 566, 0, 0, 197, 348, 0, 0,
	588, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 573, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 565, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 577, 589,
	583, 585, 584, 581, 582, 580, 579, 578, 591, 567,
	568, 569, 570, 571, 0, 0, 0, 574, 0, 586,
	587, 0, 0, 0, 0, 0, 295, 275, 530, 531,
	532, 533, 534, 538, 539, 543, 544, 552, 551, 550,
	553, 554, 556, 555, 557, 535, 536, 537, 540, 541,
	542, 545, 546, 549, 547, 548, 572, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 173, 498, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 576, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 563, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 499, 523, 1426, 525,
	526, 527, 528, 0, 0, 0, 524, 529, 558, 559,
	0, 0, 0, 496, 514, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 512, 1382,
	0, 0, 0, 590, 0, 513, 0, 0, 508, 509,
	510, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 566, 0, 0, 197, 348, 0,
	0, 588, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 573, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 565, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 577,
	589, 583, 585, 584, 581, 582, 580, 579, 578, 591,
	567, 568, 569, 570, 571, 0, 0, 0, 574, 0,
	586, 587, 0, 0, 0, 0, 0, 295, 275, 530,
	531, 532, 533, 534, 538, 539, 543, 544, 552, 551,
	550, 553, 554, 556, 555, 557, 535, 536, 537, 540,
	541, 542, 545, 546, 549, 547, 548, 572, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 173, 498, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 576, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 563, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 499, 523, 1423,
	525, 526, 527, 528, 0, 0, 0, 524, 529, 558,
	559, 0, 0, 0, 496, 514, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	1382, 0, 0, 0, 590, 0, 513, 0, 0, 508,
	509, 510, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 566, 0, 0, 197, 348,
	0, 0, 588, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 573, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 565, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	577, 589, 583, 585, 584, 581, 582, 580, 579, 578,
	591, 567, 568, 569, 570, 571, 0, 0, 0, 574,
	0, 586, 587, 0, 0, 0, 0, 0, 295, 275,
	530, 531, 532, 533, 534, 538, 539, 543, 544, 552,
	551, 550, 553, 554, 556, 555, 557, 535, 536, 537,
	540, 541, 542, 545, 546, 549, 547, 548, 572, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	501, 0, 0, 0, 173, 498, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 576, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 563, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 1268, 0, 499, 523,
	522, 525, 526, 527, 528, 0, 0, 0, 524, 529,
	558, 559, 0, 0, 0, 496, 514, 0, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	512, 0, 0, 0, 0, 590, 0, 513, 0, 0,
	508, 509, 510, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 566, 0, 0, 197,
	348, 0, 0, 588, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 573, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 565, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 577, 589, 583, 585, 584, 581, 582, 580, 579,
	578, 591, 567, 568, 569, 570, 571, 0, 0, 0,
	574, 0, 586, 587, 0, 0, 0, 0, 0, 295,
	275, 530, 531, 532, 533, 534, 538, 539, 543, 544,
	552, 551, 550, 553, 554, 556, 555, 557, 535, 536,
	537, 540, 541, 542, 545, 546, 549, 547, 548, 572,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 173, 498, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 576, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 499,
	523, 522, 525, 526, 527, 528, 0, 0, 0, 524,
	529, 558, 559, 0, 0, 0, 496, 514, 0, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 512, 0, 0, 0, 0, 590, 0, 513, 0,
	0, 508, 509, 510, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 566, 0, 0,
	197, 348, 0, 0, 588, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 573, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 565, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 577, 589, 583, 585, 584, 581, 582, 580,
	579, 578, 591, 567, 568, 569, 570, 571, 0, 0,
	0, 574, 0, 586, 587, 0, 0, 0, 0, 0,
	295, 275, 530, 531, 532, 533, 534, 538, 539, 543,
	544, 552, 551, 550, 553, 554, 556, 555, 557, 535,
	536, 537, 540, 541, 542, 545, 546, 549, 547, 548,
	572, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 576, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 563, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	499, 523, 522, 525, 526, 527, 528, 0, 0, 0,
	524, 529, 558, 559, 0, 0, 0, 0, 514, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 512, 0, 0, 0, 0, 590, 0, 513,
	0, 0, 508, 509, 510, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 566, 0,
	0, 197, 348, 0, 0, 588, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 573,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 565,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 577, 589, 583, 585, 584, 581, 582,
	580, 579, 578, 591, 567, 568, 569, 570, 571, 1429,
	1430, 1431, 574, 0, 586, 587, 0, 0, 0, 0,
	0, 295, 275, 530, 531, 532, 533, 534, 538, 539,
	543, 544, 552, 551, 550, 553, 554, 556, 555, 557,
	535, 536, 537, 540, 541, 542, 545, 546, 549, 547,
	548, 572, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 576, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 563, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 499, 523, 522, 525, 526, 527, 528, 0, 0,
	0, 524, 529, 558, 559, 0, 0, 0, 0, 514,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 512, 0, 0, 0, 0, 590, 0,
	513, 0, 0, 508, 509, 510, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 566,
	0, 0, 197, 348, 0, 0, 588, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	573, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	565, 2705, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 577, 589, 583, 585, 584, 581,
	582, 580, 579, 578, 591, 567, 568, 569, 570, 571,
	0, 0, 0, 574, 0, 586, 587, 0, 0, 0,
	0, 0, 295, 275, 530, 531, 532, 533, 534, 538,
	539, 543, 544, 552, 551, 550, 553, 554, 556, 555,
	557, 535, 536, 537, 540, 541, 542, 545, 546, 549,
	547, 548, 572, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 576, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 563, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	956, 0, 499, 523, 522, 525, 526, 527, 528, 0,
	0, 0, 524, 529, 558, 559, 0, 0, 0, 0,
	514, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 512, 0, 0, 0, 0, 590,
	0, 513, 0, 0, 508, 509, 510, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	566, 0, 0, 197, 348, 0, 0, 588, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 573, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 565, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 577, 589, 583, 585, 584,
	581, 582, 580, 579, 578, 591, 567, 568, 569, 570,
	571, 0, 0, 0, 574, 0, 586, 587, 0, 0,
	0, 0, 0, 295, 275, 530, 531, 532, 533, 534,
	538, 539, 543, 544, 552, 551, 550, 553, 554, 556,
	555, 557, 535, 536, 537, 540, 541, 542, 545, 546,
	549, 547, 548, 572, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 576, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 563,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 499, 523, 522, 525, 526, 527, 528,
	0, 0, 0, 524, 529, 558, 559, 0, 0, 0,
	0, 514, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 512, 0, 0, 0, 0,
	590, 0, 513, 0, 0, 508, 509, 510, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 566, 0, 0, 197, 348, 0, 0, 588, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 573, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 565, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 577, 589, 583, 585,
	584, 581, 582, 580, 579, 578, 591, 567, 568, 569,
	570, 571, 0, 0, 0, 574, 0, 586, 587, 0,
	0, 0, 0, 0, 295, 275, 530, 531, 532, 533,
	534, 538, 539, 543, 544, 552, 551, 550, 553, 554,
	556, 555, 557, 535, 536, 537, 540, 541, 542, 545,
	546, 549, 547, 548, 572, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 425,
	319, 419, 430, 413, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 467, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 420, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 411, 414, 0, 0, 0,
	185, 233, 142, 0, 0, 418, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 422, 289, 0, 0, 426, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 429, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 470, 294, 323,
	149, 311, 415, 416, 417, 423, 424, 427, 428, 431,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 421, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 425, 319, 419, 430, 413, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 420, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 411, 414, 0,
	0, 0, 185, 233, 142, 0, 0, 418, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 422, 289, 0, 0, 426, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 429, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 408,
	294, 323, 149, 311, 415, 416, 417, 423, 424, 427,
	428, 431, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 275,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 421, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 1472,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1474, 1476, 0, 0, 0, 0, 0, 0, 124, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 1475, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	275, 437, 438, 439, 440, 441, 445, 446, 450, 451,
	460, 459, 458, 461, 462, 465, 464, 466, 442, 443,
	444, 447, 448, 449, 452, 453, 456, 454, 455, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1474, 1476, 0, 0, 0, 0, 0, 0, 124,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 1475, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	1470, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 275, 437, 438, 439, 440, 441, 445, 446, 450,
	451, 460, 459, 458, 461, 462, 465, 464, 466, 442,
	443, 444, 447, 448, 449, 452, 453, 456, 454, 455,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 978, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	979, 0, 982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 275, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	2626, 0, 0, 0, 0, 0, 0, 173, 2624, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 2625, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 275, 437, 438, 439, 440, 441, 445,
	446, 450, 451, 460, 459, 458, 461, 462, 465, 464,
	466, 442, 443, 444, 447, 448, 449, 452, 453, 456,
	454, 455, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 1765, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 275, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 275, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 275, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 275,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 0, 0, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 35, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 295,
	275, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 1467, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 79, 273, 180, 341, 124, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 1128, 0, 0, 0, 206, 295, 275,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 77, 273, 180, 341, 631, 171, 1127, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 295, 275, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 79, 273, 180, 341, 124, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 295, 275, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 79, 273, 180, 341, 631, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 173, 0, 0, 0, 0, 206, 295, 275, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 124, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 319,
	0, 0, 0, 594, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 295, 275, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 124, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 295, 275, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 124, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 121, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 295, 275, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 631, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 295, 275, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 0, 273, 180,
	341, 124, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 295, 275, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 0,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	499, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 295, 275, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 0, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 499,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 614, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 610, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 615,
	613, 604, 605, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	295, 275, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 499, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 611, 612, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 1122, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 295,
	275, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 499, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 601, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 614, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 610,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 615, 613, 604,
	605, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 611, 612, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 35, 0, 70, 38, 39, 0, 0,
	0, 35, 0, 70, 38, 39, 0, 58, 0, 0,
	0, 0, 0, 76, 0, 58, 0, 40, 0, 0,
	0, 76, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2466,
	0, 0, 0, 0, 2620, 0, 0, 2466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 72,
	45, 44, 47, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 2467, 0, 0, 0, 0, 0,
	0, 0, 2467, 0, 0, 0, 0, 0, 0, 0,
	48, 75, 74, 0, 0, 0, 0, 46, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 56, 57, 0, 2468, 0, 0, 0,
	0, 56, 57, 0, 2468, 0, 0, 0, 0, 0,
	65, 0, 66, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2469, 73, 0, 52, 53, 60,
	0, 61, 2469, 73, 0, 52, 53, 60, 0, 61,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 77,
}

var yyPact = [...]int{
	633, -1000, -313, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1642, -1000, -1000, -1000, -1000, -1000,
	-1000, 893, 281, -1000, 268, 252, 27671, 587, 2999, 28389,
	-1000, -1000, -1000, 167, 509, 28389, 407, 406, 1133, 1545,
	1132, 33, -71, -73, 148, 18905, 18423, -1000, 1713, 1715,
	-1000, -1000, 541, 38, -1000, -1000, -1000, 22753, 186, -1000,
	-1000, 1641, 1656, 1468, -1000, 13131, 541, 541, 27312, 29825,
	-1000, 1712, 28389, 11686, -1000, 578, 28389, -151, 510, 510,
	328, 510, 510, 582, -1000, 797, -1000, -1000, -1000, -1000,
	28389, 22272, 530, 28030, 530, 530, 530, 530, 530, 530,
	530, 28389, -1000, 658, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28389, 1131, 1572, 825,
	129, -1000, -1000, -1000, 824, -1000, 315, 307, 322, 253,
	79, 865, 1637, -1000, 1369, 1641, 1641, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 323, 565, 233, 186, 792, -1000,
	1570, 1568, 1048, 1563, 1501, 1562, 1417, -56, -1000, 1130,
	28389, -1000, -1000, 1014, 1001, 1439, 1313, 610, 1438, -1000,
	-1000, 254, 459, 1412, 367, 1412, 1412, 1412, 1412, 1412,
	-77, 1412, 1412, 1412, 60, 1412, 132, 1412, 1412, 1412,
	1412, 1412, 1141, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 347, 1311, 1349,
	1437, -1000, 1427, 1628, 580, -1000, -112, 1353, -1000, 1400,
	-1000, -1000, -1000, 1138, 1565, 904, 16017, 1513, -1000, -1000,
	870, 1687, -1000, 20348, 656, -1000, 16017, 2998, 1369, -1000,
	-1000, 1369, -1000, -1000, -1000, 643, -1000, -1000, 17941, 17941,
	17941, 17941, 17941, 17941, 17941, 17941, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, -1000, -1000,
	1369, -1000, 12650, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 16017, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 26953, 25273, 28389, 1284, 1281, -1000, -1000, 655,
	1352, -118, 29466, -1000, -1000, -1000, -1000, 28748, 24914, 791,
	-1000, -1000, -1000, -1000, 1560, -1000, -1000, 654, -1000, 1642,
	-1000, -1000, 1275, 522, -1000, 4076, 4893, -1000, -1000, -1000,
	1416, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28030, 1625, 563,
	1125, 831, 1123, 1122, 1121, 22272, 22272, 510, 1120, 1351,
	561, 1350, 560, 1139, 28389, 1607, 1436, 28389, 1119, 1118,
	1115, 1114, 22272, 22272, -1000, 11202, -1000, -1000, 825, -1000,
	1073, 16017, 510, 510, 28389, 28389, 28389, 28389, -1000, -1000,
	825, 825, -1000, 825, 819, 1686, 819, -1000, 819, -1000,
	-1000, 16017, -1000, 17941, 21791, 694, -1000, -1000, -1000, 1112,
	244, -1000, -1000, -1000, -1000, -1000, -1000, 1111, 1501, 1501,
	-1000, 1071, 1501, 1343, -1000, 782, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1501, -1000,
	15536, -311, -1000, -1000, 1348, -1000, 291, -1000, -1000, 515,
	515, 187, 22272, 22272, 22272, -1000, 1412, 28030, -1000, 1412,
	1412, 1412, -84, 1412, 1412, -1000, -1000, 1412, -1000, -1000,
	-1000, -1000, -1000, 1412, -1000, -1000, -1000, 1412, 1412, -1000,
	1412, 1412, -1000, -1000, -1000, -1000, -1000, 22272, 515, 165,
	1347, 515, 22272, 22272, 1468, -1000, -1000, 186, -1000, -1000,
	28389, -104, 22753, 1369, 9750, -1000, -1000, -1000, 1708, 709,
	1358, -1000, -1000, 1346, -1000, 868, 649, 1017, 1487, -1000,
	-1000, -1000, 28389, -1000, 16017, 16017, 982, -1000, 23234, -1000,
	-1000, -1000, -1000, 9266, 715, 17941, 884, 747, 17941, 17941,
	17941, 17941, 17941, 17941, 17941, 17941, 17941, 17941, 17941, 17941,
	17941, 17941, 17941, 1024, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1110, -1000, 186, 1005, 1005, 671, 671, 671,
	671, 671, 671, 671, 24196, 1619, 14093, 14093, 14093, 1619,
	1138, 1138, 14093, 14093, 14093, 14093, 14093, 14093, 1619, 1619,
	14093, 1138, 1138, 1138, 1138, 14093, 14093, 14093, 14093, 1619,
	14093, 14093, 14093, 1619, 1138, 1258, 922, 12650, 14093, 14093,
	14093, 1138, 16017, 16017, 15055, 14574, 16498, 14093, 14093, 1619,
	778, 922, 28748, -1000, -1000, 17460, -1000, -1000, -1000, -1000,
	-1000, 1138, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28030, 28030, 14093, 14093, 14093, 14093, 340, 28389, -1000, 1324,
	1372, -1000, -1000, -1000, 1622, 24555, 19867, -1000, 340, 1207,
	25273, 28389, -1000, -1000, 25273, 28389, 8782, 29107, 1327, -1000,
	-108, -131, -118, -1000, -1000, 664, -1000, -1000, -1000, 12168,
	-1000, 10234, 1641, 1468, 6362, 10718, -1000, 4893, 1416, -1000,
	-65, -1000, -1000, -1000, 1383, -1000, 1383, 283, 57, 1383,
	1383, 1383, 1383, 1383, -15, -15, -15, -15, -5, -1000,
	-1000, -1000, -1000, -1000, 1415, 1414, -1000, 1383, 1383, 1383,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1404,
	299, 1391, 1391, 1391, 1391, 1391, 368, 368, -1000, 16017,
	1359, -1000, 28389, -1000, 1605, -1000, 287, 1413, 1328, -1000,
	173, 1181, 28389, -1000, 28389, 28389, 22272, 22272, 22272, 548,
	-1000, 28389, 1345, -1000, -1000, -1000, -1000, -1000, 1314, -1000,
	1181, -1000, -1000, -1000, -1000, -1000, 922, 1108, 1107, -1000,
	-1000, -1000, 820, -1000, -1000, -1000, 825, 28389, 28389, 28389,
	1620, 825, 922, 2821, 1420, 1369, 1138, -1000, -1000, 1106,
	-1000, 1343, 1343, -1000, 1343, 1501, 1005, 1343, -1000, 1255,
	1595, 1069, 28389, -1000, 22753, -57, -1000, -126, 26594, -1000,
	-1000, -1000, 26594, -1000, 60, 168, -1000, 559, -1000, 1252,
	-1000, -1000, -1000, -1000, 1412, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 26594, 111, 164, 26594, 1314, 1685,
	1619, 1138, 535, -1000, -1000, -1000, -1000, 185, 1228, 648,
	-1000, 1480, 904, 904, 16017, -1000, -1000, -1000, 10234, 1640,
	-1000, 1497, 1496, 1459, -1000, -1000, 715, 774, -1000, -1000,
	990, -1000, -1000, -1000, -1000, 647, 1369, -1000, 3902, -1000,
	-1000, -1000, -1000, 884, 17941, 17941, 17941, 2821, 3902, 3882,
	1219, 3410, 671, 706, 706, 688, 688, 688, 688, 688,
	921, 921, -1000, -1000, -1000, 1138, -1000, -1000, -1000, 14093,
	1247, -1000, -1000, 922, 646, 1247, 1247, 14093, -167, -167,
	1138, 1247, 1247, 1247, 1138, 1247, 14093, 14093, 1247, -167,
	-167, -167, -167, 1247, 1247, 1247, 1247, 14093, 1247, 1247,
	1247, 14093, -1000, 16017, -1000, 1138, 1247, 1247, 1247, -1000,
	773, 967, 734, 1684, 1247, 722, 1683, 1247, 2800, 17941,
	17941, 17941, 1247, 1247, 14093, 908, -1000, 16017, 1138, -1000,
	3179, 1333, 1332, 1247, 1138, 1329, 1247, 1247, 183, 1369,
	-1000, 10234, 25273, 25273, 25273, 25273, 25273, -1000, 1465, 1463,
	-1000, 1452, 1450, 1456, 22753, 1250, 1138, 305, 24555, -1000,
	1369, -1000, 21310, 568, 577, 575, 574, 1668, 25273, 1234,
	-1000, 1234, -1000, 635, -1000, -1000, 28748, -118, -114, -1000,
	-1000, 1327, -1000, 1031, -1000, -1000, 922, -1000, 628, 1565,
	1619, 1323, 5878, -1000, -1000, -1000, -1000, 522, -1000, -1000,
	-1000, 1405, 4850, -1000, 1517, 670, 699, 1081, 1511, -1000,
	-1000, 264, -78, -1000, -1000, 994, -15, -15, 1383, 1383,
	245, 1383, -1000, -15, -1000, -1000, -1000, 664, 1559, 664,
	664, 664, 664, -15, 1068, 1068, -1000, -1000, -1000, -1000,
	986, -1000, 1404, -1000, 981, -1000, -1000, -1000, -1000, -1000,
	-1000, 852, 1433, 28030, 186, 1615, -1000, 1676, -1000, -1000,
	583, 68, 22272, 174, 289, 194, -1000, 555, -1000, 554,
	-1000, -1000, -1000, -1000, -1000, -1000, 28389, 22272, -1000, -1000,
	1668, 1105, 1103, -1000, -1000, -1000, 819, 825, 1548, -1000,
	-1000, 17941, 22272, -1000, 317, -1000, -1000, -1000, -1000, 340,
	552, -1000, -1000, -99, -1000, -1000, 551, 625, 623, 549,
	-1000, 78, 22272, -1000, 28030, -1000, 1682, 1680, 101, 1679,
	22272, 1487, -1000, 1320, -1000, 750, 657, 725, 373, 373,
	-1000, 748, 373, 336, 1614, 9750, 9750, 1475, -1000, -1000,
	-1000, 28389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8298, 14093, -1000, 2821, 3902, 3690, -1000, 17941, -1000,
	1247, 14093, -167, 7814, -167, -167, 1247, -1000, 26113, -1000,
	-167, -167, -167, -167, -167, -167, 1247, 1247, -167, -1000,
	-1000, -1000, -1000, -167, -167, -167, -167, 1247, -167, -167,
	-167, 1138, 922, -1000, -1000, -1000, -1000, 594, 1024, 594,
	17941, 17941, -1000, 17941, 17941, -1000, -1000, 17941, 3812, 3672,
	3621, -208, -1000, 1341, 805, -1000, 16017, 919, -1000, -1000,
	17941, 17941, -1000, -1000, -1000, -1000, 1432, 10234, 1369, 6846,
	-1000, 28030, 1340, -1000, 771, 767, 1372, 1399, 1431, 1195,
	-1000, -1000, -1000, -1000, 1462, -1000, 1453, -1000, -1000, 1375,
	-1000, -1000, 1319, 1369, 28030, 17941, 568, -1000, 1369, 1369,
	1369, 1642, 16017, 1234, -1000, -1000, 687, -1000, -1000, -113,
	-136, -1000, -1000, -1000, 9750, -1000, 6362, -1000, 6362, -1000,
	23715, 528, 1520, 371, -1000, 1081, -1000, -1000, 1081, -1000,
	-1000, -1000, 1392, -1000, 858, -1000, -1000, -1000, -1000, -1000,
	17941, 1693, -1000, 1514, -1000, 1512, 1065, -1000, -1000, 1178,
	664, 664, -15, -1000, -1000, 1383, -1000, 664, -1000, 719,
	-1000, -1000, -1000, -1000, 664, 1245, -1000, 1242, 1318, -1000,
	1240, 119, 28389, -1000, -1000, -1000, 1430, -1000, -1000, -1000,
	1174, 1315, -1000, 4076, 1102, 1101, 1099, -215, 197, -1000,
	22272, 135, 173, 416, 1098, 28389, 22272, -1000, -1000, -1000,
	-1000, -1000, 825, -1000, 17941, 3902, 1181, -1000, -1000, -15,
	28389, -1000, 22272, 685, 25754, 22272, 98, 166, -1000, 22272,
	22272, 1678, 22272, 1314, 1459, 535, 4731, 1081, 642, -1000,
	-1000, 375, -1000, 3437, 1511, 1096, 4921, 4798, 28030, 1510,
	1508, 1095, 28389, 28030, -1000, -1000, 2562, 1088, 16017, -1000,
	28030, 28030, 1369, 604, -1000, -1000, -1000, 1290, 13131, -1000,
	-1000, 1138, -1000, 17941, 3902, -167, -1000, -1000, -1000, -1000,
	602, -1000, -1000, -167, -1000, 499, -1000, -1000, -1000, -1000,
	-1000, -1000, -167, -167, -1000, -1000, -1000, -1000, -1000, -167,
	-1000, -1000, -1000, -1000, 1138, 1383, 1383, -1000, 1383, 1391,
	-1000, 1383, 20, 1383, 13, 1138, 1138, 3591, 3536, 3246,
	2902, 3179, 17941, 17941, 17941, 1369, -163, -1000, 922, 16017,
	3330, 3306, -1000, 1588, 1166, 1312, -1000, -1000, 13612, 1138,
	1493, 1228, -1000, 22753, 1221, -1000, 1642, 10234, 16017, 16017,
	-1000, -1000, 16017, 1384, -1000, 16017, -1000, -1000, -1000, -1000,
	28030, 302, -1000, 16017, 1221, 1917, -1000, 28030, 28030, 28030,
	1641, 922, -1000, -1000, -1000, -1000, 5878, -1000, 1217, -1000,
	1383, 1383, 1507, -1000, 670, -1000, -1000, -1000, 28030, -1000,
	3902, -32, -1000, -1000, -1000, -1000, -1000, -1000, 664, -1000,
	-1000, -1000, -1000, -1000, -15, 1061, -15, 976, -1000, 957,
	-1000, -1000, -258, 1379, -1000, 186, 28389, 99, 583, -1000,
	4076, 4076, 4076, 109, 127, -1000, 842, -1000, -1000, -1000,
	1060, 1056, 1052, 1181, 177, 835, 151, -1000, 1612, -1000,
	-1000, -1000, 3902, -82, -1000, 166, -1000, -1000, -1000, 166,
	-1000, -1000, 158, 1314, 1314, 22272, 1314, -1000, -1000, 2562,
	355, 4076, 4076, 1359, 670, 1504, 371, -1000, -1000, -1000,
	-1000, -1000, -1000, 1087, -1000, 659, -1000, 544, 355, 2562,
	922, 701, 1591, -1000, 9750, 1664, 25273, -1000, -1000, -1000,
	3902, -1000, 7330, -1000, 1138, 1655, -1000, -1000, -1000, -1000,
	-1000, 251, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17941, 17941, 17941, 17941, -1000, 3179, 3179, 3179, 17941, 1138,
	1051, 922, 17941, 17941, 1502, -1000, 1369, -1000, -1000, 1369,
	184, -1000, 28030, 1641, -1000, 922, 922, 922, 28030, 922,
	1215, -1000, 1369, 19386, -1000, 22753, 1209, 1209, 1209, -1000,
	617, 23715, 1601, 1601, -1000, 1081, -1000, 1203, -1000, -1000,
	664, -1000, 664, 1158, 1155, -1000, 23715, -1000, 1636, -1000,
	99, -1000, 1047, 246, 248, -1000, 243, 237, 219, 198,
	216, -1000, -1000, -1000, -1000, 370, 109, -1000, -48, 956,
	249, 1556, 127, -1000, 939, 936, 917, 914, 222, -1000,
	-1000, -1000, -1000, 193, 173, -1000, 408, 1046, 1540, 1536,
	1611, 1611, 93, 1314, 1330, 1153, -1000, -1000, 1083, -1000,
	-1000, 1377, 1081, 1376, -1000, 1080, -1000, -1000, 28030, -1000,
	355, 1585, 1581, 1369, -1000, 1660, 1653, 1234, 13131, -1000,
	-1000, -1000, 16017, -1000, -1000, 3179, 3179, 3179, 3179, -1000,
	-1000, -1000, 172, -1000, -1000, 3179, 3179, 1692, -1000, 1312,
	1369, -1000, 186, -1000, -1000, 1172, -1000, 28030, -1000, -1000,
	568, -1000, -1000, -1000, 617, -1000, 1079, 748, 1044, -1000,
	-1000, -1000, -1000, 359, -1000, -1000, -1000, -1000, 1161, -1000,
	284, 30315, -1000, -1000, -1000, -1000, -1000, -1000, 1544, 1543,
	259, -1000, 1043, 1040, -1000, 360, 1035, 634, -175, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	397, 1077, -1000, 141, -1000, -1000, 460, 1503, 1516, 1650,
	-1000, 22272, -1000, -1000, 25273, -1000, -1000, 264, 264, 23715,
	1359, 23715, -1000, -1000, -1000, 17941, -1000, 325, -1000, 16017,
	16017, 1664, -1000, 1334, -1000, -1000, -1000, -1000, 1138, 171,
	-230, -1000, -1000, 10234, 1312, 1138, -1000, -1000, -1000, -1000,
	-1000, 892, -1000, 28389, 617, 300, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16017, 16017, 5394, 30315,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 891, -1000,
	-1000, 1018, 379, 140, -1000, 1609, -1000, 1375, 878, 1536,
	1649, 1528, 1525, -1000, 1034, -216, 1234, 1151, 1374, 1149,
	3902, 1147, -1000, 28030, -1000, 922, 1277, -1000, 922, 1660,
	-1000, -174, -1000, 1473, -212, -243, 1194, -1000, -1000, 1373,
	-1000, 617, 294, -1000, 900, 897, 190, 192, 3656, -1000,
	-1000, -1000, -1000, -314, -1000, 124, -1000, 121, -1000, -1000,
	-1000, 1030, -1000, 1539, -1000, 1026, -1000, 1648, 1646, -1000,
	169, 1664, 617, 23715, 617, -1000, 325, 1490, 16017, -1000,
	1138, 230, 230, -1000, 1440, -1000, 28030, -1000, 1076, 1037,
	955, -1000, 16017, 30315, 1635, 1634, 1623, 1578, 9750, 30307,
	-1000, -1000, -1000, -1000, -1000, 1016, 930, 20829, 1660, -1000,
	1145, -1000, -1000, 333, -1000, -1000, -1000, 231, -1000, -262,
	257, -263, -1000, 1005, -1000, -228, 1137, 351, -1000, -1000,
	816, 30315, -1000, 857, -315, 401, 186, 562, 17941, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 90, 1181, -1000, 617,
	331, 821, -1000, -1000, -1000, -1000, -1000, 28030, -234, 1426,
	-1000, -1000, -1000, -1000, -1000, -1000, 30315, -1000, -316, 30315,
	3384, -1000, -1000, -1000, 4817, -1000, -1000, -1000, -1000, 188,
	-1000, -1000, 3902, 22272, -1000, 1369, 231, -1000, -248, 1425,
	1423, 1672, -1000, -317, 4741, -318, 491, 30315, 841, -1000,
	16017, -1000, 562, -1000, 1181, 16979, -1000, -1000, -1000, 1690,
	-1000, 1677, 599, 599, 4578, 812, 30315, -1000, -320, 480,
	30315, -1000, 855, -1000, 3179, 1138, -1000, -1000, -1000, 366,
	929, -1000, -1000, -1000, 4488, -1000, -321, 30315, -1000, -1000,
	-1000, -1000, -1000, 457, 4408, -322, -1000, 383, 30315, -1000,
}

var yyPgo = [...]int{
	0, 2108, 2107, 82, 2106, 179, 2099, 2097, 2096, 19,
	17, 15, 24, 2095, 1874, 1872, 1858, 1853, 1846, 2094,
	7, 2093, 2092, 1844, 2091, 2088, 1840, 1838, 1836, 1830,
	2085, 2081, 2079, 1828, 1826, 2, 2078, 28, 2077, 5,
	142, 156, 2075, 3, 2074, 2073, 23, 2069, 2068, 1820,
	2067, 2065, 2064, 98, 2062, 1783, 1777, 2056, 1772, 1765,
	2055, 2054, 1759, 1752, 1741, 2053, 164, 2052, 2048, 2047,
	159, 101, 141, 2046, 2045, 2044, 109, 86, 1833, 105,
	51, 121, 225, 2043, 27, 54, 2038, 2024, 130, 166,
	2023, 149, 2022, 95, 279, 100, 2021, 2020, 163, 2019,
	2017, 2016, 127, 2015, 2014, 326, 2009, 2008, 151, 2007,
	62, 46, 45, 2005, 2004, 2002, 2001, 2000, 26, 372,
	1999, 1997, 140, 1993, 1992, 89, 1991, 1989, 167, 1987,
	1985, 1984, 134, 44, 1983, 47, 1979, 41, 67, 1972,
	58, 1971, 131, 1970, 1969, 33, 13, 1968, 93, 1967,
	50, 1966, 137, 171, 1107, 1965, 29, 12, 22, 37,
	61, 78, 125, 103, 31, 34, 136, 106, 94, 43,
	1964, 145, 1963, 97, 147, 126, 129, 146, 1962, 1956,
	1953, 997, 1951, 128, 90, 1949, 139, 901, 162, 123,
	1948, 96, 1947, 1946, 1945, 91, 158, 1944, 1941, 49,
	21, 1678, 1721, 14, 150, 1939, 39, 1938, 1937, 3081,
	117, 65, 107, 1936, 104, 38, 53, 1933, 1932, 1931,
	1929, 1928, 1927, 807, 1926, 1925, 1924, 1922, 248, 63,
	1921, 1919, 122, 112, 1918, 1917, 1916, 1915, 124, 73,
	144, 1910, 113, 111, 187, 1908, 70, 1905, 1903, 52,
	40, 1901, 1900, 1899, 102, 92, 1897, 64, 30, 35,
	66, 10, 69, 84, 1896, 32, 1895, 4, 6, 11,
	1894, 1893, 1890, 1886, 1883, 1880, 1879, 85, 1877, 1866,
	59, 1862, 1849, 1842, 36, 1834, 1832, 1818, 138, 116,
	42, 155, 120, 9, 1809, 1807, 8, 1800, 119, 1794,
	57, 1789, 55, 1785, 1779, 56, 1767, 1762, 60, 1757,
	1750, 160, 1440, 2404, 1738, 152, 153, 48, 72, 1731,
	1726, 0, 1070, 165, 157, 1724, 1722,
}

var yyR1 = [...]int{
	0, 320, 320, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 86, 87, 87, 91, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 323, 323, 100, 100, 98, 98, 99, 99,
	166, 166, 12, 12, 12, 171, 171, 176, 176, 176,
	179, 179, 179, 179, 158, 159, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 294, 294,
	303, 303, 303, 304, 304, 302, 302, 302, 302, 302,
	306, 306, 307, 307, 305, 305, 305, 305, 309, 309,
	310, 310, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 297, 297, 297, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	312, 312, 313, 313, 314, 314, 315, 315, 315, 315,
	316, 316, 316, 316, 316, 317, 317, 317, 317, 317,
	317, 317, 318, 318, 319, 319, 2, 275, 275, 276,
	276, 277, 277, 277, 277, 278, 278, 279, 279, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 24,
	198, 198, 296, 296, 296, 296, 290, 290, 290, 292,
	292, 291, 291, 291, 293, 293, 298, 298, 298, 298,
	298, 300, 300, 300, 300, 300, 300, 301, 301, 301,
	299, 299, 47, 47, 48, 48, 48, 151, 151, 151,
	13, 13, 13, 13, 13, 19, 21, 21, 36, 36,
	37, 22, 22, 22, 22, 38, 38, 39, 25, 25,
	25, 25, 25, 25, 45, 45, 45, 44, 44, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 46,
	46, 41, 41, 40, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 26, 26, 26, 26,
	26, 26, 18, 274, 274, 274, 35, 35, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 51, 251, 252,
	252, 252, 252, 252, 252, 252, 252, 239, 239, 240,
	216, 216, 216, 216, 216, 216, 216, 216, 215, 215,
	215, 215, 219, 219, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 218, 218, 218, 218, 218, 218,
	218, 218, 220, 220, 220, 220, 220, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 222, 222, 222, 222, 222, 222, 222, 222,
	238, 238, 223, 223, 232, 232, 233, 233, 233, 230,
	230, 231, 231, 226, 227, 234, 228, 228, 228, 229,
	229, 229, 237, 237, 237, 237, 224, 241, 241, 261,
	261, 260, 260, 259, 259, 259, 250, 250, 256, 256,
	256, 256, 256, 256, 256, 245, 245, 245, 244, 244,
	246, 246, 249, 249, 258, 258, 257, 257, 242, 242,
	242, 262, 262, 262, 262, 262, 243, 243, 243, 243,
	263, 247, 247, 248, 248, 248, 268, 269, 267, 267,
	267, 267, 267, 115, 115, 115, 253, 253, 253, 254,
	254, 254, 255, 255, 255, 272, 272, 271, 271, 49,
	50, 54, 54, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 150, 150, 150,
	196, 196, 266, 264, 264, 265, 265, 15, 15, 52,
	52, 295, 295, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 270, 270, 270, 17, 17, 55, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 83, 185, 185, 184, 184, 183, 183, 183,
	186, 186, 186, 213, 213, 213, 57, 57, 61, 61,
	64, 64, 64, 62, 63, 27, 28, 28, 28, 28,
	29, 197, 197, 59, 59, 60, 60, 60, 60, 75,
	75, 325, 325, 58, 326, 66, 67, 67, 68, 68,
	68, 189, 189, 72, 72, 72, 70, 70, 70, 71,
	71, 77, 77, 81, 81, 81, 81, 80, 80, 80,
	80, 153, 153, 153, 154, 154, 155, 155, 155, 156,
	156, 157, 157, 157, 157, 157, 123, 123, 205, 205,
	205, 204, 204, 204, 204, 85, 85, 88, 88, 89,
	89, 89, 89, 92, 136, 136, 109, 109, 110, 110,
	110, 110, 110, 121, 121, 165, 165, 164, 164, 167,
	167, 90, 90, 90, 90, 95, 95, 96, 96, 97,
	97, 195, 195, 211, 211, 211, 101, 101, 101, 103,
	102, 102, 102, 102, 104, 104, 106, 107, 107, 105,
	105, 108, 111, 111, 111, 111, 112, 112, 82, 82,
	82, 82, 82, 82, 82, 182, 182, 114, 114, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 131,
	131, 131, 131, 131, 131, 116, 116, 116, 116, 116,
	116, 116, 76, 76, 132, 132, 132, 94, 93, 93,
	79, 79, 78, 78, 133, 133, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 324,
	324, 128, 127, 127, 127, 127, 127, 127, 73, 73,
	73, 73, 73, 212, 212, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 143, 143,
	74, 74, 141, 141, 142, 144, 144, 140, 140, 140,
	118, 118, 118, 118, 118, 118, 118, 118, 120, 120,
	120, 145, 145, 134, 134, 84, 146, 146, 147, 148,
	148, 149, 149, 152, 160, 160, 160, 161, 161, 161,
	161, 122, 122, 162, 162, 162, 117, 117, 117, 117,
	117, 117, 117, 163, 163, 163, 163, 168, 168, 135,
	135, 138, 138, 137, 139, 169, 169, 173, 173, 170,
	170, 174, 174, 174, 174, 177, 177, 178, 178, 178,
	175, 175, 175, 172, 172, 172, 208, 208, 208, 180,
	180, 190, 190, 187, 187, 188, 188, 181, 181, 225,
	225, 194, 194, 193, 193, 193, 191, 191, 191, 192,
	192, 206, 206, 202, 202, 207, 207, 203, 203, 209,
	209, 210, 210, 273, 273, 235, 235, 283, 283, 236,
	236, 284, 284, 286, 286, 281, 281, 282, 282, 285,
	285, 30, 287, 287, 288, 288, 289, 289, 289, 289,
	31, 32, 32, 32, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 321, 322,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	0, 3, 1, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 3, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 4, 8, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 3, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -320, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	277, -64, 280, 281, -325, -197, 216, 217, 20, 37,
	282, 284, 31, 32, 185, 233, 235, -5, -86, -6,
	8, 375, 132, 278, 165, 164, 26, 427, -321, 68,
	490, -148, 15, -66, -326, -66, -66, -66, -66, -66,
	-251, -195, 106, 68, 23, -192, 144, 87, 366, 140,
	-198, 229, 231, -190, -191, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 366, 140, 178, 177, 229,
	231, 141, -105, -209, 72, -200, 154, 438, 254, 424,
	241, 190, 277, 291, 293, 285, 320, 308, 425, 439,
	155, 211, 139, 306, 309, 353, 153, 244, 204, 267,
	440, 342, 348, 214, 280, 362, 441, 156, 208, 210,
	209, 198, 215, 36, 166, 304, 250, 297, 219, 193,
	442, 432, 295, 28, 188, 443, 350, 325, 253, 444,
	429, 248, 349, 300, 296, 137, 157, 151, 446, 326,
	330, 447, 354, 234, 448, 449, 450, 143, 240, 289,
	290, 451, 194, 356, 245, 324, 33, 152, 426, 48,
	175, 357, 38, 328, 37, 334, 452, 323, 318, 335,
	453, 454, 455, 456, 258, 256, 257, 259, 322, 288,
	317, 206, 53, 138, 332, 331, 333, 207, 352, 313,
	311, 457, 458, 249, 158, 459, 460, 298, 18, 461,
	462, 360, 169, 251, 252, 42, 463, 464, 465, 173,
	466, 467, 468, 351, 327, 329, 192, 469, 301, 148,
	470, 255, 264, 428, 238, 394, 358, 294, 472, 284,
	174, 168, 361, 273, 473, 217, 474, 475, 476, 160,
	477, 232, 231, 281, 265, 393, 282, 344, 212, 478,
	479, 480, 481, 202, 187, 364, 355, 52, 216, 339,
	482, 268, 287, 150, 218, 483, 242, 278, 43, 7,
	205, 246, 345, 266, 213, 203, 315, 176, 484, 485,
	302, 303, 321, 286, 316, 279, 179, 170, 262, 363,
	340, 430, 229, 310, 307, 182, 314, 486, 144, 487,
	183, 283, 359, 243, 305, 341, 141, 124, 309, 353,
	131, 343, 344, 350, -245, 351, 177, 180, -213, 141,
	-185, 342, 234, 255, 399, 183, 184, 142, 143, 33,
	355, 354, 346, -209, 145, 283, -75, 135, 171, -105,
	-46, 72, 218, -46, 30, 72, 72, 36, 72, 282,
	345, 345, 75, 428, 186, 21, -312, -293, 264, -311,
	-291, 132, 131, 10, 133, 269, 270, 271, 142, 8,
	31, 471, 159, 272, 273, 6, 163, 274, 275, 178,
	9, 276, -296, 74, 72, -200, -201, 395, 396, 397,
	398, 399, 412, 413, 414, 400, 401, 415, 416, 417,
	402, 403, 418, 419, 421, 422, 420, 181, 406, 405,
	404, 407, 408, 51, 410, 409, 411, 21, -312, -293,
	264, 6, -68, 5, -181, 146, 279, -87, -91, -211,
	-209, -201, 74, -3, -161, 17, 16, -72, 54, 55,
	-67, -80, 115, -82, -209, -113, 89, -119, 29, 72,
	-200, 24, -118, -201, -114, -140, -139, -94, 124, 125,
	126, 113, 114, 121, 90, 127, -126, -124, -125, -127,
	-129, -130, 74, 73, 82, 75, 76, 77, 78, 83,
	395, 396, 397, 398, 399, 412, 413, 414, 400, 401,
	415, 416, 417, 402, 403, 418, 419, 421, 422, 420,
	406, 405, 404, 407, 408, 410, 409, 411, 84, 85,
	-202, -137, -321, 58, 59, 171, 140, 376, 377, 378,
	379, 380, 423, 161, 384, 92, 47, 365, 374, 373,
	372, 370, 371, 367, 369, 368, 386, 387, 147, 366,
	119, 375, -181, -181, 11, -98, -99, -105, -108, -209,
	-170, 279, -177, -174, 354, 355, -175, -178, -172, -140,
	334, 467, 468, 353, 309, 352, -202, -209, -2, -5,
	6, -105, -252, -240, -243, -203, 156, -263, -202, -199,
	153, 72, -200, 247, 136, 162, 132, 88, 431, 23,
	25, 237, 337, 395, 91, 124, 396, 397, 398, 16,
	20, 92, 123, 81, 376, 186, 399, 131, 62, 392,
	367, 369, 365, 366, 343, 29, 10, 26, 164, 197,
	22, 117, 133, 95, 96, 97, 167, 269, 270, 24,
	165, 260, 85, 271, 161, 445, 19, 65, 11, 180,
	233, 13, 390, 391, 14, 230, 147, 146, 108, 195,
	142, 60, 8, 127, 27, 105, 56, 400, 401, 434,
	45, 185, 435, 58, 106, 17, 370, 371, 31, 423,
	402, 172, 436, 403, 119, 200, 63, 50, 236, 89,
	83, 34, 86, 66, 87, 15, 196, 61, 388, 239,
	261, 177, 471, 199, 437, 159, 107, 272, 134, 375,
	263, 235, 59, 140, 6, 385, 30, 163, 274, 406,
	405, 404, 407, 201, 57, 378, 379, 408, 275, 488,
	141, 94, 386, 387, 145, 178, 84, 5, 44, 32,
	9, 276, 64, 67, 372, 373, 374, 47, 51, 410,
	409, 411, 93, 12, 389, 427, 181, 142, -105, 375,
	-188, 147, -188, 178, 177, -188, -188, 141, 98, -52,
	-105, -295, -290, -296, -187, 147, -202, -187, -187, -187,
	-187, -187, -187, -187, -105, 128, -105, 72, 30, -186,
	106, 12, 366, 140, 141, 178, 144, -247, 11, 108,
	181, 181, 181, 182, 181, -184, 345, 347, 179, 348,
	349, 12, -83, 106, 19, -321, -161, -161, 72, 282,
	145, -60, -3, -11, -9, -10, -3, 98, 30, 30,
	74, 51, 30, -41, -40, -42, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 30, -274,
	68, -235, 334, 72, -287, -288, -105, 75, 75, 66,
	66, 69, 145, 69, 66, -313, 265, 68, -313, 231,
	265, 266, 203, 229, 144, -313, -313, 231, -313, -313,
	-313, -313, -313, 345, -313, -313, -313, 267, 268, -313,
	343, 144, -313, -313, -313, -313, -313, 71, 66, 69,
	255, 66, 11, 66, -66, -7, -5, -321, 21, 22,
	141, 358, 69, 23, -321, -322, 70, -162, 19, 31,
	-122, 75, 78, -149, -152, -82, -209, 50, -70, 21,
	22, 80, 11, -205, 88, 87, 105, -204, 23, 72,
	-200, -201, 74, 128, -82, -116, 108, 89, 106, 107,
	91, 110, 109, 120, 113, 114, 115, 116, 117, 118,
	119, 111, 112, 123, 98, 99, 100, 101, 102, 103,
	104, -182, -321, -94, -321, 129, 130, -119, -119, -119,
	-119, -119, -119, -119, -119, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -3, -133, -82, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-143, -82, -321, -324, -128, -321, -324, -128, -324, -128,
	-324, -321, -324, -128, -324, -128, -324, -324, -128, -324,
	-321, -321, -321, -321, -321, -321, -107, 27, -105, -85,
	-88, -89, -90, -109, -93, -321, -105, -94, -105, -98,
	-323, 69, 11, 67, -323, 69, 128, 69, -171, -176,
	356, 358, 279, -175, -175, -208, -202, 74, 29, 98,
	30, 128, -148, -66, 70, 69, -243, 156, 153, -215,
	-219, -221, -220, -222, -217, -218, 306, 309, 313, 311,
	307, 312, 124, 310, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 30, 166, 302, 303, 304,
	305, 326, 327, 328, 329, 330, 331, 332, 333, 285,
	308, 425, 286, 287, 288, 289, 290, 291, 293, 294,
	295, 296, 297, 298, 299, 300, 72, -201, -263, 68,
	-202, 23, 144, 72, 89, 72, 72, 72, -299, -298,
	-290, -293, -188, 72, 69, 145, 69, 145, 71, -98,
	24, 66, -100, -105, 72, 72, 72, 72, -292, -290,
	-293, -210, -209, -199, -186, 74, -82, -188, -188, -105,
	-105, -105, -105, -186, -186, -186, -183, 11, 108, 11,
	-183, -183, -82, -119, -290, 368, 115, 72, 72, 282,
	72, -41, -41, 74, -41, 69, 98, -41, 70, -133,
	-273, 489, 69, -289, 23, 358, 359, 335, -315, 141,
	180, 177, -315, -311, 273, -292, -291, -290, -313, -314,
	-202, -313, -313, -313, 345, -313, -313, -313, -313, -313,
	-313, -313, -313, -296, -315, 233, 69, -315, -292, -290,
	-72, -3, -105, 359, 360, -91, -93, -321, -163, -203,
	9, 108, 69, 18, 69, -160, 25, 26, 128, -120,
	51, 75, 78, -189, 49, -105, -82, -82, -131, 83,
	89, 84, 85, -204, 115, -210, -203, -199, -119, -132,
	-137, -94, 79, 108, 106, 107, 91, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -212, 72, 74, 72, -118, -118, -202, -70,
	-78, -81, 115, -82, -209, -78, -78, -70, -322, -322,
	-81, -78, -78, -78, -81, -78, -70, -70, -78, -322,
	-322, -322, -322, -78, -78, -78, -78, -70, -78, -78,
	-78, -70, -322, 69, -322, -3, -78, -78, -78, -322,
	-82, -82, -140, 74, -78, -140, 74, -78, -119, 381,
	382, 383, -78, -78, -70, -141, -142, 93, -140, -322,
	-119, -202, -202, -78, -79, -78, -78, -78, -166, 173,
	-105, 30, 69, -101, -103, -102, -104, 56, 60, 62,
	57, 58, 59, 63, -195, -85, -92, 47, -321, -110,
	173, -111, 23, -211, 64, 146, 65, -166, 67, -85,
	-105, -85, -108, -209, 115, -174, -177, 69, 357, 359,
	360, -171, -229, 123, 66, 86, -82, -203, -210, -161,
	-72, -253, -254, -255, -203, 74, 75, -240, -241, -242,
	-243, -256, 156, -262, 148, 150, 44, -244, 157, 142,
	45, -216, -230, 340, -223, 68, -223, -223, 314, 306,
	309, 307, -223, -223, -223, -223, -223, -228, 309, -228,
	-228, -228, -228, 307, 68, 68, -223, -223, -223, -232,
	68, -232, 301, -233, 68, -233, -233, -233, -233, -263,
	-263, -82, -206, 67, -158, -105, 24, -47, 190, 162,
	68, -294, 69, 29, -300, 230, -105, -105, -105, -290,
	-290, -296, -270, 160, 155, -105, 69, 69, 72, 72,
	-248, 11, 108, -186, -209, -209, -105, -121, 23, -186,
	-76, 167, 67, -324, -322, 72, -40, -118, 70, -106,
	27, 74, -288, -211, 334, 359, -316, 115, -202, -316,
	-319, 427, 145, 70, 69, -313, -316, 251, 233, -316,
	11, -70, -322, -54, -53, 136, 133, 134, 138, 139,
	-266, 337, 132, 174, -322, 69, 128, 52, -122, -122,
	-152, -180, 19, 11, 47, 47, -71, 57, 83, 84,
	85, 128, -321, -132, -119, -119, -119, -76, 88, -322,
	-78, 69, -322, 128, -322, -322, -78, -153, 388, -153,
	-322, -322, -322, -322, -322, -322, -78, -78, -322, -153,
	-153, -153, -153, -322, -322, -322, -322, -78, -322, -322,
	-322, -79, -82, -322, -322, -322, -322, 69, 67, 23,
	11, 11, -322, 11, 11, -322, -322, 11, -119, -119,
	-119, -322, -322, -78, -144, -142, 95, -82, -322, -322,
	69, 69, -322, -322, -322, -322, -117, 30, 47, -321,
	-3, -321, -169, -173, -140, -199, -88, -89, -89, -88,
	-89, 56, 56, 56, 61, 56, 61, 56, -102, -211,
	-322, -322, -136, 189, -321, 34, -211, -111, 142, 142,
	142, -112, 12, -85, -112, -112, 128, -176, -179, 361,
	358, 364, 72, 74, 128, -162, 69, -255, 98, -243,
	68, 72, -249, -201, 45, -244, 142, 45, -244, -249,
	72, -249, 45, 83, 89, -226, -227, -234, -237, -224,
	29, 66, 337, 148, 45, 44, 81, -231, 341, 75,
	-228, -228, -223, -223, -223, 314, -223, -228, -229, 30,
	-229, -229, -229, -229, -228, -238, 74, -238, 75, -232,
	75, 70, 66, -202, -3, 23, -48, 8, 9, 10,
	-275, -276, -277, 72, 108, 195, 196, -303, 263, -298,
	231, 240, 88, 16, 427, 145, 145, -105, -290, -112,
	72, 72, -183, -186, 34, -119, -293, 183, 184, -166,
	141, -289, 145, 128, 128, 145, 254, -292, -202, 11,
	11, 251, 11, -292, -189, 69, -196, -244, -272, -242,
	-243, -271, 149, 156, 157, -196, 156, 153, -244, 157,
	148, 149, -193, -244, 145, 23, -196, -196, -250, 98,
	-196, 173, 23, -203, -203, 53, -105, -77, -159, 115,
	-203, -79, -76, 88, -119, -322, -81, -154, -153, 115,
	-210, -154, -154, -322, -202, -321, -153, -154, -154, -153,
	-153, -153, -322, -322, -153, -154, -154, -154, -154, -322,
	-154, -154, -154, -322, -214, 124, 306, 166, 304, 297,
	324, 311, 339, 302, 340, -212, -214, -119, -119, -119,
	-119, -119, 11, 11, 11, 424, -148, 97, -82, 94,
	-119, -119, -168, 66, -169, -135, -138, -137, -321, -3,
	-322, -163, 6, 427, -167, -202, -112, 69, 98, 98,
	-96, -95, 66, 67, -97, 66, -95, 56, 56, -165,
	68, 69, -137, -321, -167, -119, -111, -321, -321, -321,
	-148, -82, -112, 358, 362, 363, -254, -255, -258, -257,
	-202, -201, 148, -262, 44, -262, -249, -249, 68, 83,
	-119, 9, 45, 45, 74, 70, -229, -229, -228, -223,
	-229, 72, 124, -229, 70, 69, 70, 69, 70, 69,
	-115, 443, 89, -105, -158, -158, 66, 70, 69, -215,
	72, 72, 72, -306, 427, 236, -304, -302, 242, 243,
	244, 245, 246, -293, 241, -300, 238, 74, 72, -105,
	-290, -186, -119, -228, -105, -292, 115, 115, -202, -292,
	251, -318, 427, -292, -292, 11, -292, -71, -53, 68,
	-239, 72, -201, -249, -191, 148, 72, 72, 72, -201,
	72, -201, -202, 45, 45, 72, -105, -202, -239, 72,
	-82, -202, -202, -93, 128, -112, 11, 69, -80, -322,
	-119, -154, 128, -154, -148, 173, -154, -154, -154, -322,
	-223, -223, -223, -233, -223, 290, -223, 290, -322, -322,
	19, 19, 19, 19, -322, -119, -119, -119, -321, -74,
	385, -82, 69, 69, 28, -168, 69, -322, -322, 47,
	-322, -322, 69, -148, -173, -82, -82, -82, 68, -82,
	-164, -202, 189, -322, -111, -195, -164, -164, -164, -161,
	70, 69, -223, -223, 45, -246, -244, -164, -125, -229,
	-228, 74, -228, 75, 75, 443, 68, -3, -105, -278,
	-279, -280, 81, 426, 89, 197, 198, 158, 199, 200,
	201, -277, -215, -215, -215, -309, -310, -308, 239, 260,
	261, 247, -307, -305, 256, 257, 258, 259, 88, 74,
	74, 74, -301, 230, 88, 239, 16, 23, -281, -184,
	-318, -318, 233, -292, -77, -239, -150, 161, 162, -215,
	-215, -206, -246, 45, 72, -194, 145, 23, 145, -150,
	-239, 30, 133, 27, -203, -145, 13, -85, -159, -159,
	115, -322, 16, -228, 72, -119, -119, -119, -119, -322,
	-322, -322, -119, -322, 74, -119, -119, 45, -138, -135,
	47, -3, -321, -202, -161, -164, 70, 69, -137, -110,
	-211, -322, -322, -322, -260, -259, 67, 152, 81, -257,
	-160, -160, -249, 70, -229, -229, 70, 70, -258, -158,
	19, -158, -280, 74, 201, 197, 201, 201, 201, 201,
	202, -297, 81, 237, -308, 248, 449, 232, 263, 75,
	75, 262, 31, 32, -305, 75, 75, 75, 75, -302,
	16, 427, -300, 238, 74, 74, -282, 38, -284, 39,
	-317, 23, -317, 251, 11, 70, 72, -216, -216, 68,
	-249, 68, 72, -202, -150, 29, 29, -321, -146, 14,
	16, -112, -80, -133, -322, -322, -322, -322, -73, 108,
	427, -322, -322, 9, -135, -3, 70, -202, -111, -259,
	72, -250, 74, 159, 70, 188, -20, -3, -9, -10,
	-11, -12, -14, -49, -15, -16, -21, -22, -17, -55,
	-56, -64, -62, -63, -59, -58, -25, -23, -26, -18,
	-27, -28, -29, -33, -34, -24, 92, 147, 219, 277,
	36, 36, 193, 194, 74, 74, 29, 249, 127, 29,
	75, 127, 392, 238, 74, 72, 239, -225, 146, -285,
	43, -283, -236, 42, 16, -290, -85, -258, -206, -258,
	-119, -264, -265, 173, -147, -82, -134, -84, -82, -145,
	-159, -148, -322, 425, 63, 428, -169, -322, 75, -105,
	-261, -260, 189, -158, -82, -82, 72, -45, -207, 222,
	223, 224, -203, -35, -20, 75, 29, 75, 29, 252,
	239, 23, -165, 75, -284, 16, -286, 40, 41, 74,
	427, -112, 70, 68, 70, -322, 69, -202, 69, -146,
	-155, 393, 394, 53, 426, 429, 68, -151, 191, 192,
	-36, -37, 93, 94, 220, 221, 225, -215, 69, 490,
	250, 250, 74, 38, 74, 16, 16, 231, -145, -261,
	-258, -261, -265, 47, -84, -322, -156, 91, -157, 262,
	392, -123, 75, 127, -156, 53, -164, -158, 72, 72,
	97, 95, -37, -82, -35, 19, 19, 19, 29, -203,
	97, -20, 74, 74, 29, 236, 21, -293, -146, 70,
	175, -157, 469, 445, 189, 469, 445, -118, 427, 70,
	-13, -19, -12, -9, -10, -11, 277, 92, -35, 94,
	490, -46, 75, -3, -44, -43, 75, -46, 227, 89,
	228, 72, -119, 253, -261, 176, 88, -202, 428, -268,
	-269, 66, -158, -35, 490, -35, 97, 95, -38, -39,
	96, -20, 69, 226, -293, -321, -157, 429, -269, 66,
	-268, 66, 10, 9, 490, 97, 490, 147, -35, 97,
	95, -39, -82, -43, -119, 172, -267, 160, 155, 158,
	30, -267, 97, 92, 490, 147, -35, 94, -322, -322,
	154, 29, 83, 97, 490, -35, 147, 97, 490, 147,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 684, 684, 684, 684, 684,
	684, 771, -2, 549, 0, 0, 0, 0, -2, 657,
	658, 659, 663, 664, 679, 681, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1077, 0, 682, 671, 672, 0, 0, 1558,
	2, 1017, 0, 693, 686, 0, 1077, 1077, 0, 0,
	86, 0, 0, 0, 772, 0, 0, 0, 1075, 1075,
	0, 1075, 1075, 0, 1090, 0, 1072, 1086, 1087, 1088,
	0, 0, 1073, 0, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 0, 606, 789, 1099, 1100, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 0, 0, 0, 650,
	0, 616, 617, 618, 0, 620, 0, 0, 0, 0,
	0, 630, 633, 637, 0, 1017, 1017, 495, 496, 497,
	654, 655, 644, 656, 0, 0, 0, 0, 0, 683,
	305, 307, 0, 327, 0, 330, 333, 1105, 665, 0,
	0, 1130, 1131, 0, 0, 0, 0, 0, 1444, 180,
	244, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	0, 182, 182, 182, 1455, 182, 0, 182, 182, 182,
	182, 182, 243, 232, 233, 234, 235, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 0, 0, 0,
	1444, 684, 0, 688, 0, 1078, 660, 44, 45, 0,
	773, 774, 775, 0, 1023, 0, 0, 696, 694, 695,
	685, 0, 707, 728, 0, 798, 0, 803, 805, -2,
	-2, 0, 846, 847, 848, 849, 850, 851, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 876, 877, 878,
	879, 880, 990, 991, 992, 993, 994, 995, 996, 997,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 807, 808,
	987, 1044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 949, 949, 949,
	949, 949, 949, 949, 949, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 68, 789,
	72, 1507, 0, 1049, -2, -2, 1051, 0, 0, 0,
	-2, -2, -2, -2, 1316, -2, 987, 0, 87, 1009,
	684, 88, 0, 369, 370, 0, 1329, 519, 1097, 1098,
	1318, 1093, 1094, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 587,
	0, 588, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 607, 608, 650, 610,
	0, 0, 1075, 1075, 0, 0, 0, 0, 521, 522,
	650, 650, 623, 650, 647, 0, 647, 627, 647, 645,
	646, 0, 632, 0, 0, 0, 640, 641, 666, 0,
	0, 673, 675, 676, 677, 678, 674, 0, 0, 0,
	309, 0, 0, 329, 311, 0, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 323, 324, 325, 0, 332,
	0, 1103, 1106, 670, 1121, 1122, 0, 1132, 1133, 186,
	186, 0, 0, 0, 0, 149, 182, 0, 151, 182,
	182, 182, 0, 182, 182, 158, 159, 182, 161, 162,
	163, 164, 165, 182, 167, 168, 169, 182, 182, 172,
	182, 182, 175, 176, 177, 178, 179, 242, 186, 0,
	0, 186, 0, 0, 693, 41, 51, 0, 689, 690,
	0, 0, 0, 0, 0, 50, 1559, 36, 0, 0,
	1018, 1021, 1022, 1010, 1011, 1014, 0, 0, 691, 697,
	698, 687, 0, 708, 0, 0, 0, 729, 0, 731,
	732, 733, 734, 0, 801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 826, 827, 828, 829, 830,
	831, 804, 0, 818, 0, 0, 0, 867, 868, 869,
	870, 871, 872, 873, 0, 696, 0, 0, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	0, 0, 0, 696, 0, 0, 844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	0, 979, 0, 932, 941, 0, 933, 942, 934, 943,
	935, 0, 936, 944, 937, 945, 938, 939, 946, 940,
	0, 0, 0, 840, 0, 0, 70, 0, 788, 0,
	735, 737, 738, 739, -2, 0, 792, 838, -2, 0,
	0, 0, 62, 63, 0, 0, 0, 0, 73, 75,
	0, 0, 1507, 1052, 1053, 469, 1066, 1067, 1068, 0,
	1064, 0, 1017, 693, 536, 0, 371, 0, 0, 380,
	459, 389, 390, 391, 452, 393, 452, 452, 0, 452,
	452, 452, 452, 452, 466, 466, 466, 466, 466, 435,
	436, 437, 438, 439, 0, 0, 412, 452, 452, 452,
	416, 442, 443, 444, 445, 446, 447, 448, 449, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 454,
	454, 456, 456, 456, 456, 456, 0, 0, 518, 0,
	1091, 84, 0, 92, 0, 93, 0, 0, 98, 260,
	246, 97, 0, 231, 0, 0, 0, 0, 237, 602,
	1074, 0, 595, 64, 596, 597, 598, 599, 600, 239,
	601, 790, 1101, 1102, 609, 651, 652, 0, 0, 613,
	614, 615, 523, 621, 622, 629, 650, 0, 0, 0,
	753, 650, 631, 832, 634, 949, 0, 668, 667, 0,
	680, 306, 308, 310, 328, 0, 0, 331, 334, 0,
	0, 0, 0, 1124, 0, 1126, 1128, 0, 0, 187,
	188, 189, 0, 181, 0, 204, 245, 0, 150, 0,
	184, 152, 153, 154, 182, 156, 157, 160, 166, 170,
	171, 173, 174, 241, 0, 0, 0, 0, 147, 0,
	696, 0, 0, 661, 662, 46, 47, 0, 0, 1033,
	1024, 0, 0, 0, 0, 1013, 1015, 1016, 0, 0,
	998, 0, 0, 699, 692, 38, 799, 800, 802, 819,
	0, 821, 823, 730, 709, 0, 988, -2, 809, 810,
	834, 835, 836, 0, 0, 0, 0, 832, 814, 0,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 866, 963, 964, 0, 864, 865, 874, 0,
	0, 842, 703, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 837, 0, 1043, 0, 0, 0, 0, 914,
	0, 0, 849, 990, 0, 849, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 985, 982, 0, 0, 950,
	0, 0, 0, 0, 0, 841, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 0, 0, 776, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	1431, 748, 0, 792, 0, 0, 0, 796, 0, 796,
	67, 796, 69, 0, 791, 1050, 0, 0, 0, 78,
	79, 74, 1054, 0, 1060, 1061, 1062, 988, 0, 1023,
	696, 368, 537, 539, 542, 543, 544, 372, 374, 375,
	376, 0, -2, 510, 1441, 1485, -2, 502, 1358, -2,
	-2, 379, 461, 460, 392, 0, 466, 466, 452, 452,
	452, 452, 421, 466, 424, 427, 428, 469, 0, 469,
	469, 469, 469, 466, 0, 0, 413, 414, 415, 404,
	0, 405, 454, 407, 0, 408, 409, 410, 411, 516,
	517, 0, 0, 0, 0, 0, 1076, 0, 262, 263,
	207, 100, 0, 0, 247, 0, 367, 0, 589, 0,
	591, 236, 593, 603, 604, 594, 0, 0, 611, 612,
	796, 0, 0, 624, 648, 649, 647, 650, 0, 628,
	642, 0, 0, 635, 0, 669, 312, 313, 335, 70,
	0, 1104, 1123, 0, 1127, 1129, 0, 190, 192, 0,
	141, 0, 0, 183, 0, 155, 0, 0, 0, 0,
	0, 691, 52, 550, 551, -2, 580, 1083, 580, 580,
	568, 486, 580, 0, 0, 0, 0, 0, 1019, 1020,
	1012, 0, 1069, 1070, 999, 1000, 85, 700, 820, 822,
	824, 0, 840, 811, 832, 815, 0, 812, 0, 806,
	0, 0, 714, 0, 714, 714, 0, 900, 0, 901,
	0, 714, 714, 0, 0, 0, 0, 0, 0, 907,
	908, 909, 910, 714, 714, 714, 714, 0, 714, 714,
	714, 0, 845, -2, 911, 912, 913, 0, 0, 0,
	0, 0, 956, 0, 0, 957, 922, 0, 0, 0,
	0, 0, 928, 1009, 0, 983, 0, 0, 931, 951,
	0, 0, 952, 953, 954, 955, 1037, 0, 0, 0,
	1028, 0, 796, 1045, 0, 0, 736, 767, 769, 0,
	764, 777, 778, 780, 0, 782, 0, 784, 785, 755,
	742, 839, 743, 0, 0, 0, 792, 752, 0, 0,
	0, 1009, 0, 796, 60, 61, 0, 76, 77, 0,
	0, 83, 470, 471, 0, 206, 0, 540, 0, 373,
	0, 503, 0, 0, 488, 502, 498, 499, 502, 493,
	503, 494, 0, 381, 0, 383, 384, 385, 386, 387,
	0, 0, 465, 0, 473, 475, 0, 388, 462, 0,
	469, 469, 466, 419, 420, 452, 425, 469, 429, 0,
	430, 431, 432, 433, 469, 0, 450, 0, 0, 406,
	0, 533, 0, 1092, 84, 84, 0, 264, 265, 266,
	0, 208, 209, 0, 0, 0, 0, 110, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 65, 240, 619,
	524, 525, 650, 626, 0, 833, 636, 638, 639, 466,
	0, 1125, 0, 0, 0, 0, 0, 202, 185, 0,
	0, 0, 0, 148, 699, 0, 0, 502, 0, 569,
	570, 0, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 1085, 0, 0, 0, 487,
	0, 0, 0, 1035, 1034, 1025, 37, 796, 0, 710,
	989, 0, 813, 0, 816, 714, 843, 885, 715, 705,
	0, 886, 887, 714, 711, 1009, 902, 889, 890, 903,
	904, 905, 714, 714, 906, 894, 893, 892, 895, 714,
	898, 897, 899, 881, 0, 452, 452, 968, 452, 456,
	971, 452, 973, 452, 976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 980, 930, 986, 0,
	0, 0, 53, 0, 1037, 1026, 1039, 1041, 0, 0,
	0, 0, -2, 1296, 0, 759, 1009, 0, 0, 0,
	761, 768, 0, 0, 762, 0, 763, 781, 783, 740,
	0, 0, 744, 0, 0, -2, 751, 0, 0, 0,
	1017, 797, 59, 80, 81, 82, 538, 541, 0, 504,
	452, 452, 0, 508, 500, 509, 490, 492, 0, 382,
	463, 0, 472, 474, 476, 453, 417, 418, 469, 426,
	422, 467, 468, 434, 466, 0, 466, 0, 457, 0,
	520, 534, 0, 0, 90, 0, 0, 215, 0, 211,
	0, 0, 0, 118, 0, 101, 102, 103, 105, 106,
	0, 0, 0, 99, 0, 249, 0, 252, 253, 590,
	592, 625, 754, 1115, 786, 202, 191, 193, 194, 202,
	205, 142, 0, 143, 145, 0, 144, 85, 552, 0,
	577, 0, 0, 1091, 500, 0, -2, 555, 560, 561,
	562, 563, 564, 0, 575, 0, 557, 0, 577, 0,
	572, 0, 0, 48, 0, 1001, 0, 85, 85, 882,
	817, 884, 0, 888, 0, 0, 883, 891, 896, 915,
	965, 466, 969, 970, 972, 974, 975, 977, 917, 916,
	0, 0, 0, 0, 923, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 0, 54, 0, 1042, -2, 0,
	0, 71, 0, 1017, 1046, 1047, 1048, 765, 0, 770,
	0, 757, 0, 792, 749, 0, 0, 0, 0, 58,
	478, 0, 1014, 1014, 489, 502, 501, 0, 464, 423,
	469, 451, 469, 0, 0, 535, 0, 84, 0, 84,
	216, 217, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 210, 212, 213, 214, 136, 119, 120, 0, 0,
	0, 0, 111, 112, 0, 0, 0, 0, 0, 107,
	108, 109, 248, 0, 0, 251, 0, 0, 1117, 1111,
	195, 195, 0, 146, 0, 0, 554, 578, 0, 380,
	380, 0, 502, 0, 571, 0, 1081, 1082, 0, 566,
	577, 0, 0, 0, 1036, 1006, 0, 796, 0, 701,
	706, 712, 0, 966, 967, 0, 0, 0, 0, 924,
	925, 926, 958, 929, 981, 0, 0, 0, 1040, 1027,
	0, 1031, 0, 760, 57, 0, 756, 0, 745, 747,
	792, 793, 794, 795, 477, 481, 0, 486, 0, 505,
	506, 507, 491, 0, 440, 441, 455, 458, 0, 91,
	0, 0, 218, 219, 220, 221, 223, 224, 0, 0,
	0, 96, 0, 0, 121, 0, 0, 0, 0, 131,
	132, 133, 134, 135, 113, 114, 115, 116, 117, 104,
	0, 0, 250, 0, 255, 256, 1079, 1119, -2, 0,
	139, 0, 140, 203, 0, 553, 579, 377, 378, 0,
	1091, 0, 556, 565, 567, 0, 574, 0, 42, 0,
	0, 1001, 85, 1009, 918, 920, 919, 921, 0, 0,
	0, 947, 948, 0, 1030, 0, 766, 758, 750, 482,
	483, 0, 485, 0, 479, 0, 84, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 359, 360,
	361, 362, 363, 364, 365, 366, 0, 0, 0, 0,
	225, 226, 227, 228, 137, 138, 122, 123, 0, 125,
	126, 0, 0, 0, 258, 0, 254, 755, 0, 1111,
	0, 1113, 0, 1110, 0, 196, 796, 0, 0, 0,
	573, 0, 583, 0, 1007, 1008, 1002, 1003, 1005, 1006,
	702, 716, 927, 0, 0, 0, 1038, -2, 484, 0,
	89, 480, 267, 95, 0, 0, 1093, 0, 0, 294,
	295, 296, 1095, 0, 336, 0, 127, 0, 129, 130,
	257, 0, 35, 0, 1118, 0, 1116, 0, 0, 1112,
	0, 1001, 479, 0, 479, 582, 0, 0, 0, 43,
	0, 0, 0, 959, 0, 962, 0, 84, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 292, 0, 0,
	124, 128, 259, 1080, 1120, 0, 0, 0, 1006, 558,
	0, 576, 584, 0, 1004, 713, 717, 0, 720, 0,
	0, 0, 726, 0, 718, 960, 0, 0, 268, 269,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 1096,
	229, 337, 1114, 1108, 197, 198, 199, 201, 40, 479,
	0, 0, 721, 722, 723, 724, 725, 0, 0, 511,
	84, 270, 271, 272, 273, 274, 0, 276, 0, 0,
	0, 288, 289, 290, 0, 297, 299, 300, 301, 0,
	303, 304, 293, 0, 559, 0, 0, 727, 0, 512,
	513, 0, 94, 0, 0, 0, 0, 0, 0, 285,
	0, 291, 0, 302, 200, 0, 719, 961, 514, 0,
	515, 0, 0, 0, 0, 0, 280, 281, 0, 0,
	0, 286, 0, 298, 0, 0, 526, 528, 529, 0,
	0, 527, 275, 277, 0, 283, 0, 0, 585, 586,
	530, 531, 532, 0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:470
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:523
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:530
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:536
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:554
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:576
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:596
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:606
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:616
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:622
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:634
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:713
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:717
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:727
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:734
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:761
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:767
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:779
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:784
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:789
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:809
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:818
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:826
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:842
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:846
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:850
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:869
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:887
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:891
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:911
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:932
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:946
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:969
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:983
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:993
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:997
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1046
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1061
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1066
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1070
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1074
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1080
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1085
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1093
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1097
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1131
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1143
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1233
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1242
		{
			yyVAL.strs = nil
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1261
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantAssumption = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1338
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1357
		{
			yyVAL.procedureParams = nil
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1361
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1367
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.characteristics = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1414
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1418
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1422
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1456
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1561
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1569
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1575
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1587
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1591
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1595
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1601
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1609
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1672
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1678
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1682
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1698
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1704
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1709
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1714
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1720
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1738
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1744
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1789
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1853
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1946
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2004
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2020
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2047
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2445
		{
			yyVAL.sqlVal = nil
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2454
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2458
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2476
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2503
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.colKeyOpt = colKey
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2571
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2575
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2580
		{
			yyVAL.indexOptions = nil
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2594
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2629
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2637
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2654
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = yyDollar[1].str
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2736
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 512:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2740
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 513:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2744
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2748
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2752
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2776
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.boolean = true
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.boolean = false
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = string("")
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2916
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2933
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2939
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2946
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2957
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2966
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 559:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2970
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2998
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3002
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3009
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3031
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3044
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3052
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3059
		{
			yyVAL.columnOrder = nil
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
		}
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3078
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3094
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3098
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3118
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3126
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3130
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3136
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3144
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3148
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3156
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3164
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3172
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3180
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3188
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3196
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3205
		{

		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3219
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3234
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3239
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3247
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3251
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3255
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3259
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3263
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3279
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3283
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3287
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3291
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3299
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3303
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3308
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3317
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3321
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3329
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3347
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3352
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3356
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3389
		{
			yyVAL.boolean = false
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.boolean = true
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3423
		{
			yyVAL.showFilter = nil
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3427
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = SessionStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = GlobalStr
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.statement = &Begin{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3471
		{
			yyVAL.statement = &Begin{}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3479
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.statement = &Commit{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.statement = &Rollback{}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3507
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3511
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3515
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3564
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3569
		{
			setAllowComments(yylex, true)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3573
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3579
		{
			yyVAL.bytes2 = nil
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3589
		{
			yyVAL.str = UnionStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = UnionAllStr
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = UnionDistinctStr
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.byt = 0
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.byt = 1
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = SQLCacheStr
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = DistinctStr
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = StraightJoinHint
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3706
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 713:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3710
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3716
		{
			yyVAL.over = nil
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.over = yyDollar[1].over
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3725
		{
			yyVAL.frame = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3816
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3866
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3898
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3904
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3909
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3924
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3928
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.expr = nil
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.columns = nil
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3993
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3997
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4001
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4005
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4013
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4017
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4023
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = JoinStr
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = JoinStr
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.str = JoinStr
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = StraightJoinStr
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = LeftJoinStr
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = LeftJoinStr
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = RightJoinStr
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = RightJoinStr
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.str = NaturalJoinStr
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4117
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.indexHints = nil
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4132
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4136
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4140
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4145
		{
			yyVAL.expr = nil
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4171
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4179
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = ""
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4209
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4213
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4217
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4221
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4225
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4229
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4233
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4237
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = IsNullStr
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = IsNotNullStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = IsTrueStr
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = IsNotTrueStr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = IsFalseStr
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = IsNotFalseStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = EqualStr
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = LessThanStr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = GreaterThanStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.str = LessEqualStr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = GreaterEqualStr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = NotEqualStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.expr = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.selectExprs = nil
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4453
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4457
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4473
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4487
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4491
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4519
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4537
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4541
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4545
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4553
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4557
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4626
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4669
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 918:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 924:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4713
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 927:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 929:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4781
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4799
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = ""
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = BooleanModeStr
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = QueryExpansionStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4896
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4916
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4942
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = nil
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4960
		{
			yyVAL.str = string("")
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4964
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4974
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4980
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4985
		{
			yyVAL.expr = nil
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4995
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4999
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5003
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5033
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &NullVal{}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5056
		{
			yyVAL.exprs = nil
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5060
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5070
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5081
		{
			yyVAL.expr = nil
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5096
		{
			yyVAL.orderBy = nil
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5100
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5106
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5110
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5116
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			yyVAL.str = AscScr
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.str = AscScr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.str = DescScr
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5134
		{
			yyVAL.limit = nil
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5138
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5142
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5146
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5161
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5165
		{
			yyVAL.str = ForUpdateStr
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5169
		{
			yyVAL.str = ShareModeStr
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5182
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5186
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5199
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5203
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5207
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5222
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5226
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5231
		{
			yyVAL.assignExprs = nil
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5235
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5245
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5255
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5261
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5267
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5281
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5287
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5300
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5317
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5330
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5343
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5349
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5373
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5388
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &Default{}
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5412
		{
			yyVAL.byt = 0
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.byt = 1
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5417
		{
			yyVAL.byt = 0
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			yyVAL.byt = 1
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5422
		{
			yyVAL.byt = 0
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5424
		{
			yyVAL.byt = 1
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = ""
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = IgnoreStr
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5432
		{
			yyVAL.sqlVal = nil
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5434
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.empty = struct{}{}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.empty = struct{}{}
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5443
		{
			yyVAL.empty = struct{}{}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.empty = struct{}{}
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.empty = struct{}{}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = UniqueStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.str = FulltextStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = SpatialStr
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = ""
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5463
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5465
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5483
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5512
		{
			yyVAL.str = string("")
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5517
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.EnclosedBy = nil
		}
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5526
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5531
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.sqlVal = nil
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5544
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5549
		{
			yyVAL.sqlVal = nil
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5553
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5558
		{
			yyVAL.Fields = nil
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5562
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5567
		{
			yyVAL.Lines = nil
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5571
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.sqlVal = nil
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5580
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5586
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5596
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5602
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5606
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.lockType = LockRead
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5616
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			yyVAL.lockType = LockWrite
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5624
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5630
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5636
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5640
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5644
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6107
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
