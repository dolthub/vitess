// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetDefOpt            *Charset
	collateDefOpt            *Collate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824
const NVAR = 57825
const PASSWORD_LOCK = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1052,
	-1, 43,
	147, 1116,
	148, 1134,
	-2, 231,
	-1, 49,
	186, 685,
	187, 685,
	-2, 675,
	-1, 547,
	135, 1144,
	-2, 1138,
	-1, 548,
	135, 1145,
	-2, 1139,
	-1, 652,
	98, 1422,
	135, 1422,
	-2, 1100,
	-1, 653,
	98, 1540,
	135, 1540,
	-2, 1101,
	-1, 658,
	98, 1446,
	135, 1446,
	-2, 1102,
	-1, 659,
	98, 1493,
	135, 1493,
	-2, 1103,
	-1, 660,
	98, 1494,
	135, 1494,
	-2, 1104,
	-1, 661,
	98, 1372,
	135, 1372,
	-2, 1108,
	-1, 663,
	98, 1470,
	135, 1470,
	-2, 1110,
	-1, 1175,
	1, 782,
	5, 782,
	12, 782,
	13, 782,
	14, 782,
	15, 782,
	17, 782,
	19, 782,
	30, 782,
	31, 782,
	56, 782,
	57, 782,
	58, 782,
	59, 782,
	60, 782,
	62, 782,
	63, 782,
	66, 782,
	67, 782,
	69, 782,
	70, 782,
	405, 782,
	503, 782,
	-2, 814,
	-1, 1181,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1426,
	135, 1147,
	-2, 1143,
	-1, 1592,
	44, 534,
	-2, 1384,
	-1, 1596,
	68, 532,
	72, 532,
	-2, 1416,
	-1, 1597,
	68, 534,
	-2, 1334,
	-1, 1600,
	68, 530,
	72, 530,
	-2, 1252,
	-1, 1601,
	68, 531,
	72, 531,
	-2, 1262,
	-1, 1722,
	44, 577,
	154, 579,
	156, 577,
	157, 577,
	-2, 612,
	-1, 1796,
	5, 51,
	-2, 880,
	-1, 2102,
	69, 1309,
	70, 1309,
	135, 1309,
	-2, 716,
	-1, 2125,
	1, 835,
	5, 835,
	12, 835,
	13, 835,
	14, 835,
	15, 835,
	17, 835,
	19, 835,
	30, 835,
	31, 835,
	56, 835,
	57, 835,
	58, 835,
	59, 835,
	60, 835,
	62, 835,
	63, 835,
	66, 835,
	67, 835,
	69, 835,
	70, 835,
	405, 835,
	503, 835,
	-2, 814,
	-1, 2236,
	154, 580,
	-2, 578,
	-1, 2297,
	5, 51,
	-2, 1072,
	-1, 2502,
	41, 1154,
	-2, 1152,
	-1, 2638,
	5, 51,
	-2, 1075,
}

const yyPrivate = 57344

const yyLast = 34668

var yyAct = [...]int{
	614, 80, 2833, 2783, 2798, 2797, 2807, 2641, 1645, 2655,
	2785, 2044, 2654, 2620, 2309, 419, 2687, 2522, 2680, 2555,
	7, 550, 2702, 2554, 6, 2553, 5, 2625, 2556, 8,
	2618, 2409, 2449, 2685, 2552, 3, 2502, 870, 2139, 2119,
	1831, 1130, 2018, 1861, 2027, 2095, 1212, 1643, 1550, 613,
	1544, 1602, 1882, 1659, 539, 677, 2390, 83, 2504, 1584,
	1404, 2367, 2361, 2196, 2140, 1548, 1302, 2345, 402, 405,
	2642, 465, 2096, 1888, 2220, 2026, 93, 1593, 902, 1951,
	2230, 80, 1832, 450, 2111, 2092, 566, 1583, 675, 1745,
	553, 532, 1582, 1721, 2104, 106, 1397, 1634, 2066, 1523,
	1451, 548, 1685, 672, 444, 444, 1412, 1460, 1304, 1347,
	1589, 1462, 1527, 1282, 1996, 531, 1301, 1939, 1630, 1192,
	1028, 1320, 654, 886, 1889, 1534, 1572, 1428, 1928, 1172,
	1517, 1701, 1171, 1175, 1035, 931, 1146, 952, 1031, 671,
	555, 1191, 646, 650, 535, 651, 1048, 464, 1352, 127,
	1647, 422, 127, 930, 421, 673, 1183, 1147, 127, 643,
	2037, 2855, 2851, 2841, 857, 2823, 2821, 2802, 447, 447,
	2778, 2710, 82, 1345, 2481, 1039, 2175, 462, 2335, 2346,
	869, 127, 657, 414, 2814, 2696, 2796, 2348, 85, 69,
	2479, 2636, 127, 1672, 2766, 1672, 127, 680, 2671, 541,
	127, 2193, 2494, 2695, 2087, 2482, 2598, 2621, 1767, 2291,
	856, 2135, 2136, 1700, 127, 447, 36, 680, 36, 437,
	2036, 431, 442, 425, 2536, 127, 87, 88, 89, 90,
	91, 36, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1064, 432, 1962, 1074, 36, 118, 114,
	115, 2134, 116, 1569, 1570, 1870, 1021, 2434, 1869, 1546,
	1568, 1871, 2351, 1393, 1394, 1193, 859, 1194, 862, 863,
	36, 1826, 72, 39, 40, 72, 39, 40, 81, 2635,
	81, 1368, 1605, 667, 120, 119, 890, 891, 1827, 980,
	893, 413, 412, 81, 905, 1351, 988, 41, 1604, 416,
	2349, 2350, 2352, 2353, 2354, 906, 907, 1911, 627, 81,
	633, 635, 634, 631, 632, 630, 629, 628, 1349, 1350,
	1348, 2691, 454, 892, 1699, 2691, 949, 1619, 1943, 2327,
	2328, 1624, 81, 1619, 2278, 2276, 121, 2686, 122, 1729,
	1723, 1724, 109, 1722, 1725, 1726, 1332, 396, 1618, 2067,
	1606, 424, 423, 426, 411, 2688, 461, 1610, 1612, 2688,
	1611, 430, 1631, 1993, 1649, 1389, 1388, 1387, 1386, 964,
	1385, 1384, 551, 984, 985, 1957, 1902, 1985, 434, 1730,
	2692, 455, 438, 2791, 2692, 99, 2362, 912, 2507, 1606,
	2069, 1907, 1906, 2219, 2365, 1990, 441, 2203, 2480, 80,
	80, 1712, 2368, 2369, 2370, 2371, 2420, 2712, 2363, 2364,
	2711, 1961, 2661, 1903, 2602, 2379, 2386, 2476, 920, 1713,
	1379, 2718, 922, 1959, 921, 1660, 2377, 2707, 1909, 2811,
	1895, 112, 2473, 919, 923, 2474, 1896, 915, 2472, 2659,
	2705, 2706, 2471, 2592, 101, 2470, 962, 1952, 98, 2468,
	2469, 1654, 467, 2732, 111, 110, 2588, 2589, 1017, 2699,
	2700, 2197, 2198, 2199, 2200, 2201, 1025, 2643, 2794, 2311,
	127, 903, 1852, 904, 906, 907, 899, 900, 1653, 913,
	914, 2550, 995, 1953, 117, 996, 406, 427, 428, 429,
	435, 1358, 439, 440, 443, 397, 107, 1976, 1977, 901,
	898, 1905, 2194, 897, 1908, 987, 108, 2761, 2197, 2198,
	2199, 2200, 2201, 2600, 127, 2498, 2206, 1353, 113, 964,
	861, 860, 889, 2548, 403, 2780, 399, 2847, 407, 2391,
	2392, 2071, 103, 1211, 104, 1211, 2075, 2347, 2070, 2004,
	2068, 1211, 2002, 2174, 1210, 2073, 2235, 1083, 2594, 415,
	1085, 2856, 1355, 1728, 2853, 1354, 2537, 2842, 2072, 1002,
	2774, 400, 2837, 2604, 2221, 127, 1706, 460, 1960, 2402,
	2824, 963, 1333, 2074, 2076, 1954, 1955, 858, 2477, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1633, 1918, 1128, 1012, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 2495, 1145, 1148, 1148,
	1148, 1154, 1148, 1148, 1154, 1148, 1154, 1163, 1164, 1165,
	1166, 1023, 1176, 1051, 545, 1014, 1036, 1016, 1351, 1129,
	79, 1609, 79, 2689, 2634, 73, 1055, 2689, 73, 1619,
	1648, 1520, 1184, 916, 2450, 79, 964, 2660, 2593, 1963,
	872, 1349, 1350, 404, 960, 404, 997, 2401, 2452, 404,
	100, 79, 2599, 109, 2497, 2205, 2789, 974, 1008, 2784,
	1084, 1984, 1170, 2835, 1275, 433, 2836, 2143, 2834, 1981,
	1904, 2015, 1211, 2787, 79, 1965, 2004, 1964, 1707, 1290,
	1007, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1013, 1553,
	1555, 1887, 1288, 1887, 917, 1205, 1131, 1859, 1858, 1857,
	854, 1979, 1020, 864, 368, 1805, 2261, 1144, 1887, 1887,
	1802, 657, 127, 127, 127, 2253, 657, 1983, 971, 2405,
	1887, 1086, 1087, 1982, 1669, 2451, 959, 1874, 680, 1668,
	1866, 1762, 1750, 1271, 1735, 1149, 1151, 1153, 1155, 1157,
	1159, 1160, 1162, 1196, 2597, 1209, 1407, 1892, 1197, 1204,
	1189, 1054, 1179, 882, 2340, 2182, 1150, 1152, 1064, 1156,
	1158, 1074, 1161, 1941, 1573, 111, 110, 2181, 1074, 2164,
	2619, 1187, 1182, 2215, 1564, 2400, 969, 1554, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	1330, 2733, 2734, 888, 1886, 2416, 1886, 2631, 2630, 2014,
	2010, 2002, 970, 2011, 966, 2007, 467, 404, 2006, 2009,
	2021, 1886, 1886, 2341, 2183, 1528, 2786, 2788, 2002, 871,
	96, 2484, 1211, 1886, 1400, 2003, 2004, 1206, 2165, 2406,
	1086, 1087, 2730, 2731, 1321, 1086, 1087, 1047, 967, 968,
	2019, 965, 972, 973, 975, 976, 977, 978, 979, 1284,
	981, 982, 983, 1435, 986, 2485, 989, 990, 991, 992,
	993, 1553, 1555, 1676, 1940, 895, 1303, 96, 1433, 1434,
	1432, 444, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1064, 1052, 2109, 1074, 887, 444, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 1283,
	2108, 1074, 1067, 1068, 1069, 1070, 1071, 1064, 1306, 908,
	1074, 1340, 95, 1063, 1062, 1072, 1073, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 1202, 680, 1074, 1045, 1686,
	924, 1322, 865, 2089, 447, 447, 874, 875, 876, 877,
	878, 879, 880, 127, 2764, 1047, 127, 2840, 1328, 1554,
	94, 447, 447, 2775, 127, 2827, 2808, 2826, 1027, 1343,
	1677, 1518, 896, 127, 127, 127, 127, 1518, 444, 1817,
	1309, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 1307,
	2703, 1074, 2742, 447, 2741, 1405, 1406, 1277, 80, 2378,
	1326, 1316, 1317, 1318, 1319, 1324, 2372, 1325, 1361, 1285,
	2848, 1292, 1377, 910, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 2151, 1270, 1074, 1800,
	459, 1799, 1391, 1042, 1310, 1311, 1934, 1046, 1045, 1131,
	81, 447, 447, 447, 2844, 2754, 680, 1383, 2664, 1046,
	1045, 1431, 1801, 1046, 1045, 1047, 1359, 1046, 1045, 1335,
	1336, 2740, 2656, 1338, 2849, 1398, 80, 1047, 1747, 1748,
	1749, 1047, 2657, 1046, 1045, 1047, 447, 1046, 1045, 1341,
	2777, 447, 447, 2595, 2704, 2753, 1356, 1429, 1455, 1456,
	1426, 1047, 1360, 1357, 1425, 1047, 1382, 1046, 1045, 2639,
	1129, 2492, 127, 2703, 127, 1046, 1045, 680, 1046, 1045,
	2491, 1032, 2091, 1132, 1033, 1047, 1046, 1045, 2658, 640,
	641, 1409, 2490, 1047, 1378, 127, 1047, 1381, 2489, 2596,
	2483, 1051, 2715, 2338, 1047, 2339, 2713, 1415, 1416, 1390,
	1418, 1420, 1421, 1424, 2334, 1410, 1419, 1498, 1411, 2333,
	1395, 2179, 1452, 2180, 1453, 1027, 1933, 1547, 1931, 1912,
	1872, 1556, 1873, 2670, 1176, 955, 954, 928, 1176, 2591,
	2590, 2547, 2499, 1026, 2467, 2430, 1422, 680, 1430, 2375,
	2374, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 2373,
	927, 1129, 1470, 2331, 2226, 2157, 1929, 1475, 571, 570,
	573, 574, 575, 576, 680, 680, 1696, 572, 577, 1504,
	1507, 1337, 1308, 2739, 1559, 2601, 1519, 2545, 1561, 2516,
	1892, 2510, 2398, 2264, 1131, 1306, 2249, 2245, 1502, 1503,
	1552, 2237, 1543, 2207, 2191, 1536, 1539, 1540, 1541, 1537,
	1426, 1538, 1542, 2190, 1577, 2112, 2113, 2189, 673, 1970,
	127, 1291, 1458, 1969, 1690, 1674, 1466, 1673, 127, 1454,
	127, 657, 1334, 1331, 1300, 127, 127, 1477, 1478, 127,
	127, 127, 1299, 1809, 1557, 1298, 1297, 1579, 1286, 1271,
	1490, 1280, 1279, 1278, 1494, 1276, 950, 884, 410, 680,
	680, 408, 1590, 1578, 1576, 2441, 2767, 1179, 1515, 2320,
	2760, 2677, 1027, 2509, 1179, 2320, 2675, 2461, 1179, 1666,
	1154, 1562, 994, 1598, 1566, 2460, 1565, 1571, 2320, 2673,
	2320, 2549, 2441, 2541, 2441, 2457, 2441, 1027, 1587, 2441,
	2440, 1580, 1027, 2320, 2319, 2186, 1664, 1665, 1640, 1641,
	2301, 1027, 1692, 1636, 1637, 1638, 1639, 1734, 1027, 2158,
	2255, 1862, 2172, 2171, 2168, 2169, 1862, 127, 2168, 2167,
	1760, 1027, 1632, 960, 1642, 1531, 1027, 127, 84, 127,
	127, 447, 447, 447, 2508, 467, 127, 1732, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	1362, 1862, 1074, 1365, 1366, 1367, 1185, 1369, 1370, 1658,
	1698, 1371, 1052, 127, 127, 127, 1751, 1372, 2256, 1651,
	1530, 1373, 1374, 1531, 1375, 1376, 1709, 1708, 1496, 1693,
	1496, 1027, 1760, 2268, 1678, 1208, 1207, 2725, 127, 1684,
	127, 1558, 2256, 1184, 680, 2107, 1185, 2093, 680, 1657,
	2107, 999, 998, 1426, 1496, 958, 1688, 1425, 2107, 1531,
	1402, 2682, 1186, 957, 1188, 1691, 958, 2295, 1672, 2187,
	680, 2170, 1429, 680, 1697, 2121, 1995, 1876, 1704, 1567,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 1607, 1608, 1074, 1613, 1614, 1615, 1616, 1617,
	1711, 1760, 1186, 1714, 1184, 1036, 1578, 1789, 1788, 960,
	1339, 1401, 1671, 1627, 1628, 1629, 1403, 1022, 1828, 1830,
	1731, 1380, 1176, 1176, 1176, 1176, 1176, 1179, 1739, 1756,
	1737, 1738, 1346, 1289, 1287, 1190, 81, 2697, 1547, 668,
	1853, 467, 2674, 2120, 2515, 1327, 2513, 2336, 1606, 1176,
	1752, 2307, 1829, 1635, 2150, 1631, 1718, 1880, 1536, 1539,
	1540, 1541, 1537, 1430, 1538, 1542, 964, 1620, 1621, 1622,
	1623, 1655, 1498, 1270, 2112, 2113, 1834, 1626, 1625, 1272,
	947, 418, 1644, 1687, 1794, 2818, 2816, 2799, 2185, 2115,
	2093, 1856, 1935, 1864, 1294, 1865, 1000, 961, 1795, 1863,
	956, 81, 1844, 1842, 2118, 1848, 1746, 1845, 1843, 2117,
	1841, 1833, 1846, 1855, 1540, 1541, 1840, 2736, 1766, 1768,
	1818, 536, 537, 127, 127, 127, 127, 127, 2694, 2024,
	1736, 1780, 1781, 1782, 1783, 127, 80, 1816, 1413, 127,
	1891, 1893, 2724, 127, 1040, 1041, 1860, 657, 2298, 449,
	127, 1744, 1836, 1837, 1835, 1839, 1743, 1838, 1847, 2431,
	1877, 2397, 1179, 1179, 1179, 1179, 1179, 2323, 2606, 2244,
	1937, 1271, 2243, 1038, 680, 1894, 2156, 1867, 1179, 1196,
	2155, 1879, 2154, 1884, 2145, 2609, 2669, 2668, 2503, 1179,
	1875, 1427, 2714, 1975, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1968,
	1885, 467, 1890, 2501, 1283, 444, 2587, 2586, 409, 1973,
	2486, 2487, 1029, 80, 2184, 1942, 1922, 1203, 945, 1967,
	929, 926, 925, 2749, 1030, 1921, 680, 1923, 1924, 1925,
	1926, 885, 1932, 2520, 612, 1930, 2519, 2293, 2407, 447,
	1405, 1406, 2726, 1467, 1468, 1695, 1650, 1129, 2045, 1944,
	1293, 1958, 2662, 127, 447, 2380, 1480, 1481, 1482, 1483,
	2505, 1938, 2381, 1040, 1041, 1510, 1683, 96, 1396, 447,
	1274, 1495, 1497, 1521, 2022, 2023, 1742, 1501, 1018, 1019,
	2748, 2747, 2746, 1971, 1741, 2464, 1972, 1978, 1980, 447,
	2029, 680, 1717, 911, 533, 1710, 2717, 447, 1426, 2716,
	2666, 2610, 1425, 2528, 1986, 1994, 2000, 2524, 2098, 80,
	534, 84, 1992, 1999, 2523, 2410, 680, 680, 2005, 1862,
	2016, 2017, 127, 2224, 2020, 1991, 664, 1997, 2008, 2013,
	676, 2030, 680, 2123, 2820, 2819, 2031, 1989, 2127, 2128,
	2129, 1988, 1806, 2099, 1946, 1947, 1948, 2094, 2035, 680,
	873, 2039, 2088, 1803, 1715, 2106, 1524, 2097, 1323, 1043,
	2819, 2820, 1834, 2538, 2153, 1399, 668, 456, 1398, 458,
	2566, 52, 1915, 1916, 1917, 1919, 2568, 19, 2567, 18,
	2078, 2077, 2122, 86, 2126, 2569, 20, 2133, 2570, 21,
	2565, 15, 2564, 14, 2558, 10, 467, 1833, 55, 2131,
	2284, 2581, 34, 2116, 467, 2101, 2579, 33, 1, 2090,
	680, 2046, 680, 1705, 2029, 2049, 2050, 2051, 2147, 1363,
	2054, 2148, 2360, 2149, 2578, 32, 2177, 2178, 2124, 2577,
	28, 2576, 27, 2575, 26, 680, 1913, 1914, 2359, 2144,
	2366, 2146, 2192, 1920, 2195, 1883, 2138, 2573, 23, 2137,
	1640, 1956, 1641, 1927, 2132, 2202, 680, 2376, 680, 1281,
	680, 2475, 680, 868, 2040, 2041, 2572, 22, 2574, 24,
	2563, 13, 1689, 2047, 2048, 2560, 12, 444, 1656, 2188,
	2559, 11, 2557, 9, 951, 2055, 2056, 2057, 2058, 2667,
	2605, 2607, 2062, 2063, 2064, 2204, 2500, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 2382,
	2344, 1074, 2209, 2343, 1950, 1949, 946, 127, 1344, 1998,
	2159, 2160, 2001, 1667, 1727, 2617, 1716, 2163, 1001, 1591,
	2233, 1581, 670, 1719, 2166, 92, 1675, 894, 376, 1733,
	1588, 447, 1900, 2608, 948, 1899, 127, 447, 1910, 1603,
	2254, 1898, 1897, 2603, 1901, 1216, 1214, 1215, 1753, 1754,
	1755, 127, 2257, 447, 2227, 680, 447, 1213, 2289, 2228,
	447, 447, 1271, 447, 2234, 2210, 1218, 2248, 2214, 1217,
	380, 2218, 1198, 2649, 2263, 2222, 2223, 1044, 2225, 102,
	680, 56, 2399, 2012, 127, 680, 1758, 452, 453, 97,
	105, 1761, 680, 680, 382, 1082, 1763, 1764, 1740, 1868,
	2250, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 541,
	655, 1779, 2315, 2316, 2317, 656, 1784, 1785, 1786, 1787,
	648, 1024, 2629, 1791, 1792, 1793, 1810, 1811, 1812, 2679,
	1796, 1797, 1798, 1834, 2302, 2325, 2698, 1034, 1804, 2274,
	2622, 1807, 1808, 1815, 2313, 1143, 1813, 1516, 554, 80,
	2294, 1819, 1851, 1820, 1821, 1822, 2415, 1823, 1824, 2624,
	2303, 1417, 569, 568, 567, 564, 565, 2690, 1833, 1682,
	1408, 2162, 2314, 2292, 1825, 127, 1849, 1850, 1056, 2173,
	1131, 552, 543, 2337, 1174, 1167, 1694, 1535, 1533, 2324,
	2304, 2305, 680, 2318, 2306, 1877, 1532, 2308, 1295, 680,
	680, 680, 644, 2114, 2110, 1131, 2356, 2357, 2358, 680,
	2326, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 680, 2142, 1074, 2260, 1176, 1545, 1173, 1177,
	70, 909, 398, 2262, 2161, 2290, 2535, 2355, 38, 457,
	538, 25, 17, 2265, 2266, 918, 16, 1720, 2393, 2394,
	866, 2395, 2269, 42, 44, 1945, 1652, 127, 2329, 2384,
	2648, 2383, 2782, 2385, 932, 2806, 2098, 2701, 31, 2098,
	2436, 2412, 2413, 2388, 30, 2403, 2411, 29, 2396, 2571,
	2389, 2580, 2123, 2408, 2144, 2562, 2561, 2769, 2768, 4,
	1015, 2029, 2439, 71, 35, 1640, 447, 2212, 1122, 1123,
	2404, 1974, 666, 2, 2435, 0, 0, 0, 0, 0,
	0, 2387, 0, 0, 2433, 2097, 2463, 0, 2097, 0,
	2271, 2272, 2465, 2273, 0, 680, 2275, 127, 2277, 0,
	0, 2442, 0, 680, 0, 0, 0, 0, 2432, 2232,
	0, 0, 0, 0, 0, 2462, 1883, 2456, 2443, 2239,
	2241, 0, 2454, 2455, 1552, 2453, 2444, 0, 0, 2232,
	2448, 0, 0, 0, 2438, 0, 1179, 0, 0, 0,
	0, 0, 2033, 680, 0, 664, 0, 0, 2521, 680,
	664, 1199, 2466, 0, 127, 0, 127, 0, 0, 0,
	0, 2034, 680, 2478, 2321, 2322, 0, 2042, 2488, 2283,
	0, 0, 2496, 2059, 2060, 2098, 2493, 80, 680, 2052,
	2053, 0, 0, 0, 2506, 2511, 2512, 2079, 2080, 2514,
	2081, 2082, 2061, 0, 2083, 2525, 2065, 2458, 0, 2459,
	0, 2518, 0, 0, 0, 0, 80, 2526, 0, 0,
	0, 2540, 0, 2527, 0, 2551, 467, 0, 0, 0,
	2539, 2544, 0, 0, 2097, 0, 0, 0, 0, 0,
	2100, 0, 0, 2543, 2546, 0, 0, 0, 0, 2125,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 2330, 0, 2332, 0,
	0, 0, 2130, 0, 541, 0, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0, 0,
	1074, 0, 0, 680, 0, 0, 0, 2152, 0, 0,
	0, 0, 2613, 0, 2615, 0, 0, 2627, 0, 2612,
	2644, 0, 2614, 0, 0, 0, 0, 0, 0, 0,
	2632, 2628, 2611, 0, 0, 1178, 0, 0, 0, 2637,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 2232, 0, 0, 0, 0, 447, 0, 1273,
	127, 0, 0, 0, 0, 680, 0, 680, 2211, 0,
	0, 2419, 2232, 124, 0, 0, 0, 0, 0, 1833,
	0, 0, 401, 0, 0, 2623, 2626, 0, 0, 0,
	1131, 0, 2665, 2663, 2653, 2683, 0, 0, 0, 1179,
	127, 0, 0, 0, 0, 0, 2672, 0, 0, 0,
	0, 0, 0, 0, 0, 2693, 645, 0, 0, 0,
	669, 0, 0, 0, 855, 2544, 0, 2259, 0, 0,
	0, 2720, 0, 2722, 0, 467, 680, 467, 867, 0,
	0, 0, 2258, 2142, 2645, 2646, 2708, 2728, 0, 881,
	0, 0, 0, 2729, 2719, 80, 0, 2738, 2723, 2142,
	2727, 80, 2737, 2721, 2735, 0, 0, 2745, 0, 1364,
	2752, 680, 0, 680, 2743, 0, 0, 2045, 2270, 2286,
	2287, 2288, 0, 0, 2758, 0, 0, 2759, 2763, 2279,
	2280, 0, 0, 80, 2762, 2285, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 2776, 444, 2779, 2773, 0,
	2296, 2297, 2772, 2299, 2771, 0, 2300, 2770, 2793, 2750,
	0, 0, 0, 2792, 0, 80, 680, 2800, 80, 80,
	676, 2795, 2781, 80, 0, 0, 2312, 2801, 2752, 0,
	2803, 0, 2809, 0, 2626, 2813, 0, 0, 0, 680,
	0, 0, 2815, 80, 2817, 0, 80, 2812, 0, 676,
	0, 680, 2752, 2828, 2830, 2744, 0, 0, 2825, 0,
	447, 0, 80, 2838, 80, 0, 0, 680, 80, 444,
	0, 2752, 0, 2752, 0, 0, 0, 680, 0, 0,
	2843, 0, 80, 0, 0, 80, 0, 0, 0, 0,
	1457, 2752, 80, 0, 0, 0, 80, 2852, 0, 0,
	0, 2752, 0, 0, 0, 2752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1488, 1489, 0,
	0, 0, 0, 0, 0, 0, 2142, 0, 2142, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2417, 2418, 391, 0, 0, 0, 0, 0,
	2829, 0, 0, 0, 0, 0, 2421, 2422, 2423, 2424,
	0, 0, 0, 0, 2428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 883, 664, 0, 0, 2425, 2426,
	2427, 0, 2429, 2282, 0, 0, 0, 0, 0, 676,
	0, 0, 676, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1459, 1464, 1465, 2445, 2446, 2447,
	1469, 0, 1471, 1472, 1473, 1474, 0, 1476, 953, 0,
	1479, 0, 0, 0, 0, 1484, 1485, 1486, 1487, 0,
	0, 0, 1491, 1492, 1493, 0, 0, 0, 0, 0,
	1499, 1500, 369, 0, 1037, 1506, 1509, 0, 1514, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 389,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 1525, 1526, 0, 0, 0, 2142, 0, 0,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 125, 378, 1074, 395, 379, 0, 0, 387,
	388, 125, 0, 0, 0, 0, 0, 0, 0, 2529,
	2530, 0, 0, 2531, 2532, 2533, 2534, 0, 0, 0,
	0, 0, 0, 0, 466, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 647, 665, 1703, 0, 125,
	0, 1703, 0, 125, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 2281, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 1703, 0, 0, 1703, 0, 125, 0,
	1058, 385, 1061, 0, 0, 0, 0, 0, 0, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 0, 1059, 1060, 1057,
	0, 0, 676, 0, 2616, 0, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 2633, 0, 0,
	0, 0, 2638, 0, 0, 0, 370, 0, 2267, 0,
	2236, 0, 0, 0, 0, 0, 1169, 0, 1181, 530,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 0, 0, 1074, 482, 0, 0, 0, 383,
	373, 374, 0, 394, 0, 0, 0, 375, 377, 0,
	371, 393, 392, 490, 0, 1063, 1062, 1072, 1073, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1064, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2676,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 2684, 0, 386, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 488, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 664, 0, 2086, 517, 0, 0, 483, 0, 477,
	0, 0, 0, 0, 491, 1759, 0, 676, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 495, 493,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 504,
	471, 0, 508, 125, 0, 0, 0, 0, 0, 0,
	469, 0, 1814, 0, 2790, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 486, 510, 0, 0, 0, 0,
	0, 0, 484, 485, 487, 514, 0, 516, 522, 2085,
	0, 0, 0, 0, 0, 0, 0, 125, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	0, 0, 1074, 0, 0, 0, 0, 645, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 2831, 0,
	0, 0, 0, 0, 1987, 0, 0, 1312, 1313, 1314,
	1315, 0, 0, 0, 0, 0, 0, 0, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	676, 472, 0, 2845, 2846, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 2043, 0, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 0, 0, 1074, 0,
	523, 524, 0, 0, 0, 480, 473, 474, 475, 476,
	478, 497, 498, 502, 503, 520, 519, 518, 521, 525,
	528, 527, 529, 479, 481, 489, 499, 500, 501, 505,
	506, 515, 511, 513, 2084, 0, 0, 0, 0, 0,
	0, 664, 0, 676, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 1414,
	512, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	2229, 676, 0, 676, 2231, 2141, 0, 0, 0, 507,
	509, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 125, 125, 0, 482,
	0, 0, 0, 0, 0, 665, 2032, 0, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 490, 0, 1063,
	1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1064, 0, 0, 1074, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 0, 0, 1074, 1063,
	1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1064, 0, 0, 1074, 0, 0, 0, 0, 0, 488,
	470, 0, 0, 0, 0, 0, 0, 0, 2217, 492,
	0, 0, 0, 0, 1529, 0, 0, 0, 517, 1757,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	1560, 0, 0, 2242, 0, 0, 0, 0, 2247, 0,
	0, 0, 0, 0, 0, 2251, 2252, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 664, 1662, 1663, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 2310, 0, 0, 0, 0,
	0, 0, 2310, 2310, 2310, 0, 125, 0, 0, 125,
	0, 0, 676, 0, 0, 0, 0, 1305, 0, 1681,
	0, 0, 0, 0, 0, 2310, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 953, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 0, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 466, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2437, 0, 125, 0,
	0, 0, 2310, 507, 509, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 2141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1463, 1463, 1463, 0, 0, 0, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 0, 0, 1463, 0,
	0, 0, 0, 1463, 1463, 1463, 1463, 0, 0, 0,
	1463, 1463, 1463, 0, 0, 0, 0, 0, 1463, 1463,
	0, 0, 0, 1463, 1463, 0, 1463, 2517, 0, 0,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1463, 1463,
	1463, 1463, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 466, 0, 0, 2542, 0, 125, 125,
	0, 0, 125, 1563, 1305, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 2141, 0,
	2141, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 664, 0, 0, 0, 490, 0, 0,
	125, 0, 125, 125, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 1680, 125, 676,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 488,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 125, 0, 466, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 2678, 0, 2681, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 1305, 504, 471, 0, 508, 0, 0, 2141,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 2310, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 1463, 0, 0, 0, 0, 0, 0,
	2681, 1463, 0, 0, 0, 0, 0, 0, 0, 0,
	2765, 0, 1463, 1463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1463, 0, 0, 0, 1463,
	0, 2176, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1463, 0, 0, 0, 1269, 472, 0, 0, 0, 0,
	2208, 0, 0, 530, 494, 665, 125, 125, 125, 125,
	125, 0, 0, 0, 0, 2213, 0, 0, 466, 482,
	0, 0, 125, 0, 0, 0, 466, 0, 0, 0,
	0, 1463, 0, 125, 0, 0, 0, 490, 0, 0,
	0, 665, 0, 0, 523, 524, 0, 0, 2246, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 488,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 125, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 2231, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 125, 0, 0, 0, 0,
	0, 2342, 0, 0, 0, 0, 1463, 0, 0, 482,
	0, 0, 0, 0, 0, 1463, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	470, 665, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 523, 524, 0, 0, 491, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 512, 0, 484, 485, 487, 514,
	125, 516, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2240, 0, 0, 0, 472, 0, 125, 0, 0,
	530, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 470, 466, 0,
	0, 0, 665, 0, 2640, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 0, 0, 483, 0,
	477, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 0, 0, 0, 495,
	493, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	504, 471, 0, 508, 0, 0, 0, 0, 0, 0,
	125, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 510, 0, 0, 0,
	0, 0, 0, 484, 485, 487, 514, 0, 516, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 811,
	330, 756, 838, 714, 740, 851, 744, 748, 791, 697,
	769, 256, 736, 698, 0, 718, 687, 728, 688, 715,
	758, 176, 713, 813, 772, 837, 213, 786, 0, 166,
	221, 219, 0, 125, 0, 263, 329, 836, 764, 0,
	845, 216, 0, 781, 846, 317, 240, 0, 0, 760,
	822, 767, 809, 755, 793, 706, 780, 840, 737, 788,
	841, 0, 0, 665, 0, 2647, 0, 0, 0, 0,
	0, 0, 0, 125, 701, 0, 784, 834, 731, 787,
	790, 685, 783, 0, 692, 699, 850, 829, 721, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 759, 768,
	803, 752, 349, 267, 284, 305, 746, 275, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 778,
	0, 0, 0, 700, 693, 0, 0, 757, 0, 0,
	0, 705, 684, 720, 805, 0, 682, 241, 144, 810,
	828, 754, 204, 360, 832, 751, 750, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 802, 299,
	733, 683, 814, 716, 729, 167, 725, 291, 260, 348,
	738, 775, 290, 217, 338, 798, 833, 347, 742, 817,
	357, 362, 724, 765, 703, 314, 177, 0, 133, 735,
	274, 172, 209, 753, 792, 717, 164, 800, 779, 816,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	2650, 2651, 2652, 747, 739, 0, 0, 353, 749, 302,
	301, 743, 199, 808, 782, 689, 283, 795, 205, 132,
	327, 365, 150, 211, 332, 681, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 730,
	797, 807, 281, 304, 334, 152, 321, 726, 727, 732,
	804, 293, 815, 826, 839, 224, 179, 182, 193, 200,
	789, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 690, 0, 319, 351,
	367, 154, 712, 307, 333, 741, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 710, 711, 708, 0, 709, 770,
	771, 842, 843, 844, 806, 702, 0, 823, 824, 0,
	0, 0, 0, 0, 812, 830, 831, 794, 852, 745,
	707, 691, 694, 695, 696, 704, 761, 762, 774, 777,
	820, 819, 818, 821, 825, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	131, 140, 215, 853, 282, 185, 352, 686, 174, 0,
	763, 766, 776, 801, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 799, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 827, 0, 785, 796, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 836, 764, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 0, 0, 679, 0, 1585, 1586, 0, 0, 0,
	0, 0, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 1878,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 754,
	204, 360, 832, 751, 750, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 836, 764, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 679, 0, 1585, 1586, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 754, 204, 360,
	832, 751, 750, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 2102, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 81, 0, 1027, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 2103, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 0, 785, 796,
	835, 811, 330, 756, 838, 714, 740, 851, 744, 748,
	791, 697, 769, 256, 736, 698, 0, 718, 687, 728,
	688, 715, 758, 176, 713, 813, 772, 837, 213, 786,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 836,
	764, 0, 845, 216, 0, 781, 846, 317, 240, 0,
	0, 760, 822, 767, 809, 755, 793, 706, 780, 840,
	737, 788, 841, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 784, 834,
	731, 787, 790, 685, 783, 0, 692, 699, 850, 829,
	721, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	759, 768, 803, 752, 349, 267, 284, 305, 746, 275,
	734, 0, 0, 0, 0, 0, 0, 2414, 0, 719,
	0, 778, 0, 0, 0, 700, 693, 0, 0, 757,
	0, 0, 0, 705, 684, 720, 805, 0, 682, 241,
	144, 810, 828, 754, 204, 360, 832, 751, 750, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	802, 299, 733, 683, 814, 716, 729, 167, 725, 291,
	260, 348, 738, 775, 290, 217, 338, 798, 833, 347,
	742, 817, 357, 362, 724, 765, 703, 314, 177, 0,
	133, 735, 274, 172, 209, 753, 792, 717, 164, 800,
	779, 816, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 747, 739, 0, 0, 353,
	749, 302, 301, 743, 199, 808, 782, 689, 283, 795,
	205, 132, 327, 365, 150, 211, 332, 681, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 730, 797, 807, 281, 304, 334, 152, 321, 726,
	727, 732, 804, 293, 815, 826, 839, 224, 179, 182,
	193, 200, 789, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 690, 0,
	319, 351, 367, 154, 712, 307, 333, 741, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 710, 711, 708, 0,
	709, 770, 771, 842, 843, 844, 806, 702, 0, 823,
	824, 0, 0, 0, 0, 0, 812, 830, 831, 794,
	852, 745, 707, 691, 694, 695, 696, 704, 761, 762,
	774, 777, 820, 819, 818, 821, 825, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 131, 140, 215, 853, 282, 185, 352, 686,
	174, 0, 763, 766, 776, 801, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 799, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 827, 0, 785, 796, 835, 811,
	330, 756, 838, 714, 740, 851, 744, 748, 791, 697,
	769, 256, 736, 698, 0, 718, 687, 728, 688, 715,
	758, 176, 713, 813, 772, 837, 213, 786, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 836, 764, 0,
	845, 216, 0, 781, 846, 317, 240, 0, 0, 760,
	822, 767, 809, 755, 793, 706, 780, 840, 737, 788,
	841, 0, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 784, 834, 731, 787,
	790, 685, 783, 0, 692, 699, 850, 829, 721, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 759, 768,
	803, 752, 349, 267, 284, 305, 746, 275, 734, 0,
	0, 0, 0, 0, 0, 2038, 0, 719, 0, 778,
	0, 0, 0, 700, 693, 0, 0, 757, 0, 0,
	0, 705, 684, 720, 805, 0, 682, 241, 144, 810,
	828, 754, 204, 360, 832, 751, 750, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 802, 299,
	733, 683, 814, 716, 729, 167, 725, 291, 260, 348,
	738, 775, 290, 217, 338, 798, 833, 347, 742, 817,
	357, 362, 724, 765, 703, 314, 177, 0, 133, 735,
	274, 172, 209, 753, 792, 717, 164, 800, 779, 816,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 747, 739, 0, 0, 353, 749, 302,
	301, 743, 199, 808, 782, 689, 283, 795, 205, 132,
	327, 365, 150, 211, 332, 681, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 730,
	797, 807, 281, 304, 334, 152, 321, 726, 727, 732,
	804, 293, 815, 826, 839, 224, 179, 182, 193, 200,
	789, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 690, 0, 319, 351,
	367, 154, 712, 307, 333, 741, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 710, 711, 708, 0, 709, 770,
	771, 842, 843, 844, 806, 702, 0, 823, 824, 0,
	0, 0, 0, 0, 812, 830, 831, 794, 852, 745,
	707, 691, 694, 695, 696, 704, 761, 762, 774, 777,
	820, 819, 818, 821, 825, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	131, 140, 215, 853, 282, 185, 352, 686, 174, 0,
	763, 766, 776, 801, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 799, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 827, 0, 785, 796, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 836, 764, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 0,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 2028, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 754,
	204, 360, 832, 751, 750, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 836, 764, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 1564, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 754, 204, 360,
	832, 751, 750, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 811, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 0, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 1423,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 853, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 0, 785, 796,
	835, 811, 330, 756, 838, 714, 740, 851, 744, 748,
	791, 697, 769, 256, 736, 698, 0, 718, 687, 728,
	688, 715, 758, 176, 713, 813, 772, 837, 213, 786,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 836,
	764, 0, 845, 216, 0, 781, 846, 317, 240, 0,
	0, 760, 822, 767, 809, 755, 793, 706, 780, 840,
	737, 788, 841, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 784, 834,
	731, 787, 790, 685, 783, 0, 692, 699, 850, 829,
	721, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	759, 768, 803, 752, 349, 267, 284, 305, 746, 275,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 778, 0, 0, 0, 700, 693, 0, 0, 757,
	0, 0, 0, 705, 684, 720, 805, 0, 682, 241,
	144, 810, 828, 754, 204, 360, 832, 751, 750, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	802, 299, 733, 683, 814, 716, 729, 167, 725, 291,
	260, 348, 738, 775, 290, 217, 338, 798, 833, 347,
	742, 817, 357, 362, 724, 765, 703, 314, 177, 0,
	133, 735, 274, 172, 209, 753, 792, 717, 164, 800,
	779, 816, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 747, 739, 0, 0, 353,
	749, 302, 301, 743, 199, 808, 782, 689, 283, 795,
	205, 132, 327, 365, 150, 211, 332, 681, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 730, 797, 807, 281, 304, 334, 152, 321, 726,
	727, 732, 804, 293, 815, 826, 839, 224, 179, 182,
	193, 200, 789, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 690, 0,
	319, 351, 367, 154, 712, 307, 333, 741, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 710, 711, 708, 0,
	709, 770, 771, 842, 843, 844, 806, 702, 0, 823,
	824, 0, 0, 0, 0, 0, 812, 830, 831, 794,
	852, 745, 707, 691, 694, 695, 696, 704, 761, 762,
	774, 777, 820, 819, 818, 821, 825, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 131, 140, 215, 853, 282, 185, 352, 686,
	174, 0, 763, 766, 776, 801, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 799, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 827, 0, 785, 796, 835, 811,
	330, 756, 838, 714, 740, 851, 744, 748, 791, 697,
	769, 256, 736, 698, 0, 718, 687, 728, 688, 715,
	758, 176, 713, 813, 772, 837, 213, 786, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 836, 764, 0,
	845, 216, 0, 781, 846, 317, 240, 0, 0, 760,
	822, 767, 809, 755, 793, 706, 780, 840, 737, 788,
	841, 0, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 784, 834, 731, 787,
	790, 685, 783, 0, 692, 699, 850, 829, 721, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 759, 768,
	803, 752, 349, 267, 284, 305, 746, 275, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 778,
	0, 0, 0, 700, 693, 0, 0, 757, 0, 0,
	0, 705, 684, 720, 805, 0, 682, 241, 144, 810,
	828, 754, 204, 360, 832, 751, 750, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 802, 299,
	733, 683, 814, 716, 729, 167, 725, 291, 260, 348,
	738, 775, 290, 217, 338, 798, 833, 347, 742, 817,
	357, 362, 724, 765, 703, 314, 177, 0, 133, 735,
	274, 172, 209, 753, 792, 717, 164, 800, 779, 816,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 747, 739, 0, 0, 353, 749, 302,
	301, 743, 199, 808, 782, 689, 283, 795, 205, 132,
	327, 365, 150, 211, 332, 681, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 730,
	797, 807, 281, 304, 334, 152, 321, 726, 727, 732,
	804, 293, 815, 826, 839, 224, 179, 182, 193, 200,
	789, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 690, 0, 319, 351,
	367, 154, 712, 307, 333, 741, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 710, 711, 708, 0, 709, 770,
	771, 842, 843, 844, 806, 702, 0, 823, 824, 0,
	0, 0, 0, 0, 812, 830, 831, 794, 852, 745,
	707, 691, 694, 695, 696, 704, 761, 762, 774, 777,
	820, 819, 818, 821, 825, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	131, 140, 215, 853, 282, 185, 352, 686, 174, 0,
	763, 766, 776, 801, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 799, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 827, 0, 785, 796, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 1597, 1601, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 0,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 1600,
	204, 360, 832, 751, 750, 1594, 0, 1595, 1596, 214,
	678, 128, 142, 1592, 1599, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 836, 764, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 754, 204, 360,
	832, 751, 750, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 811, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 678, 128, 142, 674,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 853, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 330, 785, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 176, 546,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 626, 216, 0,
	0, 526, 317, 240, 0, 0, 0, 0, 615, 616,
	0, 0, 0, 0, 0, 0, 1574, 0, 81, 0,
	0, 0, 547, 571, 570, 573, 574, 575, 576, 0,
	0, 530, 572, 577, 610, 611, 1575, 0, 0, 544,
	562, 0, 625, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 490, 0, 0, 0, 0,
	559, 560, 0, 0, 0, 0, 638, 0, 561, 0,
	0, 556, 557, 558, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 617, 0, 0, 204,
	360, 0, 0, 636, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 585, 470, 0,
	0, 0, 167, 0, 291, 260, 348, 587, 0, 290,
	217, 338, 0, 0, 347, 0, 517, 357, 362, 483,
	0, 477, 314, 177, 0, 133, 491, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 353, 496, 302, 301, 0, 199,
	0, 504, 471, 283, 508, 205, 132, 327, 365, 150,
	211, 332, 469, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 486, 510, 0, 281,
	304, 334, 152, 321, 484, 485, 487, 514, 293, 516,
	522, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 472, 0, 319, 351, 367, 154, 0,
	307, 333, 494, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 627, 637, 633, 635, 634, 631, 632, 630, 629,
	628, 639, 618, 619, 620, 621, 622, 0, 0, 0,
	624, 0, 604, 605, 0, 0, 0, 480, 578, 579,
	580, 581, 582, 588, 589, 593, 594, 602, 601, 600,
	603, 606, 608, 607, 609, 583, 584, 586, 590, 591,
	592, 595, 596, 599, 597, 598, 623, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 512, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 36,
	330, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 176, 546, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 547, 571, 570, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 544, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 79, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 0, 0, 0, 544, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 540, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 176, 546, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 626, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1027, 0, 547,
	571, 570, 573, 574, 575, 576, 0, 0, 530, 572,
	577, 610, 611, 0, 0, 0, 544, 562, 0, 625,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 638, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 617, 0, 0, 204, 360, 0, 0,
	636, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 585, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 587, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 627, 637,
	633, 635, 634, 631, 632, 630, 629, 628, 639, 618,
	619, 620, 621, 622, 0, 0, 0, 624, 0, 604,
	605, 0, 0, 0, 480, 578, 579, 580, 581, 582,
	588, 589, 593, 594, 602, 601, 600, 603, 606, 608,
	607, 609, 583, 584, 586, 590, 591, 592, 595, 596,
	599, 597, 598, 623, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 176, 546, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 626, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 547, 571, 570, 573, 574, 575, 576, 0, 0,
	530, 572, 577, 610, 611, 0, 0, 0, 544, 562,
	0, 625, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 1461, 0, 0, 0, 638, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 617, 0, 0, 204, 360,
	0, 0, 636, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 585, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 587, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	627, 637, 633, 635, 634, 631, 632, 630, 629, 628,
	639, 618, 619, 620, 621, 622, 0, 0, 0, 624,
	0, 604, 605, 0, 0, 0, 480, 578, 579, 580,
	581, 582, 588, 589, 593, 594, 602, 601, 600, 603,
	606, 608, 607, 609, 583, 584, 586, 590, 591, 592,
	595, 596, 599, 597, 598, 623, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 176,
	546, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 626, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 571, 1508, 573, 574, 575, 576,
	0, 0, 530, 572, 577, 610, 611, 0, 0, 0,
	544, 562, 0, 625, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 1461, 0, 0, 0, 638, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 617, 0, 0,
	204, 360, 0, 0, 636, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 585, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 587, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 627, 637, 633, 635, 634, 631, 632, 630,
	629, 628, 639, 618, 619, 620, 621, 622, 0, 0,
	0, 624, 0, 604, 605, 0, 0, 0, 480, 578,
	579, 580, 581, 582, 588, 589, 593, 594, 602, 601,
	600, 603, 606, 608, 607, 609, 583, 584, 586, 590,
	591, 592, 595, 596, 599, 597, 598, 623, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 176, 546, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 547, 571, 1505, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 544, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 1461, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1342, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 0, 0, 0, 544, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 176, 546, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 626, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 547,
	571, 570, 573, 574, 575, 576, 0, 0, 530, 572,
	577, 610, 611, 0, 0, 0, 544, 562, 0, 625,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 638, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 617, 0, 0, 204, 360, 0, 0,
	636, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 585, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 587, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 627, 637,
	633, 635, 634, 631, 632, 630, 629, 628, 639, 618,
	619, 620, 621, 622, 0, 0, 0, 624, 0, 604,
	605, 0, 0, 0, 480, 578, 579, 580, 581, 582,
	588, 589, 593, 594, 602, 601, 600, 603, 606, 608,
	607, 609, 583, 584, 586, 590, 591, 592, 595, 596,
	599, 597, 598, 623, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 626, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 547, 571, 570, 573, 574, 575, 576, 0, 0,
	530, 572, 577, 610, 611, 0, 0, 0, 0, 562,
	0, 625, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 0, 0, 0, 0, 638, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 617, 0, 0, 204, 360,
	0, 0, 636, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 585, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 587, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	627, 637, 633, 635, 634, 631, 632, 630, 629, 628,
	639, 618, 619, 620, 621, 622, 1511, 1512, 1513, 624,
	0, 604, 605, 0, 0, 0, 480, 578, 579, 580,
	581, 582, 588, 589, 593, 594, 602, 601, 600, 603,
	606, 608, 607, 609, 583, 584, 586, 590, 591, 592,
	595, 596, 599, 597, 598, 623, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 626, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 571, 570, 573, 574, 575, 576,
	0, 0, 530, 572, 577, 610, 611, 0, 0, 0,
	0, 562, 0, 625, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 0, 0, 0, 0, 638, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 617, 0, 0,
	204, 360, 0, 0, 636, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 585, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 587, 2832,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 627, 637, 633, 635, 634, 631, 632, 630,
	629, 628, 639, 618, 619, 620, 621, 622, 0, 0,
	0, 624, 0, 604, 605, 0, 0, 0, 480, 578,
	579, 580, 581, 582, 588, 589, 593, 594, 602, 601,
	600, 603, 606, 608, 607, 609, 583, 584, 586, 590,
	591, 592, 595, 596, 599, 597, 598, 623, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 1027, 0, 547, 571, 570, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 0, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 0, 0, 0, 0, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	1551, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1553, 1555, 0, 0, 0, 0, 0, 0, 126,
	0, 468, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 1554,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1553, 1555, 0, 0, 0, 0, 0,
	0, 126, 0, 468, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 1549,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 1554, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 1049, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1050, 0, 1053, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 1046, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 468, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	488, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	492, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 463, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 1854,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 468,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 468, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 1053, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	0, 0, 507, 509, 437, 330, 431, 442, 425, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 448,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 432,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 423, 426, 0,
	0, 0, 241, 144, 0, 0, 430, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 434, 299, 0, 0, 438, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 441, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 451, 304, 334,
	152, 321, 427, 428, 429, 435, 436, 439, 440, 443,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	433, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 437, 330, 431,
	442, 425, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 432, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	423, 426, 0, 0, 0, 241, 144, 0, 0, 430,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 434, 299, 0, 0,
	438, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 441, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	420, 304, 334, 152, 321, 427, 428, 429, 435, 436,
	439, 440, 443, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 433, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 1063,
	1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1064, 0, 0, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 2757, 0, 0, 0,
	0, 0, 0, 176, 2755, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 2756, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 36, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 1546, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 79, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 1201, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	2216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 1168, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 123, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 662, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 658, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 663, 661, 652, 653, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 659, 660, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 1195, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 649, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 662, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	658, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 663, 661,
	652, 653, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2238, 0, 0, 1238, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 2709, 490, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 659,
	660, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 488,
	470, 0, 0, 0, 0, 0, 0, 0, 1225, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 493, 0, 1238, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1252, 1255,
	1256, 1257, 1258, 1259, 1260, 472, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 494, 1240, 1241, 1242, 1243, 1219,
	1223, 1253, 1220, 1226, 1222, 1224, 1221, 1239, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 1254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 1252, 1255, 1256, 1257,
	1258, 1259, 1260, 0, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 0, 1240, 1241, 1242, 1243, 1219, 1223, 1253,
	1220, 1226, 1222, 1224, 1221, 0, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 36, 0, 72, 39, 40,
	0, 0, 0, 36, 37, 72, 39, 40, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 59, 0, 41,
	0, 0, 0, 78, 0, 0, 0, 41, 63, 64,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 50, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2582, 0, 1254, 2805, 2808, 2804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 2583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 49, 77, 76, 0,
	0, 0, 0, 47, 36, 0, 72, 39, 40, 0,
	0, 0, 36, 0, 72, 39, 40, 65, 59, 0,
	0, 0, 0, 0, 78, 0, 59, 0, 41, 0,
	0, 0, 78, 0, 0, 0, 41, 0, 0, 0,
	57, 58, 0, 2584, 0, 0, 0, 0, 57, 58,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 66, 81, 67, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	2582, 0, 68, 0, 0, 2854, 0, 0, 2582, 0,
	0, 0, 0, 2850, 0, 0, 0, 0, 0, 0,
	0, 0, 2585, 75, 0, 53, 54, 61, 0, 62,
	51, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 2583, 0, 0, 0, 0, 0, 0, 0, 2583,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 49, 77, 76, 0, 0,
	0, 0, 47, 36, 0, 72, 39, 40, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 59, 0, 41, 0, 0,
	73, 78, 0, 0, 0, 41, 0, 0, 73, 57,
	58, 0, 2584, 0, 0, 0, 0, 57, 58, 0,
	2584, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 66, 81, 67, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 68, 0, 0, 0, 79, 0, 2582,
	0, 68, 0, 0, 2839, 0, 0, 2582, 0, 0,
	0, 0, 2822, 0, 0, 0, 0, 0, 0, 0,
	0, 2585, 75, 0, 53, 54, 61, 0, 62, 2585,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	2583, 0, 0, 0, 0, 0, 0, 0, 2583, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 73,
	0, 41, 0, 0, 0, 0, 0, 73, 57, 58,
	0, 2584, 0, 0, 0, 0, 57, 58, 0, 2584,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 81,
	2810, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 68, 0, 0, 0, 79, 0, 0, 0,
	68, 0, 0, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2585, 75, 0, 53, 54, 61, 0, 62, 2585, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 36, 0, 72, 39, 40, 0,
	0, 0, 0, 0, 2583, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 81, 41, 73, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 57, 58, 0, 2584, 0, 0, 0, 0,
	2582, 0, 0, 0, 0, 2751, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 79, 68, 0, 0, 2582,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2583, 0, 0, 2585, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 57,
	58, 0, 2584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 57, 58,
	0, 2584, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2585, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 79, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2585, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	33517, -1000, -331, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1816, -1000, -1000, -1000, -1000,
	-1000, -1000, 874, 298, -1000, 284, 102, 29678, 587, 2881,
	30662, -1000, -1000, -1000, 196, 384, 30662, 452, 456, 1239,
	1692, 1236, 56, -69, -70, 108, 23281, 22788, 31, -1000,
	1881, 1884, -1000, -1000, 415, 61, -1000, -1000, -1000, 20323,
	225, -1000, -1000, 1797, 1814, 1577, -1000, 13435, 415, 415,
	29186, 32630, -1000, 1880, 30662, 11957, -1000, 582, 30662, -181,
	424, 424, 338, 424, 424, 586, -1000, 864, -1000, -1000,
	-1000, -1000, 30662, 26234, 517, 30170, 517, 517, 517, 517,
	517, 517, 517, 30662, -1000, 648, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30662, 1235,
	1721, 811, 140, -1000, -1000, -1000, 884, -1000, 317, 314,
	290, 313, 110, 927, 1794, -1000, 1478, 1797, 1797, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 365, 573, 264, 225,
	862, -1000, 1712, 1711, 1136, 1710, 599, 1708, 1522, -24,
	-1000, 1234, 30662, -1000, -1000, 1111, 1110, 1544, 1407, 605,
	1541, -1000, -1000, 301, 598, 1508, 451, 1508, 1508, 1508,
	1508, 1508, -72, 1508, 1508, 1508, 101, 1508, 146, 1508,
	1508, 1508, 1508, 1508, 1261, -1000, -1000, -1000, 416, 1396,
	1450, 1540, 428, -1000, -1000, -1000, -1000, 1543, 1777, 585,
	-1000, -118, 1458, 21307, -1000, 1478, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1105, 1713, 1056, 16387, 1633, -1000, -1000, 973, 1868,
	-1000, 19831, 646, -1000, 16387, 3051, 1478, -1000, -1000, 1478,
	-1000, -1000, -1000, 615, -1000, -1000, 18355, 18355, 18355, 18355,
	18355, 18355, 18355, 18355, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	-1000, -1000, 1478, -1000, 12943, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 16387, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	28694, 26726, 30662, 1445, 1405, -1000, -1000, 645, 1476, -107,
	32138, -1000, -1000, -1000, -1000, 31154, 25742, 857, -1000, -1000,
	-1000, -1000, 1707, -1000, -1000, 644, -1000, 1816, -1000, -1000,
	1376, 382, -1000, 33165, 4462, -1000, -1000, -1000, 1521, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30170, 1767, 544, 1233, 928, 1231,
	1230, 1229, 26234, 26234, 424, 1226, 1475, 571, 1474, 558,
	1200, 30662, 1746, 1538, 30662, 1224, 1223, 1220, 1212, 26234,
	26234, -1000, 11459, -1000, -1000, 811, -1000, 1158, 16387, 424,
	424, 30662, 30662, 30662, 30662, -1000, -1000, 811, 811, 811,
	811, 853, 1867, 853, -1000, 853, -1000, -1000, 16387, -1000,
	18355, 25250, 698, -1000, -1000, -1000, 1211, 274, -1000, -1000,
	-1000, -1000, -1000, -1000, 1210, 599, 599, -1000, 1157, 599,
	1451, -1000, 843, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 599, -1000, 15895, -327, -1000,
	-1000, 1473, -1000, 297, -1000, -1000, 370, 370, 213, 26234,
	26234, 26234, -1000, 1508, 30170, -1000, 1508, 1508, 1508, -80,
	1508, 1508, -1000, -1000, 1508, -1000, -1000, -1000, -1000, -1000,
	1508, -1000, -1000, -1000, 1508, 1508, -1000, 1508, 1508, -1000,
	-1000, -1000, -1000, -1000, 26234, 370, 182, 1462, 370, 26234,
	26234, -1000, 89, 88, 86, 85, -1000, -1000, -1000, -1000,
	84, 83, -1000, -1000, 1577, -1000, -1000, 225, -1000, -1000,
	30662, -112, 21307, 1458, 1765, 9965, -1000, -1000, -1000, 1876,
	746, 1452, -1000, -1000, 1457, -1000, 990, 641, 1090, 1599,
	-1000, -1000, -1000, 30662, -1000, 16387, 16387, 1077, -1000, 21799,
	-1000, -1000, -1000, -1000, 9467, 762, 18355, 992, 792, 18355,
	18355, 18355, 18355, 18355, 18355, 18355, 18355, 18355, 18355, 18355,
	18355, 18355, 18355, 18355, 1100, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1207, -1000, 225, 1145, 1145, 668, 668,
	668, 668, 668, 668, 668, 23773, 1762, 14419, 14419, 14419,
	1762, 1105, 1105, 14419, 14419, 14419, 14419, 14419, 14419, 14419,
	14419, 1762, 1762, 14419, 1105, 1105, 1105, 1105, 14419, 14419,
	14419, 14419, 30170, 30170, 1762, 14419, 14419, 14419, 1762, 1105,
	1371, 1041, 12943, 14419, 14419, 1105, 16387, 16387, 15403, 14911,
	16879, 14419, 1762, 898, 1041, 31154, -1000, -1000, 17863, -1000,
	-1000, -1000, -1000, -1000, 1105, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14419, 14419, 14419, 14419, 735, 30662, -1000,
	1400, 1512, -1000, -1000, -1000, 1764, 24758, -1000, 19339, -1000,
	1478, 735, 1384, 26726, 30662, -1000, -1000, 26726, 30662, 8969,
	31646, 1420, -1000, -113, -122, -107, -1000, -1000, 664, -1000,
	-1000, -1000, 12450, -1000, 10463, 1797, 1577, 6479, 10961, -1000,
	4462, 1521, -1000, -58, -1000, -1000, -1000, 1490, -1000, 1490,
	321, 35, 1490, 1490, 1490, 1490, 1490, 2, 2, 2,
	2, 8, -1000, -1000, -1000, -1000, -1000, 1520, 1519, -1000,
	1490, 1490, 1490, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1497, 294, 1495, 1495, 1495, 1495, 1495, 374,
	374, -1000, 16387, 1525, -1000, 30662, 335, 1742, 335, 283,
	1513, 1390, -1000, 190, 1314, 30662, -1000, 30662, 30662, 26234,
	26234, 26234, 593, -1000, 30662, 1453, -1000, -1000, -1000, -1000,
	-1000, 1409, -1000, 1314, -1000, -1000, -1000, -1000, -1000, 1041,
	1205, 1203, -1000, -1000, -1000, 882, -1000, -1000, -1000, -1000,
	811, 30662, 30662, 30662, 1763, 811, 1041, 786, 1526, 1478,
	1105, -1000, -1000, 1202, -1000, 1451, 1451, -1000, 1451, 599,
	1145, 1451, -1000, 1369, 1738, 1152, 30662, -1000, 21307, -26,
	-1000, -162, 28202, -1000, -1000, -1000, 28202, -1000, 101, 126,
	-1000, 557, -1000, 1367, -1000, -1000, -1000, -1000, 1508, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28202, 145,
	181, 28202, 1409, 1863, -1000, -1000, -1000, -1000, 1793, -1000,
	1762, 1105, 200, -1000, -1000, -1000, 1478, 1298, 629, -1000,
	1588, 1056, 1056, 16387, -1000, -1000, -1000, 10463, 1785, -1000,
	1619, 1614, 1559, -1000, -1000, 762, 870, -1000, -1000, 1005,
	-1000, -1000, -1000, -1000, 627, 1478, -1000, 3593, -1000, -1000,
	-1000, -1000, 992, 18355, 18355, 18355, 786, 3593, 3661, 801,
	2124, 668, 810, 810, 661, 661, 661, 661, 661, 881,
	881, -1000, -1000, -1000, 1105, -1000, -1000, -1000, 14419, 1311,
	-1000, -1000, 1041, 626, 1311, 1311, 14419, -196, -196, 1311,
	1105, 1311, 1311, 1311, 1311, 1105, 1311, 14419, 14419, 1311,
	-196, -196, -196, -196, 1311, 1311, 1311, 1311, 1449, 1448,
	14419, 1311, 1311, 1311, 14419, -1000, 16387, -1000, 1105, 1311,
	1311, -1000, 982, 1049, 729, 1862, 1311, 724, 1851, 1311,
	1282, 18355, 18355, 18355, 1311, 14419, 904, -1000, 16387, 1105,
	-1000, 918, 1311, 1105, 1442, 1311, 1311, 241, 1478, -1000,
	10463, 26726, 26726, 26726, 26726, 26726, -1000, 1570, 1564, -1000,
	1557, 1556, 1566, 21307, 1316, 1105, 278, 24758, -1000, 1478,
	-1000, 20815, 655, 581, 580, 579, 14419, 1827, 26726, 1364,
	-1000, 1364, -1000, 625, -1000, -1000, 31154, -107, -119, -1000,
	-1000, 1420, -1000, 1108, -1000, -1000, 1041, -1000, 622, 1713,
	1762, 1418, 5981, -1000, -1000, -1000, -1000, 382, -1000, -1000,
	-1000, 1499, 4182, -1000, 1648, 694, 694, 705, 1168, 1640,
	-1000, -1000, 347, -50, -1000, -1000, 1104, 2, 2, 1490,
	1490, 282, 1490, -1000, 2, -1000, -1000, -1000, 664, 1706,
	664, 664, 664, 664, 2, 1142, 1142, -1000, -1000, -1000,
	-1000, 1103, -1000, 1497, -1000, 1101, -1000, -1000, -1000, -1000,
	-1000, -1000, 986, 1536, 30170, 225, 1758, 764, 1705, 3,
	-1000, 764, 1856, -1000, -1000, 375, 107, 26234, 187, 323,
	229, -1000, 556, -1000, 554, -1000, -1000, -1000, -1000, -1000,
	-1000, 30662, 26234, -1000, -1000, 1827, 1201, 1197, -1000, -1000,
	-1000, 853, 811, 1695, -1000, -1000, 18355, 26234, -1000, 309,
	-1000, -1000, -1000, -1000, 735, 584, -1000, -1000, -56, -1000,
	-1000, 548, 618, 612, 540, -1000, 118, 26234, -1000, 30170,
	-1000, 1850, 1846, 139, 1834, 26234, -1000, 71, 1599, -1000,
	1417, -1000, 693, 676, 678, 387, 387, -1000, 772, 387,
	730, -1000, 212, -1000, 9965, 9965, 1586, -1000, -1000, -1000,
	30662, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8471, 14419, -1000, 786, 3593, 3578, -1000, 18355, -1000, 1311,
	14419, -196, 7973, -196, -196, 1311, -1000, 27710, -1000, -1000,
	-196, -1000, -196, -196, -196, -196, -196, 1311, 1311, -196,
	-1000, -1000, -1000, -1000, -196, -196, -196, -196, 18355, 18355,
	1311, -196, -196, -196, 1105, 1041, -1000, -1000, -1000, 218,
	1100, 218, 18355, 18355, -1000, 18355, 18355, -1000, -1000, 18355,
	3563, 3408, 3312, -233, 1373, 866, -1000, 16387, 1038, -1000,
	-1000, -1000, -1000, -1000, -1000, 1534, 10463, 1478, 6977, -1000,
	30170, 1399, -1000, 832, 817, 1512, 1518, 1533, 1199, -1000,
	-1000, -1000, -1000, 1563, -1000, 1558, -1000, -1000, 1485, -1000,
	-1000, 1416, 1478, 30170, 18355, 655, -1000, 1478, 1478, 1478,
	1105, 1816, 16387, 1364, -1000, -1000, 682, -1000, -1000, -123,
	-167, -1000, -1000, -1000, 9965, -1000, 6479, -1000, 6479, -1000,
	22291, 543, 1650, 376, -1000, 1168, -1000, -1000, 1168, -1000,
	1168, -1000, -1000, -1000, 1496, -1000, 963, -1000, -1000, -1000,
	-1000, -1000, 18355, 1875, -1000, 1647, -1000, 1645, 1641, 1141,
	-1000, -1000, 1299, 664, 664, 2, -1000, -1000, 1490, -1000,
	664, -1000, 727, -1000, -1000, -1000, -1000, 664, 1309, -1000,
	1305, 1412, -1000, 1303, 87, 30662, -1000, -1000, -1000, -1000,
	1099, 667, 713, 1704, -1000, 1532, -1000, -1000, -1000, 1285,
	1410, -1000, 33165, 1195, 1191, 1182, -239, 261, -1000, 26234,
	151, 190, 442, 1181, 30662, 26234, -1000, -1000, -1000, -1000,
	-1000, 811, -1000, 18355, 3593, 1314, -1000, -1000, 2, 30662,
	-1000, 26234, 681, 27218, 26234, 137, 124, -1000, 26234, 26234,
	1832, 26234, 1409, 1140, 1559, 200, 3562, 1168, 639, -1000,
	-1000, 392, -1000, 3138, 1640, 1179, 32962, 4949, 30170, 1637,
	1634, 1175, 30662, 30170, -1000, -1000, 4672, 1174, 16387, -1000,
	30170, 30170, 610, -1000, -1000, -1000, 1359, 13435, -1000, -1000,
	1105, -1000, 18355, 3593, -196, -1000, -1000, -1000, -1000, 601,
	-1000, -1000, -196, -1000, -1000, 1171, -1000, -1000, -1000, -1000,
	-1000, -1000, -196, -196, -1000, -1000, -1000, -1000, -1000, 3139,
	1374, -196, -1000, -1000, -1000, -1000, 1105, 1490, 1490, -1000,
	1490, 1495, -1000, 1490, 29, 1490, 28, 1105, 1105, 3104,
	2934, 2410, 1901, 918, 18355, 18355, 18355, 1478, -192, -1000,
	1041, 16387, -1000, 1729, 1391, 1408, -1000, -1000, 13927, 1105,
	1611, 1298, -1000, 20323, 1291, -1000, 1816, 10463, 16387, 16387,
	-1000, -1000, 16387, 1493, -1000, 16387, -1000, -1000, -1000, -1000,
	30170, 275, -1000, 16387, 1291, 827, -1000, 30170, 30170, 30170,
	-1000, 1797, 1041, -1000, -1000, -1000, -1000, 5981, -1000, 1284,
	-1000, 1490, 1490, 1632, -1000, 694, -1000, -1000, -1000, -1000,
	30170, -1000, 3593, -73, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 664, -1000, -1000, -1000, -1000, -1000, 2, 1139, 2,
	1094, -1000, 1089, -1000, -1000, -278, 1489, -1000, 225, -1000,
	-1000, 1081, -1000, -1000, 712, 30662, 98, 375, -1000, 33165,
	33165, 33165, 142, 141, -1000, 938, -1000, -1000, -1000, 1135,
	1126, 1125, 1314, 191, 931, 171, -1000, 1759, -1000, -1000,
	-1000, 3593, -59, -1000, 124, -1000, -1000, -1000, 124, -1000,
	-1000, 178, 1409, 1409, 26234, 1409, -1000, -1000, -1000, 4672,
	362, 33165, 33165, 1525, 694, 1626, 376, -1000, -1000, -1000,
	-1000, -1000, -1000, 1170, -1000, 654, -1000, 418, 362, 4672,
	1041, 719, 1731, 9965, 1822, 26726, -1000, -1000, -1000, 3593,
	-1000, 7475, -1000, 715, -1000, -1000, -1000, 18355, 18355, -1000,
	-1000, -1000, 334, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18355, 18355, 18355, 18355, -1000, 918, 918, 918, 18355,
	1105, 1121, 1041, 1624, -1000, 1478, -1000, -1000, 1478, 210,
	-1000, 30170, 1797, -1000, 1041, 1041, 1041, 30170, 1041, 1280,
	-1000, 1478, 18847, -1000, 21307, 1277, 1277, 1277, -1000, 597,
	22291, 1735, 1735, -1000, 1168, 1275, -1000, 1478, 1478, -1000,
	664, -1000, 664, 1265, 1257, -1000, 22291, -1000, -1000, -1000,
	-1000, -1000, 1786, -1000, 98, -1000, 1120, 243, 248, -1000,
	239, 236, 232, 226, 228, -1000, -1000, -1000, -1000, 336,
	142, -1000, -63, 1075, 776, 1699, 141, -1000, 1073, 1067,
	1055, 1046, 214, -1000, -1000, -1000, -1000, 186, 190, -1000,
	441, 1118, 1685, 1659, 1757, 1757, 132, 1409, 1383, 1253,
	-1000, -1000, 1169, -1000, -1000, 1488, 1168, 1486, -1000, 1167,
	-1000, -1000, 30170, -1000, 362, 1727, 1724, 1478, -1000, 1820,
	1811, 1364, 13435, -1000, -1000, 1816, 1807, 918, 918, -1000,
	-1000, 918, 918, 918, 918, -1000, -1000, -1000, 116, -1000,
	-1000, 1874, -1000, 1408, 1478, -1000, 225, -1000, -1000, 1273,
	-1000, 30170, -1000, -1000, 655, -1000, -1000, -1000, 597, -1000,
	1165, 772, 1117, -1000, -1000, -1000, -1000, 358, -1000, -1000,
	-1000, -1000, 1271, -1000, 288, 34227, -1000, -1000, -1000, -1000,
	-1000, -1000, 1691, 1690, 258, -1000, 1116, 1115, -1000, 414,
	1074, 640, -201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 439, 1163, -1000, 170, -1000, -1000,
	411, 1635, 1653, 1805, -1000, 26234, -1000, -1000, 26726, -1000,
	-1000, 347, 347, 22291, 1525, 22291, -1000, -1000, -1000, 18355,
	-1000, 690, -198, 16387, 16387, 1822, -1000, 716, 16387, -1000,
	-1000, -1000, -1000, -1000, -1000, 1105, 216, -250, 10463, 1408,
	1105, -1000, -1000, -1000, -1000, -1000, 1044, -1000, 30662, 597,
	273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16387, 16387, 5483, 34227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, -1000, -1000, 1063, 410, 168,
	-1000, 1749, -1000, 1485, 993, 1659, 1804, 1657, 1655, -1000,
	1109, -242, 1364, 1269, 1484, 1256, 3593, 1252, -1000, 30170,
	-1000, 30170, -1000, 1041, 1402, -1000, 1041, 1820, -1000, 1105,
	246, 246, 1395, -1000, 1585, -236, -257, 1386, -1000, -1000,
	1479, -1000, 597, 263, -1000, 1030, 1010, 215, 197, 33007,
	-1000, -1000, -1000, -1000, -332, -1000, 155, -1000, 152, -1000,
	-1000, -1000, 1082, -1000, 1664, -1000, 1078, -1000, 1803, 1800,
	-1000, 185, 1822, 597, 22291, 597, -1000, 690, 1605, 1378,
	-1000, 1739, 16387, -198, -1000, -1000, 250, -1000, 748, 259,
	707, -1000, 1145, -1000, -1000, 1574, -1000, 30170, -1000, 1161,
	1009, 917, -1000, 16387, 34227, 1783, 1782, 1781, 1714, 9965,
	34188, -1000, -1000, -1000, -1000, -1000, 1031, 991, 24265, 1820,
	-1000, 1250, -1000, -1000, 327, 30170, 1478, -1000, -1000, 886,
	-1000, -1000, -1000, -1000, -1000, 30170, -246, 1246, 267, -1000,
	-1000, 891, 34227, -1000, 1006, -333, 450, 225, 614, 18355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 125, 1314, -198,
	597, 287, -1000, -1000, 250, -1000, -255, 1531, -1000, -1000,
	-1000, -1000, -1000, -1000, 34227, -1000, -336, 34227, 33509, -1000,
	-1000, -1000, 34051, -1000, -1000, -1000, -1000, 198, -1000, -1000,
	3593, 26234, -1000, -1000, 1478, -1000, -258, 1530, 1529, 1845,
	-1000, -337, 33875, -338, 417, 34227, 890, -1000, 16387, -1000,
	614, -1000, 1314, 17371, -1000, -1000, 1872, -1000, 1870, 532,
	532, 33867, 885, 34227, -1000, -340, 404, 34227, -1000, 970,
	-1000, 918, 1105, -1000, -1000, -1000, 367, 1001, -1000, -1000,
	-1000, 33696, -1000, -341, 34227, -1000, -1000, -1000, -1000, -1000,
	401, 33688, -342, -1000, 398, 34227, -1000,
}

var yyPgo = [...]int{
	0, 2333, 2332, 34, 2324, 189, 2323, 2320, 2319, 25,
	23, 19, 28, 2318, 2002, 2000, 1995, 1990, 1988, 2317,
	9, 2316, 2315, 1986, 2311, 2309, 1967, 1953, 1951, 1949,
	2307, 2304, 2298, 1944, 1926, 1921, 12, 2297, 22, 2295,
	6, 135, 153, 2294, 3, 2292, 2290, 10, 2286, 2285,
	1914, 2284, 2283, 2280, 93, 2277, 1912, 1910, 2276, 1908,
	1905, 2275, 2272, 1898, 1896, 1890, 2271, 188, 2270, 2269,
	2268, 175, 89, 144, 2266, 2265, 2262, 102, 75, 1876,
	99, 54, 107, 111, 2261, 27, 50, 177, 2260, 132,
	2259, 129, 2258, 147, 2257, 133, 140, 84, 2234, 2233,
	159, 2232, 2228, 2226, 125, 2218, 2217, 2575, 2216, 2215,
	142, 2214, 65, 48, 43, 2212, 2211, 2209, 2208, 2204,
	21, 644, 2200, 2199, 138, 2197, 2196, 86, 2195, 2194,
	157, 2193, 2192, 2191, 127, 41, 2189, 2186, 45, 2182,
	49, 72, 2178, 90, 2177, 130, 2175, 2173, 31, 17,
	2170, 57, 2167, 56, 2166, 134, 160, 220, 2159, 13,
	18, 11, 2152, 33, 16, 8, 44, 60, 91, 120,
	96, 2151, 14, 39, 112, 94, 85, 40, 2150, 141,
	2145, 82, 145, 122, 119, 143, 2140, 2129, 2128, 1050,
	2125, 121, 78, 2124, 123, 849, 164, 106, 2120, 95,
	2119, 2118, 2117, 2113, 2112, 76, 114, 2111, 2109, 55,
	101, 372, 1754, 59, 146, 2107, 47, 2104, 2103, 2102,
	3014, 108, 71, 100, 2100, 98, 46, 51, 2099, 2096,
	2087, 2077, 2076, 2075, 282, 2074, 2073, 2072, 2071, 348,
	126, 150, 117, 2069, 2068, 118, 97, 2065, 2064, 2063,
	2062, 128, 80, 139, 2060, 110, 103, 124, 2058, 73,
	2057, 2056, 52, 42, 2055, 2052, 2051, 92, 87, 2049,
	64, 38, 32, 70, 7, 2048, 2046, 77, 88, 2045,
	30, 2044, 2, 5, 4, 2043, 2042, 2039, 2038, 2036,
	2035, 2034, 79, 2033, 2030, 67, 2029, 2016, 2011, 36,
	2010, 2009, 2004, 137, 109, 66, 151, 116, 15, 1998,
	1983, 37, 1981, 113, 1979, 53, 1977, 63, 1971, 1964,
	61, 1962, 1960, 62, 1958, 1942, 154, 1591, 446, 1939,
	148, 131, 58, 74, 1933, 1928, 0, 661, 156, 136,
	1918, 1903,
}

var yyR1 = [...]int{
	0, 335, 335, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 338, 338, 102, 102, 100, 100, 101,
	101, 174, 174, 12, 12, 12, 179, 179, 184, 184,
	184, 187, 187, 187, 187, 165, 166, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 309,
	309, 318, 318, 318, 319, 319, 317, 317, 317, 317,
	317, 321, 321, 322, 322, 320, 320, 320, 320, 324,
	324, 325, 325, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 312, 312, 312,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 327, 327, 328, 328, 329, 329, 330, 330, 330,
	330, 331, 331, 331, 331, 331, 332, 332, 332, 332,
	332, 332, 332, 333, 333, 334, 334, 2, 290, 290,
	291, 291, 292, 292, 292, 292, 293, 293, 294, 294,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	24, 208, 208, 311, 311, 311, 305, 305, 305, 307,
	307, 306, 306, 306, 308, 308, 313, 313, 313, 313,
	313, 315, 315, 315, 315, 315, 315, 316, 316, 316,
	314, 314, 48, 48, 49, 49, 49, 154, 154, 154,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 289, 289, 289, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 264,
	265, 265, 265, 265, 265, 265, 265, 265, 252, 252,
	253, 227, 227, 227, 227, 227, 227, 227, 227, 226,
	226, 226, 226, 230, 230, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 229, 229, 229, 229, 229,
	229, 229, 229, 231, 231, 231, 231, 231, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 251, 251, 234, 234, 245, 245, 246, 246, 246,
	243, 243, 244, 244, 237, 238, 247, 239, 239, 239,
	241, 241, 241, 241, 241, 240, 240, 240, 242, 242,
	242, 242, 242, 250, 250, 250, 250, 250, 235, 35,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 276, 276, 201, 201, 202, 202, 254, 254,
	274, 274, 273, 273, 272, 272, 272, 263, 263, 269,
	269, 269, 269, 269, 269, 269, 269, 258, 258, 258,
	257, 257, 259, 259, 262, 262, 271, 271, 270, 270,
	255, 255, 255, 277, 277, 277, 277, 277, 256, 256,
	256, 256, 278, 260, 260, 261, 261, 261, 283, 284,
	282, 282, 282, 282, 282, 117, 117, 117, 266, 266,
	266, 267, 267, 267, 268, 268, 268, 287, 287, 286,
	286, 50, 51, 55, 55, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 153,
	153, 153, 206, 206, 281, 279, 279, 280, 280, 15,
	15, 53, 53, 310, 310, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 285, 285, 285, 17, 17, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 84, 193, 193, 192, 192, 191,
	191, 191, 194, 194, 194, 224, 224, 224, 58, 58,
	62, 62, 65, 65, 65, 63, 64, 27, 28, 28,
	28, 28, 29, 207, 207, 60, 60, 61, 61, 61,
	61, 76, 76, 340, 340, 59, 341, 67, 68, 68,
	69, 69, 69, 197, 197, 73, 73, 73, 71, 71,
	71, 72, 72, 78, 78, 82, 82, 82, 82, 81,
	81, 81, 81, 156, 156, 161, 217, 217, 137, 137,
	157, 157, 162, 162, 162, 163, 163, 164, 164, 164,
	164, 164, 159, 159, 158, 158, 160, 125, 125, 215,
	215, 215, 214, 214, 214, 214, 86, 86, 89, 89,
	91, 91, 91, 91, 91, 94, 139, 139, 111, 111,
	112, 112, 112, 112, 112, 123, 123, 173, 173, 172,
	172, 175, 175, 90, 92, 92, 92, 92, 97, 97,
	98, 98, 99, 99, 205, 205, 222, 222, 222, 103,
	103, 103, 105, 104, 104, 104, 104, 106, 106, 108,
	109, 109, 107, 107, 110, 113, 113, 113, 113, 114,
	114, 83, 83, 83, 83, 83, 83, 83, 190, 190,
	116, 116, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 133, 133, 133, 133, 133, 133, 118, 118,
	118, 118, 118, 118, 118, 77, 77, 134, 134, 134,
	96, 95, 95, 80, 80, 79, 79, 135, 135, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 128, 128, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 339, 339, 130, 129, 129, 129, 129, 129,
	129, 74, 74, 74, 74, 74, 223, 223, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 146, 146, 75, 75, 144, 144, 145, 147, 147,
	143, 143, 143, 120, 120, 120, 120, 120, 120, 120,
	120, 122, 122, 122, 148, 148, 136, 136, 85, 149,
	149, 150, 151, 151, 152, 152, 155, 167, 167, 167,
	168, 168, 168, 168, 124, 124, 169, 169, 169, 119,
	119, 119, 119, 119, 119, 119, 171, 171, 170, 170,
	170, 170, 176, 176, 138, 138, 141, 141, 140, 142,
	177, 177, 181, 181, 178, 178, 182, 182, 182, 182,
	185, 185, 186, 186, 186, 183, 183, 183, 180, 180,
	180, 219, 219, 219, 188, 188, 198, 198, 195, 195,
	196, 196, 189, 189, 236, 236, 204, 204, 203, 203,
	203, 199, 199, 199, 200, 200, 216, 216, 212, 212,
	218, 218, 213, 213, 220, 220, 221, 221, 288, 288,
	248, 248, 298, 298, 249, 249, 299, 299, 301, 301,
	296, 296, 297, 297, 300, 300, 30, 302, 302, 303,
	303, 304, 304, 304, 304, 31, 32, 32, 32, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 336, 337,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 6, 6, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 3, 3, 4, 4, 0, 2, 2, 0, 2,
	2, 3, 3, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 2, 0,
	2, 1, 5, 1, 3, 5, 4, 3, 5, 3,
	8, 10, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 8, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 4, 4, 4, 2, 2,
	2, 6, 2, 4, 4, 4, 5, 7, 6, 3,
	5, 4, 2, 4, 3, 2, 4, 5, 6, 2,
	6, 6, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -335, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -340, -207, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-336, 68, 503, -151, 15, -67, -341, -67, -67, -67,
	-67, -67, -264, -205, 106, 68, 23, -200, 150, 87,
	382, 146, -208, 234, 236, -198, -199, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -107, -220, 72, -210, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	363, 269, 441, 243, 111, 374, 310, 483, 288, 300,
	179, 174, 377, 278, 484, 222, 485, 486, 487, 166,
	488, 237, 236, 297, 270, 112, 298, 360, 217, 489,
	490, 491, 492, 207, 192, 380, 371, 52, 221, 355,
	493, 273, 289, 303, 156, 223, 494, 247, 294, 43,
	7, 210, 251, 361, 271, 218, 208, 331, 181, 495,
	496, 318, 319, 337, 302, 332, 295, 184, 176, 109,
	379, 356, 443, 234, 290, 326, 323, 187, 330, 497,
	150, 498, 188, 299, 375, 248, 321, 357, 147, 131,
	325, 369, 138, 359, 360, 366, -258, 367, 182, 185,
	-224, 147, -193, 358, 239, 260, 412, 188, 189, 148,
	149, 33, 371, 370, 362, -220, 151, 299, -76, 142,
	177, -107, -47, 72, 223, -47, 30, 72, 72, 36,
	72, 298, 361, 361, 75, 441, 191, 21, -327, -308,
	269, -326, -306, 139, 138, 10, 140, 274, 275, 276,
	148, 8, 31, 482, 165, 277, 278, 6, 169, 279,
	280, 183, 9, 281, -311, 74, 72, -210, 21, -327,
	-308, 269, -202, -201, 291, 350, 6, -69, 5, -189,
	152, 295, -87, 450, -93, -222, -220, -211, 74, 252,
	168, 242, 353, 408, 409, 410, 411, 191, 412, 425,
	407, 426, 97, 189, 274, 275, 266, 276, 167, 427,
	115, 196, 177, 231, 362, 230, 235, 413, 414, 428,
	429, 430, 415, 416, 241, 431, 432, 501, 244, 502,
	267, 434, 482, 435, 277, 433, 279, 186, 419, 418,
	417, 420, 280, 402, 403, 421, 51, 423, 422, 424,
	81, -3, -168, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -220, -115, 89, -121, 29, 72, -210, 24,
	-120, -211, -116, -143, -142, -96, 131, 132, 133, 120,
	121, 128, 90, 134, -128, -126, -127, -129, -131, -132,
	74, 73, 82, 75, 76, 77, 78, 83, 408, 409,
	410, 411, 412, 425, 426, 167, 427, 177, 413, 414,
	428, 429, 430, 415, 416, 431, 432, 434, 435, 433,
	419, 418, 417, 420, 402, 403, 421, 423, 422, 424,
	84, 85, -212, -140, -336, 58, 59, 146, 392, 393,
	394, 395, 396, 436, 400, 92, 47, 381, 390, 389,
	388, 386, 387, 383, 385, 384, 153, 382, 126, 391,
	-189, -189, 11, -100, -101, -107, -110, -220, -178, 295,
	-185, -182, 370, 371, -183, -186, -180, -143, 350, 479,
	480, 369, 325, 368, -212, -220, -2, -5, 6, -107,
	-265, -253, -256, -213, 162, -278, -212, -209, 159, 72,
	-210, 252, 143, 168, 139, 88, 444, 23, 25, 242,
	353, 408, 91, 131, 409, 410, 411, 16, 20, 92,
	130, 81, 392, 191, 412, 138, 62, 407, 383, 385,
	381, 382, 359, 29, 10, 26, 170, 202, 22, 124,
	140, 95, 96, 97, 189, 173, 274, 275, 24, 171,
	266, 85, 276, 167, 115, 196, 19, 65, 177, 231,
	11, 362, 185, 238, 13, 406, 113, 230, 14, 235,
	153, 152, 108, 200, 148, 60, 8, 134, 27, 105,
	56, 413, 414, 447, 45, 190, 448, 58, 106, 17,
	386, 387, 31, 436, 415, 178, 449, 416, 126, 205,
	63, 50, 241, 89, 83, 501, 34, 86, 66, 287,
	87, 15, 201, 61, 404, 244, 502, 267, 182, 482,
	204, 450, 165, 107, 277, 141, 391, 268, 240, 59,
	146, 6, 401, 30, 169, 279, 206, 186, 419, 418,
	417, 420, 57, 394, 395, 421, 280, 499, 147, 94,
	402, 403, 151, 183, 84, 5, 44, 32, 9, 281,
	64, 67, 388, 389, 390, 47, 51, 423, 422, 424,
	93, 12, 405, 440, 148, -107, 391, -196, 153, -196,
	183, 182, -196, -196, 147, 98, -53, -107, -310, -305,
	-311, -195, 153, -212, -195, -195, -195, -195, -195, -195,
	-195, -107, 135, -107, 72, 30, -194, 106, 12, 382,
	146, 147, 183, 150, -260, 11, 108, 186, 186, 186,
	187, 186, -192, 361, 363, 184, 364, 365, 12, -84,
	106, 19, -336, -168, -168, 72, 298, 151, -61, -3,
	-11, -9, -10, -3, 98, 30, 30, 74, 51, 30,
	-42, -41, -43, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 30, -289, 68, -248, 350,
	72, -302, -303, -107, 75, 75, 66, 66, 69, 151,
	69, 66, -328, 270, 68, -328, 236, 270, 271, 208,
	234, 150, -328, -328, 236, -328, -328, -328, -328, -328,
	361, -328, -328, -328, 272, 273, -328, 359, 150, -328,
	-328, -328, -328, -328, 71, 66, 69, 260, 66, 11,
	66, -275, 131, 283, 284, 285, 286, 282, 260, 287,
	288, 289, 186, 290, -67, -7, -5, -336, 21, 22,
	147, 374, 69, -87, -171, -336, -337, 70, -169, 19,
	31, -124, 75, 78, -152, -155, -83, -220, 50, -71,
	21, 22, 80, 11, -215, 88, 87, 105, -214, 23,
	72, -210, -211, 74, 135, -83, -118, 108, 89, 106,
	107, 91, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 130, 98, 99, 100, 101, 102,
	103, 104, -190, -336, -96, -336, 136, 137, -121, -121,
	-121, -121, -121, -121, -121, -121, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -336, -336, -336, -336, -336, -336, -3,
	-135, -83, -336, -336, -336, -336, -336, -336, -336, -336,
	-336, -336, -336, -146, -83, -336, -339, -130, -336, -339,
	-130, -339, -130, -339, -336, -339, -130, -339, -130, -339,
	-339, -130, -339, -336, -336, -336, -336, -109, 27, -107,
	-86, -89, -91, -92, -111, -95, -336, -90, -107, -96,
	72, -107, -100, -338, 69, 11, 67, -338, 69, 135,
	69, -179, -184, 372, 374, 295, -183, -183, -219, -212,
	74, 29, 98, 30, 135, -151, -67, 70, 69, -256,
	162, 159, -226, -230, -232, -231, -233, -228, -229, 322,
	325, 329, 327, 323, 328, 131, 326, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 30, 172,
	318, 319, 320, 321, 342, 343, 344, 345, 346, 347,
	348, 349, 301, 324, 438, 302, 303, 304, 305, 306,
	307, 309, 310, 311, 312, 313, 314, 315, 316, 72,
	-211, -278, 68, -212, 23, 150, 72, 89, 72, 72,
	72, -314, -313, -305, -308, -196, 72, 69, 151, 69,
	151, 71, -100, 24, 66, -102, -107, 72, 72, 72,
	72, -307, -305, -308, -221, -220, -209, -194, 74, -83,
	-196, -196, -107, -107, -107, -107, -194, -194, -194, -194,
	-191, 11, 108, 11, -191, -191, -83, -121, -305, 384,
	122, 72, 72, 298, 72, -42, -42, 74, -42, 69,
	98, -42, 70, -135, -288, 500, 69, -304, 23, 374,
	375, 351, -330, 147, 185, 182, -330, -326, 278, -307,
	-306, -305, -328, -329, -212, -328, -328, -328, 361, -328,
	-328, -328, -328, -328, -328, -328, -328, -311, -330, 238,
	69, -330, -307, -305, 282, 282, 282, 282, 282, 282,
	-73, -3, -107, 375, 376, -93, 23, -170, -213, 9,
	108, 69, 18, 69, -167, 25, 26, 135, -122, 51,
	75, 78, -197, 49, -107, -83, -83, -133, 83, 89,
	84, 85, -214, 122, -221, -213, -209, -121, -134, -140,
	-96, 79, 108, 106, 107, 91, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -223, 72, 74, 72, -120, -120, -212, -71, -79,
	-82, 122, -83, -220, -79, -79, -71, -337, -337, -79,
	-82, -79, -79, -79, -79, -82, -79, -71, -71, -79,
	-337, -337, -337, -337, -79, -79, -79, -79, -212, -212,
	-71, -79, -79, -79, -71, -337, 69, -337, -3, -79,
	-79, -337, -83, -83, -143, 74, -79, -143, 74, -79,
	-121, 397, 398, 399, -79, -71, -144, -145, 93, -143,
	-337, -121, -79, -80, -79, -79, -79, -174, 110, -107,
	30, 69, -103, -105, -104, -106, 56, 60, 62, 57,
	58, 59, 63, -205, -86, -94, 47, -336, -112, 110,
	-113, 23, -222, 64, 152, 65, -336, -174, 67, -86,
	-107, -86, -110, -220, 122, -182, -185, 69, 373, 375,
	376, -179, -240, 130, 66, 86, -83, -213, -221, -168,
	-73, -266, -267, -268, -213, 74, 75, -253, -254, -255,
	-256, -269, 162, -277, 154, 156, 157, 44, -257, 163,
	148, 45, -227, -243, 356, -234, 68, -234, -234, 330,
	322, 325, 323, -234, -234, -234, -234, -234, -239, 325,
	-239, -239, -239, -239, 323, 68, 68, -234, -234, -234,
	-245, 68, -245, 317, -246, 68, -246, -246, -246, -246,
	-278, -278, -83, -216, 67, -165, -107, -241, 325, 29,
	24, -241, -48, 195, 168, 68, -309, 69, 29, -315,
	235, -107, -107, -107, -305, -305, -311, -285, 166, 161,
	-107, 69, 69, 72, 72, -261, 11, 108, -194, -220,
	-220, -107, -123, 23, -194, -77, 173, 67, -339, -337,
	72, -41, -120, 70, -108, 27, 74, -303, -222, 350,
	375, -331, 122, -212, -331, -334, 440, 151, 70, 69,
	-328, -331, 256, 238, -331, 11, -276, 19, -71, -337,
	-55, -54, 143, 140, 141, 144, 145, -281, 353, 139,
	179, -95, -336, -337, 69, 135, 52, -124, -124, -155,
	-188, 19, 11, 47, 47, -72, 57, 83, 84, 85,
	135, -336, -134, -121, -121, -121, -77, 88, -337, -79,
	69, -337, 135, -337, -337, -79, -156, 404, -156, -337,
	-337, -337, -337, -337, -337, -337, -337, -79, -79, -337,
	-156, -156, -156, -156, -337, -337, -337, -337, 69, 69,
	-79, -337, -337, -337, -80, -83, -337, -337, -337, 69,
	67, 23, 11, 11, -337, 11, 11, -337, -337, 11,
	-121, -121, -121, -337, -79, -147, -145, 95, -83, -337,
	-337, -337, -337, -337, -337, -119, 30, 47, -336, -3,
	-336, -177, -181, -143, -209, -89, -91, -91, -89, -91,
	56, 56, 56, 61, 56, 61, 56, -104, -222, -337,
	-337, -139, 194, -336, 34, -222, -113, 148, 148, 148,
	-80, -114, 12, -86, -114, -114, 135, -184, -187, 377,
	374, 380, 72, 74, 135, -169, 69, -268, 98, -256,
	68, 72, -262, -211, 45, -257, 148, 45, -259, -257,
	-257, -262, 72, -262, 45, 83, 89, -237, -238, -247,
	-250, -235, 29, 66, 353, 154, 45, 44, 157, 81,
	-244, 357, 75, -239, -239, -234, -234, -234, 330, -234,
	-239, -240, 30, -240, -240, -240, -240, -239, -251, 74,
	-251, 75, -245, 75, 70, 66, -212, -3, 23, -242,
	130, 29, 30, 325, -242, -49, 8, 9, 10, -290,
	-291, -292, 72, 108, 200, 201, -318, 268, -313, 236,
	245, 88, 16, 440, 151, 151, -107, -305, -114, 72,
	72, -191, -194, 34, -121, -308, 188, 189, -174, 147,
	-304, 151, 135, 135, 151, 259, -307, -212, 11, 11,
	256, 11, -307, 292, -197, 69, -206, -257, -287, -255,
	-256, -286, 155, 162, 163, -206, 162, 159, -257, 163,
	154, 155, -203, -257, 151, 23, -206, -206, -263, 98,
	-206, 110, -213, -213, 53, -107, -78, -166, 122, -213,
	-80, -77, 88, -121, -337, -82, -157, -156, 122, -221,
	-157, -157, -337, -212, -161, -336, -156, -157, -157, -156,
	-156, -156, -337, -337, -156, -157, -157, -157, -157, -121,
	-121, -337, -157, -157, -157, -337, -225, 131, 322, 172,
	320, 313, 340, 327, 355, 318, 356, -223, -225, -121,
	-121, -121, -121, -121, 11, 11, 11, 437, -151, 97,
	-83, 94, -176, 66, -177, -138, -141, -140, -336, -3,
	-337, -170, 6, 440, -175, -212, -114, 69, 98, 98,
	-98, -97, 66, 67, -99, 66, -97, 56, 56, -173,
	68, 69, -140, -336, -175, -121, -113, -336, -336, -336,
	-337, -151, -83, -114, 374, 378, 379, -267, -268, -271,
	-270, -212, -211, 154, -277, 44, -277, -262, -262, -262,
	68, 83, -121, 9, 45, 45, 45, 74, 70, -240,
	-240, -239, -234, -240, 72, 131, -240, 70, 69, 70,
	69, 70, 69, -117, 456, 89, -107, -165, -165, 72,
	74, 130, 72, 131, 30, 66, 70, 69, -226, 72,
	72, 72, -321, 440, 241, -319, -317, 247, 248, 249,
	250, 251, -308, 246, -315, 243, 74, 72, -107, -305,
	-194, -121, -239, -107, -307, 122, 122, -212, -307, 256,
	-333, 440, -307, -307, 11, -307, 74, -72, -54, 68,
	-252, 72, -211, -262, -199, 154, 72, 72, 72, -211,
	72, -211, -212, 45, 45, 72, -107, -212, -252, 72,
	-83, -212, -212, 135, -114, 11, 69, -81, -337, -121,
	-157, 135, -157, -217, 72, -157, -157, 69, 69, -157,
	-337, -234, -234, -234, -246, -234, 306, -234, 306, -337,
	-337, 19, 19, 19, 19, -337, -121, -121, -121, -336,
	-75, 401, -83, 28, -176, 69, -337, -337, 47, -337,
	-337, 69, -151, -181, -83, -83, -83, 68, -83, -172,
	-212, 194, -337, -113, -205, -172, -172, -172, -168, 70,
	69, -234, -234, 45, -259, -172, -127, 402, 403, -240,
	-239, 74, -239, 75, 75, 456, 68, -3, 72, 74,
	72, 131, -107, -293, -294, -295, 81, 439, 89, 202,
	203, 164, 204, 205, 206, -292, -226, -226, -226, -324,
	-325, -323, 244, 266, 267, 252, -322, -320, 261, 262,
	263, 264, 88, 74, 74, 74, -316, 235, 88, 244,
	16, 23, -296, -192, -333, -333, 238, -307, -78, -252,
	-153, 167, 168, -226, -226, -216, -259, 45, 72, -204,
	151, 23, 151, -153, -252, 30, 140, 27, -213, -148,
	13, -86, -166, -166, 122, -137, 110, -121, -121, -239,
	72, -121, -121, -121, -121, -337, -337, -337, -121, -337,
	74, 45, -141, -138, 47, -3, -336, -212, -168, -172,
	70, 69, -140, -112, -222, -337, -337, -337, -273, -272,
	67, 158, 81, -270, -167, -167, -262, 70, -240, -240,
	70, 70, -271, -165, 19, -165, -295, 74, 206, 202,
	206, 206, 206, 206, 207, -312, 81, 242, -323, 253,
	461, 237, 268, 75, 75, 109, 31, 32, -320, 75,
	75, 75, 75, -317, 16, 440, -315, 243, 74, 74,
	-297, 38, -299, 39, -332, 23, -332, 256, 11, 70,
	72, -227, -227, 68, -262, 68, 72, -212, -153, 29,
	29, -336, -149, 14, 16, -114, -81, -151, 16, -337,
	-337, -337, -337, -337, -337, -74, 108, 440, 9, -138,
	-3, 70, -212, -113, -272, 72, -263, 74, 165, 70,
	193, -20, -3, -9, -10, -11, -12, -14, -50, -15,
	-16, -21, -22, -17, -56, -57, -65, -63, -64, -60,
	-59, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, -35, 92, 153, 224, 293, 36, 36, 198, 199,
	74, 74, 29, 254, 134, 29, 75, 134, 407, 243,
	74, 72, 244, -236, 152, -300, 43, -298, -249, 42,
	16, -305, -86, -271, -216, -271, -121, -279, -280, 110,
	-159, 405, -150, -83, -136, -85, -83, -148, -166, -162,
	112, 111, -135, -337, 438, 63, 441, -177, -337, 75,
	-107, -274, -273, 194, -165, -83, -83, 72, -46, -218,
	227, 228, 229, -213, -36, -20, 75, 29, 75, 29,
	257, 244, 23, -173, 75, -299, 16, -301, 40, 41,
	74, 440, -114, 70, 68, 70, -337, 69, -212, -158,
	-160, -212, 69, -149, -337, -163, 91, -164, 109, 407,
	-125, 75, 134, -163, 53, 439, 442, 68, -154, 196,
	197, -37, -38, 93, 94, 225, 226, 230, -226, 69,
	503, 255, 255, 74, 38, 74, 16, 16, 236, -148,
	-274, -271, -274, -280, 47, 69, 23, -85, -159, -164,
	114, 115, 194, 114, 115, -120, 53, -172, -165, 72,
	72, 97, 95, -38, -83, -36, 19, 19, 19, 29,
	-213, 97, -20, 74, 74, 29, 241, 21, -308, -149,
	70, 180, -160, -161, 88, -212, 440, 70, -13, -19,
	-12, -9, -10, -11, 293, 92, -36, 94, 503, -47,
	75, -3, -45, -44, 75, -47, 232, 89, 233, 72,
	-121, 258, -159, -274, 181, -164, 441, -283, -284, 66,
	-165, -36, 503, -36, 97, 95, -39, -40, 96, -20,
	69, 231, -308, -336, 442, -284, 66, -283, 66, 10,
	9, 503, 97, 503, 153, -36, 97, 95, -40, -83,
	-44, -121, 178, -282, 166, 161, 164, 30, -282, 97,
	92, 503, 153, -36, 94, -337, -337, 160, 29, 83,
	97, 503, -36, 153, 97, 503, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 716, 716, 716, 716,
	716, 716, 814, -2, 581, 0, 0, 0, 0, -2,
	689, 690, 691, 695, 696, 711, 713, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 40,
	0, 0, 56, 57, 1122, 0, 714, 703, 704, 0,
	0, 1654, 2, 1060, 0, 725, 718, 0, 1122, 1122,
	0, 0, 87, 0, 0, 0, 815, 0, 0, 0,
	1120, 1120, 0, 1120, 1120, 0, 1135, 0, 1117, 1131,
	1132, 1133, 0, 0, 1118, 0, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 0, 638, 832, 1144, 1145, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 0, 0,
	0, 682, 0, 648, 649, 650, 0, 652, 0, 0,
	0, 0, 0, 662, 665, 669, 0, 1060, 1060, 527,
	528, 529, 686, 687, 676, 688, 0, 0, 0, 0,
	0, 715, 305, 307, 0, 327, 0, 330, 333, 1150,
	697, 0, 0, 1175, 1176, 0, 0, 0, 0, 0,
	1505, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1517, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1505, 0, 507, 504, 505, 716, 0, 720, 0,
	1123, 692, 45, 0, 47, 1076, 816, 817, 818, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 0, 1066, 0, 0, 728, 726, 727, 717, 0,
	739, 769, 0, 841, 0, 846, 848, -2, -2, 0,
	889, 890, 891, 892, 893, 894, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 919, 920, 921, 922, 923,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1596, 1597,
	1598, 1599, 1601, 1602, 1604, 1611, 1612, 1615, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1628, 1629, 1634, 1636, 1638,
	1641, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652,
	850, 851, 1030, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1021, 0, 992, 992, 992,
	992, 992, 992, 992, 992, 992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 69, 832, 73, 1570,
	0, 1094, -2, -2, 1096, 0, 0, 0, -2, -2,
	-2, -2, 1371, -2, 1030, 0, 88, 1052, 716, 89,
	0, 370, 371, 0, 1384, 551, 1142, 1143, 1373, 1138,
	1139, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 619, 0, 620, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 639, 640, 682, 642, 0, 0, 1120,
	1120, 0, 0, 0, 0, 553, 554, 682, 682, 682,
	682, 679, 0, 679, 659, 679, 677, 678, 0, 664,
	0, 0, 0, 672, 673, 698, 0, 0, 705, 707,
	708, 709, 710, 706, 0, 0, 0, 309, 0, 0,
	329, 311, 0, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 0, 332, 0, 1148, 1151,
	702, 1166, 1167, 0, 1177, 1178, 187, 187, 0, 0,
	0, 0, 150, 183, 0, 152, 183, 183, 183, 0,
	183, 183, 159, 160, 183, 162, 163, 164, 165, 166,
	183, 168, 169, 170, 183, 183, 173, 183, 183, 176,
	177, 178, 179, 180, 242, 187, 0, 0, 187, 0,
	0, 489, 0, 0, 0, 0, 494, 495, 496, 497,
	0, 0, 500, 501, 725, 42, 52, 0, 721, 722,
	0, 0, 0, 46, 0, 0, 51, 1655, 37, 0,
	0, 1061, 1064, 1065, 1053, 1054, 1057, 0, 0, 723,
	729, 730, 719, 0, 740, 0, 0, 0, 770, 0,
	772, 773, 774, 775, 0, 844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 868, 869, 870, 871, 872,
	873, 874, 847, 0, 861, 0, 0, 0, 910, 911,
	912, 913, 914, 915, 916, 0, 728, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 728, 0,
	0, 887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 1022, 0, 975, 984, 0, 976,
	985, 977, 986, 978, 0, 979, 987, 980, 988, 981,
	982, 989, 983, 0, 883, 0, 0, 71, 0, 831,
	0, 776, 778, 779, 780, -2, 0, 784, 835, 881,
	1144, -2, 0, 0, 0, 63, 64, 0, 0, 0,
	0, 74, 76, 0, 0, 1570, 1097, 1098, 475, 1111,
	1112, 1113, 0, 1109, 0, 1060, 725, 568, 0, 372,
	0, 0, 381, 460, 390, 391, 392, 453, 394, 453,
	453, 0, 453, 453, 453, 453, 453, 467, 467, 467,
	467, 467, 436, 437, 438, 439, 440, 0, 0, 413,
	453, 453, 453, 417, 443, 444, 445, 446, 447, 448,
	449, 450, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 455, 455, 457, 457, 457, 457, 457, 0,
	0, 550, 0, 1136, 85, 0, 470, 0, 470, 0,
	0, 99, 260, 246, 98, 0, 232, 0, 0, 0,
	0, 237, 634, 1119, 0, 627, 65, 628, 629, 630,
	631, 632, 239, 633, 833, 1146, 1147, 641, 683, 684,
	0, 0, 645, 646, 647, 555, 653, 654, 655, 661,
	682, 0, 0, 0, 795, 682, 663, 875, 666, 992,
	0, 700, 699, 0, 712, 306, 308, 310, 328, 0,
	0, 331, 334, 0, 0, 0, 0, 1169, 0, 1171,
	1173, 0, 0, 188, 189, 190, 0, 182, 0, 205,
	245, 0, 151, 0, 185, 153, 154, 155, 183, 157,
	158, 161, 167, 171, 172, 174, 175, 241, 0, 0,
	0, 0, 148, 0, 490, 491, 492, 493, 502, 499,
	728, 0, 0, 693, 694, 48, 0, 0, 1078, 1067,
	0, 0, 0, 0, 1056, 1058, 1059, 0, 0, 1041,
	0, 0, 731, 724, 39, 842, 843, 845, 862, 0,
	864, 866, 771, 741, 0, 1031, -2, 852, 853, 877,
	878, 879, 0, 0, 0, 0, 875, 857, 0, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 909, 1006, 1007, 0, 907, 908, 917, 0, 0,
	885, 735, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 883, 880, 0, 1088, 0, 0,
	0, 957, 0, 0, 892, 1033, 0, 892, 1033, 0,
	0, 0, 0, 0, 0, 0, 1028, 1025, 0, 0,
	993, 0, 0, 0, 884, 0, 0, 0, 0, 830,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 1491,
	790, 0, 835, 0, 0, 0, 883, 839, 0, 839,
	68, 839, 70, 0, 834, 1095, 0, 0, 0, 79,
	80, 75, 1099, 0, 1105, 1106, 1107, 1031, 0, 1066,
	728, 369, 569, 571, 574, 575, 576, 373, 375, 376,
	377, 0, -2, 542, 1501, 1548, -2, -2, 534, 1415,
	-2, -2, 380, 462, 461, 393, 0, 467, 467, 453,
	453, 453, 453, 422, 467, 425, 428, 429, 475, 0,
	475, 475, 475, 475, 467, 0, 0, 414, 415, 416,
	405, 0, 406, 455, 408, 0, 409, 410, 411, 412,
	548, 549, 0, 0, 0, 0, 0, 478, 0, 0,
	1121, 478, 0, 262, 263, 208, 101, 0, 0, 247,
	0, 368, 0, 621, 0, 623, 236, 625, 635, 636,
	626, 0, 0, 643, 644, 839, 0, 0, 656, 680,
	681, 679, 682, 0, 660, 674, 0, 0, 667, 0,
	701, 312, 313, 335, 71, 0, 1149, 1168, 0, 1172,
	1174, 0, 191, 193, 0, 142, 0, 0, 184, 0,
	156, 0, 0, 0, 0, 0, 498, 0, 723, 53,
	582, 583, -2, 612, 1128, 612, 612, 600, 517, 612,
	0, 49, 0, 1077, 0, 0, 0, 1062, 1063, 1055,
	0, 1114, 1115, 1042, 1043, 86, 732, 863, 865, 867,
	0, 883, 854, 875, 858, 0, 855, 0, 849, 0,
	0, 750, 0, 750, 750, 0, 943, 0, 944, 971,
	0, 956, 750, 750, 0, 0, 0, 0, 0, 0,
	950, 951, 952, 953, 750, 750, 750, 750, 0, 0,
	0, 750, 750, 750, 0, 888, -2, 954, 955, 0,
	0, 0, 0, 0, 999, 0, 0, 1000, 965, 0,
	0, 0, 0, 0, 1052, 0, 1026, 0, 0, 974,
	994, 995, 996, 997, 998, 1082, 0, 0, 0, 1071,
	0, 839, 1090, 0, 0, 777, 810, 812, 0, 807,
	820, 821, 823, 0, 825, 0, 827, 828, 797, 783,
	882, 785, 0, 0, 0, 835, 794, 0, 0, 0,
	0, 1052, 0, 839, 61, 62, 0, 77, 78, 0,
	0, 84, 476, 477, 0, 207, 0, 572, 0, 374,
	0, 535, 0, 0, 519, 534, 530, 531, 534, 533,
	534, 525, 535, 526, 0, 382, 0, 384, 385, 386,
	387, 388, 0, 0, 466, 0, 484, 486, 0, 0,
	389, 463, 0, 475, 475, 467, 420, 421, 453, 426,
	475, 430, 0, 431, 432, 433, 434, 475, 0, 451,
	0, 0, 407, 0, 565, 0, 1137, 85, 85, 93,
	0, 0, 0, 0, 94, 0, 264, 265, 266, 0,
	209, 210, 0, 0, 0, 0, 111, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 66, 240, 651, 556,
	557, 682, 658, 0, 876, 668, 670, 671, 467, 0,
	1170, 0, 0, 0, 0, 0, 203, 186, 0, 0,
	0, 0, 149, 0, 731, 0, 0, 534, 0, 601,
	602, 0, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1129, 1130, 0, 0, 0, 518,
	0, 0, 1080, 1079, 1068, 38, 839, 0, 742, 1032,
	0, 856, 0, 859, 750, 886, 928, 751, 737, 0,
	929, 930, 750, 743, 744, 746, 945, 932, 933, 946,
	947, 948, 750, 750, 949, 937, 936, 935, 938, 0,
	0, 750, 941, 940, 942, 924, 0, 453, 453, 1011,
	453, 457, 1014, 453, 1016, 453, 1019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1023, 973,
	1029, 0, 54, 0, 1082, 1069, 1084, 1086, 0, 0,
	0, 0, -2, 1351, 0, 801, 1052, 0, 0, 0,
	804, 811, 0, 0, 805, 0, 806, 824, 826, 781,
	0, 0, 786, 0, 0, -2, 793, 0, 0, 0,
	803, 1060, 840, 60, 81, 82, 83, 570, 573, 0,
	536, 453, 453, 0, 540, 532, 541, 521, 522, 524,
	0, 383, 464, 0, 483, 485, 487, 488, 454, 418,
	419, 475, 427, 423, 468, 469, 435, 467, 0, 467,
	0, 458, 0, 552, 566, 0, 0, 91, 0, 479,
	480, 0, 471, 472, 0, 0, 216, 0, 212, 0,
	0, 0, 119, 0, 102, 103, 104, 106, 107, 0,
	0, 0, 100, 0, 249, 0, 252, 253, 622, 624,
	657, 796, 1160, 829, 203, 192, 194, 195, 203, 206,
	143, 0, 144, 146, 0, 145, 503, 86, 584, 0,
	609, 0, 0, 1136, 532, 0, -2, 587, 592, 593,
	594, 595, 596, 0, 607, 0, 589, 0, 609, 0,
	604, 0, 0, 0, 1044, 0, 86, 86, 925, 860,
	927, 0, 931, 748, 747, 926, 934, 0, 0, 939,
	958, 1008, 467, 1012, 1013, 1015, 1017, 1018, 1020, 960,
	959, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 1027, 0, 55, 0, 1087, -2, 0, 0,
	72, 0, 1060, 1091, 1092, 1093, 808, 0, 813, 0,
	799, 0, 835, 791, 0, 0, 0, 0, 59, 509,
	0, 1057, 1057, 520, 534, 0, 465, 0, 0, 424,
	475, 452, 475, 0, 0, 567, 0, 85, 481, 482,
	473, 474, 0, 85, 217, 218, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 211, 213, 214, 215, 137,
	120, 121, 0, 0, 0, 0, 112, 113, 0, 0,
	0, 0, 0, 108, 109, 110, 248, 0, 0, 251,
	0, 0, 1162, 1156, 196, 196, 0, 147, 0, 0,
	586, 610, 0, 381, 381, 0, 534, 0, 603, 0,
	1126, 1127, 0, 598, 609, 0, 0, 0, 1081, 1049,
	0, 839, 0, 733, 738, 1052, 0, 0, 0, 1009,
	1010, 0, 0, 0, 0, 967, 968, 969, 1001, 972,
	1024, 0, 1085, 1070, 0, 1074, 0, 802, 58, 0,
	798, 0, 787, 789, 835, 836, 837, 838, 508, 512,
	0, 517, 0, 537, 538, 539, 523, 0, 441, 442,
	456, 459, 0, 92, 0, 0, 219, 220, 221, 222,
	224, 225, 0, 0, 0, 97, 0, 0, 122, 0,
	0, 0, 0, 132, 133, 134, 135, 136, 114, 115,
	116, 117, 118, 105, 0, 0, 250, 0, 255, 256,
	1124, 1164, -2, 0, 140, 0, 141, 204, 0, 585,
	611, 378, 379, 0, 1136, 0, 588, 597, 599, 0,
	606, 0, 762, 0, 0, 1044, 86, 752, 0, 990,
	991, 961, 963, 962, 964, 0, 0, 0, 0, 1073,
	0, 809, 800, 792, 513, 514, 0, 516, 0, 510,
	0, 85, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 0, 0, 0, 226, 227, 228, 229,
	138, 139, 123, 124, 0, 126, 127, 0, 0, 0,
	258, 0, 254, 797, 0, 1156, 0, 1158, 0, 1155,
	0, 197, 839, 0, 0, 0, 605, 0, 615, 0,
	43, 0, 1050, 1051, 1045, 1046, 1048, 1049, 734, 0,
	0, 0, 749, 970, 0, 0, 0, 1083, -2, 515,
	0, 90, 511, 267, 96, 0, 0, 1138, 0, 0,
	294, 295, 296, 1140, 0, 336, 0, 128, 0, 130,
	131, 257, 0, 36, 0, 1163, 0, 1161, 0, 0,
	1157, 0, 1044, 510, 0, 510, 614, 0, 0, 763,
	764, 0, 0, 762, 745, 753, 0, 756, 0, 0,
	0, 767, 0, 754, 1002, 0, 1005, 0, 85, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 292, 0,
	0, 125, 129, 259, 1125, 1165, 0, 0, 0, 1049,
	590, 0, 608, 616, 0, 0, 0, 1047, 44, 0,
	757, 758, 759, 760, 761, 0, 1003, 0, 0, 268,
	269, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1141, 230, 337, 1159, 1153, 198, 199, 200, 202, 762,
	510, 0, 765, 766, 0, 768, 0, 543, 85, 270,
	271, 272, 273, 274, 0, 276, 0, 0, 0, 288,
	289, 290, 0, 297, 299, 300, 301, 0, 303, 304,
	293, 0, 41, 591, 0, 755, 0, 544, 545, 0,
	95, 0, 0, 0, 0, 0, 0, 285, 0, 291,
	0, 302, 201, 0, 1004, 546, 0, 547, 0, 0,
	0, 0, 0, 280, 281, 0, 0, 0, 286, 0,
	298, 0, 0, 558, 560, 561, 0, 0, 559, 275,
	277, 0, 283, 0, 0, 617, 618, 562, 563, 564,
	0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:490
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:532
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:538
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:544
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:557
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:588
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:597
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:617
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:643
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:655
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:687
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:691
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:695
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:738
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:748
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:755
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:774
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:810
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:835
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:839
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:843
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:847
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetObj: yyDollar[5].charsetDefOpt, CollateObj: yyDollar[6].collateDefOpt}
		}
	case 94:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:855
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetObj: yyDollar[5].charsetDefOpt, CollateObj: yyDollar[6].collateDefOpt}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:863
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:867
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:871
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:899
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:908
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:953
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1067
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1082
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1101
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1122
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1350
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1415
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1477
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1514
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1586
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1604
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1608
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1612
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1626
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1665
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1689
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1699
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1721
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1726
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1731
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1737
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1755
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1781
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2022
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2038
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2065
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2463
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2467
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2476
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2494
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2521
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.charsetDefOpt = &Charset{CharsetDefault: false, CharsetStr: ""}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2555
		{
			yyVAL.charsetDefOpt = &Charset{CharsetDefault: false, CharsetStr: string(yyDollar[3].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yyVAL.charsetDefOpt = &Charset{CharsetDefault: false, CharsetStr: string(yyDollar[3].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2563
		{
			yyVAL.charsetDefOpt = &Charset{CharsetDefault: true, CharsetStr: string(yyDollar[4].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2567
		{
			yyVAL.charsetDefOpt = &Charset{CharsetDefault: true, CharsetStr: string(yyDollar[4].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2585
		{
			yyVAL.collateDefOpt = &Collate{CollateDefault: false, CollateStr: ""}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.collateDefOpt = &Collate{CollateDefault: false, CollateStr: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.collateDefOpt = &Collate{CollateDefault: false, CollateStr: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2597
		{
			yyVAL.collateDefOpt = &Collate{CollateDefault: true, CollateStr: string(yyDollar[3].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.collateDefOpt = &Collate{CollateDefault: true, CollateStr: string(yyDollar[3].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.colKeyOpt = colKey
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2641
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2707
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2711
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2716
		{
			yyVAL.indexOptions = nil
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2765
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2769
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2773
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2777
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2823
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = ""
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 543:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2876
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 544:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2880
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 545:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2884
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 546:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2888
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 547:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2892
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2906
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2910
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2916
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2957
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2978
		{
			yyVAL.boolean = true
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.boolean = true
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.boolean = false
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.str = yyDollar[1].str
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = string("")
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3056
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3079
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3086
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3097
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3106
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 591:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3110
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3142
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3149
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3171
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3176
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3180
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3184
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3192
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.columnOrder = nil
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3212
		{
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
		}
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3218
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3234
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3238
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3244
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3248
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3266
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3270
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3276
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3284
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3288
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3296
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3304
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3312
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3320
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3328
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3336
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3345
		{

		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3379
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3387
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3391
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3395
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3399
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3403
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3407
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3419
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3427
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3431
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3435
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3443
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3448
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3461
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3469
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3492
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3496
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3529
		{
			yyVAL.boolean = false
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.boolean = true
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3563
		{
			yyVAL.showFilter = nil
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3577
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3581
		{
			yyVAL.str = SessionStr
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3585
		{
			yyVAL.str = GlobalStr
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3595
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &Begin{}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3605
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &Begin{}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.statement = &Commit{}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.statement = &Rollback{}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3643
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3647
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3651
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3671
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3709
		{
			setAllowComments(yylex, true)
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3719
		{
			yyVAL.bytes2 = nil
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3723
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = UnionStr
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = UnionAllStr
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = UnionDistinctStr
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			yyVAL.byt = 0
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.byt = 1
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = SQLCacheStr
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = DistinctStr
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.str = StraightJoinHint
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3818
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3832
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3836
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3852
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3857
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3865
		{
			yyVAL.exprs = nil
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3869
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.over = nil
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.over = yyDollar[1].over
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.frame = nil
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3898
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3963
		{
			yyVAL.window = nil
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.window = yyDollar[2].window
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4049
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4078
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4082
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4088
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4093
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4108
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 792:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4112
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.expr = nil
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4140
		{
			yyVAL.columns = nil
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4144
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4170
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4183
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4187
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4191
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4201
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4207
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4213
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = JoinStr
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = JoinStr
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = JoinStr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = StraightJoinStr
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = LeftJoinStr
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = LeftJoinStr
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = RightJoinStr
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = RightJoinStr
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = NaturalJoinStr
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4277
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4287
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4293
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4313
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.indexHints = nil
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4322
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4326
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4330
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.expr = nil
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4403
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4407
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4411
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4423
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4427
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = IsNullStr
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = IsNotNullStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = IsTrueStr
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = IsNotTrueStr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = IsFalseStr
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = IsNotFalseStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = EqualStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = LessThanStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = GreaterThanStr
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = LessEqualStr
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = GreaterEqualStr
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = NotEqualStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = nil
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4532
		{
			yyVAL.selectExprs = nil
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4607
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4615
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4643
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4651
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4663
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4727
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4859
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4863
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4867
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 961:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4871
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 962:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4875
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 963:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4879
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 964:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4883
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4887
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 967:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 970:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4941
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4980
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 990:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5003
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5007
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = ""
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = BooleanModeStr
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5070
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5086
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5090
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5094
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5106
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5116
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5124
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5136
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = nil
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = string("")
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5164
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5170
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = nil
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5193
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &NullVal{}
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5233
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5241
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5246
		{
			yyVAL.exprs = nil
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5256
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5266
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5271
		{
			yyVAL.expr = nil
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5275
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5286
		{
			yyVAL.orderBy = nil
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5300
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5306
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = AscScr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = AscScr
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = DescScr
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5324
		{
			yyVAL.limit = nil
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5332
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5336
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = ForUpdateStr
		}
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = ShareModeStr
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5372
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5376
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5389
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5393
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5397
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5403
		{
			yyVAL.columns = nil
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5407
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5425
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5430
		{
			yyVAL.assignExprs = nil
		}
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5434
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5444
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5454
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5486
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5489
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5499
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5516
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5542
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5548
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5580
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5587
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = &Default{}
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5611
		{
			yyVAL.byt = 0
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.byt = 1
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5616
		{
			yyVAL.byt = 0
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.byt = 1
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5621
		{
			yyVAL.byt = 0
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5623
		{
			yyVAL.byt = 1
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = ""
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = IgnoreStr
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5631
		{
			yyVAL.sqlVal = nil
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5633
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5637
		{
			yyVAL.empty = struct{}{}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5639
		{
			yyVAL.empty = struct{}{}
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5642
		{
			yyVAL.empty = struct{}{}
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.empty = struct{}{}
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.empty = struct{}{}
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = UniqueStr
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = FulltextStr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = SpatialStr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = ""
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5659
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5662
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5664
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5672
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5682
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = string("")
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5721
		{
			yyVAL.EnclosedBy = nil
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5725
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5730
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.sqlVal = nil
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5748
		{
			yyVAL.sqlVal = nil
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5752
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5757
		{
			yyVAL.Fields = nil
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5761
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5766
		{
			yyVAL.Lines = nil
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5770
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5775
		{
			yyVAL.sqlVal = nil
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5779
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5785
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5795
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5801
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5805
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5811
		{
			yyVAL.lockType = LockRead
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5815
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.lockType = LockWrite
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5823
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5829
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5835
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5839
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6355
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6364
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
