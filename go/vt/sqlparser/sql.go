// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const TEMPORARY = 57525
const CLASS_ORIGIN = 57526
const SUBCLASS_ORIGIN = 57527
const MESSAGE_TEXT = 57528
const MYSQL_ERRNO = 57529
const CONSTRAINT_CATALOG = 57530
const CONSTRAINT_SCHEMA = 57531
const CONSTRAINT_NAME = 57532
const CATALOG_NAME = 57533
const SCHEMA_NAME = 57534
const TABLE_NAME = 57535
const COLUMN_NAME = 57536
const CURSOR_NAME = 57537
const SIGNAL = 57538
const RESIGNAL = 57539
const SQLSTATE = 57540
const DECLARE = 57541
const CONDITION = 57542
const CURSOR = 57543
const CONTINUE = 57544
const EXIT = 57545
const UNDO = 57546
const HANDLER = 57547
const FOUND = 57548
const SQLWARNING = 57549
const SQLEXCEPTION = 57550
const USER = 57551
const BEGIN = 57552
const START = 57553
const TRANSACTION = 57554
const COMMIT = 57555
const ROLLBACK = 57556
const SAVEPOINT = 57557
const WORK = 57558
const RELEASE = 57559
const BIT = 57560
const TINYINT = 57561
const SMALLINT = 57562
const MEDIUMINT = 57563
const INT = 57564
const INTEGER = 57565
const BIGINT = 57566
const INTNUM = 57567
const REAL = 57568
const DOUBLE = 57569
const FLOAT_TYPE = 57570
const DECIMAL = 57571
const NUMERIC = 57572
const DEC = 57573
const FIXED = 57574
const PRECISION = 57575
const TIME = 57576
const TIMESTAMP = 57577
const DATETIME = 57578
const YEAR = 57579
const CHAR = 57580
const VARCHAR = 57581
const BOOL = 57582
const CHARACTER = 57583
const VARBINARY = 57584
const NCHAR = 57585
const NVARCHAR = 57586
const NATIONAL = 57587
const VARYING = 57588
const TEXT = 57589
const TINYTEXT = 57590
const MEDIUMTEXT = 57591
const LONGTEXT = 57592
const LONG = 57593
const BLOB = 57594
const TINYBLOB = 57595
const MEDIUMBLOB = 57596
const LONGBLOB = 57597
const JSON = 57598
const ENUM = 57599
const GEOMETRY = 57600
const POINT = 57601
const LINESTRING = 57602
const POLYGON = 57603
const GEOMETRYCOLLECTION = 57604
const MULTIPOINT = 57605
const MULTILINESTRING = 57606
const MULTIPOLYGON = 57607
const LOCAL = 57608
const LOW_PRIORITY = 57609
const NULLX = 57610
const AUTO_INCREMENT = 57611
const APPROXNUM = 57612
const SIGNED = 57613
const UNSIGNED = 57614
const ZEROFILL = 57615
const COLLATION = 57616
const DATABASES = 57617
const SCHEMAS = 57618
const TABLES = 57619
const FULL = 57620
const PROCESSLIST = 57621
const COLUMNS = 57622
const FIELDS = 57623
const ENGINES = 57624
const PLUGINS = 57625
const NAMES = 57626
const CHARSET = 57627
const GLOBAL = 57628
const SESSION = 57629
const ISOLATION = 57630
const LEVEL = 57631
const READ = 57632
const WRITE = 57633
const ONLY = 57634
const REPEATABLE = 57635
const COMMITTED = 57636
const UNCOMMITTED = 57637
const SERIALIZABLE = 57638
const CURRENT_TIMESTAMP = 57639
const DATABASE = 57640
const CURRENT_DATE = 57641
const CURRENT_USER = 57642
const CURRENT_TIME = 57643
const LOCALTIME = 57644
const LOCALTIMESTAMP = 57645
const UTC_DATE = 57646
const UTC_TIME = 57647
const UTC_TIMESTAMP = 57648
const REPLACE = 57649
const CONVERT = 57650
const CAST = 57651
const SUBSTR = 57652
const SUBSTRING = 57653
const TRIM = 57654
const LEADING = 57655
const TRAILING = 57656
const BOTH = 57657
const GROUP_CONCAT = 57658
const SEPARATOR = 57659
const TIMESTAMPADD = 57660
const TIMESTAMPDIFF = 57661
const OVER = 57662
const WINDOW = 57663
const GROUPING = 57664
const GROUPS = 57665
const AVG = 57666
const BIT_AND = 57667
const BIT_OR = 57668
const BIT_XOR = 57669
const COUNT = 57670
const JSON_ARRAYAGG = 57671
const JSON_OBJECTAGG = 57672
const MAX = 57673
const MIN = 57674
const STDDEV_POP = 57675
const STDDEV = 57676
const STD = 57677
const STDDEV_SAMP = 57678
const SUM = 57679
const VAR_POP = 57680
const VARIANCE = 57681
const VAR_SAMP = 57682
const CUME_DIST = 57683
const DENSE_RANK = 57684
const FIRST_VALUE = 57685
const LAG = 57686
const LAST_VALUE = 57687
const LEAD = 57688
const NTH_VALUE = 57689
const NTILE = 57690
const ROW_NUMBER = 57691
const PERCENT_RANK = 57692
const RANK = 57693
const MATCH = 57694
const AGAINST = 57695
const BOOLEAN = 57696
const LANGUAGE = 57697
const WITH = 57698
const QUERY = 57699
const EXPANSION = 57700
const UNUSED = 57701
const ARRAY = 57702
const DESCRIPTION = 57703
const EMPTY = 57704
const EXCEPT = 57705
const JSON_TABLE = 57706
const LATERAL = 57707
const MEMBER = 57708
const RECURSIVE = 57709
const ACTIVE = 57710
const ADMIN = 57711
const BUCKETS = 57712
const CLONE = 57713
const COMPONENT = 57714
const DEFINITION = 57715
const ENFORCED = 57716
const EXCLUDE = 57717
const FOLLOWING = 57718
const GEOMCOLLECTION = 57719
const GET_MASTER_PUBLIC_KEY = 57720
const HISTOGRAM = 57721
const HISTORY = 57722
const INACTIVE = 57723
const INVISIBLE = 57724
const LOCKED = 57725
const MASTER_COMPRESSION_ALGORITHMS = 57726
const MASTER_PUBLIC_KEY_PATH = 57727
const MASTER_TLS_CIPHERSUITES = 57728
const MASTER_ZSTD_COMPRESSION_LEVEL = 57729
const NESTED = 57730
const NETWORK_NAMESPACE = 57731
const NOWAIT = 57732
const NULLS = 57733
const OJ = 57734
const OLD = 57735
const OPTIONAL = 57736
const ORDINALITY = 57737
const ORGANIZATION = 57738
const OTHERS = 57739
const PATH = 57740
const PERSIST = 57741
const PERSIST_ONLY = 57742
const PRECEDING = 57743
const PRIVILEGE_CHECKS_USER = 57744
const PROCESS = 57745
const RANDOM = 57746
const REFERENCE = 57747
const REQUIRE_ROW_FORMAT = 57748
const RESOURCE = 57749
const RESPECT = 57750
const RESTART = 57751
const RETAIN = 57752
const REUSE = 57753
const ROLE = 57754
const SECONDARY = 57755
const SECONDARY_ENGINE = 57756
const SECONDARY_LOAD = 57757
const SECONDARY_UNLOAD = 57758
const SKIP = 57759
const SRID = 57760
const THREAD_PRIORITY = 57761
const TIES = 57762
const UNBOUNDED = 57763
const VCPU = 57764
const VISIBLE = 57765
const SYSTEM = 57766
const INFILE = 57767

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 48,
	-2, 868,
	-1, 41,
	141, 930,
	142, 956,
	-2, 119,
	-1, 48,
	181, 520,
	182, 520,
	-2, 510,
	-1, 55,
	1, 1377,
	444, 1377,
	-2, 548,
	-1, 441,
	128, 966,
	-2, 960,
	-1, 442,
	128, 967,
	-2, 961,
	-1, 546,
	98, 1197,
	128, 1197,
	-2, 914,
	-1, 547,
	98, 1299,
	128, 1299,
	-2, 915,
	-1, 552,
	98, 1217,
	128, 1217,
	-2, 916,
	-1, 553,
	98, 1257,
	128, 1257,
	-2, 917,
	-1, 554,
	98, 1258,
	128, 1258,
	-2, 918,
	-1, 555,
	98, 1152,
	128, 1152,
	-2, 922,
	-1, 557,
	98, 1236,
	128, 1236,
	-2, 924,
	-1, 973,
	1, 600,
	5, 600,
	12, 600,
	13, 600,
	14, 600,
	15, 600,
	17, 600,
	19, 600,
	30, 600,
	31, 600,
	56, 600,
	57, 600,
	58, 600,
	59, 600,
	60, 600,
	62, 600,
	63, 600,
	66, 600,
	67, 600,
	69, 600,
	70, 600,
	444, 600,
	-2, 630,
	-1, 977,
	67, 65,
	69, 65,
	-2, 69,
	-1, 1184,
	128, 969,
	-2, 965,
	-1, 1353,
	68, 367,
	-2, 1116,
	-1, 1356,
	68, 363,
	72, 363,
	-2, 1051,
	-1, 1357,
	68, 364,
	72, 364,
	-2, 1061,
	-1, 1451,
	44, 410,
	148, 412,
	150, 410,
	151, 410,
	-2, 450,
	-1, 1527,
	5, 49,
	-2, 696,
	-1, 1812,
	69, 1095,
	70, 1095,
	128, 1095,
	-2, 555,
	-1, 1835,
	1, 651,
	5, 651,
	12, 651,
	13, 651,
	14, 651,
	15, 651,
	17, 651,
	19, 651,
	30, 651,
	31, 651,
	56, 651,
	57, 651,
	58, 651,
	59, 651,
	60, 651,
	62, 651,
	63, 651,
	66, 651,
	67, 651,
	69, 651,
	70, 651,
	444, 651,
	-2, 630,
	-1, 1909,
	148, 413,
	-2, 411,
	-1, 1972,
	5, 49,
	-2, 888,
	-1, 2119,
	41, 976,
	-2, 974,
	-1, 2228,
	5, 49,
	-2, 891,
}

const yyPrivate = 57344

const yyLast = 26791

var yyAct = [...]int{

	504, 78, 2244, 2331, 2377, 2342, 2333, 2245, 2352, 2343,
	2272, 2231, 2167, 7, 750, 2166, 6, 2165, 5, 1984,
	1401, 2168, 8, 2218, 2213, 2135, 1848, 2092, 2119, 1829,
	1566, 2052, 1399, 1728, 924, 2032, 1738, 447, 2164, 3,
	1358, 1595, 1805, 433, 2014, 1350, 1623, 2232, 1849, 81,
	1306, 1806, 1162, 460, 503, 1308, 1329, 1302, 1902, 760,
	1008, 1737, 1354, 1567, 1802, 973, 370, 373, 1449, 426,
	1340, 366, 1676, 1390, 102, 737, 1480, 1339, 1814, 78,
	1821, 571, 1774, 1155, 91, 1096, 1209, 1432, 1170, 1218,
	1703, 1704, 1141, 1091, 1281, 569, 566, 1285, 1346, 1116,
	1090, 391, 826, 1386, 1659, 970, 1186, 988, 567, 1276,
	1273, 833, 810, 1292, 449, 829, 789, 425, 548, 444,
	565, 987, 544, 429, 390, 545, 846, 551, 367, 368,
	369, 540, 714, 969, 537, 788, 979, 2399, 2395, 2385,
	2367, 2365, 2347, 2326, 2280, 943, 80, 1139, 1883, 2008,
	34, 2358, 70, 37, 38, 83, 942, 2146, 861, 860,
	870, 871, 863, 864, 865, 866, 867, 868, 869, 862,
	67, 2266, 872, 2015, 34, 2341, 34, 34, 34, 2226,
	2314, 2017, 2265, 1795, 439, 1502, 1964, 713, 837, 1445,
	1374, 85, 86, 87, 88, 89, 1604, 1843, 1561, 1603,
	1145, 820, 1605, 1844, 1845, 1326, 1327, 1150, 1151, 1325,
	763, 748, 79, 381, 989, 1562, 990, 2077, 1304, 380,
	1220, 1642, 1748, 1143, 1144, 764, 765, 1360, 2225, 1444,
	807, 1380, 716, 1375, 1362, 1362, 79, 1375, 79, 79,
	79, 34, 35, 70, 37, 38, 1366, 1368, 2061, 1367,
	2020, 1387, 1951, 1949, 360, 61, 1126, 379, 388, 2356,
	2277, 76, 561, 773, 371, 39, 65, 66, 2275, 2276,
	2328, 519, 62, 525, 527, 526, 523, 524, 522, 521,
	520, 105, 70, 37, 38, 1142, 2116, 2018, 2019, 2021,
	2022, 2023, 528, 529, 2115, 1462, 113, 109, 110, 49,
	111, 2114, 2337, 79, 39, 2332, 435, 2113, 2111, 1461,
	2112, 2110, 2197, 2198, 2162, 374, 2269, 2270, 1677, 2335,
	1408, 742, 2233, 1986, 97, 1587, 761, 759, 762, 764,
	765, 1695, 1696, 115, 114, 757, 758, 2340, 756, 749,
	749, 755, 2391, 361, 2313, 2160, 1407, 2214, 1731, 363,
	769, 980, 1466, 749, 1678, 718, 717, 375, 1286, 2033,
	2034, 1460, 1007, 78, 78, 1006, 41, 72, 45, 44,
	47, 1007, 58, 1710, 1908, 778, 2400, 99, 780, 2397,
	779, 96, 82, 116, 815, 364, 1852, 107, 106, 741,
	745, 1007, 823, 747, 2386, 1854, 2045, 2368, 48, 75,
	74, 777, 781, 56, 57, 46, 1007, 715, 372, 2200,
	1854, 372, 1458, 1452, 1453, 724, 1451, 1127, 1454, 1455,
	770, 771, 387, 2147, 774, 1070, 743, 746, 103, 744,
	1649, 1365, 1681, 1079, 1389, 1375, 775, 1415, 104, 1679,
	1680, 881, 1414, 105, 883, 1594, 372, 2381, 1593, 59,
	60, 1882, 1592, 1464, 1467, 2334, 2336, 386, 2044, 387,
	1621, 711, 1698, 50, 73, 2016, 52, 53, 63, 71,
	64, 818, 112, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 372, 2322, 922, 1621, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 77, 941,
	944, 944, 944, 950, 944, 944, 950, 944, 950, 959,
	960, 961, 962, 963, 964, 824, 974, 2224, 812, 1459,
	1939, 2093, 77, 923, 77, 77, 77, 1145, 719, 107,
	106, 751, 333, 98, 814, 2095, 1936, 1620, 882, 1621,
	71, 108, 1775, 1330, 772, 740, 1872, 1457, 1634, 1725,
	1143, 1144, 2379, 1311, 1313, 2380, 1928, 2378, 1608, 1537,
	2043, 1600, 551, 1639, 1638, 1497, 1624, 551, 1485, 1534,
	2048, 1621, 1621, 968, 884, 885, 1470, 1165, 1000, 71,
	985, 1620, 872, 852, 1777, 1635, 1463, 1720, 1710, 77,
	733, 1001, 1717, 1321, 1124, 1716, 1719, 723, 1873, 1117,
	1640, 862, 1627, 1158, 872, 1423, 2094, 739, 1628, 753,
	845, 1729, 1712, 1819, 1818, 886, 887, 888, 889, 890,
	891, 892, 893, 865, 866, 867, 868, 869, 862, 834,
	976, 872, 2371, 2353, 2370, 1312, 1620, 1465, 1797, 853,
	1134, 998, 1005, 992, 1066, 782, 946, 948, 993, 952,
	954, 978, 957, 720, 1274, 983, 1550, 945, 947, 949,
	951, 953, 955, 956, 958, 1779, 1274, 1637, 1620, 1620,
	1783, 1724, 1778, 2049, 1776, 1721, 1710, 884, 885, 1781,
	1007, 766, 2384, 1713, 1711, 445, 1957, 884, 885, 1163,
	1164, 2323, 1780, 2273, 1072, 2298, 1118, 2297, 1002, 1860,
	1712, 738, 1424, 840, 1193, 925, 754, 1782, 1784, 726,
	727, 728, 729, 730, 731, 2247, 749, 2229, 940, 1191,
	1192, 1190, 2007, 749, 749, 749, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 749, 861,
	860, 870, 871, 863, 864, 865, 866, 867, 868, 869,
	862, 844, 843, 872, 863, 864, 865, 866, 867, 868,
	869, 862, 79, 393, 872, 1482, 1483, 1484, 94, 845,
	844, 843, 2392, 1189, 975, 768, 861, 860, 870, 871,
	863, 864, 865, 866, 867, 868, 869, 862, 845, 1532,
	872, 1531, 1100, 2006, 1664, 1098, 78, 1433, 844, 843,
	749, 844, 843, 1154, 1662, 2388, 1636, 385, 2325, 844,
	843, 1112, 1113, 93, 1115, 1643, 845, 1419, 1156, 845,
	1137, 118, 844, 843, 844, 843, 2393, 845, 2310, 2274,
	365, 1799, 1076, 1533, 1147, 1210, 2296, 1211, 1080, 843,
	845, 1120, 845, 1121, 844, 843, 830, 1183, 2309, 831,
	2273, 92, 1665, 1103, 1104, 1606, 845, 1607, 2282, 1176,
	1178, 1179, 845, 539, 78, 1177, 786, 563, 1153, 844,
	843, 712, 860, 870, 871, 863, 864, 865, 866, 867,
	868, 869, 862, 722, 1167, 872, 2253, 845, 2159, 785,
	1187, 2109, 732, 2071, 534, 535, 2004, 844, 843, 1129,
	1130, 1865, 923, 1132, 1660, 1441, 1131, 926, 1168, 1101,
	2295, 1169, 2157, 2129, 1184, 845, 1146, 976, 1182, 1135,
	465, 464, 467, 468, 469, 470, 1152, 1099, 1624, 466,
	471, 2123, 2041, 1123, 1105, 1106, 1107, 1923, 1919, 1910,
	1102, 1893, 1892, 1891, 1690, 1252, 1689, 1435, 1421, 1114,
	1188, 1259, 1262, 1420, 1180, 1305, 1212, 1128, 1125, 1275,
	974, 1088, 1087, 1086, 974, 1085, 1077, 1122, 1075, 1074,
	1073, 1227, 1071, 808, 735, 1231, 1294, 1297, 1298, 1299,
	1295, 378, 1296, 1300, 1213, 1214, 1822, 1823, 1747, 1225,
	1226, 376, 825, 923, 2122, 1334, 2084, 2315, 1341, 567,
	1236, 1237, 1238, 1239, 551, 2103, 925, 1995, 2312, 2259,
	825, 1149, 2102, 1249, 1251, 1995, 2257, 1316, 1596, 1185,
	1256, 1318, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1888, 1301, 1995,
	2255, 1995, 2161, 82, 1173, 1174, 1866, 1098, 2084, 2153,
	1803, 1336, 749, 1817, 749, 1314, 1817, 1310, 2084, 2099,
	2084, 825, 1184, 1216, 2084, 2083, 1335, 1224, 2121, 976,
	1995, 1994, 1976, 825, 976, 1289, 1233, 1234, 976, 1596,
	1541, 1347, 1066, 1469, 825, 1880, 1879, 1244, 1315, 1323,
	980, 1248, 1322, 1328, 1876, 1877, 1319, 1250, 1930, 1596,
	1265, 1876, 1875, 79, 825, 1344, 1337, 1271, 734, 1277,
	1495, 825, 1289, 825, 1392, 1393, 1394, 1395, 1250, 1438,
	82, 850, 1250, 825, 1004, 1003, 1931, 925, 1288, 2261,
	1970, 1889, 1257, 1258, 1878, 78, 1817, 1831, 2267, 825,
	1396, 1397, 1388, 861, 860, 870, 871, 863, 864, 865,
	866, 867, 868, 869, 862, 811, 1931, 872, 1701, 981,
	1183, 819, 1967, 981, 1486, 1610, 1324, 1289, 1495, 1160,
	1555, 1554, 1425, 923, 1495, 1133, 1418, 1431, 861, 860,
	870, 871, 863, 864, 865, 866, 867, 868, 869, 862,
	1417, 1161, 872, 1140, 1078, 1376, 1377, 1378, 1379, 1333,
	986, 821, 861, 860, 870, 871, 863, 864, 865, 866,
	867, 868, 869, 862, 1434, 982, 872, 984, 2256, 982,
	1159, 980, 562, 1830, 1443, 1187, 2128, 1184, 2126, 2009,
	1436, 1335, 1362, 1442, 1437, 822, 1982, 1447, 1391, 1859,
	1294, 1297, 1298, 1299, 1295, 1468, 1296, 1300, 1822, 1823,
	1828, 1387, 1400, 1474, 1065, 1472, 1473, 1614, 1409, 1382,
	1381, 1067, 1491, 1403, 805, 1405, 1563, 1565, 1398, 2362,
	974, 974, 974, 974, 974, 2360, 2344, 1487, 1827, 1887,
	79, 1825, 1481, 1803, 79, 1188, 1305, 1666, 1588, 1082,
	1579, 1581, 1577, 1298, 1299, 1580, 974, 1578, 1576, 1575,
	430, 431, 1493, 2292, 1564, 2264, 1568, 1496, 1735, 967,
	1471, 977, 1498, 1499, 1171, 1446, 2290, 1504, 1505, 1506,
	1507, 1508, 1509, 1525, 1252, 1512, 1973, 1479, 1478, 2074,
	1517, 1518, 1519, 1520, 1341, 1522, 1523, 1524, 1598, 2040,
	1599, 551, 1527, 1528, 1529, 1530, 1591, 1626, 1998, 1918,
	1569, 1536, 1917, 1597, 1539, 1540, 1488, 1489, 1490, 1545,
	1546, 1864, 834, 1549, 1863, 1552, 1618, 1553, 2202, 2205,
	1556, 1557, 2252, 1558, 1559, 2251, 1571, 1572, 2120, 1574,
	2281, 1625, 78, 1583, 976, 976, 976, 976, 976, 2118,
	1611, 1590, 1584, 1585, 1582, 1619, 1622, 749, 838, 839,
	976, 749, 749, 1570, 2196, 2195, 1573, 377, 1693, 1653,
	976, 1652, 1601, 1654, 1655, 1656, 1657, 1095, 827, 1609,
	1668, 1613, 992, 999, 803, 1066, 787, 836, 1501, 1503,
	828, 1542, 1543, 1544, 784, 783, 736, 2305, 2133, 1513,
	1514, 1515, 1516, 2132, 1688, 1968, 1163, 1164, 1404, 2050,
	1440, 1526, 1081, 442, 1732, 1669, 838, 839, 2304, 1430,
	94, 1069, 1477, 1361, 1733, 1734, 427, 1661, 816, 817,
	1476, 2303, 2302, 1663, 2106, 1551, 2284, 2283, 2249, 2206,
	1740, 2137, 2059, 1755, 428, 1692, 82, 2136, 2053, 1596,
	2364, 2363, 1183, 1685, 1705, 1718, 1723, 1538, 539, 1684,
	121, 1084, 1702, 121, 1671, 1672, 1673, 393, 1691, 121,
	1535, 1119, 841, 2363, 2364, 1700, 1699, 1697, 2150, 1862,
	1108, 1109, 1110, 1714, 1715, 1726, 1727, 1111, 1708, 1730,
	1707, 121, 1157, 850, 1644, 1645, 562, 382, 384, 2178,
	51, 1651, 121, 1808, 78, 84, 121, 574, 2180, 19,
	121, 1658, 2179, 18, 2181, 20, 1742, 54, 1156, 1184,
	1, 1741, 121, 1750, 574, 1746, 2182, 21, 1833, 2177,
	15, 121, 1804, 1837, 1838, 1839, 1089, 1796, 809, 1568,
	2176, 14, 1809, 2250, 1745, 2170, 10, 2201, 1816, 2203,
	1753, 2189, 30, 1148, 2188, 29, 1786, 1807, 1694, 1785,
	1762, 1763, 2117, 1740, 2028, 1341, 2013, 1341, 1682, 2187,
	28, 1769, 1686, 1687, 2012, 1773, 1172, 2185, 25, 1842,
	2184, 24, 1832, 1569, 1675, 1840, 1836, 1811, 2186, 26,
	2175, 13, 2172, 12, 1826, 2171, 11, 2169, 9, 1674,
	804, 1853, 1138, 1856, 1706, 1709, 1857, 1834, 1413, 1858,
	1456, 2212, 1348, 1810, 1338, 564, 90, 1744, 1422, 1855,
	752, 393, 2038, 1847, 341, 1345, 1632, 2204, 1846, 1885,
	1886, 870, 871, 863, 864, 865, 866, 867, 868, 869,
	862, 1867, 1868, 872, 806, 1631, 1641, 1359, 1871, 1630,
	1629, 1396, 1065, 1397, 2199, 1874, 1633, 1012, 1010, 1787,
	1788, 1011, 1789, 1790, 1009, 1014, 1791, 1756, 1013, 345,
	1759, 1760, 1761, 1154, 994, 1764, 2239, 842, 1890, 1800,
	1801, 100, 55, 2042, 1722, 1450, 95, 101, 347, 880,
	1475, 1602, 1906, 549, 550, 542, 2268, 832, 2215, 1548,
	939, 1287, 1272, 448, 1586, 2217, 1175, 1895, 463, 1282,
	1900, 1798, 462, 461, 1835, 1317, 1905, 1899, 458, 1929,
	459, 1907, 1932, 1429, 1166, 1922, 1560, 1911, 854, 1881,
	446, 437, 972, 965, 1439, 1293, 1962, 1291, 1927, 1290,
	1083, 538, 1824, 1820, 1303, 1938, 971, 121, 389, 1066,
	68, 767, 574, 574, 362, 1963, 2145, 1841, 36, 1861,
	383, 432, 27, 17, 776, 22, 574, 16, 1448, 721,
	40, 43, 42, 1670, 1406, 2238, 2330, 1869, 790, 2351,
	2271, 32, 31, 2183, 2190, 2174, 2173, 976, 393, 2317,
	23, 1933, 2316, 1947, 121, 1568, 4, 1990, 1991, 1992,
	121, 1341, 813, 69, 33, 1402, 1977, 560, 2, 1969,
	0, 1410, 0, 1411, 1412, 0, 0, 1416, 1896, 2000,
	0, 1978, 0, 0, 1943, 0, 0, 78, 1897, 0,
	0, 1988, 0, 0, 0, 1952, 1953, 0, 0, 1569,
	502, 1958, 1999, 0, 0, 0, 0, 0, 0, 849,
	1993, 0, 0, 0, 1428, 0, 2001, 1611, 1971, 1972,
	1989, 1974, 0, 0, 1975, 2010, 2002, 0, 1934, 0,
	0, 974, 0, 0, 0, 811, 0, 0, 0, 2037,
	0, 0, 0, 2051, 1987, 0, 0, 0, 0, 1924,
	0, 1740, 2025, 2026, 2027, 1853, 0, 2029, 2046, 435,
	2031, 2030, 2024, 0, 2035, 2036, 0, 0, 2055, 2056,
	2039, 1808, 0, 0, 1808, 2079, 0, 1959, 1960, 1961,
	0, 0, 2047, 0, 0, 0, 0, 1833, 2054, 0,
	558, 0, 0, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 1396, 0, 393, 121, 121,
	121, 725, 0, 2078, 0, 393, 2076, 0, 0, 0,
	1965, 0, 2075, 0, 574, 1807, 0, 0, 1807, 925,
	0, 2105, 0, 2107, 0, 0, 2104, 0, 2086, 1979,
	1980, 2085, 2091, 1981, 2096, 976, 1983, 2081, 2058, 2097,
	2098, 2134, 0, 0, 925, 1617, 0, 0, 2108, 0,
	2100, 0, 2101, 0, 0, 0, 2003, 0, 2005, 2066,
	2067, 2068, 0, 2070, 0, 0, 2124, 2125, 1808, 0,
	78, 0, 0, 2131, 0, 2127, 0, 0, 0, 1310,
	0, 2087, 0, 0, 2140, 0, 2138, 0, 0, 2139,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 2163, 0, 0, 2152, 2156,
	2151, 0, 974, 0, 1095, 1095, 0, 0, 2158, 0,
	0, 0, 1807, 0, 0, 0, 2060, 0, 0, 2062,
	2063, 2064, 2065, 2155, 0, 0, 0, 2069, 0, 0,
	0, 2072, 2073, 2208, 0, 2210, 0, 0, 0, 0,
	2209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2220, 0, 2141, 2142, 2143, 2144, 2221, 0, 0, 2207,
	0, 2227, 2148, 2149, 2234, 574, 0, 0, 1568, 0,
	2222, 0, 0, 0, 0, 78, 0, 121, 0, 0,
	121, 0, 0, 0, 0, 1094, 0, 121, 2243, 574,
	0, 0, 1683, 0, 0, 0, 574, 574, 574, 121,
	121, 121, 0, 0, 0, 0, 121, 0, 0, 2246,
	2248, 574, 1569, 0, 0, 0, 976, 0, 0, 570,
	570, 0, 0, 0, 0, 0, 2262, 0, 0, 2254,
	0, 0, 0, 570, 0, 2223, 0, 0, 0, 0,
	2156, 0, 2228, 0, 0, 0, 0, 2286, 0, 2288,
	1736, 0, 0, 0, 0, 78, 435, 2301, 0, 0,
	925, 78, 2299, 2287, 2289, 2291, 2285, 2293, 2308, 2294,
	0, 0, 121, 574, 2306, 121, 0, 574, 0, 78,
	2278, 2324, 0, 0, 78, 0, 0, 2321, 0, 2327,
	2320, 2311, 2319, 0, 0, 121, 2318, 2211, 0, 0,
	1851, 849, 2258, 78, 2339, 2346, 78, 78, 2348, 0,
	0, 78, 2263, 0, 2308, 0, 0, 2345, 2354, 0,
	0, 2357, 2329, 0, 0, 0, 0, 0, 78, 2361,
	0, 78, 2359, 2369, 0, 2308, 0, 2216, 2219, 2374,
	2372, 0, 0, 0, 0, 0, 78, 574, 78, 2382,
	0, 0, 78, 2308, 2387, 2308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 78,
	0, 2396, 0, 2308, 0, 0, 78, 0, 0, 0,
	78, 0, 0, 2308, 0, 0, 0, 2308, 0, 1904,
	0, 0, 2235, 2236, 0, 0, 0, 0, 0, 1617,
	0, 0, 1913, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 1904, 574, 574, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 558, 0, 0, 121, 121,
	558, 995, 0, 121, 121, 0, 0, 121, 121, 121,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 1894, 574, 574, 0,
	0, 0, 2219, 0, 0, 2389, 2390, 0, 0, 0,
	2338, 0, 0, 1898, 2300, 0, 0, 1794, 0, 1363,
	1364, 0, 1369, 1370, 1371, 1372, 1373, 1751, 1752, 0,
	0, 0, 1311, 1313, 1757, 1758, 0, 1920, 0, 393,
	1383, 1384, 1385, 0, 0, 0, 1765, 1766, 1767, 1768,
	0, 1770, 1771, 1772, 0, 1966, 0, 0, 0, 0,
	0, 0, 2375, 0, 121, 574, 0, 574, 1793, 0,
	121, 0, 121, 121, 0, 0, 121, 861, 860, 870,
	871, 863, 864, 865, 866, 867, 868, 869, 862, 0,
	0, 872, 0, 0, 2373, 861, 860, 870, 871, 863,
	864, 865, 866, 867, 868, 869, 862, 0, 0, 872,
	0, 121, 121, 121, 1312, 861, 860, 870, 871, 863,
	864, 865, 866, 867, 868, 869, 862, 1904, 0, 872,
	1616, 0, 1068, 0, 121, 0, 121, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1904,
	0, 0, 0, 0, 0, 0, 570, 1792, 1615, 0,
	0, 0, 0, 570, 570, 570, 861, 860, 870, 871,
	863, 864, 865, 866, 867, 868, 869, 862, 570, 0,
	872, 0, 0, 0, 0, 1217, 1222, 1223, 0, 0,
	0, 0, 1228, 1229, 1230, 0, 1232, 0, 0, 1235,
	0, 0, 2011, 0, 1240, 1241, 1242, 1243, 0, 1245,
	1246, 1247, 0, 393, 0, 393, 0, 1253, 1254, 1255,
	0, 1851, 0, 1261, 1264, 1956, 1269, 1270, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1007,
	570, 0, 0, 0, 570, 0, 0, 0, 0, 0,
	0, 1280, 0, 1283, 1284, 861, 860, 870, 871, 863,
	864, 865, 866, 867, 868, 869, 862, 415, 0, 872,
	0, 0, 0, 570, 1935, 0, 0, 0, 0, 0,
	0, 0, 1937, 121, 121, 121, 121, 121, 0, 0,
	0, 1940, 1941, 0, 0, 121, 0, 0, 1942, 121,
	0, 0, 0, 121, 0, 1955, 0, 0, 0, 121,
	0, 0, 0, 0, 1215, 861, 860, 870, 871, 863,
	864, 865, 866, 867, 868, 869, 862, 0, 421, 872,
	0, 0, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 1903,
	0, 0, 1851, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1650, 0, 0, 0, 0, 0, 0, 0,
	1278, 1279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 861, 860, 870, 871, 863,
	864, 865, 866, 867, 868, 869, 862, 558, 0, 872,
	574, 121, 1094, 1094, 574, 574, 0, 0, 0, 0,
	0, 570, 0, 0, 570, 570, 0, 0, 395, 396,
	397, 398, 399, 403, 404, 408, 409, 418, 417, 416,
	419, 420, 423, 422, 424, 400, 401, 402, 405, 406,
	407, 410, 411, 414, 412, 413, 0, 835, 415, 0,
	0, 0, 0, 574, 574, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 2230, 0, 0, 0, 574,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 570, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 1494, 359, 0, 0,
	0, 0, 0, 119, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 392, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 541, 559, 0, 0,
	119, 0, 0, 0, 119, 0, 0, 574, 0, 574,
	0, 1547, 0, 0, 0, 0, 119, 0, 0, 0,
	0, 0, 1954, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 574, 0, 0, 0, 570, 0, 0, 0,
	0, 0, 0, 34, 0, 70, 37, 38, 0, 0,
	0, 0, 574, 0, 574, 0, 574, 61, 574, 0,
	0, 0, 0, 76, 0, 0, 0, 39, 0, 395,
	396, 397, 398, 399, 403, 404, 408, 409, 418, 417,
	416, 419, 420, 423, 422, 424, 400, 401, 402, 405,
	406, 407, 410, 411, 414, 412, 413, 0, 0, 0,
	0, 0, 0, 1870, 0, 79, 0, 0, 0, 0,
	121, 0, 861, 860, 870, 871, 863, 864, 865, 866,
	867, 868, 869, 862, 0, 121, 872, 0, 0, 2191,
	0, 0, 2350, 2353, 2349, 0, 0, 0, 0, 0,
	0, 0, 121, 861, 860, 870, 871, 863, 864, 865,
	866, 867, 868, 869, 862, 0, 0, 872, 0, 558,
	0, 0, 574, 0, 0, 0, 121, 574, 41, 72,
	45, 44, 47, 0, 574, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 2192, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	48, 75, 74, 0, 0, 0, 0, 46, 0, 0,
	570, 861, 860, 870, 871, 863, 864, 865, 866, 867,
	868, 869, 862, 0, 0, 872, 0, 0, 0, 1944,
	1945, 0, 1946, 0, 0, 1948, 0, 1950, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2193, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 0, 2194, 73, 0, 52, 53,
	63, 1667, 64, 0, 574, 0, 0, 0, 0, 0,
	0, 574, 574, 574, 0, 0, 0, 570, 119, 0,
	574, 570, 570, 0, 119, 0, 0, 0, 856, 0,
	859, 0, 0, 574, 1996, 1997, 0, 873, 874, 875,
	876, 877, 878, 879, 0, 857, 858, 855, 861, 860,
	870, 871, 863, 864, 865, 866, 867, 868, 869, 862,
	0, 121, 872, 0, 0, 0, 0, 0, 0, 0,
	570, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 570, 0,
	0, 0, 574, 1754, 121, 0, 0, 0, 0, 0,
	574, 0, 0, 0, 34, 0, 70, 37, 38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 0,
	0, 0, 0, 0, 76, 0, 0, 0, 39, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 0, 0, 0, 0, 0, 574, 0, 0, 0,
	0, 121, 558, 121, 570, 0, 1815, 0, 0, 574,
	0, 0, 119, 119, 119, 0, 79, 0, 0, 0,
	0, 0, 559, 574, 0, 0, 0, 559, 34, 1815,
	70, 37, 38, 0, 0, 0, 0, 0, 0, 1492,
	2191, 0, 61, 0, 0, 2398, 0, 0, 76, 570,
	0, 570, 39, 570, 0, 1850, 0, 0, 0, 574,
	861, 860, 870, 871, 863, 864, 865, 866, 867, 868,
	869, 862, 0, 0, 872, 0, 0, 0, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 2192, 0, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 2191, 0, 0, 0, 46, 2394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	574, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 72, 45, 44, 47, 0, 1916,
	0, 0, 59, 60, 1921, 2193, 0, 0, 0, 2192,
	0, 1925, 1926, 0, 121, 0, 2194, 73, 0, 52,
	53, 63, 0, 64, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 119, 0, 0, 574, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 119, 119, 0, 0, 574, 0,
	119, 0, 0, 0, 0, 0, 59, 60, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2194, 73, 0, 52, 53, 63, 0, 64, 558, 0,
	0, 0, 0, 0, 0, 1034, 0, 0, 0, 0,
	574, 1985, 0, 71, 0, 0, 0, 0, 1985, 1985,
	1985, 574, 0, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 0, 574, 0, 0, 119, 0, 0, 392,
	1985, 0, 0, 0, 2279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 1221, 1221, 1221, 0, 570, 0, 1221,
	1221, 1221, 1221, 1221, 1221, 0, 0, 1221, 0, 0,
	0, 0, 1221, 1221, 1221, 1221, 77, 1221, 1221, 1221,
	0, 1035, 0, 0, 0, 1221, 1221, 1221, 0, 0,
	0, 1221, 1221, 0, 1221, 1221, 0, 2080, 0, 559,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 1221,
	1221, 1221, 1221, 0, 119, 0, 0, 0, 0, 0,
	1850, 0, 119, 392, 0, 0, 0, 119, 119, 0,
	0, 119, 1320, 1097, 559, 0, 0, 0, 0, 0,
	0, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1097, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 2130, 1036, 1037, 1038,
	1039, 1015, 1019, 1049, 1016, 1022, 1018, 1020, 1017, 0,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 0,
	0, 0, 0, 0, 0, 2154, 0, 0, 0, 0,
	0, 34, 0, 70, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 119, 0,
	0, 76, 0, 0, 119, 39, 119, 119, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 1850, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 558, 0, 79, 0, 1426, 1427, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2191, 119, 0,
	392, 0, 2383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2260, 41, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 1221, 46, 0, 1850, 0, 0,
	0, 0, 1221, 0, 0, 0, 0, 0, 1985, 0,
	0, 1221, 1221, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 1221, 0, 1035, 0, 1221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	60, 0, 2193, 0, 0, 0, 0, 0, 0, 1221,
	0, 0, 0, 2194, 73, 0, 52, 53, 63, 0,
	64, 0, 0, 0, 0, 0, 559, 119, 119, 119,
	119, 119, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 119, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 119, 1048, 1051, 1052, 1053, 1054, 1055,
	1056, 559, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 0,
	1036, 1037, 1038, 1039, 1015, 1019, 1049, 1016, 1022, 1018,
	1020, 1017, 0, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 34, 0, 70, 37, 38, 0, 0, 0,
	71, 34, 0, 70, 37, 38, 61, 0, 0, 0,
	0, 0, 76, 0, 0, 61, 39, 0, 0, 0,
	0, 76, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 77,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 2355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2191, 0,
	1050, 0, 0, 2366, 0, 0, 0, 2191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1221, 0, 0, 41, 72, 45,
	44, 47, 0, 1221, 0, 1097, 41, 72, 45, 44,
	47, 0, 0, 2192, 0, 0, 0, 0, 0, 0,
	0, 0, 2192, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 0, 0, 0, 0, 46, 0, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 34, 0, 70, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 559,
	0, 76, 0, 0, 0, 39, 0, 0, 0, 0,
	59, 60, 0, 2193, 0, 0, 0, 0, 0, 59,
	60, 0, 2193, 0, 2194, 73, 0, 52, 53, 63,
	0, 64, 0, 2194, 73, 0, 52, 53, 63, 0,
	64, 0, 0, 79, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 34, 0, 70, 37, 38,
	0, 0, 0, 0, 0, 0, 0, 2191, 0, 61,
	0, 0, 2307, 0, 0, 76, 0, 0, 0, 39,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 41, 72, 45, 44,
	47, 0, 1909, 0, 0, 0, 0, 79, 0, 119,
	0, 71, 2192, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 334, 119, 421, 48, 75,
	74, 2191, 337, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 346, 353, 354, 0, 0, 0, 1064, 0,
	119, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 436, 0, 0, 77,
	41, 72, 45, 44, 47, 0, 1903, 0, 343, 59,
	60, 344, 2193, 1007, 350, 351, 2192, 0, 0, 0,
	0, 0, 0, 2194, 73, 0, 52, 53, 63, 0,
	64, 0, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 59, 60, 0, 2193, 415, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 2194, 73, 0,
	52, 53, 63, 0, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	71, 0, 0, 348, 338, 339, 0, 358, 0, 0,
	0, 340, 342, 0, 336, 357, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 397, 398, 399, 403, 404, 408,
	409, 418, 417, 416, 419, 420, 423, 422, 424, 400,
	401, 402, 405, 406, 407, 410, 411, 414, 412, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 392, 0, 392, 395, 396,
	397, 398, 399, 403, 404, 408, 409, 418, 417, 416,
	419, 420, 423, 422, 424, 400, 401, 402, 405, 406,
	407, 410, 411, 414, 412, 413, 395, 396, 397, 398,
	399, 403, 404, 408, 409, 418, 417, 416, 419, 420,
	423, 422, 424, 400, 401, 402, 405, 406, 407, 410,
	411, 414, 412, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 692, 672, 298, 630, 695, 602,
	619, 707, 620, 623, 661, 588, 642, 233, 617, 589,
	0, 606, 579, 613, 580, 603, 632, 166, 601, 674,
	645, 694, 196, 657, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 693, 638, 0, 701, 199, 0, 654,
	702, 288, 218, 0, 0, 634, 681, 640, 670, 629,
	663, 595, 653, 696, 618, 659, 697, 0, 0, 119,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 656, 691, 615, 658, 660, 577, 655, 0,
	583, 590, 706, 687, 609, 610, 611, 0, 559, 0,
	0, 0, 0, 0, 633, 641, 667, 626, 119, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 651, 0,
	0, 0, 591, 584, 0, 0, 631, 0, 0, 0,
	594, 126, 608, 668, 0, 575, 176, 219, 137, 671,
	686, 628, 189, 326, 690, 625, 624, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	616, 576, 675, 604, 614, 158, 612, 265, 237, 315,
	0, 648, 243, 264, 200, 304, 255, 313, 314, 180,
	710, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 627, 662, 605, 155, 665, 652, 680, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 2240,
	2241, 2242, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 581, 0, 290, 318,
	332, 144, 600, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 598, 599, 596, 0, 597, 643,
	644, 698, 699, 700, 669, 592, 0, 682, 683, 0,
	0, 0, 0, 0, 673, 688, 689, 664, 708, 621,
	622, 582, 585, 586, 587, 593, 635, 636, 647, 650,
	678, 677, 676, 679, 684, 704, 703, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	122, 133, 198, 709, 257, 172, 319, 578, 164, 0,
	0, 637, 639, 649, 666, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 685, 692, 672, 298, 630, 695, 602, 619, 707,
	620, 623, 661, 588, 642, 233, 617, 589, 0, 606,
	579, 613, 580, 603, 632, 166, 601, 674, 645, 694,
	196, 657, 0, 157, 204, 202, 0, 0, 0, 239,
	297, 693, 638, 0, 701, 199, 0, 654, 702, 288,
	218, 0, 0, 634, 681, 640, 670, 629, 663, 595,
	653, 696, 618, 659, 697, 0, 0, 0, 0, 573,
	0, 1342, 1343, 0, 0, 0, 0, 0, 147, 0,
	656, 691, 615, 658, 660, 577, 655, 0, 583, 590,
	706, 687, 609, 610, 611, 1612, 0, 0, 0, 0,
	0, 0, 633, 641, 667, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 607, 0, 651, 0, 0, 0,
	591, 584, 0, 0, 631, 0, 0, 0, 594, 126,
	608, 668, 0, 575, 176, 219, 137, 671, 686, 628,
	189, 326, 690, 625, 624, 253, 0, 293, 179, 197,
	141, 123, 135, 151, 178, 229, 262, 272, 616, 576,
	675, 604, 614, 158, 612, 265, 237, 315, 0, 648,
	243, 264, 200, 304, 255, 313, 314, 180, 710, 323,
	328, 0, 285, 167, 0, 127, 0, 250, 162, 193,
	627, 662, 605, 155, 665, 652, 680, 284, 302, 142,
	299, 217, 223, 152, 154, 153, 136, 279, 301, 146,
	156, 289, 268, 294, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 128, 296, 312, 148, 276,
	277, 329, 263, 130, 310, 292, 215, 190, 191, 129,
	0, 260, 165, 175, 160, 232, 0, 174, 252, 307,
	308, 159, 331, 138, 322, 132, 139, 321, 226, 0,
	225, 324, 303, 311, 216, 208, 0, 131, 309, 214,
	207, 195, 170, 182, 248, 203, 249, 183, 221, 220,
	222, 205, 209, 0, 581, 0, 290, 318, 332, 144,
	600, 278, 300, 0, 0, 145, 173, 169, 247, 224,
	140, 185, 287, 194, 201, 259, 330, 236, 266, 149,
	317, 286, 598, 599, 596, 0, 597, 643, 644, 698,
	699, 700, 669, 592, 0, 682, 683, 0, 0, 0,
	0, 0, 673, 688, 689, 664, 708, 621, 622, 582,
	585, 586, 587, 593, 635, 636, 647, 650, 678, 677,
	676, 679, 684, 704, 703, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 122, 133,
	198, 709, 257, 172, 319, 578, 164, 0, 0, 637,
	639, 649, 666, 124, 125, 134, 143, 150, 163, 168,
	171, 177, 181, 184, 186, 187, 188, 192, 206, 210,
	211, 212, 213, 227, 228, 230, 231, 234, 235, 238,
	240, 241, 242, 244, 245, 246, 251, 254, 256, 258,
	261, 267, 269, 270, 271, 273, 274, 275, 280, 281,
	282, 283, 291, 295, 305, 306, 316, 325, 327, 685,
	692, 672, 298, 630, 695, 602, 619, 707, 620, 623,
	661, 588, 642, 233, 617, 589, 0, 606, 579, 613,
	580, 603, 632, 166, 601, 674, 645, 694, 196, 657,
	0, 157, 204, 202, 0, 0, 0, 239, 297, 693,
	638, 0, 701, 199, 0, 654, 702, 288, 218, 0,
	0, 634, 681, 640, 670, 629, 663, 595, 653, 696,
	618, 659, 697, 0, 0, 0, 0, 573, 0, 1342,
	1343, 0, 0, 0, 0, 0, 147, 0, 656, 691,
	615, 658, 660, 577, 655, 0, 583, 590, 706, 687,
	609, 610, 611, 0, 0, 0, 0, 0, 0, 0,
	633, 641, 667, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 651, 0, 0, 0, 591, 584,
	0, 0, 631, 0, 0, 0, 594, 126, 608, 668,
	0, 575, 176, 219, 137, 671, 686, 628, 189, 326,
	690, 625, 624, 253, 0, 293, 179, 197, 141, 123,
	135, 151, 178, 229, 262, 272, 616, 576, 675, 604,
	614, 158, 612, 265, 237, 315, 0, 648, 243, 264,
	200, 304, 255, 313, 314, 180, 710, 323, 328, 0,
	285, 167, 0, 127, 0, 250, 162, 193, 627, 662,
	605, 155, 665, 652, 680, 284, 302, 142, 299, 217,
	223, 152, 154, 153, 136, 279, 301, 146, 156, 289,
	268, 294, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 128, 296, 312, 148, 276, 277, 329,
	263, 130, 310, 292, 215, 190, 191, 129, 0, 260,
	165, 175, 160, 232, 0, 174, 252, 307, 308, 159,
	331, 138, 322, 132, 139, 321, 226, 0, 225, 324,
	303, 311, 216, 208, 0, 131, 309, 214, 207, 195,
	170, 182, 248, 203, 249, 183, 221, 220, 222, 205,
	209, 0, 581, 0, 290, 318, 332, 144, 600, 278,
	300, 0, 0, 145, 173, 169, 247, 224, 140, 185,
	287, 194, 201, 259, 330, 236, 266, 149, 317, 286,
	598, 599, 596, 0, 597, 643, 644, 698, 699, 700,
	669, 592, 0, 682, 683, 0, 0, 0, 0, 0,
	673, 688, 689, 664, 708, 621, 622, 582, 585, 586,
	587, 593, 635, 636, 647, 650, 678, 677, 676, 679,
	684, 704, 703, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 122, 133, 198, 709,
	257, 172, 319, 578, 164, 0, 0, 637, 639, 649,
	666, 124, 125, 134, 143, 150, 163, 168, 171, 177,
	181, 184, 186, 187, 188, 192, 206, 210, 211, 212,
	213, 227, 228, 230, 231, 234, 235, 238, 240, 241,
	242, 244, 245, 246, 251, 254, 256, 258, 261, 267,
	269, 270, 271, 273, 274, 275, 280, 281, 282, 283,
	291, 295, 305, 306, 316, 325, 327, 685, 692, 1812,
	298, 630, 695, 602, 619, 707, 620, 623, 661, 588,
	642, 233, 617, 589, 0, 606, 579, 613, 580, 603,
	632, 166, 601, 674, 645, 694, 196, 657, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 693, 638, 0,
	701, 199, 0, 654, 702, 288, 218, 0, 0, 634,
	681, 640, 670, 629, 663, 595, 653, 696, 618, 659,
	697, 79, 0, 825, 0, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 656, 691, 615, 658,
	660, 577, 655, 0, 583, 590, 706, 687, 609, 610,
	611, 0, 0, 0, 0, 0, 0, 0, 633, 641,
	667, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 0, 651, 0, 0, 0, 591, 584, 0, 0,
	631, 0, 0, 0, 594, 126, 608, 668, 0, 575,
	176, 219, 137, 671, 686, 628, 189, 326, 690, 625,
	624, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 616, 576, 675, 604, 614, 158,
	612, 265, 237, 315, 0, 648, 243, 264, 200, 304,
	255, 313, 314, 180, 710, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 627, 662, 605, 155,
	665, 652, 680, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	581, 0, 290, 318, 332, 144, 600, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 598, 599,
	596, 0, 597, 643, 644, 698, 699, 700, 669, 592,
	0, 682, 683, 0, 0, 0, 0, 0, 673, 688,
	689, 664, 708, 621, 622, 582, 585, 586, 587, 593,
	635, 636, 647, 650, 678, 677, 676, 679, 684, 704,
	703, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 122, 133, 198, 1813, 257, 172,
	319, 578, 164, 0, 0, 637, 639, 649, 666, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 685, 692, 672, 298, 630,
	695, 602, 619, 707, 620, 623, 661, 588, 642, 233,
	617, 589, 0, 606, 579, 613, 580, 603, 632, 166,
	601, 674, 645, 694, 196, 657, 0, 157, 204, 202,
	0, 0, 0, 239, 297, 693, 638, 0, 701, 199,
	0, 654, 702, 288, 218, 0, 0, 634, 681, 640,
	670, 629, 663, 595, 653, 696, 618, 659, 697, 0,
	0, 0, 0, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 656, 691, 615, 658, 660, 577,
	655, 0, 583, 590, 706, 687, 609, 610, 611, 0,
	0, 0, 0, 0, 0, 0, 633, 641, 667, 626,
	0, 0, 0, 0, 0, 0, 2057, 0, 607, 0,
	651, 0, 0, 0, 591, 584, 0, 0, 631, 0,
	0, 0, 594, 126, 608, 668, 0, 575, 176, 219,
	137, 671, 686, 628, 189, 326, 690, 625, 624, 253,
	0, 293, 179, 197, 141, 123, 135, 151, 178, 229,
	262, 272, 616, 576, 675, 604, 614, 158, 612, 265,
	237, 315, 0, 648, 243, 264, 200, 304, 255, 313,
	314, 180, 710, 323, 328, 0, 285, 167, 0, 127,
	0, 250, 162, 193, 627, 662, 605, 155, 665, 652,
	680, 284, 302, 142, 299, 217, 223, 152, 154, 153,
	136, 279, 301, 146, 156, 289, 268, 294, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 128,
	296, 312, 148, 276, 277, 329, 263, 130, 310, 292,
	215, 190, 191, 129, 0, 260, 165, 175, 160, 232,
	0, 174, 252, 307, 308, 159, 331, 138, 322, 132,
	139, 321, 226, 0, 225, 324, 303, 311, 216, 208,
	0, 131, 309, 214, 207, 195, 170, 182, 248, 203,
	249, 183, 221, 220, 222, 205, 209, 0, 581, 0,
	290, 318, 332, 144, 600, 278, 300, 0, 0, 145,
	173, 169, 247, 224, 140, 185, 287, 194, 201, 259,
	330, 236, 266, 149, 317, 286, 598, 599, 596, 0,
	597, 643, 644, 698, 699, 700, 669, 592, 0, 682,
	683, 0, 0, 0, 0, 0, 673, 688, 689, 664,
	708, 621, 622, 582, 585, 586, 587, 593, 635, 636,
	647, 650, 678, 677, 676, 679, 684, 704, 703, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 122, 133, 198, 709, 257, 172, 319, 578,
	164, 0, 0, 637, 639, 649, 666, 124, 125, 134,
	143, 150, 163, 168, 171, 177, 181, 184, 186, 187,
	188, 192, 206, 210, 211, 212, 213, 227, 228, 230,
	231, 234, 235, 238, 240, 241, 242, 244, 245, 246,
	251, 254, 256, 258, 261, 267, 269, 270, 271, 273,
	274, 275, 280, 281, 282, 283, 291, 295, 305, 306,
	316, 325, 327, 685, 692, 672, 298, 630, 695, 602,
	619, 707, 620, 623, 661, 588, 642, 233, 617, 589,
	0, 606, 579, 613, 580, 603, 632, 166, 601, 674,
	645, 694, 196, 657, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 693, 638, 0, 701, 199, 0, 654,
	702, 288, 218, 0, 0, 634, 681, 640, 670, 629,
	663, 595, 653, 696, 618, 659, 697, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 656, 691, 615, 658, 660, 577, 655, 0,
	583, 590, 706, 687, 609, 610, 611, 0, 0, 0,
	0, 0, 0, 0, 633, 641, 667, 626, 0, 0,
	0, 0, 0, 0, 1749, 0, 607, 0, 651, 0,
	0, 0, 591, 584, 0, 0, 631, 0, 0, 0,
	594, 126, 608, 668, 0, 575, 176, 219, 137, 671,
	686, 628, 189, 326, 690, 625, 624, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	616, 576, 675, 604, 614, 158, 612, 265, 237, 315,
	0, 648, 243, 264, 200, 304, 255, 313, 314, 180,
	710, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 627, 662, 605, 155, 665, 652, 680, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 581, 0, 290, 318,
	332, 144, 600, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 598, 599, 596, 0, 597, 643,
	644, 698, 699, 700, 669, 592, 0, 682, 683, 0,
	0, 0, 0, 0, 673, 688, 689, 664, 708, 621,
	622, 582, 585, 586, 587, 593, 635, 636, 647, 650,
	678, 677, 676, 679, 684, 704, 703, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	122, 133, 198, 709, 257, 172, 319, 578, 164, 0,
	0, 637, 639, 649, 666, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 685, 692, 672, 298, 630, 695, 602, 619, 707,
	620, 623, 661, 588, 642, 233, 617, 589, 0, 606,
	579, 613, 580, 603, 632, 166, 601, 674, 645, 694,
	196, 657, 0, 157, 204, 202, 0, 0, 0, 239,
	297, 693, 638, 0, 701, 199, 0, 654, 702, 288,
	218, 0, 0, 634, 681, 640, 670, 629, 663, 595,
	653, 696, 618, 659, 697, 0, 0, 0, 0, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	656, 691, 615, 658, 660, 577, 655, 0, 583, 590,
	706, 687, 609, 610, 611, 0, 0, 0, 0, 0,
	0, 0, 633, 641, 667, 626, 0, 0, 0, 0,
	0, 0, 1739, 0, 607, 0, 651, 0, 0, 0,
	591, 584, 0, 0, 631, 0, 0, 0, 594, 126,
	608, 668, 0, 575, 176, 219, 137, 671, 686, 628,
	189, 326, 690, 625, 624, 253, 0, 293, 179, 197,
	141, 123, 135, 151, 178, 229, 262, 272, 616, 576,
	675, 604, 614, 158, 612, 265, 237, 315, 0, 648,
	243, 264, 200, 304, 255, 313, 314, 180, 710, 323,
	328, 0, 285, 167, 0, 127, 0, 250, 162, 193,
	627, 662, 605, 155, 665, 652, 680, 284, 302, 142,
	299, 217, 223, 152, 154, 153, 136, 279, 301, 146,
	156, 289, 268, 294, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 128, 296, 312, 148, 276,
	277, 329, 263, 130, 310, 292, 215, 190, 191, 129,
	0, 260, 165, 175, 160, 232, 0, 174, 252, 307,
	308, 159, 331, 138, 322, 132, 139, 321, 226, 0,
	225, 324, 303, 311, 216, 208, 0, 131, 309, 214,
	207, 195, 170, 182, 248, 203, 249, 183, 221, 220,
	222, 205, 209, 0, 581, 0, 290, 318, 332, 144,
	600, 278, 300, 0, 0, 145, 173, 169, 247, 224,
	140, 185, 287, 194, 201, 259, 330, 236, 266, 149,
	317, 286, 598, 599, 596, 0, 597, 643, 644, 698,
	699, 700, 669, 592, 0, 682, 683, 0, 0, 0,
	0, 0, 673, 688, 689, 664, 708, 621, 622, 582,
	585, 586, 587, 593, 635, 636, 647, 650, 678, 677,
	676, 679, 684, 704, 703, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 122, 133,
	198, 709, 257, 172, 319, 578, 164, 0, 0, 637,
	639, 649, 666, 124, 125, 134, 143, 150, 163, 168,
	171, 177, 181, 184, 186, 187, 188, 192, 206, 210,
	211, 212, 213, 227, 228, 230, 231, 234, 235, 238,
	240, 241, 242, 244, 245, 246, 251, 254, 256, 258,
	261, 267, 269, 270, 271, 273, 274, 275, 280, 281,
	282, 283, 291, 295, 305, 306, 316, 325, 327, 685,
	692, 672, 298, 630, 695, 602, 619, 707, 620, 623,
	661, 588, 642, 233, 617, 589, 0, 606, 579, 613,
	580, 603, 632, 166, 601, 674, 645, 694, 196, 657,
	0, 157, 204, 202, 0, 0, 0, 239, 297, 693,
	638, 0, 701, 199, 0, 654, 702, 288, 218, 0,
	0, 634, 681, 640, 670, 629, 663, 595, 653, 696,
	618, 659, 697, 79, 0, 0, 0, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 656, 691,
	615, 658, 660, 577, 655, 0, 583, 590, 706, 687,
	609, 610, 611, 0, 0, 0, 0, 0, 0, 0,
	633, 641, 667, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 651, 0, 0, 0, 591, 584,
	0, 0, 631, 0, 0, 0, 594, 126, 608, 668,
	0, 575, 176, 219, 137, 671, 686, 628, 189, 326,
	690, 625, 624, 253, 0, 293, 179, 197, 141, 123,
	135, 151, 178, 229, 262, 272, 616, 576, 675, 604,
	614, 158, 612, 265, 237, 315, 0, 648, 243, 264,
	200, 304, 255, 313, 314, 180, 710, 323, 328, 0,
	285, 167, 0, 127, 0, 250, 162, 193, 627, 662,
	605, 155, 665, 652, 680, 284, 302, 142, 299, 217,
	223, 152, 154, 153, 136, 279, 301, 146, 156, 289,
	268, 294, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 128, 296, 312, 148, 276, 277, 329,
	263, 130, 310, 292, 215, 190, 191, 129, 0, 260,
	165, 175, 160, 232, 0, 174, 252, 307, 308, 159,
	331, 138, 322, 132, 139, 321, 226, 0, 225, 324,
	303, 311, 216, 208, 0, 131, 309, 214, 207, 195,
	170, 182, 248, 203, 249, 183, 221, 220, 222, 205,
	209, 0, 581, 0, 290, 318, 332, 144, 600, 278,
	300, 0, 0, 145, 173, 169, 247, 224, 140, 185,
	287, 194, 201, 259, 330, 236, 266, 149, 317, 286,
	598, 599, 596, 0, 597, 643, 644, 698, 699, 700,
	669, 592, 0, 682, 683, 0, 0, 0, 0, 0,
	673, 688, 689, 664, 708, 621, 622, 582, 585, 586,
	587, 593, 635, 636, 647, 650, 678, 677, 676, 679,
	684, 704, 703, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 122, 133, 198, 709,
	257, 172, 319, 578, 164, 0, 0, 637, 639, 649,
	666, 124, 125, 134, 143, 150, 163, 168, 171, 177,
	181, 184, 186, 187, 188, 192, 206, 210, 211, 212,
	213, 227, 228, 230, 231, 234, 235, 238, 240, 241,
	242, 244, 245, 246, 251, 254, 256, 258, 261, 267,
	269, 270, 271, 273, 274, 275, 280, 281, 282, 283,
	291, 295, 305, 306, 316, 325, 327, 685, 692, 672,
	298, 630, 695, 602, 619, 707, 620, 623, 661, 588,
	642, 233, 617, 589, 0, 606, 579, 613, 580, 603,
	632, 166, 601, 674, 645, 694, 196, 657, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 693, 638, 0,
	701, 199, 0, 654, 702, 288, 218, 0, 0, 634,
	681, 640, 670, 629, 663, 595, 653, 696, 618, 659,
	697, 0, 0, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 656, 691, 615, 658,
	660, 577, 655, 0, 583, 590, 706, 687, 609, 610,
	611, 0, 0, 0, 0, 0, 0, 0, 633, 641,
	667, 626, 0, 0, 0, 0, 0, 0, 1321, 0,
	607, 0, 651, 0, 0, 0, 591, 584, 0, 0,
	631, 0, 0, 0, 594, 126, 608, 668, 0, 575,
	176, 219, 137, 671, 686, 628, 189, 326, 690, 625,
	624, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 616, 576, 675, 604, 614, 158,
	612, 265, 237, 315, 0, 648, 243, 264, 200, 304,
	255, 313, 314, 180, 710, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 627, 662, 605, 155,
	665, 652, 680, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	581, 0, 290, 318, 332, 144, 600, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 598, 599,
	596, 0, 597, 643, 644, 698, 699, 700, 669, 592,
	0, 682, 683, 0, 0, 0, 0, 0, 673, 688,
	689, 664, 708, 621, 622, 582, 585, 586, 587, 593,
	635, 636, 647, 650, 678, 677, 676, 679, 684, 704,
	703, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 122, 133, 198, 709, 257, 172,
	319, 578, 164, 0, 0, 637, 639, 649, 666, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 685, 692, 672, 298, 630,
	695, 602, 619, 707, 620, 623, 661, 588, 642, 233,
	617, 589, 0, 606, 579, 613, 580, 603, 632, 166,
	601, 674, 645, 694, 196, 657, 0, 157, 204, 202,
	0, 0, 0, 239, 297, 693, 638, 0, 701, 199,
	0, 654, 702, 288, 218, 0, 0, 634, 681, 640,
	670, 629, 663, 595, 653, 696, 618, 659, 697, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 656, 691, 615, 658, 660, 577,
	655, 0, 583, 590, 706, 687, 609, 610, 611, 0,
	0, 0, 0, 0, 0, 0, 633, 641, 667, 626,
	0, 0, 0, 0, 0, 0, 1181, 0, 607, 0,
	651, 0, 0, 0, 591, 584, 0, 0, 631, 0,
	0, 0, 594, 126, 608, 668, 0, 575, 176, 219,
	137, 671, 686, 628, 189, 326, 690, 625, 624, 253,
	0, 293, 179, 197, 141, 123, 135, 151, 178, 229,
	262, 272, 616, 576, 675, 604, 614, 158, 612, 265,
	237, 315, 0, 648, 243, 264, 200, 304, 255, 313,
	314, 180, 710, 323, 328, 0, 285, 167, 0, 127,
	0, 250, 162, 193, 627, 662, 605, 155, 665, 652,
	680, 284, 302, 142, 299, 217, 223, 152, 154, 153,
	136, 279, 301, 146, 156, 289, 268, 294, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 128,
	296, 312, 148, 276, 277, 329, 263, 130, 310, 292,
	215, 190, 191, 129, 0, 260, 165, 175, 160, 232,
	0, 174, 252, 307, 308, 159, 331, 138, 322, 132,
	139, 321, 226, 0, 225, 324, 303, 311, 216, 208,
	0, 131, 309, 214, 207, 195, 170, 182, 248, 203,
	249, 183, 221, 220, 222, 205, 209, 0, 581, 0,
	290, 318, 332, 144, 600, 278, 300, 0, 0, 145,
	173, 169, 247, 224, 140, 185, 287, 194, 201, 259,
	330, 236, 266, 149, 317, 286, 598, 599, 596, 0,
	597, 643, 644, 698, 699, 700, 669, 592, 0, 682,
	683, 0, 0, 0, 0, 0, 673, 688, 689, 664,
	708, 621, 622, 582, 585, 586, 587, 593, 635, 636,
	647, 650, 678, 677, 676, 679, 684, 704, 703, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 122, 133, 198, 709, 257, 172, 319, 578,
	164, 0, 0, 637, 639, 649, 666, 124, 125, 134,
	143, 150, 163, 168, 171, 177, 181, 184, 186, 187,
	188, 192, 206, 210, 211, 212, 213, 227, 228, 230,
	231, 234, 235, 238, 240, 241, 242, 244, 245, 246,
	251, 254, 256, 258, 261, 267, 269, 270, 271, 273,
	274, 275, 280, 281, 282, 283, 291, 295, 305, 306,
	316, 325, 327, 685, 692, 672, 298, 630, 695, 602,
	619, 707, 620, 623, 661, 588, 642, 233, 617, 589,
	0, 606, 579, 613, 580, 603, 632, 166, 601, 674,
	645, 694, 196, 657, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 693, 638, 0, 701, 199, 0, 654,
	702, 288, 218, 0, 0, 634, 681, 640, 670, 629,
	663, 595, 653, 696, 618, 659, 697, 0, 0, 0,
	0, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 656, 691, 615, 658, 660, 577, 655, 0,
	583, 590, 706, 687, 609, 610, 611, 0, 0, 0,
	0, 0, 0, 0, 633, 641, 667, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 651, 0,
	0, 0, 591, 584, 0, 0, 631, 0, 0, 0,
	594, 126, 608, 668, 0, 575, 176, 219, 137, 671,
	686, 628, 189, 326, 690, 625, 624, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	616, 576, 675, 604, 614, 158, 612, 265, 237, 315,
	0, 648, 243, 264, 200, 304, 255, 313, 314, 180,
	710, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 627, 662, 605, 155, 665, 652, 680, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 581, 0, 290, 318,
	332, 144, 600, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 598, 599, 596, 0, 597, 643,
	644, 698, 699, 700, 669, 592, 0, 682, 683, 0,
	0, 0, 0, 0, 673, 688, 689, 664, 708, 621,
	622, 582, 585, 586, 587, 593, 635, 636, 647, 650,
	678, 677, 676, 679, 684, 704, 703, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	122, 133, 198, 709, 257, 172, 319, 578, 164, 0,
	0, 637, 639, 649, 666, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 685, 692, 672, 298, 630, 695, 602, 619, 707,
	620, 623, 661, 588, 642, 233, 617, 589, 0, 606,
	579, 613, 580, 603, 632, 166, 601, 674, 645, 694,
	196, 657, 0, 157, 204, 202, 0, 0, 0, 239,
	297, 693, 638, 0, 701, 199, 0, 654, 702, 288,
	218, 0, 0, 634, 681, 640, 670, 629, 663, 595,
	653, 696, 618, 659, 697, 0, 0, 0, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	656, 691, 615, 658, 660, 577, 655, 0, 583, 590,
	706, 687, 609, 610, 611, 0, 0, 0, 0, 0,
	0, 0, 633, 641, 667, 626, 0, 0, 0, 0,
	0, 0, 0, 0, 607, 0, 651, 0, 0, 0,
	591, 584, 0, 0, 631, 0, 0, 0, 594, 126,
	608, 668, 0, 575, 176, 219, 137, 671, 686, 628,
	189, 326, 690, 625, 624, 253, 0, 293, 179, 197,
	141, 123, 135, 151, 178, 229, 262, 272, 616, 576,
	675, 604, 614, 158, 612, 265, 237, 315, 0, 648,
	243, 264, 200, 304, 255, 313, 314, 180, 710, 323,
	328, 0, 285, 167, 0, 127, 0, 250, 162, 193,
	627, 662, 605, 155, 665, 652, 680, 284, 302, 142,
	299, 217, 223, 152, 154, 153, 136, 279, 301, 146,
	156, 289, 268, 294, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 128, 296, 312, 148, 276,
	277, 329, 263, 130, 310, 292, 215, 190, 191, 129,
	0, 260, 165, 175, 160, 232, 0, 174, 252, 307,
	308, 159, 331, 138, 322, 132, 139, 321, 226, 0,
	225, 324, 303, 311, 216, 208, 0, 131, 309, 214,
	207, 195, 170, 182, 248, 203, 249, 183, 221, 220,
	222, 205, 209, 0, 581, 0, 290, 318, 332, 144,
	600, 278, 300, 0, 0, 145, 173, 169, 247, 224,
	140, 185, 287, 194, 201, 259, 330, 236, 266, 149,
	317, 286, 598, 599, 596, 0, 597, 643, 644, 698,
	699, 700, 669, 592, 0, 682, 683, 0, 0, 0,
	0, 0, 673, 688, 689, 664, 708, 621, 622, 582,
	585, 586, 587, 593, 635, 636, 647, 650, 678, 677,
	676, 679, 684, 704, 703, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 122, 133,
	198, 709, 257, 172, 319, 578, 164, 0, 0, 637,
	639, 649, 666, 124, 125, 134, 143, 150, 163, 168,
	171, 177, 181, 184, 186, 187, 188, 192, 206, 210,
	211, 212, 213, 227, 228, 230, 231, 234, 235, 238,
	240, 241, 242, 244, 245, 246, 251, 254, 256, 258,
	261, 267, 269, 270, 271, 273, 274, 275, 280, 281,
	282, 283, 291, 295, 305, 306, 316, 325, 327, 685,
	692, 672, 298, 630, 695, 602, 619, 707, 620, 623,
	661, 588, 642, 233, 617, 589, 0, 606, 579, 613,
	580, 603, 632, 166, 601, 674, 645, 694, 196, 657,
	0, 157, 204, 202, 0, 0, 0, 239, 297, 1353,
	1357, 0, 701, 199, 0, 654, 702, 288, 218, 0,
	0, 634, 681, 640, 670, 629, 663, 595, 653, 696,
	618, 659, 697, 0, 0, 0, 0, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 656, 691,
	615, 658, 660, 577, 655, 0, 583, 590, 706, 687,
	609, 610, 611, 0, 0, 0, 0, 0, 0, 0,
	633, 641, 667, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 651, 0, 0, 0, 591, 584,
	0, 0, 631, 0, 0, 0, 594, 126, 608, 668,
	0, 575, 176, 219, 137, 671, 686, 1356, 189, 326,
	690, 625, 624, 1351, 0, 1352, 179, 197, 572, 123,
	135, 1349, 1355, 229, 262, 272, 616, 576, 675, 604,
	614, 158, 612, 265, 237, 315, 0, 648, 243, 264,
	200, 304, 255, 313, 314, 180, 710, 323, 328, 0,
	285, 167, 0, 127, 0, 250, 162, 193, 627, 662,
	605, 155, 665, 652, 680, 284, 302, 142, 299, 217,
	223, 152, 154, 153, 136, 279, 301, 146, 156, 289,
	268, 294, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 128, 296, 312, 148, 276, 277, 329,
	263, 130, 310, 292, 215, 190, 191, 129, 0, 260,
	165, 175, 160, 232, 0, 174, 252, 307, 308, 159,
	331, 138, 322, 132, 139, 321, 226, 0, 225, 324,
	303, 311, 216, 208, 0, 131, 309, 214, 207, 195,
	170, 182, 248, 203, 249, 183, 221, 220, 222, 205,
	209, 0, 581, 0, 290, 318, 332, 144, 600, 278,
	300, 0, 0, 145, 173, 169, 247, 224, 140, 185,
	287, 194, 201, 259, 330, 236, 266, 149, 317, 286,
	598, 599, 596, 0, 597, 643, 644, 698, 699, 700,
	669, 592, 0, 682, 683, 0, 0, 0, 0, 0,
	673, 688, 689, 664, 708, 621, 622, 582, 585, 586,
	587, 593, 635, 636, 647, 650, 678, 677, 676, 679,
	684, 704, 703, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 122, 133, 198, 709,
	257, 172, 319, 578, 164, 0, 0, 637, 639, 649,
	666, 124, 125, 134, 143, 150, 163, 168, 171, 177,
	181, 184, 186, 187, 188, 192, 206, 210, 211, 212,
	213, 227, 228, 230, 231, 234, 235, 238, 240, 241,
	242, 244, 245, 246, 251, 254, 256, 258, 261, 267,
	269, 270, 271, 273, 274, 275, 280, 281, 282, 283,
	291, 295, 305, 306, 316, 325, 327, 685, 692, 672,
	298, 630, 695, 602, 619, 707, 620, 623, 661, 588,
	642, 233, 617, 589, 0, 606, 579, 613, 580, 603,
	632, 166, 601, 674, 645, 694, 196, 657, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 693, 638, 0,
	701, 199, 0, 654, 702, 288, 218, 0, 0, 634,
	681, 640, 670, 629, 663, 595, 653, 696, 618, 659,
	697, 0, 0, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 656, 691, 615, 658,
	660, 577, 655, 0, 583, 590, 706, 687, 609, 610,
	611, 0, 0, 0, 0, 0, 0, 0, 633, 641,
	667, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 0, 651, 0, 0, 0, 591, 584, 0, 0,
	631, 0, 0, 0, 594, 126, 608, 668, 0, 575,
	176, 219, 137, 671, 686, 628, 189, 326, 690, 625,
	624, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 616, 576, 675, 604, 614, 158,
	612, 265, 237, 315, 0, 648, 243, 264, 200, 304,
	255, 313, 314, 180, 710, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 627, 662, 605, 155,
	665, 652, 680, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	581, 0, 290, 318, 332, 144, 600, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 598, 599,
	596, 0, 597, 643, 644, 698, 699, 700, 669, 592,
	0, 682, 683, 0, 0, 0, 0, 0, 673, 688,
	689, 664, 708, 621, 622, 582, 585, 586, 587, 593,
	635, 636, 647, 650, 678, 677, 676, 679, 684, 704,
	703, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 122, 133, 198, 709, 257, 172,
	319, 578, 164, 0, 0, 637, 639, 649, 666, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 685, 692, 672, 298, 630,
	695, 602, 619, 707, 620, 623, 661, 588, 642, 233,
	617, 589, 0, 606, 579, 613, 580, 603, 632, 166,
	601, 674, 645, 694, 196, 657, 0, 157, 204, 202,
	0, 0, 0, 239, 297, 693, 638, 0, 701, 199,
	0, 654, 702, 288, 218, 0, 0, 634, 681, 640,
	670, 629, 663, 595, 653, 696, 618, 659, 697, 0,
	0, 0, 0, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 656, 691, 615, 658, 660, 577,
	655, 0, 583, 590, 706, 687, 609, 610, 611, 0,
	0, 0, 0, 0, 0, 0, 633, 641, 667, 626,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	651, 0, 0, 0, 591, 584, 0, 0, 631, 0,
	0, 0, 594, 126, 608, 668, 0, 575, 176, 219,
	137, 671, 686, 628, 189, 326, 690, 625, 624, 253,
	0, 293, 179, 197, 572, 123, 135, 568, 178, 229,
	262, 272, 616, 576, 675, 604, 614, 158, 612, 265,
	237, 315, 0, 648, 243, 264, 200, 304, 255, 313,
	314, 180, 710, 323, 328, 0, 285, 167, 0, 127,
	0, 250, 162, 193, 627, 662, 605, 155, 665, 652,
	680, 284, 302, 142, 299, 217, 223, 152, 154, 153,
	136, 279, 301, 146, 156, 289, 268, 294, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 128,
	296, 312, 148, 276, 277, 329, 263, 130, 310, 292,
	215, 190, 191, 129, 0, 260, 165, 175, 160, 232,
	0, 174, 252, 307, 308, 159, 331, 138, 322, 132,
	139, 321, 226, 0, 225, 324, 303, 311, 216, 208,
	0, 131, 309, 214, 207, 195, 170, 182, 248, 203,
	249, 183, 221, 220, 222, 205, 209, 0, 581, 0,
	290, 318, 332, 144, 600, 278, 300, 0, 0, 145,
	173, 169, 247, 224, 140, 185, 287, 194, 201, 259,
	330, 236, 266, 149, 317, 286, 598, 599, 596, 0,
	597, 643, 644, 698, 699, 700, 669, 592, 0, 682,
	683, 0, 0, 0, 0, 0, 673, 688, 689, 664,
	708, 621, 622, 582, 585, 586, 587, 593, 635, 636,
	647, 650, 678, 677, 676, 679, 684, 704, 703, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 122, 133, 198, 709, 257, 172, 319, 578,
	164, 0, 0, 637, 639, 649, 666, 124, 125, 134,
	143, 150, 163, 168, 171, 177, 181, 184, 186, 187,
	188, 192, 206, 210, 211, 212, 213, 227, 228, 230,
	231, 234, 235, 238, 240, 241, 242, 244, 245, 246,
	251, 254, 256, 258, 261, 267, 269, 270, 271, 273,
	274, 275, 280, 281, 282, 283, 291, 295, 305, 306,
	316, 325, 327, 685, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 443, 0, 0, 0, 166, 440, 0, 0, 0,
	196, 0, 0, 157, 204, 202, 0, 0, 0, 239,
	297, 0, 0, 0, 518, 199, 0, 0, 421, 288,
	218, 0, 0, 0, 0, 505, 506, 0, 0, 0,
	0, 0, 0, 1331, 0, 79, 0, 0, 0, 441,
	465, 464, 467, 468, 469, 470, 0, 0, 147, 466,
	471, 500, 501, 1332, 0, 0, 438, 456, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 454, 0, 0, 0, 0, 532, 0, 455, 0,
	0, 450, 451, 452, 457, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 176, 219, 137, 508, 0, 0,
	189, 326, 0, 0, 530, 253, 0, 293, 179, 197,
	141, 123, 135, 151, 178, 229, 262, 272, 515, 0,
	0, 0, 0, 158, 0, 265, 237, 315, 507, 0,
	243, 264, 200, 304, 255, 313, 314, 180, 415, 323,
	328, 0, 285, 167, 0, 127, 0, 250, 162, 193,
	0, 0, 0, 155, 0, 0, 0, 284, 302, 142,
	299, 217, 223, 152, 154, 153, 136, 279, 301, 146,
	156, 289, 268, 294, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 128, 296, 312, 148, 276,
	277, 329, 263, 130, 310, 292, 215, 190, 191, 129,
	0, 260, 165, 175, 160, 232, 0, 174, 252, 307,
	308, 159, 331, 138, 322, 132, 139, 321, 226, 0,
	225, 324, 303, 311, 216, 208, 0, 131, 309, 214,
	207, 195, 170, 182, 248, 203, 249, 183, 221, 220,
	222, 205, 209, 0, 0, 0, 290, 318, 332, 144,
	0, 278, 300, 0, 0, 145, 173, 169, 247, 224,
	140, 185, 287, 194, 201, 259, 330, 236, 266, 149,
	317, 286, 519, 531, 525, 527, 526, 523, 524, 522,
	521, 520, 533, 509, 510, 511, 512, 513, 0, 0,
	0, 516, 0, 528, 529, 0, 0, 0, 0, 472,
	473, 474, 475, 476, 480, 481, 485, 486, 494, 493,
	492, 495, 496, 498, 497, 499, 477, 478, 479, 482,
	483, 484, 487, 488, 491, 489, 490, 514, 122, 133,
	198, 0, 257, 172, 319, 0, 164, 0, 0, 0,
	0, 0, 0, 124, 125, 134, 143, 150, 163, 168,
	171, 177, 181, 184, 186, 187, 188, 192, 206, 210,
	211, 212, 213, 227, 228, 230, 231, 234, 235, 238,
	240, 241, 242, 244, 245, 246, 251, 254, 256, 258,
	261, 267, 269, 270, 271, 273, 274, 275, 280, 281,
	282, 283, 291, 295, 305, 306, 316, 325, 327, 34,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 166, 440, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 441, 465, 464, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 438, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 0, 0, 0, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 77, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 166, 440, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 464, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 438, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 434, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 166, 440, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 825, 0, 441, 465, 464, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 438, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 0, 0, 0, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 166, 440, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 464, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 438, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 1219, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 166, 440, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 441, 465, 1263, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 438, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 1219, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 0, 0, 0, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 166, 440, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 1260, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 438, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 1219, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 166, 440, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 1136, 0, 441, 465, 464, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 438, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 0, 0, 0, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 166, 440, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 464, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 438, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 441, 465, 464, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 0, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 1266, 1267, 1268, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 464, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 0, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	2376, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	518, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 825, 0, 441, 465, 464, 467, 468,
	469, 470, 0, 0, 147, 466, 471, 500, 501, 0,
	0, 0, 0, 456, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 532, 0, 455, 0, 0, 450, 451, 452,
	457, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 508, 0, 0, 189, 326, 0, 0,
	530, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 515, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 507, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 519, 531,
	525, 527, 526, 523, 524, 522, 521, 520, 533, 509,
	510, 511, 512, 513, 0, 0, 0, 516, 0, 528,
	529, 0, 0, 0, 0, 472, 473, 474, 475, 476,
	480, 481, 485, 486, 494, 493, 492, 495, 496, 498,
	497, 499, 477, 478, 479, 482, 483, 484, 487, 488,
	491, 489, 490, 514, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 518, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	441, 465, 464, 467, 468, 469, 470, 0, 0, 147,
	466, 471, 500, 501, 0, 0, 0, 0, 456, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 532, 0, 455,
	0, 0, 450, 451, 452, 457, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 508, 0,
	0, 189, 326, 0, 0, 530, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 515,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 507,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 519, 531, 525, 527, 526, 523, 524,
	522, 521, 520, 533, 509, 510, 511, 512, 513, 0,
	0, 0, 516, 0, 528, 529, 0, 0, 0, 0,
	472, 473, 474, 475, 476, 480, 481, 485, 486, 494,
	493, 492, 495, 496, 498, 497, 499, 477, 478, 479,
	482, 483, 484, 487, 488, 491, 489, 490, 514, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 1309, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	0, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1311, 1313, 0,
	0, 0, 0, 0, 0, 120, 0, 394, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 0, 0, 0, 189, 326, 0, 1312,
	0, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 0, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 0, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 397, 398, 399,
	403, 404, 408, 409, 418, 417, 416, 419, 420, 423,
	422, 424, 400, 401, 402, 405, 406, 407, 410, 411,
	414, 412, 413, 0, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 0, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1311, 1313, 0, 0, 0, 0, 0, 0,
	120, 0, 394, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 0, 0,
	0, 189, 326, 0, 1312, 0, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 0,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 0,
	0, 1307, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 397, 398, 399, 403, 404, 408, 409, 418,
	417, 416, 419, 420, 423, 422, 424, 400, 401, 402,
	405, 406, 407, 410, 411, 414, 412, 413, 0, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 847, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	0, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 0, 851, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	844, 843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 0, 0, 0, 189, 326, 0, 0,
	0, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 0, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 0, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 397, 398, 399,
	403, 404, 408, 409, 418, 417, 416, 419, 420, 423,
	422, 424, 400, 401, 402, 405, 406, 407, 410, 411,
	414, 412, 413, 0, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 1589, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 0, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 0, 394, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 0, 0,
	0, 189, 326, 0, 0, 0, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 0,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 0,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 397, 398, 399, 403, 404, 408, 409, 418,
	417, 416, 419, 420, 423, 422, 424, 400, 401, 402,
	405, 406, 407, 410, 411, 414, 412, 413, 0, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	0, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 0, 394, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 0, 0, 0, 189, 326, 0, 0,
	0, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 0, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 0, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 397, 398, 399,
	403, 404, 408, 409, 418, 417, 416, 419, 420, 423,
	422, 424, 400, 401, 402, 405, 406, 407, 410, 411,
	414, 412, 413, 0, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 0, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 1092, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 0, 0,
	0, 189, 326, 0, 0, 0, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 0,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 0,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 397, 398, 399, 403, 404, 408, 409, 418,
	417, 416, 419, 420, 423, 422, 424, 400, 401, 402,
	405, 406, 407, 410, 411, 414, 412, 413, 0, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 0, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	0, 199, 0, 0, 421, 288, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 0, 851, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 0, 0, 0, 189, 326, 0, 0,
	0, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 0, 0, 0, 0, 0, 158,
	0, 265, 237, 315, 0, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 415, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 397, 398, 399,
	403, 404, 408, 409, 418, 417, 416, 419, 420, 423,
	422, 424, 400, 401, 402, 405, 406, 407, 410, 411,
	414, 412, 413, 0, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 196, 0, 0, 157, 204, 202, 0, 0, 0,
	239, 297, 0, 0, 0, 0, 199, 0, 0, 421,
	288, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 176, 219, 137, 0, 0,
	0, 189, 326, 0, 0, 0, 253, 0, 293, 179,
	197, 141, 123, 135, 151, 178, 229, 262, 272, 0,
	0, 0, 0, 0, 158, 0, 265, 237, 315, 0,
	0, 243, 264, 200, 304, 255, 313, 314, 180, 415,
	323, 328, 0, 285, 167, 0, 127, 0, 250, 162,
	193, 0, 0, 0, 155, 0, 0, 0, 284, 302,
	142, 299, 217, 223, 152, 154, 153, 136, 279, 301,
	146, 156, 289, 268, 294, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 128, 296, 312, 148,
	276, 277, 329, 263, 130, 310, 292, 215, 190, 191,
	129, 0, 260, 165, 175, 160, 232, 0, 174, 252,
	307, 308, 159, 331, 138, 322, 132, 139, 321, 226,
	0, 225, 324, 303, 311, 216, 208, 0, 131, 309,
	214, 207, 195, 170, 182, 248, 203, 249, 183, 221,
	220, 222, 205, 209, 0, 0, 0, 290, 318, 332,
	144, 0, 278, 300, 0, 0, 145, 173, 169, 247,
	224, 140, 185, 287, 194, 201, 259, 330, 236, 266,
	149, 317, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 397, 398, 399, 403, 404, 408, 409, 418,
	417, 416, 419, 420, 423, 422, 424, 400, 401, 402,
	405, 406, 407, 410, 411, 414, 412, 413, 0, 122,
	133, 198, 0, 257, 172, 319, 0, 164, 0, 0,
	0, 0, 0, 0, 124, 125, 134, 143, 150, 163,
	168, 171, 177, 181, 184, 186, 187, 188, 192, 206,
	210, 211, 212, 213, 227, 228, 230, 231, 234, 235,
	238, 240, 241, 242, 244, 245, 246, 251, 254, 256,
	258, 261, 267, 269, 270, 271, 273, 274, 275, 280,
	281, 282, 283, 291, 295, 305, 306, 316, 325, 327,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 196, 421, 0, 157,
	204, 202, 0, 0, 0, 239, 297, 0, 0, 0,
	0, 199, 0, 0, 0, 288, 218, 0, 1914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 860, 870, 871, 863, 864, 865, 866,
	867, 868, 869, 862, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	176, 219, 137, 0, 0, 0, 189, 326, 0, 0,
	0, 253, 0, 293, 179, 197, 141, 123, 135, 151,
	178, 229, 262, 272, 0, 0, 0, 415, 0, 158,
	0, 265, 237, 315, 0, 0, 243, 264, 200, 304,
	255, 313, 314, 180, 0, 323, 328, 0, 285, 167,
	0, 127, 0, 250, 162, 193, 0, 0, 0, 155,
	0, 0, 0, 284, 302, 142, 299, 217, 223, 152,
	154, 153, 136, 279, 301, 146, 156, 289, 268, 294,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 128, 296, 312, 148, 276, 277, 329, 263, 130,
	310, 292, 215, 190, 191, 129, 0, 260, 165, 175,
	160, 232, 0, 174, 252, 307, 308, 159, 331, 138,
	322, 132, 139, 321, 226, 0, 225, 324, 303, 311,
	216, 208, 0, 131, 309, 214, 207, 195, 170, 182,
	248, 203, 249, 183, 221, 220, 222, 205, 209, 0,
	0, 0, 290, 318, 332, 144, 0, 278, 300, 0,
	0, 145, 173, 169, 247, 224, 140, 185, 287, 194,
	201, 259, 330, 236, 266, 149, 317, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	397, 398, 399, 403, 404, 408, 409, 418, 417, 416,
	419, 420, 423, 422, 424, 400, 401, 402, 405, 406,
	407, 410, 411, 414, 412, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 133, 198, 0, 257, 172,
	319, 0, 164, 0, 0, 0, 0, 0, 0, 124,
	125, 134, 143, 150, 163, 168, 171, 177, 181, 184,
	186, 187, 188, 192, 206, 210, 211, 212, 213, 227,
	228, 230, 231, 234, 235, 238, 240, 241, 242, 244,
	245, 246, 251, 254, 256, 258, 261, 267, 269, 270,
	271, 273, 274, 275, 280, 281, 282, 283, 291, 295,
	305, 306, 316, 325, 327, 34, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 421, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 1304, 199, 0, 0,
	0, 288, 218, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 415, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 397, 398, 399, 403,
	404, 408, 409, 418, 417, 416, 419, 420, 423, 422,
	424, 400, 401, 402, 405, 406, 407, 410, 411, 414,
	412, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 77, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 997, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 0, 996, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 312, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 312, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 312, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	117, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 312, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 139, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 205, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 224, 140, 185, 287, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 245, 246, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 312, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 312,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 556, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 552, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 557, 555, 546, 547, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 553, 554, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 196, 0, 0,
	157, 204, 202, 0, 0, 0, 239, 297, 0, 0,
	0, 0, 199, 0, 0, 0, 288, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 176, 219, 137, 0, 0, 0, 189, 326, 0,
	0, 0, 253, 0, 293, 179, 197, 141, 123, 135,
	151, 178, 229, 262, 272, 0, 0, 0, 0, 0,
	158, 0, 265, 237, 315, 0, 0, 243, 264, 200,
	304, 255, 313, 314, 180, 0, 323, 328, 0, 285,
	167, 0, 127, 0, 250, 162, 193, 0, 0, 0,
	155, 0, 0, 0, 284, 302, 142, 299, 217, 223,
	152, 154, 153, 136, 279, 301, 146, 156, 289, 268,
	294, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 128, 296, 991, 148, 276, 277, 329, 263,
	130, 310, 292, 215, 190, 191, 129, 0, 260, 165,
	175, 160, 232, 0, 174, 252, 307, 308, 159, 331,
	138, 322, 132, 139, 321, 226, 0, 225, 324, 303,
	311, 216, 208, 0, 131, 309, 214, 207, 195, 170,
	182, 248, 203, 249, 183, 221, 220, 222, 205, 209,
	0, 0, 0, 290, 318, 332, 144, 0, 278, 300,
	0, 0, 145, 173, 169, 247, 224, 140, 185, 287,
	194, 201, 259, 330, 236, 266, 149, 317, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 133, 198, 0, 257,
	172, 319, 0, 164, 0, 0, 0, 0, 0, 0,
	124, 125, 134, 143, 150, 163, 168, 171, 177, 181,
	184, 186, 187, 188, 192, 206, 210, 211, 212, 213,
	227, 228, 230, 231, 234, 235, 238, 240, 241, 242,
	244, 245, 246, 251, 254, 256, 258, 261, 267, 269,
	270, 271, 273, 274, 275, 280, 281, 282, 283, 291,
	295, 305, 306, 316, 325, 327, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 196, 0, 0, 157, 204, 202, 0, 0,
	0, 239, 297, 0, 0, 0, 0, 199, 0, 0,
	0, 288, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 176, 219, 137, 0,
	0, 0, 189, 326, 0, 0, 0, 253, 0, 293,
	179, 197, 141, 123, 135, 151, 178, 229, 262, 272,
	0, 0, 0, 0, 0, 158, 0, 265, 237, 315,
	0, 0, 243, 264, 200, 304, 255, 313, 314, 180,
	0, 323, 328, 0, 285, 167, 0, 127, 0, 250,
	162, 193, 0, 0, 0, 155, 0, 0, 0, 284,
	302, 142, 299, 217, 223, 152, 154, 153, 136, 279,
	301, 146, 156, 289, 268, 294, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 128, 296, 543,
	148, 276, 277, 329, 263, 130, 310, 292, 215, 190,
	191, 129, 0, 260, 165, 175, 160, 232, 0, 174,
	252, 307, 308, 159, 331, 138, 322, 132, 556, 321,
	226, 0, 225, 324, 303, 311, 216, 208, 0, 131,
	309, 214, 207, 195, 170, 182, 248, 203, 249, 183,
	221, 220, 222, 552, 209, 0, 0, 0, 290, 318,
	332, 144, 0, 278, 300, 0, 0, 145, 173, 169,
	247, 557, 555, 546, 547, 194, 201, 259, 330, 236,
	266, 149, 317, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 133, 198, 0, 257, 172, 319, 0, 164, 0,
	0, 0, 0, 0, 0, 124, 125, 134, 143, 150,
	163, 168, 171, 177, 181, 184, 186, 187, 188, 192,
	206, 210, 211, 212, 213, 227, 228, 230, 231, 234,
	235, 238, 240, 241, 242, 244, 553, 554, 251, 254,
	256, 258, 261, 267, 269, 270, 271, 273, 274, 275,
	280, 281, 282, 283, 291, 295, 305, 306, 316, 325,
	327,
}
var yyPact = [...]int{

	235, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1491, -1000, -1000, -1000, -1000, -1000, -1000,
	765, 237, -1000, -1000, 420, 156, 23739, 411, 4511, 24609,
	-1000, -1000, -1000, 109, 214, 24609, -1000, -1000, -1000, 192,
	285, 939, 1391, 929, 24, -76, -82, -1000, 1551, 1553,
	-1000, -1000, 313, 28, -1000, -1000, -1000, 18953, 172, -1000,
	-1000, 1469, 1488, 1266, -1000, 12428, 276, 276, 23304, 26349,
	-1000, 1550, 24609, 11121, -1000, 319, 24609, -138, 260, 260,
	178, 407, -1000, 575, -1000, -1000, -1000, -1000, 24609, 268,
	24174, 268, 268, 268, 268, 268, 268, 24609, -1000, 482,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 24609, 922, 1426, 615, 249, 8055, 8055,
	-1000, 618, -1000, 160, 157, 154, 146, 31, 689, 1055,
	1469, 1469, 8055, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	191, 291, 144, 172, 567, -1000, -1000, -1000, -1000, -1000,
	1425, 1424, 835, 1416, 544, 1414, 1216, -54, -1000, 921,
	24609, -1000, -1000, 1236, 1467, 330, 24609, -1000, -107, 1152,
	-1000, 1232, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 942, 1419, 791, 15038, 1397,
	-1000, -1000, 643, 1521, -1000, 18083, 475, -1000, 15038, 3239,
	1055, -1000, -1000, 1055, -1000, -1000, -1000, 465, -1000, -1000,
	16778, 16778, 16778, 16778, 16778, 16778, 16778, 16778, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
	1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
	1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
	-1000, -1000, 1055, -1000, 11993, 1055, 1055, 1055, 1055, 1055,
	1055, 1055, 1055, 1055, 1055, 1055, 1055, 15038, 1055, 1055,
	1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
	1055, 1055, 1055, 1055, 22869, 21999, 24609, 1172, 1168, -1000,
	-1000, 472, 1151, -92, 25914, -1000, -1000, -1000, -1000, 25044,
	21564, 563, -1000, -1000, -1000, -1000, 1413, -1000, -1000, 470,
	-1000, 1491, -1000, -1000, 1075, 209, -1000, 4018, 4586, -1000,
	-1000, -1000, 1213, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 24174, 1458, 281, 920, 625, 918, 917, 916, 260,
	914, 1145, 288, 24609, 1448, 1243, 24609, 913, 911, 910,
	909, 19388, -1000, 10683, -1000, 8055, 615, -1000, 855, 15038,
	260, 260, 8055, 8055, 8055, 24609, 24609, 24609, -1000, -1000,
	-1000, -1000, 24609, -1000, -1000, 615, 615, 8055, 615, 608,
	1520, 608, -1000, 608, -1000, -1000, 15038, -1000, 16778, 499,
	-1000, -1000, -1000, -1000, 906, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, 905, 544, 544, -1000, 852, 544, 1126, -1000,
	562, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 544, -1000, 14603, -296, -1000, -1000, 1144,
	-1000, 262, 1266, -1000, -1000, 172, -1000, -1000, 24609, 8055,
	-102, 18953, 1055, 9369, -1000, -1000, -1000, 1543, 515, 1171,
	-1000, -1000, 1142, -1000, 684, 469, 853, 1285, -1000, -1000,
	-1000, 24609, -1000, 15038, 15038, 796, -1000, 19823, -1000, -1000,
	-1000, -1000, 8931, 525, 16778, 714, 633, 16778, 16778, 16778,
	16778, 16778, 16778, 16778, 16778, 16778, 16778, 16778, 16778, 16778,
	16778, 16778, 783, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 904, -1000, 172, 867, 867, 479, 479, 479, 479,
	479, 479, 479, 20693, 1455, 13298, 13298, 13298, 1455, 942,
	942, 13298, 13298, 13298, 13298, 13298, 13298, 1455, 1455, 13298,
	942, 942, 942, 942, 13298, 13298, 13298, 13298, 1455, 13298,
	13298, 13298, 1455, 942, 1073, 703, 11993, 13298, 13298, 13298,
	942, 15038, 15038, 14168, 13733, 15473, 13298, 13298, 1455, 593,
	703, 25044, -1000, -1000, 16343, -1000, -1000, -1000, -1000, -1000,
	942, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24174,
	24174, 13298, 13298, 13298, 13298, 185, 24609, -1000, 1118, 1204,
	-1000, -1000, -1000, 1457, 21129, 17648, -1000, 185, 1041, 21999,
	24609, -1000, -1000, 21999, 24609, 8493, 25479, 1117, -1000, -98,
	-104, -92, -1000, -1000, 440, -1000, -1000, -1000, 11557, -1000,
	9807, 1469, 1266, 5865, 10245, -1000, 4586, 1213, -1000, -63,
	-1000, -1000, -1000, 1184, -1000, 1184, 167, -10, 1184, 1184,
	1184, 1184, 1184, -22, -22, -22, -22, -26, -1000, -1000,
	-1000, -1000, -1000, 1212, 1211, -1000, 1184, 1184, 1184, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1203, 183, 1190,
	1190, 1190, 1190, 1190, 218, 218, -1000, 15038, 1205, -1000,
	24609, 8055, 1444, 8055, 158, 1210, 24609, -1000, 24609, 24609,
	282, -1000, 24609, 1141, -1000, -1000, -1000, -1000, -1000, 1127,
	-1000, 766, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 703, 901, 896, -1000, -1000, -1000, -1000, -1000,
	-1000, 614, -1000, -1000, -1000, -1000, 615, 24609, 24609, 24609,
	1456, 615, 703, 650, 942, -1000, -1000, 895, -1000, 1126,
	1126, -1000, 1126, 544, 867, 1126, -1000, 1069, 1443, 851,
	24609, -1000, 18953, -55, -1000, -120, 1455, 942, 280, -1000,
	-1000, -1000, -1000, -1000, 171, 1034, 468, -1000, 1278, 791,
	791, 15038, -1000, -1000, -1000, 9807, 1471, -1000, 1301, 1300,
	1245, -1000, -1000, 525, 771, -1000, -1000, 702, -1000, -1000,
	-1000, -1000, 460, 1055, -1000, 3064, -1000, -1000, -1000, -1000,
	714, 16778, 16778, 16778, 650, 3064, 3411, 1580, 782, 479,
	528, 528, 501, 501, 501, 501, 501, 661, 661, -1000,
	-1000, -1000, 942, -1000, -1000, -1000, 13298, 1061, -1000, -1000,
	703, 457, 1061, 1061, 13298, -153, -153, 942, 1061, 1061,
	1061, 942, 1061, 13298, 13298, 1061, -153, -153, -153, -153,
	1061, 1061, 1061, 1061, 13298, 1061, 1061, 1061, 13298, -1000,
	15038, -1000, 942, 1061, 1061, 1061, -1000, 742, 830, 578,
	1519, 1061, 568, 1506, 1061, 1089, 16778, 16778, 16778, 1061,
	1061, 13298, 581, -1000, 15038, 942, -1000, 1054, 1122, 1121,
	1061, 942, 1119, 1061, 1061, 168, 1055, -1000, 9807, 21999,
	21999, 21999, 21999, 21999, -1000, 1263, 1262, -1000, 1256, 1254,
	1255, 18953, 1063, 942, 138, 21129, -1000, 1055, -1000, 18518,
	509, 310, 306, 303, 1497, 21999, 1026, -1000, 1026, -1000,
	453, -1000, -1000, 25044, -92, -112, -1000, -1000, 1117, -1000,
	803, -1000, -1000, 703, -1000, 450, 1419, 1455, 1116, 5427,
	-1000, -1000, -1000, -1000, 209, -1000, -1000, -1000, 1209, 2566,
	-1000, 1341, 415, 514, 876, 1322, -1000, -1000, 539, -70,
	-1000, -1000, 760, -22, -22, 1184, 1184, 166, 1184, -1000,
	-22, -1000, -1000, -1000, 440, 1399, 440, 440, 440, 440,
	-22, 850, 850, -1000, -1000, -1000, -1000, 749, -1000, 1203,
	-1000, 739, -1000, -1000, -1000, -1000, -1000, -1000, 802, 1241,
	24174, 172, 1452, -1000, -1000, -1000, 1516, -1000, -1000, 246,
	-1000, 287, -1000, -1000, -1000, -1000, 8055, 24609, 19388, 19388,
	8055, 8055, 1497, 894, 892, -1000, -1000, -1000, 608, 615,
	1394, -1000, -1000, 16778, 148, -1000, -1000, -1000, -1000, 185,
	321, -1000, -1000, -85, -1000, -1000, 1285, -1000, 1109, -1000,
	-1000, 547, 459, 546, 224, 224, -1000, 533, 224, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 175, 1451, 9369,
	9369, 1275, -1000, -1000, -1000, 24609, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7617, 13298, -1000, 650, 3064,
	3132, -1000, 16778, -1000, 1061, 13298, -153, 7179, -153, -153,
	1061, -1000, 22434, -1000, -153, -153, -153, -153, -153, -153,
	1061, 1061, -153, -1000, -1000, -1000, -1000, -153, -153, -153,
	-153, 1061, -153, -153, -153, 942, 703, -1000, -1000, -1000,
	-1000, 438, 783, 438, 16778, 16778, -1000, 16778, 16778, -1000,
	-1000, 16778, 2626, 2537, 2486, -188, -1000, 1125, 561, -1000,
	15038, 757, -1000, -1000, 16778, 16778, -1000, -1000, -1000, -1000,
	1237, 9807, 1055, 6303, -1000, 24174, 1087, -1000, 536, 535,
	1204, 1202, 1235, 940, -1000, -1000, -1000, -1000, 1242, -1000,
	1214, -1000, -1000, 1175, -1000, -1000, 1088, 1055, 24174, 16778,
	509, -1000, 1055, 1055, 1055, 1491, 15038, 1026, -1000, -1000,
	498, -1000, -1000, -111, -109, -1000, -1000, -1000, 9369, -1000,
	5865, -1000, 5865, -1000, 20258, 238, 415, 253, -1000, 876,
	-1000, -1000, 876, -1000, -1000, -1000, 1191, -1000, 636, -1000,
	-1000, -1000, -1000, -1000, 16778, 1530, -1000, 1339, -1000, 1336,
	847, -1000, -1000, 996, 440, 440, -22, -1000, -1000, 1184,
	-1000, 440, -1000, 494, -1000, -1000, -1000, -1000, 440, 1052,
	-1000, 1045, 1085, -1000, 1036, 59, 24609, -1000, -1000, -1000,
	1233, -1000, -1000, -1000, 987, 1082, -1000, 4018, 891, 890,
	889, 24609, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 615, -1000, 16778, 3064, -1000, -1000, -22, 24609, -1000,
	1245, 280, -1000, 2757, -1000, 876, 399, -1000, -1000, 226,
	-1000, 1322, -1000, 4540, 887, -1000, 21112, 20676, 24174, 1327,
	1324, 886, 24609, 24174, -1000, -1000, 4614, 885, 15038, -1000,
	24174, 24174, 1055, 448, -1000, -1000, -1000, 1107, 12428, -1000,
	-1000, 942, -1000, 16778, 3064, -153, -1000, -1000, -1000, -1000,
	428, -1000, -1000, -153, -1000, 367, -1000, -1000, -1000, -1000,
	-1000, -1000, -153, -153, -1000, -1000, -1000, -1000, -1000, -153,
	-1000, -1000, -1000, -1000, 942, 1184, 1184, -1000, 1184, 1190,
	-1000, 1184, 12, 1184, 11, 942, 942, 3033, 2766, 2686,
	687, 1054, 16778, 16778, 16778, 1055, -149, -1000, 703, 15038,
	2466, 1113, -1000, 1437, 1004, 1081, -1000, -1000, 12863, 942,
	1299, 1034, -1000, 18953, 1023, -1000, 1491, 9807, 15038, 15038,
	-1000, -1000, 15038, 1188, -1000, 15038, -1000, -1000, -1000, -1000,
	24174, 136, -1000, 15038, 1023, 2448, -1000, 24174, 24174, 24174,
	1469, 703, -1000, -1000, -1000, -1000, 5427, -1000, 1021, -1000,
	1184, 1184, 1323, -1000, 1322, 876, -1000, -1000, -1000, 24174,
	-1000, 3064, -44, -1000, -1000, -1000, -1000, -1000, -1000, 440,
	-1000, -1000, -1000, -1000, -1000, -22, 842, -22, 738, -1000,
	667, -1000, -1000, -243, 1181, -1000, 172, 24609, 92, 246,
	-1000, 4018, 4018, 4018, -1000, -1000, 3064, -73, -1000, -1000,
	-1000, 4614, 198, 4018, 4018, -1000, 1205, 415, 1314, 253,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 880, -1000, 435,
	-1000, 251, 198, 4614, 703, 560, 1442, -1000, 9369, 1495,
	21999, -1000, -1000, -1000, 3064, -1000, 6741, -1000, 942, 1486,
	-1000, -1000, -1000, -1000, -1000, 176, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16778, 16778, 16778, 16778, -1000, 1054,
	1054, 1054, 16778, 942, 839, 703, 16778, 16778, 1304, -1000,
	1055, -1000, -1000, 1055, 170, -1000, 24174, 1469, -1000, 703,
	703, 703, 24174, 703, 1015, -1000, 1055, 17213, -1000, 18953,
	1011, 1011, 1011, -1000, 474, 20258, 1441, 1441, -1000, -1000,
	1009, -1000, -1000, 440, -1000, 440, 962, 955, -1000, 20258,
	-1000, 1475, -1000, 92, -1000, 837, 112, 113, -1000, 111,
	108, 102, 95, 86, -1000, -1000, -1000, -1000, 1371, 1359,
	1077, 944, -1000, -1000, 879, -1000, -1000, 1180, 876, -1000,
	1178, -1000, 861, -1000, -1000, 24174, -1000, 198, 1434, 1429,
	1055, -1000, 1493, 1485, 1026, 12428, -1000, -1000, -1000, 15038,
	-1000, -1000, 1054, 1054, 1054, 1054, -1000, -1000, -1000, 49,
	-1000, -1000, 1054, 1054, 1529, -1000, 1081, 1055, -1000, 172,
	-1000, -1000, 999, -1000, 24174, -1000, -1000, 509, -1000, -1000,
	-1000, 474, -1000, 860, 533, 834, -1000, -1000, -1000, 186,
	-1000, -1000, -1000, -1000, 992, -1000, 128, 4549, -1000, -1000,
	-1000, -1000, -1000, -1000, 1389, 1388, 121, 263, 1345, 1347,
	1483, 21999, -1000, -1000, 539, 539, 20258, 1205, 20258, -1000,
	-1000, -1000, 16778, -1000, 174, -1000, 15038, 15038, 1495, -1000,
	1048, -1000, -1000, -1000, -1000, 942, 165, -196, -1000, -1000,
	9807, 1081, 942, -1000, -1000, -1000, -1000, -1000, 662, -1000,
	24609, 474, 135, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15038, 15038, 4989, 4549, -1000, -1000, -1000, -1000, 1175,
	660, 1359, 1482, 1355, 1351, -1000, 832, 1026, 990, 1170,
	966, 3064, 960, -1000, 24174, -1000, 703, 1080, -1000, 703,
	1493, -1000, 942, -1000, 1272, -191, -205, 1007, -1000, -1000,
	1090, -1000, 474, 127, -1000, 777, 755, 50, 37, 3695,
	-1000, -1000, -1000, -1000, -300, -1000, -1000, 1362, -1000, 804,
	-1000, 1481, 1480, -1000, 1495, 474, 20258, 474, -1000, 174,
	1289, 15038, -1000, -1000, -1000, 1270, -1000, 24174, -1000, 858,
	784, 620, -1000, 15038, 4549, 1473, 1472, 1459, 1428, 9369,
	4475, -1000, -1000, 794, 774, 1493, -1000, 958, -1000, -1000,
	169, -1000, -194, 947, 274, -1000, -1000, 619, 4549, -1000,
	734, -301, 195, 172, 230, 16778, -1000, -1000, -1000, -1000,
	-1000, -1000, 474, 161, -200, 1230, -1000, -1000, -1000, -1000,
	-1000, -1000, 4549, -1000, -302, 4549, 3067, -1000, -1000, -1000,
	4305, -1000, -1000, -1000, -1000, 35, -1000, -1000, 3064, -1000,
	1055, -225, 1229, 1223, 1501, -1000, -303, 4296, -304, 250,
	4549, 557, -1000, 15038, -1000, 230, -1000, 15908, -1000, -1000,
	1525, -1000, 1523, 417, 417, 3985, 610, 4549, -1000, -305,
	247, 4549, -1000, 731, -1000, 1054, 942, -1000, -1000, -1000,
	188, 763, -1000, -1000, -1000, 3482, -1000, -306, 4549, -1000,
	-1000, -1000, -1000, -1000, 232, 3408, -307, -1000, 229, 4549,
	-1000,
}
var yyPgo = [...]int{

	0, 1868, 1867, 38, 1864, 170, 1863, 1862, 1856, 17,
	15, 12, 21, 1852, 1657, 1655, 1652, 1650, 1850, 1648,
	1849, 7, 1846, 1845, 1640, 1844, 1843, 1637, 1629, 1614,
	1611, 1842, 1841, 2, 1840, 10, 1839, 8, 116, 135,
	1838, 3, 1836, 1835, 6, 1834, 1833, 1605, 1832, 1831,
	1830, 1829, 68, 1828, 1600, 1589, 1827, 1825, 1586, 1574,
	1824, 1823, 1572, 1568, 1559, 1822, 155, 1821, 1820, 1818,
	188, 76, 123, 1816, 1815, 1814, 87, 61, 1769, 94,
	43, 89, 220, 1811, 23, 57, 1810, 1808, 133, 105,
	1806, 124, 1804, 65, 114, 80, 1803, 1802, 134, 1801,
	1800, 1799, 113, 1797, 1795, 794, 1794, 1793, 131, 1792,
	50, 55, 41, 1791, 1790, 1789, 1788, 1786, 119, 184,
	1784, 1783, 115, 1780, 53, 1778, 1773, 145, 1772, 1768,
	1766, 106, 34, 1765, 42, 1764, 54, 51, 1763, 37,
	1762, 110, 1760, 1759, 31, 25, 1758, 49, 1757, 35,
	1756, 111, 222, 1008, 20, 36, 52, 69, 102, 83,
	19, 29, 97, 78, 64, 30, 1755, 121, 1754, 63,
	125, 118, 107, 122, 1753, 1751, 1750, 827, 1749, 99,
	59, 1748, 75, 617, 132, 88, 1747, 74, 1746, 1745,
	1744, 1743, 84, 90, 1742, 1741, 71, 211, 81, 1473,
	705, 1900, 14, 126, 1737, 32, 1736, 1734, 2937, 85,
	101, 86, 1729, 82, 60, 40, 1728, 1725, 1724, 1721,
	1718, 1717, 1483, 1716, 1714, 1710, 1709, 190, 56, 1707,
	1706, 103, 73, 1705, 1704, 1687, 1686, 104, 58, 120,
	1685, 98, 96, 62, 1684, 1682, 1680, 1678, 46, 33,
	1676, 1675, 1674, 77, 70, 1672, 48, 26, 27, 47,
	11, 45, 95, 1671, 24, 1670, 91, 4, 5, 9,
	1668, 1665, 1664, 1662, 1660, 1659, 1644, 72, 1634, 1626,
	44, 1624, 1622, 1609, 28, 1607, 1603, 1598, 112, 92,
	100, 1596, 93, 1580, 0, 109, 136, 1577, 1565, 156,
}
var yyR1 = [...]int{

	0, 293, 293, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 65, 3, 3, 8, 4, 4,
	4, 5, 5, 86, 87, 87, 91, 91, 6, 6,
	7, 7, 9, 9, 69, 69, 10, 11, 11, 11,
	11, 296, 296, 100, 100, 98, 98, 99, 99, 162,
	162, 12, 12, 12, 167, 167, 172, 172, 172, 175,
	175, 175, 175, 154, 155, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 2, 275, 275, 276, 276,
	277, 277, 277, 277, 278, 278, 279, 279, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 25, 195,
	195, 292, 292, 292, 292, 290, 290, 290, 291, 291,
	45, 45, 46, 46, 46, 150, 150, 150, 13, 13,
	13, 13, 13, 20, 22, 22, 34, 34, 35, 23,
	23, 23, 23, 36, 36, 37, 26, 26, 26, 26,
	26, 26, 43, 43, 43, 42, 42, 41, 41, 41,
	41, 41, 41, 24, 24, 24, 24, 44, 44, 39,
	39, 38, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 27, 27, 27, 27, 27, 27,
	19, 274, 274, 274, 33, 33, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 50, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 238, 238, 239, 215, 215, 215, 215,
	215, 215, 215, 215, 214, 214, 214, 214, 218, 218,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 217,
	217, 217, 217, 217, 217, 217, 217, 219, 219, 219,
	219, 219, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 221, 221, 221,
	221, 221, 221, 221, 221, 237, 237, 222, 222, 231,
	231, 232, 232, 232, 229, 229, 230, 230, 225, 226,
	233, 227, 227, 227, 228, 228, 228, 236, 236, 236,
	236, 223, 240, 240, 260, 260, 259, 259, 258, 258,
	258, 249, 249, 255, 255, 255, 255, 255, 255, 255,
	244, 244, 244, 243, 243, 245, 245, 248, 248, 257,
	257, 256, 256, 241, 241, 241, 261, 261, 261, 261,
	261, 242, 242, 242, 242, 262, 246, 246, 247, 247,
	247, 268, 269, 267, 267, 267, 267, 267, 115, 115,
	115, 252, 252, 252, 253, 253, 253, 254, 254, 254,
	272, 272, 271, 271, 47, 47, 48, 53, 53, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 149, 149, 149, 49,
	193, 193, 266, 266, 265, 263, 263, 264, 264, 15,
	51, 51, 16, 16, 16, 16, 16, 16, 16, 16,
	270, 270, 270, 17, 17, 54, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 83,
	181, 181, 180, 180, 179, 179, 179, 182, 182, 182,
	212, 212, 212, 56, 56, 61, 61, 64, 64, 64,
	62, 63, 28, 29, 29, 29, 29, 30, 194, 194,
	59, 59, 60, 60, 60, 60, 75, 75, 297, 297,
	58, 58, 57, 57, 18, 298, 66, 67, 67, 68,
	68, 68, 185, 185, 72, 72, 72, 70, 70, 70,
	71, 71, 77, 77, 81, 81, 81, 81, 80, 80,
	80, 80, 152, 152, 152, 153, 153, 204, 204, 204,
	203, 203, 203, 203, 85, 85, 88, 88, 89, 89,
	89, 89, 92, 135, 135, 109, 109, 110, 110, 110,
	110, 110, 121, 121, 161, 161, 160, 160, 163, 163,
	90, 90, 90, 90, 95, 95, 96, 96, 97, 97,
	192, 192, 210, 210, 210, 101, 101, 101, 103, 102,
	102, 102, 102, 104, 104, 106, 107, 107, 105, 105,
	108, 111, 111, 111, 111, 112, 112, 82, 82, 82,
	82, 82, 82, 82, 178, 178, 114, 114, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 130, 130,
	130, 130, 130, 130, 116, 116, 116, 116, 116, 116,
	116, 76, 76, 131, 131, 131, 94, 93, 93, 79,
	79, 78, 78, 132, 132, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	125, 125, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 299, 299,
	127, 126, 126, 126, 126, 126, 126, 73, 73, 73,
	73, 73, 211, 211, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 142, 142, 74,
	74, 140, 140, 141, 143, 143, 139, 139, 139, 118,
	118, 118, 118, 118, 118, 118, 118, 120, 120, 120,
	144, 144, 133, 133, 84, 145, 145, 146, 147, 147,
	148, 148, 151, 156, 156, 156, 157, 157, 157, 157,
	122, 122, 158, 158, 158, 117, 117, 117, 117, 117,
	117, 117, 159, 159, 159, 159, 164, 164, 134, 134,
	137, 137, 136, 138, 165, 165, 169, 169, 166, 166,
	170, 170, 170, 170, 173, 173, 174, 174, 174, 171,
	171, 171, 168, 168, 168, 207, 207, 207, 176, 176,
	186, 186, 183, 183, 184, 184, 177, 177, 224, 224,
	189, 189, 189, 189, 189, 189, 189, 189, 191, 191,
	190, 190, 190, 187, 187, 187, 188, 188, 205, 205,
	201, 201, 206, 206, 202, 202, 208, 208, 209, 209,
	273, 273, 234, 234, 283, 283, 235, 235, 284, 284,
	286, 286, 281, 281, 282, 282, 285, 285, 31, 287,
	287, 288, 288, 289, 289, 289, 289, 32, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 294, 295, 196, 197, 197,
	197,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 11, 4, 7, 5, 1, 13,
	3, 10, 12, 2, 1, 3, 3, 6, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 0,
	3, 1, 1, 1, 1, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 4, 1, 1, 2, 3, 4,
	3, 3, 3, 3, 3, 3, 0, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 4, 3, 4, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 1, 5, 1, 3, 2,
	5, 4, 3, 3, 3, 5, 3, 8, 10, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 8, 0, 1, 2, 4,
	0, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 5, 6, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 3, 5,
	4, 2, 4, 3, 6, 6, 3, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	2, 2, 2, 2, 2, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 3, 1,
	3, 2, 4, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -293, -1, -3, -8, -9, -10, -11, -12, -14,
	-47, -15, -16, -17, -54, -55, -56, -61, -62, -63,
	-59, -58, -57, -18, -24, -27, -19, -65, -28, -29,
	-30, -31, -32, -4, 6, 7, -69, 9, 10, 30,
	-50, 131, -48, -49, 134, 133, 170, 135, 163, 64,
	228, -64, 231, 232, -297, -194, 168, 169, 137, 214,
	215, 20, 37, 233, 235, 31, 32, -5, -86, -6,
	8, 325, 132, 229, 165, 164, 26, 374, -294, 68,
	444, -147, 15, -66, -298, -66, -66, -66, -66, -66,
	-250, -192, 106, 68, 23, -188, 144, 87, 316, 140,
	-195, -186, -187, 191, 201, 44, 151, 150, 141, 141,
	142, 144, 316, 140, 178, 177, 227, 141, -105, -208,
	72, -199, 371, 154, 386, 387, 132, 188, 228, 242,
	236, 270, 258, 372, 388, 155, 209, 139, 256, 259,
	303, 153, 202, 389, 292, 298, 212, 81, 231, 312,
	390, 156, 206, 208, 207, 196, 213, 36, 166, 254,
	247, 217, 191, 391, 379, 245, 28, 186, 392, 300,
	275, 393, 376, 299, 250, 246, 137, 394, 157, 151,
	180, 395, 276, 280, 396, 304, 397, 398, 399, 143,
	240, 241, 400, 192, 306, 274, 33, 152, 373, 48,
	175, 307, 38, 278, 37, 284, 401, 273, 268, 285,
	402, 403, 404, 405, 272, 239, 267, 204, 53, 138,
	282, 281, 283, 205, 302, 263, 261, 406, 407, 158,
	408, 409, 248, 18, 410, 411, 310, 169, 412, 42,
	413, 414, 415, 173, 416, 417, 418, 301, 277, 279,
	190, 419, 251, 148, 420, 177, 421, 375, 422, 308,
	244, 423, 159, 235, 174, 168, 311, 424, 215, 425,
	426, 427, 160, 428, 429, 430, 232, 233, 294, 210,
	431, 432, 433, 434, 200, 185, 314, 305, 52, 214,
	289, 435, 238, 150, 216, 436, 229, 43, 7, 203,
	295, 211, 201, 265, 176, 437, 438, 252, 253, 271,
	237, 266, 230, 178, 179, 170, 439, 313, 290, 377,
	227, 260, 257, 182, 264, 440, 144, 441, 183, 234,
	309, 255, 291, 141, 124, 259, 303, 131, 293, 294,
	300, -244, 301, 177, 180, -212, 141, -181, 292, 346,
	183, 184, 72, 142, 143, 33, 305, 304, 296, -208,
	145, 234, -75, 135, 171, -105, -196, -196, -196, -196,
	-44, 72, 216, -44, 30, 72, 72, 36, 72, 233,
	295, 295, 6, -68, 5, -177, 144, 146, 230, -87,
	-91, -210, -208, -200, 74, 342, 343, 344, 345, 346,
	359, 360, 361, 347, 348, 362, 363, 364, 349, 350,
	365, 366, 368, 369, 367, 181, 353, 352, 351, 354,
	355, 51, 357, 356, 358, -3, -157, 17, 16, -72,
	54, 55, -67, -80, 115, -82, -208, -113, 89, -119,
	29, 72, -199, 24, -118, -200, -114, -139, -138, -94,
	124, 125, 126, 113, 114, 121, 90, 127, -125, -123,
	-124, -126, -128, -129, 74, 73, 82, 75, 76, 77,
	78, 83, 342, 343, 344, 345, 346, 359, 360, 361,
	347, 348, 362, 363, 364, 349, 350, 365, 366, 368,
	369, 367, 353, 352, 351, 354, 355, 357, 356, 358,
	84, 85, -201, -136, -294, 58, 59, 171, 140, 326,
	327, 328, 329, 330, 370, 161, 334, 92, 47, 315,
	324, 323, 322, 320, 321, 317, 319, 318, 336, 337,
	147, 316, 119, 325, -177, -177, 11, -98, -99, -105,
	-108, -208, -166, 230, -173, -170, 304, 305, -171, -174,
	-168, -139, 284, 417, 418, 303, 259, 302, -201, -208,
	-2, -5, 6, -105, -251, -239, -242, -202, 156, -262,
	-201, -198, 153, 72, -199, 136, 162, 88, 378, 23,
	25, 287, 342, 91, 124, 343, 344, 345, 16, 20,
	92, 123, 326, 346, 131, 62, 317, 319, 315, 316,
	293, 29, 10, 26, 164, 195, 22, 117, 133, 95,
	96, 97, 167, 24, 165, 85, 161, 19, 65, 11,
	13, 340, 341, 14, 147, 146, 108, 193, 142, 60,
	8, 127, 27, 105, 56, 347, 348, 382, 45, 383,
	58, 106, 17, 320, 321, 31, 370, 349, 172, 384,
	350, 119, 198, 63, 50, 89, 83, 34, 86, 66,
	87, 15, 194, 61, 338, 197, 385, 107, 134, 325,
	59, 140, 6, 335, 30, 163, 353, 352, 351, 354,
	199, 57, 328, 329, 355, 442, 141, 94, 336, 337,
	145, 84, 5, 44, 32, 9, 64, 67, 322, 323,
	324, 47, 51, 357, 356, 358, 93, 12, 339, 374,
	181, 142, -105, 325, -184, 147, -184, 178, 177, 141,
	98, -51, -105, -183, 147, -201, -183, -183, -183, -183,
	-183, -183, -105, 128, -105, 72, 30, -182, 106, 12,
	316, 140, 72, 177, 180, 141, 178, 144, -197, -294,
	-202, -197, -246, 11, 108, 181, 181, 181, 182, 181,
	-180, 295, 297, 179, 298, 299, 12, -83, 106, -294,
	-157, -157, -197, 72, 233, 145, -60, -3, -11, -9,
	-10, -3, 98, 30, 30, 74, 51, 30, -39, -38,
	-40, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 30, -274, 68, -234, 284, 72, -287,
	-288, -105, -66, -7, -5, -294, 21, 22, 141, -105,
	308, 69, 23, -294, -295, 70, -158, 19, 31, -122,
	75, 78, -148, -151, -82, -208, 50, -70, 21, 22,
	80, 11, -204, 88, 87, 105, -203, 23, 72, -199,
	-200, 74, 128, -82, -116, 108, 89, 106, 107, 91,
	110, 109, 120, 113, 114, 115, 116, 117, 118, 119,
	111, 112, 123, 98, 99, 100, 101, 102, 103, 104,
	-178, -294, -94, -294, 129, 130, -119, -119, -119, -119,
	-119, -119, -119, -119, -294, -294, -294, -294, -294, -294,
	-294, -294, -294, -294, -294, -294, -294, -294, -294, -294,
	-294, -294, -294, -294, -294, -294, -294, -294, -294, -294,
	-294, -294, -294, -3, -132, -82, -294, -294, -294, -294,
	-294, -294, -294, -294, -294, -294, -294, -294, -294, -142,
	-82, -294, -299, -127, -294, -299, -127, -299, -127, -299,
	-294, -299, -127, -299, -127, -299, -299, -127, -299, -294,
	-294, -294, -294, -294, -294, -107, 27, -105, -85, -88,
	-89, -90, -109, -93, -294, -105, -94, -105, -98, -296,
	69, 11, 67, -296, 69, 128, 69, -167, -172, 306,
	308, 230, -171, -171, -207, -201, 74, 29, 98, 30,
	128, -147, -66, 70, 69, -242, 156, 153, -214, -218,
	-220, -219, -221, -216, -217, 256, 259, 263, 261, 257,
	262, 124, 260, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 30, 166, 252, 253, 254, 255,
	276, 277, 278, 279, 280, 281, 282, 283, 236, 258,
	372, 237, 238, 239, 240, 241, 242, 244, 245, 246,
	247, 248, 249, 250, 72, -200, -262, 68, -201, 23,
	144, 72, 89, 72, 72, 72, -184, 72, 69, 145,
	-98, 24, 66, -100, -105, 72, 72, 72, 72, -291,
	-290, -292, 74, 72, -199, -200, -209, -208, -198, -197,
	-182, 74, -82, -184, -184, -197, -197, -197, -105, -105,
	-105, -105, -182, -182, -197, -182, -179, 11, 108, 11,
	-179, -179, -82, -119, 115, 72, 72, 233, 72, -39,
	-39, 74, -39, 69, 98, -39, 70, -132, -273, 443,
	69, -289, 23, 308, 309, 285, -72, -3, -105, -197,
	309, 310, -91, -93, -294, -159, -202, 9, 108, 69,
	18, 69, -156, 25, 26, 128, -120, 51, 75, 78,
	-185, 49, -105, -82, -82, -130, 83, 89, 84, 85,
	-203, 115, -209, -202, -198, -119, -131, -136, -94, 79,
	108, 106, 107, 91, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -211,
	72, 74, 72, -118, -118, -201, -70, -78, -81, 115,
	-82, -208, -78, -78, -70, -295, -295, -81, -78, -78,
	-78, -81, -78, -70, -70, -78, -295, -295, -295, -295,
	-78, -78, -78, -78, -70, -78, -78, -78, -70, -295,
	69, -295, -3, -78, -78, -78, -295, -82, -82, -139,
	74, -78, -139, 74, -78, -119, 331, 332, 333, -78,
	-78, -70, -140, -141, 93, -139, -295, -119, -201, -201,
	-78, -79, -78, -78, -78, -162, 173, -105, 30, 69,
	-101, -103, -102, -104, 56, 60, 62, 57, 58, 59,
	63, -192, -85, -92, 47, -294, -110, 173, -111, 23,
	-210, 64, 146, 65, -162, 67, -85, -105, -85, -108,
	-208, 115, -170, -173, 69, 307, 309, 310, -167, -228,
	123, 66, 86, -82, -202, -209, -157, -72, -252, -253,
	-254, -202, 74, 75, -239, -240, -241, -242, -255, 156,
	-261, 148, 150, 44, -243, 157, 142, 45, -215, -229,
	290, -222, 68, -222, -222, 264, 256, 259, 257, -222,
	-222, -222, -222, -222, -227, 259, -227, -227, -227, -227,
	257, 68, 68, -222, -222, -222, -231, 68, -231, 251,
	-232, 68, -232, -232, -232, -232, -262, -262, -82, -205,
	67, -154, -105, -197, 24, -197, -45, 188, 162, 68,
	-105, -105, -105, -270, 160, 155, -105, 69, 69, 71,
	72, 72, -247, 11, 108, -182, -208, -208, -105, -121,
	23, -182, -76, 167, -295, 72, -38, -118, 70, -106,
	27, 74, -288, -210, 284, 309, -70, -295, -53, -52,
	-189, 136, 133, 134, 138, 139, -265, 287, 132, 259,
	81, 29, 15, 326, 173, 377, 72, 174, -295, 69,
	128, 52, -122, -122, -151, -176, 19, 11, 47, 47,
	-71, 57, 83, 84, 85, 128, -294, -131, -119, -119,
	-119, -76, 88, -295, -78, 69, -295, 128, -295, -295,
	-78, -152, 338, -152, -295, -295, -295, -295, -295, -295,
	-78, -78, -295, -152, -152, -152, -152, -295, -295, -295,
	-295, -78, -295, -295, -295, -79, -82, -295, -295, -295,
	-295, 69, 67, 23, 11, 11, -295, 11, 11, -295,
	-295, 11, -119, -119, -119, -295, -295, -78, -143, -141,
	95, -82, -295, -295, 69, 69, -295, -295, -295, -295,
	-117, 30, 47, -294, -3, -294, -165, -169, -139, -198,
	-88, -89, -89, -88, -89, 56, 56, 56, 61, 56,
	61, 56, -102, -210, -295, -295, -135, 187, -294, 34,
	-210, -111, 142, 142, 142, -112, 12, -85, -112, -112,
	128, -172, -175, 311, 308, 314, 72, 74, 128, -158,
	69, -254, 98, -242, 68, 72, 44, -200, 45, -243,
	142, 45, -243, -248, 72, -248, 45, 83, 89, -225,
	-226, -233, -236, -223, 29, 66, 287, 148, 45, 44,
	81, -230, 291, 75, -227, -227, -222, -222, -222, 264,
	-222, -227, -228, 30, -228, -228, -228, -228, -227, -237,
	74, -237, 75, -231, 75, 70, 66, -201, -3, 23,
	-46, 8, 9, 10, -275, -276, -277, 72, 108, 193,
	194, 145, -197, -105, -290, -292, -197, -197, -112, 72,
	72, -179, -182, 34, -119, 183, 184, -162, 141, -289,
	-185, 69, -196, -193, -266, -243, -272, -241, -242, -271,
	149, 157, 173, 156, -193, -266, 156, 153, -243, 157,
	148, 149, -190, -243, 145, 23, -193, -193, -249, 98,
	-193, 173, 23, -202, -202, 53, -105, -77, -155, 115,
	-202, -79, -76, 88, -119, -295, -81, -153, -152, 115,
	-209, -153, -153, -295, -201, -294, -152, -153, -153, -152,
	-152, -152, -295, -295, -152, -153, -153, -153, -153, -295,
	-153, -153, -153, -295, -213, 124, 256, 166, 254, 247,
	274, 261, 289, 252, 290, -211, -213, -119, -119, -119,
	-119, -119, 11, 11, 11, 371, -147, 97, -82, 94,
	-119, -119, -164, 66, -165, -134, -137, -136, -294, -3,
	-295, -159, 6, 374, -163, -201, -112, 69, 98, 98,
	-96, -95, 66, 67, -97, 66, -95, 56, 56, -161,
	68, 69, -136, -294, -163, -119, -111, -294, -294, -294,
	-147, -82, -112, 308, 312, 313, -253, -254, -257, -256,
	-201, -200, 148, -261, 157, -243, -261, -248, -248, 68,
	83, -119, 9, 45, 45, 74, 70, -228, -228, -227,
	-222, -228, 72, 124, -228, 70, 69, 70, 69, 70,
	69, -115, 392, 89, -105, -154, -154, 66, 70, 69,
	-214, 72, 72, 72, -105, -182, -119, -227, -105, -71,
	-52, 68, -238, 72, -200, -196, -248, -187, 148, 72,
	72, -196, 72, -200, 72, -200, -201, 45, 45, 72,
	-105, -201, -238, 72, -82, -201, -201, -93, 128, -112,
	11, 69, -80, -295, -119, -153, 128, -153, -147, 173,
	-153, -153, -153, -295, -222, -222, -222, -232, -222, 241,
	-222, 241, -295, -295, 19, 19, 19, 19, -295, -119,
	-119, -119, -294, -74, 335, -82, 69, 69, 28, -164,
	69, -295, -295, 47, -295, -295, 69, -147, -169, -82,
	-82, -82, 68, -82, -160, -201, 187, -295, -111, -192,
	-160, -160, -160, -157, 70, 69, -222, -222, 45, -248,
	-160, -124, -228, -227, 74, -227, 75, 75, 392, 68,
	-3, -105, -278, -279, -280, 81, 373, 89, 195, 196,
	158, 197, 198, 199, -277, -214, -214, -214, -281, -180,
	-77, -238, -149, 161, 162, -214, -214, -205, -245, -243,
	45, 72, -191, 145, 23, 145, -149, -238, 30, 133,
	27, -202, -144, 13, -85, -155, -155, 115, -295, 16,
	-227, 72, -119, -119, -119, -119, -295, -295, -295, -119,
	-295, 74, -119, -119, 45, -137, -134, 47, -3, -294,
	-201, -157, -160, 70, 69, -136, -110, -210, -295, -295,
	-295, -259, -258, 67, 152, 81, -256, -156, -156, 70,
	-228, -228, 70, 70, -257, -154, 19, -154, -280, 74,
	199, 195, 199, 199, 199, 199, 200, -282, 38, -284,
	39, 11, 70, 72, -215, -215, 68, -248, 68, 72,
	-201, -149, 29, 29, -294, -145, 14, 16, -112, -80,
	-132, -295, -295, -295, -295, -73, 108, 374, -295, -295,
	9, -134, -3, 70, -201, -111, -258, 72, -249, 74,
	159, 70, 186, -21, -3, -9, -10, -11, -12, -14,
	-47, -15, -16, -22, -23, -17, -54, -55, -64, -62,
	-63, -59, -58, -26, -24, -27, -19, -28, -29, -30,
	-25, 92, 147, 217, 228, 36, 36, 191, 192, -224,
	146, -285, 43, -283, -235, 42, 16, -85, -257, -205,
	-257, -119, -263, -264, 173, -146, -82, -133, -84, -82,
	-144, -155, -147, -295, 372, 63, 375, -165, -295, 75,
	-105, -260, -259, 187, -154, -82, -82, 72, -43, -206,
	220, 221, 222, -202, -33, -21, -161, 75, -284, 16,
	-286, 40, 41, 74, -112, 70, 68, 70, -295, 69,
	-201, 69, -145, -295, 53, 373, 376, 68, -150, 189,
	190, -34, -35, 93, 94, 218, 219, 223, -214, 69,
	444, 38, 74, 16, 16, -144, -260, -257, -260, -264,
	47, -84, 53, -160, -154, 72, 72, 97, 95, -35,
	-82, -33, 19, 19, 19, 29, -202, 97, -21, 74,
	74, -145, 70, 175, 374, 70, -13, -20, -12, -9,
	-10, -11, 228, 92, -33, 94, 444, -44, 75, -3,
	-42, -41, 75, -44, 225, 89, 226, 72, -119, -260,
	176, 375, -268, -269, 66, -154, -33, 444, -33, 97,
	95, -36, -37, 96, -21, 69, 224, -294, 376, -269,
	66, -268, 66, 10, 9, 444, 97, 444, 147, -33,
	97, 95, -37, -82, -41, -119, 172, -267, 160, 155,
	158, 30, -267, 97, 92, 444, 147, -33, 94, -295,
	-295, 154, 29, 83, 97, 444, -33, 147, 97, 444,
	147,
}
var yyDef = [...]int{

	33, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, -2, 555, 555, 555, 555, 555, 555,
	630, -2, 414, 415, 0, 0, 0, 0, -2, 524,
	525, 526, 530, 531, 546, -2, 1377, 1377, 1377, 0,
	194, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	54, 55, 936, 0, 549, 538, 539, 0, 0, 1375,
	2, 876, 0, 564, 557, 0, 936, 936, 0, 0,
	85, 0, 0, 0, 631, 0, 0, 0, 934, 934,
	0, 0, 957, 0, 931, 953, 954, 955, 0, 932,
	0, 932, 932, 932, 932, 932, 932, 0, 474, 648,
	966, 967, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 0, 0, 0, 517, 0, 1378, 1378,
	489, 0, 491, 0, 0, 0, 0, 0, 501, 0,
	876, 876, 1378, 360, 361, 362, 521, 522, 511, 523,
	0, 0, 0, 0, 0, 550, 551, 552, 553, 554,
	173, 175, 0, 195, 0, 198, 201, 972, 532, 0,
	0, 997, 555, 0, 559, 0, 0, 937, 527, 43,
	44, 0, 632, 633, 634, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 0, 882, 0, 0, 567,
	565, 566, 556, 0, 578, 587, 0, 657, 0, 662,
	664, -2, -2, 0, 705, 706, 707, 708, 709, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 735,
	736, 737, 738, 739, 849, 850, 851, 852, 853, 854,
	855, 856, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374,
	666, 667, 846, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 837, 0, 808,
	808, 808, 808, 808, 808, 808, 808, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	67, 648, 71, 1324, 0, 908, -2, -2, 910, 0,
	0, 0, -2, -2, -2, -2, 1151, -2, 846, 0,
	86, 868, 555, 87, 0, 235, 236, 0, 1163, 384,
	964, 965, 1153, 960, 961, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 934,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 0, 475, 1378, 517, 478, 0, 0,
	934, 934, 1378, 1378, 1378, 0, 0, 0, 487, 1379,
	1380, 488, 0, 386, 387, 517, 517, 1378, 517, 514,
	0, 514, 498, 514, 512, 513, 0, 503, 0, 0,
	506, 507, 508, 533, 0, 0, 540, 542, 543, 544,
	545, 541, 0, 0, 0, 177, 0, 0, 197, 179,
	0, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 0, 200, 0, 970, 973, 537, 988,
	989, 0, 564, 40, 50, 0, 560, 561, 0, 1378,
	0, 0, 0, 0, 49, 1376, 35, 0, 0, 877,
	880, 881, 869, 870, 873, 0, 0, 562, 568, 569,
	558, 0, 579, 0, 0, 0, 588, 0, 590, 591,
	592, 593, 0, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 684, 685, 686, 687, 688, 689, 690,
	663, 0, 677, 0, 0, 0, 726, 727, 728, 729,
	730, 731, 732, 0, 567, 0, 0, 0, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 0,
	0, 0, 567, 0, 0, 703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 0,
	838, 0, 791, 800, 0, 792, 801, 793, 802, 794,
	0, 795, 803, 796, 804, 797, 798, 805, 799, 0,
	0, 0, 699, 0, 0, 69, 0, 647, 0, 594,
	596, 597, 598, -2, 0, 651, 697, -2, 0, 0,
	0, 61, 62, 0, 0, 0, 0, 72, 74, 0,
	0, 1324, 911, 912, 334, 925, 926, 927, 0, 923,
	0, 876, 564, 401, 0, 237, 0, 0, 246, 324,
	255, 256, 257, 317, 259, 317, 317, 0, 317, 317,
	317, 317, 317, 331, 331, 331, 331, 331, 300, 301,
	302, 303, 304, 0, 0, 277, 317, 317, 317, 281,
	307, 308, 309, 310, 311, 312, 313, 314, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 319, 319, 321,
	321, 321, 321, 321, 0, 0, 383, 0, 958, 83,
	0, 1378, 0, 1378, 0, 0, 0, 120, 0, 0,
	470, 933, 0, 464, 63, 465, 466, 467, 468, 469,
	128, 127, 121, 122, 123, 124, 649, 968, 969, 476,
	477, 518, 519, 0, 0, 481, 482, 483, 484, 485,
	486, 388, 492, 493, 494, 500, 517, 0, 0, 0,
	612, 517, 502, 691, 0, 535, 534, 0, 547, 174,
	176, 178, 196, 0, 0, 199, 202, 0, 0, 0,
	0, 991, 0, 993, 995, 0, 567, 0, 0, 449,
	528, 529, 45, 46, 0, 0, 892, 883, 0, 0,
	0, 0, 872, 874, 875, 0, 0, 857, 0, 0,
	570, 563, 37, 658, 659, 661, 678, 0, 680, 682,
	589, 580, 0, 847, -2, 668, 669, 693, 694, 695,
	0, 0, 0, 0, 691, 673, 0, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 725,
	822, 823, 0, 723, 724, 733, 0, 0, 701, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 696,
	0, 902, 0, 0, 0, 0, 773, 0, 0, 708,
	849, 0, 708, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 844, 841, 0, 0, 809, 0, 0, 0,
	0, 0, 700, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 1255, 607, 0,
	651, 0, 0, 0, 655, 0, 655, 66, 655, 68,
	0, 650, 909, 0, 0, 0, 77, 78, 73, 913,
	0, 919, 920, 921, 847, 0, 882, 567, 234, 402,
	404, 407, 408, 409, 238, 240, 241, 242, 0, 1163,
	375, 1265, 1305, -2, 367, 1190, -2, -2, 245, 326,
	325, 258, 0, 331, 331, 317, 317, 317, 317, 286,
	331, 289, 292, 293, 334, 0, 334, 334, 334, 334,
	331, 0, 0, 278, 279, 280, 269, 0, 270, 319,
	272, 0, 273, 274, 275, 276, 381, 382, 0, 0,
	0, 0, 0, 91, 935, 92, 0, 130, 131, 96,
	233, 0, 460, 462, 471, 472, 1378, 0, 0, 126,
	1378, 1378, 655, 0, 0, 495, 515, 516, 514, 517,
	0, 499, 509, 0, 0, 536, 180, 181, 203, 69,
	0, 971, 990, 0, 994, 996, 562, 51, 416, 417,
	1377, -2, 450, 950, 450, 450, 437, 351, 450, 940,
	941, 942, 943, 944, 945, 946, 947, 0, 0, 0,
	0, 0, 878, 879, 871, 0, 928, 929, 858, 859,
	84, 571, 679, 681, 683, 0, 699, 670, 691, 674,
	0, 671, 0, 665, 0, 0, 585, 0, 585, 585,
	0, 759, 0, 760, 0, 585, 585, 0, 0, 0,
	0, 0, 0, 766, 767, 768, 769, 585, 585, 585,
	585, 0, 585, 585, 585, 0, 704, -2, 770, 771,
	772, 0, 0, 0, 0, 0, 815, 0, 0, 816,
	781, 0, 0, 0, 0, 0, 787, 868, 0, 842,
	0, 0, 790, 810, 0, 0, 811, 812, 813, 814,
	896, 0, 0, 0, 887, 0, 655, 904, 0, 0,
	595, 626, 628, 0, 623, 636, 637, 639, 0, 641,
	0, 643, 644, 614, 601, 698, 602, 0, 0, 0,
	651, 611, 0, 0, 0, 868, 0, 655, 59, 60,
	0, 75, 76, 0, 0, 82, 335, 336, 0, 95,
	0, 405, 0, 239, 0, 0, 0, 0, 353, 367,
	363, 364, 367, 358, 368, 359, 0, 247, 0, 249,
	250, 251, 252, 253, 0, 0, 330, 0, 338, 340,
	0, 254, 327, 0, 334, 334, 331, 284, 285, 317,
	290, 334, 294, 0, 295, 296, 297, 298, 334, 0,
	315, 0, 0, 271, 0, 398, 0, 959, 83, 83,
	0, 132, 133, 134, 0, 97, 98, 0, 0, 0,
	0, 0, 463, 64, 129, 125, 479, 480, 490, 389,
	390, 517, 497, 0, 692, 504, 505, 331, 0, 992,
	570, 0, 419, 0, 1377, 367, 0, 438, 439, 0,
	451, 452, 453, 0, 0, 1377, 0, 0, 0, 452,
	0, 0, 0, 0, 951, 952, 0, 0, 0, 352,
	0, 0, 0, 894, 893, 884, 36, 655, 0, 581,
	848, 0, 672, 0, 675, 585, 702, 744, 586, 576,
	0, 745, 746, 585, 582, 868, 761, 748, 749, 762,
	763, 764, 585, 585, 765, 753, 752, 751, 754, 585,
	757, 756, 758, 740, 0, 317, 317, 827, 317, 321,
	830, 317, 832, 317, 835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 839, 789, 845, 0,
	0, 0, 52, 0, 896, 885, 898, 900, 0, 0,
	0, 0, -2, 1132, 0, 618, 868, 0, 0, 0,
	620, 627, 0, 0, 621, 0, 622, 640, 642, 599,
	0, 0, 603, 0, 0, -2, 610, 0, 0, 0,
	876, 656, 58, 79, 80, 81, 403, 406, 0, 369,
	317, 317, 0, 373, 0, 367, 374, 355, 357, 0,
	248, 328, 0, 337, 339, 341, 318, 282, 283, 334,
	291, 287, 332, 333, 299, 331, 0, 331, 0, 322,
	0, 385, 399, 0, 0, 89, 0, 0, 104, 0,
	100, 0, 0, 0, 461, 496, 613, 982, 645, 84,
	418, 0, 446, 0, 0, 422, 958, 365, 0, -2,
	423, 424, 429, 430, 431, 432, 433, 0, 444, 0,
	426, 0, 446, 0, 441, 0, 0, 47, 0, 860,
	0, 84, 84, 741, 676, 743, 0, 747, 0, 0,
	742, 750, 755, 774, 824, 331, 828, 829, 831, 833,
	834, 836, 776, 775, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 843, 0, 0, 0, 53,
	0, 901, -2, 0, 0, 70, 0, 876, 905, 906,
	907, 624, 0, 629, 0, 616, 0, 651, 608, 0,
	0, 0, 0, 57, 343, 0, 873, 873, 354, 356,
	0, 329, 288, 334, 316, 334, 0, 0, 400, 0,
	83, 0, 83, 105, 106, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 99, 101, 102, 103, 984, 978,
	0, 0, 421, 447, 0, 246, 246, 0, 367, 366,
	0, 440, 0, 948, 949, 0, 435, 446, 0, 0,
	0, 895, 865, 0, 655, 0, 572, 577, 583, 0,
	825, 826, 0, 0, 0, 0, 783, 784, 785, 817,
	788, 840, 0, 0, 0, 899, 886, 0, 890, 0,
	619, 56, 0, 615, 0, 604, 606, 651, 652, 653,
	654, 342, 346, 0, 351, 0, 370, 371, 372, 0,
	305, 306, 320, 323, 0, 90, 0, 0, 107, 108,
	109, 110, 112, 113, 0, 0, 0, 938, 986, -2,
	0, 0, 420, 448, 243, 244, 0, 958, 0, 425,
	434, 436, 0, 443, 0, 41, 0, 0, 860, 84,
	868, 777, 779, 778, 780, 0, 0, 0, 806, 807,
	0, 889, 0, 625, 617, 609, 347, 348, 0, 350,
	0, 344, 0, 83, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 0, 0, 0, 114, 115, 116, 117, 614,
	0, 978, 0, 980, 0, 977, 0, 655, 0, 0,
	0, 442, 0, 455, 0, 866, 867, 861, 862, 864,
	865, 573, 0, 786, 0, 0, 0, 897, -2, 349,
	0, 88, 345, 135, 94, 0, 0, 960, 0, 0,
	162, 163, 164, 962, 0, 204, 34, 0, 985, 0,
	983, 0, 0, 979, 860, 344, 0, 344, 454, 0,
	0, 0, 42, 584, 818, 0, 821, 0, 83, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 160, 0,
	0, 939, 987, 0, 0, 865, 427, 0, 445, 456,
	0, 863, 819, 0, 0, 136, 137, 0, 0, 147,
	0, 0, 0, 0, 0, 0, 963, 118, 205, 981,
	975, 39, 344, 0, 0, 376, 83, 138, 139, 140,
	141, 142, 0, 144, 0, 0, 0, 156, 157, 158,
	0, 165, 167, 168, 169, 0, 171, 172, 161, 428,
	0, 0, 377, 378, 0, 93, 0, 0, 0, 0,
	0, 0, 153, 0, 159, 0, 170, 0, 820, 379,
	0, 380, 0, 0, 0, 0, 0, 148, 149, 0,
	0, 0, 154, 0, 166, 0, 0, 391, 393, 394,
	0, 0, 392, 143, 145, 0, 151, 0, 0, 457,
	458, 395, 396, 397, 0, 0, 0, 150, 0, 155,
	152,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 444,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:437
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:441
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:448
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:481
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:487
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:493
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:500
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:506
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:524
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:530
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:546
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:556
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:562
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:566
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:572
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:576
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:592
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:604
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			yyVAL.str = InsertStr
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.str = ReplaceStr
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:632
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:640
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:644
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:668
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:674
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:683
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:687
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:697
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:704
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:717
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:737
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:741
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:745
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:754
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:759
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:774
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:779
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:788
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:792
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:796
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:804
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:831
		{
			yyVAL.procedureParams = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:835
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:851
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:868
		{
			yyVAL.characteristics = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:878
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:896
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:904
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:912
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:916
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:930
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.str = ""
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:945
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:949
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: ""}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "%"}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.str = BeforeStr
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.str = AfterStr
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.str = InsertStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.str = UpdateStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.str = DeleteStr
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1010
		{
			yyVAL.triggerOrder = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1014
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1018
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1034
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1040
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 145:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1044
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1060
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1066
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 150:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1071
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1076
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1082
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1100
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1126
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1211
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1231
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1243
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.statement = &Resignal{}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1285
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1308
		{
			yyVAL.exprs = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.exprs = nil
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 233:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1364
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1393
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.columnType = ColumnType{}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1494
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1503
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1512
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 306:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1802
		{
			yyVAL.sqlVal = nil
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1811
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1815
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1823
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1833
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1841
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1850
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1904
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.colKeyOpt = colKey
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1912
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1932
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.indexOptions = nil
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1972
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1986
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1994
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = ""
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 376:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2088
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 377:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2092
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 378:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2096
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 379:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2100
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 380:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2104
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2128
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2181
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2190
		{
			yyVAL.boolean = true
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.boolean = true
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			yyVAL.boolean = false
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = yyDollar[1].str
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = ""
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = string("")
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2269
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2296
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2303
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2322
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2331
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 428:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2335
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2363
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2374
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2396
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2405
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2409
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2417
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnOrder = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2438
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2454
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 457:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2470
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 458:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2474
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2490
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2498
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2506
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2510
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2518
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2526
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2542
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2550
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{

		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2588
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2597
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2601
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2605
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2610
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2618
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2622
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2626
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2630
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2642
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2646
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2658
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2662
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2666
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2670
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2675
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2684
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2696
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2710
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2738
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.boolean = false
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.boolean = true
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.showFilter = nil
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2782
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.str = SessionStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = GlobalStr
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.statement = &Begin{}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.statement = &Begin{}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2830
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2834
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.statement = &Commit{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.statement = &Rollback{}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2862
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2866
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2870
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.statement = &OtherRead{}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2943
		{
			setAllowComments(yylex, true)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2953
		{
			yyVAL.bytes2 = nil
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.str = UnionStr
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = UnionAllStr
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = UnionDistinctStr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2976
		{
			yyVAL.byt = 0
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.byt = 1
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2985
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = SQLCacheStr
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = ""
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = DistinctStr
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = ""
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = StraightJoinHint
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3021
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3029
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3052
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3070
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3081
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3085
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3090
		{
			yyVAL.over = nil
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.over = yyDollar[1].over
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3099
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3107
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3149
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3192
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3211
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3215
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3230
		{
			yyVAL.expr = nil
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3234
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3239
		{
			yyVAL.columns = nil
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3276
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3280
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3284
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3294
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3296
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3300
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3302
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3311
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = JoinStr
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = JoinStr
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = JoinStr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = StraightJoinStr
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = LeftJoinStr
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = LeftJoinStr
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = RightJoinStr
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = RightJoinStr
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = NaturalJoinStr
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3411
		{
			yyVAL.indexHints = nil
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3415
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3419
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3423
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3428
		{
			yyVAL.expr = nil
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3462
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.str = ""
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3472
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3496
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3500
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3504
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3512
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3516
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3520
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = IsNullStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = IsNotNullStr
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = IsTrueStr
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = IsNotTrueStr
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = IsFalseStr
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			yyVAL.str = IsNotFalseStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = EqualStr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = LessThanStr
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = GreaterThanStr
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = LessEqualStr
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = GreaterEqualStr
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = NotEqualStr
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = nil
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3595
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3603
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3625
		{
			yyVAL.selectExprs = nil
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3798
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 743:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3820
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 755:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3872
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3889
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3897
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3913
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3917
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 777:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3964
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 778:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3968
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 779:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3972
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 780:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3980
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3984
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 783:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3988
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 784:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3992
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3996
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 786:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4000
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4008
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4082
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4092
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 806:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4096
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 807:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4111
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4125
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4129
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.str = BooleanModeStr
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4155
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.str = QueryExpansionStr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4179
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4229
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = nil
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = string("")
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4263
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4286
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = &NullVal{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4330
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.exprs = nil
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.expr = nil
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4368
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.orderBy = nil
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = AscScr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = AscScr
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = DescScr
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.limit = nil
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4425
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4429
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = ForUpdateStr
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = ShareModeStr
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4469
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4477
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4482
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4486
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4490
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4509
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.assignExprs = nil
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4518
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4564
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4600
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.setScope = SetScope_Global
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.setScope = SetScope_Session
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.setScope = SetScope_Session
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.bytes = []byte("charset")
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &Default{}
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4695
		{
			yyVAL.byt = 0
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.byt = 1
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.byt = 0
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.byt = 1
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.byt = 0
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.byt = 1
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = IgnoreStr
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4715
		{
			yyVAL.sqlVal = nil
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4717
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.empty = struct{}{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.empty = struct{}{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.empty = struct{}{}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.empty = struct{}{}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4729
		{
			yyVAL.empty = struct{}{}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.empty = struct{}{}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.empty = struct{}{}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.empty = struct{}{}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.empty = struct{}{}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.empty = struct{}{}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.empty = struct{}{}
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.empty = struct{}{}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.empty = struct{}{}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.str = UniqueStr
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = FulltextStr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = SpatialStr
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4761
		{
			yyVAL.str = yyDollar[1].str
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4764
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4784
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = string("")
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4818
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4823
		{
			yyVAL.EnclosedBy = nil
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4827
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4832
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4841
		{
			yyVAL.sqlVal = nil
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4850
		{
			yyVAL.sqlVal = nil
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4859
		{
			yyVAL.Fields = nil
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4863
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.Lines = nil
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4877
		{
			yyVAL.sqlVal = nil
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4887
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4903
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4907
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4913
		{
			yyVAL.lockType = LockRead
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.lockType = LockReadLocal
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.lockType = LockWrite
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4931
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			decNesting(yylex)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5352
		{
			skipToEnd(yylex)
		}
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5357
		{
			skipToEnd(yylex)
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
			skipToEnd(yylex)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
